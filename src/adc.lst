ARM GAS  /tmp/ccpZw0wh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"adc.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ src/adc.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip src/adc.o -g -gdwarf-2 -O0 -Wall -fomit-frame-pointer
  24              	@ -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.comm	board_temp,16,4
  55              		.global	last_temp
  56              		.section	.bss.last_temp,"aw",%nobits
  57              		.align	1
ARM GAS  /tmp/ccpZw0wh.s 			page 2


  58              		.type	last_temp, %object
  59              		.size	last_temp, 2
  60              	last_temp:
  61 0000 0000     		.space	2
  62              		.global	board_temp_index
  63              		.section	.bss.board_temp_index,"aw",%nobits
  64              		.type	board_temp_index, %object
  65              		.size	board_temp_index, 1
  66              	board_temp_index:
  67 0000 00       		.space	1
  68              		.global	new_temp_sample
  69              		.section	.bss.new_temp_sample,"aw",%nobits
  70              		.type	new_temp_sample, %object
  71              		.size	new_temp_sample, 1
  72              	new_temp_sample:
  73 0000 00       		.space	1
  74              		.section	.text.AdcConfig,"ax",%progbits
  75              		.align	2
  76              		.global	AdcConfig
  77              		.code	16
  78              		.thumb_func
  79              		.type	AdcConfig, %function
  80              	AdcConfig:
  81              	.LFB20:
  82              		.file 1 "src/adc.c"
   1:src/adc.c     **** /*
   2:src/adc.c     ****  * adc.c
   3:src/adc.c     ****  *
   4:src/adc.c     ****  *  Created on: 04/05/2015
   5:src/adc.c     ****  *      Author: Mariano
   6:src/adc.c     ****  */
   7:src/adc.c     **** #include "adc.h"
   8:src/adc.c     **** #include "stm32f0xx.h"
   9:src/adc.c     **** #include "hard.h"
  10:src/adc.c     **** 
  11:src/adc.c     **** #include "stm32f0xx_adc.h"
  12:src/adc.c     **** //la incluyo por constates como ADC_SampleTime_239_5Cycles
  13:src/adc.c     **** 
  14:src/adc.c     **** 
  15:src/adc.c     **** //--- VARIABLES EXTERNAS ---//
  16:src/adc.c     **** extern volatile unsigned short adc_ch [];
  17:src/adc.c     **** extern volatile unsigned short take_temp_sample;
  18:src/adc.c     **** 
  19:src/adc.c     **** #ifdef ADC_WITH_INT
  20:src/adc.c     **** extern volatile unsigned char seq_ready;
  21:src/adc.c     **** #endif
  22:src/adc.c     **** 
  23:src/adc.c     **** //--- VARIABLES GLOBALES ---//
  24:src/adc.c     **** #define SIZEOF_BOARD_TEMP	8
  25:src/adc.c     **** unsigned short board_temp [SIZEOF_BOARD_TEMP];
  26:src/adc.c     **** unsigned short last_temp = 0;
  27:src/adc.c     **** unsigned char board_temp_index = 0;
  28:src/adc.c     **** unsigned char new_temp_sample = 0;			//la uso para avisar que se puede usar el filtro
  29:src/adc.c     **** 
  30:src/adc.c     **** void AdcConfig (void)
  31:src/adc.c     **** {
  83              		.loc 1 31 0
ARM GAS  /tmp/ccpZw0wh.s 			page 3


  84              		.cfi_startproc
  85 0000 00B5     		push	{lr}	@
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 14, -4
  89 0002 83B0     		sub	sp, sp, #12	@,,
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 16
  32:src/adc.c     **** #ifdef ADC_WITH_INT
  33:src/adc.c     **** 	NVIC_InitTypeDef    NVIC_InitStructure;
  34:src/adc.c     **** #endif
  35:src/adc.c     **** 	unsigned short cal = 0;
  92              		.loc 1 35 0
  93 0004 6B46     		mov	r3, sp	@ tmp164,
  94 0006 0633     		adds	r3, r3, #6	@ tmp141,
  95 0008 0022     		movs	r2, #0	@ tmp142,
  96 000a 1A80     		strh	r2, [r3]	@ tmp143, cal
  36:src/adc.c     **** 
  37:src/adc.c     **** 	if (!RCC_ADC_CLK)
  97              		.loc 1 37 0
  98 000c 234B     		ldr	r3, .L3	@ D.5041,
  99 000e 9A69     		ldr	r2, [r3, #24]	@ D.5042, _3->APB2ENR
 100 0010 8023     		movs	r3, #128	@ tmp163,
 101 0012 9B00     		lsls	r3, r3, #2	@ tmp144, tmp163,
 102 0014 1340     		ands	r3, r2	@ D.5042, D.5042
 103 0016 06D1     		bne	.L2	@,
  38:src/adc.c     **** 		RCC_ADC_CLK_ON;
 104              		.loc 1 38 0
 105 0018 204B     		ldr	r3, .L3	@ D.5041,
 106 001a 204A     		ldr	r2, .L3	@ D.5041,
 107 001c 9269     		ldr	r2, [r2, #24]	@ D.5042, _8->APB2ENR
 108 001e 8021     		movs	r1, #128	@ tmp162,
 109 0020 8900     		lsls	r1, r1, #2	@ tmp145, tmp162,
 110 0022 0A43     		orrs	r2, r1	@ D.5042, tmp145
 111 0024 9A61     		str	r2, [r3, #24]	@ D.5042, _7->APB2ENR
 112              	.L2:
  39:src/adc.c     **** 
  40:src/adc.c     **** 	// preseteo los registros a default, la mayoria necesita tener ADC apagado
  41:src/adc.c     **** 	ADC1->CR = 0x00000000;
 113              		.loc 1 41 0
 114 0026 1E4B     		ldr	r3, .L3+4	@ D.5043,
 115 0028 0022     		movs	r2, #0	@ tmp146,
 116 002a 9A60     		str	r2, [r3, #8]	@ tmp146, _12->CR
  42:src/adc.c     **** 	ADC1->IER = 0x00000000;
 117              		.loc 1 42 0
 118 002c 1C4B     		ldr	r3, .L3+4	@ D.5043,
 119 002e 0022     		movs	r2, #0	@ tmp147,
 120 0030 5A60     		str	r2, [r3, #4]	@ tmp147, _14->IER
  43:src/adc.c     **** 	ADC1->CFGR1 = 0x00000000;
 121              		.loc 1 43 0
 122 0032 1B4B     		ldr	r3, .L3+4	@ D.5043,
 123 0034 0022     		movs	r2, #0	@ tmp148,
 124 0036 DA60     		str	r2, [r3, #12]	@ tmp148, _16->CFGR1
  44:src/adc.c     **** 	ADC1->CFGR2 = 0x00000000;
 125              		.loc 1 44 0
 126 0038 194B     		ldr	r3, .L3+4	@ D.5043,
 127 003a 0022     		movs	r2, #0	@ tmp149,
ARM GAS  /tmp/ccpZw0wh.s 			page 4


 128 003c 1A61     		str	r2, [r3, #16]	@ tmp149, _18->CFGR2
  45:src/adc.c     **** 	ADC1->SMPR = 0x00000000;
 129              		.loc 1 45 0
 130 003e 184B     		ldr	r3, .L3+4	@ D.5043,
 131 0040 0022     		movs	r2, #0	@ tmp150,
 132 0042 5A61     		str	r2, [r3, #20]	@ tmp150, _20->SMPR
  46:src/adc.c     **** 	ADC1->TR = 0x0FFF0000;
 133              		.loc 1 46 0
 134 0044 164B     		ldr	r3, .L3+4	@ D.5043,
 135 0046 174A     		ldr	r2, .L3+8	@ tmp151,
 136 0048 1A62     		str	r2, [r3, #32]	@ tmp151, _22->TR
  47:src/adc.c     **** 	ADC1->CHSELR = 0x00000000;
 137              		.loc 1 47 0
 138 004a 154B     		ldr	r3, .L3+4	@ D.5043,
 139 004c 0022     		movs	r2, #0	@ tmp152,
 140 004e 9A62     		str	r2, [r3, #40]	@ tmp152, _24->CHSELR
  48:src/adc.c     **** 
  49:src/adc.c     **** 	//set clock
  50:src/adc.c     **** 	ADC1->CFGR2 = ADC_ClockMode_SynClkDiv4;
 141              		.loc 1 50 0
 142 0050 134B     		ldr	r3, .L3+4	@ D.5043,
 143 0052 8022     		movs	r2, #128	@ tmp160,
 144 0054 1206     		lsls	r2, r2, #24	@ tmp153, tmp160,
 145 0056 1A61     		str	r2, [r3, #16]	@ tmp153, _26->CFGR2
  51:src/adc.c     **** 
  52:src/adc.c     **** 	//set resolution & trigger
  53:src/adc.c     **** 	//ADC1->CFGR1 |= ADC_Resolution_10b | ADC_ExternalTrigConvEdge_Rising | ADC_ExternalTrigConv_T3_TR
  54:src/adc.c     **** 	//ADC1->CFGR1 |= ADC_Resolution_12b | ADC_ExternalTrigConvEdge_Rising | ADC_ExternalTrigConv_T1_TR
  55:src/adc.c     **** 	//ADC1->CFGR1 |= ADC_DMAMode_Circular | 0x00000001;
  56:src/adc.c     **** 	ADC1->CFGR1 |= ADC_Resolution_12b;
 146              		.loc 1 56 0
 147 0058 114B     		ldr	r3, .L3+4	@ D.5043,
 148 005a 114A     		ldr	r2, .L3+4	@ D.5043,
 149 005c D268     		ldr	r2, [r2, #12]	@ D.5042, _29->CFGR1
 150 005e DA60     		str	r2, [r3, #12]	@ D.5042, _28->CFGR1
  57:src/adc.c     **** 
  58:src/adc.c     **** 	//ADC1->CFGR1 |= ADC_Resolution_10b | ADC_ExternalTrigConvEdge_Falling | ADC_ExternalTrigConv_T3_T
  59:src/adc.c     **** 
  60:src/adc.c     **** 	//set sampling time
  61:src/adc.c     **** 	ADC1->SMPR |= ADC_SampleTime_41_5Cycles;		//17.39 son SP 420
 151              		.loc 1 61 0
 152 0060 0F4B     		ldr	r3, .L3+4	@ D.5043,
 153 0062 0F4A     		ldr	r2, .L3+4	@ D.5043,
 154 0064 5269     		ldr	r2, [r2, #20]	@ D.5042, _33->SMPR
 155 0066 0421     		movs	r1, #4	@ tmp154,
 156 0068 0A43     		orrs	r2, r1	@ D.5042, tmp154
 157 006a 5A61     		str	r2, [r3, #20]	@ D.5042, _32->SMPR
  62:src/adc.c     **** 	//ADC1->SMPR |= ADC_SampleTime_28_5Cycles;		//17.39 son SP 420
  63:src/adc.c     **** 	//ADC1->SMPR |= ADC_SampleTime_7_5Cycles;		//17.36 de salida son SP 420 pero a veces pega
  64:src/adc.c     **** 													//las dos int (usar DMA?) y pierde el valor intermedio
  65:src/adc.c     **** 	//ADC1->SMPR |= ADC_SampleTime_1_5Cycles;			//20.7 de salida son SP 420 (regula mal)
  66:src/adc.c     **** 
  67:src/adc.c     **** #ifdef VER_1_2
  68:src/adc.c     **** 	//set channel selection
  69:src/adc.c     **** 	ADC1->CHSELR |= ADC_Channel_0 | ADC_Channel_1 | ADC_Channel_2 | ADC_Channel_3 | ADC_Channel_4;
  70:src/adc.c     **** 	//ADC1->CHSELR |= ADC_Channel_0 | ADC_Channel_1 | ADC_Channel_2;
  71:src/adc.c     **** 	//ADC1->CHSELR |= ADC_Channel_0 | ADC_Channel_1;
ARM GAS  /tmp/ccpZw0wh.s 			page 5


  72:src/adc.c     **** 	//ADC1->CHSELR |= ADC_Channel_2;	//individuales andan todos
  73:src/adc.c     **** #endif
  74:src/adc.c     **** #ifdef VER_1_3
  75:src/adc.c     **** 	//set channel selection
  76:src/adc.c     **** 	ADC1->CHSELR |= ADC_Channel_0 | ADC_Channel_1 | ADC_Channel_5;
  77:src/adc.c     **** #endif
  78:src/adc.c     **** 
  79:src/adc.c     **** 	//habilito sensado de temperatura
  80:src/adc.c     **** 	ADC->CCR |= ADC_CCR_TSEN;
 158              		.loc 1 80 0
 159 006c 0E4B     		ldr	r3, .L3+12	@ D.5044,
 160 006e 0E4A     		ldr	r2, .L3+12	@ D.5044,
 161 0070 1268     		ldr	r2, [r2]	@ D.5042, _38->CCR
 162 0072 8021     		movs	r1, #128	@ tmp161,
 163 0074 0904     		lsls	r1, r1, #16	@ tmp155, tmp161,
 164 0076 0A43     		orrs	r2, r1	@ D.5042, tmp155
 165 0078 1A60     		str	r2, [r3]	@ D.5042, _37->CCR
  81:src/adc.c     **** 
  82:src/adc.c     **** #ifdef ADC_WITH_INT
  83:src/adc.c     **** 	//set interrupts
  84:src/adc.c     **** 	ADC1->IER |= ADC_IT_EOC;
  85:src/adc.c     **** 
  86:src/adc.c     **** 	/* Configure and enable ADC1 interrupt */
  87:src/adc.c     **** 	NVIC_InitStructure.NVIC_IRQChannel = ADC1_IRQn;
  88:src/adc.c     **** 	NVIC_InitStructure.NVIC_IRQChannelPriority = 0;
  89:src/adc.c     **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  90:src/adc.c     **** 	NVIC_Init(&NVIC_InitStructure);
  91:src/adc.c     **** #endif
  92:src/adc.c     **** 
  93:src/adc.c     **** 	//calibrar ADC
  94:src/adc.c     **** 	cal = ADC_GetCalibrationFactor(ADC1);
 166              		.loc 1 94 0
 167 007a 094B     		ldr	r3, .L3+4	@ tmp156,
 168 007c 1800     		movs	r0, r3	@, tmp156
 169 007e FFF7FEFF 		bl	ADC_GetCalibrationFactor	@
 170 0082 0200     		movs	r2, r0	@ D.5042,
 171 0084 6B46     		mov	r3, sp	@ tmp165,
 172 0086 0633     		adds	r3, r3, #6	@ tmp157,
 173 0088 1A80     		strh	r2, [r3]	@ tmp158, cal
  95:src/adc.c     **** 
  96:src/adc.c     **** 	// Enable ADC1
  97:src/adc.c     **** 	ADC1->CR |= ADC_CR_ADEN;
 174              		.loc 1 97 0
 175 008a 054B     		ldr	r3, .L3+4	@ D.5043,
 176 008c 044A     		ldr	r2, .L3+4	@ D.5043,
 177 008e 9268     		ldr	r2, [r2, #8]	@ D.5042, _46->CR
 178 0090 0121     		movs	r1, #1	@ tmp159,
 179 0092 0A43     		orrs	r2, r1	@ D.5042, tmp159
 180 0094 9A60     		str	r2, [r3, #8]	@ D.5042, _45->CR
  98:src/adc.c     **** }
 181              		.loc 1 98 0
 182 0096 C046     		nop
 183 0098 03B0     		add	sp, sp, #12	@,,
 184              		@ sp needed	@
 185 009a 00BD     		pop	{pc}
 186              	.L4:
 187              		.align	2
ARM GAS  /tmp/ccpZw0wh.s 			page 6


 188              	.L3:
 189 009c 00100240 		.word	1073876992
 190 00a0 00240140 		.word	1073816576
 191 00a4 0000FF0F 		.word	268369920
 192 00a8 08270140 		.word	1073817352
 193              		.cfi_endproc
 194              	.LFE20:
 195              		.size	AdcConfig, .-AdcConfig
 196              		.section	.text.ADC_Conf,"ax",%progbits
 197              		.align	2
 198              		.global	ADC_Conf
 199              		.code	16
 200              		.thumb_func
 201              		.type	ADC_Conf, %function
 202              	ADC_Conf:
 203              	.LFB21:
  99:src/adc.c     **** 
 100:src/adc.c     **** #ifdef ADC_WITH_INT
 101:src/adc.c     **** void ADC1_COMP_IRQHandler (void)
 102:src/adc.c     **** {
 103:src/adc.c     **** 	/*
 104:src/adc.c     **** 	if (ADC1->ISR & ADC_IT_EOC)
 105:src/adc.c     **** 	{
 106:src/adc.c     **** 		LED_ON;
 107:src/adc.c     **** 		//clear pending
 108:src/adc.c     **** 		ADC1->ISR |= ADC_IT_EOC | ADC_IT_EOSEQ;
 109:src/adc.c     **** 		LED_OFF;
 110:src/adc.c     **** 	}
 111:src/adc.c     **** 	*/
 112:src/adc.c     **** 
 113:src/adc.c     **** 
 114:src/adc.c     **** 	if (ADC1->ISR & ADC_IT_EOC)
 115:src/adc.c     **** 	{
 116:src/adc.c     **** 		//LED_ON;
 117:src/adc.c     **** 		if (ADC1->ISR & ADC_IT_EOSEQ)	//seguro que es channel2
 118:src/adc.c     **** 		{
 119:src/adc.c     **** 			adc_ch2 = ADC1->DR;
 120:src/adc.c     **** 			seq_ready = 1;
 121:src/adc.c     **** 		}
 122:src/adc.c     **** 		else
 123:src/adc.c     **** 		{
 124:src/adc.c     **** //			LED_ON;
 125:src/adc.c     **** 			adc_ch1 = ADC1->DR;
 126:src/adc.c     **** 		}
 127:src/adc.c     **** 
 128:src/adc.c     **** 		//clear pending
 129:src/adc.c     **** 		ADC1->ISR |= ADC_IT_EOC | ADC_IT_EOSEQ;
 130:src/adc.c     **** 
 131:src/adc.c     **** 		//LED_OFF;
 132:src/adc.c     **** 	}
 133:src/adc.c     **** }
 134:src/adc.c     **** #endif
 135:src/adc.c     **** 
 136:src/adc.c     **** 
 137:src/adc.c     **** unsigned short ADC_Conf (void)
 138:src/adc.c     **** {
 204              		.loc 1 138 0
ARM GAS  /tmp/ccpZw0wh.s 			page 7


 205              		.cfi_startproc
 206 0000 00B5     		push	{lr}	@
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 14, -4
 210 0002 89B0     		sub	sp, sp, #36	@,,
 211              	.LCFI3:
 212              		.cfi_def_cfa_offset 40
 139:src/adc.c     **** 	unsigned short cal = 0;
 213              		.loc 1 139 0
 214 0004 1E23     		movs	r3, #30	@ tmp120,
 215 0006 6B44     		add	r3, r3, sp	@ tmp120,
 216 0008 0022     		movs	r2, #0	@ tmp121,
 217 000a 1A80     		strh	r2, [r3]	@ tmp122, cal
 140:src/adc.c     **** 	ADC_InitTypeDef ADC_InitStructure;
 141:src/adc.c     **** 
 142:src/adc.c     **** 	if (!RCC_ADC_CLK)
 218              		.loc 1 142 0
 219 000c 224B     		ldr	r3, .L8	@ D.5045,
 220 000e 9A69     		ldr	r2, [r3, #24]	@ D.5046, _3->APB2ENR
 221 0010 8023     		movs	r3, #128	@ tmp150,
 222 0012 9B00     		lsls	r3, r3, #2	@ tmp123, tmp150,
 223 0014 1340     		ands	r3, r2	@ D.5046, D.5046
 224 0016 06D1     		bne	.L6	@,
 143:src/adc.c     **** 		RCC_ADC_CLK_ON;
 225              		.loc 1 143 0
 226 0018 1F4B     		ldr	r3, .L8	@ D.5045,
 227 001a 1F4A     		ldr	r2, .L8	@ D.5045,
 228 001c 9269     		ldr	r2, [r2, #24]	@ D.5046, _8->APB2ENR
 229 001e 8021     		movs	r1, #128	@ tmp149,
 230 0020 8900     		lsls	r1, r1, #2	@ tmp124, tmp149,
 231 0022 0A43     		orrs	r2, r1	@ D.5046, tmp124
 232 0024 9A61     		str	r2, [r3, #24]	@ D.5046, _7->APB2ENR
 233              	.L6:
 144:src/adc.c     **** 
 145:src/adc.c     **** 	ADC_ClockModeConfig(ADC1, ADC_ClockMode_SynClkDiv4);
 234              		.loc 1 145 0
 235 0026 8023     		movs	r3, #128	@ tmp148,
 236 0028 1B06     		lsls	r3, r3, #24	@ tmp125, tmp148,
 237 002a 1C4A     		ldr	r2, .L8+4	@ tmp126,
 238 002c 1900     		movs	r1, r3	@, tmp125
 239 002e 1000     		movs	r0, r2	@, tmp126
 240 0030 FFF7FEFF 		bl	ADC_ClockModeConfig	@
 146:src/adc.c     **** 
 147:src/adc.c     **** 	// preseteo de registros a default
 148:src/adc.c     **** 	  /* ADCs DeInit */
 149:src/adc.c     **** 	  ADC_DeInit(ADC1);
 241              		.loc 1 149 0
 242 0034 194B     		ldr	r3, .L8+4	@ tmp127,
 243 0036 1800     		movs	r0, r3	@, tmp127
 244 0038 FFF7FEFF 		bl	ADC_DeInit	@
 150:src/adc.c     **** 
 151:src/adc.c     **** 	  /* Initialize ADC structure */
 152:src/adc.c     **** 	  ADC_StructInit(&ADC_InitStructure);
 245              		.loc 1 152 0
 246 003c 01AB     		add	r3, sp, #4	@ tmp128,,
 247 003e 1800     		movs	r0, r3	@, tmp128
ARM GAS  /tmp/ccpZw0wh.s 			page 8


 248 0040 FFF7FEFF 		bl	ADC_StructInit	@
 153:src/adc.c     **** 
 154:src/adc.c     **** 	  /* Configure the ADC1 in continuous mode with a resolution equal to 12 bits  */
 155:src/adc.c     **** 	  ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 249              		.loc 1 155 0
 250 0044 01AB     		add	r3, sp, #4	@ tmp129,,
 251 0046 0022     		movs	r2, #0	@ tmp130,
 252 0048 1A60     		str	r2, [r3]	@ tmp130, ADC_InitStructure.ADC_Resolution
 156:src/adc.c     **** 	  ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
 253              		.loc 1 156 0
 254 004a 01AB     		add	r3, sp, #4	@ tmp131,,
 255 004c 0022     		movs	r2, #0	@ tmp132,
 256 004e 1A71     		strb	r2, [r3, #4]	@ tmp133, ADC_InitStructure.ADC_ContinuousConvMode
 157:src/adc.c     **** 	  ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 257              		.loc 1 157 0
 258 0050 01AB     		add	r3, sp, #4	@ tmp134,,
 259 0052 0022     		movs	r2, #0	@ tmp135,
 260 0054 9A60     		str	r2, [r3, #8]	@ tmp135, ADC_InitStructure.ADC_ExternalTrigConvEdge
 158:src/adc.c     **** 	  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 261              		.loc 1 158 0
 262 0056 01AB     		add	r3, sp, #4	@ tmp136,,
 263 0058 0022     		movs	r2, #0	@ tmp137,
 264 005a 1A61     		str	r2, [r3, #16]	@ tmp137, ADC_InitStructure.ADC_DataAlign
 159:src/adc.c     **** 	  ADC_InitStructure.ADC_ScanDirection = ADC_ScanDirection_Upward;
 265              		.loc 1 159 0
 266 005c 01AB     		add	r3, sp, #4	@ tmp138,,
 267 005e 0022     		movs	r2, #0	@ tmp139,
 268 0060 5A61     		str	r2, [r3, #20]	@ tmp139, ADC_InitStructure.ADC_ScanDirection
 160:src/adc.c     **** 	  ADC_Init(ADC1, &ADC_InitStructure);
 269              		.loc 1 160 0
 270 0062 01AB     		add	r3, sp, #4	@ tmp140,,
 271 0064 0D4A     		ldr	r2, .L8+4	@ tmp141,
 272 0066 1900     		movs	r1, r3	@, tmp140
 273 0068 1000     		movs	r0, r2	@, tmp141
 274 006a FFF7FEFF 		bl	ADC_Init	@
 161:src/adc.c     **** 
 162:src/adc.c     **** 	//software by setting bit ADCAL=1.
 163:src/adc.c     **** 	//Calibration can only be initiated when the ADC is disabled (when ADEN=0).
 164:src/adc.c     **** 	//ADCAL bit stays at 1 during all the calibration sequence.
 165:src/adc.c     **** 	//It is then cleared by hardware as soon the calibration completes
 166:src/adc.c     **** 	cal = ADC_GetCalibrationFactor(ADC1);
 275              		.loc 1 166 0
 276 006e 0B4B     		ldr	r3, .L8+4	@ tmp142,
 277 0070 1800     		movs	r0, r3	@, tmp142
 278 0072 FFF7FEFF 		bl	ADC_GetCalibrationFactor	@
 279 0076 0200     		movs	r2, r0	@ D.5046,
 280 0078 1E23     		movs	r3, #30	@ tmp143,
 281 007a 6B44     		add	r3, r3, sp	@ tmp143,
 282 007c 1A80     		strh	r2, [r3]	@ tmp144, cal
 167:src/adc.c     **** 
 168:src/adc.c     **** 	// Enable ADC1
 169:src/adc.c     **** 	ADC_Cmd(ADC1, ENABLE);
 283              		.loc 1 169 0
 284 007e 074B     		ldr	r3, .L8+4	@ tmp145,
 285 0080 0121     		movs	r1, #1	@,
 286 0082 1800     		movs	r0, r3	@, tmp145
 287 0084 FFF7FEFF 		bl	ADC_Cmd	@
ARM GAS  /tmp/ccpZw0wh.s 			page 9


 170:src/adc.c     **** 
 171:src/adc.c     **** 	SetADC1_SampleTime ();
 288              		.loc 1 171 0
 289 0088 FFF7FEFF 		bl	SetADC1_SampleTime	@
 172:src/adc.c     **** 
 173:src/adc.c     **** 	return cal;
 290              		.loc 1 173 0
 291 008c 1E23     		movs	r3, #30	@ tmp146,
 292 008e 6B44     		add	r3, r3, sp	@ tmp146,
 293 0090 1B88     		ldrh	r3, [r3]	@ D.5047, cal
 174:src/adc.c     **** }
 294              		.loc 1 174 0
 295 0092 1800     		movs	r0, r3	@, <retval>
 296 0094 09B0     		add	sp, sp, #36	@,,
 297              		@ sp needed	@
 298 0096 00BD     		pop	{pc}
 299              	.L9:
 300              		.align	2
 301              	.L8:
 302 0098 00100240 		.word	1073876992
 303 009c 00240140 		.word	1073816576
 304              		.cfi_endproc
 305              	.LFE21:
 306              		.size	ADC_Conf, .-ADC_Conf
 307              		.section	.text.ReadADC1,"ax",%progbits
 308              		.align	2
 309              		.global	ReadADC1
 310              		.code	16
 311              		.thumb_func
 312              		.type	ReadADC1, %function
 313              	ReadADC1:
 314              	.LFB22:
 175:src/adc.c     **** 
 176:src/adc.c     **** unsigned short ReadADC1 (unsigned int channel)
 177:src/adc.c     **** {
 315              		.loc 1 177 0
 316              		.cfi_startproc
 317 0000 00B5     		push	{lr}	@
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 14, -4
 321 0002 85B0     		sub	sp, sp, #20	@,,
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 24
 324 0004 0190     		str	r0, [sp, #4]	@ channel, channel
 178:src/adc.c     **** 	uint32_t tmpreg = 0;
 325              		.loc 1 178 0
 326 0006 0023     		movs	r3, #0	@ tmp115,
 327 0008 0393     		str	r3, [sp, #12]	@ tmp115, tmpreg
 179:src/adc.c     **** 	//GPIOA_PIN4_ON;
 180:src/adc.c     **** 	// Set channel and sample time
 181:src/adc.c     **** 	//ADC_ChannelConfig(ADC1, channel, ADC_SampleTime_7_5Cycles);	//pifia la medicion 2800 o 3400 en v
 182:src/adc.c     **** 	//ADC_ChannelConfig(ADC1, channel, ADC_SampleTime_239_5Cycles);
 183:src/adc.c     **** 	//ADC_ChannelConfig(ADC1, ADC_Channel_0, ADC_SampleTime_239_5Cycles);
 184:src/adc.c     **** 
 185:src/adc.c     **** 	//ADC_ChannelConfig INTERNALS
 186:src/adc.c     **** 	/* Configure the ADC Channel */
ARM GAS  /tmp/ccpZw0wh.s 			page 10


 187:src/adc.c     **** 	ADC1->CHSELR = channel;
 328              		.loc 1 187 0
 329 000a 114B     		ldr	r3, .L13	@ D.5048,
 330 000c 019A     		ldr	r2, [sp, #4]	@ tmp116, channel
 331 000e 9A62     		str	r2, [r3, #40]	@ tmp116, _3->CHSELR
 188:src/adc.c     **** 
 189:src/adc.c     **** 	/* Clear the Sampling time Selection bits */
 190:src/adc.c     **** 	tmpreg &= ~ADC_SMPR1_SMPR;
 332              		.loc 1 190 0
 333 0010 039B     		ldr	r3, [sp, #12]	@ tmp118, tmpreg
 334 0012 0722     		movs	r2, #7	@ tmp119,
 335 0014 9343     		bics	r3, r2	@ tmp117, tmp119
 336 0016 0393     		str	r3, [sp, #12]	@ tmp117, tmpreg
 191:src/adc.c     **** 
 192:src/adc.c     **** 	/* Set the ADC Sampling Time register */
 193:src/adc.c     **** 	tmpreg |= (uint32_t)ADC_SampleTime_239_5Cycles;
 337              		.loc 1 193 0
 338 0018 039B     		ldr	r3, [sp, #12]	@ tmp121, tmpreg
 339 001a 0722     		movs	r2, #7	@ tmp122,
 340 001c 1343     		orrs	r3, r2	@ tmp120, tmp122
 341 001e 0393     		str	r3, [sp, #12]	@ tmp120, tmpreg
 194:src/adc.c     **** 
 195:src/adc.c     **** 	/* Configure the ADC Sample time register */
 196:src/adc.c     **** 	ADC1->SMPR = tmpreg ;
 342              		.loc 1 196 0
 343 0020 0B4B     		ldr	r3, .L13	@ D.5048,
 344 0022 039A     		ldr	r2, [sp, #12]	@ tmp123, tmpreg
 345 0024 5A61     		str	r2, [r3, #20]	@ tmp123, _9->SMPR
 197:src/adc.c     **** 
 198:src/adc.c     **** 
 199:src/adc.c     **** 	// Start the conversion
 200:src/adc.c     **** 	ADC_StartOfConversion(ADC1);
 346              		.loc 1 200 0
 347 0026 0A4B     		ldr	r3, .L13	@ tmp124,
 348 0028 1800     		movs	r0, r3	@, tmp124
 349 002a FFF7FEFF 		bl	ADC_StartOfConversion	@
 201:src/adc.c     **** 	// Wait until conversion completion
 202:src/adc.c     **** 	while(ADC_GetFlagStatus(ADC1, ADC_FLAG_EOC) == RESET);
 350              		.loc 1 202 0
 351 002e C046     		nop
 352              	.L11:
 353              		.loc 1 202 0 is_stmt 0 discriminator 1
 354 0030 074B     		ldr	r3, .L13	@ tmp125,
 355 0032 0421     		movs	r1, #4	@,
 356 0034 1800     		movs	r0, r3	@, tmp125
 357 0036 FFF7FEFF 		bl	ADC_GetFlagStatus	@
 358 003a 031E     		subs	r3, r0, #0	@ tmp126,,
 359 003c F8D0     		beq	.L11	@,
 203:src/adc.c     **** 	// Get the conversion value
 204:src/adc.c     **** 	//GPIOA_PIN4_OFF;	//tarda 20us en convertir
 205:src/adc.c     **** 	return ADC_GetConversionValue(ADC1);
 360              		.loc 1 205 0 is_stmt 1
 361 003e 044B     		ldr	r3, .L13	@ tmp128,
 362 0040 1800     		movs	r0, r3	@, tmp128
 363 0042 FFF7FEFF 		bl	ADC_GetConversionValue	@
 364 0046 0300     		movs	r3, r0	@ tmp129,
 206:src/adc.c     **** }
ARM GAS  /tmp/ccpZw0wh.s 			page 11


 365              		.loc 1 206 0
 366 0048 1800     		movs	r0, r3	@, <retval>
 367 004a 05B0     		add	sp, sp, #20	@,,
 368              		@ sp needed	@
 369 004c 00BD     		pop	{pc}
 370              	.L14:
 371 004e C046     		.align	2
 372              	.L13:
 373 0050 00240140 		.word	1073816576
 374              		.cfi_endproc
 375              	.LFE22:
 376              		.size	ReadADC1, .-ReadADC1
 377              		.section	.text.SetADC1_SampleTime,"ax",%progbits
 378              		.align	2
 379              		.global	SetADC1_SampleTime
 380              		.code	16
 381              		.thumb_func
 382              		.type	SetADC1_SampleTime, %function
 383              	SetADC1_SampleTime:
 384              	.LFB23:
 207:src/adc.c     **** 
 208:src/adc.c     **** //Setea el sample time en el ADC
 209:src/adc.c     **** void SetADC1_SampleTime (void)
 210:src/adc.c     **** {
 385              		.loc 1 210 0
 386              		.cfi_startproc
 387 0000 82B0     		sub	sp, sp, #8	@,,
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 8
 211:src/adc.c     **** 	uint32_t tmpreg = 0;
 390              		.loc 1 211 0
 391 0002 0023     		movs	r3, #0	@ tmp111,
 392 0004 0193     		str	r3, [sp, #4]	@ tmp111, tmpreg
 212:src/adc.c     **** 
 213:src/adc.c     **** 	/* Clear the Sampling time Selection bits */
 214:src/adc.c     **** 	tmpreg &= ~ADC_SMPR1_SMPR;
 393              		.loc 1 214 0
 394 0006 019B     		ldr	r3, [sp, #4]	@ tmp113, tmpreg
 395 0008 0722     		movs	r2, #7	@ tmp114,
 396 000a 9343     		bics	r3, r2	@ tmp112, tmp114
 397 000c 0193     		str	r3, [sp, #4]	@ tmp112, tmpreg
 215:src/adc.c     **** 
 216:src/adc.c     **** 	/* Set the ADC Sampling Time register */
 217:src/adc.c     **** 	tmpreg |= (uint32_t)ADC_SampleTime_239_5Cycles;
 398              		.loc 1 217 0
 399 000e 019B     		ldr	r3, [sp, #4]	@ tmp116, tmpreg
 400 0010 0722     		movs	r2, #7	@ tmp117,
 401 0012 1343     		orrs	r3, r2	@ tmp115, tmp117
 402 0014 0193     		str	r3, [sp, #4]	@ tmp115, tmpreg
 218:src/adc.c     **** 
 219:src/adc.c     **** 	/* Configure the ADC Sample time register */
 220:src/adc.c     **** 	ADC1->SMPR = tmpreg ;
 403              		.loc 1 220 0
 404 0016 034B     		ldr	r3, .L16	@ D.5051,
 405 0018 019A     		ldr	r2, [sp, #4]	@ tmp118, tmpreg
 406 001a 5A61     		str	r2, [r3, #20]	@ tmp118, _4->SMPR
 221:src/adc.c     **** }
ARM GAS  /tmp/ccpZw0wh.s 			page 12


 407              		.loc 1 221 0
 408 001c C046     		nop
 409 001e 02B0     		add	sp, sp, #8	@,,
 410              		@ sp needed	@
 411 0020 7047     		bx	lr
 412              	.L17:
 413 0022 C046     		.align	2
 414              	.L16:
 415 0024 00240140 		.word	1073816576
 416              		.cfi_endproc
 417              	.LFE23:
 418              		.size	SetADC1_SampleTime, .-SetADC1_SampleTime
 419              		.section	.text.ReadADC1_SameSampleTime,"ax",%progbits
 420              		.align	2
 421              		.global	ReadADC1_SameSampleTime
 422              		.code	16
 423              		.thumb_func
 424              		.type	ReadADC1_SameSampleTime, %function
 425              	ReadADC1_SameSampleTime:
 426              	.LFB24:
 222:src/adc.c     **** 
 223:src/adc.c     **** 
 224:src/adc.c     **** //lee el ADC sin cambiar el sample time anterior
 225:src/adc.c     **** unsigned short ReadADC1_SameSampleTime (unsigned int channel)
 226:src/adc.c     **** {
 427              		.loc 1 226 0
 428              		.cfi_startproc
 429 0000 82B0     		sub	sp, sp, #8	@,,
 430              	.LCFI7:
 431              		.cfi_def_cfa_offset 8
 432 0002 0190     		str	r0, [sp, #4]	@ channel, channel
 227:src/adc.c     **** 	// Configure the ADC Channel
 228:src/adc.c     **** 	ADC1->CHSELR = channel;
 433              		.loc 1 228 0
 434 0004 0A4B     		ldr	r3, .L21	@ D.5052,
 435 0006 019A     		ldr	r2, [sp, #4]	@ tmp122, channel
 436 0008 9A62     		str	r2, [r3, #40]	@ tmp122, _1->CHSELR
 229:src/adc.c     **** 
 230:src/adc.c     **** 	// Start the conversion
 231:src/adc.c     **** 	ADC1->CR |= (uint32_t)ADC_CR_ADSTART;
 437              		.loc 1 231 0
 438 000a 094B     		ldr	r3, .L21	@ D.5052,
 439 000c 084A     		ldr	r2, .L21	@ D.5052,
 440 000e 9268     		ldr	r2, [r2, #8]	@ D.5053, _6->CR
 441 0010 0421     		movs	r1, #4	@ tmp123,
 442 0012 0A43     		orrs	r2, r1	@ D.5053, tmp123
 443 0014 9A60     		str	r2, [r3, #8]	@ D.5053, _5->CR
 232:src/adc.c     **** 
 233:src/adc.c     **** 	// Wait until conversion completion
 234:src/adc.c     **** 	while((ADC1->ISR & ADC_ISR_EOC) == 0);
 444              		.loc 1 234 0
 445 0016 C046     		nop
 446              	.L19:
 447              		.loc 1 234 0 is_stmt 0 discriminator 1
 448 0018 054B     		ldr	r3, .L21	@ D.5052,
 449 001a 1B68     		ldr	r3, [r3]	@ D.5053, _10->ISR
 450 001c 0422     		movs	r2, #4	@ tmp124,
ARM GAS  /tmp/ccpZw0wh.s 			page 13


 451 001e 1340     		ands	r3, r2	@ D.5053, tmp124
 452 0020 FAD0     		beq	.L19	@,
 235:src/adc.c     **** 
 236:src/adc.c     **** 	// Get the conversion value
 237:src/adc.c     **** 	return (uint16_t) ADC1->DR;
 453              		.loc 1 237 0 is_stmt 1
 454 0022 034B     		ldr	r3, .L21	@ D.5052,
 455 0024 1B6C     		ldr	r3, [r3, #64]	@ D.5053, _13->DR
 456 0026 9BB2     		uxth	r3, r3	@ D.5054, D.5053
 238:src/adc.c     **** }
 457              		.loc 1 238 0
 458 0028 1800     		movs	r0, r3	@, <retval>
 459 002a 02B0     		add	sp, sp, #8	@,,
 460              		@ sp needed	@
 461 002c 7047     		bx	lr
 462              	.L22:
 463 002e C046     		.align	2
 464              	.L21:
 465 0030 00240140 		.word	1073816576
 466              		.cfi_endproc
 467              	.LFE24:
 468              		.size	ReadADC1_SameSampleTime, .-ReadADC1_SameSampleTime
 469              		.section	.text.ReadADC1Check,"ax",%progbits
 470              		.align	2
 471              		.global	ReadADC1Check
 472              		.code	16
 473              		.thumb_func
 474              		.type	ReadADC1Check, %function
 475              	ReadADC1Check:
 476              	.LFB25:
 239:src/adc.c     **** 
 240:src/adc.c     **** unsigned short ReadADC1Check (unsigned char channel)
 241:src/adc.c     **** {
 477              		.loc 1 241 0
 478              		.cfi_startproc
 479 0000 82B0     		sub	sp, sp, #8	@,,
 480              	.LCFI8:
 481              		.cfi_def_cfa_offset 8
 482 0002 0200     		movs	r2, r0	@ tmp137, channel
 483 0004 6B46     		mov	r3, sp	@ tmp153,
 484 0006 0733     		adds	r3, r3, #7	@ tmp138,
 485 0008 1A70     		strb	r2, [r3]	@ tmp139, channel
 242:src/adc.c     **** 	if (ADC1->CR & 0x01)			//reviso ADEN
 486              		.loc 1 242 0
 487 000a 204B     		ldr	r3, .L35	@ D.5056,
 488 000c 9B68     		ldr	r3, [r3, #8]	@ D.5057, _3->CR
 489 000e 0122     		movs	r2, #1	@ tmp140,
 490 0010 1340     		ands	r3, r2	@ D.5057, tmp140
 491 0012 01D0     		beq	.L33	@,
 243:src/adc.c     **** 		return 0xFFFF;
 492              		.loc 1 243 0
 493 0014 1E4B     		ldr	r3, .L35+4	@ D.5055,
 494 0016 35E0     		b	.L25	@
 495              	.L33:
 244:src/adc.c     **** 
 245:src/adc.c     **** 	//espero que este listo para convertir
 246:src/adc.c     **** 	while ((ADC1->ISR & 0x01) == 0);	//espero ARDY = 1
ARM GAS  /tmp/ccpZw0wh.s 			page 14


 496              		.loc 1 246 0
 497 0018 C046     		nop
 498              	.L26:
 499              		.loc 1 246 0 is_stmt 0 discriminator 1
 500 001a 1C4B     		ldr	r3, .L35	@ D.5056,
 501 001c 1B68     		ldr	r3, [r3]	@ D.5057, _8->ISR
 502 001e 0122     		movs	r2, #1	@ tmp141,
 503 0020 1340     		ands	r3, r2	@ D.5057, tmp141
 504 0022 FAD0     		beq	.L26	@,
 247:src/adc.c     **** 
 248:src/adc.c     **** 	if ((ADC1->CFGR1 & 0x00010000) == 0)			//reviso DISCONTINUOS = 1
 505              		.loc 1 248 0 is_stmt 1
 506 0024 194B     		ldr	r3, .L35	@ D.5056,
 507 0026 DA68     		ldr	r2, [r3, #12]	@ D.5057, _11->CFGR1
 508 0028 8023     		movs	r3, #128	@ tmp152,
 509 002a 5B02     		lsls	r3, r3, #9	@ tmp142, tmp152,
 510 002c 1340     		ands	r3, r2	@ D.5057, D.5057
 511 002e 01D1     		bne	.L27	@,
 249:src/adc.c     **** 		return 0xFFFF;
 512              		.loc 1 249 0
 513 0030 174B     		ldr	r3, .L35+4	@ D.5055,
 514 0032 27E0     		b	.L25	@
 515              	.L27:
 250:src/adc.c     **** 
 251:src/adc.c     **** 	if (ADC1->CFGR1 & 0x00002000)					//reviso CONT = 0
 516              		.loc 1 251 0
 517 0034 154B     		ldr	r3, .L35	@ D.5056,
 518 0036 DA68     		ldr	r2, [r3, #12]	@ D.5057, _15->CFGR1
 519 0038 8023     		movs	r3, #128	@ tmp151,
 520 003a 9B01     		lsls	r3, r3, #6	@ tmp143, tmp151,
 521 003c 1340     		ands	r3, r2	@ D.5057, D.5057
 522 003e 01D0     		beq	.L28	@,
 252:src/adc.c     **** 		return 0xFFFF;
 523              		.loc 1 252 0
 524 0040 134B     		ldr	r3, .L35+4	@ D.5055,
 525 0042 1FE0     		b	.L25	@
 526              	.L28:
 253:src/adc.c     **** 
 254:src/adc.c     **** 	if (ADC1->CFGR1 & 0x00000C00)					//reviso TRIGGER = 00
 527              		.loc 1 254 0
 528 0044 114B     		ldr	r3, .L35	@ D.5056,
 529 0046 DA68     		ldr	r2, [r3, #12]	@ D.5057, _19->CFGR1
 530 0048 C023     		movs	r3, #192	@ tmp150,
 531 004a 1B01     		lsls	r3, r3, #4	@ tmp144, tmp150,
 532 004c 1340     		ands	r3, r2	@ D.5057, D.5057
 533 004e 01D0     		beq	.L29	@,
 255:src/adc.c     **** 		return 0xFFFF;
 534              		.loc 1 255 0
 535 0050 0F4B     		ldr	r3, .L35+4	@ D.5055,
 536 0052 17E0     		b	.L25	@
 537              	.L29:
 256:src/adc.c     **** 
 257:src/adc.c     **** 	if (ADC1->CFGR1 & 0x00000020)					//reviso ALIGN = 0
 538              		.loc 1 257 0
 539 0054 0D4B     		ldr	r3, .L35	@ D.5056,
 540 0056 DB68     		ldr	r3, [r3, #12]	@ D.5057, _23->CFGR1
 541 0058 2022     		movs	r2, #32	@ tmp145,
ARM GAS  /tmp/ccpZw0wh.s 			page 15


 542 005a 1340     		ands	r3, r2	@ D.5057, tmp145
 543 005c 01D0     		beq	.L30	@,
 258:src/adc.c     **** 		return 0xFFFF;
 544              		.loc 1 258 0
 545 005e 0C4B     		ldr	r3, .L35+4	@ D.5055,
 546 0060 10E0     		b	.L25	@
 547              	.L30:
 259:src/adc.c     **** 
 260:src/adc.c     **** 	if (ADC1->CFGR1 & 0x00000018)					//reviso RES = 00
 548              		.loc 1 260 0
 549 0062 0A4B     		ldr	r3, .L35	@ D.5056,
 550 0064 DB68     		ldr	r3, [r3, #12]	@ D.5057, _27->CFGR1
 551 0066 1822     		movs	r2, #24	@ tmp146,
 552 0068 1340     		ands	r3, r2	@ D.5057, tmp146
 553 006a 01D0     		beq	.L34	@,
 261:src/adc.c     **** 		return 0xFFFF;
 554              		.loc 1 261 0
 555 006c 084B     		ldr	r3, .L35+4	@ D.5055,
 556 006e 09E0     		b	.L25	@
 557              	.L34:
 262:src/adc.c     **** 
 263:src/adc.c     **** 	//espero que no se este convirtiendo ADCSTART = 0
 264:src/adc.c     **** 	while ((ADC1->CR & 0x02) != 0);	//espero ADCSTART = 0
 558              		.loc 1 264 0
 559 0070 C046     		nop
 560              	.L32:
 561              		.loc 1 264 0 is_stmt 0 discriminator 1
 562 0072 064B     		ldr	r3, .L35	@ D.5056,
 563 0074 9B68     		ldr	r3, [r3, #8]	@ D.5057, _31->CR
 564 0076 0222     		movs	r2, #2	@ tmp147,
 565 0078 1340     		ands	r3, r2	@ D.5057, tmp147
 566 007a FAD1     		bne	.L32	@,
 265:src/adc.c     **** 
 266:src/adc.c     **** 	ADC1->CHSELR = 0x00000001;	//solo convierto CH0
 567              		.loc 1 266 0 is_stmt 1
 568 007c 034B     		ldr	r3, .L35	@ D.5056,
 569 007e 0122     		movs	r2, #1	@ tmp148,
 570 0080 9A62     		str	r2, [r3, #40]	@ tmp148, _34->CHSELR
 267:src/adc.c     **** 
 268:src/adc.c     **** 	return 1;
 571              		.loc 1 268 0
 572 0082 0123     		movs	r3, #1	@ D.5055,
 573              	.L25:
 269:src/adc.c     **** }
 574              		.loc 1 269 0
 575 0084 1800     		movs	r0, r3	@, <retval>
 576 0086 02B0     		add	sp, sp, #8	@,,
 577              		@ sp needed	@
 578 0088 7047     		bx	lr
 579              	.L36:
 580 008a C046     		.align	2
 581              	.L35:
 582 008c 00240140 		.word	1073816576
 583 0090 FFFF0000 		.word	65535
 584              		.cfi_endproc
 585              	.LFE25:
 586              		.size	ReadADC1Check, .-ReadADC1Check
ARM GAS  /tmp/ccpZw0wh.s 			page 16


 587              		.section	.text.GetLDR,"ax",%progbits
 588              		.align	2
 589              		.global	GetLDR
 590              		.code	16
 591              		.thumb_func
 592              		.type	GetLDR, %function
 593              	GetLDR:
 594              	.LFB26:
 270:src/adc.c     **** 
 271:src/adc.c     **** unsigned short GetLDR (void)
 272:src/adc.c     **** {
 595              		.loc 1 272 0
 596              		.cfi_startproc
 597 0000 10B5     		push	{r4, lr}	@
 598              	.LCFI9:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
 273:src/adc.c     **** 	return ReadADC1_SameSampleTime(ADC_Channel_5);
 602              		.loc 1 273 0
 603 0002 2020     		movs	r0, #32	@,
 604 0004 FFF7FEFF 		bl	ReadADC1_SameSampleTime	@
 605 0008 0300     		movs	r3, r0	@ tmp112,
 274:src/adc.c     **** }
 606              		.loc 1 274 0
 607 000a 1800     		movs	r0, r3	@, <retval>
 608              		@ sp needed	@
 609 000c 10BD     		pop	{r4, pc}
 610              		.cfi_endproc
 611              	.LFE26:
 612              		.size	GetLDR, .-GetLDR
 613 000e C046     		.section	.text.UpdateTemp,"ax",%progbits
 614              		.align	2
 615              		.global	UpdateTemp
 616              		.code	16
 617              		.thumb_func
 618              		.type	UpdateTemp, %function
 619              	UpdateTemp:
 620              	.LFB27:
 275:src/adc.c     **** 
 276:src/adc.c     **** void UpdateTemp(void)
 277:src/adc.c     **** {
 621              		.loc 1 277 0
 622              		.cfi_startproc
 623 0000 10B5     		push	{r4, lr}	@
 624              	.LCFI10:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 278:src/adc.c     **** 	//hago update cada 1 seg
 279:src/adc.c     **** 	if (!take_temp_sample)
 628              		.loc 1 279 0
 629 0002 144B     		ldr	r3, .L44	@ tmp117,
 630 0004 1B88     		ldrh	r3, [r3]	@ tmp118, take_temp_sample
 631 0006 9BB2     		uxth	r3, r3	@ D.5059, tmp118
 632 0008 002B     		cmp	r3, #0	@ D.5059,
 633 000a 21D1     		bne	.L43	@,
ARM GAS  /tmp/ccpZw0wh.s 			page 17


 280:src/adc.c     **** 	{
 281:src/adc.c     **** 		take_temp_sample = 1000;
 634              		.loc 1 281 0
 635 000c 114B     		ldr	r3, .L44	@ tmp119,
 636 000e FA22     		movs	r2, #250	@ tmp141,
 637 0010 9200     		lsls	r2, r2, #2	@ tmp120, tmp141,
 638 0012 1A80     		strh	r2, [r3]	@ tmp121, take_temp_sample
 282:src/adc.c     **** 
 283:src/adc.c     **** 		if (board_temp_index < SIZEOF_BOARD_TEMP)
 639              		.loc 1 283 0
 640 0014 104B     		ldr	r3, .L44+4	@ tmp122,
 641 0016 1B78     		ldrb	r3, [r3]	@ D.5060, board_temp_index
 642 0018 072B     		cmp	r3, #7	@ D.5060,
 643 001a 06D8     		bhi	.L41	@,
 284:src/adc.c     **** 			board_temp_index++;
 644              		.loc 1 284 0
 645 001c 0E4B     		ldr	r3, .L44+4	@ tmp123,
 646 001e 1B78     		ldrb	r3, [r3]	@ D.5060, board_temp_index
 647 0020 0133     		adds	r3, r3, #1	@ tmp124,
 648 0022 DAB2     		uxtb	r2, r3	@ D.5060, tmp124
 649 0024 0C4B     		ldr	r3, .L44+4	@ tmp125,
 650 0026 1A70     		strb	r2, [r3]	@ tmp126, board_temp_index
 651 0028 02E0     		b	.L42	@
 652              	.L41:
 285:src/adc.c     **** 		else
 286:src/adc.c     **** 			board_temp_index = 0;
 653              		.loc 1 286 0
 654 002a 0B4B     		ldr	r3, .L44+4	@ tmp127,
 655 002c 0022     		movs	r2, #0	@ tmp128,
 656 002e 1A70     		strb	r2, [r3]	@ tmp129, board_temp_index
 657              	.L42:
 287:src/adc.c     **** 
 288:src/adc.c     **** 		board_temp [board_temp_index] = ReadADC1_SameSampleTime(ADC_Channel_16);
 658              		.loc 1 288 0
 659 0030 094B     		ldr	r3, .L44+4	@ tmp130,
 660 0032 1B78     		ldrb	r3, [r3]	@ D.5060, board_temp_index
 661 0034 1C00     		movs	r4, r3	@ D.5061, D.5060
 662 0036 8023     		movs	r3, #128	@ tmp140,
 663 0038 5B02     		lsls	r3, r3, #9	@ tmp131, tmp140,
 664 003a 1800     		movs	r0, r3	@, tmp131
 665 003c FFF7FEFF 		bl	ReadADC1_SameSampleTime	@
 666 0040 0300     		movs	r3, r0	@ tmp132,
 667 0042 1900     		movs	r1, r3	@ D.5059, tmp133
 668 0044 054B     		ldr	r3, .L44+8	@ tmp134,
 669 0046 6200     		lsls	r2, r4, #1	@ tmp135, D.5061,
 670 0048 D152     		strh	r1, [r2, r3]	@ tmp136, board_temp
 289:src/adc.c     **** 		new_temp_sample = 1;
 671              		.loc 1 289 0
 672 004a 054B     		ldr	r3, .L44+12	@ tmp137,
 673 004c 0122     		movs	r2, #1	@ tmp138,
 674 004e 1A70     		strb	r2, [r3]	@ tmp139, new_temp_sample
 675              	.L43:
 290:src/adc.c     **** 	}
 291:src/adc.c     **** }
 676              		.loc 1 291 0
 677 0050 C046     		nop
 678              		@ sp needed	@
ARM GAS  /tmp/ccpZw0wh.s 			page 18


 679 0052 10BD     		pop	{r4, pc}
 680              	.L45:
 681              		.align	2
 682              	.L44:
 683 0054 00000000 		.word	take_temp_sample
 684 0058 00000000 		.word	board_temp_index
 685 005c 00000000 		.word	board_temp
 686 0060 00000000 		.word	new_temp_sample
 687              		.cfi_endproc
 688              	.LFE27:
 689              		.size	UpdateTemp, .-UpdateTemp
 690              		.section	.text.GetTemp,"ax",%progbits
 691              		.align	2
 692              		.global	GetTemp
 693              		.code	16
 694              		.thumb_func
 695              		.type	GetTemp, %function
 696              	GetTemp:
 697              	.LFB28:
 292:src/adc.c     **** 
 293:src/adc.c     **** unsigned short GetTemp (void)
 294:src/adc.c     **** {
 698              		.loc 1 294 0
 699              		.cfi_startproc
 700 0000 82B0     		sub	sp, sp, #8	@,,
 701              	.LCFI11:
 702              		.cfi_def_cfa_offset 8
 295:src/adc.c     **** 	unsigned char i;
 296:src/adc.c     **** 	unsigned int t = 0;
 703              		.loc 1 296 0
 704 0002 0023     		movs	r3, #0	@ tmp119,
 705 0004 0093     		str	r3, [sp]	@ tmp119, t
 297:src/adc.c     **** 
 298:src/adc.c     **** 	if (new_temp_sample)
 706              		.loc 1 298 0
 707 0006 164B     		ldr	r3, .L51	@ tmp120,
 708 0008 1B78     		ldrb	r3, [r3]	@ D.5062, new_temp_sample
 709 000a 002B     		cmp	r3, #0	@ D.5062,
 710 000c 22D0     		beq	.L47	@,
 299:src/adc.c     **** 	{
 300:src/adc.c     **** 		for (i = 0; i < SIZEOF_BOARD_TEMP; i++)
 711              		.loc 1 300 0
 712 000e 6B46     		mov	r3, sp	@ tmp143,
 713 0010 0733     		adds	r3, r3, #7	@ tmp121,
 714 0012 0022     		movs	r2, #0	@ tmp122,
 715 0014 1A70     		strb	r2, [r3]	@ tmp123, i
 716 0016 10E0     		b	.L48	@
 717              	.L49:
 301:src/adc.c     **** 		{
 302:src/adc.c     **** 			t += board_temp[i];
 718              		.loc 1 302 0 discriminator 3
 719 0018 6B46     		mov	r3, sp	@ tmp144,
 720 001a 0733     		adds	r3, r3, #7	@ tmp124,
 721 001c 1A78     		ldrb	r2, [r3]	@ D.5063, i
 722 001e 114B     		ldr	r3, .L51+4	@ tmp125,
 723 0020 5200     		lsls	r2, r2, #1	@ tmp126, D.5063,
 724 0022 D35A     		ldrh	r3, [r2, r3]	@ D.5064, board_temp
ARM GAS  /tmp/ccpZw0wh.s 			page 19


 725 0024 1A00     		movs	r2, r3	@ D.5065, D.5064
 726 0026 009B     		ldr	r3, [sp]	@ tmp128, t
 727 0028 9B18     		adds	r3, r3, r2	@ tmp127, tmp128, D.5065
 728 002a 0093     		str	r3, [sp]	@ tmp127, t
 300:src/adc.c     **** 		{
 729              		.loc 1 300 0 discriminator 3
 730 002c 6B46     		mov	r3, sp	@ tmp145,
 731 002e 0733     		adds	r3, r3, #7	@ tmp129,
 732 0030 1A78     		ldrb	r2, [r3]	@ D.5062, i
 733 0032 6B46     		mov	r3, sp	@ tmp146,
 734 0034 0733     		adds	r3, r3, #7	@ tmp130,
 735 0036 0132     		adds	r2, r2, #1	@ tmp131,
 736 0038 1A70     		strb	r2, [r3]	@ tmp132, i
 737              	.L48:
 300:src/adc.c     **** 		{
 738              		.loc 1 300 0 is_stmt 0 discriminator 1
 739 003a 6B46     		mov	r3, sp	@ tmp147,
 740 003c 0733     		adds	r3, r3, #7	@ tmp133,
 741 003e 1B78     		ldrb	r3, [r3]	@ tmp134, i
 742 0040 072B     		cmp	r3, #7	@ tmp134,
 743 0042 E9D9     		bls	.L49	@,
 303:src/adc.c     **** 		}
 304:src/adc.c     **** 
 305:src/adc.c     **** 		last_temp = t >> 3;
 744              		.loc 1 305 0 is_stmt 1
 745 0044 009B     		ldr	r3, [sp]	@ tmp135, t
 746 0046 DB08     		lsrs	r3, r3, #3	@ D.5065, tmp135,
 747 0048 9AB2     		uxth	r2, r3	@ D.5064, D.5065
 748 004a 074B     		ldr	r3, .L51+8	@ tmp136,
 749 004c 1A80     		strh	r2, [r3]	@ tmp137, last_temp
 306:src/adc.c     **** 		new_temp_sample = 0;
 750              		.loc 1 306 0
 751 004e 044B     		ldr	r3, .L51	@ tmp138,
 752 0050 0022     		movs	r2, #0	@ tmp139,
 753 0052 1A70     		strb	r2, [r3]	@ tmp140, new_temp_sample
 754              	.L47:
 307:src/adc.c     **** 	}
 308:src/adc.c     **** 
 309:src/adc.c     **** 	return last_temp;
 755              		.loc 1 309 0
 756 0054 044B     		ldr	r3, .L51+8	@ tmp141,
 757 0056 1B88     		ldrh	r3, [r3]	@ D.5064, last_temp
 310:src/adc.c     **** }
 758              		.loc 1 310 0
 759 0058 1800     		movs	r0, r3	@, <retval>
 760 005a 02B0     		add	sp, sp, #8	@,,
 761              		@ sp needed	@
 762 005c 7047     		bx	lr
 763              	.L52:
 764 005e C046     		.align	2
 765              	.L51:
 766 0060 00000000 		.word	new_temp_sample
 767 0064 00000000 		.word	board_temp
 768 0068 00000000 		.word	last_temp
 769              		.cfi_endproc
 770              	.LFE28:
 771              		.size	GetTemp, .-GetTemp
ARM GAS  /tmp/ccpZw0wh.s 			page 20


 772              		.global	__aeabi_idiv
 773              		.section	.text.ConvertTemp,"ax",%progbits
 774              		.align	2
 775              		.global	ConvertTemp
 776              		.code	16
 777              		.thumb_func
 778              		.type	ConvertTemp, %function
 779              	ConvertTemp:
 780              	.LFB29:
 311:src/adc.c     **** 
 312:src/adc.c     **** short ConvertTemp (unsigned short t_sample)
 313:src/adc.c     **** {
 781              		.loc 1 313 0
 782              		.cfi_startproc
 783 0000 00B5     		push	{lr}	@
 784              	.LCFI12:
 785              		.cfi_def_cfa_offset 4
 786              		.cfi_offset 14, -4
 787 0002 85B0     		sub	sp, sp, #20	@,,
 788              	.LCFI13:
 789              		.cfi_def_cfa_offset 24
 790 0004 0200     		movs	r2, r0	@ tmp128, t_sample
 791 0006 6B46     		mov	r3, sp	@ tmp170,
 792 0008 0633     		adds	r3, r3, #6	@ tmp129,
 793 000a 1A80     		strh	r2, [r3]	@ tmp130, t_sample
 314:src/adc.c     **** 	short dy = 110 - 30;
 794              		.loc 1 314 0
 795 000c 0E23     		movs	r3, #14	@ tmp131,
 796 000e 6B44     		add	r3, r3, sp	@ tmp131,
 797 0010 5022     		movs	r2, #80	@ tmp132,
 798 0012 1A80     		strh	r2, [r3]	@ tmp133, dy
 315:src/adc.c     **** 	short dt = 0;
 799              		.loc 1 315 0
 800 0014 03AB     		add	r3, sp, #12	@ tmp134,,
 801 0016 0022     		movs	r2, #0	@ tmp135,
 802 0018 1A80     		strh	r2, [r3]	@ tmp136, dt
 316:src/adc.c     **** 	short temp = 0;
 803              		.loc 1 316 0
 804 001a 0A23     		movs	r3, #10	@ tmp137,
 805 001c 6B44     		add	r3, r3, sp	@ tmp137,
 806 001e 0022     		movs	r2, #0	@ tmp138,
 807 0020 1A80     		strh	r2, [r3]	@ tmp139, temp
 317:src/adc.c     **** 
 318:src/adc.c     **** 	dt = *TEMP110_CAL_ADDR - *TEMP30_CAL_ADDR;
 808              		.loc 1 318 0
 809 0022 1E4B     		ldr	r3, .L55	@ D.5066,
 810 0024 1A88     		ldrh	r2, [r3]	@ D.5067, *_4
 811 0026 1E4B     		ldr	r3, .L55+4	@ D.5066,
 812 0028 1B88     		ldrh	r3, [r3]	@ D.5067, *_7
 813 002a D31A     		subs	r3, r2, r3	@ tmp140, D.5067, D.5067
 814 002c 9AB2     		uxth	r2, r3	@ D.5068, tmp140
 815 002e 03AB     		add	r3, sp, #12	@ tmp141,,
 816 0030 1A80     		strh	r2, [r3]	@ tmp142, dt
 319:src/adc.c     **** 
 320:src/adc.c     **** 	temp = t_sample - *TEMP30_CAL_ADDR;
 817              		.loc 1 320 0
 818 0032 1B4B     		ldr	r3, .L55+4	@ D.5066,
ARM GAS  /tmp/ccpZw0wh.s 			page 21


 819 0034 1B88     		ldrh	r3, [r3]	@ D.5067, *_11
 820 0036 6A46     		mov	r2, sp	@ tmp173,
 821 0038 0632     		adds	r2, r2, #6	@ tmp143,
 822 003a 1288     		ldrh	r2, [r2]	@ tmp144, t_sample
 823 003c D31A     		subs	r3, r2, r3	@ tmp145, tmp144, D.5067
 824 003e 9AB2     		uxth	r2, r3	@ D.5068, tmp145
 825 0040 0A23     		movs	r3, #10	@ tmp146,
 826 0042 6B44     		add	r3, r3, sp	@ tmp146,
 827 0044 1A80     		strh	r2, [r3]	@ tmp147, temp
 321:src/adc.c     **** 	temp = temp * dy;
 828              		.loc 1 321 0
 829 0046 0A23     		movs	r3, #10	@ tmp148,
 830 0048 6B44     		add	r3, r3, sp	@ tmp148,
 831 004a 1B88     		ldrh	r3, [r3]	@ D.5068, temp
 832 004c 0E22     		movs	r2, #14	@ tmp149,
 833 004e 6A44     		add	r2, r2, sp	@ tmp149,
 834 0050 1288     		ldrh	r2, [r2]	@ D.5068, dy
 835 0052 5343     		muls	r3, r2	@ tmp150, D.5068
 836 0054 9AB2     		uxth	r2, r3	@ D.5068, tmp150
 837 0056 0A23     		movs	r3, #10	@ tmp151,
 838 0058 6B44     		add	r3, r3, sp	@ tmp151,
 839 005a 1A80     		strh	r2, [r3]	@ tmp152, temp
 322:src/adc.c     **** 	temp = temp / dt;
 840              		.loc 1 322 0
 841 005c 0A23     		movs	r3, #10	@ tmp153,
 842 005e 6B44     		add	r3, r3, sp	@ tmp153,
 843 0060 0022     		movs	r2, #0	@ D.5069,
 844 0062 9A5E     		ldrsh	r2, [r3, r2]	@ D.5069, tmp153, D.5069
 845 0064 03AB     		add	r3, sp, #12	@ tmp154,,
 846 0066 0021     		movs	r1, #0	@ tmp168,
 847 0068 5B5E     		ldrsh	r3, [r3, r1]	@ D.5069, tmp154, tmp168
 848 006a 1900     		movs	r1, r3	@, D.5069
 849 006c 1000     		movs	r0, r2	@, D.5069
 850 006e FFF7FEFF 		bl	__aeabi_idiv	@
 851 0072 0300     		movs	r3, r0	@ tmp157,
 852 0074 1A00     		movs	r2, r3	@ D.5069, tmp157
 853 0076 0A23     		movs	r3, #10	@ tmp158,
 854 0078 6B44     		add	r3, r3, sp	@ tmp158,
 855 007a 1A80     		strh	r2, [r3]	@ tmp159, temp
 323:src/adc.c     **** 	//temp = temp + 30;
 324:src/adc.c     **** 	temp = temp + 20;	//resto 10 para compensar por temperatura exterior
 856              		.loc 1 324 0
 857 007c 0A23     		movs	r3, #10	@ tmp160,
 858 007e 6B44     		add	r3, r3, sp	@ tmp160,
 859 0080 1B88     		ldrh	r3, [r3]	@ D.5068, temp
 860 0082 1433     		adds	r3, r3, #20	@ tmp161,
 861 0084 9AB2     		uxth	r2, r3	@ D.5068, tmp161
 862 0086 0A23     		movs	r3, #10	@ tmp162,
 863 0088 6B44     		add	r3, r3, sp	@ tmp162,
 864 008a 1A80     		strh	r2, [r3]	@ tmp163, temp
 325:src/adc.c     **** 
 326:src/adc.c     **** 	return temp;
 865              		.loc 1 326 0
 866 008c 0A23     		movs	r3, #10	@ tmp164,
 867 008e 6B44     		add	r3, r3, sp	@ tmp164,
 868 0090 1B88     		ldrh	r3, [r3]	@ D.5070, temp
 869 0092 1BB2     		sxth	r3, r3	@ tmp166, D.5070
ARM GAS  /tmp/ccpZw0wh.s 			page 22


 327:src/adc.c     **** }
 870              		.loc 1 327 0
 871 0094 1800     		movs	r0, r3	@, <retval>
 872 0096 05B0     		add	sp, sp, #20	@,,
 873              		@ sp needed	@
 874 0098 00BD     		pop	{pc}
 875              	.L56:
 876 009a C046     		.align	2
 877              	.L55:
 878 009c C2F7FF1F 		.word	536868802
 879 00a0 B8F7FF1F 		.word	536868792
 880              		.cfi_endproc
 881              	.LFE29:
 882              		.size	ConvertTemp, .-ConvertTemp
 883              		.text
 884              	.Letext0:
 885              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 886              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 887              		.file 4 "./cmsis_boot/stm32f0xx.h"
 888              		.file 5 "../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_adc.
 889              		.section	.debug_info,"",%progbits
 890              	.Ldebug_info0:
 891 0000 90050000 		.4byte	0x590
 892 0004 0200     		.2byte	0x2
 893 0006 00000000 		.4byte	.Ldebug_abbrev0
 894 000a 04       		.byte	0x4
 895 000b 01       		.uleb128 0x1
 896 000c 33030000 		.4byte	.LASF63
 897 0010 0C       		.byte	0xc
 898 0011 53000000 		.4byte	.LASF64
 899 0015 D3010000 		.4byte	.LASF65
 900 0019 00000000 		.4byte	.Ldebug_ranges0+0
 901 001d 00000000 		.4byte	0
 902 0021 00000000 		.4byte	0
 903 0025 00000000 		.4byte	.Ldebug_line0
 904 0029 02       		.uleb128 0x2
 905 002a 01       		.byte	0x1
 906 002b 06       		.byte	0x6
 907 002c 47000000 		.4byte	.LASF0
 908 0030 02       		.uleb128 0x2
 909 0031 01       		.byte	0x1
 910 0032 08       		.byte	0x8
 911 0033 48020000 		.4byte	.LASF1
 912 0037 02       		.uleb128 0x2
 913 0038 02       		.byte	0x2
 914 0039 05       		.byte	0x5
 915 003a 5F020000 		.4byte	.LASF2
 916 003e 03       		.uleb128 0x3
 917 003f C7020000 		.4byte	.LASF5
 918 0043 02       		.byte	0x2
 919 0044 2B       		.byte	0x2b
 920 0045 49000000 		.4byte	0x49
 921 0049 02       		.uleb128 0x2
 922 004a 02       		.byte	0x2
 923 004b 07       		.byte	0x7
 924 004c 1B010000 		.4byte	.LASF3
 925 0050 02       		.uleb128 0x2
ARM GAS  /tmp/ccpZw0wh.s 			page 23


 926 0051 04       		.byte	0x4
 927 0052 05       		.byte	0x5
 928 0053 84000000 		.4byte	.LASF4
 929 0057 03       		.uleb128 0x3
 930 0058 CC000000 		.4byte	.LASF6
 931 005c 02       		.byte	0x2
 932 005d 41       		.byte	0x41
 933 005e 62000000 		.4byte	0x62
 934 0062 02       		.uleb128 0x2
 935 0063 04       		.byte	0x4
 936 0064 07       		.byte	0x7
 937 0065 FD000000 		.4byte	.LASF7
 938 0069 02       		.uleb128 0x2
 939 006a 08       		.byte	0x8
 940 006b 05       		.byte	0x5
 941 006c 39000000 		.4byte	.LASF8
 942 0070 02       		.uleb128 0x2
 943 0071 08       		.byte	0x8
 944 0072 07       		.byte	0x7
 945 0073 1D000000 		.4byte	.LASF9
 946 0077 04       		.uleb128 0x4
 947 0078 04       		.byte	0x4
 948 0079 05       		.byte	0x5
 949 007a 696E7400 		.ascii	"int\000"
 950 007e 02       		.uleb128 0x2
 951 007f 04       		.byte	0x4
 952 0080 07       		.byte	0x7
 953 0081 F0000000 		.4byte	.LASF10
 954 0085 03       		.uleb128 0x3
 955 0086 A7000000 		.4byte	.LASF11
 956 008a 03       		.byte	0x3
 957 008b 1A       		.byte	0x1a
 958 008c 3E000000 		.4byte	0x3e
 959 0090 03       		.uleb128 0x3
 960 0091 B0020000 		.4byte	.LASF12
 961 0095 03       		.byte	0x3
 962 0096 20       		.byte	0x20
 963 0097 57000000 		.4byte	0x57
 964 009b 02       		.uleb128 0x2
 965 009c 04       		.byte	0x4
 966 009d 07       		.byte	0x7
 967 009e 69010000 		.4byte	.LASF13
 968 00a2 05       		.uleb128 0x5
 969 00a3 90000000 		.4byte	0x90
 970 00a7 06       		.uleb128 0x6
 971 00a8 01       		.byte	0x1
 972 00a9 30000000 		.4byte	0x30
 973 00ad 04       		.byte	0x4
 974 00ae 6D01     		.2byte	0x16d
 975 00b0 C1000000 		.4byte	0xc1
 976 00b4 07       		.uleb128 0x7
 977 00b5 42020000 		.4byte	.LASF14
 978 00b9 00       		.byte	0
 979 00ba 08       		.uleb128 0x8
 980 00bb 53455400 		.ascii	"SET\000"
 981 00bf 01       		.byte	0x1
 982 00c0 00       		.byte	0
ARM GAS  /tmp/ccpZw0wh.s 			page 24


 983 00c1 06       		.uleb128 0x6
 984 00c2 01       		.byte	0x1
 985 00c3 30000000 		.4byte	0x30
 986 00c7 04       		.byte	0x4
 987 00c8 6F01     		.2byte	0x16f
 988 00ca DB000000 		.4byte	0xdb
 989 00ce 07       		.uleb128 0x7
 990 00cf 15000000 		.4byte	.LASF15
 991 00d3 00       		.byte	0
 992 00d4 07       		.uleb128 0x7
 993 00d5 A0000000 		.4byte	.LASF16
 994 00d9 01       		.byte	0x1
 995 00da 00       		.byte	0
 996 00db 09       		.uleb128 0x9
 997 00dc B2010000 		.4byte	.LASF17
 998 00e0 04       		.byte	0x4
 999 00e1 6F01     		.2byte	0x16f
 1000 00e3 C1000000 		.4byte	0xc1
 1001 00e7 0A       		.uleb128 0xa
 1002 00e8 44       		.byte	0x44
 1003 00e9 04       		.byte	0x4
 1004 00ea 7C01     		.2byte	0x17c
 1005 00ec B1010000 		.4byte	0x1b1
 1006 00f0 0B       		.uleb128 0xb
 1007 00f1 49535200 		.ascii	"ISR\000"
 1008 00f5 04       		.byte	0x4
 1009 00f6 7E01     		.2byte	0x17e
 1010 00f8 A2000000 		.4byte	0xa2
 1011 00fc 02       		.byte	0x2
 1012 00fd 23       		.byte	0x23
 1013 00fe 00       		.uleb128 0
 1014 00ff 0B       		.uleb128 0xb
 1015 0100 49455200 		.ascii	"IER\000"
 1016 0104 04       		.byte	0x4
 1017 0105 7F01     		.2byte	0x17f
 1018 0107 A2000000 		.4byte	0xa2
 1019 010b 02       		.byte	0x2
 1020 010c 23       		.byte	0x23
 1021 010d 04       		.uleb128 0x4
 1022 010e 0B       		.uleb128 0xb
 1023 010f 435200   		.ascii	"CR\000"
 1024 0112 04       		.byte	0x4
 1025 0113 8001     		.2byte	0x180
 1026 0115 A2000000 		.4byte	0xa2
 1027 0119 02       		.byte	0x2
 1028 011a 23       		.byte	0x23
 1029 011b 08       		.uleb128 0x8
 1030 011c 0C       		.uleb128 0xc
 1031 011d 0D030000 		.4byte	.LASF18
 1032 0121 04       		.byte	0x4
 1033 0122 8101     		.2byte	0x181
 1034 0124 A2000000 		.4byte	0xa2
 1035 0128 02       		.byte	0x2
 1036 0129 23       		.byte	0x23
 1037 012a 0C       		.uleb128 0xc
 1038 012b 0C       		.uleb128 0xc
 1039 012c 13030000 		.4byte	.LASF19
ARM GAS  /tmp/ccpZw0wh.s 			page 25


 1040 0130 04       		.byte	0x4
 1041 0131 8201     		.2byte	0x182
 1042 0133 A2000000 		.4byte	0xa2
 1043 0137 02       		.byte	0x2
 1044 0138 23       		.byte	0x23
 1045 0139 10       		.uleb128 0x10
 1046 013a 0C       		.uleb128 0xc
 1047 013b 34000000 		.4byte	.LASF20
 1048 013f 04       		.byte	0x4
 1049 0140 8301     		.2byte	0x183
 1050 0142 A2000000 		.4byte	0xa2
 1051 0146 02       		.byte	0x2
 1052 0147 23       		.byte	0x23
 1053 0148 14       		.uleb128 0x14
 1054 0149 0C       		.uleb128 0xc
 1055 014a 1A020000 		.4byte	.LASF21
 1056 014e 04       		.byte	0x4
 1057 014f 8401     		.2byte	0x184
 1058 0151 90000000 		.4byte	0x90
 1059 0155 02       		.byte	0x2
 1060 0156 23       		.byte	0x23
 1061 0157 18       		.uleb128 0x18
 1062 0158 0C       		.uleb128 0xc
 1063 0159 24020000 		.4byte	.LASF22
 1064 015d 04       		.byte	0x4
 1065 015e 8501     		.2byte	0x185
 1066 0160 90000000 		.4byte	0x90
 1067 0164 02       		.byte	0x2
 1068 0165 23       		.byte	0x23
 1069 0166 1C       		.uleb128 0x1c
 1070 0167 0B       		.uleb128 0xb
 1071 0168 545200   		.ascii	"TR\000"
 1072 016b 04       		.byte	0x4
 1073 016c 8601     		.2byte	0x186
 1074 016e A2000000 		.4byte	0xa2
 1075 0172 02       		.byte	0x2
 1076 0173 23       		.byte	0x23
 1077 0174 20       		.uleb128 0x20
 1078 0175 0C       		.uleb128 0xc
 1079 0176 2E020000 		.4byte	.LASF23
 1080 017a 04       		.byte	0x4
 1081 017b 8701     		.2byte	0x187
 1082 017d 90000000 		.4byte	0x90
 1083 0181 02       		.byte	0x2
 1084 0182 23       		.byte	0x23
 1085 0183 24       		.uleb128 0x24
 1086 0184 0C       		.uleb128 0xc
 1087 0185 3F010000 		.4byte	.LASF24
 1088 0189 04       		.byte	0x4
 1089 018a 8801     		.2byte	0x188
 1090 018c A2000000 		.4byte	0xa2
 1091 0190 02       		.byte	0x2
 1092 0191 23       		.byte	0x23
 1093 0192 28       		.uleb128 0x28
 1094 0193 0C       		.uleb128 0xc
 1095 0194 38020000 		.4byte	.LASF25
 1096 0198 04       		.byte	0x4
ARM GAS  /tmp/ccpZw0wh.s 			page 26


 1097 0199 8901     		.2byte	0x189
 1098 019b B1010000 		.4byte	0x1b1
 1099 019f 02       		.byte	0x2
 1100 01a0 23       		.byte	0x23
 1101 01a1 2C       		.uleb128 0x2c
 1102 01a2 0B       		.uleb128 0xb
 1103 01a3 445200   		.ascii	"DR\000"
 1104 01a6 04       		.byte	0x4
 1105 01a7 8A01     		.2byte	0x18a
 1106 01a9 A2000000 		.4byte	0xa2
 1107 01ad 02       		.byte	0x2
 1108 01ae 23       		.byte	0x23
 1109 01af 40       		.uleb128 0x40
 1110 01b0 00       		.byte	0
 1111 01b1 0D       		.uleb128 0xd
 1112 01b2 90000000 		.4byte	0x90
 1113 01b6 C1010000 		.4byte	0x1c1
 1114 01ba 0E       		.uleb128 0xe
 1115 01bb 9B000000 		.4byte	0x9b
 1116 01bf 04       		.byte	0x4
 1117 01c0 00       		.byte	0
 1118 01c1 09       		.uleb128 0x9
 1119 01c2 B0000000 		.4byte	.LASF26
 1120 01c6 04       		.byte	0x4
 1121 01c7 8B01     		.2byte	0x18b
 1122 01c9 E7000000 		.4byte	0xe7
 1123 01cd 0A       		.uleb128 0xa
 1124 01ce 04       		.byte	0x4
 1125 01cf 04       		.byte	0x4
 1126 01d0 8D01     		.2byte	0x18d
 1127 01d2 E6010000 		.4byte	0x1e6
 1128 01d6 0B       		.uleb128 0xb
 1129 01d7 43435200 		.ascii	"CCR\000"
 1130 01db 04       		.byte	0x4
 1131 01dc 8F01     		.2byte	0x18f
 1132 01de A2000000 		.4byte	0xa2
 1133 01e2 02       		.byte	0x2
 1134 01e3 23       		.byte	0x23
 1135 01e4 00       		.uleb128 0
 1136 01e5 00       		.byte	0
 1137 01e6 09       		.uleb128 0x9
 1138 01e7 8C010000 		.4byte	.LASF27
 1139 01eb 04       		.byte	0x4
 1140 01ec 9001     		.2byte	0x190
 1141 01ee CD010000 		.4byte	0x1cd
 1142 01f2 0A       		.uleb128 0xa
 1143 01f3 38       		.byte	0x38
 1144 01f4 04       		.byte	0x4
 1145 01f5 B502     		.2byte	0x2b5
 1146 01f7 CD020000 		.4byte	0x2cd
 1147 01fb 0B       		.uleb128 0xb
 1148 01fc 435200   		.ascii	"CR\000"
 1149 01ff 04       		.byte	0x4
 1150 0200 B702     		.2byte	0x2b7
 1151 0202 A2000000 		.4byte	0xa2
 1152 0206 02       		.byte	0x2
 1153 0207 23       		.byte	0x23
ARM GAS  /tmp/ccpZw0wh.s 			page 27


 1154 0208 00       		.uleb128 0
 1155 0209 0C       		.uleb128 0xc
 1156 020a 1F030000 		.4byte	.LASF28
 1157 020e 04       		.byte	0x4
 1158 020f B802     		.2byte	0x2b8
 1159 0211 A2000000 		.4byte	0xa2
 1160 0215 02       		.byte	0x2
 1161 0216 23       		.byte	0x23
 1162 0217 04       		.uleb128 0x4
 1163 0218 0B       		.uleb128 0xb
 1164 0219 43495200 		.ascii	"CIR\000"
 1165 021d 04       		.byte	0x4
 1166 021e B902     		.2byte	0x2b9
 1167 0220 A2000000 		.4byte	0xa2
 1168 0224 02       		.byte	0x2
 1169 0225 23       		.byte	0x23
 1170 0226 08       		.uleb128 0x8
 1171 0227 0C       		.uleb128 0xc
 1172 0228 8D000000 		.4byte	.LASF29
 1173 022c 04       		.byte	0x4
 1174 022d BA02     		.2byte	0x2ba
 1175 022f A2000000 		.4byte	0xa2
 1176 0233 02       		.byte	0x2
 1177 0234 23       		.byte	0x23
 1178 0235 0C       		.uleb128 0xc
 1179 0236 0C       		.uleb128 0xc
 1180 0237 CA010000 		.4byte	.LASF30
 1181 023b 04       		.byte	0x4
 1182 023c BB02     		.2byte	0x2bb
 1183 023e A2000000 		.4byte	0xa2
 1184 0242 02       		.byte	0x2
 1185 0243 23       		.byte	0x23
 1186 0244 10       		.uleb128 0x10
 1187 0245 0C       		.uleb128 0xc
 1188 0246 DE030000 		.4byte	.LASF31
 1189 024a 04       		.byte	0x4
 1190 024b BC02     		.2byte	0x2bc
 1191 024d A2000000 		.4byte	0xa2
 1192 0251 02       		.byte	0x2
 1193 0252 23       		.byte	0x23
 1194 0253 14       		.uleb128 0x14
 1195 0254 0C       		.uleb128 0xc
 1196 0255 90020000 		.4byte	.LASF32
 1197 0259 04       		.byte	0x4
 1198 025a BD02     		.2byte	0x2bd
 1199 025c A2000000 		.4byte	0xa2
 1200 0260 02       		.byte	0x2
 1201 0261 23       		.byte	0x23
 1202 0262 18       		.uleb128 0x18
 1203 0263 0C       		.uleb128 0xc
 1204 0264 F4020000 		.4byte	.LASF33
 1205 0268 04       		.byte	0x4
 1206 0269 BE02     		.2byte	0x2be
 1207 026b A2000000 		.4byte	0xa2
 1208 026f 02       		.byte	0x2
 1209 0270 23       		.byte	0x23
 1210 0271 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccpZw0wh.s 			page 28


 1211 0272 0C       		.uleb128 0xc
 1212 0273 08030000 		.4byte	.LASF34
 1213 0277 04       		.byte	0x4
 1214 0278 BF02     		.2byte	0x2bf
 1215 027a A2000000 		.4byte	0xa2
 1216 027e 02       		.byte	0x2
 1217 027f 23       		.byte	0x23
 1218 0280 20       		.uleb128 0x20
 1219 0281 0B       		.uleb128 0xb
 1220 0282 43535200 		.ascii	"CSR\000"
 1221 0286 04       		.byte	0x4
 1222 0287 C002     		.2byte	0x2c0
 1223 0289 A2000000 		.4byte	0xa2
 1224 028d 02       		.byte	0x2
 1225 028e 23       		.byte	0x23
 1226 028f 24       		.uleb128 0x24
 1227 0290 0C       		.uleb128 0xc
 1228 0291 C2010000 		.4byte	.LASF35
 1229 0295 04       		.byte	0x4
 1230 0296 C102     		.2byte	0x2c1
 1231 0298 A2000000 		.4byte	0xa2
 1232 029c 02       		.byte	0x2
 1233 029d 23       		.byte	0x23
 1234 029e 28       		.uleb128 0x28
 1235 029f 0C       		.uleb128 0xc
 1236 02a0 13030000 		.4byte	.LASF19
 1237 02a4 04       		.byte	0x4
 1238 02a5 C202     		.2byte	0x2c2
 1239 02a7 A2000000 		.4byte	0xa2
 1240 02ab 02       		.byte	0x2
 1241 02ac 23       		.byte	0x23
 1242 02ad 2C       		.uleb128 0x2c
 1243 02ae 0C       		.uleb128 0xc
 1244 02af 19030000 		.4byte	.LASF36
 1245 02b3 04       		.byte	0x4
 1246 02b4 C302     		.2byte	0x2c3
 1247 02b6 A2000000 		.4byte	0xa2
 1248 02ba 02       		.byte	0x2
 1249 02bb 23       		.byte	0x23
 1250 02bc 30       		.uleb128 0x30
 1251 02bd 0B       		.uleb128 0xb
 1252 02be 43523200 		.ascii	"CR2\000"
 1253 02c2 04       		.byte	0x4
 1254 02c3 C402     		.2byte	0x2c4
 1255 02c5 A2000000 		.4byte	0xa2
 1256 02c9 02       		.byte	0x2
 1257 02ca 23       		.byte	0x23
 1258 02cb 34       		.uleb128 0x34
 1259 02cc 00       		.byte	0
 1260 02cd 09       		.uleb128 0x9
 1261 02ce 0F010000 		.4byte	.LASF37
 1262 02d2 04       		.byte	0x4
 1263 02d3 C502     		.2byte	0x2c5
 1264 02d5 F2010000 		.4byte	0x1f2
 1265 02d9 0F       		.uleb128 0xf
 1266 02da 18       		.byte	0x18
 1267 02db 05       		.byte	0x5
ARM GAS  /tmp/ccpZw0wh.s 			page 29


 1268 02dc 36       		.byte	0x36
 1269 02dd 36030000 		.4byte	0x336
 1270 02e1 10       		.uleb128 0x10
 1271 02e2 24030000 		.4byte	.LASF38
 1272 02e6 05       		.byte	0x5
 1273 02e7 38       		.byte	0x38
 1274 02e8 90000000 		.4byte	0x90
 1275 02ec 02       		.byte	0x2
 1276 02ed 23       		.byte	0x23
 1277 02ee 00       		.uleb128 0
 1278 02ef 10       		.uleb128 0x10
 1279 02f0 6D000000 		.4byte	.LASF39
 1280 02f4 05       		.byte	0x5
 1281 02f5 3B       		.byte	0x3b
 1282 02f6 DB000000 		.4byte	0xdb
 1283 02fa 02       		.byte	0x2
 1284 02fb 23       		.byte	0x23
 1285 02fc 04       		.uleb128 0x4
 1286 02fd 10       		.uleb128 0x10
 1287 02fe 69020000 		.4byte	.LASF40
 1288 0302 05       		.byte	0x5
 1289 0303 3F       		.byte	0x3f
 1290 0304 90000000 		.4byte	0x90
 1291 0308 02       		.byte	0x2
 1292 0309 23       		.byte	0x23
 1293 030a 08       		.uleb128 0x8
 1294 030b 10       		.uleb128 0x10
 1295 030c 00000000 		.4byte	.LASF41
 1296 0310 05       		.byte	0x5
 1297 0311 43       		.byte	0x43
 1298 0312 90000000 		.4byte	0x90
 1299 0316 02       		.byte	0x2
 1300 0317 23       		.byte	0x23
 1301 0318 0C       		.uleb128 0xc
 1302 0319 10       		.uleb128 0x10
 1303 031a B9020000 		.4byte	.LASF42
 1304 031e 05       		.byte	0x5
 1305 031f 47       		.byte	0x47
 1306 0320 90000000 		.4byte	0x90
 1307 0324 02       		.byte	0x2
 1308 0325 23       		.byte	0x23
 1309 0326 10       		.uleb128 0x10
 1310 0327 10       		.uleb128 0x10
 1311 0328 08020000 		.4byte	.LASF43
 1312 032c 05       		.byte	0x5
 1313 032d 4A       		.byte	0x4a
 1314 032e 90000000 		.4byte	0x90
 1315 0332 02       		.byte	0x2
 1316 0333 23       		.byte	0x23
 1317 0334 14       		.uleb128 0x14
 1318 0335 00       		.byte	0
 1319 0336 03       		.uleb128 0x3
 1320 0337 A0020000 		.4byte	.LASF44
 1321 033b 05       		.byte	0x5
 1322 033c 4D       		.byte	0x4d
 1323 033d D9020000 		.4byte	0x2d9
 1324 0341 11       		.uleb128 0x11
ARM GAS  /tmp/ccpZw0wh.s 			page 30


 1325 0342 01       		.byte	0x1
 1326 0343 D2020000 		.4byte	.LASF49
 1327 0347 01       		.byte	0x1
 1328 0348 1E       		.byte	0x1e
 1329 0349 01       		.byte	0x1
 1330 034a 00000000 		.4byte	.LFB20
 1331 034e AC000000 		.4byte	.LFE20
 1332 0352 00000000 		.4byte	.LLST0
 1333 0356 01       		.byte	0x1
 1334 0357 6A030000 		.4byte	0x36a
 1335 035b 12       		.uleb128 0x12
 1336 035c 63616C00 		.ascii	"cal\000"
 1337 0360 01       		.byte	0x1
 1338 0361 23       		.byte	0x23
 1339 0362 49000000 		.4byte	0x49
 1340 0366 02       		.byte	0x2
 1341 0367 91       		.byte	0x91
 1342 0368 76       		.sleb128 -10
 1343 0369 00       		.byte	0
 1344 036a 13       		.uleb128 0x13
 1345 036b 01       		.byte	0x1
 1346 036c 64000000 		.4byte	.LASF46
 1347 0370 01       		.byte	0x1
 1348 0371 89       		.byte	0x89
 1349 0372 01       		.byte	0x1
 1350 0373 49000000 		.4byte	0x49
 1351 0377 00000000 		.4byte	.LFB21
 1352 037b A0000000 		.4byte	.LFE21
 1353 037f 2C000000 		.4byte	.LLST1
 1354 0383 01       		.byte	0x1
 1355 0384 A5030000 		.4byte	0x3a5
 1356 0388 12       		.uleb128 0x12
 1357 0389 63616C00 		.ascii	"cal\000"
 1358 038d 01       		.byte	0x1
 1359 038e 8B       		.byte	0x8b
 1360 038f 49000000 		.4byte	0x49
 1361 0393 02       		.byte	0x2
 1362 0394 91       		.byte	0x91
 1363 0395 76       		.sleb128 -10
 1364 0396 14       		.uleb128 0x14
 1365 0397 72010000 		.4byte	.LASF45
 1366 039b 01       		.byte	0x1
 1367 039c 8C       		.byte	0x8c
 1368 039d 36030000 		.4byte	0x336
 1369 03a1 02       		.byte	0x2
 1370 03a2 91       		.byte	0x91
 1371 03a3 5C       		.sleb128 -36
 1372 03a4 00       		.byte	0
 1373 03a5 13       		.uleb128 0x13
 1374 03a6 01       		.byte	0x1
 1375 03a7 D7000000 		.4byte	.LASF47
 1376 03ab 01       		.byte	0x1
 1377 03ac B0       		.byte	0xb0
 1378 03ad 01       		.byte	0x1
 1379 03ae 49000000 		.4byte	0x49
 1380 03b2 00000000 		.4byte	.LFB22
 1381 03b6 54000000 		.4byte	.LFE22
ARM GAS  /tmp/ccpZw0wh.s 			page 31


 1382 03ba 58000000 		.4byte	.LLST2
 1383 03be 01       		.byte	0x1
 1384 03bf E0030000 		.4byte	0x3e0
 1385 03c3 15       		.uleb128 0x15
 1386 03c4 98020000 		.4byte	.LASF52
 1387 03c8 01       		.byte	0x1
 1388 03c9 B0       		.byte	0xb0
 1389 03ca 7E000000 		.4byte	0x7e
 1390 03ce 02       		.byte	0x2
 1391 03cf 91       		.byte	0x91
 1392 03d0 6C       		.sleb128 -20
 1393 03d1 14       		.uleb128 0x14
 1394 03d2 5D000000 		.4byte	.LASF48
 1395 03d6 01       		.byte	0x1
 1396 03d7 B2       		.byte	0xb2
 1397 03d8 90000000 		.4byte	0x90
 1398 03dc 02       		.byte	0x2
 1399 03dd 91       		.byte	0x91
 1400 03de 74       		.sleb128 -12
 1401 03df 00       		.byte	0
 1402 03e0 16       		.uleb128 0x16
 1403 03e1 01       		.byte	0x1
 1404 03e2 9F010000 		.4byte	.LASF50
 1405 03e6 01       		.byte	0x1
 1406 03e7 D1       		.byte	0xd1
 1407 03e8 01       		.byte	0x1
 1408 03e9 00000000 		.4byte	.LFB23
 1409 03ed 28000000 		.4byte	.LFE23
 1410 03f1 84000000 		.4byte	.LLST3
 1411 03f5 01       		.byte	0x1
 1412 03f6 09040000 		.4byte	0x409
 1413 03fa 14       		.uleb128 0x14
 1414 03fb 5D000000 		.4byte	.LASF48
 1415 03ff 01       		.byte	0x1
 1416 0400 D3       		.byte	0xd3
 1417 0401 90000000 		.4byte	0x90
 1418 0405 02       		.byte	0x2
 1419 0406 91       		.byte	0x91
 1420 0407 7C       		.sleb128 -4
 1421 0408 00       		.byte	0
 1422 0409 17       		.uleb128 0x17
 1423 040a 01       		.byte	0x1
 1424 040b DC020000 		.4byte	.LASF51
 1425 040f 01       		.byte	0x1
 1426 0410 E1       		.byte	0xe1
 1427 0411 01       		.byte	0x1
 1428 0412 49000000 		.4byte	0x49
 1429 0416 00000000 		.4byte	.LFB24
 1430 041a 34000000 		.4byte	.LFE24
 1431 041e A4000000 		.4byte	.LLST4
 1432 0422 01       		.byte	0x1
 1433 0423 36040000 		.4byte	0x436
 1434 0427 15       		.uleb128 0x15
 1435 0428 98020000 		.4byte	.LASF52
 1436 042c 01       		.byte	0x1
 1437 042d E1       		.byte	0xe1
 1438 042e 7E000000 		.4byte	0x7e
ARM GAS  /tmp/ccpZw0wh.s 			page 32


 1439 0432 02       		.byte	0x2
 1440 0433 91       		.byte	0x91
 1441 0434 7C       		.sleb128 -4
 1442 0435 00       		.byte	0
 1443 0436 17       		.uleb128 0x17
 1444 0437 01       		.byte	0x1
 1445 0438 82020000 		.4byte	.LASF53
 1446 043c 01       		.byte	0x1
 1447 043d F0       		.byte	0xf0
 1448 043e 01       		.byte	0x1
 1449 043f 49000000 		.4byte	0x49
 1450 0443 00000000 		.4byte	.LFB25
 1451 0447 94000000 		.4byte	.LFE25
 1452 044b C4000000 		.4byte	.LLST5
 1453 044f 01       		.byte	0x1
 1454 0450 63040000 		.4byte	0x463
 1455 0454 15       		.uleb128 0x15
 1456 0455 98020000 		.4byte	.LASF52
 1457 0459 01       		.byte	0x1
 1458 045a F0       		.byte	0xf0
 1459 045b 30000000 		.4byte	0x30
 1460 045f 02       		.byte	0x2
 1461 0460 91       		.byte	0x91
 1462 0461 7F       		.sleb128 -1
 1463 0462 00       		.byte	0
 1464 0463 18       		.uleb128 0x18
 1465 0464 01       		.byte	0x1
 1466 0465 46010000 		.4byte	.LASF66
 1467 0469 01       		.byte	0x1
 1468 046a 0F01     		.2byte	0x10f
 1469 046c 01       		.byte	0x1
 1470 046d 49000000 		.4byte	0x49
 1471 0471 00000000 		.4byte	.LFB26
 1472 0475 0E000000 		.4byte	.LFE26
 1473 0479 E4000000 		.4byte	.LLST6
 1474 047d 01       		.byte	0x1
 1475 047e 19       		.uleb128 0x19
 1476 047f 01       		.byte	0x1
 1477 0480 E5000000 		.4byte	.LASF67
 1478 0484 01       		.byte	0x1
 1479 0485 1401     		.2byte	0x114
 1480 0487 01       		.byte	0x1
 1481 0488 00000000 		.4byte	.LFB27
 1482 048c 64000000 		.4byte	.LFE27
 1483 0490 04010000 		.4byte	.LLST7
 1484 0494 01       		.byte	0x1
 1485 0495 1A       		.uleb128 0x1a
 1486 0496 01       		.byte	0x1
 1487 0497 84010000 		.4byte	.LASF54
 1488 049b 01       		.byte	0x1
 1489 049c 2501     		.2byte	0x125
 1490 049e 01       		.byte	0x1
 1491 049f 49000000 		.4byte	0x49
 1492 04a3 00000000 		.4byte	.LFB28
 1493 04a7 6C000000 		.4byte	.LFE28
 1494 04ab 24010000 		.4byte	.LLST8
 1495 04af 01       		.byte	0x1
ARM GAS  /tmp/ccpZw0wh.s 			page 33


 1496 04b0 CF040000 		.4byte	0x4cf
 1497 04b4 1B       		.uleb128 0x1b
 1498 04b5 6900     		.ascii	"i\000"
 1499 04b7 01       		.byte	0x1
 1500 04b8 2701     		.2byte	0x127
 1501 04ba 30000000 		.4byte	0x30
 1502 04be 02       		.byte	0x2
 1503 04bf 91       		.byte	0x91
 1504 04c0 7F       		.sleb128 -1
 1505 04c1 1B       		.uleb128 0x1b
 1506 04c2 7400     		.ascii	"t\000"
 1507 04c4 01       		.byte	0x1
 1508 04c5 2801     		.2byte	0x128
 1509 04c7 7E000000 		.4byte	0x7e
 1510 04cb 02       		.byte	0x2
 1511 04cc 91       		.byte	0x91
 1512 04cd 78       		.sleb128 -8
 1513 04ce 00       		.byte	0
 1514 04cf 1C       		.uleb128 0x1c
 1515 04d0 01       		.byte	0x1
 1516 04d1 FC020000 		.4byte	.LASF55
 1517 04d5 01       		.byte	0x1
 1518 04d6 3801     		.2byte	0x138
 1519 04d8 01       		.byte	0x1
 1520 04d9 37000000 		.4byte	0x37
 1521 04dd 00000000 		.4byte	.LFB29
 1522 04e1 A4000000 		.4byte	.LFE29
 1523 04e5 44010000 		.4byte	.LLST9
 1524 04e9 01       		.byte	0x1
 1525 04ea 29050000 		.4byte	0x529
 1526 04ee 1D       		.uleb128 0x1d
 1527 04ef 56020000 		.4byte	.LASF56
 1528 04f3 01       		.byte	0x1
 1529 04f4 3801     		.2byte	0x138
 1530 04f6 49000000 		.4byte	0x49
 1531 04fa 02       		.byte	0x2
 1532 04fb 91       		.byte	0x91
 1533 04fc 6E       		.sleb128 -18
 1534 04fd 1B       		.uleb128 0x1b
 1535 04fe 647900   		.ascii	"dy\000"
 1536 0501 01       		.byte	0x1
 1537 0502 3A01     		.2byte	0x13a
 1538 0504 37000000 		.4byte	0x37
 1539 0508 02       		.byte	0x2
 1540 0509 91       		.byte	0x91
 1541 050a 76       		.sleb128 -10
 1542 050b 1B       		.uleb128 0x1b
 1543 050c 647400   		.ascii	"dt\000"
 1544 050f 01       		.byte	0x1
 1545 0510 3B01     		.2byte	0x13b
 1546 0512 37000000 		.4byte	0x37
 1547 0516 02       		.byte	0x2
 1548 0517 91       		.byte	0x91
 1549 0518 74       		.sleb128 -12
 1550 0519 1E       		.uleb128 0x1e
 1551 051a E0000000 		.4byte	.LASF57
 1552 051e 01       		.byte	0x1
ARM GAS  /tmp/ccpZw0wh.s 			page 34


 1553 051f 3C01     		.2byte	0x13c
 1554 0521 37000000 		.4byte	0x37
 1555 0525 02       		.byte	0x2
 1556 0526 91       		.byte	0x91
 1557 0527 72       		.sleb128 -14
 1558 0528 00       		.byte	0
 1559 0529 1F       		.uleb128 0x1f
 1560 052a 4D010000 		.4byte	.LASF58
 1561 052e 01       		.byte	0x1
 1562 052f 11       		.byte	0x11
 1563 0530 36050000 		.4byte	0x536
 1564 0534 01       		.byte	0x1
 1565 0535 01       		.byte	0x1
 1566 0536 05       		.uleb128 0x5
 1567 0537 49000000 		.4byte	0x49
 1568 053b 0D       		.uleb128 0xd
 1569 053c 49000000 		.4byte	0x49
 1570 0540 4B050000 		.4byte	0x54b
 1571 0544 0E       		.uleb128 0xe
 1572 0545 9B000000 		.4byte	0x9b
 1573 0549 07       		.byte	0x7
 1574 054a 00       		.byte	0
 1575 054b 20       		.uleb128 0x20
 1576 054c 5E010000 		.4byte	.LASF59
 1577 0550 01       		.byte	0x1
 1578 0551 19       		.byte	0x19
 1579 0552 3B050000 		.4byte	0x53b
 1580 0556 01       		.byte	0x1
 1581 0557 05       		.byte	0x5
 1582 0558 03       		.byte	0x3
 1583 0559 00000000 		.4byte	board_temp
 1584 055d 20       		.uleb128 0x20
 1585 055e 96000000 		.4byte	.LASF60
 1586 0562 01       		.byte	0x1
 1587 0563 1A       		.byte	0x1a
 1588 0564 49000000 		.4byte	0x49
 1589 0568 01       		.byte	0x1
 1590 0569 05       		.byte	0x5
 1591 056a 03       		.byte	0x3
 1592 056b 00000000 		.4byte	last_temp
 1593 056f 20       		.uleb128 0x20
 1594 0570 2E010000 		.4byte	.LASF61
 1595 0574 01       		.byte	0x1
 1596 0575 1B       		.byte	0x1b
 1597 0576 30000000 		.4byte	0x30
 1598 057a 01       		.byte	0x1
 1599 057b 05       		.byte	0x5
 1600 057c 03       		.byte	0x3
 1601 057d 00000000 		.4byte	board_temp_index
 1602 0581 20       		.uleb128 0x20
 1603 0582 BC000000 		.4byte	.LASF62
 1604 0586 01       		.byte	0x1
 1605 0587 1C       		.byte	0x1c
 1606 0588 30000000 		.4byte	0x30
 1607 058c 01       		.byte	0x1
 1608 058d 05       		.byte	0x5
 1609 058e 03       		.byte	0x3
ARM GAS  /tmp/ccpZw0wh.s 			page 35


 1610 058f 00000000 		.4byte	new_temp_sample
 1611 0593 00       		.byte	0
 1612              		.section	.debug_abbrev,"",%progbits
 1613              	.Ldebug_abbrev0:
 1614 0000 01       		.uleb128 0x1
 1615 0001 11       		.uleb128 0x11
 1616 0002 01       		.byte	0x1
 1617 0003 25       		.uleb128 0x25
 1618 0004 0E       		.uleb128 0xe
 1619 0005 13       		.uleb128 0x13
 1620 0006 0B       		.uleb128 0xb
 1621 0007 03       		.uleb128 0x3
 1622 0008 0E       		.uleb128 0xe
 1623 0009 1B       		.uleb128 0x1b
 1624 000a 0E       		.uleb128 0xe
 1625 000b 55       		.uleb128 0x55
 1626 000c 06       		.uleb128 0x6
 1627 000d 11       		.uleb128 0x11
 1628 000e 01       		.uleb128 0x1
 1629 000f 52       		.uleb128 0x52
 1630 0010 01       		.uleb128 0x1
 1631 0011 10       		.uleb128 0x10
 1632 0012 06       		.uleb128 0x6
 1633 0013 00       		.byte	0
 1634 0014 00       		.byte	0
 1635 0015 02       		.uleb128 0x2
 1636 0016 24       		.uleb128 0x24
 1637 0017 00       		.byte	0
 1638 0018 0B       		.uleb128 0xb
 1639 0019 0B       		.uleb128 0xb
 1640 001a 3E       		.uleb128 0x3e
 1641 001b 0B       		.uleb128 0xb
 1642 001c 03       		.uleb128 0x3
 1643 001d 0E       		.uleb128 0xe
 1644 001e 00       		.byte	0
 1645 001f 00       		.byte	0
 1646 0020 03       		.uleb128 0x3
 1647 0021 16       		.uleb128 0x16
 1648 0022 00       		.byte	0
 1649 0023 03       		.uleb128 0x3
 1650 0024 0E       		.uleb128 0xe
 1651 0025 3A       		.uleb128 0x3a
 1652 0026 0B       		.uleb128 0xb
 1653 0027 3B       		.uleb128 0x3b
 1654 0028 0B       		.uleb128 0xb
 1655 0029 49       		.uleb128 0x49
 1656 002a 13       		.uleb128 0x13
 1657 002b 00       		.byte	0
 1658 002c 00       		.byte	0
 1659 002d 04       		.uleb128 0x4
 1660 002e 24       		.uleb128 0x24
 1661 002f 00       		.byte	0
 1662 0030 0B       		.uleb128 0xb
 1663 0031 0B       		.uleb128 0xb
 1664 0032 3E       		.uleb128 0x3e
 1665 0033 0B       		.uleb128 0xb
 1666 0034 03       		.uleb128 0x3
ARM GAS  /tmp/ccpZw0wh.s 			page 36


 1667 0035 08       		.uleb128 0x8
 1668 0036 00       		.byte	0
 1669 0037 00       		.byte	0
 1670 0038 05       		.uleb128 0x5
 1671 0039 35       		.uleb128 0x35
 1672 003a 00       		.byte	0
 1673 003b 49       		.uleb128 0x49
 1674 003c 13       		.uleb128 0x13
 1675 003d 00       		.byte	0
 1676 003e 00       		.byte	0
 1677 003f 06       		.uleb128 0x6
 1678 0040 04       		.uleb128 0x4
 1679 0041 01       		.byte	0x1
 1680 0042 0B       		.uleb128 0xb
 1681 0043 0B       		.uleb128 0xb
 1682 0044 49       		.uleb128 0x49
 1683 0045 13       		.uleb128 0x13
 1684 0046 3A       		.uleb128 0x3a
 1685 0047 0B       		.uleb128 0xb
 1686 0048 3B       		.uleb128 0x3b
 1687 0049 05       		.uleb128 0x5
 1688 004a 01       		.uleb128 0x1
 1689 004b 13       		.uleb128 0x13
 1690 004c 00       		.byte	0
 1691 004d 00       		.byte	0
 1692 004e 07       		.uleb128 0x7
 1693 004f 28       		.uleb128 0x28
 1694 0050 00       		.byte	0
 1695 0051 03       		.uleb128 0x3
 1696 0052 0E       		.uleb128 0xe
 1697 0053 1C       		.uleb128 0x1c
 1698 0054 0B       		.uleb128 0xb
 1699 0055 00       		.byte	0
 1700 0056 00       		.byte	0
 1701 0057 08       		.uleb128 0x8
 1702 0058 28       		.uleb128 0x28
 1703 0059 00       		.byte	0
 1704 005a 03       		.uleb128 0x3
 1705 005b 08       		.uleb128 0x8
 1706 005c 1C       		.uleb128 0x1c
 1707 005d 0B       		.uleb128 0xb
 1708 005e 00       		.byte	0
 1709 005f 00       		.byte	0
 1710 0060 09       		.uleb128 0x9
 1711 0061 16       		.uleb128 0x16
 1712 0062 00       		.byte	0
 1713 0063 03       		.uleb128 0x3
 1714 0064 0E       		.uleb128 0xe
 1715 0065 3A       		.uleb128 0x3a
 1716 0066 0B       		.uleb128 0xb
 1717 0067 3B       		.uleb128 0x3b
 1718 0068 05       		.uleb128 0x5
 1719 0069 49       		.uleb128 0x49
 1720 006a 13       		.uleb128 0x13
 1721 006b 00       		.byte	0
 1722 006c 00       		.byte	0
 1723 006d 0A       		.uleb128 0xa
ARM GAS  /tmp/ccpZw0wh.s 			page 37


 1724 006e 13       		.uleb128 0x13
 1725 006f 01       		.byte	0x1
 1726 0070 0B       		.uleb128 0xb
 1727 0071 0B       		.uleb128 0xb
 1728 0072 3A       		.uleb128 0x3a
 1729 0073 0B       		.uleb128 0xb
 1730 0074 3B       		.uleb128 0x3b
 1731 0075 05       		.uleb128 0x5
 1732 0076 01       		.uleb128 0x1
 1733 0077 13       		.uleb128 0x13
 1734 0078 00       		.byte	0
 1735 0079 00       		.byte	0
 1736 007a 0B       		.uleb128 0xb
 1737 007b 0D       		.uleb128 0xd
 1738 007c 00       		.byte	0
 1739 007d 03       		.uleb128 0x3
 1740 007e 08       		.uleb128 0x8
 1741 007f 3A       		.uleb128 0x3a
 1742 0080 0B       		.uleb128 0xb
 1743 0081 3B       		.uleb128 0x3b
 1744 0082 05       		.uleb128 0x5
 1745 0083 49       		.uleb128 0x49
 1746 0084 13       		.uleb128 0x13
 1747 0085 38       		.uleb128 0x38
 1748 0086 0A       		.uleb128 0xa
 1749 0087 00       		.byte	0
 1750 0088 00       		.byte	0
 1751 0089 0C       		.uleb128 0xc
 1752 008a 0D       		.uleb128 0xd
 1753 008b 00       		.byte	0
 1754 008c 03       		.uleb128 0x3
 1755 008d 0E       		.uleb128 0xe
 1756 008e 3A       		.uleb128 0x3a
 1757 008f 0B       		.uleb128 0xb
 1758 0090 3B       		.uleb128 0x3b
 1759 0091 05       		.uleb128 0x5
 1760 0092 49       		.uleb128 0x49
 1761 0093 13       		.uleb128 0x13
 1762 0094 38       		.uleb128 0x38
 1763 0095 0A       		.uleb128 0xa
 1764 0096 00       		.byte	0
 1765 0097 00       		.byte	0
 1766 0098 0D       		.uleb128 0xd
 1767 0099 01       		.uleb128 0x1
 1768 009a 01       		.byte	0x1
 1769 009b 49       		.uleb128 0x49
 1770 009c 13       		.uleb128 0x13
 1771 009d 01       		.uleb128 0x1
 1772 009e 13       		.uleb128 0x13
 1773 009f 00       		.byte	0
 1774 00a0 00       		.byte	0
 1775 00a1 0E       		.uleb128 0xe
 1776 00a2 21       		.uleb128 0x21
 1777 00a3 00       		.byte	0
 1778 00a4 49       		.uleb128 0x49
 1779 00a5 13       		.uleb128 0x13
 1780 00a6 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccpZw0wh.s 			page 38


 1781 00a7 0B       		.uleb128 0xb
 1782 00a8 00       		.byte	0
 1783 00a9 00       		.byte	0
 1784 00aa 0F       		.uleb128 0xf
 1785 00ab 13       		.uleb128 0x13
 1786 00ac 01       		.byte	0x1
 1787 00ad 0B       		.uleb128 0xb
 1788 00ae 0B       		.uleb128 0xb
 1789 00af 3A       		.uleb128 0x3a
 1790 00b0 0B       		.uleb128 0xb
 1791 00b1 3B       		.uleb128 0x3b
 1792 00b2 0B       		.uleb128 0xb
 1793 00b3 01       		.uleb128 0x1
 1794 00b4 13       		.uleb128 0x13
 1795 00b5 00       		.byte	0
 1796 00b6 00       		.byte	0
 1797 00b7 10       		.uleb128 0x10
 1798 00b8 0D       		.uleb128 0xd
 1799 00b9 00       		.byte	0
 1800 00ba 03       		.uleb128 0x3
 1801 00bb 0E       		.uleb128 0xe
 1802 00bc 3A       		.uleb128 0x3a
 1803 00bd 0B       		.uleb128 0xb
 1804 00be 3B       		.uleb128 0x3b
 1805 00bf 0B       		.uleb128 0xb
 1806 00c0 49       		.uleb128 0x49
 1807 00c1 13       		.uleb128 0x13
 1808 00c2 38       		.uleb128 0x38
 1809 00c3 0A       		.uleb128 0xa
 1810 00c4 00       		.byte	0
 1811 00c5 00       		.byte	0
 1812 00c6 11       		.uleb128 0x11
 1813 00c7 2E       		.uleb128 0x2e
 1814 00c8 01       		.byte	0x1
 1815 00c9 3F       		.uleb128 0x3f
 1816 00ca 0C       		.uleb128 0xc
 1817 00cb 03       		.uleb128 0x3
 1818 00cc 0E       		.uleb128 0xe
 1819 00cd 3A       		.uleb128 0x3a
 1820 00ce 0B       		.uleb128 0xb
 1821 00cf 3B       		.uleb128 0x3b
 1822 00d0 0B       		.uleb128 0xb
 1823 00d1 27       		.uleb128 0x27
 1824 00d2 0C       		.uleb128 0xc
 1825 00d3 11       		.uleb128 0x11
 1826 00d4 01       		.uleb128 0x1
 1827 00d5 12       		.uleb128 0x12
 1828 00d6 01       		.uleb128 0x1
 1829 00d7 40       		.uleb128 0x40
 1830 00d8 06       		.uleb128 0x6
 1831 00d9 9642     		.uleb128 0x2116
 1832 00db 0C       		.uleb128 0xc
 1833 00dc 01       		.uleb128 0x1
 1834 00dd 13       		.uleb128 0x13
 1835 00de 00       		.byte	0
 1836 00df 00       		.byte	0
 1837 00e0 12       		.uleb128 0x12
ARM GAS  /tmp/ccpZw0wh.s 			page 39


 1838 00e1 34       		.uleb128 0x34
 1839 00e2 00       		.byte	0
 1840 00e3 03       		.uleb128 0x3
 1841 00e4 08       		.uleb128 0x8
 1842 00e5 3A       		.uleb128 0x3a
 1843 00e6 0B       		.uleb128 0xb
 1844 00e7 3B       		.uleb128 0x3b
 1845 00e8 0B       		.uleb128 0xb
 1846 00e9 49       		.uleb128 0x49
 1847 00ea 13       		.uleb128 0x13
 1848 00eb 02       		.uleb128 0x2
 1849 00ec 0A       		.uleb128 0xa
 1850 00ed 00       		.byte	0
 1851 00ee 00       		.byte	0
 1852 00ef 13       		.uleb128 0x13
 1853 00f0 2E       		.uleb128 0x2e
 1854 00f1 01       		.byte	0x1
 1855 00f2 3F       		.uleb128 0x3f
 1856 00f3 0C       		.uleb128 0xc
 1857 00f4 03       		.uleb128 0x3
 1858 00f5 0E       		.uleb128 0xe
 1859 00f6 3A       		.uleb128 0x3a
 1860 00f7 0B       		.uleb128 0xb
 1861 00f8 3B       		.uleb128 0x3b
 1862 00f9 0B       		.uleb128 0xb
 1863 00fa 27       		.uleb128 0x27
 1864 00fb 0C       		.uleb128 0xc
 1865 00fc 49       		.uleb128 0x49
 1866 00fd 13       		.uleb128 0x13
 1867 00fe 11       		.uleb128 0x11
 1868 00ff 01       		.uleb128 0x1
 1869 0100 12       		.uleb128 0x12
 1870 0101 01       		.uleb128 0x1
 1871 0102 40       		.uleb128 0x40
 1872 0103 06       		.uleb128 0x6
 1873 0104 9642     		.uleb128 0x2116
 1874 0106 0C       		.uleb128 0xc
 1875 0107 01       		.uleb128 0x1
 1876 0108 13       		.uleb128 0x13
 1877 0109 00       		.byte	0
 1878 010a 00       		.byte	0
 1879 010b 14       		.uleb128 0x14
 1880 010c 34       		.uleb128 0x34
 1881 010d 00       		.byte	0
 1882 010e 03       		.uleb128 0x3
 1883 010f 0E       		.uleb128 0xe
 1884 0110 3A       		.uleb128 0x3a
 1885 0111 0B       		.uleb128 0xb
 1886 0112 3B       		.uleb128 0x3b
 1887 0113 0B       		.uleb128 0xb
 1888 0114 49       		.uleb128 0x49
 1889 0115 13       		.uleb128 0x13
 1890 0116 02       		.uleb128 0x2
 1891 0117 0A       		.uleb128 0xa
 1892 0118 00       		.byte	0
 1893 0119 00       		.byte	0
 1894 011a 15       		.uleb128 0x15
ARM GAS  /tmp/ccpZw0wh.s 			page 40


 1895 011b 05       		.uleb128 0x5
 1896 011c 00       		.byte	0
 1897 011d 03       		.uleb128 0x3
 1898 011e 0E       		.uleb128 0xe
 1899 011f 3A       		.uleb128 0x3a
 1900 0120 0B       		.uleb128 0xb
 1901 0121 3B       		.uleb128 0x3b
 1902 0122 0B       		.uleb128 0xb
 1903 0123 49       		.uleb128 0x49
 1904 0124 13       		.uleb128 0x13
 1905 0125 02       		.uleb128 0x2
 1906 0126 0A       		.uleb128 0xa
 1907 0127 00       		.byte	0
 1908 0128 00       		.byte	0
 1909 0129 16       		.uleb128 0x16
 1910 012a 2E       		.uleb128 0x2e
 1911 012b 01       		.byte	0x1
 1912 012c 3F       		.uleb128 0x3f
 1913 012d 0C       		.uleb128 0xc
 1914 012e 03       		.uleb128 0x3
 1915 012f 0E       		.uleb128 0xe
 1916 0130 3A       		.uleb128 0x3a
 1917 0131 0B       		.uleb128 0xb
 1918 0132 3B       		.uleb128 0x3b
 1919 0133 0B       		.uleb128 0xb
 1920 0134 27       		.uleb128 0x27
 1921 0135 0C       		.uleb128 0xc
 1922 0136 11       		.uleb128 0x11
 1923 0137 01       		.uleb128 0x1
 1924 0138 12       		.uleb128 0x12
 1925 0139 01       		.uleb128 0x1
 1926 013a 40       		.uleb128 0x40
 1927 013b 06       		.uleb128 0x6
 1928 013c 9742     		.uleb128 0x2117
 1929 013e 0C       		.uleb128 0xc
 1930 013f 01       		.uleb128 0x1
 1931 0140 13       		.uleb128 0x13
 1932 0141 00       		.byte	0
 1933 0142 00       		.byte	0
 1934 0143 17       		.uleb128 0x17
 1935 0144 2E       		.uleb128 0x2e
 1936 0145 01       		.byte	0x1
 1937 0146 3F       		.uleb128 0x3f
 1938 0147 0C       		.uleb128 0xc
 1939 0148 03       		.uleb128 0x3
 1940 0149 0E       		.uleb128 0xe
 1941 014a 3A       		.uleb128 0x3a
 1942 014b 0B       		.uleb128 0xb
 1943 014c 3B       		.uleb128 0x3b
 1944 014d 0B       		.uleb128 0xb
 1945 014e 27       		.uleb128 0x27
 1946 014f 0C       		.uleb128 0xc
 1947 0150 49       		.uleb128 0x49
 1948 0151 13       		.uleb128 0x13
 1949 0152 11       		.uleb128 0x11
 1950 0153 01       		.uleb128 0x1
 1951 0154 12       		.uleb128 0x12
ARM GAS  /tmp/ccpZw0wh.s 			page 41


 1952 0155 01       		.uleb128 0x1
 1953 0156 40       		.uleb128 0x40
 1954 0157 06       		.uleb128 0x6
 1955 0158 9742     		.uleb128 0x2117
 1956 015a 0C       		.uleb128 0xc
 1957 015b 01       		.uleb128 0x1
 1958 015c 13       		.uleb128 0x13
 1959 015d 00       		.byte	0
 1960 015e 00       		.byte	0
 1961 015f 18       		.uleb128 0x18
 1962 0160 2E       		.uleb128 0x2e
 1963 0161 00       		.byte	0
 1964 0162 3F       		.uleb128 0x3f
 1965 0163 0C       		.uleb128 0xc
 1966 0164 03       		.uleb128 0x3
 1967 0165 0E       		.uleb128 0xe
 1968 0166 3A       		.uleb128 0x3a
 1969 0167 0B       		.uleb128 0xb
 1970 0168 3B       		.uleb128 0x3b
 1971 0169 05       		.uleb128 0x5
 1972 016a 27       		.uleb128 0x27
 1973 016b 0C       		.uleb128 0xc
 1974 016c 49       		.uleb128 0x49
 1975 016d 13       		.uleb128 0x13
 1976 016e 11       		.uleb128 0x11
 1977 016f 01       		.uleb128 0x1
 1978 0170 12       		.uleb128 0x12
 1979 0171 01       		.uleb128 0x1
 1980 0172 40       		.uleb128 0x40
 1981 0173 06       		.uleb128 0x6
 1982 0174 9642     		.uleb128 0x2116
 1983 0176 0C       		.uleb128 0xc
 1984 0177 00       		.byte	0
 1985 0178 00       		.byte	0
 1986 0179 19       		.uleb128 0x19
 1987 017a 2E       		.uleb128 0x2e
 1988 017b 00       		.byte	0
 1989 017c 3F       		.uleb128 0x3f
 1990 017d 0C       		.uleb128 0xc
 1991 017e 03       		.uleb128 0x3
 1992 017f 0E       		.uleb128 0xe
 1993 0180 3A       		.uleb128 0x3a
 1994 0181 0B       		.uleb128 0xb
 1995 0182 3B       		.uleb128 0x3b
 1996 0183 05       		.uleb128 0x5
 1997 0184 27       		.uleb128 0x27
 1998 0185 0C       		.uleb128 0xc
 1999 0186 11       		.uleb128 0x11
 2000 0187 01       		.uleb128 0x1
 2001 0188 12       		.uleb128 0x12
 2002 0189 01       		.uleb128 0x1
 2003 018a 40       		.uleb128 0x40
 2004 018b 06       		.uleb128 0x6
 2005 018c 9642     		.uleb128 0x2116
 2006 018e 0C       		.uleb128 0xc
 2007 018f 00       		.byte	0
 2008 0190 00       		.byte	0
ARM GAS  /tmp/ccpZw0wh.s 			page 42


 2009 0191 1A       		.uleb128 0x1a
 2010 0192 2E       		.uleb128 0x2e
 2011 0193 01       		.byte	0x1
 2012 0194 3F       		.uleb128 0x3f
 2013 0195 0C       		.uleb128 0xc
 2014 0196 03       		.uleb128 0x3
 2015 0197 0E       		.uleb128 0xe
 2016 0198 3A       		.uleb128 0x3a
 2017 0199 0B       		.uleb128 0xb
 2018 019a 3B       		.uleb128 0x3b
 2019 019b 05       		.uleb128 0x5
 2020 019c 27       		.uleb128 0x27
 2021 019d 0C       		.uleb128 0xc
 2022 019e 49       		.uleb128 0x49
 2023 019f 13       		.uleb128 0x13
 2024 01a0 11       		.uleb128 0x11
 2025 01a1 01       		.uleb128 0x1
 2026 01a2 12       		.uleb128 0x12
 2027 01a3 01       		.uleb128 0x1
 2028 01a4 40       		.uleb128 0x40
 2029 01a5 06       		.uleb128 0x6
 2030 01a6 9742     		.uleb128 0x2117
 2031 01a8 0C       		.uleb128 0xc
 2032 01a9 01       		.uleb128 0x1
 2033 01aa 13       		.uleb128 0x13
 2034 01ab 00       		.byte	0
 2035 01ac 00       		.byte	0
 2036 01ad 1B       		.uleb128 0x1b
 2037 01ae 34       		.uleb128 0x34
 2038 01af 00       		.byte	0
 2039 01b0 03       		.uleb128 0x3
 2040 01b1 08       		.uleb128 0x8
 2041 01b2 3A       		.uleb128 0x3a
 2042 01b3 0B       		.uleb128 0xb
 2043 01b4 3B       		.uleb128 0x3b
 2044 01b5 05       		.uleb128 0x5
 2045 01b6 49       		.uleb128 0x49
 2046 01b7 13       		.uleb128 0x13
 2047 01b8 02       		.uleb128 0x2
 2048 01b9 0A       		.uleb128 0xa
 2049 01ba 00       		.byte	0
 2050 01bb 00       		.byte	0
 2051 01bc 1C       		.uleb128 0x1c
 2052 01bd 2E       		.uleb128 0x2e
 2053 01be 01       		.byte	0x1
 2054 01bf 3F       		.uleb128 0x3f
 2055 01c0 0C       		.uleb128 0xc
 2056 01c1 03       		.uleb128 0x3
 2057 01c2 0E       		.uleb128 0xe
 2058 01c3 3A       		.uleb128 0x3a
 2059 01c4 0B       		.uleb128 0xb
 2060 01c5 3B       		.uleb128 0x3b
 2061 01c6 05       		.uleb128 0x5
 2062 01c7 27       		.uleb128 0x27
 2063 01c8 0C       		.uleb128 0xc
 2064 01c9 49       		.uleb128 0x49
 2065 01ca 13       		.uleb128 0x13
ARM GAS  /tmp/ccpZw0wh.s 			page 43


 2066 01cb 11       		.uleb128 0x11
 2067 01cc 01       		.uleb128 0x1
 2068 01cd 12       		.uleb128 0x12
 2069 01ce 01       		.uleb128 0x1
 2070 01cf 40       		.uleb128 0x40
 2071 01d0 06       		.uleb128 0x6
 2072 01d1 9642     		.uleb128 0x2116
 2073 01d3 0C       		.uleb128 0xc
 2074 01d4 01       		.uleb128 0x1
 2075 01d5 13       		.uleb128 0x13
 2076 01d6 00       		.byte	0
 2077 01d7 00       		.byte	0
 2078 01d8 1D       		.uleb128 0x1d
 2079 01d9 05       		.uleb128 0x5
 2080 01da 00       		.byte	0
 2081 01db 03       		.uleb128 0x3
 2082 01dc 0E       		.uleb128 0xe
 2083 01dd 3A       		.uleb128 0x3a
 2084 01de 0B       		.uleb128 0xb
 2085 01df 3B       		.uleb128 0x3b
 2086 01e0 05       		.uleb128 0x5
 2087 01e1 49       		.uleb128 0x49
 2088 01e2 13       		.uleb128 0x13
 2089 01e3 02       		.uleb128 0x2
 2090 01e4 0A       		.uleb128 0xa
 2091 01e5 00       		.byte	0
 2092 01e6 00       		.byte	0
 2093 01e7 1E       		.uleb128 0x1e
 2094 01e8 34       		.uleb128 0x34
 2095 01e9 00       		.byte	0
 2096 01ea 03       		.uleb128 0x3
 2097 01eb 0E       		.uleb128 0xe
 2098 01ec 3A       		.uleb128 0x3a
 2099 01ed 0B       		.uleb128 0xb
 2100 01ee 3B       		.uleb128 0x3b
 2101 01ef 05       		.uleb128 0x5
 2102 01f0 49       		.uleb128 0x49
 2103 01f1 13       		.uleb128 0x13
 2104 01f2 02       		.uleb128 0x2
 2105 01f3 0A       		.uleb128 0xa
 2106 01f4 00       		.byte	0
 2107 01f5 00       		.byte	0
 2108 01f6 1F       		.uleb128 0x1f
 2109 01f7 34       		.uleb128 0x34
 2110 01f8 00       		.byte	0
 2111 01f9 03       		.uleb128 0x3
 2112 01fa 0E       		.uleb128 0xe
 2113 01fb 3A       		.uleb128 0x3a
 2114 01fc 0B       		.uleb128 0xb
 2115 01fd 3B       		.uleb128 0x3b
 2116 01fe 0B       		.uleb128 0xb
 2117 01ff 49       		.uleb128 0x49
 2118 0200 13       		.uleb128 0x13
 2119 0201 3F       		.uleb128 0x3f
 2120 0202 0C       		.uleb128 0xc
 2121 0203 3C       		.uleb128 0x3c
 2122 0204 0C       		.uleb128 0xc
ARM GAS  /tmp/ccpZw0wh.s 			page 44


 2123 0205 00       		.byte	0
 2124 0206 00       		.byte	0
 2125 0207 20       		.uleb128 0x20
 2126 0208 34       		.uleb128 0x34
 2127 0209 00       		.byte	0
 2128 020a 03       		.uleb128 0x3
 2129 020b 0E       		.uleb128 0xe
 2130 020c 3A       		.uleb128 0x3a
 2131 020d 0B       		.uleb128 0xb
 2132 020e 3B       		.uleb128 0x3b
 2133 020f 0B       		.uleb128 0xb
 2134 0210 49       		.uleb128 0x49
 2135 0211 13       		.uleb128 0x13
 2136 0212 3F       		.uleb128 0x3f
 2137 0213 0C       		.uleb128 0xc
 2138 0214 02       		.uleb128 0x2
 2139 0215 0A       		.uleb128 0xa
 2140 0216 00       		.byte	0
 2141 0217 00       		.byte	0
 2142 0218 00       		.byte	0
 2143              		.section	.debug_loc,"",%progbits
 2144              	.Ldebug_loc0:
 2145              	.LLST0:
 2146 0000 00000000 		.4byte	.LFB20
 2147 0004 02000000 		.4byte	.LCFI0
 2148 0008 0200     		.2byte	0x2
 2149 000a 7D       		.byte	0x7d
 2150 000b 00       		.sleb128 0
 2151 000c 02000000 		.4byte	.LCFI0
 2152 0010 04000000 		.4byte	.LCFI1
 2153 0014 0200     		.2byte	0x2
 2154 0016 7D       		.byte	0x7d
 2155 0017 04       		.sleb128 4
 2156 0018 04000000 		.4byte	.LCFI1
 2157 001c AC000000 		.4byte	.LFE20
 2158 0020 0200     		.2byte	0x2
 2159 0022 7D       		.byte	0x7d
 2160 0023 10       		.sleb128 16
 2161 0024 00000000 		.4byte	0
 2162 0028 00000000 		.4byte	0
 2163              	.LLST1:
 2164 002c 00000000 		.4byte	.LFB21
 2165 0030 02000000 		.4byte	.LCFI2
 2166 0034 0200     		.2byte	0x2
 2167 0036 7D       		.byte	0x7d
 2168 0037 00       		.sleb128 0
 2169 0038 02000000 		.4byte	.LCFI2
 2170 003c 04000000 		.4byte	.LCFI3
 2171 0040 0200     		.2byte	0x2
 2172 0042 7D       		.byte	0x7d
 2173 0043 04       		.sleb128 4
 2174 0044 04000000 		.4byte	.LCFI3
 2175 0048 A0000000 		.4byte	.LFE21
 2176 004c 0200     		.2byte	0x2
 2177 004e 7D       		.byte	0x7d
 2178 004f 28       		.sleb128 40
 2179 0050 00000000 		.4byte	0
ARM GAS  /tmp/ccpZw0wh.s 			page 45


 2180 0054 00000000 		.4byte	0
 2181              	.LLST2:
 2182 0058 00000000 		.4byte	.LFB22
 2183 005c 02000000 		.4byte	.LCFI4
 2184 0060 0200     		.2byte	0x2
 2185 0062 7D       		.byte	0x7d
 2186 0063 00       		.sleb128 0
 2187 0064 02000000 		.4byte	.LCFI4
 2188 0068 04000000 		.4byte	.LCFI5
 2189 006c 0200     		.2byte	0x2
 2190 006e 7D       		.byte	0x7d
 2191 006f 04       		.sleb128 4
 2192 0070 04000000 		.4byte	.LCFI5
 2193 0074 54000000 		.4byte	.LFE22
 2194 0078 0200     		.2byte	0x2
 2195 007a 7D       		.byte	0x7d
 2196 007b 18       		.sleb128 24
 2197 007c 00000000 		.4byte	0
 2198 0080 00000000 		.4byte	0
 2199              	.LLST3:
 2200 0084 00000000 		.4byte	.LFB23
 2201 0088 02000000 		.4byte	.LCFI6
 2202 008c 0200     		.2byte	0x2
 2203 008e 7D       		.byte	0x7d
 2204 008f 00       		.sleb128 0
 2205 0090 02000000 		.4byte	.LCFI6
 2206 0094 28000000 		.4byte	.LFE23
 2207 0098 0200     		.2byte	0x2
 2208 009a 7D       		.byte	0x7d
 2209 009b 08       		.sleb128 8
 2210 009c 00000000 		.4byte	0
 2211 00a0 00000000 		.4byte	0
 2212              	.LLST4:
 2213 00a4 00000000 		.4byte	.LFB24
 2214 00a8 02000000 		.4byte	.LCFI7
 2215 00ac 0200     		.2byte	0x2
 2216 00ae 7D       		.byte	0x7d
 2217 00af 00       		.sleb128 0
 2218 00b0 02000000 		.4byte	.LCFI7
 2219 00b4 34000000 		.4byte	.LFE24
 2220 00b8 0200     		.2byte	0x2
 2221 00ba 7D       		.byte	0x7d
 2222 00bb 08       		.sleb128 8
 2223 00bc 00000000 		.4byte	0
 2224 00c0 00000000 		.4byte	0
 2225              	.LLST5:
 2226 00c4 00000000 		.4byte	.LFB25
 2227 00c8 02000000 		.4byte	.LCFI8
 2228 00cc 0200     		.2byte	0x2
 2229 00ce 7D       		.byte	0x7d
 2230 00cf 00       		.sleb128 0
 2231 00d0 02000000 		.4byte	.LCFI8
 2232 00d4 94000000 		.4byte	.LFE25
 2233 00d8 0200     		.2byte	0x2
 2234 00da 7D       		.byte	0x7d
 2235 00db 08       		.sleb128 8
 2236 00dc 00000000 		.4byte	0
ARM GAS  /tmp/ccpZw0wh.s 			page 46


 2237 00e0 00000000 		.4byte	0
 2238              	.LLST6:
 2239 00e4 00000000 		.4byte	.LFB26
 2240 00e8 02000000 		.4byte	.LCFI9
 2241 00ec 0200     		.2byte	0x2
 2242 00ee 7D       		.byte	0x7d
 2243 00ef 00       		.sleb128 0
 2244 00f0 02000000 		.4byte	.LCFI9
 2245 00f4 0E000000 		.4byte	.LFE26
 2246 00f8 0200     		.2byte	0x2
 2247 00fa 7D       		.byte	0x7d
 2248 00fb 08       		.sleb128 8
 2249 00fc 00000000 		.4byte	0
 2250 0100 00000000 		.4byte	0
 2251              	.LLST7:
 2252 0104 00000000 		.4byte	.LFB27
 2253 0108 02000000 		.4byte	.LCFI10
 2254 010c 0200     		.2byte	0x2
 2255 010e 7D       		.byte	0x7d
 2256 010f 00       		.sleb128 0
 2257 0110 02000000 		.4byte	.LCFI10
 2258 0114 64000000 		.4byte	.LFE27
 2259 0118 0200     		.2byte	0x2
 2260 011a 7D       		.byte	0x7d
 2261 011b 08       		.sleb128 8
 2262 011c 00000000 		.4byte	0
 2263 0120 00000000 		.4byte	0
 2264              	.LLST8:
 2265 0124 00000000 		.4byte	.LFB28
 2266 0128 02000000 		.4byte	.LCFI11
 2267 012c 0200     		.2byte	0x2
 2268 012e 7D       		.byte	0x7d
 2269 012f 00       		.sleb128 0
 2270 0130 02000000 		.4byte	.LCFI11
 2271 0134 6C000000 		.4byte	.LFE28
 2272 0138 0200     		.2byte	0x2
 2273 013a 7D       		.byte	0x7d
 2274 013b 08       		.sleb128 8
 2275 013c 00000000 		.4byte	0
 2276 0140 00000000 		.4byte	0
 2277              	.LLST9:
 2278 0144 00000000 		.4byte	.LFB29
 2279 0148 02000000 		.4byte	.LCFI12
 2280 014c 0200     		.2byte	0x2
 2281 014e 7D       		.byte	0x7d
 2282 014f 00       		.sleb128 0
 2283 0150 02000000 		.4byte	.LCFI12
 2284 0154 04000000 		.4byte	.LCFI13
 2285 0158 0200     		.2byte	0x2
 2286 015a 7D       		.byte	0x7d
 2287 015b 04       		.sleb128 4
 2288 015c 04000000 		.4byte	.LCFI13
 2289 0160 A4000000 		.4byte	.LFE29
 2290 0164 0200     		.2byte	0x2
 2291 0166 7D       		.byte	0x7d
 2292 0167 18       		.sleb128 24
 2293 0168 00000000 		.4byte	0
ARM GAS  /tmp/ccpZw0wh.s 			page 47


 2294 016c 00000000 		.4byte	0
 2295              		.section	.debug_aranges,"",%progbits
 2296 0000 64000000 		.4byte	0x64
 2297 0004 0200     		.2byte	0x2
 2298 0006 00000000 		.4byte	.Ldebug_info0
 2299 000a 04       		.byte	0x4
 2300 000b 00       		.byte	0
 2301 000c 0000     		.2byte	0
 2302 000e 0000     		.2byte	0
 2303 0010 00000000 		.4byte	.LFB20
 2304 0014 AC000000 		.4byte	.LFE20-.LFB20
 2305 0018 00000000 		.4byte	.LFB21
 2306 001c A0000000 		.4byte	.LFE21-.LFB21
 2307 0020 00000000 		.4byte	.LFB22
 2308 0024 54000000 		.4byte	.LFE22-.LFB22
 2309 0028 00000000 		.4byte	.LFB23
 2310 002c 28000000 		.4byte	.LFE23-.LFB23
 2311 0030 00000000 		.4byte	.LFB24
 2312 0034 34000000 		.4byte	.LFE24-.LFB24
 2313 0038 00000000 		.4byte	.LFB25
 2314 003c 94000000 		.4byte	.LFE25-.LFB25
 2315 0040 00000000 		.4byte	.LFB26
 2316 0044 0E000000 		.4byte	.LFE26-.LFB26
 2317 0048 00000000 		.4byte	.LFB27
 2318 004c 64000000 		.4byte	.LFE27-.LFB27
 2319 0050 00000000 		.4byte	.LFB28
 2320 0054 6C000000 		.4byte	.LFE28-.LFB28
 2321 0058 00000000 		.4byte	.LFB29
 2322 005c A4000000 		.4byte	.LFE29-.LFB29
 2323 0060 00000000 		.4byte	0
 2324 0064 00000000 		.4byte	0
 2325              		.section	.debug_ranges,"",%progbits
 2326              	.Ldebug_ranges0:
 2327 0000 00000000 		.4byte	.LFB20
 2328 0004 AC000000 		.4byte	.LFE20
 2329 0008 00000000 		.4byte	.LFB21
 2330 000c A0000000 		.4byte	.LFE21
 2331 0010 00000000 		.4byte	.LFB22
 2332 0014 54000000 		.4byte	.LFE22
 2333 0018 00000000 		.4byte	.LFB23
 2334 001c 28000000 		.4byte	.LFE23
 2335 0020 00000000 		.4byte	.LFB24
 2336 0024 34000000 		.4byte	.LFE24
 2337 0028 00000000 		.4byte	.LFB25
 2338 002c 94000000 		.4byte	.LFE25
 2339 0030 00000000 		.4byte	.LFB26
 2340 0034 0E000000 		.4byte	.LFE26
 2341 0038 00000000 		.4byte	.LFB27
 2342 003c 64000000 		.4byte	.LFE27
 2343 0040 00000000 		.4byte	.LFB28
 2344 0044 6C000000 		.4byte	.LFE28
 2345 0048 00000000 		.4byte	.LFB29
 2346 004c A4000000 		.4byte	.LFE29
 2347 0050 00000000 		.4byte	0
 2348 0054 00000000 		.4byte	0
 2349              		.section	.debug_line,"",%progbits
 2350              	.Ldebug_line0:
ARM GAS  /tmp/ccpZw0wh.s 			page 48


 2351 0000 86020000 		.section	.debug_str,"MS",%progbits,1
 2351      02004D01 
 2351      00000201 
 2351      FB0E0D00 
 2351      01010101 
 2352              	.LASF41:
 2353 0000 4144435F 		.ascii	"ADC_ExternalTrigConv\000"
 2353      45787465 
 2353      726E616C 
 2353      54726967 
 2353      436F6E76 
 2354              	.LASF15:
 2355 0015 44495341 		.ascii	"DISABLE\000"
 2355      424C4500 
 2356              	.LASF9:
 2357 001d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2357      206C6F6E 
 2357      6720756E 
 2357      7369676E 
 2357      65642069 
 2358              	.LASF20:
 2359 0034 534D5052 		.ascii	"SMPR\000"
 2359      00
 2360              	.LASF8:
 2361 0039 6C6F6E67 		.ascii	"long long int\000"
 2361      206C6F6E 
 2361      6720696E 
 2361      7400
 2362              	.LASF0:
 2363 0047 7369676E 		.ascii	"signed char\000"
 2363      65642063 
 2363      68617200 
 2364              	.LASF64:
 2365 0053 7372632F 		.ascii	"src/adc.c\000"
 2365      6164632E 
 2365      6300
 2366              	.LASF48:
 2367 005d 746D7072 		.ascii	"tmpreg\000"
 2367      656700
 2368              	.LASF46:
 2369 0064 4144435F 		.ascii	"ADC_Conf\000"
 2369      436F6E66 
 2369      00
 2370              	.LASF39:
 2371 006d 4144435F 		.ascii	"ADC_ContinuousConvMode\000"
 2371      436F6E74 
 2371      696E756F 
 2371      7573436F 
 2371      6E764D6F 
 2372              	.LASF4:
 2373 0084 6C6F6E67 		.ascii	"long int\000"
 2373      20696E74 
 2373      00
 2374              	.LASF29:
 2375 008d 41504232 		.ascii	"APB2RSTR\000"
 2375      52535452 
 2375      00
ARM GAS  /tmp/ccpZw0wh.s 			page 49


 2376              	.LASF60:
 2377 0096 6C617374 		.ascii	"last_temp\000"
 2377      5F74656D 
 2377      7000
 2378              	.LASF16:
 2379 00a0 454E4142 		.ascii	"ENABLE\000"
 2379      4C4500
 2380              	.LASF11:
 2381 00a7 75696E74 		.ascii	"uint16_t\000"
 2381      31365F74 
 2381      00
 2382              	.LASF26:
 2383 00b0 4144435F 		.ascii	"ADC_TypeDef\000"
 2383      54797065 
 2383      44656600 
 2384              	.LASF62:
 2385 00bc 6E65775F 		.ascii	"new_temp_sample\000"
 2385      74656D70 
 2385      5F73616D 
 2385      706C6500 
 2386              	.LASF6:
 2387 00cc 5F5F7569 		.ascii	"__uint32_t\000"
 2387      6E743332 
 2387      5F7400
 2388              	.LASF47:
 2389 00d7 52656164 		.ascii	"ReadADC1\000"
 2389      41444331 
 2389      00
 2390              	.LASF57:
 2391 00e0 74656D70 		.ascii	"temp\000"
 2391      00
 2392              	.LASF67:
 2393 00e5 55706461 		.ascii	"UpdateTemp\000"
 2393      74655465 
 2393      6D7000
 2394              	.LASF10:
 2395 00f0 756E7369 		.ascii	"unsigned int\000"
 2395      676E6564 
 2395      20696E74 
 2395      00
 2396              	.LASF7:
 2397 00fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2397      20756E73 
 2397      69676E65 
 2397      6420696E 
 2397      7400
 2398              	.LASF37:
 2399 010f 5243435F 		.ascii	"RCC_TypeDef\000"
 2399      54797065 
 2399      44656600 
 2400              	.LASF3:
 2401 011b 73686F72 		.ascii	"short unsigned int\000"
 2401      7420756E 
 2401      7369676E 
 2401      65642069 
 2401      6E7400
 2402              	.LASF61:
ARM GAS  /tmp/ccpZw0wh.s 			page 50


 2403 012e 626F6172 		.ascii	"board_temp_index\000"
 2403      645F7465 
 2403      6D705F69 
 2403      6E646578 
 2403      00
 2404              	.LASF24:
 2405 013f 43485345 		.ascii	"CHSELR\000"
 2405      4C5200
 2406              	.LASF66:
 2407 0146 4765744C 		.ascii	"GetLDR\000"
 2407      445200
 2408              	.LASF58:
 2409 014d 74616B65 		.ascii	"take_temp_sample\000"
 2409      5F74656D 
 2409      705F7361 
 2409      6D706C65 
 2409      00
 2410              	.LASF59:
 2411 015e 626F6172 		.ascii	"board_temp\000"
 2411      645F7465 
 2411      6D7000
 2412              	.LASF13:
 2413 0169 73697A65 		.ascii	"sizetype\000"
 2413      74797065 
 2413      00
 2414              	.LASF45:
 2415 0172 4144435F 		.ascii	"ADC_InitStructure\000"
 2415      496E6974 
 2415      53747275 
 2415      63747572 
 2415      6500
 2416              	.LASF54:
 2417 0184 47657454 		.ascii	"GetTemp\000"
 2417      656D7000 
 2418              	.LASF27:
 2419 018c 4144435F 		.ascii	"ADC_Common_TypeDef\000"
 2419      436F6D6D 
 2419      6F6E5F54 
 2419      79706544 
 2419      656600
 2420              	.LASF50:
 2421 019f 53657441 		.ascii	"SetADC1_SampleTime\000"
 2421      4443315F 
 2421      53616D70 
 2421      6C655469 
 2421      6D6500
 2422              	.LASF17:
 2423 01b2 46756E63 		.ascii	"FunctionalState\000"
 2423      74696F6E 
 2423      616C5374 
 2423      61746500 
 2424              	.LASF35:
 2425 01c2 41484252 		.ascii	"AHBRSTR\000"
 2425      53545200 
 2426              	.LASF30:
 2427 01ca 41504231 		.ascii	"APB1RSTR\000"
 2427      52535452 
ARM GAS  /tmp/ccpZw0wh.s 			page 51


 2427      00
 2428              	.LASF65:
 2429 01d3 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 2429      652F6D65 
 2429      642F446F 
 2429      63756D65 
 2429      6E74732F 
 2430 0206 6100     		.ascii	"a\000"
 2431              	.LASF43:
 2432 0208 4144435F 		.ascii	"ADC_ScanDirection\000"
 2432      5363616E 
 2432      44697265 
 2432      6374696F 
 2432      6E00
 2433              	.LASF21:
 2434 021a 52455345 		.ascii	"RESERVED1\000"
 2434      52564544 
 2434      3100
 2435              	.LASF22:
 2436 0224 52455345 		.ascii	"RESERVED2\000"
 2436      52564544 
 2436      3200
 2437              	.LASF23:
 2438 022e 52455345 		.ascii	"RESERVED3\000"
 2438      52564544 
 2438      3300
 2439              	.LASF25:
 2440 0238 52455345 		.ascii	"RESERVED4\000"
 2440      52564544 
 2440      3400
 2441              	.LASF14:
 2442 0242 52455345 		.ascii	"RESET\000"
 2442      5400
 2443              	.LASF1:
 2444 0248 756E7369 		.ascii	"unsigned char\000"
 2444      676E6564 
 2444      20636861 
 2444      7200
 2445              	.LASF56:
 2446 0256 745F7361 		.ascii	"t_sample\000"
 2446      6D706C65 
 2446      00
 2447              	.LASF2:
 2448 025f 73686F72 		.ascii	"short int\000"
 2448      7420696E 
 2448      7400
 2449              	.LASF40:
 2450 0269 4144435F 		.ascii	"ADC_ExternalTrigConvEdge\000"
 2450      45787465 
 2450      726E616C 
 2450      54726967 
 2450      436F6E76 
 2451              	.LASF53:
 2452 0282 52656164 		.ascii	"ReadADC1Check\000"
 2452      41444331 
 2452      43686563 
 2452      6B00
ARM GAS  /tmp/ccpZw0wh.s 			page 52


 2453              	.LASF32:
 2454 0290 41504232 		.ascii	"APB2ENR\000"
 2454      454E5200 
 2455              	.LASF52:
 2456 0298 6368616E 		.ascii	"channel\000"
 2456      6E656C00 
 2457              	.LASF44:
 2458 02a0 4144435F 		.ascii	"ADC_InitTypeDef\000"
 2458      496E6974 
 2458      54797065 
 2458      44656600 
 2459              	.LASF12:
 2460 02b0 75696E74 		.ascii	"uint32_t\000"
 2460      33325F74 
 2460      00
 2461              	.LASF42:
 2462 02b9 4144435F 		.ascii	"ADC_DataAlign\000"
 2462      44617461 
 2462      416C6967 
 2462      6E00
 2463              	.LASF5:
 2464 02c7 5F5F7569 		.ascii	"__uint16_t\000"
 2464      6E743136 
 2464      5F7400
 2465              	.LASF49:
 2466 02d2 41646343 		.ascii	"AdcConfig\000"
 2466      6F6E6669 
 2466      6700
 2467              	.LASF51:
 2468 02dc 52656164 		.ascii	"ReadADC1_SameSampleTime\000"
 2468      41444331 
 2468      5F53616D 
 2468      6553616D 
 2468      706C6554 
 2469              	.LASF33:
 2470 02f4 41504231 		.ascii	"APB1ENR\000"
 2470      454E5200 
 2471              	.LASF55:
 2472 02fc 436F6E76 		.ascii	"ConvertTemp\000"
 2472      65727454 
 2472      656D7000 
 2473              	.LASF34:
 2474 0308 42444352 		.ascii	"BDCR\000"
 2474      00
 2475              	.LASF18:
 2476 030d 43464752 		.ascii	"CFGR1\000"
 2476      3100
 2477              	.LASF19:
 2478 0313 43464752 		.ascii	"CFGR2\000"
 2478      3200
 2479              	.LASF36:
 2480 0319 43464752 		.ascii	"CFGR3\000"
 2480      3300
 2481              	.LASF28:
 2482 031f 43464752 		.ascii	"CFGR\000"
 2482      00
 2483              	.LASF38:
ARM GAS  /tmp/ccpZw0wh.s 			page 53


 2484 0324 4144435F 		.ascii	"ADC_Resolution\000"
 2484      5265736F 
 2484      6C757469 
 2484      6F6E00
 2485              	.LASF63:
 2486 0333 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 2486      43313120 
 2486      352E322E 
 2486      31203230 
 2486      31353132 
 2487 0366 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 2487      20726576 
 2487      6973696F 
 2487      6E203233 
 2487      31383438 
 2488 0399 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 2488      662D3220 
 2488      2D4F3020 
 2488      2D666F6D 
 2488      69742D66 
 2489 03cc 66756E63 		.ascii	"function-sections\000"
 2489      74696F6E 
 2489      2D736563 
 2489      74696F6E 
 2489      7300
 2490              	.LASF31:
 2491 03de 41484245 		.ascii	"AHBENR\000"
 2491      4E5200
 2492              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccpZw0wh.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
                            *COM*:00000010 board_temp
     /tmp/ccpZw0wh.s:60     .bss.last_temp:00000000 last_temp
     /tmp/ccpZw0wh.s:57     .bss.last_temp:00000000 $d
     /tmp/ccpZw0wh.s:66     .bss.board_temp_index:00000000 board_temp_index
     /tmp/ccpZw0wh.s:67     .bss.board_temp_index:00000000 $d
     /tmp/ccpZw0wh.s:72     .bss.new_temp_sample:00000000 new_temp_sample
     /tmp/ccpZw0wh.s:73     .bss.new_temp_sample:00000000 $d
     /tmp/ccpZw0wh.s:75     .text.AdcConfig:00000000 $t
     /tmp/ccpZw0wh.s:80     .text.AdcConfig:00000000 AdcConfig
     /tmp/ccpZw0wh.s:189    .text.AdcConfig:0000009c $d
     /tmp/ccpZw0wh.s:197    .text.ADC_Conf:00000000 $t
     /tmp/ccpZw0wh.s:202    .text.ADC_Conf:00000000 ADC_Conf
     /tmp/ccpZw0wh.s:383    .text.SetADC1_SampleTime:00000000 SetADC1_SampleTime
     /tmp/ccpZw0wh.s:302    .text.ADC_Conf:00000098 $d
     /tmp/ccpZw0wh.s:308    .text.ReadADC1:00000000 $t
     /tmp/ccpZw0wh.s:313    .text.ReadADC1:00000000 ReadADC1
     /tmp/ccpZw0wh.s:373    .text.ReadADC1:00000050 $d
     /tmp/ccpZw0wh.s:378    .text.SetADC1_SampleTime:00000000 $t
     /tmp/ccpZw0wh.s:415    .text.SetADC1_SampleTime:00000024 $d
     /tmp/ccpZw0wh.s:420    .text.ReadADC1_SameSampleTime:00000000 $t
     /tmp/ccpZw0wh.s:425    .text.ReadADC1_SameSampleTime:00000000 ReadADC1_SameSampleTime
     /tmp/ccpZw0wh.s:465    .text.ReadADC1_SameSampleTime:00000030 $d
     /tmp/ccpZw0wh.s:470    .text.ReadADC1Check:00000000 $t
     /tmp/ccpZw0wh.s:475    .text.ReadADC1Check:00000000 ReadADC1Check
     /tmp/ccpZw0wh.s:582    .text.ReadADC1Check:0000008c $d
     /tmp/ccpZw0wh.s:588    .text.GetLDR:00000000 $t
     /tmp/ccpZw0wh.s:593    .text.GetLDR:00000000 GetLDR
     /tmp/ccpZw0wh.s:614    .text.UpdateTemp:00000000 $t
     /tmp/ccpZw0wh.s:619    .text.UpdateTemp:00000000 UpdateTemp
     /tmp/ccpZw0wh.s:683    .text.UpdateTemp:00000054 $d
     /tmp/ccpZw0wh.s:691    .text.GetTemp:00000000 $t
     /tmp/ccpZw0wh.s:696    .text.GetTemp:00000000 GetTemp
     /tmp/ccpZw0wh.s:766    .text.GetTemp:00000060 $d
     /tmp/ccpZw0wh.s:774    .text.ConvertTemp:00000000 $t
     /tmp/ccpZw0wh.s:779    .text.ConvertTemp:00000000 ConvertTemp
     /tmp/ccpZw0wh.s:878    .text.ConvertTemp:0000009c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ADC_GetCalibrationFactor
ADC_ClockModeConfig
ADC_DeInit
ADC_StructInit
ADC_Init
ADC_Cmd
ADC_StartOfConversion
ADC_GetFlagStatus
ADC_GetConversionValue
take_temp_sample
__aeabi_idiv
