ARM GAS  /tmp/ccCNyPsy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"sim900_800.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ src/sim900_800.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip src/sim900_800.o -g -gdwarf-2 -O0 -Wall
  24              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.comm	buffUARTGSMrx,256,4
  55              		.comm	buffUARTGSMrx2,256,4
  56              		.comm	pBuffUARTGSMrxW,4,4
  57              		.comm	pBuffUARTGSMrxR,4,4
ARM GAS  /tmp/ccCNyPsy.s 			page 2


  58              		.comm	counterUARTGSM,1,1
  59              		.comm	PacketReadyUARTGSM,1,1
  60              		.comm	buffUARTGSMtx,256,4
  61              		.comm	pBuffUARTGSMtxR,4,4
  62              		.comm	pBuffUARTGSMtxW,4,4
  63              		.global	GSMStartState
  64              		.section	.bss.GSMStartState,"aw",%nobits
  65              		.type	GSMStartState, %object
  66              		.size	GSMStartState, 1
  67              	GSMStartState:
  68 0000 00       		.space	1
  69              		.comm	GSMStartTime,2,2
  70              		.global	GSMSendCommandState
  71              		.section	.bss.GSMSendCommandState,"aw",%nobits
  72              		.type	GSMSendCommandState, %object
  73              		.size	GSMSendCommandState, 1
  74              	GSMSendCommandState:
  75 0000 00       		.space	1
  76              		.global	GSMSendCommandFlag
  77              		.section	.bss.GSMSendCommandFlag,"aw",%nobits
  78              		.type	GSMSendCommandFlag, %object
  79              		.size	GSMSendCommandFlag, 1
  80              	GSMSendCommandFlag:
  81 0000 00       		.space	1
  82              		.comm	GSMSendCommandTimeOut,2,2
  83              		.global	GSMSendCommandIntento
  84              		.section	.bss.GSMSendCommandIntento,"aw",%nobits
  85              		.type	GSMSendCommandIntento, %object
  86              		.size	GSMSendCommandIntento, 1
  87              	GSMSendCommandIntento:
  88 0000 00       		.space	1
  89              		.global	GSMSendSMSState
  90              		.section	.bss.GSMSendSMSState,"aw",%nobits
  91              		.type	GSMSendSMSState, %object
  92              		.size	GSMSendSMSState, 1
  93              	GSMSendSMSState:
  94 0000 00       		.space	1
  95              		.global	GSMSendSMSFlag
  96              		.section	.bss.GSMSendSMSFlag,"aw",%nobits
  97              		.type	GSMSendSMSFlag, %object
  98              		.size	GSMSendSMSFlag, 1
  99              	GSMSendSMSFlag:
 100 0000 00       		.space	1
 101              		.comm	GSMSendSMSTimeOut,2,2
 102              		.comm	GSMSendSMSbuffAux,32,4
 103              		.global	GSMConfigState
 104              		.section	.bss.GSMConfigState,"aw",%nobits
 105              		.type	GSMConfigState, %object
 106              		.size	GSMConfigState, 1
 107              	GSMConfigState:
 108 0000 00       		.space	1
 109              		.comm	GSMConfigTimeOut,2,2
 110              		.comm	GSMConfigTime,2,2
 111              		.comm	GSMConfigGPRSTimeOut,2,2
 112              		.global	GSMConfigGPRSState
 113              		.section	.bss.GSMConfigGPRSState,"aw",%nobits
 114              		.type	GSMConfigGPRSState, %object
ARM GAS  /tmp/ccCNyPsy.s 			page 3


 115              		.size	GSMConfigGPRSState, 1
 116              	GSMConfigGPRSState:
 117 0000 00       		.space	1
 118              		.global	GSMConfigGPRSflag
 119              		.section	.bss.GSMConfigGPRSflag,"aw",%nobits
 120              		.type	GSMConfigGPRSflag, %object
 121              		.size	GSMConfigGPRSflag, 1
 122              	GSMConfigGPRSflag:
 123 0000 00       		.space	1
 124              		.comm	GSMbuffStatus,32,4
 125              		.comm	GSMbuffGPRSCommand,64,4
 126              		.comm	GSMIPadd,16,4
 127              		.global	GPRSrssi
 128              		.section	.data.GPRSrssi,"aw",%progbits
 129              		.type	GPRSrssi, %object
 130              		.size	GPRSrssi, 1
 131              	GPRSrssi:
 132 0000 63       		.byte	99
 133              		.global	GSMSendIPState
 134              		.section	.bss.GSMSendIPState,"aw",%nobits
 135              		.type	GSMSendIPState, %object
 136              		.size	GSMSendIPState, 1
 137              	GSMSendIPState:
 138 0000 00       		.space	1
 139              		.global	GSMSendIPFlag
 140              		.section	.bss.GSMSendIPFlag,"aw",%nobits
 141              		.type	GSMSendIPFlag, %object
 142              		.size	GSMSendIPFlag, 1
 143              	GSMSendIPFlag:
 144 0000 00       		.space	1
 145              		.comm	GSMSendIPTimeOut,2,2
 146              		.comm	GSMSendIPbuffAux,32,4
 147              		.comm	GSMbuffRtaCommand,256,4
 148              		.comm	DB300flagConnGPRS,1,1
 149              		.global	GSM_OK
 150              		.section	.rodata.GSM_OK,"a",%progbits
 151              		.align	2
 152              		.type	GSM_OK, %object
 153              		.size	GSM_OK, 3
 154              	GSM_OK:
 155 0000 4F4B00   		.ascii	"OK\000"
 156              		.global	GSM_ERR
 157              		.section	.rodata.GSM_ERR,"a",%progbits
 158              		.align	2
 159              		.type	GSM_ERR, %object
 160              		.size	GSM_ERR, 6
 161              	GSM_ERR:
 162 0000 4552524F 		.ascii	"ERROR\000"
 162      5200
 163              		.global	GSM_RTA
 164              		.section	.rodata.GSM_RTA,"a",%progbits
 165              		.type	GSM_RTA, %object
 166              		.size	GSM_RTA, 1
 167              	GSM_RTA:
 168 0000 2B       		.byte	43
 169              		.global	GSM_CMGF
 170              		.section	.rodata.GSM_CMGF,"a",%progbits
ARM GAS  /tmp/ccCNyPsy.s 			page 4


 171              		.align	2
 172              		.type	GSM_CMGF, %object
 173              		.size	GSM_CMGF, 7
 174              	GSM_CMGF:
 175 0000 2B434D47 		.ascii	"+CMGF:\000"
 175      463A00
 176              		.global	GSM_IPSTATE
 177              		.section	.rodata.GSM_IPSTATE,"a",%progbits
 178              		.align	2
 179              		.type	GSM_IPSTATE, %object
 180              		.size	GSM_IPSTATE, 7
 181              	GSM_IPSTATE:
 182 0000 53544154 		.ascii	"STATE:\000"
 182      453A00
 183              		.global	GSM_IPINITIAL
 184              		.section	.rodata.GSM_IPINITIAL,"a",%progbits
 185              		.align	2
 186              		.type	GSM_IPINITIAL, %object
 187              		.size	GSM_IPINITIAL, 11
 188              	GSM_IPINITIAL:
 189 0000 49502049 		.ascii	"IP INITIAL\000"
 189      4E495449 
 189      414C00
 190              		.global	GSM_IPSTART
 191              		.section	.rodata.GSM_IPSTART,"a",%progbits
 192              		.align	2
 193              		.type	GSM_IPSTART, %object
 194              		.size	GSM_IPSTART, 9
 195              	GSM_IPSTART:
 196 0000 49502053 		.ascii	"IP START\000"
 196      54415254 
 196      00
 197              		.global	GSM_IPGPRSACT
 198              		.section	.rodata.GSM_IPGPRSACT,"a",%progbits
 199              		.align	2
 200              		.type	GSM_IPGPRSACT, %object
 201              		.size	GSM_IPGPRSACT, 11
 202              	GSM_IPGPRSACT:
 203 0000 49502047 		.ascii	"IP GPRSACT\000"
 203      50525341 
 203      435400
 204              		.global	GSM_IPSTATUS
 205              		.section	.rodata.GSM_IPSTATUS,"a",%progbits
 206              		.align	2
 207              		.type	GSM_IPSTATUS, %object
 208              		.size	GSM_IPSTATUS, 10
 209              	GSM_IPSTATUS:
 210 0000 49502053 		.ascii	"IP STATUS\000"
 210      54415455 
 210      5300
 211              		.global	GSM_IPCONNECTING
 212              		.section	.rodata.GSM_IPCONNECTING,"a",%progbits
 213              		.align	2
 214              		.type	GSM_IPCONNECTING, %object
 215              		.size	GSM_IPCONNECTING, 15
 216              	GSM_IPCONNECTING:
 217 0000 54435020 		.ascii	"TCP CONNECTING\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 5


 217      434F4E4E 
 217      45435449 
 217      4E4700
 218              		.global	GSM_IPCONNOK
 219              		.section	.rodata.GSM_IPCONNOK,"a",%progbits
 220              		.align	2
 221              		.type	GSM_IPCONNOK, %object
 222              		.size	GSM_IPCONNOK, 11
 223              	GSM_IPCONNOK:
 224 0000 434F4E4E 		.ascii	"CONNECT OK\000"
 224      45435420 
 224      4F4B00
 225              		.global	GSM_IPCONNFAIL
 226              		.section	.rodata.GSM_IPCONNFAIL,"a",%progbits
 227              		.align	2
 228              		.type	GSM_IPCONNFAIL, %object
 229              		.size	GSM_IPCONNFAIL, 13
 230              	GSM_IPCONNFAIL:
 231 0000 434F4E4E 		.ascii	"CONNECT FAIL\000"
 231      45435420 
 231      4641494C 
 231      00
 232              		.global	GSM_IPCONNCLOSE
 233              		.section	.rodata.GSM_IPCONNCLOSE,"a",%progbits
 234              		.align	2
 235              		.type	GSM_IPCONNCLOSE, %object
 236              		.size	GSM_IPCONNCLOSE, 11
 237              	GSM_IPCONNCLOSE:
 238 0000 54435020 		.ascii	"TCP CLOSED\000"
 238      434C4F53 
 238      454400
 239              		.global	GSM_SIM1
 240              		.section	.rodata.GSM_SIM1,"a",%progbits
 241              		.align	2
 242              		.type	GSM_SIM1, %object
 243              		.size	GSM_SIM1, 5
 244              	GSM_SIM1:
 245 0000 53494D31 		.ascii	"SIM1\000"
 245      00
 246              		.global	GSM_SIM2
 247              		.section	.rodata.GSM_SIM2,"a",%progbits
 248              		.align	2
 249              		.type	GSM_SIM2, %object
 250              		.size	GSM_SIM2, 5
 251              	GSM_SIM2:
 252 0000 53494D32 		.ascii	"SIM2\000"
 252      00
 253              		.global	GSM_SENDOK
 254              		.section	.rodata.GSM_SENDOK,"a",%progbits
 255              		.align	2
 256              		.type	GSM_SENDOK, %object
 257              		.size	GSM_SENDOK, 9
 258              	GSM_SENDOK:
 259 0000 3030303A 		.ascii	"000: ACK\000"
 259      2041434B 
 259      00
 260              		.global	prestadorSimState
ARM GAS  /tmp/ccCNyPsy.s 			page 6


 261              		.section	.bss.prestadorSimState,"aw",%nobits
 262              		.type	prestadorSimState, %object
 263              		.size	prestadorSimState, 1
 264              	prestadorSimState:
 265 0000 00       		.space	1
 266              		.global	prestadorSimTime
 267              		.section	.data.prestadorSimTime,"aw",%progbits
 268              		.type	prestadorSimTime, %object
 269              		.size	prestadorSimTime, 1
 270              	prestadorSimTime:
 271 0000 FA       		.byte	-6
 272              		.global	GSMCantSMS
 273              		.section	.bss.GSMCantSMS,"aw",%nobits
 274              		.type	GSMCantSMS, %object
 275              		.size	GSMCantSMS, 1
 276              	GSMCantSMS:
 277 0000 00       		.space	1
 278              		.global	GSMCantSMS2
 279              		.section	.bss.GSMCantSMS2,"aw",%nobits
 280              		.type	GSMCantSMS2, %object
 281              		.size	GSMCantSMS2, 1
 282              	GSMCantSMS2:
 283 0000 00       		.space	1
 284              		.global	GSMnumSMS
 285              		.section	.data.GSMnumSMS,"aw",%progbits
 286              		.type	GSMnumSMS, %object
 287              		.size	GSMnumSMS, 1
 288              	GSMnumSMS:
 289 0000 01       		.byte	1
 290              		.global	GSMReadSMSState
 291              		.section	.bss.GSMReadSMSState,"aw",%nobits
 292              		.type	GSMReadSMSState, %object
 293              		.size	GSMReadSMSState, 1
 294              	GSMReadSMSState:
 295 0000 00       		.space	1
 296              		.comm	GSMReadSMScommand,32,4
 297              		.comm	GSMReadSMSrepIn,32,4
 298              		.global	GSMrxSMSState
 299              		.section	.bss.GSMrxSMSState,"aw",%nobits
 300              		.type	GSMrxSMSState, %object
 301              		.size	GSMrxSMSState, 1
 302              	GSMrxSMSState:
 303 0000 00       		.space	1
 304              		.global	prestadorSimSelect
 305              		.section	.bss.prestadorSimSelect,"aw",%nobits
 306              		.type	prestadorSimSelect, %object
 307              		.size	prestadorSimSelect, 1
 308              	prestadorSimSelect:
 309 0000 00       		.space	1
 310              		.global	flagCloseIP
 311              		.section	.bss.flagCloseIP,"aw",%nobits
 312              		.type	flagCloseIP, %object
 313              		.size	flagCloseIP, 1
 314              	flagCloseIP:
 315 0000 00       		.space	1
 316              		.section	.text.GSMProcess,"ax",%progbits
 317              		.align	2
ARM GAS  /tmp/ccCNyPsy.s 			page 7


 318              		.global	GSMProcess
 319              		.code	16
 320              		.thumb_func
 321              		.type	GSMProcess, %function
 322              	GSMProcess:
 323              	.LFB20:
 324              		.file 1 "src/sim900_800.c"
   1:src/sim900_800.c **** 
   2:src/sim900_800.c **** #include "sim900_800.h"
   3:src/sim900_800.c **** #include "uart.h"
   4:src/sim900_800.c **** #include "tim.h"
   5:src/sim900_800.c **** 
   6:src/sim900_800.c **** #include <stdlib.h>
   7:src/sim900_800.c **** #include <stdio.h>
   8:src/sim900_800.c **** #include <string.h>
   9:src/sim900_800.c **** 
  10:src/sim900_800.c **** 
  11:src/sim900_800.c **** //UART GSM.
  12:src/sim900_800.c **** //RX.
  13:src/sim900_800.c **** volatile char buffUARTGSMrx[buffUARTGSMrx_dimension];
  14:src/sim900_800.c **** volatile char buffUARTGSMrx2[buffUARTGSMrx_dimension];
  15:src/sim900_800.c **** volatile char *pBuffUARTGSMrxW;
  16:src/sim900_800.c **** volatile char *pBuffUARTGSMrxR;
  17:src/sim900_800.c **** volatile char counterUARTGSM;
  18:src/sim900_800.c **** volatile char PacketReadyUARTGSM;
  19:src/sim900_800.c **** //TX.
  20:src/sim900_800.c **** volatile char buffUARTGSMtx[buffUARTGSMrx_dimension];
  21:src/sim900_800.c **** volatile char *pBuffUARTGSMtxR;
  22:src/sim900_800.c **** volatile char *pBuffUARTGSMtxW;
  23:src/sim900_800.c **** 
  24:src/sim900_800.c **** //GSM Start.
  25:src/sim900_800.c **** char GSMStartState = 0;
  26:src/sim900_800.c **** volatile unsigned short GSMStartTime;
  27:src/sim900_800.c **** 
  28:src/sim900_800.c **** //GSM SendCommand.
  29:src/sim900_800.c **** char GSMSendCommandState = 0;
  30:src/sim900_800.c **** char GSMSendCommandFlag = 0;
  31:src/sim900_800.c **** volatile unsigned short GSMSendCommandTimeOut;
  32:src/sim900_800.c **** char GSMSendCommandIntento = 0;
  33:src/sim900_800.c **** 
  34:src/sim900_800.c **** //GSM SendSMS
  35:src/sim900_800.c **** char GSMSendSMSState = 0;
  36:src/sim900_800.c **** char GSMSendSMSFlag = 0;
  37:src/sim900_800.c **** volatile unsigned short GSMSendSMSTimeOut;
  38:src/sim900_800.c **** char GSMSendSMSbuffAux[32];
  39:src/sim900_800.c **** 
  40:src/sim900_800.c **** //GSM Config.
  41:src/sim900_800.c **** char GSMConfigState = 0;
  42:src/sim900_800.c **** volatile unsigned short GSMConfigTimeOut;
  43:src/sim900_800.c **** volatile unsigned short GSMConfigTime;
  44:src/sim900_800.c **** 
  45:src/sim900_800.c **** //GPRS Config.
  46:src/sim900_800.c **** unsigned short GSMConfigGPRSTimeOut;
  47:src/sim900_800.c **** char GSMConfigGPRSState = 0;
  48:src/sim900_800.c **** char GSMConfigGPRSflag = 0;
  49:src/sim900_800.c **** char GSMbuffStatus[32];
  50:src/sim900_800.c **** char GSMbuffGPRSCommand[64];
ARM GAS  /tmp/ccCNyPsy.s 			page 8


  51:src/sim900_800.c **** char GSMIPadd[16];
  52:src/sim900_800.c **** unsigned char GPRSrssi = 99;
  53:src/sim900_800.c **** 
  54:src/sim900_800.c **** //GSM SendIP
  55:src/sim900_800.c **** char GSMSendIPState = 0;
  56:src/sim900_800.c **** char GSMSendIPFlag = 0;
  57:src/sim900_800.c **** volatile unsigned short GSMSendIPTimeOut;
  58:src/sim900_800.c **** char GSMSendIPbuffAux[32];
  59:src/sim900_800.c **** 
  60:src/sim900_800.c **** char GSMbuffRtaCommand[buffUARTGSMrx_dimension];
  61:src/sim900_800.c **** 
  62:src/sim900_800.c **** //Conexion cerrada.
  63:src/sim900_800.c **** char DB300flagConnGPRS;
  64:src/sim900_800.c **** 
  65:src/sim900_800.c **** const char GSM_OK[] 	= "OK";
  66:src/sim900_800.c **** const char GSM_ERR[] 	= "ERROR";
  67:src/sim900_800.c **** 
  68:src/sim900_800.c **** const char GSM_RTA		= '+';
  69:src/sim900_800.c **** 
  70:src/sim900_800.c **** const char GSM_CMGF[] = "+CMGF:";
  71:src/sim900_800.c **** const char GSM_IPSTATE[] = "STATE:";
  72:src/sim900_800.c **** 
  73:src/sim900_800.c **** //Estados GPRS.
  74:src/sim900_800.c **** const char GSM_IPINITIAL[] 		= "IP INITIAL";
  75:src/sim900_800.c **** const char GSM_IPSTART[] 		= "IP START";
  76:src/sim900_800.c **** const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
  77:src/sim900_800.c **** const char GSM_IPSTATUS[] 		= "IP STATUS";
  78:src/sim900_800.c **** const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
  79:src/sim900_800.c **** const char GSM_IPCONNOK[] 		= "CONNECT OK";
  80:src/sim900_800.c **** const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
  81:src/sim900_800.c **** const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
  82:src/sim900_800.c **** 
  83:src/sim900_800.c **** const char GSM_SIM1[] = "SIM1";
  84:src/sim900_800.c **** const char GSM_SIM2[] = "SIM2";
  85:src/sim900_800.c **** //const char GSM_SENDOK[] = "SEND OK";
  86:src/sim900_800.c **** const char GSM_SENDOK[] = "000: ACK";
  87:src/sim900_800.c **** unsigned char prestadorSimState = 0;
  88:src/sim900_800.c **** unsigned char prestadorSimTime = 250;
  89:src/sim900_800.c **** 
  90:src/sim900_800.c **** 
  91:src/sim900_800.c **** //Recepcion de SMS.
  92:src/sim900_800.c **** unsigned char GSMCantSMS = 0;
  93:src/sim900_800.c **** unsigned char GSMCantSMS2 = 0;
  94:src/sim900_800.c **** unsigned char GSMnumSMS = 1;
  95:src/sim900_800.c **** char GSMReadSMSState = 0;
  96:src/sim900_800.c **** char GSMReadSMScommand[32];
  97:src/sim900_800.c **** char GSMReadSMSrepIn[32];
  98:src/sim900_800.c **** unsigned char GSMrxSMSState = 0;
  99:src/sim900_800.c **** unsigned char prestadorSimSelect = 0;
 100:src/sim900_800.c **** unsigned char flagCloseIP = 0;
 101:src/sim900_800.c **** 
 102:src/sim900_800.c **** //Config SIM900.
 103:src/sim900_800.c **** extern char SIM900APNSIM1[64];
 104:src/sim900_800.c **** extern char SIM900USUARIOSIM1[20];
 105:src/sim900_800.c **** extern char SIM900CLAVESIM1[20];
 106:src/sim900_800.c **** 
 107:src/sim900_800.c **** extern char SIM900APNSIM2[64];
ARM GAS  /tmp/ccCNyPsy.s 			page 9


 108:src/sim900_800.c **** extern char SIM900USUARIOSIM2[20];
 109:src/sim900_800.c **** extern char SIM900CLAVESIM2[20];
 110:src/sim900_800.c **** extern char SIM900IPREMOTE[20];
 111:src/sim900_800.c **** extern char SIM900PORTREMOTE[20];
 112:src/sim900_800.c **** 
 113:src/sim900_800.c **** 
 114:src/sim900_800.c **** extern volatile unsigned char usart1_mini_timeout;
 115:src/sim900_800.c **** extern volatile unsigned char usart1_pckt_ready;
 116:src/sim900_800.c **** extern volatile unsigned char usart1_have_data;
 117:src/sim900_800.c **** extern unsigned char usart1_pckt_bytes;
 118:src/sim900_800.c **** 
 119:src/sim900_800.c **** #define gsm_mini_timeout	usart1_mini_timeout
 120:src/sim900_800.c **** #define gsm_pckt_ready		usart1_pckt_ready
 121:src/sim900_800.c **** #define gsm_have_data		usart1_have_data
 122:src/sim900_800.c **** #define gsm_pckt_bytes		usart1_pckt_bytes
 123:src/sim900_800.c **** 
 124:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 125:src/sim900_800.c **** extern volatile unsigned char usart2_mini_timeout;
 126:src/sim900_800.c **** extern volatile unsigned char usart2_pckt_ready;
 127:src/sim900_800.c **** extern volatile unsigned char usart2_have_data;
 128:src/sim900_800.c **** extern unsigned char usart2_pckt_bytes;
 129:src/sim900_800.c **** #endif
 130:src/sim900_800.c **** //TODO: reimplementar esto
 131:src/sim900_800.c **** //void UARTGSM_Config(void)
 132:src/sim900_800.c **** //{
 133:src/sim900_800.c **** //
 134:src/sim900_800.c **** //	unsigned long temp;
 135:src/sim900_800.c **** //	NVIC_InitTypeDef NVIC_InitStructure;
 136:src/sim900_800.c **** //
 137:src/sim900_800.c **** //	//---- Clk USART2 ----//
 138:src/sim900_800.c **** //	if (!(RCC->APB1ENR & 0x00020000))
 139:src/sim900_800.c **** //		RCC->APB1ENR |= 0x00020000;
 140:src/sim900_800.c **** //
 141:src/sim900_800.c **** //	if (!(RCC->APB2ENR & 0x00000004))
 142:src/sim900_800.c **** //		RCC->APB2ENR |= 0x00000004;
 143:src/sim900_800.c **** //
 144:src/sim900_800.c **** //	//----GPIOA----//
 145:src/sim900_800.c **** //	//----TX:PA2 RX:PA3----//
 146:src/sim900_800.c **** //	temp = GPIOA->CRL;
 147:src/sim900_800.c **** //	temp &= 0xFFFF00FF;
 148:src/sim900_800.c **** //	temp |= 0x00004B00;
 149:src/sim900_800.c **** //	GPIOA->CRL = temp;
 150:src/sim900_800.c **** //
 151:src/sim900_800.c **** //	//---- NVIC ----//
 152:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
 153:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 154:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 155:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 156:src/sim900_800.c **** //	NVIC_Init(&NVIC_InitStructure);
 157:src/sim900_800.c **** //
 158:src/sim900_800.c **** //	//NVIC_SetPriority(USART2_IRQn, 0);
 159:src/sim900_800.c **** //
 160:src/sim900_800.c **** //	//buffer GSM.
 161:src/sim900_800.c **** //	//RX.
 162:src/sim900_800.c **** //	pBuffUARTGSMrxW = &buffUARTGSMrx[0];
 163:src/sim900_800.c **** //	pBuffUARTGSMrxR = &buffUARTGSMrx[0];
 164:src/sim900_800.c **** //	counterUARTGSM = 0;
ARM GAS  /tmp/ccCNyPsy.s 			page 10


 165:src/sim900_800.c **** //	PacketReadyUARTGSM = 0;
 166:src/sim900_800.c **** //
 167:src/sim900_800.c **** //	//TX.
 168:src/sim900_800.c **** //	pBuffUARTGSMtxR = &buffUARTGSMtx[0];
 169:src/sim900_800.c **** //	pBuffUARTGSMtxW = &buffUARTGSMtx[0];
 170:src/sim900_800.c **** //
 171:src/sim900_800.c **** //	while (pBuffUARTGSMrxW != &buffUARTGSMrx[buffUARTGSMrx_dimension - 2])
 172:src/sim900_800.c **** //	{
 173:src/sim900_800.c **** //		*pBuffUARTGSMrxW = 0;
 174:src/sim900_800.c **** //		pBuffUARTGSMrxW++;
 175:src/sim900_800.c **** //	}
 176:src/sim900_800.c **** //
 177:src/sim900_800.c **** //	pBuffUARTGSMrxW = &buffUARTGSMrx[0];
 178:src/sim900_800.c **** //
 179:src/sim900_800.c **** //	while (pBuffUARTGSMtxW != &buffUARTGSMtx[buffUARTGSMrx_dimension - 2])
 180:src/sim900_800.c **** //	{
 181:src/sim900_800.c **** //		*pBuffUARTGSMtxW = 0;
 182:src/sim900_800.c **** //		pBuffUARTGSMtxW++;
 183:src/sim900_800.c **** //	}
 184:src/sim900_800.c **** //
 185:src/sim900_800.c **** //	pBuffUARTGSMtxW = &buffUARTGSMtx[0];
 186:src/sim900_800.c **** //
 187:src/sim900_800.c **** //	USART2->BRR |= 0x0EA6;
 188:src/sim900_800.c **** //	USART2->CR1 |= 0x202C;
 189:src/sim900_800.c **** //
 190:src/sim900_800.c **** //}
 191:src/sim900_800.c **** //
 192:src/sim900_800.c **** //
 193:src/sim900_800.c **** //void UARTGSMSend(char * ptrSend)
 194:src/sim900_800.c **** //{
 195:src/sim900_800.c **** //
 196:src/sim900_800.c **** //	char datos = strlen ((const char *) &ptrSend[0]);
 197:src/sim900_800.c **** //
 198:src/sim900_800.c **** //	if (datos < (buffUARTGSMrx_dimension - 2))
 199:src/sim900_800.c **** //	{
 200:src/sim900_800.c **** //		if ((pBuffUARTGSMtxW + datos) < &buffUARTGSMtx[buffUARTGSMrx_dimension - 2])
 201:src/sim900_800.c **** //		{
 202:src/sim900_800.c **** //			strncpy((char *)pBuffUARTGSMtxW, (const char *)&ptrSend[0], datos);
 203:src/sim900_800.c **** //			pBuffUARTGSMtxW += datos;
 204:src/sim900_800.c **** //			*pBuffUARTGSMtxW = 0;
 205:src/sim900_800.c **** //		}
 206:src/sim900_800.c **** //		else
 207:src/sim900_800.c **** //			pBuffUARTGSMtxW  = buffUARTGSMtx;
 208:src/sim900_800.c **** //
 209:src/sim900_800.c **** //		USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 210:src/sim900_800.c **** //	}
 211:src/sim900_800.c **** //}
 212:src/sim900_800.c **** 
 213:src/sim900_800.c **** //Procesa respuestas del modulo GSM esperando el final de linea por timeout
 214:src/sim900_800.c **** //carga el buffer buffUARTGSMrx2 y avisa con el flag PacketReadyUARTGSM
 215:src/sim900_800.c **** void GSMProcess (void)
 216:src/sim900_800.c **** {
 325              		.loc 1 216 0
 326              		.cfi_startproc
 327 0000 10B5     		push	{r4, lr}	@
 328              	.LCFI0:
 329              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccCNyPsy.s 			page 11


 330              		.cfi_offset 4, -8
 331              		.cfi_offset 14, -4
 217:src/sim900_800.c **** 	if ((gsm_have_data) && (!gsm_mini_timeout))
 332              		.loc 1 217 0
 333 0002 104B     		ldr	r3, .L4	@ tmp113,
 334 0004 1B78     		ldrb	r3, [r3]	@ tmp114, usart1_have_data
 335 0006 DBB2     		uxtb	r3, r3	@ D.7759, tmp114
 336 0008 002B     		cmp	r3, #0	@ D.7759,
 337 000a 18D0     		beq	.L3	@,
 338              		.loc 1 217 0 is_stmt 0 discriminator 1
 339 000c 0E4B     		ldr	r3, .L4+4	@ tmp115,
 340 000e 1B78     		ldrb	r3, [r3]	@ tmp116, usart1_mini_timeout
 341 0010 DBB2     		uxtb	r3, r3	@ D.7759, tmp116
 342 0012 002B     		cmp	r3, #0	@ D.7759,
 343 0014 13D1     		bne	.L3	@,
 218:src/sim900_800.c **** 	{
 219:src/sim900_800.c **** 		gsm_have_data = 0;
 344              		.loc 1 219 0 is_stmt 1
 345 0016 0B4B     		ldr	r3, .L4	@ tmp117,
 346 0018 0022     		movs	r2, #0	@ tmp118,
 347 001a 1A70     		strb	r2, [r3]	@ tmp119, usart1_have_data
 220:src/sim900_800.c **** 		gsm_pckt_ready = 1;
 348              		.loc 1 220 0
 349 001c 0B4B     		ldr	r3, .L4+8	@ tmp120,
 350 001e 0122     		movs	r2, #1	@ tmp121,
 351 0020 1A70     		strb	r2, [r3]	@ tmp122, usart1_pckt_ready
 221:src/sim900_800.c **** 		gsm_pckt_bytes = ReadUsart1Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 352              		.loc 1 221 0
 353 0022 8023     		movs	r3, #128	@ tmp132,
 354 0024 5A00     		lsls	r2, r3, #1	@ tmp123, tmp132,
 355 0026 0A4B     		ldr	r3, .L4+12	@ tmp124,
 356 0028 1100     		movs	r1, r2	@, tmp123
 357 002a 1800     		movs	r0, r3	@, tmp124
 358 002c FFF7FEFF 		bl	ReadUsart1Buffer	@
 359 0030 0300     		movs	r3, r0	@ tmp125,
 360 0032 1A00     		movs	r2, r3	@ D.7759, tmp126
 361 0034 074B     		ldr	r3, .L4+16	@ tmp127,
 362 0036 1A70     		strb	r2, [r3]	@ tmp128, usart1_pckt_bytes
 222:src/sim900_800.c **** 		PacketReadyUARTGSM = 1;
 363              		.loc 1 222 0
 364 0038 074B     		ldr	r3, .L4+20	@ tmp129,
 365 003a 0122     		movs	r2, #1	@ tmp130,
 366 003c 1A70     		strb	r2, [r3]	@ tmp131, PacketReadyUARTGSM
 367              	.L3:
 223:src/sim900_800.c **** //		GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsi
 224:src/sim900_800.c **** 	}
 225:src/sim900_800.c **** 
 226:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 227:src/sim900_800.c **** 	if ((usart2_have_data) && (!usart2_mini_timeout))
 228:src/sim900_800.c **** 	{
 229:src/sim900_800.c **** 		usart2_have_data = 0;
 230:src/sim900_800.c **** 		usart2_pckt_ready = 1;
 231:src/sim900_800.c **** 		usart2_pckt_bytes = ReadUsart2Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 232:src/sim900_800.c **** 	}
 233:src/sim900_800.c **** #endif
 234:src/sim900_800.c **** }
 368              		.loc 1 234 0
ARM GAS  /tmp/ccCNyPsy.s 			page 12


 369 003e C046     		nop
 370              		@ sp needed	@
 371 0040 10BD     		pop	{r4, pc}
 372              	.L5:
 373 0042 C046     		.align	2
 374              	.L4:
 375 0044 00000000 		.word	usart1_have_data
 376 0048 00000000 		.word	usart1_mini_timeout
 377 004c 00000000 		.word	usart1_pckt_ready
 378 0050 00000000 		.word	buffUARTGSMrx2
 379 0054 00000000 		.word	usart1_pckt_bytes
 380 0058 00000000 		.word	PacketReadyUARTGSM
 381              		.cfi_endproc
 382              	.LFE20:
 383              		.size	GSMProcess, .-GSMProcess
 384              		.section	.text.GSM_Start,"ax",%progbits
 385              		.align	2
 386              		.global	GSM_Start
 387              		.code	16
 388              		.thumb_func
 389              		.type	GSM_Start, %function
 390              	GSM_Start:
 391              	.LFB21:
 235:src/sim900_800.c **** 
 236:src/sim900_800.c **** 
 237:src/sim900_800.c **** //------------------------------------//
 238:src/sim900_800.c **** //
 239:src/sim900_800.c **** //Wait: 1
 240:src/sim900_800.c **** //OK: 	2
 241:src/sim900_800.c **** //ERR:	3
 242:src/sim900_800.c **** //TO:	4
 243:src/sim900_800.c **** //------------------------------------//
 244:src/sim900_800.c **** /*
 245:src/sim900_800.c **** unsigned char GSM_Start(void)
 246:src/sim900_800.c **** {
 247:src/sim900_800.c **** 
 248:src/sim900_800.c **** 	if (!GSM_STATUS || (GSMStartState > 1))
 249:src/sim900_800.c **** 	{
 250:src/sim900_800.c **** 		switch(GSMStartState)
 251:src/sim900_800.c **** 		{
 252:src/sim900_800.c **** 			case 0:
 253:src/sim900_800.c **** 				GSMStartTime = 40;
 254:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 255:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 256:src/sim900_800.c **** 				GSMStartState++;
 257:src/sim900_800.c **** 				break;
 258:src/sim900_800.c **** 			case 1:
 259:src/sim900_800.c **** 				if(GSMStartTime == 0) //Espera 4 segugundos.
 260:src/sim900_800.c **** 				{
 261:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 262:src/sim900_800.c **** 					GSM_PWRKEY_OFF;
 263:src/sim900_800.c **** 					GSMStartTime = 100; //10 segundos.
 264:src/sim900_800.c **** 					GSMStartState++;
 265:src/sim900_800.c **** 				}
 266:src/sim900_800.c **** 				break;
 267:src/sim900_800.c **** 			case 2:
 268:src/sim900_800.c **** 				if(GSM_STATUS)
ARM GAS  /tmp/ccCNyPsy.s 			page 13


 269:src/sim900_800.c **** 				{
 270:src/sim900_800.c **** 					//Encendio.
 271:src/sim900_800.c **** 					LED_NETLIGHT_ON;
 272:src/sim900_800.c **** 					GSMStartState++;
 273:src/sim900_800.c **** 					GSMStartTime = 30;
 274:src/sim900_800.c **** 				}
 275:src/sim900_800.c **** 				if(GSMStartTime == 0)
 276:src/sim900_800.c **** 				{
 277:src/sim900_800.c **** 					//Se agoto el tiempo de espera.
 278:src/sim900_800.c **** 					GSMStartState = 0;
 279:src/sim900_800.c **** 					return 4;
 280:src/sim900_800.c **** 				}
 281:src/sim900_800.c **** 				break;
 282:src/sim900_800.c **** 			case 3:
 283:src/sim900_800.c **** 				if(GSMStartTime == 0)
 284:src/sim900_800.c **** 				{
 285:src/sim900_800.c **** 					//1 segundo mas.
 286:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 287:src/sim900_800.c **** 					GSM_PWRKEY_ON;
 288:src/sim900_800.c **** 					GSMStartState = 0;
 289:src/sim900_800.c **** 					return 2;
 290:src/sim900_800.c **** 				}
 291:src/sim900_800.c **** 				break;
 292:src/sim900_800.c **** 		}
 293:src/sim900_800.c **** 	}
 294:src/sim900_800.c **** 	if (GSM_STATUS || (GSMStartState == 0))
 295:src/sim900_800.c **** 	{
 296:src/sim900_800.c **** 		return 2;
 297:src/sim900_800.c **** 	}
 298:src/sim900_800.c **** 	return 1;
 299:src/sim900_800.c **** }
 300:src/sim900_800.c **** */
 301:src/sim900_800.c **** 
 302:src/sim900_800.c **** unsigned char GSM_Start (void)
 303:src/sim900_800.c **** {
 392              		.loc 1 303 0
 393              		.cfi_startproc
 304:src/sim900_800.c **** 	switch(GSMStartState)
 394              		.loc 1 304 0
 395 0000 3C4B     		ldr	r3, .L23	@ tmp137,
 396 0002 1B78     		ldrb	r3, [r3]	@ D.7761, GSMStartState
 397 0004 012B     		cmp	r3, #1	@ D.7762,
 398 0006 1BD0     		beq	.L8	@,
 399 0008 02DC     		bgt	.L9	@,
 400 000a 002B     		cmp	r3, #0	@ D.7762,
 401 000c 05D0     		beq	.L10	@,
 402 000e 65E0     		b	.L7	@
 403              	.L9:
 404 0010 022B     		cmp	r3, #2	@ D.7762,
 405 0012 2FD0     		beq	.L11	@,
 406 0014 032B     		cmp	r3, #3	@ D.7762,
 407 0016 50D0     		beq	.L12	@,
 408 0018 60E0     		b	.L7	@
 409              	.L10:
 305:src/sim900_800.c **** 	{
 306:src/sim900_800.c **** 		case 0:
 307:src/sim900_800.c **** 			//Levanto PWRKEY
ARM GAS  /tmp/ccCNyPsy.s 			page 14


 308:src/sim900_800.c **** 			LED_NETLIGHT_ON;
 410              		.loc 1 308 0
 411 001a 9023     		movs	r3, #144	@ tmp192,
 412 001c DB05     		lsls	r3, r3, #23	@ D.7763, tmp192,
 413 001e 8022     		movs	r2, #128	@ tmp193,
 414 0020 5201     		lsls	r2, r2, #5	@ tmp138, tmp193,
 415 0022 9A61     		str	r2, [r3, #24]	@ tmp138, _31->BSRR
 309:src/sim900_800.c **** 			GSMStartTime = 100;
 416              		.loc 1 309 0
 417 0024 344B     		ldr	r3, .L23+4	@ tmp139,
 418 0026 6422     		movs	r2, #100	@ tmp140,
 419 0028 1A80     		strh	r2, [r3]	@ tmp141, GSMStartTime
 310:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 420              		.loc 1 310 0
 421 002a 9023     		movs	r3, #144	@ tmp194,
 422 002c DB05     		lsls	r3, r3, #23	@ D.7763, tmp194,
 423 002e 8022     		movs	r2, #128	@ tmp142,
 424 0030 9A61     		str	r2, [r3, #24]	@ tmp142, _34->BSRR
 311:src/sim900_800.c **** 			GSMStartState++;
 425              		.loc 1 311 0
 426 0032 304B     		ldr	r3, .L23	@ tmp143,
 427 0034 1B78     		ldrb	r3, [r3]	@ D.7761, GSMStartState
 428 0036 0133     		adds	r3, r3, #1	@ tmp144,
 429 0038 DAB2     		uxtb	r2, r3	@ D.7761, tmp144
 430 003a 2E4B     		ldr	r3, .L23	@ tmp145,
 431 003c 1A70     		strb	r2, [r3]	@ tmp146, GSMStartState
 312:src/sim900_800.c **** 			break;
 432              		.loc 1 312 0
 433 003e 56E0     		b	.L13	@
 434              	.L8:
 313:src/sim900_800.c **** 
 314:src/sim900_800.c **** 		case 1:
 315:src/sim900_800.c **** 			//Bajo PWRKEY
 316:src/sim900_800.c **** 			if(GSMStartTime == 0) //Espera 100 mseg
 435              		.loc 1 316 0
 436 0040 2D4B     		ldr	r3, .L23+4	@ tmp147,
 437 0042 1B88     		ldrh	r3, [r3]	@ tmp148, GSMStartTime
 438 0044 9BB2     		uxth	r3, r3	@ D.7764, tmp148
 439 0046 002B     		cmp	r3, #0	@ D.7764,
 440 0048 4CD1     		bne	.L20	@,
 317:src/sim900_800.c **** 			{
 318:src/sim900_800.c **** 				LED_NETLIGHT_OFF;
 441              		.loc 1 318 0
 442 004a 9023     		movs	r3, #144	@ tmp187,
 443 004c DB05     		lsls	r3, r3, #23	@ D.7763, tmp187,
 444 004e 8022     		movs	r2, #128	@ tmp188,
 445 0050 5205     		lsls	r2, r2, #21	@ tmp149, tmp188,
 446 0052 9A61     		str	r2, [r3, #24]	@ tmp149, _41->BSRR
 319:src/sim900_800.c **** 				GSM_PWRKEY_OFF;
 447              		.loc 1 319 0
 448 0054 9023     		movs	r3, #144	@ tmp189,
 449 0056 DB05     		lsls	r3, r3, #23	@ D.7763, tmp189,
 450 0058 8022     		movs	r2, #128	@ tmp190,
 451 005a 1204     		lsls	r2, r2, #16	@ tmp150, tmp190,
 452 005c 9A61     		str	r2, [r3, #24]	@ tmp150, _43->BSRR
 320:src/sim900_800.c **** 				GSMStartTime = 4000; //hasta 4 segundos.
 453              		.loc 1 320 0
ARM GAS  /tmp/ccCNyPsy.s 			page 15


 454 005e 264B     		ldr	r3, .L23+4	@ tmp151,
 455 0060 FA22     		movs	r2, #250	@ tmp191,
 456 0062 1201     		lsls	r2, r2, #4	@ tmp152, tmp191,
 457 0064 1A80     		strh	r2, [r3]	@ tmp153, GSMStartTime
 321:src/sim900_800.c **** 				GSMStartState++;
 458              		.loc 1 321 0
 459 0066 234B     		ldr	r3, .L23	@ tmp154,
 460 0068 1B78     		ldrb	r3, [r3]	@ D.7761, GSMStartState
 461 006a 0133     		adds	r3, r3, #1	@ tmp155,
 462 006c DAB2     		uxtb	r2, r3	@ D.7761, tmp155
 463 006e 214B     		ldr	r3, .L23	@ tmp156,
 464 0070 1A70     		strb	r2, [r3]	@ tmp157, GSMStartState
 322:src/sim900_800.c **** 			}
 323:src/sim900_800.c **** 			break;
 465              		.loc 1 323 0
 466 0072 37E0     		b	.L20	@
 467              	.L11:
 324:src/sim900_800.c **** 
 325:src/sim900_800.c **** 		case 2:
 326:src/sim900_800.c **** 			//Levanto PWRKEY
 327:src/sim900_800.c **** 			if (GSM_STATUS)
 468              		.loc 1 327 0
 469 0074 9023     		movs	r3, #144	@ tmp186,
 470 0076 DB05     		lsls	r3, r3, #23	@ D.7763, tmp186,
 471 0078 1B8A     		ldrh	r3, [r3, #16]	@ tmp159,
 472 007a 9BB2     		uxth	r3, r3	@ D.7764, tmp159
 473 007c 1A00     		movs	r2, r3	@ D.7762, D.7764
 474 007e 2023     		movs	r3, #32	@ tmp160,
 475 0080 1340     		ands	r3, r2	@ D.7762, D.7762
 476 0082 13D0     		beq	.L15	@,
 328:src/sim900_800.c **** 			{
 329:src/sim900_800.c **** 				GSMStartTime = 1000;
 477              		.loc 1 329 0
 478 0084 1C4B     		ldr	r3, .L23+4	@ tmp161,
 479 0086 FA22     		movs	r2, #250	@ tmp182,
 480 0088 9200     		lsls	r2, r2, #2	@ tmp162, tmp182,
 481 008a 1A80     		strh	r2, [r3]	@ tmp163, GSMStartTime
 330:src/sim900_800.c **** 				GSMStartState++;
 482              		.loc 1 330 0
 483 008c 194B     		ldr	r3, .L23	@ tmp164,
 484 008e 1B78     		ldrb	r3, [r3]	@ D.7761, GSMStartState
 485 0090 0133     		adds	r3, r3, #1	@ tmp165,
 486 0092 DAB2     		uxtb	r2, r3	@ D.7761, tmp165
 487 0094 174B     		ldr	r3, .L23	@ tmp166,
 488 0096 1A70     		strb	r2, [r3]	@ tmp167, GSMStartState
 331:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 489              		.loc 1 331 0
 490 0098 9023     		movs	r3, #144	@ tmp183,
 491 009a DB05     		lsls	r3, r3, #23	@ D.7763, tmp183,
 492 009c 8022     		movs	r2, #128	@ tmp184,
 493 009e 5201     		lsls	r2, r2, #5	@ tmp168, tmp184,
 494 00a0 9A61     		str	r2, [r3, #24]	@ tmp168, _20->BSRR
 332:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 495              		.loc 1 332 0
 496 00a2 9023     		movs	r3, #144	@ tmp185,
 497 00a4 DB05     		lsls	r3, r3, #23	@ D.7763, tmp185,
 498 00a6 8022     		movs	r2, #128	@ tmp169,
ARM GAS  /tmp/ccCNyPsy.s 			page 16


 499 00a8 9A61     		str	r2, [r3, #24]	@ tmp169, _22->BSRR
 333:src/sim900_800.c **** 			}
 334:src/sim900_800.c **** 			else if(GSMStartTime == 0) //Espera hasta 4 segs
 335:src/sim900_800.c **** 			{
 336:src/sim900_800.c **** 				return 4;
 337:src/sim900_800.c **** 			}
 338:src/sim900_800.c **** 			break;
 500              		.loc 1 338 0
 501 00aa 1DE0     		b	.L21	@
 502              	.L15:
 334:src/sim900_800.c **** 			{
 503              		.loc 1 334 0
 504 00ac 124B     		ldr	r3, .L23+4	@ tmp170,
 505 00ae 1B88     		ldrh	r3, [r3]	@ tmp171, GSMStartTime
 506 00b0 9BB2     		uxth	r3, r3	@ D.7764, tmp171
 507 00b2 002B     		cmp	r3, #0	@ D.7764,
 508 00b4 18D1     		bne	.L21	@,
 336:src/sim900_800.c **** 			}
 509              		.loc 1 336 0
 510 00b6 0423     		movs	r3, #4	@ D.7760,
 511 00b8 1AE0     		b	.L17	@
 512              	.L12:
 339:src/sim900_800.c **** 
 340:src/sim900_800.c **** 		case 3:
 341:src/sim900_800.c **** 			if(GSMStartTime == 0)	//Espero 1 segundo mas y reviso GSM_STATUS
 513              		.loc 1 341 0
 514 00ba 0F4B     		ldr	r3, .L23+4	@ tmp172,
 515 00bc 1B88     		ldrh	r3, [r3]	@ tmp173, GSMStartTime
 516 00be 9BB2     		uxth	r3, r3	@ D.7764, tmp173
 517 00c0 002B     		cmp	r3, #0	@ D.7764,
 518 00c2 13D1     		bne	.L22	@,
 342:src/sim900_800.c **** 			{
 343:src/sim900_800.c **** 				if (GSM_STATUS)
 519              		.loc 1 343 0
 520 00c4 9023     		movs	r3, #144	@ tmp181,
 521 00c6 DB05     		lsls	r3, r3, #23	@ D.7763, tmp181,
 522 00c8 1B8A     		ldrh	r3, [r3, #16]	@ tmp175,
 523 00ca 9BB2     		uxth	r3, r3	@ D.7764, tmp175
 524 00cc 1A00     		movs	r2, r3	@ D.7762, D.7764
 525 00ce 2023     		movs	r3, #32	@ tmp176,
 526 00d0 1340     		ands	r3, r2	@ D.7762, D.7762
 527 00d2 01D0     		beq	.L19	@,
 344:src/sim900_800.c **** 					return 2;
 528              		.loc 1 344 0
 529 00d4 0223     		movs	r3, #2	@ D.7760,
 530 00d6 0BE0     		b	.L17	@
 531              	.L19:
 345:src/sim900_800.c **** 				else
 346:src/sim900_800.c **** 					return 4;
 532              		.loc 1 346 0
 533 00d8 0423     		movs	r3, #4	@ D.7760,
 534 00da 09E0     		b	.L17	@
 535              	.L7:
 347:src/sim900_800.c **** 			}
 348:src/sim900_800.c **** 			break;
 349:src/sim900_800.c **** 
 350:src/sim900_800.c **** 		default:
ARM GAS  /tmp/ccCNyPsy.s 			page 17


 351:src/sim900_800.c **** 			GSMStartState = 0;
 536              		.loc 1 351 0
 537 00dc 054B     		ldr	r3, .L23	@ tmp177,
 538 00de 0022     		movs	r2, #0	@ tmp178,
 539 00e0 1A70     		strb	r2, [r3]	@ tmp179, GSMStartState
 352:src/sim900_800.c **** 			break;
 540              		.loc 1 352 0
 541 00e2 04E0     		b	.L13	@
 542              	.L20:
 323:src/sim900_800.c **** 
 543              		.loc 1 323 0
 544 00e4 C046     		nop
 545 00e6 02E0     		b	.L13	@
 546              	.L21:
 338:src/sim900_800.c **** 
 547              		.loc 1 338 0
 548 00e8 C046     		nop
 549 00ea 00E0     		b	.L13	@
 550              	.L22:
 348:src/sim900_800.c **** 
 551              		.loc 1 348 0
 552 00ec C046     		nop
 553              	.L13:
 353:src/sim900_800.c **** 	}
 354:src/sim900_800.c **** 	return 1;
 554              		.loc 1 354 0
 555 00ee 0123     		movs	r3, #1	@ D.7760,
 556              	.L17:
 355:src/sim900_800.c **** }
 557              		.loc 1 355 0
 558 00f0 1800     		movs	r0, r3	@, <retval>
 559              		@ sp needed	@
 560 00f2 7047     		bx	lr
 561              	.L24:
 562              		.align	2
 563              	.L23:
 564 00f4 00000000 		.word	GSMStartState
 565 00f8 00000000 		.word	GSMStartTime
 566              		.cfi_endproc
 567              	.LFE21:
 568              		.size	GSM_Start, .-GSM_Start
 569              		.section	.text.GSM_Stop,"ax",%progbits
 570              		.align	2
 571              		.global	GSM_Stop
 572              		.code	16
 573              		.thumb_func
 574              		.type	GSM_Stop, %function
 575              	GSM_Stop:
 576              	.LFB22:
 356:src/sim900_800.c **** 
 357:src/sim900_800.c **** 
 358:src/sim900_800.c **** void GSM_Stop(void)
 359:src/sim900_800.c **** {
 577              		.loc 1 359 0
 578              		.cfi_startproc
 579 0000 10B5     		push	{r4, lr}	@
 580              	.LCFI1:
ARM GAS  /tmp/ccCNyPsy.s 			page 18


 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 4, -8
 583              		.cfi_offset 14, -4
 360:src/sim900_800.c **** 	//TODO: cambiar todos los Wait
 361:src/sim900_800.c **** 	//Wait_ms(4000);
 362:src/sim900_800.c **** 	GSM_PWRKEY_OFF;
 584              		.loc 1 362 0
 585 0002 9023     		movs	r3, #144	@ tmp125,
 586 0004 DB05     		lsls	r3, r3, #23	@ D.7766, tmp125,
 587 0006 8022     		movs	r2, #128	@ tmp126,
 588 0008 1204     		lsls	r2, r2, #16	@ tmp116, tmp126,
 589 000a 9A61     		str	r2, [r3, #24]	@ tmp116, _2->BSRR
 590              	.L26:
 363:src/sim900_800.c **** 	do {
 364:src/sim900_800.c **** 		Wait_ms(250);
 591              		.loc 1 364 0 discriminator 1
 592 000c FA20     		movs	r0, #250	@,
 593 000e FFF7FEFF 		bl	Wait_ms	@
 365:src/sim900_800.c **** 	}
 366:src/sim900_800.c **** 	while (GSM_STATUS);
 594              		.loc 1 366 0 discriminator 1
 595 0012 9023     		movs	r3, #144	@ tmp124,
 596 0014 DB05     		lsls	r3, r3, #23	@ D.7766, tmp124,
 597 0016 1B8A     		ldrh	r3, [r3, #16]	@ tmp118,
 598 0018 9BB2     		uxth	r3, r3	@ D.7767, tmp118
 599 001a 1A00     		movs	r2, r3	@ D.7768, D.7767
 600 001c 2023     		movs	r3, #32	@ tmp119,
 601 001e 1340     		ands	r3, r2	@ D.7768, D.7768
 602 0020 F4D1     		bne	.L26	@,
 367:src/sim900_800.c **** 	Wait_ms(1000);
 603              		.loc 1 367 0
 604 0022 FA23     		movs	r3, #250	@ tmp122,
 605 0024 9B00     		lsls	r3, r3, #2	@ tmp120, tmp122,
 606 0026 1800     		movs	r0, r3	@, tmp120
 607 0028 FFF7FEFF 		bl	Wait_ms	@
 368:src/sim900_800.c **** 
 369:src/sim900_800.c **** 	GSM_PWRKEY_ON;
 608              		.loc 1 369 0
 609 002c 9023     		movs	r3, #144	@ tmp123,
 610 002e DB05     		lsls	r3, r3, #23	@ D.7766, tmp123,
 611 0030 8022     		movs	r2, #128	@ tmp121,
 612 0032 9A61     		str	r2, [r3, #24]	@ tmp121, _11->BSRR
 370:src/sim900_800.c **** }
 613              		.loc 1 370 0
 614 0034 C046     		nop
 615              		@ sp needed	@
 616 0036 10BD     		pop	{r4, pc}
 617              		.cfi_endproc
 618              	.LFE22:
 619              		.size	GSM_Stop, .-GSM_Stop
 620              		.section	.rodata
 621              		.align	2
 622              	.LC12:
 623 0000 41542B43 		.ascii	"AT+CSPN?\015\012\000"
 623      53504E3F 
 623      0D0A00
 624 000b 00       		.align	2
ARM GAS  /tmp/ccCNyPsy.s 			page 19


 625              	.LC14:
 626 000c 2B435350 		.ascii	"+CSPN\000"
 626      4E00
 627              		.section	.text.GSMPrestador,"ax",%progbits
 628              		.align	2
 629              		.global	GSMPrestador
 630              		.code	16
 631              		.thumb_func
 632              		.type	GSMPrestador, %function
 633              	GSMPrestador:
 634              	.LFB23:
 371:src/sim900_800.c **** 
 372:src/sim900_800.c **** //GSMPrestador(&PrestadorSim1, &PrestadorSim2, &CONFIGURACIONgprsAPN1[0], &CONFIGURACIONgprsUsuario
 373:src/sim900_800.c **** void GSMPrestador(unsigned char * pGSMHWstatus, unsigned char * prestadorSim1, unsigned char * pres
 374:src/sim900_800.c **** {
 635              		.loc 1 374 0
 636              		.cfi_startproc
 637 0000 10B5     		push	{r4, lr}	@
 638              	.LCFI2:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0002 86B0     		sub	sp, sp, #24	@,,
 643              	.LCFI3:
 644              		.cfi_def_cfa_offset 32
 645 0004 0390     		str	r0, [sp, #12]	@ pGSMHWstatus, pGSMHWstatus
 646 0006 0291     		str	r1, [sp, #8]	@ prestadorSim1, prestadorSim1
 647 0008 0192     		str	r2, [sp, #4]	@ prestadorSim2, prestadorSim2
 648 000a 0093     		str	r3, [sp]	@ pCONFIGURACIONgprsAPN1, pCONFIGURACIONgprsAPN1
 375:src/sim900_800.c **** 	unsigned char i;
 376:src/sim900_800.c **** 
 377:src/sim900_800.c **** 	if (prestadorSimTime == 0)
 649              		.loc 1 377 0
 650 000c DA4B     		ldr	r3, .L69	@ tmp151,
 651 000e 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimTime
 652 0010 002B     		cmp	r3, #0	@ D.7769,
 653 0012 00D0     		beq	.LCB296	@
 654 0014 D5E1     		b	.L62	@long jump	@
 655              	.LCB296:
 378:src/sim900_800.c **** 	{
 379:src/sim900_800.c **** 		switch(prestadorSimSelect)
 656              		.loc 1 379 0
 657 0016 D94B     		ldr	r3, .L69+4	@ tmp152,
 658 0018 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 659 001a 012B     		cmp	r3, #1	@ D.7770,
 660 001c 13D0     		beq	.L30	@,
 661 001e 022B     		cmp	r3, #2	@ D.7770,
 662 0020 00D1     		bne	.LCB302	@
 663 0022 E8E0     		b	.L31	@long jump	@
 664              	.LCB302:
 665 0024 002B     		cmp	r3, #0	@ D.7770,
 666 0026 00D0     		beq	.LCB304	@
 667 0028 C4E1     		b	.L59	@long jump	@
 668              	.LCB304:
 380:src/sim900_800.c **** 		{
 381:src/sim900_800.c **** 			case 0:
 382:src/sim900_800.c **** 				if (*pGSMHWstatus & 0x01)
ARM GAS  /tmp/ccCNyPsy.s 			page 20


 669              		.loc 1 382 0
 670 002a 039B     		ldr	r3, [sp, #12]	@ tmp153, pGSMHWstatus
 671 002c 1B78     		ldrb	r3, [r3]	@ D.7769, *pGSMHWstatus_25(D)
 672 002e 1A00     		movs	r2, r3	@ D.7770, D.7769
 673 0030 0123     		movs	r3, #1	@ tmp154,
 674 0032 1340     		ands	r3, r2	@ D.7770, D.7770
 675 0034 00D1     		bne	.LCB311	@
 676 0036 C1E1     		b	.L63	@long jump	@
 677              	.LCB311:
 383:src/sim900_800.c **** 					prestadorSimSelect++;
 678              		.loc 1 383 0
 679 0038 D04B     		ldr	r3, .L69+4	@ tmp155,
 680 003a 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 681 003c 0133     		adds	r3, r3, #1	@ tmp156,
 682 003e DAB2     		uxtb	r2, r3	@ D.7769, tmp156
 683 0040 CE4B     		ldr	r3, .L69+4	@ tmp157,
 684 0042 1A70     		strb	r2, [r3]	@ tmp158, prestadorSimSelect
 384:src/sim900_800.c **** 				break;
 685              		.loc 1 384 0
 686 0044 BAE1     		b	.L63	@
 687              	.L30:
 385:src/sim900_800.c **** 			case 1:
 386:src/sim900_800.c **** 				if (*prestadorSim1 == 0)
 688              		.loc 1 386 0
 689 0046 029B     		ldr	r3, [sp, #8]	@ tmp159, prestadorSim1
 690 0048 1B78     		ldrb	r3, [r3]	@ D.7769, *prestadorSim1_33(D)
 691 004a 002B     		cmp	r3, #0	@ D.7769,
 692 004c 00D0     		beq	.LCB325	@
 693 004e D2E0     		b	.L31	@long jump	@
 694              	.LCB325:
 387:src/sim900_800.c **** 				{
 388:src/sim900_800.c **** 					switch(prestadorSimState)
 695              		.loc 1 388 0
 696 0050 CB4B     		ldr	r3, .L69+8	@ tmp160,
 697 0052 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 698 0054 012B     		cmp	r3, #1	@ D.7770,
 699 0056 0BD0     		beq	.L35	@,
 700 0058 022B     		cmp	r3, #2	@ D.7770,
 701 005a 44D0     		beq	.L36	@,
 702 005c 002B     		cmp	r3, #0	@ D.7770,
 703 005e 00D0     		beq	.LCB333	@
 704 0060 C2E0     		b	.L60	@long jump	@
 705              	.LCB333:
 389:src/sim900_800.c **** 					{
 390:src/sim900_800.c **** 					case 0:
 391:src/sim900_800.c **** 						prestadorSimState++;
 706              		.loc 1 391 0
 707 0062 C74B     		ldr	r3, .L69+8	@ tmp161,
 708 0064 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 709 0066 0133     		adds	r3, r3, #1	@ tmp162,
 710 0068 DAB2     		uxtb	r2, r3	@ D.7769, tmp162
 711 006a C54B     		ldr	r3, .L69+8	@ tmp163,
 712 006c 1A70     		strb	r2, [r3]	@ tmp164, prestadorSimState
 392:src/sim900_800.c **** 						break;
 713              		.loc 1 392 0
 714 006e C2E0     		b	.L31	@
 715              	.L35:
ARM GAS  /tmp/ccCNyPsy.s 			page 21


 393:src/sim900_800.c **** 					case 1:
 394:src/sim900_800.c **** 
 395:src/sim900_800.c **** 						i = GSM_SetSIM (1);
 716              		.loc 1 395 0
 717 0070 1724     		movs	r4, #23	@ tmp165,
 718 0072 6C44     		add	r4, r4, sp	@ tmp165,
 719 0074 0120     		movs	r0, #1	@,
 720 0076 FFF7FEFF 		bl	GSM_SetSIM	@
 721 007a 0300     		movs	r3, r0	@ tmp166,
 722 007c 2370     		strb	r3, [r4]	@ tmp168, i
 396:src/sim900_800.c **** 						if (i == 2)
 723              		.loc 1 396 0
 724 007e 1723     		movs	r3, #23	@ tmp169,
 725 0080 6B44     		add	r3, r3, sp	@ tmp169,
 726 0082 1B78     		ldrb	r3, [r3]	@ tmp170, i
 727 0084 022B     		cmp	r3, #2	@ tmp170,
 728 0086 05D1     		bne	.L38	@,
 397:src/sim900_800.c **** 							prestadorSimState++;
 729              		.loc 1 397 0
 730 0088 BD4B     		ldr	r3, .L69+8	@ tmp171,
 731 008a 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 732 008c 0133     		adds	r3, r3, #1	@ tmp172,
 733 008e DAB2     		uxtb	r2, r3	@ D.7769, tmp172
 734 0090 BB4B     		ldr	r3, .L69+8	@ tmp173,
 735 0092 1A70     		strb	r2, [r3]	@ tmp174, prestadorSimState
 736              	.L38:
 398:src/sim900_800.c **** 						if (i > 2)
 737              		.loc 1 398 0
 738 0094 1723     		movs	r3, #23	@ tmp175,
 739 0096 6B44     		add	r3, r3, sp	@ tmp175,
 740 0098 1B78     		ldrb	r3, [r3]	@ tmp176, i
 741 009a 022B     		cmp	r3, #2	@ tmp176,
 742 009c 08D9     		bls	.L39	@,
 399:src/sim900_800.c **** 						{
 400:src/sim900_800.c **** 							prestadorSimState = 0;
 743              		.loc 1 400 0
 744 009e B84B     		ldr	r3, .L69+8	@ tmp177,
 745 00a0 0022     		movs	r2, #0	@ tmp178,
 746 00a2 1A70     		strb	r2, [r3]	@ tmp179, prestadorSimState
 401:src/sim900_800.c **** 							//prestadorSimTime = 150;
 402:src/sim900_800.c **** 							prestadorSimSelect++;
 747              		.loc 1 402 0
 748 00a4 B54B     		ldr	r3, .L69+4	@ tmp180,
 749 00a6 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 750 00a8 0133     		adds	r3, r3, #1	@ tmp181,
 751 00aa DAB2     		uxtb	r2, r3	@ D.7769, tmp181
 752 00ac B34B     		ldr	r3, .L69+4	@ tmp182,
 753 00ae 1A70     		strb	r2, [r3]	@ tmp183, prestadorSimSelect
 754              	.L39:
 403:src/sim900_800.c **** 						}
 404:src/sim900_800.c **** 
 405:src/sim900_800.c **** 						if (i == 2)
 755              		.loc 1 405 0
 756 00b0 1723     		movs	r3, #23	@ tmp184,
 757 00b2 6B44     		add	r3, r3, sp	@ tmp184,
 758 00b4 1B78     		ldrb	r3, [r3]	@ tmp185, i
 759 00b6 022B     		cmp	r3, #2	@ tmp185,
ARM GAS  /tmp/ccCNyPsy.s 			page 22


 760 00b8 05D1     		bne	.L40	@,
 406:src/sim900_800.c **** 							prestadorSimState++;
 761              		.loc 1 406 0
 762 00ba B14B     		ldr	r3, .L69+8	@ tmp186,
 763 00bc 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 764 00be 0133     		adds	r3, r3, #1	@ tmp187,
 765 00c0 DAB2     		uxtb	r2, r3	@ D.7769, tmp187
 766 00c2 AF4B     		ldr	r3, .L69+8	@ tmp188,
 767 00c4 1A70     		strb	r2, [r3]	@ tmp189, prestadorSimState
 768              	.L40:
 407:src/sim900_800.c **** 						if (i > 2)
 769              		.loc 1 407 0
 770 00c6 1723     		movs	r3, #23	@ tmp190,
 771 00c8 6B44     		add	r3, r3, sp	@ tmp190,
 772 00ca 1B78     		ldrb	r3, [r3]	@ tmp191, i
 773 00cc 022B     		cmp	r3, #2	@ tmp191,
 774 00ce 00D8     		bhi	.LCB396	@
 775 00d0 8EE0     		b	.L64	@long jump	@
 776              	.LCB396:
 408:src/sim900_800.c **** 						{
 409:src/sim900_800.c **** 							prestadorSimState = 0;
 777              		.loc 1 409 0
 778 00d2 AB4B     		ldr	r3, .L69+8	@ tmp192,
 779 00d4 0022     		movs	r2, #0	@ tmp193,
 780 00d6 1A70     		strb	r2, [r3]	@ tmp194, prestadorSimState
 410:src/sim900_800.c **** 							//prestadorSimTime = 150;
 411:src/sim900_800.c **** 							prestadorSimSelect++;
 781              		.loc 1 411 0
 782 00d8 A84B     		ldr	r3, .L69+4	@ tmp195,
 783 00da 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 784 00dc 0133     		adds	r3, r3, #1	@ tmp196,
 785 00de DAB2     		uxtb	r2, r3	@ D.7769, tmp196
 786 00e0 A64B     		ldr	r3, .L69+4	@ tmp197,
 787 00e2 1A70     		strb	r2, [r3]	@ tmp198, prestadorSimSelect
 412:src/sim900_800.c **** 						}
 413:src/sim900_800.c **** 
 414:src/sim900_800.c **** 						break;
 788              		.loc 1 414 0
 789 00e4 84E0     		b	.L64	@
 790              	.L36:
 415:src/sim900_800.c **** 					case 2:
 416:src/sim900_800.c **** 						i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 791              		.loc 1 416 0
 792 00e6 1724     		movs	r4, #23	@ tmp199,
 793 00e8 6C44     		add	r4, r4, sp	@ tmp199,
 794 00ea A64B     		ldr	r3, .L69+12	@ tmp200,
 795 00ec A648     		ldr	r0, .L69+16	@ tmp201,
 796 00ee 0122     		movs	r2, #1	@,
 797 00f0 0F21     		movs	r1, #15	@,
 798 00f2 FFF7FEFF 		bl	GSMSendCommand	@
 799 00f6 0300     		movs	r3, r0	@ tmp202,
 800 00f8 2370     		strb	r3, [r4]	@ tmp204, i
 417:src/sim900_800.c **** 
 418:src/sim900_800.c **** 						if (i == 2)
 801              		.loc 1 418 0
 802 00fa 1723     		movs	r3, #23	@ tmp205,
 803 00fc 6B44     		add	r3, r3, sp	@ tmp205,
ARM GAS  /tmp/ccCNyPsy.s 			page 23


 804 00fe 1B78     		ldrb	r3, [r3]	@ tmp206, i
 805 0100 022B     		cmp	r3, #2	@ tmp206,
 806 0102 62D1     		bne	.L42	@,
 419:src/sim900_800.c **** 						{
 420:src/sim900_800.c **** 							if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") - 
 807              		.loc 1 420 0
 808 0104 A149     		ldr	r1, .L69+20	@ tmp207,
 809 0106 9F4B     		ldr	r3, .L69+12	@ tmp208,
 810 0108 0522     		movs	r2, #5	@,
 811 010a 1800     		movs	r0, r3	@, tmp208
 812 010c FFF7FEFF 		bl	strncmp	@
 813 0110 031E     		subs	r3, r0, #0	@ D.7770,,
 814 0112 54D1     		bne	.L43	@,
 421:src/sim900_800.c **** 							{
 422:src/sim900_800.c **** 
 423:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProveed
 815              		.loc 1 423 0
 816 0114 0A99     		ldr	r1, [sp, #40]	@ tmp209, pCONFIGURACIONgprsProveedor1
 817 0116 9E4B     		ldr	r3, .L69+24	@ tmp210,
 818 0118 0322     		movs	r2, #3	@,
 819 011a 1800     		movs	r0, r3	@, tmp210
 820 011c FFF7FEFF 		bl	strncmp	@
 821 0120 031E     		subs	r3, r0, #0	@ D.7770,,
 822 0122 20D1     		bne	.L44	@,
 424:src/sim900_800.c **** 								{
 425:src/sim900_800.c **** 									*prestadorSim1 = 1;
 823              		.loc 1 425 0
 824 0124 029B     		ldr	r3, [sp, #8]	@ tmp211, prestadorSim1
 825 0126 0122     		movs	r2, #1	@ tmp212,
 826 0128 1A70     		strb	r2, [r3]	@ tmp213, *prestadorSim1_33(D)
 426:src/sim900_800.c **** 
 427:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN1);
 827              		.loc 1 427 0
 828 012a 009A     		ldr	r2, [sp]	@ tmp214, pCONFIGURACIONgprsAPN1
 829 012c 994B     		ldr	r3, .L69+28	@ tmp215,
 830 012e 1100     		movs	r1, r2	@, tmp214
 831 0130 1800     		movs	r0, r3	@, tmp215
 832 0132 FFF7FEFF 		bl	strcpy	@
 428:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario1);
 833              		.loc 1 428 0
 834 0136 089A     		ldr	r2, [sp, #32]	@ tmp216, pCONFIGURACIONgprsUsuario1
 835 0138 974B     		ldr	r3, .L69+32	@ tmp217,
 836 013a 1100     		movs	r1, r2	@, tmp216
 837 013c 1800     		movs	r0, r3	@, tmp217
 838 013e FFF7FEFF 		bl	strcpy	@
 429:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave1);
 839              		.loc 1 429 0
 840 0142 099A     		ldr	r2, [sp, #36]	@ tmp218, pCONFIGURACIONgprsClave1
 841 0144 954B     		ldr	r3, .L69+36	@ tmp219,
 842 0146 1100     		movs	r1, r2	@, tmp218
 843 0148 1800     		movs	r0, r3	@, tmp219
 844 014a FFF7FEFF 		bl	strcpy	@
 430:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 845              		.loc 1 430 0
 846 014e 0F9A     		ldr	r2, [sp, #60]	@ tmp220, pCONFIGURACIONIPREMOTE
 847 0150 934B     		ldr	r3, .L69+40	@ tmp221,
 848 0152 1100     		movs	r1, r2	@, tmp220
ARM GAS  /tmp/ccCNyPsy.s 			page 24


 849 0154 1800     		movs	r0, r3	@, tmp221
 850 0156 FFF7FEFF 		bl	strcpy	@
 431:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 851              		.loc 1 431 0
 852 015a 109A     		ldr	r2, [sp, #64]	@ tmp222, pCONFIGURACIONPORTREMOTE
 853 015c 914B     		ldr	r3, .L69+44	@ tmp223,
 854 015e 1100     		movs	r1, r2	@, tmp222
 855 0160 1800     		movs	r0, r3	@, tmp223
 856 0162 FFF7FEFF 		bl	strcpy	@
 857              	.L44:
 432:src/sim900_800.c **** 								}
 433:src/sim900_800.c **** 
 434:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) &pCONFIGURACIONgprsProvee
 858              		.loc 1 434 0
 859 0166 0E99     		ldr	r1, [sp, #56]	@ tmp224, pCONFIGURACIONgprsProveedor2
 860 0168 894B     		ldr	r3, .L69+24	@ tmp225,
 861 016a 0322     		movs	r2, #3	@,
 862 016c 1800     		movs	r0, r3	@, tmp225
 863 016e FFF7FEFF 		bl	strncmp	@
 864 0172 031E     		subs	r3, r0, #0	@ D.7770,,
 865 0174 20D1     		bne	.L45	@,
 435:src/sim900_800.c **** 								{
 436:src/sim900_800.c **** 									*prestadorSim1 = 2;
 866              		.loc 1 436 0
 867 0176 029B     		ldr	r3, [sp, #8]	@ tmp226, prestadorSim1
 868 0178 0222     		movs	r2, #2	@ tmp227,
 869 017a 1A70     		strb	r2, [r3]	@ tmp228, *prestadorSim1_33(D)
 437:src/sim900_800.c **** 
 438:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN2);
 870              		.loc 1 438 0
 871 017c 0B9A     		ldr	r2, [sp, #44]	@ tmp229, pCONFIGURACIONgprsAPN2
 872 017e 854B     		ldr	r3, .L69+28	@ tmp230,
 873 0180 1100     		movs	r1, r2	@, tmp229
 874 0182 1800     		movs	r0, r3	@, tmp230
 875 0184 FFF7FEFF 		bl	strcpy	@
 439:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario2);
 876              		.loc 1 439 0
 877 0188 0C9A     		ldr	r2, [sp, #48]	@ tmp231, pCONFIGURACIONgprsUsuario2
 878 018a 834B     		ldr	r3, .L69+32	@ tmp232,
 879 018c 1100     		movs	r1, r2	@, tmp231
 880 018e 1800     		movs	r0, r3	@, tmp232
 881 0190 FFF7FEFF 		bl	strcpy	@
 440:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave2);
 882              		.loc 1 440 0
 883 0194 0D9A     		ldr	r2, [sp, #52]	@ tmp233, pCONFIGURACIONgprsClave2
 884 0196 814B     		ldr	r3, .L69+36	@ tmp234,
 885 0198 1100     		movs	r1, r2	@, tmp233
 886 019a 1800     		movs	r0, r3	@, tmp234
 887 019c FFF7FEFF 		bl	strcpy	@
 441:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 888              		.loc 1 441 0
 889 01a0 0F9A     		ldr	r2, [sp, #60]	@ tmp235, pCONFIGURACIONIPREMOTE
 890 01a2 7F4B     		ldr	r3, .L69+40	@ tmp236,
 891 01a4 1100     		movs	r1, r2	@, tmp235
 892 01a6 1800     		movs	r0, r3	@, tmp236
 893 01a8 FFF7FEFF 		bl	strcpy	@
 442:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
ARM GAS  /tmp/ccCNyPsy.s 			page 25


 894              		.loc 1 442 0
 895 01ac 109A     		ldr	r2, [sp, #64]	@ tmp237, pCONFIGURACIONPORTREMOTE
 896 01ae 7D4B     		ldr	r3, .L69+44	@ tmp238,
 897 01b0 1100     		movs	r1, r2	@, tmp237
 898 01b2 1800     		movs	r0, r3	@, tmp238
 899 01b4 FFF7FEFF 		bl	strcpy	@
 900              	.L45:
 443:src/sim900_800.c **** 								}
 444:src/sim900_800.c **** 
 445:src/sim900_800.c **** /*								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Per
 446:src/sim900_800.c **** 								{
 447:src/sim900_800.c **** 									*prestadorSim1 = 1;
 448:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Personal    ");
 449:src/sim900_800.c **** 								}
 450:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movis
 451:src/sim900_800.c **** 								{
 452:src/sim900_800.c **** 									*prestadorSim1 = 2;
 453:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Movistar    ");
 454:src/sim900_800.c **** 								}
 455:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro") 
 456:src/sim900_800.c **** 								{
 457:src/sim900_800.c **** 									*prestadorSim1 = 3;
 458:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n      Claro     ");
 459:src/sim900_800.c **** 								}
 460:src/sim900_800.c **** */
 461:src/sim900_800.c **** 								prestadorSimState = 0;
 901              		.loc 1 461 0
 902 01b8 714B     		ldr	r3, .L69+8	@ tmp239,
 903 01ba 0022     		movs	r2, #0	@ tmp240,
 904 01bc 1A70     		strb	r2, [r3]	@ tmp241, prestadorSimState
 905              	.L43:
 462:src/sim900_800.c **** 							}
 463:src/sim900_800.c **** 							//prestadorSimTime = 150;
 464:src/sim900_800.c **** 							prestadorSimSelect++;
 906              		.loc 1 464 0
 907 01be 6F4B     		ldr	r3, .L69+4	@ tmp242,
 908 01c0 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 909 01c2 0133     		adds	r3, r3, #1	@ tmp243,
 910 01c4 DAB2     		uxtb	r2, r3	@ D.7769, tmp243
 911 01c6 6D4B     		ldr	r3, .L69+4	@ tmp244,
 912 01c8 1A70     		strb	r2, [r3]	@ tmp245, prestadorSimSelect
 913              	.L42:
 465:src/sim900_800.c **** 						}
 466:src/sim900_800.c **** 						if (i > 2)
 914              		.loc 1 466 0
 915 01ca 1723     		movs	r3, #23	@ tmp246,
 916 01cc 6B44     		add	r3, r3, sp	@ tmp246,
 917 01ce 1B78     		ldrb	r3, [r3]	@ tmp247, i
 918 01d0 022B     		cmp	r3, #2	@ tmp247,
 919 01d2 0FD9     		bls	.L65	@,
 467:src/sim900_800.c **** 						{
 468:src/sim900_800.c **** 							prestadorSimState = 0;
 920              		.loc 1 468 0
 921 01d4 6A4B     		ldr	r3, .L69+8	@ tmp248,
 922 01d6 0022     		movs	r2, #0	@ tmp249,
 923 01d8 1A70     		strb	r2, [r3]	@ tmp250, prestadorSimState
 469:src/sim900_800.c **** 							//prestadorSimTime = 150;
ARM GAS  /tmp/ccCNyPsy.s 			page 26


 470:src/sim900_800.c **** 							prestadorSimSelect++;
 924              		.loc 1 470 0
 925 01da 684B     		ldr	r3, .L69+4	@ tmp251,
 926 01dc 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimSelect
 927 01de 0133     		adds	r3, r3, #1	@ tmp252,
 928 01e0 DAB2     		uxtb	r2, r3	@ D.7769, tmp252
 929 01e2 664B     		ldr	r3, .L69+4	@ tmp253,
 930 01e4 1A70     		strb	r2, [r3]	@ tmp254, prestadorSimSelect
 471:src/sim900_800.c **** 
 472:src/sim900_800.c **** 						}
 473:src/sim900_800.c **** 						break;
 931              		.loc 1 473 0
 932 01e6 05E0     		b	.L65	@
 933              	.L60:
 474:src/sim900_800.c **** 
 475:src/sim900_800.c **** 					default:
 476:src/sim900_800.c **** 						prestadorSimState = 0;
 934              		.loc 1 476 0
 935 01e8 654B     		ldr	r3, .L69+8	@ tmp255,
 936 01ea 0022     		movs	r2, #0	@ tmp256,
 937 01ec 1A70     		strb	r2, [r3]	@ tmp257, prestadorSimState
 477:src/sim900_800.c **** 						break;
 938              		.loc 1 477 0
 939 01ee 02E0     		b	.L31	@
 940              	.L64:
 414:src/sim900_800.c **** 					case 2:
 941              		.loc 1 414 0
 942 01f0 C046     		nop
 943 01f2 00E0     		b	.L31	@
 944              	.L65:
 473:src/sim900_800.c **** 
 945              		.loc 1 473 0
 946 01f4 C046     		nop
 947              	.L31:
 478:src/sim900_800.c **** 					}
 479:src/sim900_800.c **** 				}
 480:src/sim900_800.c **** 			case 2:
 481:src/sim900_800.c **** 				if (*prestadorSim2 == 0)
 948              		.loc 1 481 0
 949 01f6 019B     		ldr	r3, [sp, #4]	@ tmp258, prestadorSim2
 950 01f8 1B78     		ldrb	r3, [r3]	@ D.7769, *prestadorSim2_99(D)
 951 01fa 002B     		cmp	r3, #0	@ D.7769,
 952 01fc 00D0     		beq	.LCB557	@
 953 01fe DFE0     		b	.L66	@long jump	@
 954              	.LCB557:
 482:src/sim900_800.c **** 				{
 483:src/sim900_800.c **** 					switch(prestadorSimState)
 955              		.loc 1 483 0
 956 0200 5F4B     		ldr	r3, .L69+8	@ tmp259,
 957 0202 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 958 0204 012B     		cmp	r3, #1	@ D.7770,
 959 0206 0BD0     		beq	.L49	@,
 960 0208 022B     		cmp	r3, #2	@ D.7770,
 961 020a 2BD0     		beq	.L50	@,
 962 020c 002B     		cmp	r3, #0	@ D.7770,
 963 020e 00D0     		beq	.LCB565	@
 964 0210 A9E0     		b	.L61	@long jump	@
ARM GAS  /tmp/ccCNyPsy.s 			page 27


 965              	.LCB565:
 484:src/sim900_800.c **** 					{
 485:src/sim900_800.c **** 						case 0:
 486:src/sim900_800.c **** 							if (*pGSMHWstatus & 0x02);
 487:src/sim900_800.c **** 								prestadorSimState++;
 966              		.loc 1 487 0
 967 0212 5B4B     		ldr	r3, .L69+8	@ tmp262,
 968 0214 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 969 0216 0133     		adds	r3, r3, #1	@ tmp263,
 970 0218 DAB2     		uxtb	r2, r3	@ D.7769, tmp263
 971 021a 594B     		ldr	r3, .L69+8	@ tmp264,
 972 021c 1A70     		strb	r2, [r3]	@ tmp265, prestadorSimState
 488:src/sim900_800.c **** 							break;
 973              		.loc 1 488 0
 974 021e A9E0     		b	.L47	@
 975              	.L49:
 489:src/sim900_800.c **** 						case 1:
 490:src/sim900_800.c **** 							i = GSM_SetSIM (2);
 976              		.loc 1 490 0
 977 0220 1724     		movs	r4, #23	@ tmp266,
 978 0222 6C44     		add	r4, r4, sp	@ tmp266,
 979 0224 0220     		movs	r0, #2	@,
 980 0226 FFF7FEFF 		bl	GSM_SetSIM	@
 981 022a 0300     		movs	r3, r0	@ tmp267,
 982 022c 2370     		strb	r3, [r4]	@ tmp269, i
 491:src/sim900_800.c **** 
 492:src/sim900_800.c **** 							if (i == 2)
 983              		.loc 1 492 0
 984 022e 1723     		movs	r3, #23	@ tmp270,
 985 0230 6B44     		add	r3, r3, sp	@ tmp270,
 986 0232 1B78     		ldrb	r3, [r3]	@ tmp271, i
 987 0234 022B     		cmp	r3, #2	@ tmp271,
 988 0236 05D1     		bne	.L52	@,
 493:src/sim900_800.c **** 								prestadorSimState++;
 989              		.loc 1 493 0
 990 0238 514B     		ldr	r3, .L69+8	@ tmp272,
 991 023a 1B78     		ldrb	r3, [r3]	@ D.7769, prestadorSimState
 992 023c 0133     		adds	r3, r3, #1	@ tmp273,
 993 023e DAB2     		uxtb	r2, r3	@ D.7769, tmp273
 994 0240 4F4B     		ldr	r3, .L69+8	@ tmp274,
 995 0242 1A70     		strb	r2, [r3]	@ tmp275, prestadorSimState
 996              	.L52:
 494:src/sim900_800.c **** 							if (i > 2)
 997              		.loc 1 494 0
 998 0244 1723     		movs	r3, #23	@ tmp276,
 999 0246 6B44     		add	r3, r3, sp	@ tmp276,
 1000 0248 1B78     		ldrb	r3, [r3]	@ tmp277, i
 1001 024a 022B     		cmp	r3, #2	@ tmp277,
 1002 024c 00D8     		bhi	.LCB599	@
 1003 024e 8EE0     		b	.L67	@long jump	@
 1004              	.LCB599:
 495:src/sim900_800.c **** 							{
 496:src/sim900_800.c **** 								prestadorSimState = 0;
 1005              		.loc 1 496 0
 1006 0250 4B4B     		ldr	r3, .L69+8	@ tmp278,
 1007 0252 0022     		movs	r2, #0	@ tmp279,
 1008 0254 1A70     		strb	r2, [r3]	@ tmp280, prestadorSimState
ARM GAS  /tmp/ccCNyPsy.s 			page 28


 497:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1009              		.loc 1 497 0
 1010 0256 494B     		ldr	r3, .L69+4	@ tmp281,
 1011 0258 0022     		movs	r2, #0	@ tmp282,
 1012 025a 1A70     		strb	r2, [r3]	@ tmp283, prestadorSimSelect
 498:src/sim900_800.c **** 								prestadorSimTime = 150;
 1013              		.loc 1 498 0
 1014 025c 464B     		ldr	r3, .L69	@ tmp284,
 1015 025e 9622     		movs	r2, #150	@ tmp285,
 1016 0260 1A70     		strb	r2, [r3]	@ tmp286, prestadorSimTime
 499:src/sim900_800.c **** 							}
 500:src/sim900_800.c **** 
 501:src/sim900_800.c **** 							break;
 1017              		.loc 1 501 0
 1018 0262 84E0     		b	.L67	@
 1019              	.L50:
 502:src/sim900_800.c **** 						case 2:
 503:src/sim900_800.c **** 							i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 1020              		.loc 1 503 0
 1021 0264 1724     		movs	r4, #23	@ tmp287,
 1022 0266 6C44     		add	r4, r4, sp	@ tmp287,
 1023 0268 464B     		ldr	r3, .L69+12	@ tmp288,
 1024 026a 4748     		ldr	r0, .L69+16	@ tmp289,
 1025 026c 0122     		movs	r2, #1	@,
 1026 026e 0F21     		movs	r1, #15	@,
 1027 0270 FFF7FEFF 		bl	GSMSendCommand	@
 1028 0274 0300     		movs	r3, r0	@ tmp290,
 1029 0276 2370     		strb	r3, [r4]	@ tmp292, i
 504:src/sim900_800.c **** 
 505:src/sim900_800.c **** 							if (i == 2)
 1030              		.loc 1 505 0
 1031 0278 1723     		movs	r3, #23	@ tmp293,
 1032 027a 6B44     		add	r3, r3, sp	@ tmp293,
 1033 027c 1B78     		ldrb	r3, [r3]	@ tmp294, i
 1034 027e 022B     		cmp	r3, #2	@ tmp294,
 1035 0280 62D1     		bne	.L54	@,
 506:src/sim900_800.c **** 							{
 507:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") -
 1036              		.loc 1 507 0
 1037 0282 4249     		ldr	r1, .L69+20	@ tmp295,
 1038 0284 3F4B     		ldr	r3, .L69+12	@ tmp296,
 1039 0286 0522     		movs	r2, #5	@,
 1040 0288 1800     		movs	r0, r3	@, tmp296
 1041 028a FFF7FEFF 		bl	strncmp	@
 1042 028e 031E     		subs	r3, r0, #0	@ D.7770,,
 1043 0290 54D1     		bne	.L55	@,
 508:src/sim900_800.c **** 								{
 509:src/sim900_800.c **** 
 510:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1044              		.loc 1 510 0
 1045 0292 0A99     		ldr	r1, [sp, #40]	@ tmp297, pCONFIGURACIONgprsProveedor1
 1046 0294 3E4B     		ldr	r3, .L69+24	@ tmp298,
 1047 0296 0322     		movs	r2, #3	@,
 1048 0298 1800     		movs	r0, r3	@, tmp298
 1049 029a FFF7FEFF 		bl	strncmp	@
 1050 029e 031E     		subs	r3, r0, #0	@ D.7770,,
 1051 02a0 20D1     		bne	.L56	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 29


 511:src/sim900_800.c **** 									{
 512:src/sim900_800.c **** 										*prestadorSim2 = 1;
 1052              		.loc 1 512 0
 1053 02a2 019B     		ldr	r3, [sp, #4]	@ tmp299, prestadorSim2
 1054 02a4 0122     		movs	r2, #1	@ tmp300,
 1055 02a6 1A70     		strb	r2, [r3]	@ tmp301, *prestadorSim2_99(D)
 513:src/sim900_800.c **** 
 514:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN1);
 1056              		.loc 1 514 0
 1057 02a8 009A     		ldr	r2, [sp]	@ tmp302, pCONFIGURACIONgprsAPN1
 1058 02aa 3F4B     		ldr	r3, .L69+48	@ tmp303,
 1059 02ac 1100     		movs	r1, r2	@, tmp302
 1060 02ae 1800     		movs	r0, r3	@, tmp303
 1061 02b0 FFF7FEFF 		bl	strcpy	@
 515:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1062              		.loc 1 515 0
 1063 02b4 089A     		ldr	r2, [sp, #32]	@ tmp304, pCONFIGURACIONgprsUsuario1
 1064 02b6 3D4B     		ldr	r3, .L69+52	@ tmp305,
 1065 02b8 1100     		movs	r1, r2	@, tmp304
 1066 02ba 1800     		movs	r0, r3	@, tmp305
 1067 02bc FFF7FEFF 		bl	strcpy	@
 516:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave1);
 1068              		.loc 1 516 0
 1069 02c0 099A     		ldr	r2, [sp, #36]	@ tmp306, pCONFIGURACIONgprsClave1
 1070 02c2 3B4B     		ldr	r3, .L69+56	@ tmp307,
 1071 02c4 1100     		movs	r1, r2	@, tmp306
 1072 02c6 1800     		movs	r0, r3	@, tmp307
 1073 02c8 FFF7FEFF 		bl	strcpy	@
 517:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1074              		.loc 1 517 0
 1075 02cc 0F9A     		ldr	r2, [sp, #60]	@ tmp308, pCONFIGURACIONIPREMOTE
 1076 02ce 344B     		ldr	r3, .L69+40	@ tmp309,
 1077 02d0 1100     		movs	r1, r2	@, tmp308
 1078 02d2 1800     		movs	r0, r3	@, tmp309
 1079 02d4 FFF7FEFF 		bl	strcpy	@
 518:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1080              		.loc 1 518 0
 1081 02d8 109A     		ldr	r2, [sp, #64]	@ tmp310, pCONFIGURACIONPORTREMOTE
 1082 02da 324B     		ldr	r3, .L69+44	@ tmp311,
 1083 02dc 1100     		movs	r1, r2	@, tmp310
 1084 02de 1800     		movs	r0, r3	@, tmp311
 1085 02e0 FFF7FEFF 		bl	strcpy	@
 1086              	.L56:
 519:src/sim900_800.c **** 									}
 520:src/sim900_800.c **** 
 521:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1087              		.loc 1 521 0
 1088 02e4 0E99     		ldr	r1, [sp, #56]	@ tmp312, pCONFIGURACIONgprsProveedor2
 1089 02e6 2A4B     		ldr	r3, .L69+24	@ tmp313,
 1090 02e8 0322     		movs	r2, #3	@,
 1091 02ea 1800     		movs	r0, r3	@, tmp313
 1092 02ec FFF7FEFF 		bl	strncmp	@
 1093 02f0 031E     		subs	r3, r0, #0	@ D.7770,,
 1094 02f2 20D1     		bne	.L57	@,
 522:src/sim900_800.c **** 									{
 523:src/sim900_800.c **** 										*prestadorSim2 = 2;
 1095              		.loc 1 523 0
ARM GAS  /tmp/ccCNyPsy.s 			page 30


 1096 02f4 019B     		ldr	r3, [sp, #4]	@ tmp314, prestadorSim2
 1097 02f6 0222     		movs	r2, #2	@ tmp315,
 1098 02f8 1A70     		strb	r2, [r3]	@ tmp316, *prestadorSim2_99(D)
 524:src/sim900_800.c **** 
 525:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN2);
 1099              		.loc 1 525 0
 1100 02fa 0B9A     		ldr	r2, [sp, #44]	@ tmp317, pCONFIGURACIONgprsAPN2
 1101 02fc 2A4B     		ldr	r3, .L69+48	@ tmp318,
 1102 02fe 1100     		movs	r1, r2	@, tmp317
 1103 0300 1800     		movs	r0, r3	@, tmp318
 1104 0302 FFF7FEFF 		bl	strcpy	@
 526:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1105              		.loc 1 526 0
 1106 0306 0C9A     		ldr	r2, [sp, #48]	@ tmp319, pCONFIGURACIONgprsUsuario2
 1107 0308 284B     		ldr	r3, .L69+52	@ tmp320,
 1108 030a 1100     		movs	r1, r2	@, tmp319
 1109 030c 1800     		movs	r0, r3	@, tmp320
 1110 030e FFF7FEFF 		bl	strcpy	@
 527:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave2);
 1111              		.loc 1 527 0
 1112 0312 0D9A     		ldr	r2, [sp, #52]	@ tmp321, pCONFIGURACIONgprsClave2
 1113 0314 264B     		ldr	r3, .L69+56	@ tmp322,
 1114 0316 1100     		movs	r1, r2	@, tmp321
 1115 0318 1800     		movs	r0, r3	@, tmp322
 1116 031a FFF7FEFF 		bl	strcpy	@
 528:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1117              		.loc 1 528 0
 1118 031e 0F9A     		ldr	r2, [sp, #60]	@ tmp323, pCONFIGURACIONIPREMOTE
 1119 0320 1F4B     		ldr	r3, .L69+40	@ tmp324,
 1120 0322 1100     		movs	r1, r2	@, tmp323
 1121 0324 1800     		movs	r0, r3	@, tmp324
 1122 0326 FFF7FEFF 		bl	strcpy	@
 529:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1123              		.loc 1 529 0
 1124 032a 109A     		ldr	r2, [sp, #64]	@ tmp325, pCONFIGURACIONPORTREMOTE
 1125 032c 1D4B     		ldr	r3, .L69+44	@ tmp326,
 1126 032e 1100     		movs	r1, r2	@, tmp325
 1127 0330 1800     		movs	r0, r3	@, tmp326
 1128 0332 FFF7FEFF 		bl	strcpy	@
 1129              	.L57:
 530:src/sim900_800.c **** 									}
 531:src/sim900_800.c **** 
 532:src/sim900_800.c **** /*									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Pe
 533:src/sim900_800.c **** 									{
 534:src/sim900_800.c **** 										*prestadorSim2 = 1;
 535:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Personal    ");
 536:src/sim900_800.c **** 									}
 537:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movi
 538:src/sim900_800.c **** 									{
 539:src/sim900_800.c **** 										*prestadorSim2 = 2;
 540:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Movistar    ");
 541:src/sim900_800.c **** 									}
 542:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro")
 543:src/sim900_800.c **** 									{
 544:src/sim900_800.c **** 										*prestadorSim2 = 3;
 545:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n      Claro     ");
 546:src/sim900_800.c **** 									}
ARM GAS  /tmp/ccCNyPsy.s 			page 31


 547:src/sim900_800.c **** */
 548:src/sim900_800.c **** 									prestadorSimState = 0;
 1130              		.loc 1 548 0
 1131 0336 124B     		ldr	r3, .L69+8	@ tmp327,
 1132 0338 0022     		movs	r2, #0	@ tmp328,
 1133 033a 1A70     		strb	r2, [r3]	@ tmp329, prestadorSimState
 1134              	.L55:
 549:src/sim900_800.c **** 
 550:src/sim900_800.c **** 								}
 551:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1135              		.loc 1 551 0
 1136 033c 0F4B     		ldr	r3, .L69+4	@ tmp330,
 1137 033e 0022     		movs	r2, #0	@ tmp331,
 1138 0340 1A70     		strb	r2, [r3]	@ tmp332, prestadorSimSelect
 552:src/sim900_800.c **** 								prestadorSimTime = 150;
 1139              		.loc 1 552 0
 1140 0342 0D4B     		ldr	r3, .L69	@ tmp333,
 1141 0344 9622     		movs	r2, #150	@ tmp334,
 1142 0346 1A70     		strb	r2, [r3]	@ tmp335, prestadorSimTime
 1143              	.L54:
 553:src/sim900_800.c **** 							}
 554:src/sim900_800.c **** 							if (i > 2)
 1144              		.loc 1 554 0
 1145 0348 1723     		movs	r3, #23	@ tmp336,
 1146 034a 6B44     		add	r3, r3, sp	@ tmp336,
 1147 034c 1B78     		ldrb	r3, [r3]	@ tmp337, i
 1148 034e 022B     		cmp	r3, #2	@ tmp337,
 1149 0350 0FD9     		bls	.L68	@,
 555:src/sim900_800.c **** 							{
 556:src/sim900_800.c **** 								prestadorSimState = 0;
 1150              		.loc 1 556 0
 1151 0352 0B4B     		ldr	r3, .L69+8	@ tmp338,
 1152 0354 0022     		movs	r2, #0	@ tmp339,
 1153 0356 1A70     		strb	r2, [r3]	@ tmp340, prestadorSimState
 557:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1154              		.loc 1 557 0
 1155 0358 084B     		ldr	r3, .L69+4	@ tmp341,
 1156 035a 0022     		movs	r2, #0	@ tmp342,
 1157 035c 1A70     		strb	r2, [r3]	@ tmp343, prestadorSimSelect
 558:src/sim900_800.c **** 								prestadorSimTime = 150;
 1158              		.loc 1 558 0
 1159 035e 064B     		ldr	r3, .L69	@ tmp344,
 1160 0360 9622     		movs	r2, #150	@ tmp345,
 1161 0362 1A70     		strb	r2, [r3]	@ tmp346, prestadorSimTime
 559:src/sim900_800.c **** 							}
 560:src/sim900_800.c **** 							break;
 1162              		.loc 1 560 0
 1163 0364 05E0     		b	.L68	@
 1164              	.L61:
 561:src/sim900_800.c **** 
 562:src/sim900_800.c **** 						default:
 563:src/sim900_800.c **** 							prestadorSimState = 0;
 1165              		.loc 1 563 0
 1166 0366 064B     		ldr	r3, .L69+8	@ tmp347,
 1167 0368 0022     		movs	r2, #0	@ tmp348,
 1168 036a 1A70     		strb	r2, [r3]	@ tmp349, prestadorSimState
 564:src/sim900_800.c **** 							break;
ARM GAS  /tmp/ccCNyPsy.s 			page 32


 1169              		.loc 1 564 0
 1170 036c 02E0     		b	.L47	@
 1171              	.L67:
 501:src/sim900_800.c **** 						case 2:
 1172              		.loc 1 501 0
 1173 036e C046     		nop
 1174 0370 26E0     		b	.L66	@
 1175              	.L68:
 560:src/sim900_800.c **** 
 1176              		.loc 1 560 0
 1177 0372 C046     		nop
 1178              	.L47:
 565:src/sim900_800.c **** 					}
 566:src/sim900_800.c **** 				}
 567:src/sim900_800.c **** 				break;
 1179              		.loc 1 567 0 discriminator 1
 1180 0374 24E0     		b	.L66	@
 1181              	.L70:
 1182 0376 C046     		.align	2
 1183              	.L69:
 1184 0378 00000000 		.word	prestadorSimTime
 1185 037c 00000000 		.word	prestadorSimSelect
 1186 0380 00000000 		.word	prestadorSimState
 1187 0384 00000000 		.word	GSMbuffRtaCommand
 1188 0388 00000000 		.word	.LC12
 1189 038c 0C000000 		.word	.LC14
 1190 0390 08000000 		.word	GSMbuffRtaCommand+8
 1191 0394 00000000 		.word	SIM900APNSIM1
 1192 0398 00000000 		.word	SIM900USUARIOSIM1
 1193 039c 00000000 		.word	SIM900CLAVESIM1
 1194 03a0 00000000 		.word	SIM900IPREMOTE
 1195 03a4 00000000 		.word	SIM900PORTREMOTE
 1196 03a8 00000000 		.word	SIM900APNSIM2
 1197 03ac 00000000 		.word	SIM900USUARIOSIM2
 1198 03b0 00000000 		.word	SIM900CLAVESIM2
 1199              	.L59:
 568:src/sim900_800.c **** 
 569:src/sim900_800.c **** 			default:
 570:src/sim900_800.c **** 				prestadorSimSelect = 0;
 1200              		.loc 1 570 0
 1201 03b4 044B     		ldr	r3, .L71	@ tmp350,
 1202 03b6 0022     		movs	r2, #0	@ tmp351,
 1203 03b8 1A70     		strb	r2, [r3]	@ tmp352, prestadorSimSelect
 571:src/sim900_800.c **** 				break;
 1204              		.loc 1 571 0
 1205 03ba 02E0     		b	.L28	@
 1206              	.L63:
 384:src/sim900_800.c **** 			case 1:
 1207              		.loc 1 384 0
 1208 03bc C046     		nop
 1209 03be 00E0     		b	.L62	@
 1210              	.L66:
 567:src/sim900_800.c **** 
 1211              		.loc 1 567 0
 1212 03c0 C046     		nop
 1213              	.L28:
 1214              	.L62:
ARM GAS  /tmp/ccCNyPsy.s 			page 33


 572:src/sim900_800.c **** 
 573:src/sim900_800.c **** 
 574:src/sim900_800.c **** 		}
 575:src/sim900_800.c **** 
 576:src/sim900_800.c **** 	}
 577:src/sim900_800.c **** }
 1215              		.loc 1 577 0
 1216 03c2 C046     		nop
 1217 03c4 06B0     		add	sp, sp, #24	@,,
 1218              		@ sp needed	@
 1219 03c6 10BD     		pop	{r4, pc}
 1220              	.L72:
 1221              		.align	2
 1222              	.L71:
 1223 03c8 00000000 		.word	prestadorSimSelect
 1224              		.cfi_endproc
 1225              	.LFE23:
 1226              		.size	GSMPrestador, .-GSMPrestador
 1227              		.section	.rodata
 1228 0012 0000     		.align	2
 1229              	.LC27:
 1230 0014 41542B43 		.ascii	"AT+CIPSHUT\015\012\000"
 1230      49505348 
 1230      55540D0A 
 1230      00
 1231              		.section	.text.GSMCloseIP,"ax",%progbits
 1232              		.align	2
 1233              		.global	GSMCloseIP
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	GSMCloseIP, %function
 1237              	GSMCloseIP:
 1238              	.LFB24:
 578:src/sim900_800.c **** 
 579:src/sim900_800.c **** char GSMCloseIP(void)
 580:src/sim900_800.c **** {
 1239              		.loc 1 580 0
 1240              		.cfi_startproc
 1241 0000 10B5     		push	{r4, lr}	@
 1242              	.LCFI4:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 14, -4
 1246 0002 82B0     		sub	sp, sp, #8	@,,
 1247              	.LCFI5:
 1248              		.cfi_def_cfa_offset 16
 581:src/sim900_800.c **** 	unsigned char i = 0;
 1249              		.loc 1 581 0
 1250 0004 6B46     		mov	r3, sp	@ tmp136,
 1251 0006 0733     		adds	r3, r3, #7	@ tmp113,
 1252 0008 0022     		movs	r2, #0	@ tmp114,
 1253 000a 1A70     		strb	r2, [r3]	@ tmp115, i
 582:src/sim900_800.c **** 
 583:src/sim900_800.c **** 	if (flagCloseIP == 1)
 1254              		.loc 1 583 0
 1255 000c 154B     		ldr	r3, .L78	@ tmp116,
 1256 000e 1B78     		ldrb	r3, [r3]	@ D.7774, flagCloseIP
ARM GAS  /tmp/ccCNyPsy.s 			page 34


 1257 0010 012B     		cmp	r3, #1	@ D.7774,
 1258 0012 23D1     		bne	.L74	@,
 584:src/sim900_800.c **** 	{
 585:src/sim900_800.c **** 		i = GSMSendCommand ("AT+CIPSHUT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 1259              		.loc 1 585 0
 1260 0014 6B46     		mov	r3, sp	@ tmp137,
 1261 0016 DC1D     		adds	r4, r3, #7	@ tmp117, tmp137,
 1262 0018 134B     		ldr	r3, .L78+4	@ tmp118,
 1263 001a 1448     		ldr	r0, .L78+8	@ tmp119,
 1264 001c 0022     		movs	r2, #0	@,
 1265 001e 0F21     		movs	r1, #15	@,
 1266 0020 FFF7FEFF 		bl	GSMSendCommand	@
 1267 0024 0300     		movs	r3, r0	@ tmp120,
 1268 0026 2370     		strb	r3, [r4]	@ tmp122, i
 586:src/sim900_800.c **** 
 587:src/sim900_800.c **** 		if (i == 2)
 1269              		.loc 1 587 0
 1270 0028 6B46     		mov	r3, sp	@ tmp138,
 1271 002a 0733     		adds	r3, r3, #7	@ tmp123,
 1272 002c 1B78     		ldrb	r3, [r3]	@ tmp124, i
 1273 002e 022B     		cmp	r3, #2	@ tmp124,
 1274 0030 06D1     		bne	.L75	@,
 588:src/sim900_800.c **** 		{
 589:src/sim900_800.c **** 			flagCloseIP = 0;
 1275              		.loc 1 589 0
 1276 0032 0C4B     		ldr	r3, .L78	@ tmp125,
 1277 0034 0022     		movs	r2, #0	@ tmp126,
 1278 0036 1A70     		strb	r2, [r3]	@ tmp127, flagCloseIP
 590:src/sim900_800.c **** 			return i;
 1279              		.loc 1 590 0
 1280 0038 6B46     		mov	r3, sp	@ tmp139,
 1281 003a 0733     		adds	r3, r3, #7	@ tmp128,
 1282 003c 1B78     		ldrb	r3, [r3]	@ D.7773, i
 1283 003e 0EE0     		b	.L76	@
 1284              	.L75:
 591:src/sim900_800.c **** 		}
 592:src/sim900_800.c **** 		if (i > 2)
 1285              		.loc 1 592 0
 1286 0040 6B46     		mov	r3, sp	@ tmp140,
 1287 0042 0733     		adds	r3, r3, #7	@ tmp129,
 1288 0044 1B78     		ldrb	r3, [r3]	@ tmp130, i
 1289 0046 022B     		cmp	r3, #2	@ tmp130,
 1290 0048 06D9     		bls	.L77	@,
 593:src/sim900_800.c **** 		{
 594:src/sim900_800.c **** 			flagCloseIP = 0;
 1291              		.loc 1 594 0
 1292 004a 064B     		ldr	r3, .L78	@ tmp131,
 1293 004c 0022     		movs	r2, #0	@ tmp132,
 1294 004e 1A70     		strb	r2, [r3]	@ tmp133, flagCloseIP
 595:src/sim900_800.c **** 			return i;
 1295              		.loc 1 595 0
 1296 0050 6B46     		mov	r3, sp	@ tmp141,
 1297 0052 0733     		adds	r3, r3, #7	@ tmp134,
 1298 0054 1B78     		ldrb	r3, [r3]	@ D.7773, i
 1299 0056 02E0     		b	.L76	@
 1300              	.L77:
 596:src/sim900_800.c **** 		}
ARM GAS  /tmp/ccCNyPsy.s 			page 35


 597:src/sim900_800.c **** 
 598:src/sim900_800.c **** 		return 1;
 1301              		.loc 1 598 0
 1302 0058 0123     		movs	r3, #1	@ D.7773,
 1303 005a 00E0     		b	.L76	@
 1304              	.L74:
 599:src/sim900_800.c **** 	}
 600:src/sim900_800.c **** 
 601:src/sim900_800.c **** 	return 0;
 1305              		.loc 1 601 0
 1306 005c 0023     		movs	r3, #0	@ D.7773,
 1307              	.L76:
 602:src/sim900_800.c **** }
 1308              		.loc 1 602 0
 1309 005e 1800     		movs	r0, r3	@, <retval>
 1310 0060 02B0     		add	sp, sp, #8	@,,
 1311              		@ sp needed	@
 1312 0062 10BD     		pop	{r4, pc}
 1313              	.L79:
 1314              		.align	2
 1315              	.L78:
 1316 0064 00000000 		.word	flagCloseIP
 1317 0068 00000000 		.word	GSMbuffRtaCommand
 1318 006c 14000000 		.word	.LC27
 1319              		.cfi_endproc
 1320              	.LFE24:
 1321              		.size	GSMCloseIP, .-GSMCloseIP
 1322              		.section	.rodata
 1323 0021 000000   		.align	2
 1324              	.LC31:
 1325 0024 434C4F53 		.ascii	"CLOSED\000"
 1325      454400
 1326 002b 00       		.align	2
 1327              	.LC36:
 1328 002c 53485554 		.ascii	"SHUT OK\000"
 1328      204F4B00 
 1329              		.align	2
 1330              	.LC38:
 1331 0034 3030303A 		.ascii	"000: ACK\000"
 1331      2041434B 
 1331      00
 1332 003d 000000   		.align	2
 1333              	.LC40:
 1334 0040 41540D0D 		.ascii	"AT\015\015\012OK\015\012\000"
 1334      0A4F4B0D 
 1334      0A00
 1335 004a 0000     		.align	2
 1336              	.LC42:
 1337 004c 0D0A4F4B 		.ascii	"\015\012OK\015\012\000"
 1337      0D0A00
 1338 0053 00       		.align	2
 1339              	.LC44:
 1340 0054 3030303A 		.ascii	"000: NAK\000"
 1340      204E414B 
 1340      00
 1341 005d 000000   		.align	2
 1342              	.LC46:
ARM GAS  /tmp/ccCNyPsy.s 			page 36


 1343 0060 0D0A4552 		.ascii	"\015\012ERROR\015\012\000"
 1343      524F520D 
 1343      0A00
 1344 006a 0000     		.align	2
 1345              	.LC53:
 1346 006c 3030303A 		.ascii	"000:\000"
 1346      00
 1347 0071 000000   		.align	2
 1348              	.LC56:
 1349 0074 2B434D54 		.ascii	"+CMTIDS: \"SM\",\000"
 1349      4944533A 
 1349      2022534D 
 1349      222C00
 1350 0083 00       		.align	2
 1351              	.LC59:
 1352 0084 2B434D54 		.ascii	"+CMTI: \"SM\",\000"
 1352      493A2022 
 1352      534D222C 
 1352      00
 1353              		.section	.text.GSMReceive,"ax",%progbits
 1354              		.align	2
 1355              		.global	GSMReceive
 1356              		.code	16
 1357              		.thumb_func
 1358              		.type	GSMReceive, %function
 1359              	GSMReceive:
 1360              	.LFB25:
 603:src/sim900_800.c **** 
 604:src/sim900_800.c **** //Procesa respuestas del modulo GSM ubicadas en el buffer buffUARTGSMrx2 con flag PacketReadyUARTGS
 605:src/sim900_800.c **** //revisa los flag de estados GSMConfigGPRSflag GSMSendCommandFlag y revisa respuestas no esperadas
 606:src/sim900_800.c **** //para respuestas no esperadas revisa SMS y avisa la cantidad con GSMCantSMS
 607:src/sim900_800.c **** //void GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, u
 608:src/sim900_800.c **** void GSMReceive (void)
 609:src/sim900_800.c **** {
 1361              		.loc 1 609 0
 1362              		.cfi_startproc
 1363 0000 10B5     		push	{r4, lr}	@
 1364              	.LCFI6:
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 4, -8
 1367              		.cfi_offset 14, -4
 610:src/sim900_800.c **** 
 611:src/sim900_800.c **** 	//---- Comunicacion con modulo GSM ----//
 612:src/sim900_800.c **** 	if (PacketReadyUARTGSM)
 1368              		.loc 1 612 0
 1369 0002 9C4B     		ldr	r3, .L101	@ tmp151,
 1370 0004 1B78     		ldrb	r3, [r3]	@ tmp152, PacketReadyUARTGSM
 1371 0006 DBB2     		uxtb	r3, r3	@ D.7776, tmp152
 1372 0008 002B     		cmp	r3, #0	@ D.7776,
 1373 000a 00D1     		bne	.LCB911	@
 1374 000c 30E1     		b	.L100	@long jump	@
 1375              	.LCB911:
 613:src/sim900_800.c **** 	{
 614:src/sim900_800.c **** 		if (GSMSendCommandFlag)
 1376              		.loc 1 614 0
 1377 000e 9A4B     		ldr	r3, .L101+4	@ tmp153,
 1378 0010 1B78     		ldrb	r3, [r3]	@ D.7776, GSMSendCommandFlag
ARM GAS  /tmp/ccCNyPsy.s 			page 37


 1379 0012 002B     		cmp	r3, #0	@ D.7776,
 1380 0014 00D1     		bne	.LCB915	@
 1381 0016 70E0     		b	.L82	@long jump	@
 1382              	.LCB915:
 615:src/sim900_800.c **** 		{
 616:src/sim900_800.c **** 
 617:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"CLOS
 1383              		.loc 1 617 0
 1384 0018 9849     		ldr	r1, .L101+8	@ tmp154,
 1385 001a 994B     		ldr	r3, .L101+12	@ tmp155,
 1386 001c 0622     		movs	r2, #6	@,
 1387 001e 1800     		movs	r0, r3	@, tmp155
 1388 0020 FFF7FEFF 		bl	strncmp	@
 1389 0024 031E     		subs	r3, r0, #0	@ D.7777,,
 1390 0026 02D1     		bne	.L83	@,
 618:src/sim900_800.c **** 				DB300flagConnGPRS = 1;
 1391              		.loc 1 618 0
 1392 0028 964B     		ldr	r3, .L101+16	@ tmp156,
 1393 002a 0122     		movs	r2, #1	@ tmp157,
 1394 002c 1A70     		strb	r2, [r3]	@ tmp158, DB300flagConnGPRS
 1395              	.L83:
 619:src/sim900_800.c **** 
 620:src/sim900_800.c **** 
 621:src/sim900_800.c **** 			if (GSMSendCommandFlag == 3)
 1396              		.loc 1 621 0
 1397 002e 924B     		ldr	r3, .L101+4	@ tmp159,
 1398 0030 1B78     		ldrb	r3, [r3]	@ D.7776, GSMSendCommandFlag
 1399 0032 032B     		cmp	r3, #3	@ D.7776,
 1400 0034 3ED1     		bne	.L84	@,
 622:src/sim900_800.c **** 			{
 623:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_SENDOK[0], strlen((const char 
 1401              		.loc 1 623 0
 1402 0036 9449     		ldr	r1, .L101+20	@ tmp160,
 1403 0038 914B     		ldr	r3, .L101+12	@ tmp161,
 1404 003a 0822     		movs	r2, #8	@,
 1405 003c 1800     		movs	r0, r3	@, tmp161
 1406 003e FFF7FEFF 		bl	strncmp	@
 1407 0042 031E     		subs	r3, r0, #0	@ D.7777,,
 1408 0044 02D1     		bne	.L85	@,
 624:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1409              		.loc 1 624 0
 1410 0046 8C4B     		ldr	r3, .L101+4	@ tmp162,
 1411 0048 0422     		movs	r2, #4	@ tmp163,
 1412 004a 1A70     		strb	r2, [r3]	@ tmp164, GSMSendCommandFlag
 1413              	.L85:
 625:src/sim900_800.c **** //				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_OK[0], strlen((const char *)
 626:src/sim900_800.c **** //					GSMSendCommandFlag = 4;
 627:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"SHUT OK", strlen((const char *)"SH
 1414              		.loc 1 627 0
 1415 004c 8F49     		ldr	r1, .L101+24	@ tmp165,
 1416 004e 8C4B     		ldr	r3, .L101+12	@ tmp166,
 1417 0050 0722     		movs	r2, #7	@,
 1418 0052 1800     		movs	r0, r3	@, tmp166
 1419 0054 FFF7FEFF 		bl	strncmp	@
 1420 0058 031E     		subs	r3, r0, #0	@ D.7777,,
 1421 005a 02D1     		bne	.L86	@,
 628:src/sim900_800.c **** 									GSMSendCommandFlag = 4;
ARM GAS  /tmp/ccCNyPsy.s 			page 38


 1422              		.loc 1 628 0
 1423 005c 864B     		ldr	r3, .L101+4	@ tmp167,
 1424 005e 0422     		movs	r2, #4	@ tmp168,
 1425 0060 1A70     		strb	r2, [r3]	@ tmp169, GSMSendCommandFlag
 1426              	.L86:
 629:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: ACK", sizeof("000: ACK") - 1)
 1427              		.loc 1 629 0
 1428 0062 8B49     		ldr	r1, .L101+28	@ tmp170,
 1429 0064 864B     		ldr	r3, .L101+12	@ tmp171,
 1430 0066 0822     		movs	r2, #8	@,
 1431 0068 1800     		movs	r0, r3	@, tmp171
 1432 006a FFF7FEFF 		bl	strncmp	@
 1433 006e 031E     		subs	r3, r0, #0	@ D.7777,,
 1434 0070 02D1     		bne	.L87	@,
 630:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1435              		.loc 1 630 0
 1436 0072 814B     		ldr	r3, .L101+4	@ tmp172,
 1437 0074 0422     		movs	r2, #4	@ tmp173,
 1438 0076 1A70     		strb	r2, [r3]	@ tmp174, GSMSendCommandFlag
 1439              	.L87:
 631:src/sim900_800.c **** 				if(buffUARTGSMrx2[0] == '>')
 1440              		.loc 1 631 0
 1441 0078 814B     		ldr	r3, .L101+12	@ tmp175,
 1442 007a 1B78     		ldrb	r3, [r3]	@ tmp176, buffUARTGSMrx2
 1443 007c DBB2     		uxtb	r3, r3	@ D.7776, tmp176
 1444 007e 3E2B     		cmp	r3, #62	@ D.7776,
 1445 0080 02D1     		bne	.L88	@,
 632:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1446              		.loc 1 632 0
 1447 0082 7D4B     		ldr	r3, .L101+4	@ tmp177,
 1448 0084 0422     		movs	r2, #4	@ tmp178,
 1449 0086 1A70     		strb	r2, [r3]	@ tmp179, GSMSendCommandFlag
 1450              	.L88:
 633:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"AT\r\r\nOK\r\n", sizeof "AT\r\r\nO
 1451              		.loc 1 633 0
 1452 0088 8249     		ldr	r1, .L101+32	@ tmp180,
 1453 008a 7D4B     		ldr	r3, .L101+12	@ tmp181,
 1454 008c 0A22     		movs	r2, #10	@,
 1455 008e 1800     		movs	r0, r3	@, tmp181
 1456 0090 FFF7FEFF 		bl	strncmp	@
 1457 0094 031E     		subs	r3, r0, #0	@ D.7777,,
 1458 0096 02D1     		bne	.L89	@,
 634:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1459              		.loc 1 634 0
 1460 0098 774B     		ldr	r3, .L101+4	@ tmp182,
 1461 009a 0422     		movs	r2, #4	@ tmp183,
 1462 009c 1A70     		strb	r2, [r3]	@ tmp184, GSMSendCommandFlag
 1463              	.L89:
 635:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"\r\nOK\r\n", sizeof "\r\nOK\r\n"))
 1464              		.loc 1 635 0
 1465 009e 7E49     		ldr	r1, .L101+36	@ tmp185,
 1466 00a0 774B     		ldr	r3, .L101+12	@ tmp186,
 1467 00a2 0722     		movs	r2, #7	@,
 1468 00a4 1800     		movs	r0, r3	@, tmp186
 1469 00a6 FFF7FEFF 		bl	strncmp	@
 1470 00aa 031E     		subs	r3, r0, #0	@ D.7777,,
 1471 00ac 02D1     		bne	.L84	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 39


 636:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1472              		.loc 1 636 0
 1473 00ae 724B     		ldr	r3, .L101+4	@ tmp187,
 1474 00b0 0422     		movs	r2, #4	@ tmp188,
 1475 00b2 1A70     		strb	r2, [r3]	@ tmp189, GSMSendCommandFlag
 1476              	.L84:
 637:src/sim900_800.c **** 			}
 638:src/sim900_800.c **** 
 639:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: NAK", sizeof("000: NAK") - 1))
 1477              		.loc 1 639 0
 1478 00b4 7949     		ldr	r1, .L101+40	@ tmp190,
 1479 00b6 724B     		ldr	r3, .L101+12	@ tmp191,
 1480 00b8 0822     		movs	r2, #8	@,
 1481 00ba 1800     		movs	r0, r3	@, tmp191
 1482 00bc FFF7FEFF 		bl	strncmp	@
 1483 00c0 031E     		subs	r3, r0, #0	@ D.7777,,
 1484 00c2 02D1     		bne	.L90	@,
 640:src/sim900_800.c **** 				GSMSendCommandFlag = 5;
 1485              		.loc 1 640 0
 1486 00c4 6C4B     		ldr	r3, .L101+4	@ tmp192,
 1487 00c6 0522     		movs	r2, #5	@ tmp193,
 1488 00c8 1A70     		strb	r2, [r3]	@ tmp194, GSMSendCommandFlag
 1489              	.L90:
 641:src/sim900_800.c **** 
 642:src/sim900_800.c **** 
 643:src/sim900_800.c **** 
 644:src/sim900_800.c **** //			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_ERR[0], strlen((const char *)
 645:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *) "\r\nERROR\r\n", sizeof("\r\nERROR\
 1490              		.loc 1 645 0
 1491 00ca 7549     		ldr	r1, .L101+44	@ tmp195,
 1492 00cc 6C4B     		ldr	r3, .L101+12	@ tmp196,
 1493 00ce 0A22     		movs	r2, #10	@,
 1494 00d0 1800     		movs	r0, r3	@, tmp196
 1495 00d2 FFF7FEFF 		bl	strncmp	@
 1496 00d6 031E     		subs	r3, r0, #0	@ D.7777,,
 1497 00d8 02D1     		bne	.L91	@,
 646:src/sim900_800.c **** 			{
 647:src/sim900_800.c **** 				GSMSendCommandFlag = 5;
 1498              		.loc 1 647 0
 1499 00da 674B     		ldr	r3, .L101+4	@ tmp197,
 1500 00dc 0522     		movs	r2, #5	@ tmp198,
 1501 00de 1A70     		strb	r2, [r3]	@ tmp199, GSMSendCommandFlag
 1502              	.L91:
 648:src/sim900_800.c **** 			}
 649:src/sim900_800.c **** 
 650:src/sim900_800.c **** 			if (GSMSendCommandFlag == 1)
 1503              		.loc 1 650 0
 1504 00e0 654B     		ldr	r3, .L101+4	@ tmp200,
 1505 00e2 1B78     		ldrb	r3, [r3]	@ D.7776, GSMSendCommandFlag
 1506 00e4 012B     		cmp	r3, #1	@ D.7776,
 1507 00e6 08D1     		bne	.L82	@,
 651:src/sim900_800.c **** 			{
 652:src/sim900_800.c **** 				if(buffUARTGSMrx2[0] == GSM_RTA)
 1508              		.loc 1 652 0
 1509 00e8 654B     		ldr	r3, .L101+12	@ tmp201,
 1510 00ea 1B78     		ldrb	r3, [r3]	@ tmp202, buffUARTGSMrx2
 1511 00ec DBB2     		uxtb	r3, r3	@ D.7776, tmp202
ARM GAS  /tmp/ccCNyPsy.s 			page 40


 1512 00ee 2B22     		movs	r2, #43	@ D.7776,
 1513 00f0 9342     		cmp	r3, r2	@ D.7776, D.7776
 1514 00f2 02D1     		bne	.L82	@,
 653:src/sim900_800.c **** 					GSMSendCommandFlag = 2;
 1515              		.loc 1 653 0
 1516 00f4 604B     		ldr	r3, .L101+4	@ tmp203,
 1517 00f6 0222     		movs	r2, #2	@ tmp204,
 1518 00f8 1A70     		strb	r2, [r3]	@ tmp205, GSMSendCommandFlag
 1519              	.L82:
 654:src/sim900_800.c **** 			}
 655:src/sim900_800.c **** 
 656:src/sim900_800.c **** 		}
 657:src/sim900_800.c **** 
 658:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 1)
 1520              		.loc 1 658 0
 1521 00fa 6A4B     		ldr	r3, .L101+48	@ tmp206,
 1522 00fc 1B78     		ldrb	r3, [r3]	@ D.7776, GSMConfigGPRSflag
 1523 00fe 012B     		cmp	r3, #1	@ D.7776,
 1524 0100 10D1     		bne	.L92	@,
 659:src/sim900_800.c **** 		{
 660:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_IPSTATE[0], strlen((const char 
 1525              		.loc 1 660 0
 1526 0102 6949     		ldr	r1, .L101+52	@ tmp207,
 1527 0104 5E4B     		ldr	r3, .L101+12	@ tmp208,
 1528 0106 0622     		movs	r2, #6	@,
 1529 0108 1800     		movs	r0, r3	@, tmp208
 1530 010a FFF7FEFF 		bl	strncmp	@
 1531 010e 031E     		subs	r3, r0, #0	@ D.7777,,
 1532 0110 08D1     		bne	.L92	@,
 661:src/sim900_800.c **** 			{
 662:src/sim900_800.c **** 				strcpy((char *)&GSMbuffStatus[0],(const char *)&buffUARTGSMrx2[sizeof(GSM_IPSTATE)]);
 1533              		.loc 1 662 0
 1534 0112 664A     		ldr	r2, .L101+56	@ tmp209,
 1535 0114 664B     		ldr	r3, .L101+60	@ tmp210,
 1536 0116 1100     		movs	r1, r2	@, tmp209
 1537 0118 1800     		movs	r0, r3	@, tmp210
 1538 011a FFF7FEFF 		bl	strcpy	@
 663:src/sim900_800.c **** 				GSMConfigGPRSflag = 2;
 1539              		.loc 1 663 0
 1540 011e 614B     		ldr	r3, .L101+48	@ tmp211,
 1541 0120 0222     		movs	r2, #2	@ tmp212,
 1542 0122 1A70     		strb	r2, [r3]	@ tmp213, GSMConfigGPRSflag
 1543              	.L92:
 664:src/sim900_800.c **** 			}
 665:src/sim900_800.c **** 		}
 666:src/sim900_800.c **** 
 667:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 3)
 1544              		.loc 1 667 0
 1545 0124 5F4B     		ldr	r3, .L101+48	@ tmp214,
 1546 0126 1B78     		ldrb	r3, [r3]	@ D.7776, GSMConfigGPRSflag
 1547 0128 032B     		cmp	r3, #3	@ D.7776,
 1548 012a 00D0     		beq	.LCB1074	@
 1549 012c 65E0     		b	.L93	@long jump	@
 1550              	.LCB1074:
 668:src/sim900_800.c **** 		{
 669:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1551              		.loc 1 669 0
ARM GAS  /tmp/ccCNyPsy.s 			page 41


 1552 012e 544B     		ldr	r3, .L101+12	@ tmp215,
 1553 0130 1B78     		ldrb	r3, [r3]	@ tmp216, buffUARTGSMrx2
 1554 0132 DBB2     		uxtb	r3, r3	@ D.7776, tmp216
 1555 0134 2F2B     		cmp	r3, #47	@ D.7776,
 1556 0136 26D9     		bls	.L94	@,
 1557              		.loc 1 669 0 is_stmt 0 discriminator 1
 1558 0138 514B     		ldr	r3, .L101+12	@ tmp217,
 1559 013a 1B78     		ldrb	r3, [r3]	@ tmp218, buffUARTGSMrx2
 1560 013c DBB2     		uxtb	r3, r3	@ D.7776, tmp218
 1561 013e 3A2B     		cmp	r3, #58	@ D.7776,
 1562 0140 21D8     		bhi	.L94	@,
 1563              		.loc 1 669 0 discriminator 2
 1564 0142 4F4B     		ldr	r3, .L101+12	@ tmp219,
 1565 0144 5B78     		ldrb	r3, [r3, #1]	@ tmp221,
 1566 0146 DBB2     		uxtb	r3, r3	@ D.7776, tmp221
 1567 0148 2F2B     		cmp	r3, #47	@ D.7776,
 1568 014a 1CD9     		bls	.L94	@,
 1569              		.loc 1 669 0 discriminator 3
 1570 014c 4C4B     		ldr	r3, .L101+12	@ tmp222,
 1571 014e 5B78     		ldrb	r3, [r3, #1]	@ tmp224,
 1572 0150 DBB2     		uxtb	r3, r3	@ D.7776, tmp224
 1573 0152 3A2B     		cmp	r3, #58	@ D.7776,
 1574 0154 17D8     		bhi	.L94	@,
 1575              		.loc 1 669 0 discriminator 4
 1576 0156 4A4B     		ldr	r3, .L101+12	@ tmp225,
 1577 0158 9B78     		ldrb	r3, [r3, #2]	@ tmp227,
 1578 015a DBB2     		uxtb	r3, r3	@ D.7776, tmp227
 1579 015c 2F2B     		cmp	r3, #47	@ D.7776,
 1580 015e 12D9     		bls	.L94	@,
 1581              		.loc 1 669 0 discriminator 5
 1582 0160 474B     		ldr	r3, .L101+12	@ tmp228,
 1583 0162 9B78     		ldrb	r3, [r3, #2]	@ tmp230,
 1584 0164 DBB2     		uxtb	r3, r3	@ D.7776, tmp230
 1585 0166 3A2B     		cmp	r3, #58	@ D.7776,
 1586 0168 0DD8     		bhi	.L94	@,
 1587              		.loc 1 669 0 discriminator 6
 1588 016a 454B     		ldr	r3, .L101+12	@ tmp231,
 1589 016c DB78     		ldrb	r3, [r3, #3]	@ tmp233,
 1590 016e DBB2     		uxtb	r3, r3	@ D.7776, tmp233
 1591 0170 2E2B     		cmp	r3, #46	@ D.7776,
 1592 0172 08D1     		bne	.L94	@,
 670:src/sim900_800.c **** 			{
 671:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1593              		.loc 1 671 0 is_stmt 1
 1594 0174 4249     		ldr	r1, .L101+12	@ tmp234,
 1595 0176 4F4B     		ldr	r3, .L101+64	@ tmp235,
 1596 0178 1022     		movs	r2, #16	@,
 1597 017a 1800     		movs	r0, r3	@, tmp235
 1598 017c FFF7FEFF 		bl	strncpy	@
 672:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1599              		.loc 1 672 0
 1600 0180 3D4B     		ldr	r3, .L101+4	@ tmp236,
 1601 0182 0422     		movs	r2, #4	@ tmp237,
 1602 0184 1A70     		strb	r2, [r3]	@ tmp238, GSMSendCommandFlag
 1603              	.L94:
 673:src/sim900_800.c **** 			}
 674:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
ARM GAS  /tmp/ccCNyPsy.s 			page 42


 1604              		.loc 1 674 0
 1605 0186 3E4B     		ldr	r3, .L101+12	@ tmp239,
 1606 0188 1B78     		ldrb	r3, [r3]	@ tmp240, buffUARTGSMrx2
 1607 018a DBB2     		uxtb	r3, r3	@ D.7776, tmp240
 1608 018c 2F2B     		cmp	r3, #47	@ D.7776,
 1609 018e 1CD9     		bls	.L95	@,
 1610              		.loc 1 674 0 is_stmt 0 discriminator 1
 1611 0190 3B4B     		ldr	r3, .L101+12	@ tmp241,
 1612 0192 1B78     		ldrb	r3, [r3]	@ tmp242, buffUARTGSMrx2
 1613 0194 DBB2     		uxtb	r3, r3	@ D.7776, tmp242
 1614 0196 3A2B     		cmp	r3, #58	@ D.7776,
 1615 0198 17D8     		bhi	.L95	@,
 1616              		.loc 1 674 0 discriminator 2
 1617 019a 394B     		ldr	r3, .L101+12	@ tmp243,
 1618 019c 5B78     		ldrb	r3, [r3, #1]	@ tmp245,
 1619 019e DBB2     		uxtb	r3, r3	@ D.7776, tmp245
 1620 01a0 2F2B     		cmp	r3, #47	@ D.7776,
 1621 01a2 12D9     		bls	.L95	@,
 1622              		.loc 1 674 0 discriminator 3
 1623 01a4 364B     		ldr	r3, .L101+12	@ tmp246,
 1624 01a6 5B78     		ldrb	r3, [r3, #1]	@ tmp248,
 1625 01a8 DBB2     		uxtb	r3, r3	@ D.7776, tmp248
 1626 01aa 3A2B     		cmp	r3, #58	@ D.7776,
 1627 01ac 0DD8     		bhi	.L95	@,
 1628              		.loc 1 674 0 discriminator 4
 1629 01ae 344B     		ldr	r3, .L101+12	@ tmp249,
 1630 01b0 9B78     		ldrb	r3, [r3, #2]	@ tmp251,
 1631 01b2 DBB2     		uxtb	r3, r3	@ D.7776, tmp251
 1632 01b4 2E2B     		cmp	r3, #46	@ D.7776,
 1633 01b6 08D1     		bne	.L95	@,
 675:src/sim900_800.c **** 			{
 676:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1634              		.loc 1 676 0 is_stmt 1
 1635 01b8 3149     		ldr	r1, .L101+12	@ tmp252,
 1636 01ba 3E4B     		ldr	r3, .L101+64	@ tmp253,
 1637 01bc 1022     		movs	r2, #16	@,
 1638 01be 1800     		movs	r0, r3	@, tmp253
 1639 01c0 FFF7FEFF 		bl	strncpy	@
 677:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1640              		.loc 1 677 0
 1641 01c4 2C4B     		ldr	r3, .L101+4	@ tmp254,
 1642 01c6 0422     		movs	r2, #4	@ tmp255,
 1643 01c8 1A70     		strb	r2, [r3]	@ tmp256, GSMSendCommandFlag
 1644              	.L95:
 678:src/sim900_800.c **** 			}
 679:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && buffUARTGSMrx2[1] == '.')
 1645              		.loc 1 679 0
 1646 01ca 2D4B     		ldr	r3, .L101+12	@ tmp257,
 1647 01cc 1B78     		ldrb	r3, [r3]	@ tmp258, buffUARTGSMrx2
 1648 01ce DBB2     		uxtb	r3, r3	@ D.7776, tmp258
 1649 01d0 2F2B     		cmp	r3, #47	@ D.7776,
 1650 01d2 12D9     		bls	.L93	@,
 1651              		.loc 1 679 0 is_stmt 0 discriminator 1
 1652 01d4 2A4B     		ldr	r3, .L101+12	@ tmp259,
 1653 01d6 1B78     		ldrb	r3, [r3]	@ tmp260, buffUARTGSMrx2
 1654 01d8 DBB2     		uxtb	r3, r3	@ D.7776, tmp260
 1655 01da 3A2B     		cmp	r3, #58	@ D.7776,
ARM GAS  /tmp/ccCNyPsy.s 			page 43


 1656 01dc 0DD8     		bhi	.L93	@,
 1657              		.loc 1 679 0 discriminator 2
 1658 01de 284B     		ldr	r3, .L101+12	@ tmp261,
 1659 01e0 5B78     		ldrb	r3, [r3, #1]	@ tmp263,
 1660 01e2 DBB2     		uxtb	r3, r3	@ D.7776, tmp263
 1661 01e4 2E2B     		cmp	r3, #46	@ D.7776,
 1662 01e6 08D1     		bne	.L93	@,
 680:src/sim900_800.c **** 			{
 681:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1663              		.loc 1 681 0 is_stmt 1
 1664 01e8 2549     		ldr	r1, .L101+12	@ tmp264,
 1665 01ea 324B     		ldr	r3, .L101+64	@ tmp265,
 1666 01ec 1022     		movs	r2, #16	@,
 1667 01ee 1800     		movs	r0, r3	@, tmp265
 1668 01f0 FFF7FEFF 		bl	strncpy	@
 682:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1669              		.loc 1 682 0
 1670 01f4 204B     		ldr	r3, .L101+4	@ tmp266,
 1671 01f6 0422     		movs	r2, #4	@ tmp267,
 1672 01f8 1A70     		strb	r2, [r3]	@ tmp268, GSMSendCommandFlag
 1673              	.L93:
 683:src/sim900_800.c **** 			}
 684:src/sim900_800.c **** 		}
 685:src/sim900_800.c **** 		//respuestas no esperadas
 686:src/sim900_800.c **** 		//respuestas no esperadas
 687:src/sim900_800.c **** 
 688:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"000:", sizeof ("000:") -1))
 1674              		.loc 1 688 0
 1675 01fa 2F49     		ldr	r1, .L101+68	@ tmp269,
 1676 01fc 204B     		ldr	r3, .L101+12	@ tmp270,
 1677 01fe 0422     		movs	r2, #4	@,
 1678 0200 1800     		movs	r0, r3	@, tmp270
 1679 0202 FFF7FEFF 		bl	strncmp	@
 1680 0206 031E     		subs	r3, r0, #0	@ D.7777,,
 1681 0208 05D1     		bne	.L96	@,
 689:src/sim900_800.c **** 		{
 690:src/sim900_800.c **** 			strcpy(&GSMReadSMSrepIn[0], (const char *)&buffUARTGSMrx2[0]);
 1682              		.loc 1 690 0
 1683 020a 1D4A     		ldr	r2, .L101+12	@ tmp271,
 1684 020c 2B4B     		ldr	r3, .L101+72	@ tmp272,
 1685 020e 1100     		movs	r1, r2	@, tmp271
 1686 0210 1800     		movs	r0, r3	@, tmp272
 1687 0212 FFF7FEFF 		bl	strcpy	@
 1688              	.L96:
 691:src/sim900_800.c **** 		}
 692:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTIDS: \"SM\",", sizeof ("+CMTIDS: \"SM
 1689              		.loc 1 692 0
 1690 0216 2A49     		ldr	r1, .L101+76	@ tmp273,
 1691 0218 194B     		ldr	r3, .L101+12	@ tmp274,
 1692 021a 0E22     		movs	r2, #14	@,
 1693 021c 1800     		movs	r0, r3	@, tmp274
 1694 021e FFF7FEFF 		bl	strncmp	@
 1695 0222 031E     		subs	r3, r0, #0	@ D.7777,,
 1696 0224 07D1     		bne	.L97	@,
 693:src/sim900_800.c **** 		{
 694:src/sim900_800.c **** 			GSMCantSMS2 = buffUARTGSMrx2[14] - 48;
 1697              		.loc 1 694 0
ARM GAS  /tmp/ccCNyPsy.s 			page 44


 1698 0226 164B     		ldr	r3, .L101+12	@ tmp275,
 1699 0228 9B7B     		ldrb	r3, [r3, #14]	@ tmp277,
 1700 022a DBB2     		uxtb	r3, r3	@ D.7776, tmp277
 1701 022c 303B     		subs	r3, r3, #48	@ tmp278,
 1702 022e DAB2     		uxtb	r2, r3	@ D.7778, tmp278
 1703 0230 244B     		ldr	r3, .L101+80	@ tmp279,
 1704 0232 1A70     		strb	r2, [r3]	@ tmp280, GSMCantSMS2
 1705 0234 0EE0     		b	.L98	@
 1706              	.L97:
 695:src/sim900_800.c **** 		}
 696:src/sim900_800.c **** 		else if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTI: \"SM\",", sizeof ("+CMTI: \"S
 1707              		.loc 1 696 0
 1708 0236 2449     		ldr	r1, .L101+84	@ tmp281,
 1709 0238 114B     		ldr	r3, .L101+12	@ tmp282,
 1710 023a 0C22     		movs	r2, #12	@,
 1711 023c 1800     		movs	r0, r3	@, tmp282
 1712 023e FFF7FEFF 		bl	strncmp	@
 1713 0242 031E     		subs	r3, r0, #0	@ D.7777,,
 1714 0244 06D1     		bne	.L98	@,
 697:src/sim900_800.c **** 		{
 698:src/sim900_800.c **** 			GSMCantSMS = buffUARTGSMrx2[12] - 48;
 1715              		.loc 1 698 0
 1716 0246 0E4B     		ldr	r3, .L101+12	@ tmp283,
 1717 0248 1B7B     		ldrb	r3, [r3, #12]	@ tmp285,
 1718 024a DBB2     		uxtb	r3, r3	@ D.7776, tmp285
 1719 024c 303B     		subs	r3, r3, #48	@ tmp286,
 1720 024e DAB2     		uxtb	r2, r3	@ D.7778, tmp286
 1721 0250 1E4B     		ldr	r3, .L101+88	@ tmp287,
 1722 0252 1A70     		strb	r2, [r3]	@ tmp288, GSMCantSMS
 1723              	.L98:
 699:src/sim900_800.c **** 		}
 700:src/sim900_800.c **** 
 701:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: EST,", strlen((const char *)"
 702:src/sim900_800.c **** //			*pAlertasReportar |= 0x80;
 703:src/sim900_800.c **** //
 704:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: ARM,", strlen((const char *)"
 705:src/sim900_800.c **** //		{
 706:src/sim900_800.c **** //			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)p
 707:src/sim900_800.c **** //			{
 708:src/sim900_800.c **** //				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 709:src/sim900_800.c **** //
 710:src/sim900_800.c **** //				*pActDact |= 0x40; //Armar
 711:src/sim900_800.c **** //			}
 712:src/sim900_800.c **** //		}
 713:src/sim900_800.c **** 
 714:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"CLOSE
 1724              		.loc 1 714 0
 1725 0254 0949     		ldr	r1, .L101+8	@ tmp289,
 1726 0256 0A4B     		ldr	r3, .L101+12	@ tmp290,
 1727 0258 0622     		movs	r2, #6	@,
 1728 025a 1800     		movs	r0, r3	@, tmp290
 1729 025c FFF7FEFF 		bl	strncmp	@
 1730 0260 031E     		subs	r3, r0, #0	@ D.7777,,
 1731 0262 02D1     		bne	.L99	@,
 715:src/sim900_800.c **** 		{
 716:src/sim900_800.c **** 			flagCloseIP = 1;
 1732              		.loc 1 716 0
ARM GAS  /tmp/ccCNyPsy.s 			page 45


 1733 0264 1A4B     		ldr	r3, .L101+92	@ tmp291,
 1734 0266 0122     		movs	r2, #1	@ tmp292,
 1735 0268 1A70     		strb	r2, [r3]	@ tmp293, flagCloseIP
 1736              	.L99:
 717:src/sim900_800.c **** 		}
 718:src/sim900_800.c **** 
 719:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: DRM,", strlen((const char *)"
 720:src/sim900_800.c **** //		{
 721:src/sim900_800.c **** //			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)p
 722:src/sim900_800.c **** //			{
 723:src/sim900_800.c **** //				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 724:src/sim900_800.c **** //
 725:src/sim900_800.c **** //				*pActDact |= 0x80; //Desarmar
 726:src/sim900_800.c **** //			}
 727:src/sim900_800.c **** //		}
 728:src/sim900_800.c **** /*		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: ARM", sizeof("000: ARM") - 1)
 729:src/sim900_800.c **** 		{
 730:src/sim900_800.c **** 			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)pus
 731:src/sim900_800.c **** 			{
 732:src/sim900_800.c **** 				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 733:src/sim900_800.c **** 
 734:src/sim900_800.c **** 				*pActDact |= 0x40; //Armar
 735:src/sim900_800.c **** 				*pActDact |= 0x01; //SendOK.
 736:src/sim900_800.c **** 			}
 737:src/sim900_800.c **** 		}
 738:src/sim900_800.c **** 
 739:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: DRM", sizeof("000: DRM") - 1))
 740:src/sim900_800.c **** 		{
 741:src/sim900_800.c **** 			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)pus
 742:src/sim900_800.c **** 			{
 743:src/sim900_800.c **** 				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 744:src/sim900_800.c **** 
 745:src/sim900_800.c **** 				*pActDact |= 0x80; //Desrmar
 746:src/sim900_800.c **** 				*pActDact |= 0x01; //SendOK.
 747:src/sim900_800.c **** 			}
 748:src/sim900_800.c **** 		}
 749:src/sim900_800.c **** */
 750:src/sim900_800.c **** 		PacketReadyUARTGSM = 0;
 1737              		.loc 1 750 0
 1738 026a 024B     		ldr	r3, .L101	@ tmp294,
 1739 026c 0022     		movs	r2, #0	@ tmp295,
 1740 026e 1A70     		strb	r2, [r3]	@ tmp296, PacketReadyUARTGSM
 1741              	.L100:
 751:src/sim900_800.c **** 	}
 752:src/sim900_800.c **** }
 1742              		.loc 1 752 0
 1743 0270 C046     		nop
 1744              		@ sp needed	@
 1745 0272 10BD     		pop	{r4, pc}
 1746              	.L102:
 1747              		.align	2
 1748              	.L101:
 1749 0274 00000000 		.word	PacketReadyUARTGSM
 1750 0278 00000000 		.word	GSMSendCommandFlag
 1751 027c 24000000 		.word	.LC31
 1752 0280 00000000 		.word	buffUARTGSMrx2
 1753 0284 00000000 		.word	DB300flagConnGPRS
ARM GAS  /tmp/ccCNyPsy.s 			page 46


 1754 0288 00000000 		.word	GSM_SENDOK
 1755 028c 2C000000 		.word	.LC36
 1756 0290 34000000 		.word	.LC38
 1757 0294 40000000 		.word	.LC40
 1758 0298 4C000000 		.word	.LC42
 1759 029c 54000000 		.word	.LC44
 1760 02a0 60000000 		.word	.LC46
 1761 02a4 00000000 		.word	GSMConfigGPRSflag
 1762 02a8 00000000 		.word	GSM_IPSTATE
 1763 02ac 07000000 		.word	buffUARTGSMrx2+7
 1764 02b0 00000000 		.word	GSMbuffStatus
 1765 02b4 00000000 		.word	GSMIPadd
 1766 02b8 6C000000 		.word	.LC53
 1767 02bc 00000000 		.word	GSMReadSMSrepIn
 1768 02c0 74000000 		.word	.LC56
 1769 02c4 00000000 		.word	GSMCantSMS2
 1770 02c8 84000000 		.word	.LC59
 1771 02cc 00000000 		.word	GSMCantSMS
 1772 02d0 00000000 		.word	flagCloseIP
 1773              		.cfi_endproc
 1774              	.LFE25:
 1775              		.size	GSMReceive, .-GSMReceive
 1776              		.section	.text.GSMSendCommand,"ax",%progbits
 1777              		.align	2
 1778              		.global	GSMSendCommand
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	GSMSendCommand, %function
 1782              	GSMSendCommand:
 1783              	.LFB26:
 753:src/sim900_800.c **** 
 754:src/sim900_800.c **** //-----------------------------------------------------//
 755:src/sim900_800.c **** //char GSMSendCommand (char *ptrCommand, unsigned char timeOut, unsigned char rta, char *ptrRta)
 756:src/sim900_800.c **** //----------------------------------------------------//
 757:src/sim900_800.c **** //ptrCommand: Comando a enviar.
 758:src/sim900_800.c **** //ptrRta: Respuesta al comando desde sim900.
 759:src/sim900_800.c **** //rta: 0: No espera rta. 1: Espera respuesta antes de OK.
 760:src/sim900_800.c **** //TO: time out.
 761:src/sim900_800.c **** //----------------------------------------------------//
 762:src/sim900_800.c **** //Wait: 	1
 763:src/sim900_800.c **** //OK: 		2
 764:src/sim900_800.c **** //ERR:		3
 765:src/sim900_800.c **** //TO:
 766:src/sim900_800.c **** //NO OK:	4
 767:src/sim900_800.c **** //NO RTA: 	5
 768:src/sim900_800.c **** //----------------------------------------------------//
 769:src/sim900_800.c **** char GSMSendCommand (char *ptrCommand, unsigned short timeOut, unsigned char rta, char *ptrRta)
 770:src/sim900_800.c **** {
 1784              		.loc 1 770 0
 1785              		.cfi_startproc
 1786 0000 00B5     		push	{lr}	@
 1787              	.LCFI7:
 1788              		.cfi_def_cfa_offset 4
 1789              		.cfi_offset 14, -4
 1790 0002 85B0     		sub	sp, sp, #20	@,,
 1791              	.LCFI8:
 1792              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccCNyPsy.s 			page 47


 1793 0004 0390     		str	r0, [sp, #12]	@ ptrCommand, ptrCommand
 1794 0006 0800     		movs	r0, r1	@ tmp127, timeOut
 1795 0008 1100     		movs	r1, r2	@ tmp130, rta
 1796 000a 0193     		str	r3, [sp, #4]	@ ptrRta, ptrRta
 1797 000c 0A23     		movs	r3, #10	@ tmp128,
 1798 000e 6B44     		add	r3, r3, sp	@ tmp128,
 1799 0010 021C     		adds	r2, r0, #0	@ tmp129, tmp127
 1800 0012 1A80     		strh	r2, [r3]	@ tmp129, timeOut
 1801 0014 0923     		movs	r3, #9	@ tmp131,
 1802 0016 6B44     		add	r3, r3, sp	@ tmp131,
 1803 0018 0A1C     		adds	r2, r1, #0	@ tmp132, tmp130
 1804 001a 1A70     		strb	r2, [r3]	@ tmp132, rta
 771:src/sim900_800.c **** 
 772:src/sim900_800.c **** 	switch(GSMSendCommandState)
 1805              		.loc 1 772 0
 1806 001c 474B     		ldr	r3, .L121	@ tmp133,
 1807 001e 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandState
 1808 0020 012B     		cmp	r3, #1	@ D.7790,
 1809 0022 1AD0     		beq	.L105	@,
 1810 0024 02DC     		bgt	.L106	@,
 1811 0026 002B     		cmp	r3, #0	@ D.7790,
 1812 0028 05D0     		beq	.L107	@,
 1813 002a 56E0     		b	.L104	@
 1814              	.L106:
 1815 002c 022B     		cmp	r3, #2	@ D.7790,
 1816 002e 34D0     		beq	.L108	@,
 1817 0030 032B     		cmp	r3, #3	@ D.7790,
 1818 0032 46D0     		beq	.L109	@,
 1819 0034 51E0     		b	.L104	@
 1820              	.L107:
 773:src/sim900_800.c **** 	{
 774:src/sim900_800.c **** 		case 0:
 775:src/sim900_800.c **** 			GSMSendCommandFlag = 0;
 1821              		.loc 1 775 0
 1822 0036 424B     		ldr	r3, .L121+4	@ tmp134,
 1823 0038 0022     		movs	r2, #0	@ tmp135,
 1824 003a 1A70     		strb	r2, [r3]	@ tmp136, GSMSendCommandFlag
 776:src/sim900_800.c **** 			GSMSendCommandTimeOut = timeOut;
 1825              		.loc 1 776 0
 1826 003c 414B     		ldr	r3, .L121+8	@ tmp137,
 1827 003e 0A22     		movs	r2, #10	@ tmp138,
 1828 0040 6A44     		add	r2, r2, sp	@ tmp138,
 1829 0042 1288     		ldrh	r2, [r2]	@ tmp139, timeOut
 1830 0044 1A80     		strh	r2, [r3]	@ tmp139, GSMSendCommandTimeOut
 777:src/sim900_800.c **** 			GSMSendCommandState++;
 1831              		.loc 1 777 0
 1832 0046 3D4B     		ldr	r3, .L121	@ tmp140,
 1833 0048 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandState
 1834 004a 0133     		adds	r3, r3, #1	@ tmp141,
 1835 004c DAB2     		uxtb	r2, r3	@ D.7789, tmp141
 1836 004e 3B4B     		ldr	r3, .L121	@ tmp142,
 1837 0050 1A70     		strb	r2, [r3]	@ tmp143, GSMSendCommandState
 778:src/sim900_800.c **** 			GSMSendCommandIntento = 0;
 1838              		.loc 1 778 0
 1839 0052 3D4B     		ldr	r3, .L121+12	@ tmp144,
 1840 0054 0022     		movs	r2, #0	@ tmp145,
 1841 0056 1A70     		strb	r2, [r3]	@ tmp146, GSMSendCommandIntento
ARM GAS  /tmp/ccCNyPsy.s 			page 48


 779:src/sim900_800.c **** 			break;
 1842              		.loc 1 779 0
 1843 0058 46E0     		b	.L110	@
 1844              	.L105:
 780:src/sim900_800.c **** 		case 1:
 781:src/sim900_800.c **** 
 782:src/sim900_800.c **** 			if (rta)
 1845              		.loc 1 782 0
 1846 005a 0923     		movs	r3, #9	@ tmp147,
 1847 005c 6B44     		add	r3, r3, sp	@ tmp147,
 1848 005e 1B78     		ldrb	r3, [r3]	@ tmp148, rta
 1849 0060 002B     		cmp	r3, #0	@ tmp148,
 1850 0062 06D0     		beq	.L111	@,
 783:src/sim900_800.c **** 			{
 784:src/sim900_800.c **** 				GSMSendCommandState = 2;
 1851              		.loc 1 784 0
 1852 0064 354B     		ldr	r3, .L121	@ tmp149,
 1853 0066 0222     		movs	r2, #2	@ tmp150,
 1854 0068 1A70     		strb	r2, [r3]	@ tmp151, GSMSendCommandState
 785:src/sim900_800.c **** 				GSMSendCommandFlag = 1;
 1855              		.loc 1 785 0
 1856 006a 354B     		ldr	r3, .L121+4	@ tmp152,
 1857 006c 0122     		movs	r2, #1	@ tmp153,
 1858 006e 1A70     		strb	r2, [r3]	@ tmp154, GSMSendCommandFlag
 1859 0070 05E0     		b	.L112	@
 1860              	.L111:
 786:src/sim900_800.c **** 			}
 787:src/sim900_800.c **** 			else
 788:src/sim900_800.c **** 			{
 789:src/sim900_800.c **** 				GSMSendCommandState = 3;
 1861              		.loc 1 789 0
 1862 0072 324B     		ldr	r3, .L121	@ tmp155,
 1863 0074 0322     		movs	r2, #3	@ tmp156,
 1864 0076 1A70     		strb	r2, [r3]	@ tmp157, GSMSendCommandState
 790:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 1865              		.loc 1 790 0
 1866 0078 314B     		ldr	r3, .L121+4	@ tmp158,
 1867 007a 0322     		movs	r2, #3	@ tmp159,
 1868 007c 1A70     		strb	r2, [r3]	@ tmp160, GSMSendCommandFlag
 1869              	.L112:
 791:src/sim900_800.c **** 			}
 792:src/sim900_800.c **** 
 793:src/sim900_800.c **** 			if (GSMSendCommandIntento == 1)
 1870              		.loc 1 793 0
 1871 007e 324B     		ldr	r3, .L121+12	@ tmp161,
 1872 0080 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandIntento
 1873 0082 012B     		cmp	r3, #1	@ D.7789,
 1874 0084 04D1     		bne	.L113	@,
 794:src/sim900_800.c **** 			{
 795:src/sim900_800.c **** 				GSMSendCommandState = 0;
 1875              		.loc 1 795 0
 1876 0086 2D4B     		ldr	r3, .L121	@ tmp162,
 1877 0088 0022     		movs	r2, #0	@ tmp163,
 1878 008a 1A70     		strb	r2, [r3]	@ tmp164, GSMSendCommandState
 796:src/sim900_800.c **** 				return 4;
 1879              		.loc 1 796 0
 1880 008c 0423     		movs	r3, #4	@ D.7789,
ARM GAS  /tmp/ccCNyPsy.s 			page 49


 1881 008e 51E0     		b	.L114	@
 1882              	.L113:
 797:src/sim900_800.c **** 			}
 798:src/sim900_800.c **** 			else
 799:src/sim900_800.c **** 			{
 800:src/sim900_800.c **** 				UARTGSMSend(&ptrCommand[0]);
 1883              		.loc 1 800 0
 1884 0090 039B     		ldr	r3, [sp, #12]	@ tmp165, ptrCommand
 1885 0092 1800     		movs	r0, r3	@, tmp165
 1886 0094 FFF7FEFF 		bl	Usart1Send	@
 801:src/sim900_800.c **** 			}
 802:src/sim900_800.c **** 			break;
 1887              		.loc 1 802 0
 1888 0098 26E0     		b	.L110	@
 1889              	.L108:
 803:src/sim900_800.c **** 
 804:src/sim900_800.c **** 		case 2:
 805:src/sim900_800.c **** 			//Espera rta.
 806:src/sim900_800.c **** 			if (GSMSendCommandFlag == 2)
 1890              		.loc 1 806 0
 1891 009a 294B     		ldr	r3, .L121+4	@ tmp166,
 1892 009c 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandFlag
 1893 009e 022B     		cmp	r3, #2	@ D.7789,
 1894 00a0 1FD1     		bne	.L119	@,
 807:src/sim900_800.c **** 			{
 808:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 1895              		.loc 1 808 0
 1896 00a2 274B     		ldr	r3, .L121+4	@ tmp167,
 1897 00a4 0322     		movs	r2, #3	@ tmp168,
 1898 00a6 1A70     		strb	r2, [r3]	@ tmp169, GSMSendCommandFlag
 809:src/sim900_800.c **** 				GSMSendCommandState++;
 1899              		.loc 1 809 0
 1900 00a8 244B     		ldr	r3, .L121	@ tmp170,
 1901 00aa 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandState
 1902 00ac 0133     		adds	r3, r3, #1	@ tmp171,
 1903 00ae DAB2     		uxtb	r2, r3	@ D.7789, tmp171
 1904 00b0 224B     		ldr	r3, .L121	@ tmp172,
 1905 00b2 1A70     		strb	r2, [r3]	@ tmp173, GSMSendCommandState
 810:src/sim900_800.c **** 				//Rta obtenida.
 811:src/sim900_800.c **** 				strcpy((char *)ptrRta, (const char *)&buffUARTGSMrx2[0]);
 1906              		.loc 1 811 0
 1907 00b4 254A     		ldr	r2, .L121+16	@ tmp174,
 1908 00b6 019B     		ldr	r3, [sp, #4]	@ tmp175, ptrRta
 1909 00b8 1100     		movs	r1, r2	@, tmp174
 1910 00ba 1800     		movs	r0, r3	@, tmp175
 1911 00bc FFF7FEFF 		bl	strcpy	@
 812:src/sim900_800.c **** 			}
 813:src/sim900_800.c **** 			break;
 1912              		.loc 1 813 0
 1913 00c0 0FE0     		b	.L119	@
 1914              	.L109:
 814:src/sim900_800.c **** 
 815:src/sim900_800.c **** 		case 3:
 816:src/sim900_800.c **** 			//Espera OK.
 817:src/sim900_800.c **** 			if (GSMSendCommandFlag == 4)
 1915              		.loc 1 817 0
 1916 00c2 1F4B     		ldr	r3, .L121+4	@ tmp176,
ARM GAS  /tmp/ccCNyPsy.s 			page 50


 1917 00c4 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandFlag
 1918 00c6 042B     		cmp	r3, #4	@ D.7789,
 1919 00c8 0DD1     		bne	.L120	@,
 818:src/sim900_800.c **** 			{
 819:src/sim900_800.c **** 				//OK recibido.
 820:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 1920              		.loc 1 820 0
 1921 00ca 1D4B     		ldr	r3, .L121+4	@ tmp177,
 1922 00cc 0022     		movs	r2, #0	@ tmp178,
 1923 00ce 1A70     		strb	r2, [r3]	@ tmp179, GSMSendCommandFlag
 821:src/sim900_800.c **** 				GSMSendCommandState = 0;
 1924              		.loc 1 821 0
 1925 00d0 1A4B     		ldr	r3, .L121	@ tmp180,
 1926 00d2 0022     		movs	r2, #0	@ tmp181,
 1927 00d4 1A70     		strb	r2, [r3]	@ tmp182, GSMSendCommandState
 822:src/sim900_800.c **** 				return 2;
 1928              		.loc 1 822 0
 1929 00d6 0223     		movs	r3, #2	@ D.7789,
 1930 00d8 2CE0     		b	.L114	@
 1931              	.L104:
 823:src/sim900_800.c **** 			}
 824:src/sim900_800.c **** 			break;
 825:src/sim900_800.c **** 
 826:src/sim900_800.c **** 		default:
 827:src/sim900_800.c **** 			GSMSendCommandState = 0;
 1932              		.loc 1 827 0
 1933 00da 184B     		ldr	r3, .L121	@ tmp183,
 1934 00dc 0022     		movs	r2, #0	@ tmp184,
 1935 00de 1A70     		strb	r2, [r3]	@ tmp185, GSMSendCommandState
 828:src/sim900_800.c **** 			break;
 1936              		.loc 1 828 0
 1937 00e0 02E0     		b	.L110	@
 1938              	.L119:
 813:src/sim900_800.c **** 
 1939              		.loc 1 813 0
 1940 00e2 C046     		nop
 1941 00e4 00E0     		b	.L110	@
 1942              	.L120:
 824:src/sim900_800.c **** 
 1943              		.loc 1 824 0
 1944 00e6 C046     		nop
 1945              	.L110:
 829:src/sim900_800.c **** 	}
 830:src/sim900_800.c **** 
 831:src/sim900_800.c **** 	if (GSMSendCommandFlag == 5)
 1946              		.loc 1 831 0
 1947 00e8 154B     		ldr	r3, .L121+4	@ tmp186,
 1948 00ea 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandFlag
 1949 00ec 052B     		cmp	r3, #5	@ D.7789,
 1950 00ee 0DD1     		bne	.L117	@,
 832:src/sim900_800.c **** 	{
 833:src/sim900_800.c **** 		GSMSendCommandIntento++;
 1951              		.loc 1 833 0
 1952 00f0 154B     		ldr	r3, .L121+12	@ tmp187,
 1953 00f2 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandIntento
 1954 00f4 0133     		adds	r3, r3, #1	@ tmp188,
 1955 00f6 DAB2     		uxtb	r2, r3	@ D.7789, tmp188
ARM GAS  /tmp/ccCNyPsy.s 			page 51


 1956 00f8 134B     		ldr	r3, .L121+12	@ tmp189,
 1957 00fa 1A70     		strb	r2, [r3]	@ tmp190, GSMSendCommandIntento
 834:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 1958              		.loc 1 834 0
 1959 00fc 114B     		ldr	r3, .L121+8	@ tmp191,
 1960 00fe 0A22     		movs	r2, #10	@ tmp192,
 1961 0100 6A44     		add	r2, r2, sp	@ tmp192,
 1962 0102 1288     		ldrh	r2, [r2]	@ tmp193, timeOut
 1963 0104 1A80     		strh	r2, [r3]	@ tmp193, GSMSendCommandTimeOut
 835:src/sim900_800.c **** 		GSMSendCommandState = 1;
 1964              		.loc 1 835 0
 1965 0106 0D4B     		ldr	r3, .L121	@ tmp194,
 1966 0108 0122     		movs	r2, #1	@ tmp195,
 1967 010a 1A70     		strb	r2, [r3]	@ tmp196, GSMSendCommandState
 1968              	.L117:
 836:src/sim900_800.c **** 	}
 837:src/sim900_800.c **** 
 838:src/sim900_800.c **** 	if (!GSMSendCommandTimeOut)
 1969              		.loc 1 838 0
 1970 010c 0D4B     		ldr	r3, .L121+8	@ tmp197,
 1971 010e 1B88     		ldrh	r3, [r3]	@ tmp198, GSMSendCommandTimeOut
 1972 0110 9BB2     		uxth	r3, r3	@ D.7791, tmp198
 1973 0112 002B     		cmp	r3, #0	@ D.7791,
 1974 0114 0DD1     		bne	.L118	@,
 839:src/sim900_800.c **** 	{
 840:src/sim900_800.c **** 		GSMSendCommandIntento++;
 1975              		.loc 1 840 0
 1976 0116 0C4B     		ldr	r3, .L121+12	@ tmp199,
 1977 0118 1B78     		ldrb	r3, [r3]	@ D.7789, GSMSendCommandIntento
 1978 011a 0133     		adds	r3, r3, #1	@ tmp200,
 1979 011c DAB2     		uxtb	r2, r3	@ D.7789, tmp200
 1980 011e 0A4B     		ldr	r3, .L121+12	@ tmp201,
 1981 0120 1A70     		strb	r2, [r3]	@ tmp202, GSMSendCommandIntento
 841:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 1982              		.loc 1 841 0
 1983 0122 084B     		ldr	r3, .L121+8	@ tmp203,
 1984 0124 0A22     		movs	r2, #10	@ tmp204,
 1985 0126 6A44     		add	r2, r2, sp	@ tmp204,
 1986 0128 1288     		ldrh	r2, [r2]	@ tmp205, timeOut
 1987 012a 1A80     		strh	r2, [r3]	@ tmp205, GSMSendCommandTimeOut
 842:src/sim900_800.c **** 		GSMSendCommandState = 1;
 1988              		.loc 1 842 0
 1989 012c 034B     		ldr	r3, .L121	@ tmp206,
 1990 012e 0122     		movs	r2, #1	@ tmp207,
 1991 0130 1A70     		strb	r2, [r3]	@ tmp208, GSMSendCommandState
 1992              	.L118:
 843:src/sim900_800.c **** 	}
 844:src/sim900_800.c **** 
 845:src/sim900_800.c **** 	return 1;
 1993              		.loc 1 845 0
 1994 0132 0123     		movs	r3, #1	@ D.7789,
 1995              	.L114:
 846:src/sim900_800.c **** }
 1996              		.loc 1 846 0
 1997 0134 1800     		movs	r0, r3	@, <retval>
 1998 0136 05B0     		add	sp, sp, #20	@,,
 1999              		@ sp needed	@
ARM GAS  /tmp/ccCNyPsy.s 			page 52


 2000 0138 00BD     		pop	{pc}
 2001              	.L122:
 2002 013a C046     		.align	2
 2003              	.L121:
 2004 013c 00000000 		.word	GSMSendCommandState
 2005 0140 00000000 		.word	GSMSendCommandFlag
 2006 0144 00000000 		.word	GSMSendCommandTimeOut
 2007 0148 00000000 		.word	GSMSendCommandIntento
 2008 014c 00000000 		.word	buffUARTGSMrx2
 2009              		.cfi_endproc
 2010              	.LFE26:
 2011              		.size	GSMSendCommand, .-GSMSendCommand
 2012              		.section	.rodata
 2013 0091 000000   		.align	2
 2014              	.LC73:
 2015 0094 41540D0A 		.ascii	"AT\015\012\000"
 2015      00
 2016 0099 000000   		.align	2
 2017              	.LC75:
 2018 009c 41544530 		.ascii	"ATE0\015\012\000"
 2018      0D0A00
 2019 00a3 00       		.align	2
 2020              	.LC77:
 2021 00a4 41542B43 		.ascii	"AT+CMGF=1\015\012\000"
 2021      4D47463D 
 2021      310D0A00 
 2022              		.align	2
 2023              	.LC79:
 2024 00b0 41542B43 		.ascii	"AT+CSCS=\"GSM\"\015\012\000"
 2024      5343533D 
 2024      2247534D 
 2024      220D0A00 
 2025              		.align	2
 2026              	.LC81:
 2027 00c0 41542B43 		.ascii	"AT+CSMP=49,255,0,241\015\012\000"
 2027      534D503D 
 2027      34392C32 
 2027      35352C30 
 2027      2C323431 
 2028 00d7 00       		.align	2
 2029              	.LC83:
 2030 00d8 41542657 		.ascii	"AT&W\015\012\000"
 2030      0D0A00
 2031              		.section	.text.GSM_Config,"ax",%progbits
 2032              		.align	2
 2033              		.global	GSM_Config
 2034              		.code	16
 2035              		.thumb_func
 2036              		.type	GSM_Config, %function
 2037              	GSM_Config:
 2038              	.LFB27:
 847:src/sim900_800.c **** 
 848:src/sim900_800.c **** //---------------------------------------------------------------//
 849:src/sim900_800.c **** //Configuracion del modulo GSM.
 850:src/sim900_800.c **** //---------------------------------------------------------------//
 851:src/sim900_800.c **** //
 852:src/sim900_800.c **** //Wait: 	1
ARM GAS  /tmp/ccCNyPsy.s 			page 53


 853:src/sim900_800.c **** //OK:		2
 854:src/sim900_800.c **** //ERR:		3
 855:src/sim900_800.c **** //TO:		4
 856:src/sim900_800.c **** //---------------------------------------------------------------//
 857:src/sim900_800.c **** char GSM_Config(unsigned short timeOut)
 858:src/sim900_800.c **** {
 2039              		.loc 1 858 0
 2040              		.cfi_startproc
 2041 0000 10B5     		push	{r4, lr}	@
 2042              	.LCFI9:
 2043              		.cfi_def_cfa_offset 8
 2044              		.cfi_offset 4, -8
 2045              		.cfi_offset 14, -4
 2046 0002 84B0     		sub	sp, sp, #16	@,,
 2047              	.LCFI10:
 2048              		.cfi_def_cfa_offset 24
 2049 0004 0200     		movs	r2, r0	@ tmp151, timeOut
 2050 0006 6B46     		mov	r3, sp	@ tmp335,
 2051 0008 0633     		adds	r3, r3, #6	@ tmp152,
 2052 000a 1A80     		strh	r2, [r3]	@ tmp153, timeOut
 859:src/sim900_800.c **** 	unsigned char i;
 860:src/sim900_800.c **** 
 861:src/sim900_800.c **** 	switch(GSMConfigState)
 2053              		.loc 1 861 0
 2054 000c AE4B     		ldr	r3, .L167	@ tmp154,
 2055 000e 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2056 0010 092B     		cmp	r3, #9	@ D.7794,
 2057 0012 00D9     		bls	.LCB1524	@
 2058 0014 34E1     		b	.L124	@long jump	@
 2059              	.LCB1524:
 2060 0016 9A00     		lsls	r2, r3, #2	@ tmp155, D.7794,
 2061 0018 AC4B     		ldr	r3, .L167+4	@ tmp157,
 2062 001a D318     		adds	r3, r2, r3	@ tmp156, tmp155, tmp157
 2063 001c 1B68     		ldr	r3, [r3]	@ tmp158,
 2064 001e 9F46     		mov	pc, r3	@ tmp158
 2065              		.section	.rodata.GSM_Config,"a",%progbits
 2066              		.align	2
 2067              	.L126:
 2068 0000 20000000 		.word	.L125
 2069 0004 48000000 		.word	.L127
 2070 0008 BE000000 		.word	.L128
 2071 000c E2000000 		.word	.L129
 2072 0010 20010000 		.word	.L130
 2073 0014 34010000 		.word	.L131
 2074 0018 78010000 		.word	.L132
 2075 001c BC010000 		.word	.L133
 2076 0020 FE010000 		.word	.L134
 2077 0024 40020000 		.word	.L135
 2078              		.section	.text.GSM_Config
 2079              	.L125:
 862:src/sim900_800.c **** 	{
 863:src/sim900_800.c **** 		case 0:
 864:src/sim900_800.c **** 			GSM_NRESET_ON;
 2080              		.loc 1 864 0
 2081              		.syntax divided
 2082              	@ 864 "src/sim900_800.c" 1
 2083 0020 C046     		nop 
ARM GAS  /tmp/ccCNyPsy.s 			page 54


 2084              		
 2085              	@ 0 "" 2
 865:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 2086              		.loc 1 865 0
 2087              		.thumb
 2088              		.syntax unified
 2089 0022 9023     		movs	r3, #144	@ tmp334,
 2090 0024 DB05     		lsls	r3, r3, #23	@ D.7796, tmp334,
 2091 0026 8022     		movs	r2, #128	@ tmp159,
 2092 0028 9A61     		str	r2, [r3, #24]	@ tmp159, _69->BSRR
 866:src/sim900_800.c **** 			GSMConfigTime = 0;
 2093              		.loc 1 866 0
 2094 002a A94B     		ldr	r3, .L167+8	@ tmp160,
 2095 002c 0022     		movs	r2, #0	@ tmp161,
 2096 002e 1A80     		strh	r2, [r3]	@ tmp162, GSMConfigTime
 867:src/sim900_800.c **** 			GSMConfigTimeOut = timeOut;
 2097              		.loc 1 867 0
 2098 0030 A84B     		ldr	r3, .L167+12	@ tmp163,
 2099 0032 6A46     		mov	r2, sp	@ tmp336,
 2100 0034 0632     		adds	r2, r2, #6	@ tmp164,
 2101 0036 1288     		ldrh	r2, [r2]	@ tmp165, timeOut
 2102 0038 1A80     		strh	r2, [r3]	@ tmp165, GSMConfigTimeOut
 868:src/sim900_800.c **** 			GSMConfigState++;
 2103              		.loc 1 868 0
 2104 003a A34B     		ldr	r3, .L167	@ tmp166,
 2105 003c 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2106 003e 0133     		adds	r3, r3, #1	@ tmp167,
 2107 0040 DAB2     		uxtb	r2, r3	@ D.7793, tmp167
 2108 0042 A14B     		ldr	r3, .L167	@ tmp168,
 2109 0044 1A70     		strb	r2, [r3]	@ tmp169, GSMConfigState
 869:src/sim900_800.c **** 			break;
 2110              		.loc 1 869 0
 2111 0046 30E1     		b	.L136	@
 2112              	.L127:
 870:src/sim900_800.c **** 
 871:src/sim900_800.c **** 		case 1:
 872:src/sim900_800.c **** 
 873:src/sim900_800.c **** 			if (GSM_STATUS)
 2113              		.loc 1 873 0
 2114 0048 9023     		movs	r3, #144	@ tmp333,
 2115 004a DB05     		lsls	r3, r3, #23	@ D.7796, tmp333,
 2116 004c 1B8A     		ldrh	r3, [r3, #16]	@ tmp171,
 2117 004e 9BB2     		uxth	r3, r3	@ D.7795, tmp171
 2118 0050 1A00     		movs	r2, r3	@ D.7794, D.7795
 2119 0052 2023     		movs	r3, #32	@ tmp172,
 2120 0054 1340     		ands	r3, r2	@ D.7794, D.7794
 2121 0056 2AD0     		beq	.L137	@,
 874:src/sim900_800.c **** 			{
 875:src/sim900_800.c **** 				//i = GSMSendCommand ("AT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 876:src/sim900_800.c **** 				i = GSMSendCommand ("AT\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2122              		.loc 1 876 0
 2123 0058 9E4B     		ldr	r3, .L167+12	@ tmp173,
 2124 005a 1B88     		ldrh	r3, [r3]	@ tmp174, GSMConfigTimeOut
 2125 005c 99B2     		uxth	r1, r3	@ D.7795, tmp174
 2126 005e 0F24     		movs	r4, #15	@ tmp175,
 2127 0060 6C44     		add	r4, r4, sp	@ tmp175,
 2128 0062 9D4B     		ldr	r3, .L167+16	@ tmp176,
ARM GAS  /tmp/ccCNyPsy.s 			page 55


 2129 0064 9D48     		ldr	r0, .L167+20	@ tmp177,
 2130 0066 0022     		movs	r2, #0	@,
 2131 0068 FFF7FEFF 		bl	GSMSendCommand	@
 2132 006c 0300     		movs	r3, r0	@ tmp178,
 2133 006e 2370     		strb	r3, [r4]	@ tmp180, i
 877:src/sim900_800.c **** 
 878:src/sim900_800.c **** 				if ((i == 2) || (i == 3))
 2134              		.loc 1 878 0
 2135 0070 0F23     		movs	r3, #15	@ tmp181,
 2136 0072 6B44     		add	r3, r3, sp	@ tmp181,
 2137 0074 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2138 0076 022B     		cmp	r3, #2	@ tmp182,
 2139 0078 04D0     		beq	.L138	@,
 2140              		.loc 1 878 0 is_stmt 0 discriminator 1
 2141 007a 0F23     		movs	r3, #15	@ tmp183,
 2142 007c 6B44     		add	r3, r3, sp	@ tmp183,
 2143 007e 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2144 0080 032B     		cmp	r3, #3	@ tmp184,
 2145 0082 06D1     		bne	.L139	@,
 2146              	.L138:
 879:src/sim900_800.c **** 				{
 880:src/sim900_800.c **** 					GSMConfigState += 4;
 2147              		.loc 1 880 0 is_stmt 1
 2148 0084 904B     		ldr	r3, .L167	@ tmp185,
 2149 0086 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2150 0088 0433     		adds	r3, r3, #4	@ tmp186,
 2151 008a DAB2     		uxtb	r2, r3	@ D.7793, tmp186
 2152 008c 8E4B     		ldr	r3, .L167	@ tmp187,
 2153 008e 1A70     		strb	r2, [r3]	@ tmp188, GSMConfigState
 881:src/sim900_800.c **** 					GSM_NRESET_ON;
 2154              		.loc 1 881 0
 2155              		.syntax divided
 2156              	@ 881 "src/sim900_800.c" 1
 2157 0090 C046     		nop 
 2158              		
 2159              	@ 0 "" 2
 2160              		.thumb
 2161              		.syntax unified
 2162              	.L139:
 882:src/sim900_800.c **** 				}
 883:src/sim900_800.c **** 
 884:src/sim900_800.c **** 				if (i == 4)
 2163              		.loc 1 884 0
 2164 0092 0F23     		movs	r3, #15	@ tmp189,
 2165 0094 6B44     		add	r3, r3, sp	@ tmp189,
 2166 0096 1B78     		ldrb	r3, [r3]	@ tmp190, i
 2167 0098 042B     		cmp	r3, #4	@ tmp190,
 2168 009a 00D0     		beq	.LCB1603	@
 2169 009c F4E0     		b	.L158	@long jump	@
 2170              	.LCB1603:
 885:src/sim900_800.c **** 				{
 886:src/sim900_800.c **** 					GSMConfigState += 1;
 2171              		.loc 1 886 0
 2172 009e 8A4B     		ldr	r3, .L167	@ tmp191,
 2173 00a0 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2174 00a2 0133     		adds	r3, r3, #1	@ tmp192,
 2175 00a4 DAB2     		uxtb	r2, r3	@ D.7793, tmp192
ARM GAS  /tmp/ccCNyPsy.s 			page 56


 2176 00a6 884B     		ldr	r3, .L167	@ tmp193,
 2177 00a8 1A70     		strb	r2, [r3]	@ tmp194, GSMConfigState
 887:src/sim900_800.c **** 					GSM_NRESET_ON;
 2178              		.loc 1 887 0
 2179              		.syntax divided
 2180              	@ 887 "src/sim900_800.c" 1
 2181 00aa C046     		nop 
 2182              		
 2183              	@ 0 "" 2
 888:src/sim900_800.c **** 				}
 889:src/sim900_800.c **** 
 890:src/sim900_800.c **** 			}
 891:src/sim900_800.c **** 			else
 892:src/sim900_800.c **** 			{
 893:src/sim900_800.c **** 				GSMConfigState += 2;
 894:src/sim900_800.c **** 				GSM_NRESET_ON;
 895:src/sim900_800.c **** 			}
 896:src/sim900_800.c **** 			break;
 2184              		.loc 1 896 0
 2185              		.thumb
 2186              		.syntax unified
 2187 00ac ECE0     		b	.L158	@
 2188              	.L137:
 893:src/sim900_800.c **** 				GSM_NRESET_ON;
 2189              		.loc 1 893 0
 2190 00ae 864B     		ldr	r3, .L167	@ tmp195,
 2191 00b0 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2192 00b2 0233     		adds	r3, r3, #2	@ tmp196,
 2193 00b4 DAB2     		uxtb	r2, r3	@ D.7793, tmp196
 2194 00b6 844B     		ldr	r3, .L167	@ tmp197,
 2195 00b8 1A70     		strb	r2, [r3]	@ tmp198, GSMConfigState
 894:src/sim900_800.c **** 			}
 2196              		.loc 1 894 0
 2197              		.syntax divided
 2198              	@ 894 "src/sim900_800.c" 1
 2199 00ba C046     		nop 
 2200              		
 2201              	@ 0 "" 2
 2202              		.loc 1 896 0
 2203              		.thumb
 2204              		.syntax unified
 2205 00bc E4E0     		b	.L158	@
 2206              	.L128:
 897:src/sim900_800.c **** 
 898:src/sim900_800.c **** 		case 2:
 899:src/sim900_800.c **** 			//Reinicio del modulo.
 900:src/sim900_800.c **** 			GSM_NRESET_OFF;
 2207              		.loc 1 900 0
 2208              		.syntax divided
 2209              	@ 900 "src/sim900_800.c" 1
 2210 00be C046     		nop 
 2211              		
 2212              	@ 0 "" 2
 901:src/sim900_800.c **** 			if(!GSM_STATUS)
 2213              		.loc 1 901 0
 2214              		.thumb
 2215              		.syntax unified
ARM GAS  /tmp/ccCNyPsy.s 			page 57


 2216 00c0 9023     		movs	r3, #144	@ tmp332,
 2217 00c2 DB05     		lsls	r3, r3, #23	@ D.7796, tmp332,
 2218 00c4 1B8A     		ldrh	r3, [r3, #16]	@ tmp200,
 2219 00c6 9BB2     		uxth	r3, r3	@ D.7795, tmp200
 2220 00c8 1A00     		movs	r2, r3	@ D.7794, D.7795
 2221 00ca 2023     		movs	r3, #32	@ tmp201,
 2222 00cc 1340     		ands	r3, r2	@ D.7794, D.7794
 2223 00ce 00D0     		beq	.LCB1635	@
 2224 00d0 DCE0     		b	.L159	@long jump	@
 2225              	.LCB1635:
 902:src/sim900_800.c **** 			{
 903:src/sim900_800.c **** 				GSMConfigState++;
 2226              		.loc 1 903 0
 2227 00d2 7D4B     		ldr	r3, .L167	@ tmp202,
 2228 00d4 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2229 00d6 0133     		adds	r3, r3, #1	@ tmp203,
 2230 00d8 DAB2     		uxtb	r2, r3	@ D.7793, tmp203
 2231 00da 7B4B     		ldr	r3, .L167	@ tmp204,
 2232 00dc 1A70     		strb	r2, [r3]	@ tmp205, GSMConfigState
 904:src/sim900_800.c **** 				GSM_NRESET_ON;
 2233              		.loc 1 904 0
 2234              		.syntax divided
 2235              	@ 904 "src/sim900_800.c" 1
 2236 00de C046     		nop 
 2237              		
 2238              	@ 0 "" 2
 905:src/sim900_800.c **** 			}
 906:src/sim900_800.c **** 			break;
 2239              		.loc 1 906 0
 2240              		.thumb
 2241              		.syntax unified
 2242 00e0 D4E0     		b	.L159	@
 2243              	.L129:
 907:src/sim900_800.c **** 
 908:src/sim900_800.c **** 		case 3:
 909:src/sim900_800.c **** 
 910:src/sim900_800.c **** 			//Encendido del modulo.
 911:src/sim900_800.c **** 			i = GSM_Start();
 2244              		.loc 1 911 0
 2245 00e2 0F24     		movs	r4, #15	@ tmp206,
 2246 00e4 6C44     		add	r4, r4, sp	@ tmp206,
 2247 00e6 FFF7FEFF 		bl	GSM_Start	@
 2248 00ea 0300     		movs	r3, r0	@ tmp207,
 2249 00ec 2370     		strb	r3, [r4]	@ tmp209, i
 912:src/sim900_800.c **** 
 913:src/sim900_800.c **** 			if (i == 2)
 2250              		.loc 1 913 0
 2251 00ee 0F23     		movs	r3, #15	@ tmp210,
 2252 00f0 6B44     		add	r3, r3, sp	@ tmp210,
 2253 00f2 1B78     		ldrb	r3, [r3]	@ tmp211, i
 2254 00f4 022B     		cmp	r3, #2	@ tmp211,
 2255 00f6 08D1     		bne	.L143	@,
 914:src/sim900_800.c **** 			{
 915:src/sim900_800.c **** 				GSMConfigState++;
 2256              		.loc 1 915 0
 2257 00f8 734B     		ldr	r3, .L167	@ tmp212,
 2258 00fa 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
ARM GAS  /tmp/ccCNyPsy.s 			page 58


 2259 00fc 0133     		adds	r3, r3, #1	@ tmp213,
 2260 00fe DAB2     		uxtb	r2, r3	@ D.7793, tmp213
 2261 0100 714B     		ldr	r3, .L167	@ tmp214,
 2262 0102 1A70     		strb	r2, [r3]	@ tmp215, GSMConfigState
 916:src/sim900_800.c **** 				GSMConfigTime = 20;
 2263              		.loc 1 916 0
 2264 0104 724B     		ldr	r3, .L167+8	@ tmp216,
 2265 0106 1422     		movs	r2, #20	@ tmp217,
 2266 0108 1A80     		strh	r2, [r3]	@ tmp218, GSMConfigTime
 2267              	.L143:
 917:src/sim900_800.c **** 			}
 918:src/sim900_800.c **** 
 919:src/sim900_800.c **** 			if (i == 4)
 2268              		.loc 1 919 0
 2269 010a 0F23     		movs	r3, #15	@ tmp219,
 2270 010c 6B44     		add	r3, r3, sp	@ tmp219,
 2271 010e 1B78     		ldrb	r3, [r3]	@ tmp220, i
 2272 0110 042B     		cmp	r3, #4	@ tmp220,
 2273 0112 00D0     		beq	.LCB1672	@
 2274 0114 BCE0     		b	.L160	@long jump	@
 2275              	.LCB1672:
 920:src/sim900_800.c **** 			{
 921:src/sim900_800.c **** 				GSMConfigState = 1;
 2276              		.loc 1 921 0
 2277 0116 6C4B     		ldr	r3, .L167	@ tmp221,
 2278 0118 0122     		movs	r2, #1	@ tmp222,
 2279 011a 1A70     		strb	r2, [r3]	@ tmp223, GSMConfigState
 922:src/sim900_800.c **** 				return 3;
 2280              		.loc 1 922 0
 2281 011c 0323     		movs	r3, #3	@ D.7793,
 2282 011e CFE0     		b	.L145	@
 2283              	.L130:
 923:src/sim900_800.c **** 			}
 924:src/sim900_800.c **** 			break;
 925:src/sim900_800.c **** 
 926:src/sim900_800.c **** 		case 4:
 927:src/sim900_800.c **** 
 928:src/sim900_800.c **** 			if (GSMConfigTime == 0)
 2284              		.loc 1 928 0
 2285 0120 6B4B     		ldr	r3, .L167+8	@ tmp224,
 2286 0122 1B88     		ldrh	r3, [r3]	@ tmp225, GSMConfigTime
 2287 0124 9BB2     		uxth	r3, r3	@ D.7795, tmp225
 2288 0126 002B     		cmp	r3, #0	@ D.7795,
 2289 0128 00D0     		beq	.LCB1685	@
 2290 012a B3E0     		b	.L161	@long jump	@
 2291              	.LCB1685:
 929:src/sim900_800.c **** 				GSMConfigState = 1;
 2292              		.loc 1 929 0
 2293 012c 664B     		ldr	r3, .L167	@ tmp226,
 2294 012e 0122     		movs	r2, #1	@ tmp227,
 2295 0130 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigState
 930:src/sim900_800.c **** 			break;
 2296              		.loc 1 930 0
 2297 0132 AFE0     		b	.L161	@
 2298              	.L131:
 931:src/sim900_800.c **** 
 932:src/sim900_800.c **** 		case 5:
ARM GAS  /tmp/ccCNyPsy.s 			page 59


 933:src/sim900_800.c **** 
 934:src/sim900_800.c **** 			//Comandos para configurar.
 935:src/sim900_800.c **** 			//ATE0.
 936:src/sim900_800.c **** 			//i = GSMSendCommand ("ATE0\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 937:src/sim900_800.c **** 			i = GSMSendCommand ("ATE0\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2299              		.loc 1 937 0
 2300 0134 674B     		ldr	r3, .L167+12	@ tmp229,
 2301 0136 1B88     		ldrh	r3, [r3]	@ tmp230, GSMConfigTimeOut
 2302 0138 99B2     		uxth	r1, r3	@ D.7795, tmp230
 2303 013a 0F24     		movs	r4, #15	@ tmp231,
 2304 013c 6C44     		add	r4, r4, sp	@ tmp231,
 2305 013e 664B     		ldr	r3, .L167+16	@ tmp232,
 2306 0140 6748     		ldr	r0, .L167+24	@ tmp233,
 2307 0142 0022     		movs	r2, #0	@,
 2308 0144 FFF7FEFF 		bl	GSMSendCommand	@
 2309 0148 0300     		movs	r3, r0	@ tmp234,
 2310 014a 2370     		strb	r3, [r4]	@ tmp236, i
 938:src/sim900_800.c **** 
 939:src/sim900_800.c **** 			if (i == 2)
 2311              		.loc 1 939 0
 2312 014c 0F23     		movs	r3, #15	@ tmp237,
 2313 014e 6B44     		add	r3, r3, sp	@ tmp237,
 2314 0150 1B78     		ldrb	r3, [r3]	@ tmp238, i
 2315 0152 022B     		cmp	r3, #2	@ tmp238,
 2316 0154 05D1     		bne	.L147	@,
 940:src/sim900_800.c **** 			{
 941:src/sim900_800.c **** 				GSMConfigState++;
 2317              		.loc 1 941 0
 2318 0156 5C4B     		ldr	r3, .L167	@ tmp239,
 2319 0158 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2320 015a 0133     		adds	r3, r3, #1	@ tmp240,
 2321 015c DAB2     		uxtb	r2, r3	@ D.7793, tmp240
 2322 015e 5A4B     		ldr	r3, .L167	@ tmp241,
 2323 0160 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigState
 2324              	.L147:
 942:src/sim900_800.c **** 			}
 943:src/sim900_800.c **** 			if (i > 2)
 2325              		.loc 1 943 0
 2326 0162 0F23     		movs	r3, #15	@ tmp243,
 2327 0164 6B44     		add	r3, r3, sp	@ tmp243,
 2328 0166 1B78     		ldrb	r3, [r3]	@ tmp244, i
 2329 0168 022B     		cmp	r3, #2	@ tmp244,
 2330 016a 00D8     		bhi	.LCB1721	@
 2331 016c 94E0     		b	.L162	@long jump	@
 2332              	.LCB1721:
 944:src/sim900_800.c **** 			{
 945:src/sim900_800.c **** 				GSMConfigState = 1;
 2333              		.loc 1 945 0
 2334 016e 564B     		ldr	r3, .L167	@ tmp245,
 2335 0170 0122     		movs	r2, #1	@ tmp246,
 2336 0172 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigState
 946:src/sim900_800.c **** 				return 3;
 2337              		.loc 1 946 0
 2338 0174 0323     		movs	r3, #3	@ D.7793,
 2339 0176 A3E0     		b	.L145	@
 2340              	.L132:
 947:src/sim900_800.c **** 			}
ARM GAS  /tmp/ccCNyPsy.s 			page 60


 948:src/sim900_800.c **** 
 949:src/sim900_800.c **** 			break;
 950:src/sim900_800.c **** 
 951:src/sim900_800.c **** 		case 6:
 952:src/sim900_800.c **** 			//AT+CMGF=1
 953:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CMGF=1\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 954:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CMGF=1\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2341              		.loc 1 954 0
 2342 0178 564B     		ldr	r3, .L167+12	@ tmp248,
 2343 017a 1B88     		ldrh	r3, [r3]	@ tmp249, GSMConfigTimeOut
 2344 017c 99B2     		uxth	r1, r3	@ D.7795, tmp249
 2345 017e 0F24     		movs	r4, #15	@ tmp250,
 2346 0180 6C44     		add	r4, r4, sp	@ tmp250,
 2347 0182 554B     		ldr	r3, .L167+16	@ tmp251,
 2348 0184 5748     		ldr	r0, .L167+28	@ tmp252,
 2349 0186 0022     		movs	r2, #0	@,
 2350 0188 FFF7FEFF 		bl	GSMSendCommand	@
 2351 018c 0300     		movs	r3, r0	@ tmp253,
 2352 018e 2370     		strb	r3, [r4]	@ tmp255, i
 955:src/sim900_800.c **** 
 956:src/sim900_800.c **** 			if (i == 2)
 2353              		.loc 1 956 0
 2354 0190 0F23     		movs	r3, #15	@ tmp256,
 2355 0192 6B44     		add	r3, r3, sp	@ tmp256,
 2356 0194 1B78     		ldrb	r3, [r3]	@ tmp257, i
 2357 0196 022B     		cmp	r3, #2	@ tmp257,
 2358 0198 05D1     		bne	.L149	@,
 957:src/sim900_800.c **** 			{
 958:src/sim900_800.c **** 				GSMConfigState++;
 2359              		.loc 1 958 0
 2360 019a 4B4B     		ldr	r3, .L167	@ tmp258,
 2361 019c 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2362 019e 0133     		adds	r3, r3, #1	@ tmp259,
 2363 01a0 DAB2     		uxtb	r2, r3	@ D.7793, tmp259
 2364 01a2 494B     		ldr	r3, .L167	@ tmp260,
 2365 01a4 1A70     		strb	r2, [r3]	@ tmp261, GSMConfigState
 2366              	.L149:
 959:src/sim900_800.c **** 			}
 960:src/sim900_800.c **** 			if (i > 2)
 2367              		.loc 1 960 0
 2368 01a6 0F23     		movs	r3, #15	@ tmp262,
 2369 01a8 6B44     		add	r3, r3, sp	@ tmp262,
 2370 01aa 1B78     		ldrb	r3, [r3]	@ tmp263, i
 2371 01ac 022B     		cmp	r3, #2	@ tmp263,
 2372 01ae 00D8     		bhi	.LCB1758	@
 2373 01b0 74E0     		b	.L163	@long jump	@
 2374              	.LCB1758:
 961:src/sim900_800.c **** 			{
 962:src/sim900_800.c **** 				GSMConfigState = 1;
 2375              		.loc 1 962 0
 2376 01b2 454B     		ldr	r3, .L167	@ tmp264,
 2377 01b4 0122     		movs	r2, #1	@ tmp265,
 2378 01b6 1A70     		strb	r2, [r3]	@ tmp266, GSMConfigState
 963:src/sim900_800.c **** 				return 3;
 2379              		.loc 1 963 0
 2380 01b8 0323     		movs	r3, #3	@ D.7793,
 2381 01ba 81E0     		b	.L145	@
ARM GAS  /tmp/ccCNyPsy.s 			page 61


 2382              	.L133:
 964:src/sim900_800.c **** 			}
 965:src/sim900_800.c **** 			break;
 966:src/sim900_800.c **** 		case 7:
 967:src/sim900_800.c **** 			//AT+CSCS="GSM"
 968:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 969:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2383              		.loc 1 969 0
 2384 01bc 454B     		ldr	r3, .L167+12	@ tmp267,
 2385 01be 1B88     		ldrh	r3, [r3]	@ tmp268, GSMConfigTimeOut
 2386 01c0 99B2     		uxth	r1, r3	@ D.7795, tmp268
 2387 01c2 0F24     		movs	r4, #15	@ tmp269,
 2388 01c4 6C44     		add	r4, r4, sp	@ tmp269,
 2389 01c6 444B     		ldr	r3, .L167+16	@ tmp270,
 2390 01c8 4748     		ldr	r0, .L167+32	@ tmp271,
 2391 01ca 0022     		movs	r2, #0	@,
 2392 01cc FFF7FEFF 		bl	GSMSendCommand	@
 2393 01d0 0300     		movs	r3, r0	@ tmp272,
 2394 01d2 2370     		strb	r3, [r4]	@ tmp274, i
 970:src/sim900_800.c **** 
 971:src/sim900_800.c **** 			if (i == 2)
 2395              		.loc 1 971 0
 2396 01d4 0F23     		movs	r3, #15	@ tmp275,
 2397 01d6 6B44     		add	r3, r3, sp	@ tmp275,
 2398 01d8 1B78     		ldrb	r3, [r3]	@ tmp276, i
 2399 01da 022B     		cmp	r3, #2	@ tmp276,
 2400 01dc 05D1     		bne	.L151	@,
 972:src/sim900_800.c **** 			{
 973:src/sim900_800.c **** 				GSMConfigState++;
 2401              		.loc 1 973 0
 2402 01de 3A4B     		ldr	r3, .L167	@ tmp277,
 2403 01e0 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2404 01e2 0133     		adds	r3, r3, #1	@ tmp278,
 2405 01e4 DAB2     		uxtb	r2, r3	@ D.7793, tmp278
 2406 01e6 384B     		ldr	r3, .L167	@ tmp279,
 2407 01e8 1A70     		strb	r2, [r3]	@ tmp280, GSMConfigState
 2408              	.L151:
 974:src/sim900_800.c **** 			}
 975:src/sim900_800.c **** 			if (i > 2)
 2409              		.loc 1 975 0
 2410 01ea 0F23     		movs	r3, #15	@ tmp281,
 2411 01ec 6B44     		add	r3, r3, sp	@ tmp281,
 2412 01ee 1B78     		ldrb	r3, [r3]	@ tmp282, i
 2413 01f0 022B     		cmp	r3, #2	@ tmp282,
 2414 01f2 55D9     		bls	.L164	@,
 976:src/sim900_800.c **** 			{
 977:src/sim900_800.c **** 				GSMConfigState = 1;
 2415              		.loc 1 977 0
 2416 01f4 344B     		ldr	r3, .L167	@ tmp283,
 2417 01f6 0122     		movs	r2, #1	@ tmp284,
 2418 01f8 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigState
 978:src/sim900_800.c **** 				return 3;
 2419              		.loc 1 978 0
 2420 01fa 0323     		movs	r3, #3	@ D.7793,
 2421 01fc 60E0     		b	.L145	@
 2422              	.L134:
 979:src/sim900_800.c **** 			}
ARM GAS  /tmp/ccCNyPsy.s 			page 62


 980:src/sim900_800.c **** 			break;
 981:src/sim900_800.c **** 		case 8:
 982:src/sim900_800.c **** 			//AT+CSMP=49,255,0,241
 983:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 984:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2423              		.loc 1 984 0
 2424 01fe 354B     		ldr	r3, .L167+12	@ tmp286,
 2425 0200 1B88     		ldrh	r3, [r3]	@ tmp287, GSMConfigTimeOut
 2426 0202 99B2     		uxth	r1, r3	@ D.7795, tmp287
 2427 0204 0F24     		movs	r4, #15	@ tmp288,
 2428 0206 6C44     		add	r4, r4, sp	@ tmp288,
 2429 0208 334B     		ldr	r3, .L167+16	@ tmp289,
 2430 020a 3848     		ldr	r0, .L167+36	@ tmp290,
 2431 020c 0022     		movs	r2, #0	@,
 2432 020e FFF7FEFF 		bl	GSMSendCommand	@
 2433 0212 0300     		movs	r3, r0	@ tmp291,
 2434 0214 2370     		strb	r3, [r4]	@ tmp293, i
 985:src/sim900_800.c **** 
 986:src/sim900_800.c **** 			if (i == 2)
 2435              		.loc 1 986 0
 2436 0216 0F23     		movs	r3, #15	@ tmp294,
 2437 0218 6B44     		add	r3, r3, sp	@ tmp294,
 2438 021a 1B78     		ldrb	r3, [r3]	@ tmp295, i
 2439 021c 022B     		cmp	r3, #2	@ tmp295,
 2440 021e 05D1     		bne	.L153	@,
 987:src/sim900_800.c **** 			{
 988:src/sim900_800.c **** 				GSMConfigState++;
 2441              		.loc 1 988 0
 2442 0220 294B     		ldr	r3, .L167	@ tmp296,
 2443 0222 1B78     		ldrb	r3, [r3]	@ D.7793, GSMConfigState
 2444 0224 0133     		adds	r3, r3, #1	@ tmp297,
 2445 0226 DAB2     		uxtb	r2, r3	@ D.7793, tmp297
 2446 0228 274B     		ldr	r3, .L167	@ tmp298,
 2447 022a 1A70     		strb	r2, [r3]	@ tmp299, GSMConfigState
 2448              	.L153:
 989:src/sim900_800.c **** 			}
 990:src/sim900_800.c **** 			if (i > 2)
 2449              		.loc 1 990 0
 2450 022c 0F23     		movs	r3, #15	@ tmp300,
 2451 022e 6B44     		add	r3, r3, sp	@ tmp300,
 2452 0230 1B78     		ldrb	r3, [r3]	@ tmp301, i
 2453 0232 022B     		cmp	r3, #2	@ tmp301,
 2454 0234 36D9     		bls	.L165	@,
 991:src/sim900_800.c **** 			{
 992:src/sim900_800.c **** 				GSMConfigState = 1;
 2455              		.loc 1 992 0
 2456 0236 244B     		ldr	r3, .L167	@ tmp302,
 2457 0238 0122     		movs	r2, #1	@ tmp303,
 2458 023a 1A70     		strb	r2, [r3]	@ tmp304, GSMConfigState
 993:src/sim900_800.c **** 				return 3;
 2459              		.loc 1 993 0
 2460 023c 0323     		movs	r3, #3	@ D.7793,
 2461 023e 3FE0     		b	.L145	@
 2462              	.L135:
 994:src/sim900_800.c **** 			}
 995:src/sim900_800.c **** 			break;
 996:src/sim900_800.c **** 		case 9:
ARM GAS  /tmp/ccCNyPsy.s 			page 63


 997:src/sim900_800.c **** 			//AT&W
 998:src/sim900_800.c **** 			//i = GSMSendCommand ("AT&W\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 999:src/sim900_800.c **** 			i = GSMSendCommand ("AT&W\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2463              		.loc 1 999 0
 2464 0240 244B     		ldr	r3, .L167+12	@ tmp305,
 2465 0242 1B88     		ldrh	r3, [r3]	@ tmp306, GSMConfigTimeOut
 2466 0244 99B2     		uxth	r1, r3	@ D.7795, tmp306
 2467 0246 0F24     		movs	r4, #15	@ tmp307,
 2468 0248 6C44     		add	r4, r4, sp	@ tmp307,
 2469 024a 234B     		ldr	r3, .L167+16	@ tmp308,
 2470 024c 2848     		ldr	r0, .L167+40	@ tmp309,
 2471 024e 0022     		movs	r2, #0	@,
 2472 0250 FFF7FEFF 		bl	GSMSendCommand	@
 2473 0254 0300     		movs	r3, r0	@ tmp310,
 2474 0256 2370     		strb	r3, [r4]	@ tmp312, i
1000:src/sim900_800.c **** 
1001:src/sim900_800.c **** 			if (i == 2)
 2475              		.loc 1 1001 0
 2476 0258 0F23     		movs	r3, #15	@ tmp313,
 2477 025a 6B44     		add	r3, r3, sp	@ tmp313,
 2478 025c 1B78     		ldrb	r3, [r3]	@ tmp314, i
 2479 025e 022B     		cmp	r3, #2	@ tmp314,
 2480 0260 04D1     		bne	.L155	@,
1002:src/sim900_800.c **** 			{
1003:src/sim900_800.c **** 				GSMConfigState = 1;
 2481              		.loc 1 1003 0
 2482 0262 194B     		ldr	r3, .L167	@ tmp315,
 2483 0264 0122     		movs	r2, #1	@ tmp316,
 2484 0266 1A70     		strb	r2, [r3]	@ tmp317, GSMConfigState
1004:src/sim900_800.c **** 				return 2;
 2485              		.loc 1 1004 0
 2486 0268 0223     		movs	r3, #2	@ D.7793,
 2487 026a 29E0     		b	.L145	@
 2488              	.L155:
1005:src/sim900_800.c **** 			}
1006:src/sim900_800.c **** 			if (i > 2)
 2489              		.loc 1 1006 0
 2490 026c 0F23     		movs	r3, #15	@ tmp318,
 2491 026e 6B44     		add	r3, r3, sp	@ tmp318,
 2492 0270 1B78     		ldrb	r3, [r3]	@ tmp319, i
 2493 0272 022B     		cmp	r3, #2	@ tmp319,
 2494 0274 18D9     		bls	.L166	@,
1007:src/sim900_800.c **** 			{
1008:src/sim900_800.c **** 				GSMConfigState = 1;
 2495              		.loc 1 1008 0
 2496 0276 144B     		ldr	r3, .L167	@ tmp320,
 2497 0278 0122     		movs	r2, #1	@ tmp321,
 2498 027a 1A70     		strb	r2, [r3]	@ tmp322, GSMConfigState
1009:src/sim900_800.c **** 				return 3;
 2499              		.loc 1 1009 0
 2500 027c 0323     		movs	r3, #3	@ D.7793,
 2501 027e 1FE0     		b	.L145	@
 2502              	.L124:
1010:src/sim900_800.c **** 			}
1011:src/sim900_800.c **** 			break;
1012:src/sim900_800.c **** 		default:
1013:src/sim900_800.c **** 			GSMConfigState = 0;
ARM GAS  /tmp/ccCNyPsy.s 			page 64


 2503              		.loc 1 1013 0
 2504 0280 114B     		ldr	r3, .L167	@ tmp323,
 2505 0282 0022     		movs	r2, #0	@ tmp324,
 2506 0284 1A70     		strb	r2, [r3]	@ tmp325, GSMConfigState
1014:src/sim900_800.c **** 			break;
 2507              		.loc 1 1014 0
 2508 0286 10E0     		b	.L136	@
 2509              	.L158:
 896:src/sim900_800.c **** 
 2510              		.loc 1 896 0
 2511 0288 C046     		nop
 2512 028a 0EE0     		b	.L136	@
 2513              	.L159:
 906:src/sim900_800.c **** 
 2514              		.loc 1 906 0
 2515 028c C046     		nop
 2516 028e 0CE0     		b	.L136	@
 2517              	.L160:
 924:src/sim900_800.c **** 
 2518              		.loc 1 924 0
 2519 0290 C046     		nop
 2520 0292 0AE0     		b	.L136	@
 2521              	.L161:
 930:src/sim900_800.c **** 
 2522              		.loc 1 930 0
 2523 0294 C046     		nop
 2524 0296 08E0     		b	.L136	@
 2525              	.L162:
 949:src/sim900_800.c **** 
 2526              		.loc 1 949 0
 2527 0298 C046     		nop
 2528 029a 06E0     		b	.L136	@
 2529              	.L163:
 965:src/sim900_800.c **** 		case 7:
 2530              		.loc 1 965 0
 2531 029c C046     		nop
 2532 029e 04E0     		b	.L136	@
 2533              	.L164:
 980:src/sim900_800.c **** 		case 8:
 2534              		.loc 1 980 0
 2535 02a0 C046     		nop
 2536 02a2 02E0     		b	.L136	@
 2537              	.L165:
 995:src/sim900_800.c **** 		case 9:
 2538              		.loc 1 995 0
 2539 02a4 C046     		nop
 2540 02a6 00E0     		b	.L136	@
 2541              	.L166:
1011:src/sim900_800.c **** 		default:
 2542              		.loc 1 1011 0
 2543 02a8 C046     		nop
 2544              	.L136:
1015:src/sim900_800.c **** 
1016:src/sim900_800.c **** 	}
1017:src/sim900_800.c **** 
1018:src/sim900_800.c **** 	if (GSMConfigTimeOut == 0)
 2545              		.loc 1 1018 0
ARM GAS  /tmp/ccCNyPsy.s 			page 65


 2546 02aa 0A4B     		ldr	r3, .L167+12	@ tmp326,
 2547 02ac 1B88     		ldrh	r3, [r3]	@ tmp327, GSMConfigTimeOut
 2548 02ae 9BB2     		uxth	r3, r3	@ D.7795, tmp327
 2549 02b0 002B     		cmp	r3, #0	@ D.7795,
 2550 02b2 04D1     		bne	.L157	@,
1019:src/sim900_800.c **** 	{
1020:src/sim900_800.c **** 		GSMConfigState = 0;
 2551              		.loc 1 1020 0
 2552 02b4 044B     		ldr	r3, .L167	@ tmp328,
 2553 02b6 0022     		movs	r2, #0	@ tmp329,
 2554 02b8 1A70     		strb	r2, [r3]	@ tmp330, GSMConfigState
1021:src/sim900_800.c **** 		return 4;
 2555              		.loc 1 1021 0
 2556 02ba 0423     		movs	r3, #4	@ D.7793,
 2557 02bc 00E0     		b	.L145	@
 2558              	.L157:
1022:src/sim900_800.c **** 	}
1023:src/sim900_800.c **** 
1024:src/sim900_800.c **** 	return 1;
 2559              		.loc 1 1024 0
 2560 02be 0123     		movs	r3, #1	@ D.7793,
 2561              	.L145:
1025:src/sim900_800.c **** }
 2562              		.loc 1 1025 0
 2563 02c0 1800     		movs	r0, r3	@, <retval>
 2564 02c2 04B0     		add	sp, sp, #16	@,,
 2565              		@ sp needed	@
 2566 02c4 10BD     		pop	{r4, pc}
 2567              	.L168:
 2568 02c6 C046     		.align	2
 2569              	.L167:
 2570 02c8 00000000 		.word	GSMConfigState
 2571 02cc 00000000 		.word	.L126
 2572 02d0 00000000 		.word	GSMConfigTime
 2573 02d4 00000000 		.word	GSMConfigTimeOut
 2574 02d8 00000000 		.word	GSMbuffRtaCommand
 2575 02dc 94000000 		.word	.LC73
 2576 02e0 9C000000 		.word	.LC75
 2577 02e4 A4000000 		.word	.LC77
 2578 02e8 B0000000 		.word	.LC79
 2579 02ec C0000000 		.word	.LC81
 2580 02f0 D8000000 		.word	.LC83
 2581              		.cfi_endproc
 2582              	.LFE27:
 2583              		.size	GSM_Config, .-GSM_Config
 2584              		.section	.rodata
 2585 00df 00       		.align	2
 2586              	.LC89:
 2587 00e0 41542B43 		.ascii	"AT+CMGS=\"\000"
 2587      4D47533D 
 2587      2200
 2588 00ea 0000     		.align	2
 2589              	.LC91:
 2590 00ec 220D0A00 		.ascii	"\"\015\012\000"
 2591              		.align	2
 2592              	.LC94:
 2593 00f0 1A00     		.ascii	"\032\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 66


 2594              		.section	.text.GSMSendSMS,"ax",%progbits
 2595              		.align	2
 2596              		.global	GSMSendSMS
 2597              		.code	16
 2598              		.thumb_func
 2599              		.type	GSMSendSMS, %function
 2600              	GSMSendSMS:
 2601              	.LFB28:
1026:src/sim900_800.c **** 
1027:src/sim900_800.c **** //-----------------------------------------------------------------------//
1028:src/sim900_800.c **** //char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned char timeOut)
1029:src/sim900_800.c **** //-----------------------------------------------------------------------//
1030:src/sim900_800.c **** //String de mensaje: 	"..."
1031:src/sim900_800.c **** //timeOut x100mS
1032:src/sim900_800.c **** //String Numero: 		"----------"
1033:src/sim900_800.c **** //Wait: 	1
1034:src/sim900_800.c **** //OK:		2
1035:src/sim900_800.c **** //ERR:		3
1036:src/sim900_800.c **** //TO:		4
1037:src/sim900_800.c **** //-----------------------------------------------------------------------//
1038:src/sim900_800.c **** char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned short timeOut, char sim)
1039:src/sim900_800.c **** {
 2602              		.loc 1 1039 0
 2603              		.cfi_startproc
 2604 0000 10B5     		push	{r4, lr}	@
 2605              	.LCFI11:
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 4, -8
 2608              		.cfi_offset 14, -4
 2609 0002 86B0     		sub	sp, sp, #24	@,,
 2610              	.LCFI12:
 2611              		.cfi_def_cfa_offset 32
 2612 0004 0390     		str	r0, [sp, #12]	@ ptrMSG, ptrMSG
 2613 0006 0291     		str	r1, [sp, #8]	@ ptrNUM, ptrNUM
 2614 0008 1900     		movs	r1, r3	@ tmp124, sim
 2615 000a 6B46     		mov	r3, sp	@ tmp236,
 2616 000c 0633     		adds	r3, r3, #6	@ tmp122,
 2617 000e 1A80     		strh	r2, [r3]	@ tmp123, timeOut
 2618 0010 6B46     		mov	r3, sp	@ tmp237,
 2619 0012 0533     		adds	r3, r3, #5	@ tmp125,
 2620 0014 0A1C     		adds	r2, r1, #0	@ tmp126, tmp124
 2621 0016 1A70     		strb	r2, [r3]	@ tmp126, sim
1040:src/sim900_800.c **** 	unsigned char i;
1041:src/sim900_800.c **** 
1042:src/sim900_800.c **** 	switch(GSMSendSMSState)
 2622              		.loc 1 1042 0
 2623 0018 664B     		ldr	r3, .L190	@ tmp127,
 2624 001a 1B78     		ldrb	r3, [r3]	@ D.7804, GSMSendSMSState
 2625 001c 012B     		cmp	r3, #1	@ D.7805,
 2626 001e 32D0     		beq	.L171	@,
 2627 0020 02DC     		bgt	.L172	@,
 2628 0022 002B     		cmp	r3, #0	@ D.7805,
 2629 0024 06D0     		beq	.L173	@,
 2630 0026 AFE0     		b	.L170	@
 2631              	.L172:
 2632 0028 022B     		cmp	r3, #2	@ D.7805,
 2633 002a 63D0     		beq	.L174	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 67


 2634 002c 032B     		cmp	r3, #3	@ D.7805,
 2635 002e 00D1     		bne	.LCB2007	@
 2636 0030 7EE0     		b	.L175	@long jump	@
 2637              	.LCB2007:
 2638 0032 A9E0     		b	.L170	@
 2639              	.L173:
1043:src/sim900_800.c **** 	{
1044:src/sim900_800.c **** 		case 0:
1045:src/sim900_800.c **** 			GSMSendSMSFlag = 0;
 2640              		.loc 1 1045 0
 2641 0034 604B     		ldr	r3, .L190+4	@ tmp128,
 2642 0036 0022     		movs	r2, #0	@ tmp129,
 2643 0038 1A70     		strb	r2, [r3]	@ tmp130, GSMSendSMSFlag
1046:src/sim900_800.c **** 			GSMSendSMSTimeOut = timeOut;
 2644              		.loc 1 1046 0
 2645 003a 604B     		ldr	r3, .L190+8	@ tmp131,
 2646 003c 6A46     		mov	r2, sp	@ tmp238,
 2647 003e 0632     		adds	r2, r2, #6	@ tmp132,
 2648 0040 1288     		ldrh	r2, [r2]	@ tmp133, timeOut
 2649 0042 1A80     		strh	r2, [r3]	@ tmp133, GSMSendSMSTimeOut
1047:src/sim900_800.c **** 			sprintf(&GSMSendSMSbuffAux[0], "AT+CMGS=\"");
 2650              		.loc 1 1047 0
 2651 0044 5E4A     		ldr	r2, .L190+12	@ tmp134,
 2652 0046 5F4B     		ldr	r3, .L190+16	@ tmp135,
 2653 0048 1000     		movs	r0, r2	@ tmp136, tmp134
 2654 004a 1900     		movs	r1, r3	@ tmp137, tmp135
 2655 004c 0A23     		movs	r3, #10	@ tmp138,
 2656 004e 1A00     		movs	r2, r3	@, tmp138
 2657 0050 FFF7FEFF 		bl	memcpy	@
1048:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], ptrNUM);
 2658              		.loc 1 1048 0
 2659 0054 029A     		ldr	r2, [sp, #8]	@ tmp141, ptrNUM
 2660 0056 5A4B     		ldr	r3, .L190+12	@ tmp142,
 2661 0058 1100     		movs	r1, r2	@, tmp141
 2662 005a 1800     		movs	r0, r3	@, tmp142
 2663 005c FFF7FEFF 		bl	strcat	@
1049:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], "\"\r\n");
 2664              		.loc 1 1049 0
 2665 0060 574B     		ldr	r3, .L190+12	@ tmp143,
 2666 0062 1800     		movs	r0, r3	@, tmp143
 2667 0064 FFF7FEFF 		bl	strlen	@
 2668 0068 0300     		movs	r3, r0	@ tmp144,
 2669 006a 1A00     		movs	r2, r3	@ D.7806, tmp145
 2670 006c 544B     		ldr	r3, .L190+12	@ tmp146,
 2671 006e D218     		adds	r2, r2, r3	@ D.7807, D.7806, tmp146
 2672 0070 554B     		ldr	r3, .L190+20	@ tmp147,
 2673 0072 1000     		movs	r0, r2	@ tmp148, D.7807
 2674 0074 1900     		movs	r1, r3	@ tmp149, tmp147
 2675 0076 0423     		movs	r3, #4	@ tmp150,
 2676 0078 1A00     		movs	r2, r3	@, tmp150
 2677 007a FFF7FEFF 		bl	memcpy	@
1050:src/sim900_800.c **** 			GSMSendSMSState = 3;
 2678              		.loc 1 1050 0
 2679 007e 4D4B     		ldr	r3, .L190	@ tmp153,
 2680 0080 0322     		movs	r2, #3	@ tmp154,
 2681 0082 1A70     		strb	r2, [r3]	@ tmp155, GSMSendSMSState
1051:src/sim900_800.c **** 			break;
ARM GAS  /tmp/ccCNyPsy.s 			page 68


 2682              		.loc 1 1051 0
 2683 0084 87E0     		b	.L176	@
 2684              	.L171:
1052:src/sim900_800.c **** 		case 1:
1053:src/sim900_800.c **** 
1054:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 80, 0, &GSMbuffRtaCommand[0]);
 2685              		.loc 1 1054 0
 2686 0086 1724     		movs	r4, #23	@ tmp156,
 2687 0088 6C44     		add	r4, r4, sp	@ tmp156,
 2688 008a 504B     		ldr	r3, .L190+24	@ tmp157,
 2689 008c 4C48     		ldr	r0, .L190+12	@ tmp158,
 2690 008e 0022     		movs	r2, #0	@,
 2691 0090 5021     		movs	r1, #80	@,
 2692 0092 FFF7FEFF 		bl	GSMSendCommand	@
 2693 0096 0300     		movs	r3, r0	@ tmp159,
 2694 0098 2370     		strb	r3, [r4]	@ tmp161, i
1055:src/sim900_800.c **** 
1056:src/sim900_800.c **** 			if (i == 2)
 2695              		.loc 1 1056 0
 2696 009a 1723     		movs	r3, #23	@ tmp162,
 2697 009c 6B44     		add	r3, r3, sp	@ tmp162,
 2698 009e 1B78     		ldrb	r3, [r3]	@ tmp163, i
 2699 00a0 022B     		cmp	r3, #2	@ tmp163,
 2700 00a2 1DD1     		bne	.L177	@,
1057:src/sim900_800.c **** 			{
1058:src/sim900_800.c **** 
1059:src/sim900_800.c **** 				GSMSendSMSbuffAux[0] = 0;
 2701              		.loc 1 1059 0
 2702 00a4 464B     		ldr	r3, .L190+12	@ tmp164,
 2703 00a6 0022     		movs	r2, #0	@ tmp165,
 2704 00a8 1A70     		strb	r2, [r3]	@ tmp166, GSMSendSMSbuffAux
1060:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], ptrMSG);
 2705              		.loc 1 1060 0
 2706 00aa 039A     		ldr	r2, [sp, #12]	@ tmp167, ptrMSG
 2707 00ac 444B     		ldr	r3, .L190+12	@ tmp168,
 2708 00ae 1100     		movs	r1, r2	@, tmp167
 2709 00b0 1800     		movs	r0, r3	@, tmp168
 2710 00b2 FFF7FEFF 		bl	strcat	@
1061:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], "\032");
 2711              		.loc 1 1061 0
 2712 00b6 424B     		ldr	r3, .L190+12	@ tmp169,
 2713 00b8 1800     		movs	r0, r3	@, tmp169
 2714 00ba FFF7FEFF 		bl	strlen	@
 2715 00be 0300     		movs	r3, r0	@ tmp170,
 2716 00c0 1A00     		movs	r2, r3	@ D.7806, tmp171
 2717 00c2 3F4B     		ldr	r3, .L190+12	@ tmp172,
 2718 00c4 D218     		adds	r2, r2, r3	@ D.7807, D.7806, tmp172
 2719 00c6 424B     		ldr	r3, .L190+28	@ tmp173,
 2720 00c8 1000     		movs	r0, r2	@ tmp174, D.7807
 2721 00ca 1900     		movs	r1, r3	@ tmp175, tmp173
 2722 00cc 0223     		movs	r3, #2	@ tmp176,
 2723 00ce 1A00     		movs	r2, r3	@, tmp176
 2724 00d0 FFF7FEFF 		bl	memcpy	@
1062:src/sim900_800.c **** 				GSMSendSMSState++;
 2725              		.loc 1 1062 0
 2726 00d4 374B     		ldr	r3, .L190	@ tmp179,
 2727 00d6 1B78     		ldrb	r3, [r3]	@ D.7804, GSMSendSMSState
ARM GAS  /tmp/ccCNyPsy.s 			page 69


 2728 00d8 0133     		adds	r3, r3, #1	@ tmp180,
 2729 00da DAB2     		uxtb	r2, r3	@ D.7804, tmp180
 2730 00dc 354B     		ldr	r3, .L190	@ tmp181,
 2731 00de 1A70     		strb	r2, [r3]	@ tmp182, GSMSendSMSState
 2732              	.L177:
1063:src/sim900_800.c **** 			}
1064:src/sim900_800.c **** 
1065:src/sim900_800.c **** 			if (i > 2)
 2733              		.loc 1 1065 0
 2734 00e0 1723     		movs	r3, #23	@ tmp183,
 2735 00e2 6B44     		add	r3, r3, sp	@ tmp183,
 2736 00e4 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2737 00e6 022B     		cmp	r3, #2	@ tmp184,
 2738 00e8 52D9     		bls	.L188	@,
1066:src/sim900_800.c **** 			{
1067:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2739              		.loc 1 1067 0
 2740 00ea 324B     		ldr	r3, .L190	@ tmp185,
 2741 00ec 0022     		movs	r2, #0	@ tmp186,
 2742 00ee 1A70     		strb	r2, [r3]	@ tmp187, GSMSendSMSState
1068:src/sim900_800.c **** 				return 3;
 2743              		.loc 1 1068 0
 2744 00f0 0323     		movs	r3, #3	@ D.7804,
 2745 00f2 5BE0     		b	.L179	@
 2746              	.L174:
1069:src/sim900_800.c **** 			}
1070:src/sim900_800.c **** 			break;
1071:src/sim900_800.c **** 		case 2:
1072:src/sim900_800.c **** 
1073:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 80, 1, &GSMbuffRtaCommand[0]);
 2747              		.loc 1 1073 0
 2748 00f4 1724     		movs	r4, #23	@ tmp188,
 2749 00f6 6C44     		add	r4, r4, sp	@ tmp188,
 2750 00f8 344B     		ldr	r3, .L190+24	@ tmp189,
 2751 00fa 3148     		ldr	r0, .L190+12	@ tmp190,
 2752 00fc 0122     		movs	r2, #1	@,
 2753 00fe 5021     		movs	r1, #80	@,
 2754 0100 FFF7FEFF 		bl	GSMSendCommand	@
 2755 0104 0300     		movs	r3, r0	@ tmp191,
 2756 0106 2370     		strb	r3, [r4]	@ tmp193, i
1074:src/sim900_800.c **** 
1075:src/sim900_800.c **** 			if (i == 2)
 2757              		.loc 1 1075 0
 2758 0108 1723     		movs	r3, #23	@ tmp194,
 2759 010a 6B44     		add	r3, r3, sp	@ tmp194,
 2760 010c 1B78     		ldrb	r3, [r3]	@ tmp195, i
 2761 010e 022B     		cmp	r3, #2	@ tmp195,
 2762 0110 04D1     		bne	.L180	@,
1076:src/sim900_800.c **** 			{
1077:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2763              		.loc 1 1077 0
 2764 0112 284B     		ldr	r3, .L190	@ tmp196,
 2765 0114 0022     		movs	r2, #0	@ tmp197,
 2766 0116 1A70     		strb	r2, [r3]	@ tmp198, GSMSendSMSState
1078:src/sim900_800.c **** 				return 2;
 2767              		.loc 1 1078 0
 2768 0118 0223     		movs	r3, #2	@ D.7804,
ARM GAS  /tmp/ccCNyPsy.s 			page 70


 2769 011a 47E0     		b	.L179	@
 2770              	.L180:
1079:src/sim900_800.c **** 			}
1080:src/sim900_800.c **** 
1081:src/sim900_800.c **** 			if (i > 2)
 2771              		.loc 1 1081 0
 2772 011c 1723     		movs	r3, #23	@ tmp199,
 2773 011e 6B44     		add	r3, r3, sp	@ tmp199,
 2774 0120 1B78     		ldrb	r3, [r3]	@ tmp200, i
 2775 0122 022B     		cmp	r3, #2	@ tmp200,
 2776 0124 36D9     		bls	.L189	@,
1082:src/sim900_800.c **** 			{
1083:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2777              		.loc 1 1083 0
 2778 0126 234B     		ldr	r3, .L190	@ tmp201,
 2779 0128 0022     		movs	r2, #0	@ tmp202,
 2780 012a 1A70     		strb	r2, [r3]	@ tmp203, GSMSendSMSState
1084:src/sim900_800.c **** 				return 3;
 2781              		.loc 1 1084 0
 2782 012c 0323     		movs	r3, #3	@ D.7804,
 2783 012e 3DE0     		b	.L179	@
 2784              	.L175:
1085:src/sim900_800.c **** 			}
1086:src/sim900_800.c **** 			break;
1087:src/sim900_800.c **** 		case 3:
1088:src/sim900_800.c **** 
1089:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 2785              		.loc 1 1089 0
 2786 0130 6B46     		mov	r3, sp	@ tmp245,
 2787 0132 0533     		adds	r3, r3, #5	@ tmp204,
 2788 0134 1B78     		ldrb	r3, [r3]	@ tmp205, sim
 2789 0136 012B     		cmp	r3, #1	@ tmp205,
 2790 0138 04D0     		beq	.L182	@,
 2791              		.loc 1 1089 0 is_stmt 0 discriminator 1
 2792 013a 6B46     		mov	r3, sp	@ tmp246,
 2793 013c 0533     		adds	r3, r3, #5	@ tmp206,
 2794 013e 1B78     		ldrb	r3, [r3]	@ tmp207, sim
 2795 0140 022B     		cmp	r3, #2	@ tmp207,
 2796 0142 1BD1     		bne	.L183	@,
 2797              	.L182:
1090:src/sim900_800.c **** 			{
1091:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 2798              		.loc 1 1091 0 is_stmt 1
 2799 0144 1724     		movs	r4, #23	@ tmp208,
 2800 0146 6C44     		add	r4, r4, sp	@ tmp208,
 2801 0148 6B46     		mov	r3, sp	@ tmp248,
 2802 014a 0533     		adds	r3, r3, #5	@ tmp209,
 2803 014c 1B78     		ldrb	r3, [r3]	@ tmp210, sim
 2804 014e 1800     		movs	r0, r3	@, tmp210
 2805 0150 FFF7FEFF 		bl	GSM_SetSIM	@
 2806 0154 0300     		movs	r3, r0	@ tmp211,
 2807 0156 2370     		strb	r3, [r4]	@ tmp213, i
1092:src/sim900_800.c **** 
1093:src/sim900_800.c **** 				if (i == 2)
 2808              		.loc 1 1093 0
 2809 0158 1723     		movs	r3, #23	@ tmp214,
 2810 015a 6B44     		add	r3, r3, sp	@ tmp214,
ARM GAS  /tmp/ccCNyPsy.s 			page 71


 2811 015c 1B78     		ldrb	r3, [r3]	@ tmp215, i
 2812 015e 022B     		cmp	r3, #2	@ tmp215,
 2813 0160 02D1     		bne	.L184	@,
1094:src/sim900_800.c **** 				{
1095:src/sim900_800.c **** 					GSMSendSMSState = 1;
 2814              		.loc 1 1095 0
 2815 0162 144B     		ldr	r3, .L190	@ tmp216,
 2816 0164 0122     		movs	r2, #1	@ tmp217,
 2817 0166 1A70     		strb	r2, [r3]	@ tmp218, GSMSendSMSState
 2818              	.L184:
1096:src/sim900_800.c **** 				}
1097:src/sim900_800.c **** 
1098:src/sim900_800.c **** 				if (i>2)
 2819              		.loc 1 1098 0
 2820 0168 1723     		movs	r3, #23	@ tmp219,
 2821 016a 6B44     		add	r3, r3, sp	@ tmp219,
 2822 016c 1B78     		ldrb	r3, [r3]	@ tmp220, i
 2823 016e 022B     		cmp	r3, #2	@ tmp220,
 2824 0170 09D9     		bls	.L186	@,
1099:src/sim900_800.c **** 				{
1100:src/sim900_800.c **** 					GSMSendSMSState = 0;
 2825              		.loc 1 1100 0
 2826 0172 104B     		ldr	r3, .L190	@ tmp221,
 2827 0174 0022     		movs	r2, #0	@ tmp222,
 2828 0176 1A70     		strb	r2, [r3]	@ tmp223, GSMSendSMSState
1101:src/sim900_800.c **** 					return 3;
 2829              		.loc 1 1101 0
 2830 0178 0323     		movs	r3, #3	@ D.7804,
 2831 017a 17E0     		b	.L179	@
 2832              	.L183:
1102:src/sim900_800.c **** 				}
1103:src/sim900_800.c **** 			}
1104:src/sim900_800.c **** 			else
1105:src/sim900_800.c **** 			{
1106:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2833              		.loc 1 1106 0
 2834 017c 0D4B     		ldr	r3, .L190	@ tmp224,
 2835 017e 0022     		movs	r2, #0	@ tmp225,
 2836 0180 1A70     		strb	r2, [r3]	@ tmp226, GSMSendSMSState
1107:src/sim900_800.c **** 				return 3;
 2837              		.loc 1 1107 0
 2838 0182 0323     		movs	r3, #3	@ D.7804,
 2839 0184 12E0     		b	.L179	@
 2840              	.L186:
1108:src/sim900_800.c **** 			}
1109:src/sim900_800.c **** 			break;
 2841              		.loc 1 1109 0 discriminator 1
 2842 0186 06E0     		b	.L176	@
 2843              	.L170:
1110:src/sim900_800.c **** 
1111:src/sim900_800.c **** 		default:
1112:src/sim900_800.c **** 			GSMSendSMSState = 0;
 2844              		.loc 1 1112 0
 2845 0188 0A4B     		ldr	r3, .L190	@ tmp227,
 2846 018a 0022     		movs	r2, #0	@ tmp228,
 2847 018c 1A70     		strb	r2, [r3]	@ tmp229, GSMSendSMSState
1113:src/sim900_800.c **** 			break;
ARM GAS  /tmp/ccCNyPsy.s 			page 72


 2848              		.loc 1 1113 0
 2849 018e 02E0     		b	.L176	@
 2850              	.L188:
1070:src/sim900_800.c **** 		case 2:
 2851              		.loc 1 1070 0
 2852 0190 C046     		nop
 2853 0192 00E0     		b	.L176	@
 2854              	.L189:
1086:src/sim900_800.c **** 		case 3:
 2855              		.loc 1 1086 0
 2856 0194 C046     		nop
 2857              	.L176:
1114:src/sim900_800.c **** 	}
1115:src/sim900_800.c **** 
1116:src/sim900_800.c **** 	if (GSMSendSMSTimeOut == 0)
 2858              		.loc 1 1116 0
 2859 0196 094B     		ldr	r3, .L190+8	@ tmp230,
 2860 0198 1B88     		ldrh	r3, [r3]	@ tmp231, GSMSendSMSTimeOut
 2861 019a 9BB2     		uxth	r3, r3	@ D.7808, tmp231
 2862 019c 002B     		cmp	r3, #0	@ D.7808,
 2863 019e 04D1     		bne	.L187	@,
1117:src/sim900_800.c **** 	{
1118:src/sim900_800.c **** 		GSMSendSMSState = 0;
 2864              		.loc 1 1118 0
 2865 01a0 044B     		ldr	r3, .L190	@ tmp232,
 2866 01a2 0022     		movs	r2, #0	@ tmp233,
 2867 01a4 1A70     		strb	r2, [r3]	@ tmp234, GSMSendSMSState
1119:src/sim900_800.c **** 		return 4;
 2868              		.loc 1 1119 0
 2869 01a6 0423     		movs	r3, #4	@ D.7804,
 2870 01a8 00E0     		b	.L179	@
 2871              	.L187:
1120:src/sim900_800.c **** 	}
1121:src/sim900_800.c **** 
1122:src/sim900_800.c **** 	return 1;
 2872              		.loc 1 1122 0
 2873 01aa 0123     		movs	r3, #1	@ D.7804,
 2874              	.L179:
1123:src/sim900_800.c **** }
 2875              		.loc 1 1123 0
 2876 01ac 1800     		movs	r0, r3	@, <retval>
 2877 01ae 06B0     		add	sp, sp, #24	@,,
 2878              		@ sp needed	@
 2879 01b0 10BD     		pop	{r4, pc}
 2880              	.L191:
 2881 01b2 C046     		.align	2
 2882              	.L190:
 2883 01b4 00000000 		.word	GSMSendSMSState
 2884 01b8 00000000 		.word	GSMSendSMSFlag
 2885 01bc 00000000 		.word	GSMSendSMSTimeOut
 2886 01c0 00000000 		.word	GSMSendSMSbuffAux
 2887 01c4 E0000000 		.word	.LC89
 2888 01c8 EC000000 		.word	.LC91
 2889 01cc 00000000 		.word	GSMbuffRtaCommand
 2890 01d0 F0000000 		.word	.LC94
 2891              		.cfi_endproc
 2892              	.LFE28:
ARM GAS  /tmp/ccCNyPsy.s 			page 73


 2893              		.size	GSMSendSMS, .-GSMSendSMS
 2894              		.section	.rodata
 2895 00f2 0000     		.align	2
 2896              	.LC101:
 2897 00f4 3030303A 		.ascii	"000: KAL,123456,100\015\012\000"
 2897      204B414C 
 2897      2C313233 
 2897      3435362C 
 2897      3130300D 
 2898 010a 0000     		.align	2
 2899              	.LC103:
 2900 010c 41542B43 		.ascii	"AT+CIPSTATUS\015\012\000"
 2900      49505354 
 2900      41545553 
 2900      0D0A00
 2901 011b 00       		.align	2
 2902              	.LC111:
 2903 011c 41542B43 		.ascii	"AT+CIPSTART=\"TCP\",\"\000"
 2903      49505354 
 2903      4152543D 
 2903      22544350 
 2903      222C2200 
 2904              		.align	2
 2905              	.LC113:
 2906 0130 222C2200 		.ascii	"\",\"\000"
 2907              		.align	2
 2908              	.LC119:
 2909 0134 434F4E4E 		.ascii	"CONNECTED\000"
 2909      45435445 
 2909      4400
 2910 013e 0000     		.align	2
 2911              	.LC121:
 2912 0140 50445020 		.ascii	"PDP DEACT\000"
 2912      44454143 
 2912      5400
 2913 014a 0000     		.align	2
 2914              	.LC123:
 2915 014c 41542B43 		.ascii	"AT+CPIN?\015\012\000"
 2915      50494E3F 
 2915      0D0A00
 2916 0157 00       		.align	2
 2917              	.LC125:
 2918 0158 2B435049 		.ascii	"+CPIN: READY\000"
 2918      4E3A2052 
 2918      45414459 
 2918      00
 2919 0165 000000   		.align	2
 2920              	.LC127:
 2921 0168 2B435049 		.ascii	"+CPINDS: READY\000"
 2921      4E44533A 
 2921      20524541 
 2921      445900
 2922 0177 00       		.align	2
 2923              	.LC129:
 2924 0178 41542B43 		.ascii	"AT+CREG?\015\012\000"
 2924      5245473F 
 2924      0D0A00
ARM GAS  /tmp/ccCNyPsy.s 			page 74


 2925 0183 00       		.align	2
 2926              	.LC131:
 2927 0184 2B435245 		.ascii	"+CREG: 0,1\000"
 2927      473A2030 
 2927      2C3100
 2928 018f 00       		.align	2
 2929              	.LC133:
 2930 0190 41542B43 		.ascii	"AT+CSQ\015\012\000"
 2930      53510D0A 
 2930      00
 2931 0199 000000   		.align	2
 2932              	.LC135:
 2933 019c 2B435351 		.ascii	"+CSQ:\000"
 2933      3A00
 2934 01a2 0000     		.align	2
 2935              	.LC138:
 2936 01a4 41542B43 		.ascii	"AT+CIPMODE=1\015\012\000"
 2936      49504D4F 
 2936      44453D31 
 2936      0D0A00
 2937 01b3 00       		.align	2
 2938              	.LC140:
 2939 01b4 41542B43 		.ascii	"AT+CGATT?\015\012\000"
 2939      47415454 
 2939      3F0D0A00 
 2940              		.align	2
 2941              	.LC142:
 2942 01c0 2B434741 		.ascii	"+CGATT:\000"
 2942      54543A00 
 2943              		.align	2
 2944              	.LC144:
 2945 01c8 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"\000"
 2945      4744434F 
 2945      4E543D31 
 2945      2C224950 
 2945      222C2200 
 2946              		.align	2
 2947              	.LC146:
 2948 01dc 41542B43 		.ascii	"AT+CSTT=\"\000"
 2948      5354543D 
 2948      2200
 2949 01e6 0000     		.align	2
 2950              	.LC148:
 2951 01e8 41542B43 		.ascii	"AT+CIICR\015\012\000"
 2951      49494352 
 2951      0D0A00
 2952 01f3 00       		.align	2
 2953              	.LC150:
 2954 01f4 41542B43 		.ascii	"AT+CIFSR\015\012\000"
 2954      49465352 
 2954      0D0A00
 2955              		.section	.text.GSMConfigGPRS,"ax",%progbits
 2956              		.align	2
 2957              		.global	GSMConfigGPRS
 2958              		.code	16
 2959              		.thumb_func
 2960              		.type	GSMConfigGPRS, %function
ARM GAS  /tmp/ccCNyPsy.s 			page 75


 2961              	GSMConfigGPRS:
 2962              	.LFB29:
1124:src/sim900_800.c **** 
1125:src/sim900_800.c **** //-----------------------------------------------------------------------//
1126:src/sim900_800.c **** //char GSMConfigGPRS (char *ptrAPN, char *ptrUSER, char *ptrKEY , unsigned char timeOut)
1127:src/sim900_800.c **** //-----------------------------------------------------------------------//
1128:src/sim900_800.c **** //char *ptrAPN "gprs.personal.com"
1129:src/sim900_800.c **** //char *ptrUSER ""
1130:src/sim900_800.c **** //char *ptrKEY  ""
1131:src/sim900_800.c **** //char *ptrIPAdd Para devolver la ip asignada.
1132:src/sim900_800.c **** //unsigned char timeOut x100mS
1133:src/sim900_800.c **** //char sim
1134:src/sim900_800.c **** //-----------------------------------------------------------------------//
1135:src/sim900_800.c **** //Wait:			1
1136:src/sim900_800.c **** //OK:			2
1137:src/sim900_800.c **** //ERR:			3
1138:src/sim900_800.c **** //TO:			4
1139:src/sim900_800.c **** //NO SIGNAL:	20
1140:src/sim900_800.c **** //-----------------------------------------------------------------------//
1141:src/sim900_800.c **** char GSMConfigGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *ptr
1142:src/sim900_800.c **** {
 2963              		.loc 1 1142 0
 2964              		.cfi_startproc
 2965 0000 10B5     		push	{r4, lr}	@
 2966              	.LCFI13:
 2967              		.cfi_def_cfa_offset 8
 2968              		.cfi_offset 4, -8
 2969              		.cfi_offset 14, -4
 2970 0002 86B0     		sub	sp, sp, #24	@,,
 2971              	.LCFI14:
 2972              		.cfi_def_cfa_offset 32
 2973 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 2974 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 2975 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 2976 000a 0F23     		movs	r3, #15	@ tmp190,
 2977 000c 6B44     		add	r3, r3, sp	@ tmp190,
 2978 000e 021C     		adds	r2, r0, #0	@ tmp191, tmp189
 2979 0010 1A70     		strb	r2, [r3]	@ tmp191, sim
1143:src/sim900_800.c **** 	unsigned char i;
1144:src/sim900_800.c **** 
1145:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 2980              		.loc 1 1145 0
 2981 0012 E14B     		ldr	r3, .L275	@ tmp192,
 2982 0014 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 2983 0016 102B     		cmp	r3, #16	@ D.7824,
 2984 0018 01D9     		bls	.LCB2274	@
 2985 001a 00F0FDFB 		bl	.L193	@far jump	@
 2986              	.LCB2274:
 2987 001e 9A00     		lsls	r2, r3, #2	@ tmp193, D.7824,
 2988 0020 DE4B     		ldr	r3, .L275+4	@ tmp195,
 2989 0022 D318     		adds	r3, r2, r3	@ tmp194, tmp193, tmp195
 2990 0024 1B68     		ldr	r3, [r3]	@ tmp196,
 2991 0026 9F46     		mov	pc, r3	@ tmp196
 2992              		.section	.rodata.GSMConfigGPRS,"a",%progbits
 2993              		.align	2
 2994              	.L195:
 2995 0000 28000000 		.word	.L194
ARM GAS  /tmp/ccCNyPsy.s 			page 76


 2996 0004 46000000 		.word	.L196
 2997 0008 88000000 		.word	.L197
 2998 000c CC000000 		.word	.L198
 2999 0010 CE020000 		.word	.L199
 3000 0014 3A030000 		.word	.L200
 3001 0018 00040000 		.word	.L201
 3002 001c 90040000 		.word	.L202
 3003 0020 D0040000 		.word	.L203
 3004 0024 76050000 		.word	.L204
 3005 0028 44060000 		.word	.L205
 3006 002c 7E060000 		.word	.L206
 3007 0030 B8060000 		.word	.L207
 3008 0034 FE060000 		.word	.L208
 3009 0038 38070000 		.word	.L209
 3010 003c 84070000 		.word	.L210
 3011 0040 DC070000 		.word	.L211
 3012              		.section	.text.GSMConfigGPRS
 3013              	.L194:
1146:src/sim900_800.c **** 	{
1147:src/sim900_800.c **** 
1148:src/sim900_800.c **** 		case 0:
1149:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 3014              		.loc 1 1149 0
 3015 0028 DD4B     		ldr	r3, .L275+8	@ tmp197,
 3016 002a 0BAA     		add	r2, sp, #44	@ tmp198,,
 3017 002c 1288     		ldrh	r2, [r2]	@ tmp199, timeOut
 3018 002e 1A80     		strh	r2, [r3]	@ tmp199, GSMConfigGPRSTimeOut
1150:src/sim900_800.c **** 			GSMConfigGPRSState++;
 3019              		.loc 1 1150 0
 3020 0030 D94B     		ldr	r3, .L275	@ tmp200,
 3021 0032 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3022 0034 0133     		adds	r3, r3, #1	@ tmp201,
 3023 0036 DAB2     		uxtb	r2, r3	@ D.7823, tmp201
 3024 0038 D74B     		ldr	r3, .L275	@ tmp202,
 3025 003a 1A70     		strb	r2, [r3]	@ tmp203, GSMConfigGPRSState
1151:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 3026              		.loc 1 1151 0
 3027 003c D94B     		ldr	r3, .L275+12	@ tmp204,
 3028 003e 0122     		movs	r2, #1	@ tmp205,
 3029 0040 1A70     		strb	r2, [r3]	@ tmp206, GSMConfigGPRSflag
1152:src/sim900_800.c **** 			break;
 3030              		.loc 1 1152 0
 3031 0042 00F008FC 		bl	.L212	@ far jump	@
 3032              	.L196:
1153:src/sim900_800.c **** 
1154:src/sim900_800.c **** 		case 1:
1155:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 20, 0, &GSMbuffRtaCommand[0]);
 3033              		.loc 1 1155 0
 3034 0046 1724     		movs	r4, #23	@ tmp207,
 3035 0048 6C44     		add	r4, r4, sp	@ tmp207,
 3036 004a D74B     		ldr	r3, .L275+16	@ tmp208,
 3037 004c D748     		ldr	r0, .L275+20	@ tmp209,
 3038 004e 0022     		movs	r2, #0	@,
 3039 0050 1421     		movs	r1, #20	@,
 3040 0052 FFF7FEFF 		bl	GSMSendCommand	@
 3041 0056 0300     		movs	r3, r0	@ tmp210,
 3042 0058 2370     		strb	r3, [r4]	@ tmp212, i
ARM GAS  /tmp/ccCNyPsy.s 			page 77


1156:src/sim900_800.c **** 
1157:src/sim900_800.c **** 			if (i == 2)
 3043              		.loc 1 1157 0
 3044 005a 1723     		movs	r3, #23	@ tmp213,
 3045 005c 6B44     		add	r3, r3, sp	@ tmp213,
 3046 005e 1B78     		ldrb	r3, [r3]	@ tmp214, i
 3047 0060 022B     		cmp	r3, #2	@ tmp214,
 3048 0062 05D1     		bne	.L213	@,
1158:src/sim900_800.c **** 			{
1159:src/sim900_800.c **** 				//Respondio ACK.
1160:src/sim900_800.c **** 				//Conectado.
1161:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3049              		.loc 1 1161 0
 3050 0064 CC4B     		ldr	r3, .L275	@ tmp215,
 3051 0066 0022     		movs	r2, #0	@ tmp216,
 3052 0068 1A70     		strb	r2, [r3]	@ tmp217, GSMConfigGPRSState
1162:src/sim900_800.c **** 				return 2;
 3053              		.loc 1 1162 0
 3054 006a 0223     		movs	r3, #2	@ D.7823,
 3055 006c 00F0FDFB 		bl	.L214	@ far jump	@
 3056              	.L213:
1163:src/sim900_800.c **** 			}
1164:src/sim900_800.c **** 
1165:src/sim900_800.c **** 			if (i > 2)
 3057              		.loc 1 1165 0
 3058 0070 1723     		movs	r3, #23	@ tmp218,
 3059 0072 6B44     		add	r3, r3, sp	@ tmp218,
 3060 0074 1B78     		ldrb	r3, [r3]	@ tmp219, i
 3061 0076 022B     		cmp	r3, #2	@ tmp219,
 3062 0078 01D8     		bhi	.LCB2329	@
 3063 007a 00F0D1FB 		bl	.L261	@far jump	@
 3064              	.LCB2329:
1166:src/sim900_800.c **** 			{
1167:src/sim900_800.c **** 				//No conectado.
1168:src/sim900_800.c **** 				//Seleccionar Sim.
1169:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
 3065              		.loc 1 1169 0
 3066 007e C64B     		ldr	r3, .L275	@ tmp220,
 3067 0080 0F22     		movs	r2, #15	@ tmp221,
 3068 0082 1A70     		strb	r2, [r3]	@ tmp222, GSMConfigGPRSState
1170:src/sim900_800.c **** 			}
1171:src/sim900_800.c **** 
1172:src/sim900_800.c **** 			break;
 3069              		.loc 1 1172 0
 3070 0084 00F0CCFB 		bl	.L261	@ far jump	@
 3071              	.L197:
1173:src/sim900_800.c **** 		case 2:
1174:src/sim900_800.c **** 
1175:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3072              		.loc 1 1175 0
 3073 0088 1724     		movs	r4, #23	@ tmp223,
 3074 008a 6C44     		add	r4, r4, sp	@ tmp223,
 3075 008c C64B     		ldr	r3, .L275+16	@ tmp224,
 3076 008e C848     		ldr	r0, .L275+24	@ tmp225,
 3077 0090 0022     		movs	r2, #0	@,
 3078 0092 3221     		movs	r1, #50	@,
 3079 0094 FFF7FEFF 		bl	GSMSendCommand	@
ARM GAS  /tmp/ccCNyPsy.s 			page 78


 3080 0098 0300     		movs	r3, r0	@ tmp226,
 3081 009a 2370     		strb	r3, [r4]	@ tmp228, i
1176:src/sim900_800.c **** 
1177:src/sim900_800.c **** 			if (i == 2)
 3082              		.loc 1 1177 0
 3083 009c 1723     		movs	r3, #23	@ tmp229,
 3084 009e 6B44     		add	r3, r3, sp	@ tmp229,
 3085 00a0 1B78     		ldrb	r3, [r3]	@ tmp230, i
 3086 00a2 022B     		cmp	r3, #2	@ tmp230,
 3087 00a4 05D1     		bne	.L216	@,
1178:src/sim900_800.c **** 			{
1179:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3088              		.loc 1 1179 0
 3089 00a6 BC4B     		ldr	r3, .L275	@ tmp231,
 3090 00a8 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3091 00aa 0133     		adds	r3, r3, #1	@ tmp232,
 3092 00ac DAB2     		uxtb	r2, r3	@ D.7823, tmp232
 3093 00ae BA4B     		ldr	r3, .L275	@ tmp233,
 3094 00b0 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
 3095              	.L216:
1180:src/sim900_800.c **** 			}
1181:src/sim900_800.c **** 
1182:src/sim900_800.c **** 			if (i > 2)
 3096              		.loc 1 1182 0
 3097 00b2 1723     		movs	r3, #23	@ tmp235,
 3098 00b4 6B44     		add	r3, r3, sp	@ tmp235,
 3099 00b6 1B78     		ldrb	r3, [r3]	@ tmp236, i
 3100 00b8 022B     		cmp	r3, #2	@ tmp236,
 3101 00ba 01D8     		bhi	.LCB2363	@
 3102 00bc 00F0B2FB 		bl	.L262	@far jump	@
 3103              	.LCB2363:
1183:src/sim900_800.c **** 			{
1184:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3104              		.loc 1 1184 0
 3105 00c0 B54B     		ldr	r3, .L275	@ tmp237,
 3106 00c2 0022     		movs	r2, #0	@ tmp238,
 3107 00c4 1A70     		strb	r2, [r3]	@ tmp239, GSMConfigGPRSState
1185:src/sim900_800.c **** 				return 3;
 3108              		.loc 1 1185 0
 3109 00c6 0323     		movs	r3, #3	@ D.7823,
 3110 00c8 00F0CFFB 		bl	.L214	@ far jump	@
 3111              	.L198:
1186:src/sim900_800.c **** 			}
1187:src/sim900_800.c **** 			break;
1188:src/sim900_800.c **** 		case 3:
1189:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 3112              		.loc 1 1189 0
 3113 00cc B54B     		ldr	r3, .L275+12	@ tmp240,
 3114 00ce 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSflag
 3115 00d0 022B     		cmp	r3, #2	@ D.7823,
 3116 00d2 01D0     		beq	.LCB2375	@
 3117 00d4 00F0A8FB 		bl	.L263	@far jump	@
 3118              	.LCB2375:
1190:src/sim900_800.c **** 			{
1191:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1192:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 3119              		.loc 1 1192 0
ARM GAS  /tmp/ccCNyPsy.s 			page 79


 3120 00d8 B649     		ldr	r1, .L275+28	@ tmp241,
 3121 00da B74B     		ldr	r3, .L275+32	@ tmp242,
 3122 00dc 0A22     		movs	r2, #10	@,
 3123 00de 1800     		movs	r0, r3	@, tmp242
 3124 00e0 FFF7FEFF 		bl	strncmp	@
 3125 00e4 031E     		subs	r3, r0, #0	@ D.7824,,
 3126 00e6 08D1     		bne	.L219	@,
1193:src/sim900_800.c **** 				{
1194:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 3127              		.loc 1 1194 0
 3128 00e8 AB4B     		ldr	r3, .L275	@ tmp243,
 3129 00ea 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3130 00ec 0133     		adds	r3, r3, #1	@ tmp244,
 3131 00ee DAB2     		uxtb	r2, r3	@ D.7823, tmp244
 3132 00f0 A94B     		ldr	r3, .L275	@ tmp245,
 3133 00f2 1A70     		strb	r2, [r3]	@ tmp246, GSMConfigGPRSState
1195:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3134              		.loc 1 1195 0
 3135 00f4 AB4B     		ldr	r3, .L275+12	@ tmp247,
 3136 00f6 0122     		movs	r2, #1	@ tmp248,
 3137 00f8 1A70     		strb	r2, [r3]	@ tmp249, GSMConfigGPRSflag
 3138              	.L219:
1196:src/sim900_800.c **** 				}
1197:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1198:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 3139              		.loc 1 1198 0
 3140 00fa B049     		ldr	r1, .L275+36	@ tmp250,
 3141 00fc AE4B     		ldr	r3, .L275+32	@ tmp251,
 3142 00fe 0822     		movs	r2, #8	@,
 3143 0100 1800     		movs	r0, r3	@, tmp251
 3144 0102 FFF7FEFF 		bl	strncmp	@
 3145 0106 031E     		subs	r3, r0, #0	@ D.7824,,
 3146 0108 08D1     		bne	.L220	@,
1199:src/sim900_800.c **** 				{
1200:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 3147              		.loc 1 1200 0
 3148 010a A34B     		ldr	r3, .L275	@ tmp252,
 3149 010c 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3150 010e 0833     		adds	r3, r3, #8	@ tmp253,
 3151 0110 DAB2     		uxtb	r2, r3	@ D.7823, tmp253
 3152 0112 A14B     		ldr	r3, .L275	@ tmp254,
 3153 0114 1A70     		strb	r2, [r3]	@ tmp255, GSMConfigGPRSState
1201:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3154              		.loc 1 1201 0
 3155 0116 A34B     		ldr	r3, .L275+12	@ tmp256,
 3156 0118 0122     		movs	r2, #1	@ tmp257,
 3157 011a 1A70     		strb	r2, [r3]	@ tmp258, GSMConfigGPRSflag
 3158              	.L220:
1202:src/sim900_800.c **** 				}
1203:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
1204:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 3159              		.loc 1 1204 0
 3160 011c A849     		ldr	r1, .L275+40	@ tmp259,
 3161 011e A64B     		ldr	r3, .L275+32	@ tmp260,
 3162 0120 0A22     		movs	r2, #10	@,
 3163 0122 1800     		movs	r0, r3	@, tmp260
 3164 0124 FFF7FEFF 		bl	strncmp	@
ARM GAS  /tmp/ccCNyPsy.s 			page 80


 3165 0128 031E     		subs	r3, r0, #0	@ D.7824,,
 3166 012a 08D1     		bne	.L221	@,
1205:src/sim900_800.c **** 				{
1206:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 3167              		.loc 1 1206 0
 3168 012c 9A4B     		ldr	r3, .L275	@ tmp261,
 3169 012e 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3170 0130 0933     		adds	r3, r3, #9	@ tmp262,
 3171 0132 DAB2     		uxtb	r2, r3	@ D.7823, tmp262
 3172 0134 984B     		ldr	r3, .L275	@ tmp263,
 3173 0136 1A70     		strb	r2, [r3]	@ tmp264, GSMConfigGPRSState
1207:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3174              		.loc 1 1207 0
 3175 0138 9A4B     		ldr	r3, .L275+12	@ tmp265,
 3176 013a 0122     		movs	r2, #1	@ tmp266,
 3177 013c 1A70     		strb	r2, [r3]	@ tmp267, GSMConfigGPRSflag
 3178              	.L221:
1208:src/sim900_800.c **** 				}
1209:src/sim900_800.c **** 
1210:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
1211:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 3179              		.loc 1 1211 0
 3180 013e A149     		ldr	r1, .L275+44	@ tmp268,
 3181 0140 9D4B     		ldr	r3, .L275+32	@ tmp269,
 3182 0142 0922     		movs	r2, #9	@,
 3183 0144 1800     		movs	r0, r3	@, tmp269
 3184 0146 FFF7FEFF 		bl	strncmp	@
 3185 014a 031E     		subs	r3, r0, #0	@ D.7824,,
 3186 014c 3AD1     		bne	.L222	@,
1212:src/sim900_800.c **** 				{
1213:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3187              		.loc 1 1213 0
 3188 014e 924B     		ldr	r3, .L275	@ tmp270,
 3189 0150 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3190 0152 0A33     		adds	r3, r3, #10	@ tmp271,
 3191 0154 DAB2     		uxtb	r2, r3	@ D.7823, tmp271
 3192 0156 904B     		ldr	r3, .L275	@ tmp272,
 3193 0158 1A70     		strb	r2, [r3]	@ tmp273, GSMConfigGPRSState
1214:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3194              		.loc 1 1214 0
 3195 015a 9B4A     		ldr	r2, .L275+48	@ tmp274,
 3196 015c 9B4B     		ldr	r3, .L275+52	@ tmp275,
 3197 015e 1000     		movs	r0, r2	@ tmp276, tmp274
 3198 0160 1900     		movs	r1, r3	@ tmp277, tmp275
 3199 0162 1423     		movs	r3, #20	@ tmp278,
 3200 0164 1A00     		movs	r2, r3	@, tmp278
 3201 0166 FFF7FEFF 		bl	memcpy	@
1215:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3202              		.loc 1 1215 0
 3203 016a 099A     		ldr	r2, [sp, #36]	@ tmp281, ptrIPremote
 3204 016c 964B     		ldr	r3, .L275+48	@ tmp282,
 3205 016e 1100     		movs	r1, r2	@, tmp281
 3206 0170 1800     		movs	r0, r3	@, tmp282
 3207 0172 FFF7FEFF 		bl	strcat	@
1216:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3208              		.loc 1 1216 0
 3209 0176 944B     		ldr	r3, .L275+48	@ tmp283,
ARM GAS  /tmp/ccCNyPsy.s 			page 81


 3210 0178 1800     		movs	r0, r3	@, tmp283
 3211 017a FFF7FEFF 		bl	strlen	@
 3212 017e 0300     		movs	r3, r0	@ tmp284,
 3213 0180 1A00     		movs	r2, r3	@ D.7825, tmp285
 3214 0182 914B     		ldr	r3, .L275+48	@ tmp286,
 3215 0184 D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp286
 3216 0186 924B     		ldr	r3, .L275+56	@ tmp287,
 3217 0188 1000     		movs	r0, r2	@ tmp288, D.7826
 3218 018a 1900     		movs	r1, r3	@ tmp289, tmp287
 3219 018c 0423     		movs	r3, #4	@ tmp290,
 3220 018e 1A00     		movs	r2, r3	@, tmp290
 3221 0190 FFF7FEFF 		bl	memcpy	@
1217:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3222              		.loc 1 1217 0
 3223 0194 0A9A     		ldr	r2, [sp, #40]	@ tmp293, ptrPORTremote
 3224 0196 8C4B     		ldr	r3, .L275+48	@ tmp294,
 3225 0198 1100     		movs	r1, r2	@, tmp293
 3226 019a 1800     		movs	r0, r3	@, tmp294
 3227 019c FFF7FEFF 		bl	strcat	@
1218:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3228              		.loc 1 1218 0
 3229 01a0 894B     		ldr	r3, .L275+48	@ tmp295,
 3230 01a2 1800     		movs	r0, r3	@, tmp295
 3231 01a4 FFF7FEFF 		bl	strlen	@
 3232 01a8 0300     		movs	r3, r0	@ tmp296,
 3233 01aa 1A00     		movs	r2, r3	@ D.7825, tmp297
 3234 01ac 864B     		ldr	r3, .L275+48	@ tmp298,
 3235 01ae D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp298
 3236 01b0 884B     		ldr	r3, .L275+60	@ tmp299,
 3237 01b2 1000     		movs	r0, r2	@ tmp300, D.7826
 3238 01b4 1900     		movs	r1, r3	@ tmp301, tmp299
 3239 01b6 0423     		movs	r3, #4	@ tmp302,
 3240 01b8 1A00     		movs	r2, r3	@, tmp302
 3241 01ba FFF7FEFF 		bl	memcpy	@
1219:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3242              		.loc 1 1219 0
 3243 01be 794B     		ldr	r3, .L275+12	@ tmp305,
 3244 01c0 0122     		movs	r2, #1	@ tmp306,
 3245 01c2 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSflag
 3246              	.L222:
1220:src/sim900_800.c **** 				}
1221:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
1222:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 3247              		.loc 1 1222 0
 3248 01c4 8449     		ldr	r1, .L275+64	@ tmp308,
 3249 01c6 7C4B     		ldr	r3, .L275+32	@ tmp309,
 3250 01c8 0E22     		movs	r2, #14	@,
 3251 01ca 1800     		movs	r0, r3	@, tmp309
 3252 01cc FFF7FEFF 		bl	strncmp	@
 3253 01d0 031E     		subs	r3, r0, #0	@ D.7824,,
 3254 01d2 08D1     		bne	.L223	@,
1223:src/sim900_800.c **** 				{
1224:src/sim900_800.c **** 					GSMConfigGPRSState -= 1;
 3255              		.loc 1 1224 0
 3256 01d4 704B     		ldr	r3, .L275	@ tmp310,
 3257 01d6 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3258 01d8 013B     		subs	r3, r3, #1	@ tmp311,
ARM GAS  /tmp/ccCNyPsy.s 			page 82


 3259 01da DAB2     		uxtb	r2, r3	@ D.7823, tmp311
 3260 01dc 6E4B     		ldr	r3, .L275	@ tmp312,
 3261 01de 1A70     		strb	r2, [r3]	@ tmp313, GSMConfigGPRSState
1225:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3262              		.loc 1 1225 0
 3263 01e0 704B     		ldr	r3, .L275+12	@ tmp314,
 3264 01e2 0122     		movs	r2, #1	@ tmp315,
 3265 01e4 1A70     		strb	r2, [r3]	@ tmp316, GSMConfigGPRSflag
 3266              	.L223:
1226:src/sim900_800.c **** 				}
1227:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
1228:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 3267              		.loc 1 1228 0
 3268 01e6 7D49     		ldr	r1, .L275+68	@ tmp317,
 3269 01e8 734B     		ldr	r3, .L275+32	@ tmp318,
 3270 01ea 0A22     		movs	r2, #10	@,
 3271 01ec 1800     		movs	r0, r3	@, tmp318
 3272 01ee FFF7FEFF 		bl	strncmp	@
 3273 01f2 031E     		subs	r3, r0, #0	@ D.7824,,
 3274 01f4 04D1     		bne	.L224	@,
1229:src/sim900_800.c **** 				{
1230:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3275              		.loc 1 1230 0
 3276 01f6 684B     		ldr	r3, .L275	@ tmp319,
 3277 01f8 0022     		movs	r2, #0	@ tmp320,
 3278 01fa 1A70     		strb	r2, [r3]	@ tmp321, GSMConfigGPRSState
1231:src/sim900_800.c **** 					return 2;
 3279              		.loc 1 1231 0
 3280 01fc 0223     		movs	r3, #2	@ D.7823,
 3281 01fe 34E3     		b	.L214	@
 3282              	.L224:
1232:src/sim900_800.c **** 				}
1233:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
1234:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
1235:src/sim900_800.c **** 				{
1236:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
1237:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
1238:src/sim900_800.c **** 				}
1239:src/sim900_800.c **** */
1240:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
1241:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 3283              		.loc 1 1241 0
 3284 0200 7749     		ldr	r1, .L275+72	@ tmp322,
 3285 0202 6D4B     		ldr	r3, .L275+32	@ tmp323,
 3286 0204 0A22     		movs	r2, #10	@,
 3287 0206 1800     		movs	r0, r3	@, tmp323
 3288 0208 FFF7FEFF 		bl	strncmp	@
 3289 020c 031E     		subs	r3, r0, #0	@ D.7824,,
 3290 020e 3AD1     		bne	.L225	@,
1242:src/sim900_800.c **** 				{
1243:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3291              		.loc 1 1243 0
 3292 0210 614B     		ldr	r3, .L275	@ tmp324,
 3293 0212 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3294 0214 0A33     		adds	r3, r3, #10	@ tmp325,
 3295 0216 DAB2     		uxtb	r2, r3	@ D.7823, tmp325
 3296 0218 5F4B     		ldr	r3, .L275	@ tmp326,
ARM GAS  /tmp/ccCNyPsy.s 			page 83


 3297 021a 1A70     		strb	r2, [r3]	@ tmp327, GSMConfigGPRSState
1244:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3298              		.loc 1 1244 0
 3299 021c 6A4A     		ldr	r2, .L275+48	@ tmp328,
 3300 021e 6B4B     		ldr	r3, .L275+52	@ tmp329,
 3301 0220 1000     		movs	r0, r2	@ tmp330, tmp328
 3302 0222 1900     		movs	r1, r3	@ tmp331, tmp329
 3303 0224 1423     		movs	r3, #20	@ tmp332,
 3304 0226 1A00     		movs	r2, r3	@, tmp332
 3305 0228 FFF7FEFF 		bl	memcpy	@
1245:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3306              		.loc 1 1245 0
 3307 022c 099A     		ldr	r2, [sp, #36]	@ tmp335, ptrIPremote
 3308 022e 664B     		ldr	r3, .L275+48	@ tmp336,
 3309 0230 1100     		movs	r1, r2	@, tmp335
 3310 0232 1800     		movs	r0, r3	@, tmp336
 3311 0234 FFF7FEFF 		bl	strcat	@
1246:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3312              		.loc 1 1246 0
 3313 0238 634B     		ldr	r3, .L275+48	@ tmp337,
 3314 023a 1800     		movs	r0, r3	@, tmp337
 3315 023c FFF7FEFF 		bl	strlen	@
 3316 0240 0300     		movs	r3, r0	@ tmp338,
 3317 0242 1A00     		movs	r2, r3	@ D.7825, tmp339
 3318 0244 604B     		ldr	r3, .L275+48	@ tmp340,
 3319 0246 D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp340
 3320 0248 614B     		ldr	r3, .L275+56	@ tmp341,
 3321 024a 1000     		movs	r0, r2	@ tmp342, D.7826
 3322 024c 1900     		movs	r1, r3	@ tmp343, tmp341
 3323 024e 0423     		movs	r3, #4	@ tmp344,
 3324 0250 1A00     		movs	r2, r3	@, tmp344
 3325 0252 FFF7FEFF 		bl	memcpy	@
1247:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3326              		.loc 1 1247 0
 3327 0256 0A9A     		ldr	r2, [sp, #40]	@ tmp347, ptrPORTremote
 3328 0258 5B4B     		ldr	r3, .L275+48	@ tmp348,
 3329 025a 1100     		movs	r1, r2	@, tmp347
 3330 025c 1800     		movs	r0, r3	@, tmp348
 3331 025e FFF7FEFF 		bl	strcat	@
1248:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3332              		.loc 1 1248 0
 3333 0262 594B     		ldr	r3, .L275+48	@ tmp349,
 3334 0264 1800     		movs	r0, r3	@, tmp349
 3335 0266 FFF7FEFF 		bl	strlen	@
 3336 026a 0300     		movs	r3, r0	@ tmp350,
 3337 026c 1A00     		movs	r2, r3	@ D.7825, tmp351
 3338 026e 564B     		ldr	r3, .L275+48	@ tmp352,
 3339 0270 D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp352
 3340 0272 584B     		ldr	r3, .L275+60	@ tmp353,
 3341 0274 1000     		movs	r0, r2	@ tmp354, D.7826
 3342 0276 1900     		movs	r1, r3	@ tmp355, tmp353
 3343 0278 0423     		movs	r3, #4	@ tmp356,
 3344 027a 1A00     		movs	r2, r3	@, tmp356
 3345 027c FFF7FEFF 		bl	memcpy	@
1249:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3346              		.loc 1 1249 0
 3347 0280 484B     		ldr	r3, .L275+12	@ tmp359,
ARM GAS  /tmp/ccCNyPsy.s 			page 84


 3348 0282 0122     		movs	r2, #1	@ tmp360,
 3349 0284 1A70     		strb	r2, [r3]	@ tmp361, GSMConfigGPRSflag
 3350              	.L225:
1250:src/sim900_800.c **** 				}
1251:src/sim900_800.c **** 
1252:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 3351              		.loc 1 1252 0
 3352 0286 5749     		ldr	r1, .L275+76	@ tmp362,
 3353 0288 4B4B     		ldr	r3, .L275+32	@ tmp363,
 3354 028a 0922     		movs	r2, #9	@,
 3355 028c 1800     		movs	r0, r3	@, tmp363
 3356 028e FFF7FEFF 		bl	strncmp	@
 3357 0292 031E     		subs	r3, r0, #0	@ D.7824,,
 3358 0294 08D1     		bne	.L226	@,
1253:src/sim900_800.c **** 				{
1254:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
 3359              		.loc 1 1254 0
 3360 0296 404B     		ldr	r3, .L275	@ tmp364,
 3361 0298 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3362 029a 0B33     		adds	r3, r3, #11	@ tmp365,
 3363 029c DAB2     		uxtb	r2, r3	@ D.7823, tmp365
 3364 029e 3E4B     		ldr	r3, .L275	@ tmp366,
 3365 02a0 1A70     		strb	r2, [r3]	@ tmp367, GSMConfigGPRSState
1255:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3366              		.loc 1 1255 0
 3367 02a2 404B     		ldr	r3, .L275+12	@ tmp368,
 3368 02a4 0122     		movs	r2, #1	@ tmp369,
 3369 02a6 1A70     		strb	r2, [r3]	@ tmp370, GSMConfigGPRSflag
 3370              	.L226:
1256:src/sim900_800.c **** 				}
1257:src/sim900_800.c **** 
1258:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 3371              		.loc 1 1258 0
 3372 02a8 4F49     		ldr	r1, .L275+80	@ tmp371,
 3373 02aa 434B     		ldr	r3, .L275+32	@ tmp372,
 3374 02ac 0922     		movs	r2, #9	@,
 3375 02ae 1800     		movs	r0, r3	@, tmp372
 3376 02b0 FFF7FEFF 		bl	strncmp	@
 3377 02b4 031E     		subs	r3, r0, #0	@ D.7824,,
 3378 02b6 00D0     		beq	.LCB2618	@
 3379 02b8 B6E2     		b	.L263	@long jump	@
 3380              	.LCB2618:
1259:src/sim900_800.c **** 				{
1260:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 3381              		.loc 1 1260 0
 3382 02ba 374B     		ldr	r3, .L275	@ tmp373,
 3383 02bc 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3384 02be 0D33     		adds	r3, r3, #13	@ tmp374,
 3385 02c0 DAB2     		uxtb	r2, r3	@ D.7823, tmp374
 3386 02c2 354B     		ldr	r3, .L275	@ tmp375,
 3387 02c4 1A70     		strb	r2, [r3]	@ tmp376, GSMConfigGPRSState
1261:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3388              		.loc 1 1261 0
 3389 02c6 374B     		ldr	r3, .L275+12	@ tmp377,
 3390 02c8 0122     		movs	r2, #1	@ tmp378,
 3391 02ca 1A70     		strb	r2, [r3]	@ tmp379, GSMConfigGPRSflag
1262:src/sim900_800.c **** 				}
ARM GAS  /tmp/ccCNyPsy.s 			page 85


1263:src/sim900_800.c **** 			}
1264:src/sim900_800.c **** 			break;
 3392              		.loc 1 1264 0
 3393 02cc ACE2     		b	.L263	@
 3394              	.L199:
1265:src/sim900_800.c **** 
1266:src/sim900_800.c **** 		case 4:
1267:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3395              		.loc 1 1267 0
 3396 02ce 1724     		movs	r4, #23	@ tmp380,
 3397 02d0 6C44     		add	r4, r4, sp	@ tmp380,
 3398 02d2 354B     		ldr	r3, .L275+16	@ tmp381,
 3399 02d4 4548     		ldr	r0, .L275+84	@ tmp382,
 3400 02d6 0122     		movs	r2, #1	@,
 3401 02d8 3221     		movs	r1, #50	@,
 3402 02da FFF7FEFF 		bl	GSMSendCommand	@
 3403 02de 0300     		movs	r3, r0	@ tmp383,
 3404 02e0 2370     		strb	r3, [r4]	@ tmp385, i
1268:src/sim900_800.c **** 
1269:src/sim900_800.c **** 			if (i == 2)
 3405              		.loc 1 1269 0
 3406 02e2 1723     		movs	r3, #23	@ tmp386,
 3407 02e4 6B44     		add	r3, r3, sp	@ tmp386,
 3408 02e6 1B78     		ldrb	r3, [r3]	@ tmp387, i
 3409 02e8 022B     		cmp	r3, #2	@ tmp387,
 3410 02ea 1BD1     		bne	.L227	@,
1270:src/sim900_800.c **** 			{
1271:src/sim900_800.c **** 				if ((!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN:
 3411              		.loc 1 1271 0
 3412 02ec 4049     		ldr	r1, .L275+88	@ tmp388,
 3413 02ee 2E4B     		ldr	r3, .L275+16	@ tmp389,
 3414 02f0 0C22     		movs	r2, #12	@,
 3415 02f2 1800     		movs	r0, r3	@, tmp389
 3416 02f4 FFF7FEFF 		bl	strncmp	@
 3417 02f8 031E     		subs	r3, r0, #0	@ D.7824,,
 3418 02fa 07D0     		beq	.L228	@,
 3419              		.loc 1 1271 0 is_stmt 0 discriminator 1
 3420 02fc 3D49     		ldr	r1, .L275+92	@ tmp390,
 3421 02fe 2A4B     		ldr	r3, .L275+16	@ tmp391,
 3422 0300 0E22     		movs	r2, #14	@,
 3423 0302 1800     		movs	r0, r3	@, tmp391
 3424 0304 FFF7FEFF 		bl	strncmp	@
 3425 0308 031E     		subs	r3, r0, #0	@ D.7824,,
 3426 030a 06D1     		bne	.L229	@,
 3427              	.L228:
1272:src/sim900_800.c **** 				{
1273:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3428              		.loc 1 1273 0 is_stmt 1
 3429 030c 224B     		ldr	r3, .L275	@ tmp392,
 3430 030e 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3431 0310 0133     		adds	r3, r3, #1	@ tmp393,
 3432 0312 DAB2     		uxtb	r2, r3	@ D.7823, tmp393
 3433 0314 204B     		ldr	r3, .L275	@ tmp394,
 3434 0316 1A70     		strb	r2, [r3]	@ tmp395, GSMConfigGPRSState
 3435 0318 04E0     		b	.L227	@
 3436              	.L229:
1274:src/sim900_800.c **** 				}
ARM GAS  /tmp/ccCNyPsy.s 			page 86


1275:src/sim900_800.c **** 				else
1276:src/sim900_800.c **** 				{
1277:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3437              		.loc 1 1277 0
 3438 031a 1F4B     		ldr	r3, .L275	@ tmp396,
 3439 031c 0022     		movs	r2, #0	@ tmp397,
 3440 031e 1A70     		strb	r2, [r3]	@ tmp398, GSMConfigGPRSState
1278:src/sim900_800.c **** 					return 3;
 3441              		.loc 1 1278 0
 3442 0320 0323     		movs	r3, #3	@ D.7823,
 3443 0322 A2E2     		b	.L214	@
 3444              	.L227:
1279:src/sim900_800.c **** 				}
1280:src/sim900_800.c **** 			}
1281:src/sim900_800.c **** 
1282:src/sim900_800.c **** 			if (i > 2)
 3445              		.loc 1 1282 0
 3446 0324 1723     		movs	r3, #23	@ tmp399,
 3447 0326 6B44     		add	r3, r3, sp	@ tmp399,
 3448 0328 1B78     		ldrb	r3, [r3]	@ tmp400, i
 3449 032a 022B     		cmp	r3, #2	@ tmp400,
 3450 032c 00D8     		bhi	.LCB2685	@
 3451 032e 7DE2     		b	.L264	@long jump	@
 3452              	.LCB2685:
1283:src/sim900_800.c **** 			{
1284:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3453              		.loc 1 1284 0
 3454 0330 194B     		ldr	r3, .L275	@ tmp401,
 3455 0332 0022     		movs	r2, #0	@ tmp402,
 3456 0334 1A70     		strb	r2, [r3]	@ tmp403, GSMConfigGPRSState
1285:src/sim900_800.c **** 				return 3;
 3457              		.loc 1 1285 0
 3458 0336 0323     		movs	r3, #3	@ D.7823,
 3459 0338 97E2     		b	.L214	@
 3460              	.L200:
1286:src/sim900_800.c **** 			}
1287:src/sim900_800.c **** 			break;
1288:src/sim900_800.c **** 
1289:src/sim900_800.c **** 		case 5:
1290:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3461              		.loc 1 1290 0
 3462 033a 1724     		movs	r4, #23	@ tmp404,
 3463 033c 6C44     		add	r4, r4, sp	@ tmp404,
 3464 033e 1A4B     		ldr	r3, .L275+16	@ tmp405,
 3465 0340 2D48     		ldr	r0, .L275+96	@ tmp406,
 3466 0342 0122     		movs	r2, #1	@,
 3467 0344 3221     		movs	r1, #50	@,
 3468 0346 FFF7FEFF 		bl	GSMSendCommand	@
 3469 034a 0300     		movs	r3, r0	@ tmp407,
 3470 034c 2370     		strb	r3, [r4]	@ tmp409, i
1291:src/sim900_800.c **** 
1292:src/sim900_800.c **** 			if (i == 2)
 3471              		.loc 1 1292 0
 3472 034e 1723     		movs	r3, #23	@ tmp410,
 3473 0350 6B44     		add	r3, r3, sp	@ tmp410,
 3474 0352 1B78     		ldrb	r3, [r3]	@ tmp411, i
 3475 0354 022B     		cmp	r3, #2	@ tmp411,
ARM GAS  /tmp/ccCNyPsy.s 			page 87


 3476 0356 13D1     		bne	.L231	@,
1293:src/sim900_800.c **** 			{
1294:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 3477              		.loc 1 1294 0
 3478 0358 2849     		ldr	r1, .L275+100	@ tmp412,
 3479 035a 134B     		ldr	r3, .L275+16	@ tmp413,
 3480 035c 0A22     		movs	r2, #10	@,
 3481 035e 1800     		movs	r0, r3	@, tmp413
 3482 0360 FFF7FEFF 		bl	strncmp	@
 3483 0364 031E     		subs	r3, r0, #0	@ D.7824,,
 3484 0366 06D1     		bne	.L232	@,
1295:src/sim900_800.c **** 				{
1296:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3485              		.loc 1 1296 0
 3486 0368 0B4B     		ldr	r3, .L275	@ tmp414,
 3487 036a 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3488 036c 0133     		adds	r3, r3, #1	@ tmp415,
 3489 036e DAB2     		uxtb	r2, r3	@ D.7823, tmp415
 3490 0370 094B     		ldr	r3, .L275	@ tmp416,
 3491 0372 1A70     		strb	r2, [r3]	@ tmp417, GSMConfigGPRSState
 3492 0374 04E0     		b	.L231	@
 3493              	.L232:
1297:src/sim900_800.c **** 				}
1298:src/sim900_800.c **** 				else
1299:src/sim900_800.c **** 				{
1300:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3494              		.loc 1 1300 0
 3495 0376 084B     		ldr	r3, .L275	@ tmp418,
 3496 0378 0022     		movs	r2, #0	@ tmp419,
 3497 037a 1A70     		strb	r2, [r3]	@ tmp420, GSMConfigGPRSState
1301:src/sim900_800.c **** 					return 3;
 3498              		.loc 1 1301 0
 3499 037c 0323     		movs	r3, #3	@ D.7823,
 3500 037e 74E2     		b	.L214	@
 3501              	.L231:
1302:src/sim900_800.c **** 				}
1303:src/sim900_800.c **** 			}
1304:src/sim900_800.c **** 
1305:src/sim900_800.c **** 			if (i > 2)
 3502              		.loc 1 1305 0
 3503 0380 1723     		movs	r3, #23	@ tmp421,
 3504 0382 6B44     		add	r3, r3, sp	@ tmp421,
 3505 0384 1B78     		ldrb	r3, [r3]	@ tmp422, i
 3506 0386 022B     		cmp	r3, #2	@ tmp422,
 3507 0388 00D8     		bhi	.LCB2738	@
 3508 038a 51E2     		b	.L265	@long jump	@
 3509              	.LCB2738:
1306:src/sim900_800.c **** 			{
1307:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3510              		.loc 1 1307 0
 3511 038c 024B     		ldr	r3, .L275	@ tmp423,
 3512 038e 0022     		movs	r2, #0	@ tmp424,
 3513 0390 1A70     		strb	r2, [r3]	@ tmp425, GSMConfigGPRSState
1308:src/sim900_800.c **** 				return 3;
 3514              		.loc 1 1308 0
 3515 0392 0323     		movs	r3, #3	@ D.7823,
 3516 0394 69E2     		b	.L214	@
ARM GAS  /tmp/ccCNyPsy.s 			page 88


 3517              	.L276:
 3518 0396 C046     		.align	2
 3519              	.L275:
 3520 0398 00000000 		.word	GSMConfigGPRSState
 3521 039c 00000000 		.word	.L195
 3522 03a0 00000000 		.word	GSMConfigGPRSTimeOut
 3523 03a4 00000000 		.word	GSMConfigGPRSflag
 3524 03a8 00000000 		.word	GSMbuffRtaCommand
 3525 03ac F4000000 		.word	.LC101
 3526 03b0 0C010000 		.word	.LC103
 3527 03b4 00000000 		.word	GSM_IPINITIAL
 3528 03b8 00000000 		.word	GSMbuffStatus
 3529 03bc 00000000 		.word	GSM_IPSTART
 3530 03c0 00000000 		.word	GSM_IPGPRSACT
 3531 03c4 00000000 		.word	GSM_IPSTATUS
 3532 03c8 00000000 		.word	GSMbuffGPRSCommand
 3533 03cc 1C010000 		.word	.LC111
 3534 03d0 30010000 		.word	.LC113
 3535 03d4 EC000000 		.word	.LC91
 3536 03d8 00000000 		.word	GSM_IPCONNECTING
 3537 03dc 00000000 		.word	GSM_IPCONNOK
 3538 03e0 00000000 		.word	GSM_IPCONNCLOSE
 3539 03e4 34010000 		.word	.LC119
 3540 03e8 40010000 		.word	.LC121
 3541 03ec 4C010000 		.word	.LC123
 3542 03f0 58010000 		.word	.LC125
 3543 03f4 68010000 		.word	.LC127
 3544 03f8 78010000 		.word	.LC129
 3545 03fc 84010000 		.word	.LC131
 3546              	.L201:
1309:src/sim900_800.c **** 			}
1310:src/sim900_800.c **** 			break;
1311:src/sim900_800.c **** 		case 6:
1312:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3547              		.loc 1 1312 0
 3548 0400 1724     		movs	r4, #23	@ tmp426,
 3549 0402 6C44     		add	r4, r4, sp	@ tmp426,
 3550 0404 CF4B     		ldr	r3, .L277	@ tmp427,
 3551 0406 D048     		ldr	r0, .L277+4	@ tmp428,
 3552 0408 0122     		movs	r2, #1	@,
 3553 040a 3221     		movs	r1, #50	@,
 3554 040c FFF7FEFF 		bl	GSMSendCommand	@
 3555 0410 0300     		movs	r3, r0	@ tmp429,
 3556 0412 2370     		strb	r3, [r4]	@ tmp431, i
1313:src/sim900_800.c **** 
1314:src/sim900_800.c **** 			if (i == 2)
 3557              		.loc 1 1314 0
 3558 0414 1723     		movs	r3, #23	@ tmp432,
 3559 0416 6B44     		add	r3, r3, sp	@ tmp432,
 3560 0418 1B78     		ldrb	r3, [r3]	@ tmp433, i
 3561 041a 022B     		cmp	r3, #2	@ tmp433,
 3562 041c 2DD1     		bne	.L234	@,
1315:src/sim900_800.c **** 			{
1316:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 3563              		.loc 1 1316 0
 3564 041e CB49     		ldr	r1, .L277+8	@ tmp434,
 3565 0420 C84B     		ldr	r3, .L277	@ tmp435,
ARM GAS  /tmp/ccCNyPsy.s 			page 89


 3566 0422 0522     		movs	r2, #5	@,
 3567 0424 1800     		movs	r0, r3	@, tmp435
 3568 0426 FFF7FEFF 		bl	strncmp	@
 3569 042a 031E     		subs	r3, r0, #0	@ D.7824,,
 3570 042c 20D1     		bne	.L235	@,
1317:src/sim900_800.c **** 				{
1318:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 3571              		.loc 1 1318 0
 3572 042e C54B     		ldr	r3, .L277	@ tmp436,
 3573 0430 9B79     		ldrb	r3, [r3, #6]	@ D.7823,
 3574 0432 303B     		subs	r3, r3, #48	@ D.7824,
 3575 0434 DBB2     		uxtb	r3, r3	@ D.7827, D.7824
 3576 0436 1A1C     		adds	r2, r3, #0	@ tmp438, tmp437
 3577 0438 9200     		lsls	r2, r2, #2	@ tmp439, tmp438,
 3578 043a D318     		adds	r3, r2, r3	@ tmp441, tmp440, tmp437
 3579 043c DB18     		adds	r3, r3, r3	@ tmp443, tmp442, tmp442
 3580 043e DAB2     		uxtb	r2, r3	@ D.7827, tmp441
 3581 0440 C04B     		ldr	r3, .L277	@ tmp444,
 3582 0442 DB79     		ldrb	r3, [r3, #7]	@ D.7823,
 3583 0444 D318     		adds	r3, r2, r3	@ tmp445, D.7827, D.7823
 3584 0446 DBB2     		uxtb	r3, r3	@ D.7827, tmp445
 3585 0448 303B     		subs	r3, r3, #48	@ tmp446,
 3586 044a DAB2     		uxtb	r2, r3	@ D.7827, tmp446
 3587 044c C04B     		ldr	r3, .L277+12	@ tmp447,
 3588 044e 1A70     		strb	r2, [r3]	@ tmp448, GPRSrssi
1319:src/sim900_800.c **** 
1320:src/sim900_800.c **** 						if (GPRSrssi != 99)
 3589              		.loc 1 1320 0
 3590 0450 BF4B     		ldr	r3, .L277+12	@ tmp449,
 3591 0452 1B78     		ldrb	r3, [r3]	@ D.7827, GPRSrssi
 3592 0454 632B     		cmp	r3, #99	@ D.7827,
 3593 0456 06D0     		beq	.L236	@,
1321:src/sim900_800.c **** 							GSMConfigGPRSState++;
 3594              		.loc 1 1321 0
 3595 0458 BE4B     		ldr	r3, .L277+16	@ tmp450,
 3596 045a 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3597 045c 0133     		adds	r3, r3, #1	@ tmp451,
 3598 045e DAB2     		uxtb	r2, r3	@ D.7823, tmp451
 3599 0460 BC4B     		ldr	r3, .L277+16	@ tmp452,
 3600 0462 1A70     		strb	r2, [r3]	@ tmp453, GSMConfigGPRSState
 3601 0464 09E0     		b	.L234	@
 3602              	.L236:
1322:src/sim900_800.c **** 						else
1323:src/sim900_800.c **** 						{
1324:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 3603              		.loc 1 1324 0
 3604 0466 BB4B     		ldr	r3, .L277+16	@ tmp454,
 3605 0468 0022     		movs	r2, #0	@ tmp455,
 3606 046a 1A70     		strb	r2, [r3]	@ tmp456, GSMConfigGPRSState
1325:src/sim900_800.c **** 							return 20;
 3607              		.loc 1 1325 0
 3608 046c 1423     		movs	r3, #20	@ D.7823,
 3609 046e FCE1     		b	.L214	@
 3610              	.L235:
1326:src/sim900_800.c **** 						}
1327:src/sim900_800.c **** 				}
1328:src/sim900_800.c **** 				else
ARM GAS  /tmp/ccCNyPsy.s 			page 90


1329:src/sim900_800.c **** 				{
1330:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3611              		.loc 1 1330 0
 3612 0470 B84B     		ldr	r3, .L277+16	@ tmp457,
 3613 0472 0022     		movs	r2, #0	@ tmp458,
 3614 0474 1A70     		strb	r2, [r3]	@ tmp459, GSMConfigGPRSState
1331:src/sim900_800.c **** 					return 3;
 3615              		.loc 1 1331 0
 3616 0476 0323     		movs	r3, #3	@ D.7823,
 3617 0478 F7E1     		b	.L214	@
 3618              	.L234:
1332:src/sim900_800.c **** 				}
1333:src/sim900_800.c **** 			}
1334:src/sim900_800.c **** 
1335:src/sim900_800.c **** 			if (i > 2)
 3619              		.loc 1 1335 0
 3620 047a 1723     		movs	r3, #23	@ tmp460,
 3621 047c 6B44     		add	r3, r3, sp	@ tmp460,
 3622 047e 1B78     		ldrb	r3, [r3]	@ tmp461, i
 3623 0480 022B     		cmp	r3, #2	@ tmp461,
 3624 0482 00D8     		bhi	.LCB2851	@
 3625 0484 D6E1     		b	.L266	@long jump	@
 3626              	.LCB2851:
1336:src/sim900_800.c **** 			{
1337:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3627              		.loc 1 1337 0
 3628 0486 B34B     		ldr	r3, .L277+16	@ tmp462,
 3629 0488 0022     		movs	r2, #0	@ tmp463,
 3630 048a 1A70     		strb	r2, [r3]	@ tmp464, GSMConfigGPRSState
1338:src/sim900_800.c **** 				return 3;
 3631              		.loc 1 1338 0
 3632 048c 0323     		movs	r3, #3	@ D.7823,
 3633 048e ECE1     		b	.L214	@
 3634              	.L202:
1339:src/sim900_800.c **** 			}
1340:src/sim900_800.c **** 			break;
1341:src/sim900_800.c **** 		case 7:
1342:src/sim900_800.c **** 
1343:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3635              		.loc 1 1343 0
 3636 0490 1724     		movs	r4, #23	@ tmp465,
 3637 0492 6C44     		add	r4, r4, sp	@ tmp465,
 3638 0494 AB4B     		ldr	r3, .L277	@ tmp466,
 3639 0496 B048     		ldr	r0, .L277+20	@ tmp467,
 3640 0498 0022     		movs	r2, #0	@,
 3641 049a 3221     		movs	r1, #50	@,
 3642 049c FFF7FEFF 		bl	GSMSendCommand	@
 3643 04a0 0300     		movs	r3, r0	@ tmp468,
 3644 04a2 2370     		strb	r3, [r4]	@ tmp470, i
1344:src/sim900_800.c **** 
1345:src/sim900_800.c **** 			if (i == 2)
 3645              		.loc 1 1345 0
 3646 04a4 1723     		movs	r3, #23	@ tmp471,
 3647 04a6 6B44     		add	r3, r3, sp	@ tmp471,
 3648 04a8 1B78     		ldrb	r3, [r3]	@ tmp472, i
 3649 04aa 022B     		cmp	r3, #2	@ tmp472,
 3650 04ac 05D1     		bne	.L238	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 91


1346:src/sim900_800.c **** 			{
1347:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3651              		.loc 1 1347 0
 3652 04ae A94B     		ldr	r3, .L277+16	@ tmp473,
 3653 04b0 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3654 04b2 0133     		adds	r3, r3, #1	@ tmp474,
 3655 04b4 DAB2     		uxtb	r2, r3	@ D.7823, tmp474
 3656 04b6 A74B     		ldr	r3, .L277+16	@ tmp475,
 3657 04b8 1A70     		strb	r2, [r3]	@ tmp476, GSMConfigGPRSState
 3658              	.L238:
1348:src/sim900_800.c **** 			}
1349:src/sim900_800.c **** 
1350:src/sim900_800.c **** 			if (i > 2)
 3659              		.loc 1 1350 0
 3660 04ba 1723     		movs	r3, #23	@ tmp477,
 3661 04bc 6B44     		add	r3, r3, sp	@ tmp477,
 3662 04be 1B78     		ldrb	r3, [r3]	@ tmp478, i
 3663 04c0 022B     		cmp	r3, #2	@ tmp478,
 3664 04c2 00D8     		bhi	.LCB2886	@
 3665 04c4 B8E1     		b	.L267	@long jump	@
 3666              	.LCB2886:
1351:src/sim900_800.c **** 			{
1352:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3667              		.loc 1 1352 0
 3668 04c6 A34B     		ldr	r3, .L277+16	@ tmp479,
 3669 04c8 0022     		movs	r2, #0	@ tmp480,
 3670 04ca 1A70     		strb	r2, [r3]	@ tmp481, GSMConfigGPRSState
1353:src/sim900_800.c **** 				return 3;
 3671              		.loc 1 1353 0
 3672 04cc 0323     		movs	r3, #3	@ D.7823,
 3673 04ce CCE1     		b	.L214	@
 3674              	.L203:
1354:src/sim900_800.c **** 			}
1355:src/sim900_800.c **** 			break;
1356:src/sim900_800.c **** 
1357:src/sim900_800.c **** 		case 8:
1358:src/sim900_800.c **** 
1359:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3675              		.loc 1 1359 0
 3676 04d0 1724     		movs	r4, #23	@ tmp482,
 3677 04d2 6C44     		add	r4, r4, sp	@ tmp482,
 3678 04d4 9B4B     		ldr	r3, .L277	@ tmp483,
 3679 04d6 A148     		ldr	r0, .L277+24	@ tmp484,
 3680 04d8 0122     		movs	r2, #1	@,
 3681 04da 3221     		movs	r1, #50	@,
 3682 04dc FFF7FEFF 		bl	GSMSendCommand	@
 3683 04e0 0300     		movs	r3, r0	@ tmp485,
 3684 04e2 2370     		strb	r3, [r4]	@ tmp487, i
1360:src/sim900_800.c **** 
1361:src/sim900_800.c **** 			if (i == 2)
 3685              		.loc 1 1361 0
 3686 04e4 1723     		movs	r3, #23	@ tmp488,
 3687 04e6 6B44     		add	r3, r3, sp	@ tmp488,
 3688 04e8 1B78     		ldrb	r3, [r3]	@ tmp489, i
 3689 04ea 022B     		cmp	r3, #2	@ tmp489,
 3690 04ec 38D1     		bne	.L240	@,
1362:src/sim900_800.c **** 			{
ARM GAS  /tmp/ccCNyPsy.s 			page 92


1363:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 3691              		.loc 1 1363 0
 3692 04ee 9C49     		ldr	r1, .L277+28	@ tmp490,
 3693 04f0 944B     		ldr	r3, .L277	@ tmp491,
 3694 04f2 0722     		movs	r2, #7	@,
 3695 04f4 1800     		movs	r0, r3	@, tmp491
 3696 04f6 FFF7FEFF 		bl	strncmp	@
 3697 04fa 031E     		subs	r3, r0, #0	@ D.7824,,
 3698 04fc 30D1     		bne	.L240	@,
1364:src/sim900_800.c **** 				{
1365:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 3699              		.loc 1 1365 0
 3700 04fe 914B     		ldr	r3, .L277	@ tmp492,
 3701 0500 1B7A     		ldrb	r3, [r3, #8]	@ D.7823,
 3702 0502 312B     		cmp	r3, #49	@ D.7823,
 3703 0504 23D1     		bne	.L241	@,
1366:src/sim900_800.c **** 					{
1367:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 3704              		.loc 1 1367 0
 3705 0506 934B     		ldr	r3, .L277+16	@ tmp493,
 3706 0508 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3707 050a 0133     		adds	r3, r3, #1	@ tmp494,
 3708 050c DAB2     		uxtb	r2, r3	@ D.7823, tmp494
 3709 050e 914B     		ldr	r3, .L277+16	@ tmp495,
 3710 0510 1A70     		strb	r2, [r3]	@ tmp496, GSMConfigGPRSState
1368:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 3711              		.loc 1 1368 0
 3712 0512 944A     		ldr	r2, .L277+32	@ tmp497,
 3713 0514 944B     		ldr	r3, .L277+36	@ tmp498,
 3714 0516 1000     		movs	r0, r2	@ tmp499, tmp497
 3715 0518 1900     		movs	r1, r3	@ tmp500, tmp498
 3716 051a 1423     		movs	r3, #20	@ tmp501,
 3717 051c 1A00     		movs	r2, r3	@, tmp501
 3718 051e FFF7FEFF 		bl	memcpy	@
1369:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3719              		.loc 1 1369 0
 3720 0522 029A     		ldr	r2, [sp, #8]	@ tmp504, ptrAPN
 3721 0524 8F4B     		ldr	r3, .L277+32	@ tmp505,
 3722 0526 1100     		movs	r1, r2	@, tmp504
 3723 0528 1800     		movs	r0, r3	@, tmp505
 3724 052a FFF7FEFF 		bl	strcat	@
1370:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3725              		.loc 1 1370 0
 3726 052e 8D4B     		ldr	r3, .L277+32	@ tmp506,
 3727 0530 1800     		movs	r0, r3	@, tmp506
 3728 0532 FFF7FEFF 		bl	strlen	@
 3729 0536 0300     		movs	r3, r0	@ tmp507,
 3730 0538 1A00     		movs	r2, r3	@ D.7825, tmp508
 3731 053a 8A4B     		ldr	r3, .L277+32	@ tmp509,
 3732 053c D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp509
 3733 053e 8B4B     		ldr	r3, .L277+40	@ tmp510,
 3734 0540 1000     		movs	r0, r2	@ tmp511, D.7826
 3735 0542 1900     		movs	r1, r3	@ tmp512, tmp510
 3736 0544 0423     		movs	r3, #4	@ tmp513,
 3737 0546 1A00     		movs	r2, r3	@, tmp513
 3738 0548 FFF7FEFF 		bl	memcpy	@
 3739 054c 08E0     		b	.L240	@
ARM GAS  /tmp/ccCNyPsy.s 			page 93


 3740              	.L241:
1371:src/sim900_800.c **** 					}
1372:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 3741              		.loc 1 1372 0
 3742 054e 7D4B     		ldr	r3, .L277	@ tmp516,
 3743 0550 1B7A     		ldrb	r3, [r3, #8]	@ D.7823,
 3744 0552 302B     		cmp	r3, #48	@ D.7823,
 3745 0554 04D1     		bne	.L240	@,
1373:src/sim900_800.c **** 					{
1374:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 3746              		.loc 1 1374 0
 3747 0556 7F4B     		ldr	r3, .L277+16	@ tmp517,
 3748 0558 0022     		movs	r2, #0	@ tmp518,
 3749 055a 1A70     		strb	r2, [r3]	@ tmp519, GSMConfigGPRSState
1375:src/sim900_800.c **** 						return 3;
 3750              		.loc 1 1375 0
 3751 055c 0323     		movs	r3, #3	@ D.7823,
 3752 055e 84E1     		b	.L214	@
 3753              	.L240:
1376:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
1377:src/sim900_800.c **** 					}
1378:src/sim900_800.c **** 				}
1379:src/sim900_800.c **** 			}
1380:src/sim900_800.c **** 
1381:src/sim900_800.c **** 			if (i > 2)
 3754              		.loc 1 1381 0
 3755 0560 1723     		movs	r3, #23	@ tmp520,
 3756 0562 6B44     		add	r3, r3, sp	@ tmp520,
 3757 0564 1B78     		ldrb	r3, [r3]	@ tmp521, i
 3758 0566 022B     		cmp	r3, #2	@ tmp521,
 3759 0568 00D8     		bhi	.LCB2972	@
 3760 056a 67E1     		b	.L268	@long jump	@
 3761              	.LCB2972:
1382:src/sim900_800.c **** 			{
1383:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3762              		.loc 1 1383 0
 3763 056c 794B     		ldr	r3, .L277+16	@ tmp522,
 3764 056e 0022     		movs	r2, #0	@ tmp523,
 3765 0570 1A70     		strb	r2, [r3]	@ tmp524, GSMConfigGPRSState
1384:src/sim900_800.c **** 				return 3;
 3766              		.loc 1 1384 0
 3767 0572 0323     		movs	r3, #3	@ D.7823,
 3768 0574 79E1     		b	.L214	@
 3769              	.L204:
1385:src/sim900_800.c **** 			}
1386:src/sim900_800.c **** 
1387:src/sim900_800.c **** 			break;
1388:src/sim900_800.c **** 
1389:src/sim900_800.c **** 		case 9:
1390:src/sim900_800.c **** 
1391:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3770              		.loc 1 1391 0
 3771 0576 1724     		movs	r4, #23	@ tmp525,
 3772 0578 6C44     		add	r4, r4, sp	@ tmp525,
 3773 057a 724B     		ldr	r3, .L277	@ tmp526,
 3774 057c 7948     		ldr	r0, .L277+32	@ tmp527,
 3775 057e 0022     		movs	r2, #0	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 94


 3776 0580 3221     		movs	r1, #50	@,
 3777 0582 FFF7FEFF 		bl	GSMSendCommand	@
 3778 0586 0300     		movs	r3, r0	@ tmp528,
 3779 0588 2370     		strb	r3, [r4]	@ tmp530, i
1392:src/sim900_800.c **** 
1393:src/sim900_800.c **** 			if (i == 2)
 3780              		.loc 1 1393 0
 3781 058a 1723     		movs	r3, #23	@ tmp531,
 3782 058c 6B44     		add	r3, r3, sp	@ tmp531,
 3783 058e 1B78     		ldrb	r3, [r3]	@ tmp532, i
 3784 0590 022B     		cmp	r3, #2	@ tmp532,
 3785 0592 4CD1     		bne	.L243	@,
1394:src/sim900_800.c **** 			{
1395:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3786              		.loc 1 1395 0
 3787 0594 6F4B     		ldr	r3, .L277+16	@ tmp533,
 3788 0596 1B78     		ldrb	r3, [r3]	@ D.7823, GSMConfigGPRSState
 3789 0598 0133     		adds	r3, r3, #1	@ tmp534,
 3790 059a DAB2     		uxtb	r2, r3	@ D.7823, tmp534
 3791 059c 6D4B     		ldr	r3, .L277+16	@ tmp535,
 3792 059e 1A70     		strb	r2, [r3]	@ tmp536, GSMConfigGPRSState
1396:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 3793              		.loc 1 1396 0
 3794 05a0 704A     		ldr	r2, .L277+32	@ tmp537,
 3795 05a2 734B     		ldr	r3, .L277+44	@ tmp538,
 3796 05a4 1000     		movs	r0, r2	@ tmp539, tmp537
 3797 05a6 1900     		movs	r1, r3	@ tmp540, tmp538
 3798 05a8 0A23     		movs	r3, #10	@ tmp541,
 3799 05aa 1A00     		movs	r2, r3	@, tmp541
 3800 05ac FFF7FEFF 		bl	memcpy	@
1397:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3801              		.loc 1 1397 0
 3802 05b0 029A     		ldr	r2, [sp, #8]	@ tmp544, ptrAPN
 3803 05b2 6C4B     		ldr	r3, .L277+32	@ tmp545,
 3804 05b4 1100     		movs	r1, r2	@, tmp544
 3805 05b6 1800     		movs	r0, r3	@, tmp545
 3806 05b8 FFF7FEFF 		bl	strcat	@
1398:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3807              		.loc 1 1398 0
 3808 05bc 694B     		ldr	r3, .L277+32	@ tmp546,
 3809 05be 1800     		movs	r0, r3	@, tmp546
 3810 05c0 FFF7FEFF 		bl	strlen	@
 3811 05c4 0300     		movs	r3, r0	@ tmp547,
 3812 05c6 1A00     		movs	r2, r3	@ D.7825, tmp548
 3813 05c8 664B     		ldr	r3, .L277+32	@ tmp549,
 3814 05ca D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp549
 3815 05cc 694B     		ldr	r3, .L277+48	@ tmp550,
 3816 05ce 1000     		movs	r0, r2	@ tmp551, D.7826
 3817 05d0 1900     		movs	r1, r3	@ tmp552, tmp550
 3818 05d2 0423     		movs	r3, #4	@ tmp553,
 3819 05d4 1A00     		movs	r2, r3	@, tmp553
 3820 05d6 FFF7FEFF 		bl	memcpy	@
1399:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 3821              		.loc 1 1399 0
 3822 05da 019A     		ldr	r2, [sp, #4]	@ tmp556, ptrUSER
 3823 05dc 614B     		ldr	r3, .L277+32	@ tmp557,
 3824 05de 1100     		movs	r1, r2	@, tmp556
ARM GAS  /tmp/ccCNyPsy.s 			page 95


 3825 05e0 1800     		movs	r0, r3	@, tmp557
 3826 05e2 FFF7FEFF 		bl	strcat	@
1400:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3827              		.loc 1 1400 0
 3828 05e6 5F4B     		ldr	r3, .L277+32	@ tmp558,
 3829 05e8 1800     		movs	r0, r3	@, tmp558
 3830 05ea FFF7FEFF 		bl	strlen	@
 3831 05ee 0300     		movs	r3, r0	@ tmp559,
 3832 05f0 1A00     		movs	r2, r3	@ D.7825, tmp560
 3833 05f2 5C4B     		ldr	r3, .L277+32	@ tmp561,
 3834 05f4 D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp561
 3835 05f6 5F4B     		ldr	r3, .L277+48	@ tmp562,
 3836 05f8 1000     		movs	r0, r2	@ tmp563, D.7826
 3837 05fa 1900     		movs	r1, r3	@ tmp564, tmp562
 3838 05fc 0423     		movs	r3, #4	@ tmp565,
 3839 05fe 1A00     		movs	r2, r3	@, tmp565
 3840 0600 FFF7FEFF 		bl	memcpy	@
1401:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 3841              		.loc 1 1401 0
 3842 0604 009A     		ldr	r2, [sp]	@ tmp568, ptrKEY
 3843 0606 574B     		ldr	r3, .L277+32	@ tmp569,
 3844 0608 1100     		movs	r1, r2	@, tmp568
 3845 060a 1800     		movs	r0, r3	@, tmp569
 3846 060c FFF7FEFF 		bl	strcat	@
1402:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3847              		.loc 1 1402 0
 3848 0610 544B     		ldr	r3, .L277+32	@ tmp570,
 3849 0612 1800     		movs	r0, r3	@, tmp570
 3850 0614 FFF7FEFF 		bl	strlen	@
 3851 0618 0300     		movs	r3, r0	@ tmp571,
 3852 061a 1A00     		movs	r2, r3	@ D.7825, tmp572
 3853 061c 514B     		ldr	r3, .L277+32	@ tmp573,
 3854 061e D218     		adds	r2, r2, r3	@ D.7826, D.7825, tmp573
 3855 0620 524B     		ldr	r3, .L277+40	@ tmp574,
 3856 0622 1000     		movs	r0, r2	@ tmp575, D.7826
 3857 0624 1900     		movs	r1, r3	@ tmp576, tmp574
 3858 0626 0423     		movs	r3, #4	@ tmp577,
 3859 0628 1A00     		movs	r2, r3	@, tmp577
 3860 062a FFF7FEFF 		bl	memcpy	@
 3861              	.L243:
1403:src/sim900_800.c **** 			}
1404:src/sim900_800.c **** 
1405:src/sim900_800.c **** 			if (i > 2)
 3862              		.loc 1 1405 0
 3863 062e 1723     		movs	r3, #23	@ tmp580,
 3864 0630 6B44     		add	r3, r3, sp	@ tmp580,
 3865 0632 1B78     		ldrb	r3, [r3]	@ tmp581, i
 3866 0634 022B     		cmp	r3, #2	@ tmp581,
 3867 0636 00D8     		bhi	.LCB3068	@
 3868 0638 02E1     		b	.L269	@long jump	@
 3869              	.LCB3068:
1406:src/sim900_800.c **** 			{
1407:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3870              		.loc 1 1407 0
 3871 063a 464B     		ldr	r3, .L277+16	@ tmp582,
 3872 063c 0022     		movs	r2, #0	@ tmp583,
 3873 063e 1A70     		strb	r2, [r3]	@ tmp584, GSMConfigGPRSState
ARM GAS  /tmp/ccCNyPsy.s 			page 96


1408:src/sim900_800.c **** 				return 3;
 3874              		.loc 1 1408 0
 3875 0640 0323     		movs	r3, #3	@ D.7823,
 3876 0642 12E1     		b	.L214	@
 3877              	.L205:
1409:src/sim900_800.c **** 			}
1410:src/sim900_800.c **** 			break;
1411:src/sim900_800.c **** 
1412:src/sim900_800.c **** 		case 10:
1413:src/sim900_800.c **** 
1414:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3878              		.loc 1 1414 0
 3879 0644 1724     		movs	r4, #23	@ tmp585,
 3880 0646 6C44     		add	r4, r4, sp	@ tmp585,
 3881 0648 3E4B     		ldr	r3, .L277	@ tmp586,
 3882 064a 4648     		ldr	r0, .L277+32	@ tmp587,
 3883 064c 0022     		movs	r2, #0	@,
 3884 064e 3221     		movs	r1, #50	@,
 3885 0650 FFF7FEFF 		bl	GSMSendCommand	@
 3886 0654 0300     		movs	r3, r0	@ tmp588,
 3887 0656 2370     		strb	r3, [r4]	@ tmp590, i
1415:src/sim900_800.c **** 
1416:src/sim900_800.c **** 			if (i == 2)
 3888              		.loc 1 1416 0
 3889 0658 1723     		movs	r3, #23	@ tmp591,
 3890 065a 6B44     		add	r3, r3, sp	@ tmp591,
 3891 065c 1B78     		ldrb	r3, [r3]	@ tmp592, i
 3892 065e 022B     		cmp	r3, #2	@ tmp592,
 3893 0660 02D1     		bne	.L245	@,
1417:src/sim900_800.c **** 			{
1418:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3894              		.loc 1 1418 0
 3895 0662 3C4B     		ldr	r3, .L277+16	@ tmp593,
 3896 0664 0222     		movs	r2, #2	@ tmp594,
 3897 0666 1A70     		strb	r2, [r3]	@ tmp595, GSMConfigGPRSState
 3898              	.L245:
1419:src/sim900_800.c **** 			}
1420:src/sim900_800.c **** 
1421:src/sim900_800.c **** 			if (i > 2)
 3899              		.loc 1 1421 0
 3900 0668 1723     		movs	r3, #23	@ tmp596,
 3901 066a 6B44     		add	r3, r3, sp	@ tmp596,
 3902 066c 1B78     		ldrb	r3, [r3]	@ tmp597, i
 3903 066e 022B     		cmp	r3, #2	@ tmp597,
 3904 0670 00D8     		bhi	.LCB3100	@
 3905 0672 E7E0     		b	.L270	@long jump	@
 3906              	.LCB3100:
1422:src/sim900_800.c **** 			{
1423:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3907              		.loc 1 1423 0
 3908 0674 374B     		ldr	r3, .L277+16	@ tmp598,
 3909 0676 0022     		movs	r2, #0	@ tmp599,
 3910 0678 1A70     		strb	r2, [r3]	@ tmp600, GSMConfigGPRSState
1424:src/sim900_800.c **** 				return 3;
 3911              		.loc 1 1424 0
 3912 067a 0323     		movs	r3, #3	@ D.7823,
 3913 067c F5E0     		b	.L214	@
ARM GAS  /tmp/ccCNyPsy.s 			page 97


 3914              	.L206:
1425:src/sim900_800.c **** 			}
1426:src/sim900_800.c **** 			break;
1427:src/sim900_800.c **** 
1428:src/sim900_800.c **** 		case 11:
1429:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 3915              		.loc 1 1429 0
 3916 067e 1724     		movs	r4, #23	@ tmp601,
 3917 0680 6C44     		add	r4, r4, sp	@ tmp601,
 3918 0682 304B     		ldr	r3, .L277	@ tmp602,
 3919 0684 3C48     		ldr	r0, .L277+52	@ tmp603,
 3920 0686 0022     		movs	r2, #0	@,
 3921 0688 C821     		movs	r1, #200	@,
 3922 068a FFF7FEFF 		bl	GSMSendCommand	@
 3923 068e 0300     		movs	r3, r0	@ tmp604,
 3924 0690 2370     		strb	r3, [r4]	@ tmp606, i
1430:src/sim900_800.c **** 
1431:src/sim900_800.c **** 			if (i == 2)
 3925              		.loc 1 1431 0
 3926 0692 1723     		movs	r3, #23	@ tmp607,
 3927 0694 6B44     		add	r3, r3, sp	@ tmp607,
 3928 0696 1B78     		ldrb	r3, [r3]	@ tmp608, i
 3929 0698 022B     		cmp	r3, #2	@ tmp608,
 3930 069a 02D1     		bne	.L247	@,
1432:src/sim900_800.c **** 			{
1433:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3931              		.loc 1 1433 0
 3932 069c 2D4B     		ldr	r3, .L277+16	@ tmp609,
 3933 069e 0222     		movs	r2, #2	@ tmp610,
 3934 06a0 1A70     		strb	r2, [r3]	@ tmp611, GSMConfigGPRSState
 3935              	.L247:
1434:src/sim900_800.c **** 			}
1435:src/sim900_800.c **** 
1436:src/sim900_800.c **** 			if (i > 2)
 3936              		.loc 1 1436 0
 3937 06a2 1723     		movs	r3, #23	@ tmp612,
 3938 06a4 6B44     		add	r3, r3, sp	@ tmp612,
 3939 06a6 1B78     		ldrb	r3, [r3]	@ tmp613, i
 3940 06a8 022B     		cmp	r3, #2	@ tmp613,
 3941 06aa 00D8     		bhi	.LCB3132	@
 3942 06ac CCE0     		b	.L271	@long jump	@
 3943              	.LCB3132:
1437:src/sim900_800.c **** 			{
1438:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3944              		.loc 1 1438 0
 3945 06ae 294B     		ldr	r3, .L277+16	@ tmp614,
 3946 06b0 0022     		movs	r2, #0	@ tmp615,
 3947 06b2 1A70     		strb	r2, [r3]	@ tmp616, GSMConfigGPRSState
1439:src/sim900_800.c **** 				return 3;
 3948              		.loc 1 1439 0
 3949 06b4 0323     		movs	r3, #3	@ D.7823,
 3950 06b6 D8E0     		b	.L214	@
 3951              	.L207:
1440:src/sim900_800.c **** 			}
1441:src/sim900_800.c **** 			break;
1442:src/sim900_800.c **** 
1443:src/sim900_800.c **** 		case 12:
ARM GAS  /tmp/ccCNyPsy.s 			page 98


1444:src/sim900_800.c **** 
1445:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 3952              		.loc 1 1445 0
 3953 06b8 304B     		ldr	r3, .L277+56	@ tmp617,
 3954 06ba 0322     		movs	r2, #3	@ tmp618,
 3955 06bc 1A70     		strb	r2, [r3]	@ tmp619, GSMConfigGPRSflag
1446:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3956              		.loc 1 1446 0
 3957 06be 1724     		movs	r4, #23	@ tmp620,
 3958 06c0 6C44     		add	r4, r4, sp	@ tmp620,
 3959 06c2 204B     		ldr	r3, .L277	@ tmp621,
 3960 06c4 2E48     		ldr	r0, .L277+60	@ tmp622,
 3961 06c6 0022     		movs	r2, #0	@,
 3962 06c8 3221     		movs	r1, #50	@,
 3963 06ca FFF7FEFF 		bl	GSMSendCommand	@
 3964 06ce 0300     		movs	r3, r0	@ tmp623,
 3965 06d0 2370     		strb	r3, [r4]	@ tmp625, i
1447:src/sim900_800.c **** 
1448:src/sim900_800.c **** 			if (i == 2)
 3966              		.loc 1 1448 0
 3967 06d2 1723     		movs	r3, #23	@ tmp626,
 3968 06d4 6B44     		add	r3, r3, sp	@ tmp626,
 3969 06d6 1B78     		ldrb	r3, [r3]	@ tmp627, i
 3970 06d8 022B     		cmp	r3, #2	@ tmp627,
 3971 06da 05D1     		bne	.L249	@,
1449:src/sim900_800.c **** 			{
1450:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3972              		.loc 1 1450 0
 3973 06dc 1D4B     		ldr	r3, .L277+16	@ tmp628,
 3974 06de 0222     		movs	r2, #2	@ tmp629,
 3975 06e0 1A70     		strb	r2, [r3]	@ tmp630, GSMConfigGPRSState
1451:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 3976              		.loc 1 1451 0
 3977 06e2 264B     		ldr	r3, .L277+56	@ tmp631,
 3978 06e4 0122     		movs	r2, #1	@ tmp632,
 3979 06e6 1A70     		strb	r2, [r3]	@ tmp633, GSMConfigGPRSflag
 3980              	.L249:
1452:src/sim900_800.c **** 			}
1453:src/sim900_800.c **** 
1454:src/sim900_800.c **** 			if (i > 2)
 3981              		.loc 1 1454 0
 3982 06e8 1723     		movs	r3, #23	@ tmp634,
 3983 06ea 6B44     		add	r3, r3, sp	@ tmp634,
 3984 06ec 1B78     		ldrb	r3, [r3]	@ tmp635, i
 3985 06ee 022B     		cmp	r3, #2	@ tmp635,
 3986 06f0 00D8     		bhi	.LCB3170	@
 3987 06f2 ABE0     		b	.L272	@long jump	@
 3988              	.LCB3170:
1455:src/sim900_800.c **** 			{
1456:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3989              		.loc 1 1456 0
 3990 06f4 174B     		ldr	r3, .L277+16	@ tmp636,
 3991 06f6 0022     		movs	r2, #0	@ tmp637,
 3992 06f8 1A70     		strb	r2, [r3]	@ tmp638, GSMConfigGPRSState
1457:src/sim900_800.c **** 				return 3;
 3993              		.loc 1 1457 0
 3994 06fa 0323     		movs	r3, #3	@ D.7823,
ARM GAS  /tmp/ccCNyPsy.s 			page 99


 3995 06fc B5E0     		b	.L214	@
 3996              	.L208:
1458:src/sim900_800.c **** 			}
1459:src/sim900_800.c **** 			break;
1460:src/sim900_800.c **** 		case 13:
1461:src/sim900_800.c **** 
1462:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3997              		.loc 1 1462 0
 3998 06fe 1724     		movs	r4, #23	@ tmp639,
 3999 0700 6C44     		add	r4, r4, sp	@ tmp639,
 4000 0702 104B     		ldr	r3, .L277	@ tmp640,
 4001 0704 1748     		ldr	r0, .L277+32	@ tmp641,
 4002 0706 0022     		movs	r2, #0	@,
 4003 0708 3221     		movs	r1, #50	@,
 4004 070a FFF7FEFF 		bl	GSMSendCommand	@
 4005 070e 0300     		movs	r3, r0	@ tmp642,
 4006 0710 2370     		strb	r3, [r4]	@ tmp644, i
1463:src/sim900_800.c **** 
1464:src/sim900_800.c **** 			if (i == 2)
 4007              		.loc 1 1464 0
 4008 0712 1723     		movs	r3, #23	@ tmp645,
 4009 0714 6B44     		add	r3, r3, sp	@ tmp645,
 4010 0716 1B78     		ldrb	r3, [r3]	@ tmp646, i
 4011 0718 022B     		cmp	r3, #2	@ tmp646,
 4012 071a 02D1     		bne	.L251	@,
1465:src/sim900_800.c **** 			{
1466:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
 4013              		.loc 1 1466 0
 4014 071c 0D4B     		ldr	r3, .L277+16	@ tmp647,
 4015 071e 0322     		movs	r2, #3	@ tmp648,
 4016 0720 1A70     		strb	r2, [r3]	@ tmp649, GSMConfigGPRSState
 4017              	.L251:
1467:src/sim900_800.c **** 			}
1468:src/sim900_800.c **** 
1469:src/sim900_800.c **** 			if (i > 2)
 4018              		.loc 1 1469 0
 4019 0722 1723     		movs	r3, #23	@ tmp650,
 4020 0724 6B44     		add	r3, r3, sp	@ tmp650,
 4021 0726 1B78     		ldrb	r3, [r3]	@ tmp651, i
 4022 0728 022B     		cmp	r3, #2	@ tmp651,
 4023 072a 00D8     		bhi	.LCB3202	@
 4024 072c 90E0     		b	.L273	@long jump	@
 4025              	.LCB3202:
1470:src/sim900_800.c **** 			{
1471:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4026              		.loc 1 1471 0
 4027 072e 094B     		ldr	r3, .L277+16	@ tmp652,
 4028 0730 0022     		movs	r2, #0	@ tmp653,
 4029 0732 1A70     		strb	r2, [r3]	@ tmp654, GSMConfigGPRSState
1472:src/sim900_800.c **** 				return 3;
 4030              		.loc 1 1472 0
 4031 0734 0323     		movs	r3, #3	@ D.7823,
 4032 0736 98E0     		b	.L214	@
 4033              	.L209:
1473:src/sim900_800.c **** 			}
1474:src/sim900_800.c **** 			break;
1475:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 100


1476:src/sim900_800.c **** 		case 14:
1477:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4034              		.loc 1 1477 0
 4035 0738 064B     		ldr	r3, .L277+16	@ tmp655,
 4036 073a 0022     		movs	r2, #0	@ tmp656,
 4037 073c 1A70     		strb	r2, [r3]	@ tmp657, GSMConfigGPRSState
1478:src/sim900_800.c **** 			return 2;
 4038              		.loc 1 1478 0
 4039 073e 0223     		movs	r3, #2	@ D.7823,
 4040 0740 93E0     		b	.L214	@
 4041              	.L278:
 4042 0742 C046     		.align	2
 4043              	.L277:
 4044 0744 00000000 		.word	GSMbuffRtaCommand
 4045 0748 90010000 		.word	.LC133
 4046 074c 9C010000 		.word	.LC135
 4047 0750 00000000 		.word	GPRSrssi
 4048 0754 00000000 		.word	GSMConfigGPRSState
 4049 0758 A4010000 		.word	.LC138
 4050 075c B4010000 		.word	.LC140
 4051 0760 C0010000 		.word	.LC142
 4052 0764 00000000 		.word	GSMbuffGPRSCommand
 4053 0768 C8010000 		.word	.LC144
 4054 076c EC000000 		.word	.LC91
 4055 0770 DC010000 		.word	.LC146
 4056 0774 30010000 		.word	.LC113
 4057 0778 E8010000 		.word	.LC148
 4058 077c 00000000 		.word	GSMConfigGPRSflag
 4059 0780 F4010000 		.word	.LC150
 4060              	.L210:
1479:src/sim900_800.c **** 			break;
1480:src/sim900_800.c **** 
1481:src/sim900_800.c **** 		case 15:
1482:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 4061              		.loc 1 1482 0
 4062 0784 0F23     		movs	r3, #15	@ tmp658,
 4063 0786 6B44     		add	r3, r3, sp	@ tmp658,
 4064 0788 1B78     		ldrb	r3, [r3]	@ tmp659, sim
 4065 078a 012B     		cmp	r3, #1	@ tmp659,
 4066 078c 04D0     		beq	.L253	@,
 4067              		.loc 1 1482 0 is_stmt 0 discriminator 1
 4068 078e 0F23     		movs	r3, #15	@ tmp660,
 4069 0790 6B44     		add	r3, r3, sp	@ tmp660,
 4070 0792 1B78     		ldrb	r3, [r3]	@ tmp661, sim
 4071 0794 022B     		cmp	r3, #2	@ tmp661,
 4072 0796 1BD1     		bne	.L254	@,
 4073              	.L253:
1483:src/sim900_800.c **** 			{
1484:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 4074              		.loc 1 1484 0 is_stmt 1
 4075 0798 1724     		movs	r4, #23	@ tmp662,
 4076 079a 6C44     		add	r4, r4, sp	@ tmp662,
 4077 079c 0F23     		movs	r3, #15	@ tmp663,
 4078 079e 6B44     		add	r3, r3, sp	@ tmp663,
 4079 07a0 1B78     		ldrb	r3, [r3]	@ tmp664, sim
 4080 07a2 1800     		movs	r0, r3	@, tmp664
 4081 07a4 FFF7FEFF 		bl	GSM_SetSIM	@
ARM GAS  /tmp/ccCNyPsy.s 			page 101


 4082 07a8 0300     		movs	r3, r0	@ tmp665,
 4083 07aa 2370     		strb	r3, [r4]	@ tmp667, i
1485:src/sim900_800.c **** 
1486:src/sim900_800.c **** 				if (i == 2)
 4084              		.loc 1 1486 0
 4085 07ac 1723     		movs	r3, #23	@ tmp668,
 4086 07ae 6B44     		add	r3, r3, sp	@ tmp668,
 4087 07b0 1B78     		ldrb	r3, [r3]	@ tmp669, i
 4088 07b2 022B     		cmp	r3, #2	@ tmp669,
 4089 07b4 02D1     		bne	.L255	@,
1487:src/sim900_800.c **** 				{
1488:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 4090              		.loc 1 1488 0
 4091 07b6 2E4B     		ldr	r3, .L279	@ tmp670,
 4092 07b8 0222     		movs	r2, #2	@ tmp671,
 4093 07ba 1A70     		strb	r2, [r3]	@ tmp672, GSMConfigGPRSState
 4094              	.L255:
1489:src/sim900_800.c **** 				}
1490:src/sim900_800.c **** 
1491:src/sim900_800.c **** 				if (i>2)
 4095              		.loc 1 1491 0
 4096 07bc 1723     		movs	r3, #23	@ tmp673,
 4097 07be 6B44     		add	r3, r3, sp	@ tmp673,
 4098 07c0 1B78     		ldrb	r3, [r3]	@ tmp674, i
 4099 07c2 022B     		cmp	r3, #2	@ tmp674,
 4100 07c4 09D9     		bls	.L257	@,
1492:src/sim900_800.c **** 				{
1493:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 4101              		.loc 1 1493 0
 4102 07c6 2A4B     		ldr	r3, .L279	@ tmp675,
 4103 07c8 0022     		movs	r2, #0	@ tmp676,
 4104 07ca 1A70     		strb	r2, [r3]	@ tmp677, GSMConfigGPRSState
1494:src/sim900_800.c **** 					return 3;
 4105              		.loc 1 1494 0
 4106 07cc 0323     		movs	r3, #3	@ D.7823,
 4107 07ce 4CE0     		b	.L214	@
 4108              	.L254:
1495:src/sim900_800.c **** 				}
1496:src/sim900_800.c **** 			}
1497:src/sim900_800.c **** 			else
1498:src/sim900_800.c **** 			{
1499:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4109              		.loc 1 1499 0
 4110 07d0 274B     		ldr	r3, .L279	@ tmp678,
 4111 07d2 0022     		movs	r2, #0	@ tmp679,
 4112 07d4 1A70     		strb	r2, [r3]	@ tmp680, GSMConfigGPRSState
1500:src/sim900_800.c **** 				return 3;
 4113              		.loc 1 1500 0
 4114 07d6 0323     		movs	r3, #3	@ D.7823,
 4115 07d8 47E0     		b	.L214	@
 4116              	.L257:
1501:src/sim900_800.c **** 			}
1502:src/sim900_800.c **** 
1503:src/sim900_800.c **** 			break;
 4117              		.loc 1 1503 0 discriminator 1
 4118 07da 3CE0     		b	.L212	@
 4119              	.L211:
ARM GAS  /tmp/ccCNyPsy.s 			page 102


1504:src/sim900_800.c **** 		case 16:
1505:src/sim900_800.c **** 
1506:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4120              		.loc 1 1506 0
 4121 07dc 1724     		movs	r4, #23	@ tmp681,
 4122 07de 6C44     		add	r4, r4, sp	@ tmp681,
 4123 07e0 244B     		ldr	r3, .L279+4	@ tmp682,
 4124 07e2 2548     		ldr	r0, .L279+8	@ tmp683,
 4125 07e4 0022     		movs	r2, #0	@,
 4126 07e6 3221     		movs	r1, #50	@,
 4127 07e8 FFF7FEFF 		bl	GSMSendCommand	@
 4128 07ec 0300     		movs	r3, r0	@ tmp684,
 4129 07ee 2370     		strb	r3, [r4]	@ tmp686, i
1507:src/sim900_800.c **** 
1508:src/sim900_800.c **** 			if (i == 2)
 4130              		.loc 1 1508 0
 4131 07f0 1723     		movs	r3, #23	@ tmp687,
 4132 07f2 6B44     		add	r3, r3, sp	@ tmp687,
 4133 07f4 1B78     		ldrb	r3, [r3]	@ tmp688, i
 4134 07f6 022B     		cmp	r3, #2	@ tmp688,
 4135 07f8 04D1     		bne	.L258	@,
1509:src/sim900_800.c **** 			{
1510:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4136              		.loc 1 1510 0
 4137 07fa 1D4B     		ldr	r3, .L279	@ tmp689,
 4138 07fc 0022     		movs	r2, #0	@ tmp690,
 4139 07fe 1A70     		strb	r2, [r3]	@ tmp691, GSMConfigGPRSState
1511:src/sim900_800.c **** 				return 3;
 4140              		.loc 1 1511 0
 4141 0800 0323     		movs	r3, #3	@ D.7823,
 4142 0802 32E0     		b	.L214	@
 4143              	.L258:
1512:src/sim900_800.c **** 			}
1513:src/sim900_800.c **** 
1514:src/sim900_800.c **** 			if (i > 2)
 4144              		.loc 1 1514 0
 4145 0804 1723     		movs	r3, #23	@ tmp692,
 4146 0806 6B44     		add	r3, r3, sp	@ tmp692,
 4147 0808 1B78     		ldrb	r3, [r3]	@ tmp693, i
 4148 080a 022B     		cmp	r3, #2	@ tmp693,
 4149 080c 22D9     		bls	.L274	@,
1515:src/sim900_800.c **** 			{
1516:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4150              		.loc 1 1516 0
 4151 080e 184B     		ldr	r3, .L279	@ tmp694,
 4152 0810 0022     		movs	r2, #0	@ tmp695,
 4153 0812 1A70     		strb	r2, [r3]	@ tmp696, GSMConfigGPRSState
1517:src/sim900_800.c **** 				return 3;
 4154              		.loc 1 1517 0
 4155 0814 0323     		movs	r3, #3	@ D.7823,
 4156 0816 28E0     		b	.L214	@
 4157              	.L193:
1518:src/sim900_800.c **** 			}
1519:src/sim900_800.c **** 			break;
1520:src/sim900_800.c **** 		default:
1521:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4158              		.loc 1 1521 0
ARM GAS  /tmp/ccCNyPsy.s 			page 103


 4159 0818 154B     		ldr	r3, .L279	@ tmp697,
 4160 081a 0022     		movs	r2, #0	@ tmp698,
 4161 081c 1A70     		strb	r2, [r3]	@ tmp699, GSMConfigGPRSState
1522:src/sim900_800.c **** 			break;
 4162              		.loc 1 1522 0
 4163 081e 1AE0     		b	.L212	@
 4164              	.L261:
1172:src/sim900_800.c **** 		case 2:
 4165              		.loc 1 1172 0
 4166 0820 C046     		nop
 4167 0822 18E0     		b	.L212	@
 4168              	.L262:
1187:src/sim900_800.c **** 		case 3:
 4169              		.loc 1 1187 0
 4170 0824 C046     		nop
 4171 0826 16E0     		b	.L212	@
 4172              	.L263:
1264:src/sim900_800.c **** 
 4173              		.loc 1 1264 0
 4174 0828 C046     		nop
 4175 082a 14E0     		b	.L212	@
 4176              	.L264:
1287:src/sim900_800.c **** 
 4177              		.loc 1 1287 0
 4178 082c C046     		nop
 4179 082e 12E0     		b	.L212	@
 4180              	.L265:
1310:src/sim900_800.c **** 		case 6:
 4181              		.loc 1 1310 0
 4182 0830 C046     		nop
 4183 0832 10E0     		b	.L212	@
 4184              	.L266:
1340:src/sim900_800.c **** 		case 7:
 4185              		.loc 1 1340 0
 4186 0834 C046     		nop
 4187 0836 0EE0     		b	.L212	@
 4188              	.L267:
1355:src/sim900_800.c **** 
 4189              		.loc 1 1355 0
 4190 0838 C046     		nop
 4191 083a 0CE0     		b	.L212	@
 4192              	.L268:
1387:src/sim900_800.c **** 
 4193              		.loc 1 1387 0
 4194 083c C046     		nop
 4195 083e 0AE0     		b	.L212	@
 4196              	.L269:
1410:src/sim900_800.c **** 
 4197              		.loc 1 1410 0
 4198 0840 C046     		nop
 4199 0842 08E0     		b	.L212	@
 4200              	.L270:
1426:src/sim900_800.c **** 
 4201              		.loc 1 1426 0
 4202 0844 C046     		nop
 4203 0846 06E0     		b	.L212	@
 4204              	.L271:
ARM GAS  /tmp/ccCNyPsy.s 			page 104


1441:src/sim900_800.c **** 
 4205              		.loc 1 1441 0
 4206 0848 C046     		nop
 4207 084a 04E0     		b	.L212	@
 4208              	.L272:
1459:src/sim900_800.c **** 		case 13:
 4209              		.loc 1 1459 0
 4210 084c C046     		nop
 4211 084e 02E0     		b	.L212	@
 4212              	.L273:
1474:src/sim900_800.c **** 
 4213              		.loc 1 1474 0
 4214 0850 C046     		nop
 4215 0852 00E0     		b	.L212	@
 4216              	.L274:
1519:src/sim900_800.c **** 		default:
 4217              		.loc 1 1519 0
 4218 0854 C046     		nop
 4219              	.L212:
1523:src/sim900_800.c **** 
1524:src/sim900_800.c **** 	}
1525:src/sim900_800.c **** 
1526:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 4220              		.loc 1 1526 0
 4221 0856 094B     		ldr	r3, .L279+12	@ tmp700,
 4222 0858 1B88     		ldrh	r3, [r3]	@ D.7828, GSMConfigGPRSTimeOut
 4223 085a 002B     		cmp	r3, #0	@ D.7828,
 4224 085c 04D1     		bne	.L260	@,
1527:src/sim900_800.c **** 	{
1528:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 4225              		.loc 1 1528 0
 4226 085e 044B     		ldr	r3, .L279	@ tmp701,
 4227 0860 0022     		movs	r2, #0	@ tmp702,
 4228 0862 1A70     		strb	r2, [r3]	@ tmp703, GSMConfigGPRSState
1529:src/sim900_800.c **** 		return 4;
 4229              		.loc 1 1529 0
 4230 0864 0423     		movs	r3, #4	@ D.7823,
 4231 0866 00E0     		b	.L214	@
 4232              	.L260:
1530:src/sim900_800.c **** 	}
1531:src/sim900_800.c **** 
1532:src/sim900_800.c **** 	return 1;
 4233              		.loc 1 1532 0
 4234 0868 0123     		movs	r3, #1	@ D.7823,
 4235              	.L214:
1533:src/sim900_800.c **** }
 4236              		.loc 1 1533 0
 4237 086a 1800     		movs	r0, r3	@, <retval>
 4238 086c 06B0     		add	sp, sp, #24	@,,
 4239              		@ sp needed	@
 4240 086e 10BD     		pop	{r4, pc}
 4241              	.L280:
 4242              		.align	2
 4243              	.L279:
 4244 0870 00000000 		.word	GSMConfigGPRSState
 4245 0874 00000000 		.word	GSMbuffRtaCommand
 4246 0878 14000000 		.word	.LC27
ARM GAS  /tmp/ccCNyPsy.s 			page 105


 4247 087c 00000000 		.word	GSMConfigGPRSTimeOut
 4248              		.cfi_endproc
 4249              	.LFE29:
 4250              		.size	GSMConfigGPRS, .-GSMConfigGPRS
 4251              		.section	.rodata
 4252 01ff 00       		.align	2
 4253              	.LC154:
 4254 0200 41542B43 		.ascii	"AT+CDSDS=1\015\012\000"
 4254      44534453 
 4254      3D310D0A 
 4254      00
 4255 020d 000000   		.align	2
 4256              	.LC156:
 4257 0210 41542B43 		.ascii	"AT+CDSDS=2\015\012\000"
 4257      44534453 
 4257      3D320D0A 
 4257      00
 4258              		.section	.text.GSM_SetSIM,"ax",%progbits
 4259              		.align	2
 4260              		.global	GSM_SetSIM
 4261              		.code	16
 4262              		.thumb_func
 4263              		.type	GSM_SetSIM, %function
 4264              	GSM_SetSIM:
 4265              	.LFB30:
1534:src/sim900_800.c **** 
1535:src/sim900_800.c **** char GSM_SetSIM (unsigned char sim)
1536:src/sim900_800.c **** {
 4266              		.loc 1 1536 0
 4267              		.cfi_startproc
 4268 0000 10B5     		push	{r4, lr}	@
 4269              	.LCFI15:
 4270              		.cfi_def_cfa_offset 8
 4271              		.cfi_offset 4, -8
 4272              		.cfi_offset 14, -4
 4273 0002 84B0     		sub	sp, sp, #16	@,,
 4274              	.LCFI16:
 4275              		.cfi_def_cfa_offset 24
 4276 0004 0200     		movs	r2, r0	@ tmp112, sim
 4277 0006 6B46     		mov	r3, sp	@ tmp137,
 4278 0008 0733     		adds	r3, r3, #7	@ tmp113,
 4279 000a 1A70     		strb	r2, [r3]	@ tmp114, sim
1537:src/sim900_800.c **** 
1538:src/sim900_800.c **** 	unsigned char i;
1539:src/sim900_800.c **** 
1540:src/sim900_800.c **** 	if (sim == 1)
 4280              		.loc 1 1540 0
 4281 000c 6B46     		mov	r3, sp	@ tmp138,
 4282 000e 0733     		adds	r3, r3, #7	@ tmp115,
 4283 0010 1B78     		ldrb	r3, [r3]	@ tmp116, sim
 4284 0012 012B     		cmp	r3, #1	@ tmp116,
 4285 0014 0AD1     		bne	.L282	@,
1541:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4286              		.loc 1 1541 0
 4287 0016 0F24     		movs	r4, #15	@ tmp117,
 4288 0018 6C44     		add	r4, r4, sp	@ tmp117,
 4289 001a 174B     		ldr	r3, .L288	@ tmp118,
ARM GAS  /tmp/ccCNyPsy.s 			page 106


 4290 001c 1748     		ldr	r0, .L288+4	@ tmp119,
 4291 001e 0022     		movs	r2, #0	@,
 4292 0020 3221     		movs	r1, #50	@,
 4293 0022 FFF7FEFF 		bl	GSMSendCommand	@
 4294 0026 0300     		movs	r3, r0	@ tmp120,
 4295 0028 2370     		strb	r3, [r4]	@ tmp122, i
 4296 002a 11E0     		b	.L283	@
 4297              	.L282:
1542:src/sim900_800.c **** 	else if (sim == 2)
 4298              		.loc 1 1542 0
 4299 002c 6B46     		mov	r3, sp	@ tmp140,
 4300 002e 0733     		adds	r3, r3, #7	@ tmp123,
 4301 0030 1B78     		ldrb	r3, [r3]	@ tmp124, sim
 4302 0032 022B     		cmp	r3, #2	@ tmp124,
 4303 0034 0AD1     		bne	.L284	@,
1543:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=2\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4304              		.loc 1 1543 0
 4305 0036 0F24     		movs	r4, #15	@ tmp125,
 4306 0038 6C44     		add	r4, r4, sp	@ tmp125,
 4307 003a 0F4B     		ldr	r3, .L288	@ tmp126,
 4308 003c 1048     		ldr	r0, .L288+8	@ tmp127,
 4309 003e 0022     		movs	r2, #0	@,
 4310 0040 3221     		movs	r1, #50	@,
 4311 0042 FFF7FEFF 		bl	GSMSendCommand	@
 4312 0046 0300     		movs	r3, r0	@ tmp128,
 4313 0048 2370     		strb	r3, [r4]	@ tmp130, i
 4314 004a 01E0     		b	.L283	@
 4315              	.L284:
1544:src/sim900_800.c **** 	else
1545:src/sim900_800.c **** 		return 3;
 4316              		.loc 1 1545 0
 4317 004c 0323     		movs	r3, #3	@ D.7886,
 4318 004e 10E0     		b	.L285	@
 4319              	.L283:
1546:src/sim900_800.c **** 
1547:src/sim900_800.c **** 	if (i == 2)
 4320              		.loc 1 1547 0
 4321 0050 0F23     		movs	r3, #15	@ tmp131,
 4322 0052 6B44     		add	r3, r3, sp	@ tmp131,
 4323 0054 1B78     		ldrb	r3, [r3]	@ tmp132, i
 4324 0056 022B     		cmp	r3, #2	@ tmp132,
 4325 0058 01D1     		bne	.L286	@,
1548:src/sim900_800.c **** 	{
1549:src/sim900_800.c **** 		return 2;
 4326              		.loc 1 1549 0
 4327 005a 0223     		movs	r3, #2	@ D.7886,
 4328 005c 09E0     		b	.L285	@
 4329              	.L286:
1550:src/sim900_800.c **** 	}
1551:src/sim900_800.c **** 	if (i > 2)
 4330              		.loc 1 1551 0
 4331 005e 0F23     		movs	r3, #15	@ tmp133,
 4332 0060 6B44     		add	r3, r3, sp	@ tmp133,
 4333 0062 1B78     		ldrb	r3, [r3]	@ tmp134, i
 4334 0064 022B     		cmp	r3, #2	@ tmp134,
 4335 0066 03D9     		bls	.L287	@,
1552:src/sim900_800.c **** 	{
ARM GAS  /tmp/ccCNyPsy.s 			page 107


1553:src/sim900_800.c **** 		return i;
 4336              		.loc 1 1553 0
 4337 0068 0F23     		movs	r3, #15	@ tmp135,
 4338 006a 6B44     		add	r3, r3, sp	@ tmp135,
 4339 006c 1B78     		ldrb	r3, [r3]	@ D.7886, i
 4340 006e 00E0     		b	.L285	@
 4341              	.L287:
1554:src/sim900_800.c **** 	}
1555:src/sim900_800.c **** 
1556:src/sim900_800.c **** 	return 1;
 4342              		.loc 1 1556 0
 4343 0070 0123     		movs	r3, #1	@ D.7886,
 4344              	.L285:
1557:src/sim900_800.c **** }
 4345              		.loc 1 1557 0
 4346 0072 1800     		movs	r0, r3	@, <retval>
 4347 0074 04B0     		add	sp, sp, #16	@,,
 4348              		@ sp needed	@
 4349 0076 10BD     		pop	{r4, pc}
 4350              	.L289:
 4351              		.align	2
 4352              	.L288:
 4353 0078 00000000 		.word	GSMbuffRtaCommand
 4354 007c 00020000 		.word	.LC154
 4355 0080 10020000 		.word	.LC156
 4356              		.cfi_endproc
 4357              	.LFE30:
 4358              		.size	GSM_SetSIM, .-GSM_SetSIM
 4359              		.section	.rodata
 4360 021d 000000   		.align	2
 4361              	.LC162:
 4362 0220 41542B43 		.ascii	"AT+CIPSEND\015\012\000"
 4362      49505345 
 4362      4E440D0A 
 4362      00
 4363              		.section	.text.GSMSendIP,"ax",%progbits
 4364              		.align	2
 4365              		.global	GSMSendIP
 4366              		.code	16
 4367              		.thumb_func
 4368              		.type	GSMSendIP, %function
 4369              	GSMSendIP:
 4370              	.LFB31:
1558:src/sim900_800.c **** 
1559:src/sim900_800.c **** char GSMSendIP (char *ptrMSG, unsigned short timeOut)
1560:src/sim900_800.c **** {
 4371              		.loc 1 1560 0
 4372              		.cfi_startproc
 4373 0000 10B5     		push	{r4, lr}	@
 4374              	.LCFI17:
 4375              		.cfi_def_cfa_offset 8
 4376              		.cfi_offset 4, -8
 4377              		.cfi_offset 14, -4
 4378 0002 84B0     		sub	sp, sp, #16	@,,
 4379              	.LCFI18:
 4380              		.cfi_def_cfa_offset 24
 4381 0004 0190     		str	r0, [sp, #4]	@ ptrMSG, ptrMSG
ARM GAS  /tmp/ccCNyPsy.s 			page 108


 4382 0006 0A00     		movs	r2, r1	@ tmp121, timeOut
 4383 0008 6B46     		mov	r3, sp	@ tmp192,
 4384 000a 0233     		adds	r3, r3, #2	@ tmp122,
 4385 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
1561:src/sim900_800.c **** 	unsigned char i;
1562:src/sim900_800.c **** 
1563:src/sim900_800.c **** 	switch(GSMSendIPState)
 4386              		.loc 1 1563 0
 4387 000e 404B     		ldr	r3, .L305	@ tmp124,
 4388 0010 1B78     		ldrb	r3, [r3]	@ D.7889, GSMSendIPState
 4389 0012 012B     		cmp	r3, #1	@ D.7890,
 4390 0014 12D0     		beq	.L292	@,
 4391 0016 022B     		cmp	r3, #2	@ D.7890,
 4392 0018 47D0     		beq	.L293	@,
 4393 001a 002B     		cmp	r3, #0	@ D.7890,
 4394 001c 63D1     		bne	.L302	@,
1564:src/sim900_800.c **** 	{
1565:src/sim900_800.c **** 		case 0:
1566:src/sim900_800.c **** 			GSMSendIPFlag = 0;
 4395              		.loc 1 1566 0
 4396 001e 3D4B     		ldr	r3, .L305+4	@ tmp125,
 4397 0020 0022     		movs	r2, #0	@ tmp126,
 4398 0022 1A70     		strb	r2, [r3]	@ tmp127, GSMSendIPFlag
1567:src/sim900_800.c **** 			GSMSendIPTimeOut = timeOut;
 4399              		.loc 1 1567 0
 4400 0024 3C4B     		ldr	r3, .L305+8	@ tmp128,
 4401 0026 6A46     		mov	r2, sp	@ tmp193,
 4402 0028 0232     		adds	r2, r2, #2	@ tmp129,
 4403 002a 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 4404 002c 1A80     		strh	r2, [r3]	@ tmp130, GSMSendIPTimeOut
1568:src/sim900_800.c **** 			GSMSendIPState++;
 4405              		.loc 1 1568 0
 4406 002e 384B     		ldr	r3, .L305	@ tmp131,
 4407 0030 1B78     		ldrb	r3, [r3]	@ D.7889, GSMSendIPState
 4408 0032 0133     		adds	r3, r3, #1	@ tmp132,
 4409 0034 DAB2     		uxtb	r2, r3	@ D.7889, tmp132
 4410 0036 364B     		ldr	r3, .L305	@ tmp133,
 4411 0038 1A70     		strb	r2, [r3]	@ tmp134, GSMSendIPState
1569:src/sim900_800.c **** 			break;
 4412              		.loc 1 1569 0
 4413 003a 5BE0     		b	.L295	@
 4414              	.L292:
1570:src/sim900_800.c **** 
1571:src/sim900_800.c **** 		case 1:
1572:src/sim900_800.c **** 
1573:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSEND\r\n", 80, 0, &GSMbuffRtaCommand[0]);
 4415              		.loc 1 1573 0
 4416 003c 0F24     		movs	r4, #15	@ tmp135,
 4417 003e 6C44     		add	r4, r4, sp	@ tmp135,
 4418 0040 364B     		ldr	r3, .L305+12	@ tmp136,
 4419 0042 3748     		ldr	r0, .L305+16	@ tmp137,
 4420 0044 0022     		movs	r2, #0	@,
 4421 0046 5021     		movs	r1, #80	@,
 4422 0048 FFF7FEFF 		bl	GSMSendCommand	@
 4423 004c 0300     		movs	r3, r0	@ tmp138,
 4424 004e 2370     		strb	r3, [r4]	@ tmp140, i
1574:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 109


1575:src/sim900_800.c **** 			if (i == 2)
 4425              		.loc 1 1575 0
 4426 0050 0F23     		movs	r3, #15	@ tmp141,
 4427 0052 6B44     		add	r3, r3, sp	@ tmp141,
 4428 0054 1B78     		ldrb	r3, [r3]	@ tmp142, i
 4429 0056 022B     		cmp	r3, #2	@ tmp142,
 4430 0058 1DD1     		bne	.L296	@,
1576:src/sim900_800.c **** 			{
1577:src/sim900_800.c **** 
1578:src/sim900_800.c **** 				GSMSendIPbuffAux[0] = 0;
 4431              		.loc 1 1578 0
 4432 005a 324B     		ldr	r3, .L305+20	@ tmp143,
 4433 005c 0022     		movs	r2, #0	@ tmp144,
 4434 005e 1A70     		strb	r2, [r3]	@ tmp145, GSMSendIPbuffAux
1579:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], ptrMSG);
 4435              		.loc 1 1579 0
 4436 0060 019A     		ldr	r2, [sp, #4]	@ tmp146, ptrMSG
 4437 0062 304B     		ldr	r3, .L305+20	@ tmp147,
 4438 0064 1100     		movs	r1, r2	@, tmp146
 4439 0066 1800     		movs	r0, r3	@, tmp147
 4440 0068 FFF7FEFF 		bl	strcat	@
1580:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], "\032");
 4441              		.loc 1 1580 0
 4442 006c 2D4B     		ldr	r3, .L305+20	@ tmp148,
 4443 006e 1800     		movs	r0, r3	@, tmp148
 4444 0070 FFF7FEFF 		bl	strlen	@
 4445 0074 0300     		movs	r3, r0	@ tmp149,
 4446 0076 1A00     		movs	r2, r3	@ D.7891, tmp150
 4447 0078 2A4B     		ldr	r3, .L305+20	@ tmp151,
 4448 007a D218     		adds	r2, r2, r3	@ D.7892, D.7891, tmp151
 4449 007c 2A4B     		ldr	r3, .L305+24	@ tmp152,
 4450 007e 1000     		movs	r0, r2	@ tmp153, D.7892
 4451 0080 1900     		movs	r1, r3	@ tmp154, tmp152
 4452 0082 0223     		movs	r3, #2	@ tmp155,
 4453 0084 1A00     		movs	r2, r3	@, tmp155
 4454 0086 FFF7FEFF 		bl	memcpy	@
1581:src/sim900_800.c **** 				GSMSendIPState++;
 4455              		.loc 1 1581 0
 4456 008a 214B     		ldr	r3, .L305	@ tmp158,
 4457 008c 1B78     		ldrb	r3, [r3]	@ D.7889, GSMSendIPState
 4458 008e 0133     		adds	r3, r3, #1	@ tmp159,
 4459 0090 DAB2     		uxtb	r2, r3	@ D.7889, tmp159
 4460 0092 1F4B     		ldr	r3, .L305	@ tmp160,
 4461 0094 1A70     		strb	r2, [r3]	@ tmp161, GSMSendIPState
 4462              	.L296:
1582:src/sim900_800.c **** 			}
1583:src/sim900_800.c **** 
1584:src/sim900_800.c **** 			if (i > 2)
 4463              		.loc 1 1584 0
 4464 0096 0F23     		movs	r3, #15	@ tmp162,
 4465 0098 6B44     		add	r3, r3, sp	@ tmp162,
 4466 009a 1B78     		ldrb	r3, [r3]	@ tmp163, i
 4467 009c 022B     		cmp	r3, #2	@ tmp163,
 4468 009e 26D9     		bls	.L303	@,
1585:src/sim900_800.c **** 			{
1586:src/sim900_800.c **** 				GSMSendIPState = 0;
 4469              		.loc 1 1586 0
ARM GAS  /tmp/ccCNyPsy.s 			page 110


 4470 00a0 1B4B     		ldr	r3, .L305	@ tmp164,
 4471 00a2 0022     		movs	r2, #0	@ tmp165,
 4472 00a4 1A70     		strb	r2, [r3]	@ tmp166, GSMSendIPState
1587:src/sim900_800.c **** 				return 3;
 4473              		.loc 1 1587 0
 4474 00a6 0323     		movs	r3, #3	@ D.7889,
 4475 00a8 2FE0     		b	.L298	@
 4476              	.L293:
1588:src/sim900_800.c **** 			}
1589:src/sim900_800.c **** 			break;
1590:src/sim900_800.c **** 		case 2:
1591:src/sim900_800.c **** 
1592:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendIPbuffAux[0], 50, 0, &GSMbuffRtaCommand[0]);
 4477              		.loc 1 1592 0
 4478 00aa 0F24     		movs	r4, #15	@ tmp167,
 4479 00ac 6C44     		add	r4, r4, sp	@ tmp167,
 4480 00ae 1B4B     		ldr	r3, .L305+12	@ tmp168,
 4481 00b0 1C48     		ldr	r0, .L305+20	@ tmp169,
 4482 00b2 0022     		movs	r2, #0	@,
 4483 00b4 3221     		movs	r1, #50	@,
 4484 00b6 FFF7FEFF 		bl	GSMSendCommand	@
 4485 00ba 0300     		movs	r3, r0	@ tmp170,
 4486 00bc 2370     		strb	r3, [r4]	@ tmp172, i
1593:src/sim900_800.c **** 
1594:src/sim900_800.c **** 			if (i == 2)
 4487              		.loc 1 1594 0
 4488 00be 0F23     		movs	r3, #15	@ tmp173,
 4489 00c0 6B44     		add	r3, r3, sp	@ tmp173,
 4490 00c2 1B78     		ldrb	r3, [r3]	@ tmp174, i
 4491 00c4 022B     		cmp	r3, #2	@ tmp174,
 4492 00c6 04D1     		bne	.L299	@,
1595:src/sim900_800.c **** 			{
1596:src/sim900_800.c **** 				GSMSendIPState = 0;
 4493              		.loc 1 1596 0
 4494 00c8 114B     		ldr	r3, .L305	@ tmp175,
 4495 00ca 0022     		movs	r2, #0	@ tmp176,
 4496 00cc 1A70     		strb	r2, [r3]	@ tmp177, GSMSendIPState
1597:src/sim900_800.c **** 				return 2;
 4497              		.loc 1 1597 0
 4498 00ce 0223     		movs	r3, #2	@ D.7889,
 4499 00d0 1BE0     		b	.L298	@
 4500              	.L299:
1598:src/sim900_800.c **** 			}
1599:src/sim900_800.c **** 
1600:src/sim900_800.c **** 			if (i > 2)
 4501              		.loc 1 1600 0
 4502 00d2 0F23     		movs	r3, #15	@ tmp178,
 4503 00d4 6B44     		add	r3, r3, sp	@ tmp178,
 4504 00d6 1B78     		ldrb	r3, [r3]	@ tmp179, i
 4505 00d8 022B     		cmp	r3, #2	@ tmp179,
 4506 00da 0AD9     		bls	.L304	@,
1601:src/sim900_800.c **** 			{
1602:src/sim900_800.c **** 				GSMSendIPState = 0;
 4507              		.loc 1 1602 0
 4508 00dc 0C4B     		ldr	r3, .L305	@ tmp180,
 4509 00de 0022     		movs	r2, #0	@ tmp181,
 4510 00e0 1A70     		strb	r2, [r3]	@ tmp182, GSMSendIPState
ARM GAS  /tmp/ccCNyPsy.s 			page 111


1603:src/sim900_800.c **** 				return 3;
 4511              		.loc 1 1603 0
 4512 00e2 0323     		movs	r3, #3	@ D.7889,
 4513 00e4 11E0     		b	.L298	@
 4514              	.L302:
1604:src/sim900_800.c **** 			}
1605:src/sim900_800.c **** 			break;
1606:src/sim900_800.c **** 
1607:src/sim900_800.c **** 		default:
1608:src/sim900_800.c **** 			GSMSendIPState = 0;
 4515              		.loc 1 1608 0
 4516 00e6 0A4B     		ldr	r3, .L305	@ tmp183,
 4517 00e8 0022     		movs	r2, #0	@ tmp184,
 4518 00ea 1A70     		strb	r2, [r3]	@ tmp185, GSMSendIPState
1609:src/sim900_800.c **** 			break;
 4519              		.loc 1 1609 0
 4520 00ec 02E0     		b	.L295	@
 4521              	.L303:
1589:src/sim900_800.c **** 		case 2:
 4522              		.loc 1 1589 0
 4523 00ee C046     		nop
 4524 00f0 00E0     		b	.L295	@
 4525              	.L304:
1605:src/sim900_800.c **** 
 4526              		.loc 1 1605 0
 4527 00f2 C046     		nop
 4528              	.L295:
1610:src/sim900_800.c **** 	}
1611:src/sim900_800.c **** 
1612:src/sim900_800.c **** 	if (GSMSendIPTimeOut == 0)
 4529              		.loc 1 1612 0
 4530 00f4 084B     		ldr	r3, .L305+8	@ tmp186,
 4531 00f6 1B88     		ldrh	r3, [r3]	@ tmp187, GSMSendIPTimeOut
 4532 00f8 9BB2     		uxth	r3, r3	@ D.7893, tmp187
 4533 00fa 002B     		cmp	r3, #0	@ D.7893,
 4534 00fc 04D1     		bne	.L301	@,
1613:src/sim900_800.c **** 	{
1614:src/sim900_800.c **** 		GSMSendIPState = 0;
 4535              		.loc 1 1614 0
 4536 00fe 044B     		ldr	r3, .L305	@ tmp188,
 4537 0100 0022     		movs	r2, #0	@ tmp189,
 4538 0102 1A70     		strb	r2, [r3]	@ tmp190, GSMSendIPState
1615:src/sim900_800.c **** 		return 4;
 4539              		.loc 1 1615 0
 4540 0104 0423     		movs	r3, #4	@ D.7889,
 4541 0106 00E0     		b	.L298	@
 4542              	.L301:
1616:src/sim900_800.c **** 	}
1617:src/sim900_800.c **** 
1618:src/sim900_800.c **** 	return 1;
 4543              		.loc 1 1618 0
 4544 0108 0123     		movs	r3, #1	@ D.7889,
 4545              	.L298:
1619:src/sim900_800.c **** }
 4546              		.loc 1 1619 0
 4547 010a 1800     		movs	r0, r3	@, <retval>
 4548 010c 04B0     		add	sp, sp, #16	@,,
ARM GAS  /tmp/ccCNyPsy.s 			page 112


 4549              		@ sp needed	@
 4550 010e 10BD     		pop	{r4, pc}
 4551              	.L306:
 4552              		.align	2
 4553              	.L305:
 4554 0110 00000000 		.word	GSMSendIPState
 4555 0114 00000000 		.word	GSMSendIPFlag
 4556 0118 00000000 		.word	GSMSendIPTimeOut
 4557 011c 00000000 		.word	GSMbuffRtaCommand
 4558 0120 20020000 		.word	.LC162
 4559 0124 00000000 		.word	GSMSendIPbuffAux
 4560 0128 F0000000 		.word	.LC94
 4561              		.cfi_endproc
 4562              	.LFE31:
 4563              		.size	GSMSendIP, .-GSMSendIP
 4564              		.section	.text.GSMTimeoutCounters,"ax",%progbits
 4565              		.align	2
 4566              		.global	GSMTimeoutCounters
 4567              		.code	16
 4568              		.thumb_func
 4569              		.type	GSMTimeoutCounters, %function
 4570              	GSMTimeoutCounters:
 4571              	.LFB32:
1620:src/sim900_800.c **** 
1621:src/sim900_800.c **** 
1622:src/sim900_800.c **** /*
1623:src/sim900_800.c **** void USART2_IRQHandler(void)
1624:src/sim900_800.c **** {
1625:src/sim900_800.c **** 	//--- Recepcion ---//
1626:src/sim900_800.c **** 	if(USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)
1627:src/sim900_800.c **** 	{
1628:src/sim900_800.c **** 
1629:src/sim900_800.c **** 		//Lectura del dato recibido.
1630:src/sim900_800.c **** 		*pBuffUARTGSMrxW = USART_ReceiveData(USART2);
1631:src/sim900_800.c **** 
1632:src/sim900_800.c **** 		if (*(pBuffUARTGSMrxW) != 0)
1633:src/sim900_800.c **** 		{
1634:src/sim900_800.c **** 			if ((*(pBuffUARTGSMrxW) == '\n') || (*(pBuffUARTGSMrxW) == '>'))
1635:src/sim900_800.c **** 			{
1636:src/sim900_800.c **** 				*(pBuffUARTGSMrxW+1) = 0;
1637:src/sim900_800.c **** 
1638:src/sim900_800.c **** 				//strncpy((char *)&buffUARTGSMrx2[0], (const char *)&buffUARTGSMrx[0], (counterUARTGSM+1));
1639:src/sim900_800.c **** 				strcpy((char *)&buffUARTGSMrx2[0], (const char *)&buffUARTGSMrx[0]);
1640:src/sim900_800.c **** 
1641:src/sim900_800.c **** 				//PacketReadyUARTGSM = counterUARTGSM;
1642:src/sim900_800.c **** 				PacketReadyUARTGSM = 1;
1643:src/sim900_800.c **** 				pBuffUARTGSMrxW = &buffUARTGSMrx[0];
1644:src/sim900_800.c **** 				*pBuffUARTGSMrxW = 0;
1645:src/sim900_800.c **** 				counterUARTGSM = 0;
1646:src/sim900_800.c **** 			}
1647:src/sim900_800.c **** 			else
1648:src/sim900_800.c **** 			{
1649:src/sim900_800.c **** 				//counterUARTGSM++;
1650:src/sim900_800.c **** 
1651:src/sim900_800.c **** 				//-- Mueve el puntero ---//
1652:src/sim900_800.c **** 				if (pBuffUARTGSMrxW < &buffUARTGSMrx[buffUARTGSMrx_dimension - 2])
1653:src/sim900_800.c **** 					pBuffUARTGSMrxW++;
ARM GAS  /tmp/ccCNyPsy.s 			page 113


1654:src/sim900_800.c **** 				else
1655:src/sim900_800.c **** 					pBuffUARTGSMrxW = &buffUARTGSMrx[0];
1656:src/sim900_800.c **** 
1657:src/sim900_800.c **** 				//RN171UART_TimeOut = 10;
1658:src/sim900_800.c **** 			}
1659:src/sim900_800.c **** 		}
1660:src/sim900_800.c **** 		USART2->SR &= ~USART_FLAG_RXNE;
1661:src/sim900_800.c **** 	}
1662:src/sim900_800.c **** 	//--- Transmision ---//
1663:src/sim900_800.c **** 	if(USART_GetITStatus(USART2, USART_IT_TXE) != RESET)
1664:src/sim900_800.c **** 	{
1665:src/sim900_800.c **** 
1666:src/sim900_800.c **** 		//if (*pBuffUARTGSMtxR == '\n')
1667:src/sim900_800.c **** 		if (pBuffUARTGSMtxR == pBuffUARTGSMtxW)
1668:src/sim900_800.c **** 		{
1669:src/sim900_800.c **** 
1670:src/sim900_800.c **** 			pBuffUARTGSMtxR =  buffUARTGSMtx;
1671:src/sim900_800.c **** 			pBuffUARTGSMtxW =  buffUARTGSMtx;
1672:src/sim900_800.c **** 
1673:src/sim900_800.c **** 			USART_ITConfig(USART2, USART_IT_TXE, DISABLE);
1674:src/sim900_800.c **** 		}
1675:src/sim900_800.c **** 		else
1676:src/sim900_800.c **** 		{
1677:src/sim900_800.c **** 			if (*pBuffUARTGSMtxR)
1678:src/sim900_800.c **** 				USART2->DR = (*pBuffUARTGSMtxR & 0xFF);
1679:src/sim900_800.c **** 			else
1680:src/sim900_800.c **** 			{
1681:src/sim900_800.c **** 				pBuffUARTGSMtxR = buffUARTGSMtx;
1682:src/sim900_800.c **** 				pBuffUARTGSMtxW = buffUARTGSMtx;
1683:src/sim900_800.c **** 			}
1684:src/sim900_800.c **** 
1685:src/sim900_800.c **** 			if(pBuffUARTGSMtxR != &buffUARTGSMtx[buffUARTGSMrx_dimension - 1])
1686:src/sim900_800.c **** 			{
1687:src/sim900_800.c **** 				pBuffUARTGSMtxR++;
1688:src/sim900_800.c **** 			}
1689:src/sim900_800.c **** 			else
1690:src/sim900_800.c **** 			{
1691:src/sim900_800.c **** 				pBuffUARTGSMtxR = buffUARTGSMtx;
1692:src/sim900_800.c **** 			}
1693:src/sim900_800.c **** 		}
1694:src/sim900_800.c **** 
1695:src/sim900_800.c **** 		USART2->SR &= ~USART_IT_TXE;
1696:src/sim900_800.c **** 	}
1697:src/sim900_800.c **** }
1698:src/sim900_800.c **** */
1699:src/sim900_800.c **** 
1700:src/sim900_800.c **** void GSMTimeoutCounters (void)
1701:src/sim900_800.c **** {
 4572              		.loc 1 1701 0
 4573              		.cfi_startproc
1702:src/sim900_800.c **** 	if (GSMStartTime)
 4574              		.loc 1 1702 0
 4575 0000 2E4B     		ldr	r3, .L317	@ tmp134,
 4576 0002 1B88     		ldrh	r3, [r3]	@ tmp135, GSMStartTime
 4577 0004 9BB2     		uxth	r3, r3	@ D.7898, tmp135
 4578 0006 002B     		cmp	r3, #0	@ D.7898,
 4579 0008 06D0     		beq	.L308	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 114


1703:src/sim900_800.c **** 		GSMStartTime--;
 4580              		.loc 1 1703 0
 4581 000a 2C4B     		ldr	r3, .L317	@ tmp136,
 4582 000c 1B88     		ldrh	r3, [r3]	@ tmp137, GSMStartTime
 4583 000e 9BB2     		uxth	r3, r3	@ D.7898, tmp137
 4584 0010 013B     		subs	r3, r3, #1	@ tmp138,
 4585 0012 9AB2     		uxth	r2, r3	@ D.7898, tmp138
 4586 0014 294B     		ldr	r3, .L317	@ tmp139,
 4587 0016 1A80     		strh	r2, [r3]	@ tmp140, GSMStartTime
 4588              	.L308:
1704:src/sim900_800.c **** 
1705:src/sim900_800.c **** 	if(GSMSendCommandTimeOut)
 4589              		.loc 1 1705 0
 4590 0018 294B     		ldr	r3, .L317+4	@ tmp141,
 4591 001a 1B88     		ldrh	r3, [r3]	@ tmp142, GSMSendCommandTimeOut
 4592 001c 9BB2     		uxth	r3, r3	@ D.7898, tmp142
 4593 001e 002B     		cmp	r3, #0	@ D.7898,
 4594 0020 06D0     		beq	.L309	@,
1706:src/sim900_800.c **** 		GSMSendCommandTimeOut--;
 4595              		.loc 1 1706 0
 4596 0022 274B     		ldr	r3, .L317+4	@ tmp143,
 4597 0024 1B88     		ldrh	r3, [r3]	@ tmp144, GSMSendCommandTimeOut
 4598 0026 9BB2     		uxth	r3, r3	@ D.7898, tmp144
 4599 0028 013B     		subs	r3, r3, #1	@ tmp145,
 4600 002a 9AB2     		uxth	r2, r3	@ D.7898, tmp145
 4601 002c 244B     		ldr	r3, .L317+4	@ tmp146,
 4602 002e 1A80     		strh	r2, [r3]	@ tmp147, GSMSendCommandTimeOut
 4603              	.L309:
1707:src/sim900_800.c **** 
1708:src/sim900_800.c **** 	if(GSMConfigTimeOut)
 4604              		.loc 1 1708 0
 4605 0030 244B     		ldr	r3, .L317+8	@ tmp148,
 4606 0032 1B88     		ldrh	r3, [r3]	@ tmp149, GSMConfigTimeOut
 4607 0034 9BB2     		uxth	r3, r3	@ D.7898, tmp149
 4608 0036 002B     		cmp	r3, #0	@ D.7898,
 4609 0038 06D0     		beq	.L310	@,
1709:src/sim900_800.c **** 		GSMConfigTimeOut--;
 4610              		.loc 1 1709 0
 4611 003a 224B     		ldr	r3, .L317+8	@ tmp150,
 4612 003c 1B88     		ldrh	r3, [r3]	@ tmp151, GSMConfigTimeOut
 4613 003e 9BB2     		uxth	r3, r3	@ D.7898, tmp151
 4614 0040 013B     		subs	r3, r3, #1	@ tmp152,
 4615 0042 9AB2     		uxth	r2, r3	@ D.7898, tmp152
 4616 0044 1F4B     		ldr	r3, .L317+8	@ tmp153,
 4617 0046 1A80     		strh	r2, [r3]	@ tmp154, GSMConfigTimeOut
 4618              	.L310:
1710:src/sim900_800.c **** 
1711:src/sim900_800.c **** 	if(GSMConfigTime)
 4619              		.loc 1 1711 0
 4620 0048 1F4B     		ldr	r3, .L317+12	@ tmp155,
 4621 004a 1B88     		ldrh	r3, [r3]	@ tmp156, GSMConfigTime
 4622 004c 9BB2     		uxth	r3, r3	@ D.7898, tmp156
 4623 004e 002B     		cmp	r3, #0	@ D.7898,
 4624 0050 06D0     		beq	.L311	@,
1712:src/sim900_800.c **** 		GSMConfigTime--;
 4625              		.loc 1 1712 0
 4626 0052 1D4B     		ldr	r3, .L317+12	@ tmp157,
ARM GAS  /tmp/ccCNyPsy.s 			page 115


 4627 0054 1B88     		ldrh	r3, [r3]	@ tmp158, GSMConfigTime
 4628 0056 9BB2     		uxth	r3, r3	@ D.7898, tmp158
 4629 0058 013B     		subs	r3, r3, #1	@ tmp159,
 4630 005a 9AB2     		uxth	r2, r3	@ D.7898, tmp159
 4631 005c 1A4B     		ldr	r3, .L317+12	@ tmp160,
 4632 005e 1A80     		strh	r2, [r3]	@ tmp161, GSMConfigTime
 4633              	.L311:
1713:src/sim900_800.c **** 
1714:src/sim900_800.c **** 	if(GSMSendSMSTimeOut)
 4634              		.loc 1 1714 0
 4635 0060 1A4B     		ldr	r3, .L317+16	@ tmp162,
 4636 0062 1B88     		ldrh	r3, [r3]	@ tmp163, GSMSendSMSTimeOut
 4637 0064 9BB2     		uxth	r3, r3	@ D.7898, tmp163
 4638 0066 002B     		cmp	r3, #0	@ D.7898,
 4639 0068 06D0     		beq	.L312	@,
1715:src/sim900_800.c **** 		GSMSendSMSTimeOut--;
 4640              		.loc 1 1715 0
 4641 006a 184B     		ldr	r3, .L317+16	@ tmp164,
 4642 006c 1B88     		ldrh	r3, [r3]	@ tmp165, GSMSendSMSTimeOut
 4643 006e 9BB2     		uxth	r3, r3	@ D.7898, tmp165
 4644 0070 013B     		subs	r3, r3, #1	@ tmp166,
 4645 0072 9AB2     		uxth	r2, r3	@ D.7898, tmp166
 4646 0074 154B     		ldr	r3, .L317+16	@ tmp167,
 4647 0076 1A80     		strh	r2, [r3]	@ tmp168, GSMSendSMSTimeOut
 4648              	.L312:
1716:src/sim900_800.c **** 
1717:src/sim900_800.c **** 	if(GSMConfigGPRSTimeOut)
 4649              		.loc 1 1717 0
 4650 0078 154B     		ldr	r3, .L317+20	@ tmp169,
 4651 007a 1B88     		ldrh	r3, [r3]	@ D.7898, GSMConfigGPRSTimeOut
 4652 007c 002B     		cmp	r3, #0	@ D.7898,
 4653 007e 05D0     		beq	.L313	@,
1718:src/sim900_800.c **** 		GSMConfigGPRSTimeOut--;
 4654              		.loc 1 1718 0
 4655 0080 134B     		ldr	r3, .L317+20	@ tmp170,
 4656 0082 1B88     		ldrh	r3, [r3]	@ D.7898, GSMConfigGPRSTimeOut
 4657 0084 013B     		subs	r3, r3, #1	@ tmp171,
 4658 0086 9AB2     		uxth	r2, r3	@ D.7898, tmp171
 4659 0088 114B     		ldr	r3, .L317+20	@ tmp172,
 4660 008a 1A80     		strh	r2, [r3]	@ tmp173, GSMConfigGPRSTimeOut
 4661              	.L313:
1719:src/sim900_800.c **** 
1720:src/sim900_800.c **** 	if(GSMSendIPTimeOut)
 4662              		.loc 1 1720 0
 4663 008c 114B     		ldr	r3, .L317+24	@ tmp174,
 4664 008e 1B88     		ldrh	r3, [r3]	@ tmp175, GSMSendIPTimeOut
 4665 0090 9BB2     		uxth	r3, r3	@ D.7898, tmp175
 4666 0092 002B     		cmp	r3, #0	@ D.7898,
 4667 0094 06D0     		beq	.L314	@,
1721:src/sim900_800.c **** 		GSMSendIPTimeOut--;
 4668              		.loc 1 1721 0
 4669 0096 0F4B     		ldr	r3, .L317+24	@ tmp176,
 4670 0098 1B88     		ldrh	r3, [r3]	@ tmp177, GSMSendIPTimeOut
 4671 009a 9BB2     		uxth	r3, r3	@ D.7898, tmp177
 4672 009c 013B     		subs	r3, r3, #1	@ tmp178,
 4673 009e 9AB2     		uxth	r2, r3	@ D.7898, tmp178
 4674 00a0 0C4B     		ldr	r3, .L317+24	@ tmp179,
ARM GAS  /tmp/ccCNyPsy.s 			page 116


 4675 00a2 1A80     		strh	r2, [r3]	@ tmp180, GSMSendIPTimeOut
 4676              	.L314:
1722:src/sim900_800.c **** 
1723:src/sim900_800.c **** 	if (prestadorSimTime)
 4677              		.loc 1 1723 0
 4678 00a4 0C4B     		ldr	r3, .L317+28	@ tmp181,
 4679 00a6 1B78     		ldrb	r3, [r3]	@ D.7899, prestadorSimTime
 4680 00a8 002B     		cmp	r3, #0	@ D.7899,
 4681 00aa 05D0     		beq	.L316	@,
1724:src/sim900_800.c **** 		prestadorSimTime--;
 4682              		.loc 1 1724 0
 4683 00ac 0A4B     		ldr	r3, .L317+28	@ tmp182,
 4684 00ae 1B78     		ldrb	r3, [r3]	@ D.7899, prestadorSimTime
 4685 00b0 013B     		subs	r3, r3, #1	@ tmp183,
 4686 00b2 DAB2     		uxtb	r2, r3	@ D.7899, tmp183
 4687 00b4 084B     		ldr	r3, .L317+28	@ tmp184,
 4688 00b6 1A70     		strb	r2, [r3]	@ tmp185, prestadorSimTime
 4689              	.L316:
1725:src/sim900_800.c **** 
1726:src/sim900_800.c **** }
 4690              		.loc 1 1726 0
 4691 00b8 C046     		nop
 4692              		@ sp needed	@
 4693 00ba 7047     		bx	lr
 4694              	.L318:
 4695              		.align	2
 4696              	.L317:
 4697 00bc 00000000 		.word	GSMStartTime
 4698 00c0 00000000 		.word	GSMSendCommandTimeOut
 4699 00c4 00000000 		.word	GSMConfigTimeOut
 4700 00c8 00000000 		.word	GSMConfigTime
 4701 00cc 00000000 		.word	GSMSendSMSTimeOut
 4702 00d0 00000000 		.word	GSMConfigGPRSTimeOut
 4703 00d4 00000000 		.word	GSMSendIPTimeOut
 4704 00d8 00000000 		.word	prestadorSimTime
 4705              		.cfi_endproc
 4706              	.LFE32:
 4707              		.size	GSMTimeoutCounters, .-GSMTimeoutCounters
 4708              		.section	.rodata
 4709 022d 000000   		.align	2
 4710              	.LC179:
 4711 0230 41542B43 		.ascii	"AT+CMGR=%d\015\012\000"
 4711      4D47523D 
 4711      25640D0A 
 4711      00
 4712 023d 000000   		.align	2
 4713              	.LC183:
 4714 0240 2B434D47 		.ascii	"+CMGR:\000"
 4714      523A00
 4715 0247 00       		.align	2
 4716              	.LC186:
 4717 0248 3030303A 		.ascii	"000: ARM\000"
 4717      2041524D 
 4717      00
 4718 0251 000000   		.align	2
 4719              	.LC190:
 4720 0254 3030303A 		.ascii	"000: DRM\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 117


 4720      2044524D 
 4720      00
 4721 025d 000000   		.align	2
 4722              	.LC192:
 4723 0260 41542B43 		.ascii	"AT+CMGDA=\"DEL READ\"\015\012\000"
 4723      4D474441 
 4723      3D224445 
 4723      4C205245 
 4723      4144220D 
 4724              		.section	.text.GSMrxSMS,"ax",%progbits
 4725              		.align	2
 4726              		.global	GSMrxSMS
 4727              		.code	16
 4728              		.thumb_func
 4729              		.type	GSMrxSMS, %function
 4730              	GSMrxSMS:
 4731              	.LFB33:
1727:src/sim900_800.c **** 
1728:src/sim900_800.c **** 
1729:src/sim900_800.c **** //---------------------------------------------------------//
1730:src/sim900_800.c **** //void GSMrxSMS(char * ptrMSG, char *ptrNumTel, char flagSMSin)
1731:src/sim900_800.c **** //---------------------------------------------------------//
1732:src/sim900_800.c **** void GSMrxSMS(unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsign
1733:src/sim900_800.c **** {
 4732              		.loc 1 1733 0
 4733              		.cfi_startproc
 4734 0000 10B5     		push	{r4, lr}	@
 4735              	.LCFI19:
 4736              		.cfi_def_cfa_offset 8
 4737              		.cfi_offset 4, -8
 4738              		.cfi_offset 14, -4
 4739 0002 86B0     		sub	sp, sp, #24	@,,
 4740              	.LCFI20:
 4741              		.cfi_def_cfa_offset 32
 4742 0004 0390     		str	r0, [sp, #12]	@ pAlertasReportar, pAlertasReportar
 4743 0006 0291     		str	r1, [sp, #8]	@ puserCode, puserCode
 4744 0008 0192     		str	r2, [sp, #4]	@ pclaveAct, pclaveAct
 4745 000a 0093     		str	r3, [sp]	@ pActDact, pActDact
1734:src/sim900_800.c **** 	unsigned char i;
1735:src/sim900_800.c **** 	unsigned char flag;
1736:src/sim900_800.c **** 
1737:src/sim900_800.c **** 	if (GSMCantSMS)
 4746              		.loc 1 1737 0
 4747 000c D04B     		ldr	r3, .L378	@ tmp214,
 4748 000e 1B78     		ldrb	r3, [r3]	@ D.7900, GSMCantSMS
 4749 0010 002B     		cmp	r3, #0	@ D.7900,
 4750 0012 00D1     		bne	.LCB3877	@
 4751 0014 5CE1     		b	.L320	@long jump	@
 4752              	.LCB3877:
1738:src/sim900_800.c **** 	{
1739:src/sim900_800.c **** 		switch(GSMrxSMSState)
 4753              		.loc 1 1739 0
 4754 0016 CF4B     		ldr	r3, .L378+4	@ tmp215,
 4755 0018 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 4756 001a 012B     		cmp	r3, #1	@ D.7901,
 4757 001c 0BD0     		beq	.L322	@,
 4758 001e 022B     		cmp	r3, #2	@ D.7901,
ARM GAS  /tmp/ccCNyPsy.s 			page 118


 4759 0020 25D0     		beq	.L323	@,
 4760 0022 002B     		cmp	r3, #0	@ D.7901,
 4761 0024 00D0     		beq	.LCB3885	@
 4762 0026 4EE1     		b	.L367	@long jump	@
 4763              	.LCB3885:
1740:src/sim900_800.c **** 		{
1741:src/sim900_800.c **** 
1742:src/sim900_800.c **** 			case 0:
1743:src/sim900_800.c **** 				GSMrxSMSState++;
 4764              		.loc 1 1743 0
 4765 0028 CA4B     		ldr	r3, .L378+4	@ tmp216,
 4766 002a 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 4767 002c 0133     		adds	r3, r3, #1	@ tmp217,
 4768 002e DAB2     		uxtb	r2, r3	@ D.7900, tmp217
 4769 0030 C84B     		ldr	r3, .L378+4	@ tmp218,
 4770 0032 1A70     		strb	r2, [r3]	@ tmp219, GSMrxSMSState
1744:src/sim900_800.c **** 				break;
 4771              		.loc 1 1744 0
 4772 0034 DBE2     		b	.L344	@
 4773              	.L322:
1745:src/sim900_800.c **** 			case 1:
1746:src/sim900_800.c **** 				i = GSM_SetSIM (1);
 4774              		.loc 1 1746 0
 4775 0036 1724     		movs	r4, #23	@ tmp220,
 4776 0038 6C44     		add	r4, r4, sp	@ tmp220,
 4777 003a 0120     		movs	r0, #1	@,
 4778 003c FFF7FEFF 		bl	GSM_SetSIM	@
 4779 0040 0300     		movs	r3, r0	@ tmp221,
 4780 0042 2370     		strb	r3, [r4]	@ tmp223, i
1747:src/sim900_800.c **** 
1748:src/sim900_800.c **** 				if (i == 2)
 4781              		.loc 1 1748 0
 4782 0044 1723     		movs	r3, #23	@ tmp224,
 4783 0046 6B44     		add	r3, r3, sp	@ tmp224,
 4784 0048 1B78     		ldrb	r3, [r3]	@ tmp225, i
 4785 004a 022B     		cmp	r3, #2	@ tmp225,
 4786 004c 05D1     		bne	.L326	@,
1749:src/sim900_800.c **** 					GSMrxSMSState++;
 4787              		.loc 1 1749 0
 4788 004e C14B     		ldr	r3, .L378+4	@ tmp226,
 4789 0050 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 4790 0052 0133     		adds	r3, r3, #1	@ tmp227,
 4791 0054 DAB2     		uxtb	r2, r3	@ D.7900, tmp227
 4792 0056 BF4B     		ldr	r3, .L378+4	@ tmp228,
 4793 0058 1A70     		strb	r2, [r3]	@ tmp229, GSMrxSMSState
 4794              	.L326:
1750:src/sim900_800.c **** 				if (i > 2)
 4795              		.loc 1 1750 0
 4796 005a 1723     		movs	r3, #23	@ tmp230,
 4797 005c 6B44     		add	r3, r3, sp	@ tmp230,
 4798 005e 1B78     		ldrb	r3, [r3]	@ tmp231, i
 4799 0060 022B     		cmp	r3, #2	@ tmp231,
 4800 0062 00D8     		bhi	.LCB3919	@
 4801 0064 BCE2     		b	.L371	@long jump	@
 4802              	.LCB3919:
1751:src/sim900_800.c **** 					GSMrxSMSState=0;
 4803              		.loc 1 1751 0
ARM GAS  /tmp/ccCNyPsy.s 			page 119


 4804 0066 BB4B     		ldr	r3, .L378+4	@ tmp232,
 4805 0068 0022     		movs	r2, #0	@ tmp233,
 4806 006a 1A70     		strb	r2, [r3]	@ tmp234, GSMrxSMSState
1752:src/sim900_800.c **** 				break;
 4807              		.loc 1 1752 0
 4808 006c B8E2     		b	.L371	@
 4809              	.L323:
1753:src/sim900_800.c **** 
1754:src/sim900_800.c **** 			case 2:
1755:src/sim900_800.c **** 					//Verifico que no hayan sido leidos los SMS.
1756:src/sim900_800.c **** 					if (GSMnumSMS <= GSMCantSMS)
 4810              		.loc 1 1756 0
 4811 006e BA4B     		ldr	r3, .L378+8	@ tmp235,
 4812 0070 1A78     		ldrb	r2, [r3]	@ D.7900, GSMnumSMS
 4813 0072 B74B     		ldr	r3, .L378	@ tmp236,
 4814 0074 1B78     		ldrb	r3, [r3]	@ D.7900, GSMCantSMS
 4815 0076 9A42     		cmp	r2, r3	@ D.7900, D.7900
 4816 0078 00D9     		bls	.LCB3932	@
 4817 007a FDE0     		b	.L328	@long jump	@
 4818              	.LCB3932:
1757:src/sim900_800.c **** 					{
1758:src/sim900_800.c **** 						switch(GSMReadSMSState)
 4819              		.loc 1 1758 0
 4820 007c B74B     		ldr	r3, .L378+12	@ tmp237,
 4821 007e 1B78     		ldrb	r3, [r3]	@ D.7902, GSMReadSMSState
 4822 0080 002B     		cmp	r3, #0	@ D.7901,
 4823 0082 02D0     		beq	.L330	@,
 4824 0084 012B     		cmp	r3, #1	@ D.7901,
 4825 0086 12D0     		beq	.L331	@,
 4826 0088 F1E0     		b	.L368	@
 4827              	.L330:
1759:src/sim900_800.c **** 						{
1760:src/sim900_800.c **** 							case 0:
1761:src/sim900_800.c **** 								GSMReadSMSrepIn[0] = 0;
 4828              		.loc 1 1761 0
 4829 008a B54B     		ldr	r3, .L378+16	@ tmp238,
 4830 008c 0022     		movs	r2, #0	@ tmp239,
 4831 008e 1A70     		strb	r2, [r3]	@ tmp240, GSMReadSMSrepIn
1762:src/sim900_800.c **** 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
 4832              		.loc 1 1762 0
 4833 0090 B14B     		ldr	r3, .L378+8	@ tmp241,
 4834 0092 1B78     		ldrb	r3, [r3]	@ D.7900, GSMnumSMS
 4835 0094 1A00     		movs	r2, r3	@ D.7901, D.7900
 4836 0096 B349     		ldr	r1, .L378+20	@ tmp242,
 4837 0098 B34B     		ldr	r3, .L378+24	@ tmp243,
 4838 009a 1800     		movs	r0, r3	@, tmp243
 4839 009c FFF7FEFF 		bl	sprintf	@
1763:src/sim900_800.c **** 								GSMReadSMSState++;
 4840              		.loc 1 1763 0
 4841 00a0 AE4B     		ldr	r3, .L378+12	@ tmp244,
 4842 00a2 1B78     		ldrb	r3, [r3]	@ D.7902, GSMReadSMSState
 4843 00a4 0133     		adds	r3, r3, #1	@ tmp245,
 4844 00a6 DAB2     		uxtb	r2, r3	@ D.7902, tmp245
 4845 00a8 AC4B     		ldr	r3, .L378+12	@ tmp246,
 4846 00aa 1A70     		strb	r2, [r3]	@ tmp247, GSMReadSMSState
1764:src/sim900_800.c **** 								break;
 4847              		.loc 1 1764 0
ARM GAS  /tmp/ccCNyPsy.s 			page 120


 4848 00ac 0AE1     		b	.L342	@
 4849              	.L331:
1765:src/sim900_800.c **** 
1766:src/sim900_800.c **** 							case 1:
1767:src/sim900_800.c **** 
1768:src/sim900_800.c **** 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
 4850              		.loc 1 1768 0
 4851 00ae 1724     		movs	r4, #23	@ tmp248,
 4852 00b0 6C44     		add	r4, r4, sp	@ tmp248,
 4853 00b2 AE4B     		ldr	r3, .L378+28	@ tmp249,
 4854 00b4 AC48     		ldr	r0, .L378+24	@ tmp250,
 4855 00b6 0122     		movs	r2, #1	@,
 4856 00b8 0F21     		movs	r1, #15	@,
 4857 00ba FFF7FEFF 		bl	GSMSendCommand	@
 4858 00be 0300     		movs	r3, r0	@ tmp251,
 4859 00c0 2370     		strb	r3, [r4]	@ tmp253, i
1769:src/sim900_800.c **** 
1770:src/sim900_800.c **** 								if (i == 2)
 4860              		.loc 1 1770 0
 4861 00c2 1723     		movs	r3, #23	@ tmp254,
 4862 00c4 6B44     		add	r3, r3, sp	@ tmp254,
 4863 00c6 1B78     		ldrb	r3, [r3]	@ tmp255, i
 4864 00c8 022B     		cmp	r3, #2	@ tmp255,
 4865 00ca 00D0     		beq	.LCB3976	@
 4866 00cc C6E0     		b	.L333	@long jump	@
 4867              	.LCB3976:
1771:src/sim900_800.c **** 								{
1772:src/sim900_800.c **** 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 4868              		.loc 1 1772 0
 4869 00ce A849     		ldr	r1, .L378+32	@ tmp256,
 4870 00d0 A64B     		ldr	r3, .L378+28	@ tmp257,
 4871 00d2 0622     		movs	r2, #6	@,
 4872 00d4 1800     		movs	r0, r3	@, tmp257
 4873 00d6 FFF7FEFF 		bl	strncmp	@
 4874 00da 031E     		subs	r3, r0, #0	@ D.7901,,
 4875 00dc 00D0     		beq	.LCB3984	@
 4876 00de BDE0     		b	.L333	@long jump	@
 4877              	.LCB3984:
1773:src/sim900_800.c **** 									{
1774:src/sim900_800.c **** 
1775:src/sim900_800.c **** 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
 4878              		.loc 1 1775 0
 4879 00e0 A449     		ldr	r1, .L378+36	@ tmp258,
 4880 00e2 9F4B     		ldr	r3, .L378+16	@ tmp259,
 4881 00e4 0422     		movs	r2, #4	@,
 4882 00e6 1800     		movs	r0, r3	@, tmp259
 4883 00e8 FFF7FEFF 		bl	strncmp	@
 4884 00ec 031E     		subs	r3, r0, #0	@ D.7901,,
 4885 00ee 00D0     		beq	.LCB3992	@
 4886 00f0 ABE0     		b	.L334	@long jump	@
 4887              	.LCB3992:
1776:src/sim900_800.c **** 										{
1777:src/sim900_800.c **** 											i = 0;
 4888              		.loc 1 1777 0
 4889 00f2 1723     		movs	r3, #23	@ tmp260,
 4890 00f4 6B44     		add	r3, r3, sp	@ tmp260,
 4891 00f6 0022     		movs	r2, #0	@ tmp261,
ARM GAS  /tmp/ccCNyPsy.s 			page 121


 4892 00f8 1A70     		strb	r2, [r3]	@ tmp262, i
1778:src/sim900_800.c **** 											flag = 0;
 4893              		.loc 1 1778 0
 4894 00fa 1623     		movs	r3, #22	@ tmp263,
 4895 00fc 6B44     		add	r3, r3, sp	@ tmp263,
 4896 00fe 0022     		movs	r2, #0	@ tmp264,
 4897 0100 1A70     		strb	r2, [r3]	@ tmp265, flag
1779:src/sim900_800.c **** 											while (GSMbuffRtaCommand[i] != 0)
 4898              		.loc 1 1779 0
 4899 0102 47E0     		b	.L335	@
 4900              	.L339:
1780:src/sim900_800.c **** 											{
1781:src/sim900_800.c **** 												if ((GSMbuffRtaCommand[i] == ',') && (GSMbuffRtaCommand[i+1] == '"') && (flag == 0))
 4901              		.loc 1 1781 0
 4902 0104 1723     		movs	r3, #23	@ tmp266,
 4903 0106 6B44     		add	r3, r3, sp	@ tmp266,
 4904 0108 1B78     		ldrb	r3, [r3]	@ D.7901, i
 4905 010a 984A     		ldr	r2, .L378+28	@ tmp267,
 4906 010c D35C     		ldrb	r3, [r2, r3]	@ D.7902, GSMbuffRtaCommand
 4907 010e 2C2B     		cmp	r3, #44	@ D.7902,
 4908 0110 39D1     		bne	.L336	@,
 4909              		.loc 1 1781 0 is_stmt 0 discriminator 1
 4910 0112 1723     		movs	r3, #23	@ tmp268,
 4911 0114 6B44     		add	r3, r3, sp	@ tmp268,
 4912 0116 1B78     		ldrb	r3, [r3]	@ D.7901, i
 4913 0118 0133     		adds	r3, r3, #1	@ D.7901,
 4914 011a 944A     		ldr	r2, .L378+28	@ tmp269,
 4915 011c D35C     		ldrb	r3, [r2, r3]	@ D.7902, GSMbuffRtaCommand
 4916 011e 222B     		cmp	r3, #34	@ D.7902,
 4917 0120 31D1     		bne	.L336	@,
 4918              		.loc 1 1781 0 discriminator 2
 4919 0122 1623     		movs	r3, #22	@ tmp270,
 4920 0124 6B44     		add	r3, r3, sp	@ tmp270,
 4921 0126 1B78     		ldrb	r3, [r3]	@ tmp271, flag
 4922 0128 002B     		cmp	r3, #0	@ tmp271,
 4923 012a 2CD1     		bne	.L336	@,
1782:src/sim900_800.c **** 												{
1783:src/sim900_800.c **** 													i += 2;
 4924              		.loc 1 1783 0 is_stmt 1
 4925 012c 1723     		movs	r3, #23	@ tmp272,
 4926 012e 6B44     		add	r3, r3, sp	@ tmp272,
 4927 0130 1722     		movs	r2, #23	@ tmp273,
 4928 0132 6A44     		add	r2, r2, sp	@ tmp273,
 4929 0134 1278     		ldrb	r2, [r2]	@ tmp274, i
 4930 0136 0232     		adds	r2, r2, #2	@ tmp275,
 4931 0138 1A70     		strb	r2, [r3]	@ tmp276, i
1784:src/sim900_800.c **** 													flag = i;
 4932              		.loc 1 1784 0
 4933 013a 1623     		movs	r3, #22	@ tmp277,
 4934 013c 6B44     		add	r3, r3, sp	@ tmp277,
 4935 013e 1722     		movs	r2, #23	@ tmp278,
 4936 0140 6A44     		add	r2, r2, sp	@ tmp278,
 4937 0142 1278     		ldrb	r2, [r2]	@ tmp279, i
 4938 0144 1A70     		strb	r2, [r3]	@ tmp279, flag
1785:src/sim900_800.c **** 													while (GSMbuffRtaCommand[i] != '"')
 4939              		.loc 1 1785 0
 4940 0146 06E0     		b	.L337	@
ARM GAS  /tmp/ccCNyPsy.s 			page 122


 4941              	.L338:
1786:src/sim900_800.c **** 													{
1787:src/sim900_800.c **** 														i++;
 4942              		.loc 1 1787 0
 4943 0148 1723     		movs	r3, #23	@ tmp280,
 4944 014a 6B44     		add	r3, r3, sp	@ tmp280,
 4945 014c 1A78     		ldrb	r2, [r3]	@ D.7900, i
 4946 014e 1723     		movs	r3, #23	@ tmp281,
 4947 0150 6B44     		add	r3, r3, sp	@ tmp281,
 4948 0152 0132     		adds	r2, r2, #1	@ tmp282,
 4949 0154 1A70     		strb	r2, [r3]	@ tmp283, i
 4950              	.L337:
1785:src/sim900_800.c **** 													while (GSMbuffRtaCommand[i] != '"')
 4951              		.loc 1 1785 0
 4952 0156 1723     		movs	r3, #23	@ tmp284,
 4953 0158 6B44     		add	r3, r3, sp	@ tmp284,
 4954 015a 1B78     		ldrb	r3, [r3]	@ D.7901, i
 4955 015c 834A     		ldr	r2, .L378+28	@ tmp285,
 4956 015e D35C     		ldrb	r3, [r2, r3]	@ D.7902, GSMbuffRtaCommand
 4957 0160 222B     		cmp	r3, #34	@ D.7902,
 4958 0162 F1D1     		bne	.L338	@,
1788:src/sim900_800.c **** 													}
1789:src/sim900_800.c **** 													strncpy(pGSMReadSMStel, &GSMbuffRtaCommand[flag], (i - flag));
 4959              		.loc 1 1789 0
 4960 0164 1623     		movs	r3, #22	@ tmp286,
 4961 0166 6B44     		add	r3, r3, sp	@ tmp286,
 4962 0168 1A78     		ldrb	r2, [r3]	@ D.7901, flag
 4963 016a 804B     		ldr	r3, .L378+28	@ tmp287,
 4964 016c D118     		adds	r1, r2, r3	@ D.7903, D.7901, tmp287
 4965 016e 1723     		movs	r3, #23	@ tmp288,
 4966 0170 6B44     		add	r3, r3, sp	@ tmp288,
 4967 0172 1A78     		ldrb	r2, [r3]	@ D.7901, i
 4968 0174 1623     		movs	r3, #22	@ tmp289,
 4969 0176 6B44     		add	r3, r3, sp	@ tmp289,
 4970 0178 1B78     		ldrb	r3, [r3]	@ D.7901, flag
 4971 017a D31A     		subs	r3, r2, r3	@ D.7901, D.7901, D.7901
 4972 017c 1A00     		movs	r2, r3	@ D.7904, D.7901
 4973 017e 089B     		ldr	r3, [sp, #32]	@ tmp290, pGSMReadSMStel
 4974 0180 1800     		movs	r0, r3	@, tmp290
 4975 0182 FFF7FEFF 		bl	strncpy	@
 4976              	.L336:
1790:src/sim900_800.c **** 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1791:src/sim900_800.c **** 													//UARTDBGSend(pGSMReadSMStel);
1792:src/sim900_800.c **** 													//GSMReadSMStel[0]  = 0;
1793:src/sim900_800.c **** 												}
1794:src/sim900_800.c **** 												i++;
 4977              		.loc 1 1794 0
 4978 0186 1723     		movs	r3, #23	@ tmp291,
 4979 0188 6B44     		add	r3, r3, sp	@ tmp291,
 4980 018a 1A78     		ldrb	r2, [r3]	@ D.7900, i
 4981 018c 1723     		movs	r3, #23	@ tmp292,
 4982 018e 6B44     		add	r3, r3, sp	@ tmp292,
 4983 0190 0132     		adds	r2, r2, #1	@ tmp293,
 4984 0192 1A70     		strb	r2, [r3]	@ tmp294, i
 4985              	.L335:
1779:src/sim900_800.c **** 											{
 4986              		.loc 1 1779 0
ARM GAS  /tmp/ccCNyPsy.s 			page 123


 4987 0194 1723     		movs	r3, #23	@ tmp295,
 4988 0196 6B44     		add	r3, r3, sp	@ tmp295,
 4989 0198 1B78     		ldrb	r3, [r3]	@ D.7901, i
 4990 019a 744A     		ldr	r2, .L378+28	@ tmp296,
 4991 019c D35C     		ldrb	r3, [r2, r3]	@ D.7902, GSMbuffRtaCommand
 4992 019e 002B     		cmp	r3, #0	@ D.7902,
 4993 01a0 B0D1     		bne	.L339	@,
1795:src/sim900_800.c **** 											}
1796:src/sim900_800.c **** 
1797:src/sim900_800.c **** 											GSMReadSMSrepIn[19] = 0;
 4994              		.loc 1 1797 0
 4995 01a2 6F4B     		ldr	r3, .L378+16	@ tmp297,
 4996 01a4 0022     		movs	r2, #0	@ tmp298,
 4997 01a6 DA74     		strb	r2, [r3, #19]	@ tmp299, GSMReadSMSrepIn
1798:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000: AR
 4998              		.loc 1 1798 0
 4999 01a8 7349     		ldr	r1, .L378+40	@ tmp300,
 5000 01aa 6D4B     		ldr	r3, .L378+16	@ tmp301,
 5001 01ac 0822     		movs	r2, #8	@,
 5002 01ae 1800     		movs	r0, r3	@, tmp301
 5003 01b0 FFF7FEFF 		bl	strncmp	@
 5004 01b4 031E     		subs	r3, r0, #0	@ D.7901,,
 5005 01b6 1FD1     		bne	.L340	@,
1799:src/sim900_800.c **** 											{
1800:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5006              		.loc 1 1800 0
 5007 01b8 029B     		ldr	r3, [sp, #8]	@ tmp302, puserCode
 5008 01ba 1800     		movs	r0, r3	@, tmp302
 5009 01bc FFF7FEFF 		bl	strlen	@
 5010 01c0 0200     		movs	r2, r0	@ D.7904,
 5011 01c2 0299     		ldr	r1, [sp, #8]	@ tmp303, puserCode
 5012 01c4 6D4B     		ldr	r3, .L378+44	@ tmp304,
 5013 01c6 1800     		movs	r0, r3	@, tmp304
 5014 01c8 FFF7FEFF 		bl	strncmp	@
 5015 01cc 031E     		subs	r3, r0, #0	@ D.7901,,
 5016 01ce 13D1     		bne	.L340	@,
1801:src/sim900_800.c **** 												{
1802:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5017              		.loc 1 1802 0
 5018 01d0 6B49     		ldr	r1, .L378+48	@ tmp305,
 5019 01d2 019B     		ldr	r3, [sp, #4]	@ tmp306, pclaveAct
 5020 01d4 0422     		movs	r2, #4	@,
 5021 01d6 1800     		movs	r0, r3	@, tmp306
 5022 01d8 FFF7FEFF 		bl	strncpy	@
1803:src/sim900_800.c **** 
1804:src/sim900_800.c **** 													*pActDact |= 0x40; //Armar
 5023              		.loc 1 1804 0
 5024 01dc 009B     		ldr	r3, [sp]	@ tmp307, pActDact
 5025 01de 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5026 01e0 4022     		movs	r2, #64	@ tmp309,
 5027 01e2 1343     		orrs	r3, r2	@ tmp308, tmp309
 5028 01e4 DAB2     		uxtb	r2, r3	@ D.7900, tmp308
 5029 01e6 009B     		ldr	r3, [sp]	@ tmp310, pActDact
 5030 01e8 1A70     		strb	r2, [r3]	@ tmp311, *pActDact_102(D)
1805:src/sim900_800.c **** 													*pActDact |= 0x01; //SendOK.
 5031              		.loc 1 1805 0
 5032 01ea 009B     		ldr	r3, [sp]	@ tmp312, pActDact
ARM GAS  /tmp/ccCNyPsy.s 			page 124


 5033 01ec 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5034 01ee 0122     		movs	r2, #1	@ tmp314,
 5035 01f0 1343     		orrs	r3, r2	@ tmp313, tmp314
 5036 01f2 DAB2     		uxtb	r2, r3	@ D.7900, tmp313
 5037 01f4 009B     		ldr	r3, [sp]	@ tmp315, pActDact
 5038 01f6 1A70     		strb	r2, [r3]	@ tmp316, *pActDact_102(D)
 5039              	.L340:
1806:src/sim900_800.c **** 												}
1807:src/sim900_800.c **** 											}
1808:src/sim900_800.c **** 
1809:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000: DR
 5040              		.loc 1 1809 0
 5041 01f8 6249     		ldr	r1, .L378+52	@ tmp317,
 5042 01fa 594B     		ldr	r3, .L378+16	@ tmp318,
 5043 01fc 0822     		movs	r2, #8	@,
 5044 01fe 1800     		movs	r0, r3	@, tmp318
 5045 0200 FFF7FEFF 		bl	strncmp	@
 5046 0204 031E     		subs	r3, r0, #0	@ D.7901,,
 5047 0206 20D1     		bne	.L334	@,
1810:src/sim900_800.c **** 											{
1811:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5048              		.loc 1 1811 0
 5049 0208 029B     		ldr	r3, [sp, #8]	@ tmp319, puserCode
 5050 020a 1800     		movs	r0, r3	@, tmp319
 5051 020c FFF7FEFF 		bl	strlen	@
 5052 0210 0200     		movs	r2, r0	@ D.7904,
 5053 0212 0299     		ldr	r1, [sp, #8]	@ tmp320, puserCode
 5054 0214 594B     		ldr	r3, .L378+44	@ tmp321,
 5055 0216 1800     		movs	r0, r3	@, tmp321
 5056 0218 FFF7FEFF 		bl	strncmp	@
 5057 021c 031E     		subs	r3, r0, #0	@ D.7901,,
 5058 021e 14D1     		bne	.L334	@,
1812:src/sim900_800.c **** 												{
1813:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5059              		.loc 1 1813 0
 5060 0220 5749     		ldr	r1, .L378+48	@ tmp322,
 5061 0222 019B     		ldr	r3, [sp, #4]	@ tmp323, pclaveAct
 5062 0224 0422     		movs	r2, #4	@,
 5063 0226 1800     		movs	r0, r3	@, tmp323
 5064 0228 FFF7FEFF 		bl	strncpy	@
1814:src/sim900_800.c **** 
1815:src/sim900_800.c **** 													*pActDact |= 0x80; //Desrmar
 5065              		.loc 1 1815 0
 5066 022c 009B     		ldr	r3, [sp]	@ tmp324, pActDact
 5067 022e 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5068 0230 8022     		movs	r2, #128	@ tmp544,
 5069 0232 5242     		rsbs	r2, r2, #0	@ tmp326, tmp544
 5070 0234 1343     		orrs	r3, r2	@ tmp325, tmp326
 5071 0236 DAB2     		uxtb	r2, r3	@ D.7900, tmp325
 5072 0238 009B     		ldr	r3, [sp]	@ tmp327, pActDact
 5073 023a 1A70     		strb	r2, [r3]	@ tmp328, *pActDact_102(D)
1816:src/sim900_800.c **** 													*pActDact |= 0x01; //SendOK.
 5074              		.loc 1 1816 0
 5075 023c 009B     		ldr	r3, [sp]	@ tmp329, pActDact
 5076 023e 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5077 0240 0122     		movs	r2, #1	@ tmp331,
 5078 0242 1343     		orrs	r3, r2	@ tmp330, tmp331
ARM GAS  /tmp/ccCNyPsy.s 			page 125


 5079 0244 DAB2     		uxtb	r2, r3	@ D.7900, tmp330
 5080 0246 009B     		ldr	r3, [sp]	@ tmp332, pActDact
 5081 0248 1A70     		strb	r2, [r3]	@ tmp333, *pActDact_102(D)
 5082              	.L334:
1817:src/sim900_800.c **** 												}
1818:src/sim900_800.c **** 											}
1819:src/sim900_800.c **** 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1820:src/sim900_800.c **** 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1821:src/sim900_800.c **** 											//Led4Toggle();
1822:src/sim900_800.c **** 										}
1823:src/sim900_800.c **** 
1824:src/sim900_800.c **** 										GSMReadSMSState = 0;
 5083              		.loc 1 1824 0
 5084 024a 444B     		ldr	r3, .L378+12	@ tmp334,
 5085 024c 0022     		movs	r2, #0	@ tmp335,
 5086 024e 1A70     		strb	r2, [r3]	@ tmp336, GSMReadSMSState
1825:src/sim900_800.c **** 										GSMnumSMS++;
 5087              		.loc 1 1825 0
 5088 0250 414B     		ldr	r3, .L378+8	@ tmp337,
 5089 0252 1B78     		ldrb	r3, [r3]	@ D.7900, GSMnumSMS
 5090 0254 0133     		adds	r3, r3, #1	@ tmp338,
 5091 0256 DAB2     		uxtb	r2, r3	@ D.7900, tmp338
 5092 0258 3F4B     		ldr	r3, .L378+8	@ tmp339,
 5093 025a 1A70     		strb	r2, [r3]	@ tmp340, GSMnumSMS
 5094              	.L333:
1826:src/sim900_800.c **** 									}
1827:src/sim900_800.c **** 								}
1828:src/sim900_800.c **** 
1829:src/sim900_800.c **** 								if (i > 2)
 5095              		.loc 1 1829 0
 5096 025c 1723     		movs	r3, #23	@ tmp341,
 5097 025e 6B44     		add	r3, r3, sp	@ tmp341,
 5098 0260 1B78     		ldrb	r3, [r3]	@ tmp342, i
 5099 0262 022B     		cmp	r3, #2	@ tmp342,
 5100 0264 2DD9     		bls	.L372	@,
1830:src/sim900_800.c **** 								{
1831:src/sim900_800.c **** 									GSMReadSMSState = 0;
 5101              		.loc 1 1831 0
 5102 0266 3D4B     		ldr	r3, .L378+12	@ tmp343,
 5103 0268 0022     		movs	r2, #0	@ tmp344,
 5104 026a 1A70     		strb	r2, [r3]	@ tmp345, GSMReadSMSState
1832:src/sim900_800.c **** 								}
1833:src/sim900_800.c **** 							break;
 5105              		.loc 1 1833 0
 5106 026c 29E0     		b	.L372	@
 5107              	.L368:
1834:src/sim900_800.c **** 
1835:src/sim900_800.c **** 						default:
1836:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5108              		.loc 1 1836 0
 5109 026e 3B4B     		ldr	r3, .L378+12	@ tmp346,
 5110 0270 0022     		movs	r2, #0	@ tmp347,
 5111 0272 1A70     		strb	r2, [r3]	@ tmp348, GSMReadSMSState
1837:src/sim900_800.c **** 							break;
 5112              		.loc 1 1837 0
 5113 0274 C046     		nop
 5114 0276 25E0     		b	.L342	@
ARM GAS  /tmp/ccCNyPsy.s 			page 126


 5115              	.L328:
1838:src/sim900_800.c **** 						}
1839:src/sim900_800.c **** 			}
1840:src/sim900_800.c **** 			else
1841:src/sim900_800.c **** 			{
1842:src/sim900_800.c **** 
1843:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 5116              		.loc 1 1843 0
 5117 0278 1724     		movs	r4, #23	@ tmp349,
 5118 027a 6C44     		add	r4, r4, sp	@ tmp349,
 5119 027c 3B4B     		ldr	r3, .L378+28	@ tmp350,
 5120 027e 4248     		ldr	r0, .L378+56	@ tmp351,
 5121 0280 0022     		movs	r2, #0	@,
 5122 0282 0F21     		movs	r1, #15	@,
 5123 0284 FFF7FEFF 		bl	GSMSendCommand	@
 5124 0288 0300     		movs	r3, r0	@ tmp352,
 5125 028a 2370     		strb	r3, [r4]	@ tmp354, i
1844:src/sim900_800.c **** 
1845:src/sim900_800.c **** 				if (i == 2)
 5126              		.loc 1 1845 0
 5127 028c 1723     		movs	r3, #23	@ tmp355,
 5128 028e 6B44     		add	r3, r3, sp	@ tmp355,
 5129 0290 1B78     		ldrb	r3, [r3]	@ tmp356, i
 5130 0292 022B     		cmp	r3, #2	@ tmp356,
 5131 0294 0BD1     		bne	.L343	@,
1846:src/sim900_800.c **** 				{
1847:src/sim900_800.c **** 					GSMnumSMS = 1;
 5132              		.loc 1 1847 0
 5133 0296 304B     		ldr	r3, .L378+8	@ tmp357,
 5134 0298 0122     		movs	r2, #1	@ tmp358,
 5135 029a 1A70     		strb	r2, [r3]	@ tmp359, GSMnumSMS
1848:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5136              		.loc 1 1848 0
 5137 029c 2D4B     		ldr	r3, .L378+4	@ tmp360,
 5138 029e 0022     		movs	r2, #0	@ tmp361,
 5139 02a0 1A70     		strb	r2, [r3]	@ tmp362, GSMrxSMSState
1849:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5140              		.loc 1 1849 0
 5141 02a2 2E4B     		ldr	r3, .L378+12	@ tmp363,
 5142 02a4 0022     		movs	r2, #0	@ tmp364,
 5143 02a6 1A70     		strb	r2, [r3]	@ tmp365, GSMReadSMSState
1850:src/sim900_800.c **** 					GSMCantSMS = 0;
 5144              		.loc 1 1850 0
 5145 02a8 294B     		ldr	r3, .L378	@ tmp366,
 5146 02aa 0022     		movs	r2, #0	@ tmp367,
 5147 02ac 1A70     		strb	r2, [r3]	@ tmp368, GSMCantSMS
 5148              	.L343:
1851:src/sim900_800.c **** 				}
1852:src/sim900_800.c **** 
1853:src/sim900_800.c **** 				if (i > 2)
 5149              		.loc 1 1853 0
 5150 02ae 1723     		movs	r3, #23	@ tmp369,
 5151 02b0 6B44     		add	r3, r3, sp	@ tmp369,
 5152 02b2 1B78     		ldrb	r3, [r3]	@ tmp370, i
 5153 02b4 022B     		cmp	r3, #2	@ tmp370,
 5154 02b6 00D8     		bhi	.LCB4239	@
 5155 02b8 94E1     		b	.L373	@long jump	@
ARM GAS  /tmp/ccCNyPsy.s 			page 127


 5156              	.LCB4239:
1854:src/sim900_800.c **** 				{
1855:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5157              		.loc 1 1855 0
 5158 02ba 284B     		ldr	r3, .L378+12	@ tmp371,
 5159 02bc 0022     		movs	r2, #0	@ tmp372,
 5160 02be 1A70     		strb	r2, [r3]	@ tmp373, GSMReadSMSState
1856:src/sim900_800.c **** 				}
1857:src/sim900_800.c **** 			}
1858:src/sim900_800.c **** 			break;
 5161              		.loc 1 1858 0
 5162 02c0 90E1     		b	.L373	@
 5163              	.L372:
1833:src/sim900_800.c **** 
 5164              		.loc 1 1833 0
 5165 02c2 C046     		nop
 5166              	.L342:
 5167              		.loc 1 1858 0 discriminator 3
 5168 02c4 8EE1     		b	.L373	@
 5169              	.L367:
1859:src/sim900_800.c **** 
1860:src/sim900_800.c **** 		default:
1861:src/sim900_800.c **** 			GSMrxSMSState = 0;
 5170              		.loc 1 1861 0
 5171 02c6 234B     		ldr	r3, .L378+4	@ tmp374,
 5172 02c8 0022     		movs	r2, #0	@ tmp375,
 5173 02ca 1A70     		strb	r2, [r3]	@ tmp376, GSMrxSMSState
1862:src/sim900_800.c **** 			break;
 5174              		.loc 1 1862 0
 5175 02cc C046     		nop
 5176 02ce 8EE1     		b	.L344	@
 5177              	.L320:
1863:src/sim900_800.c **** 		}
1864:src/sim900_800.c **** 	}
1865:src/sim900_800.c **** 	else if (GSMCantSMS2)
 5178              		.loc 1 1865 0
 5179 02d0 2E4B     		ldr	r3, .L378+60	@ tmp377,
 5180 02d2 1B78     		ldrb	r3, [r3]	@ D.7900, GSMCantSMS2
 5181 02d4 002B     		cmp	r3, #0	@ D.7900,
 5182 02d6 00D1     		bne	.LCB4265	@
 5183 02d8 89E1     		b	.L374	@long jump	@
 5184              	.LCB4265:
1866:src/sim900_800.c **** 	{
1867:src/sim900_800.c **** 		switch(GSMrxSMSState)
 5185              		.loc 1 1867 0
 5186 02da 1E4B     		ldr	r3, .L378+4	@ tmp378,
 5187 02dc 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 5188 02de 012B     		cmp	r3, #1	@ D.7901,
 5189 02e0 0BD0     		beq	.L346	@,
 5190 02e2 022B     		cmp	r3, #2	@ D.7901,
 5191 02e4 25D0     		beq	.L347	@,
 5192 02e6 002B     		cmp	r3, #0	@ D.7901,
 5193 02e8 00D0     		beq	.LCB4273	@
 5194 02ea 75E1     		b	.L369	@long jump	@
 5195              	.LCB4273:
1868:src/sim900_800.c **** 		{
1869:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 128


1870:src/sim900_800.c **** 			case 0:
1871:src/sim900_800.c **** 				GSMrxSMSState++;
 5196              		.loc 1 1871 0
 5197 02ec 194B     		ldr	r3, .L378+4	@ tmp379,
 5198 02ee 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 5199 02f0 0133     		adds	r3, r3, #1	@ tmp380,
 5200 02f2 DAB2     		uxtb	r2, r3	@ D.7900, tmp380
 5201 02f4 174B     		ldr	r3, .L378+4	@ tmp381,
 5202 02f6 1A70     		strb	r2, [r3]	@ tmp382, GSMrxSMSState
1872:src/sim900_800.c **** 				break;
 5203              		.loc 1 1872 0
 5204 02f8 79E1     		b	.L344	@
 5205              	.L346:
1873:src/sim900_800.c **** 			case 1:
1874:src/sim900_800.c **** 				i = GSM_SetSIM (2);
 5206              		.loc 1 1874 0
 5207 02fa 1724     		movs	r4, #23	@ tmp383,
 5208 02fc 6C44     		add	r4, r4, sp	@ tmp383,
 5209 02fe 0220     		movs	r0, #2	@,
 5210 0300 FFF7FEFF 		bl	GSM_SetSIM	@
 5211 0304 0300     		movs	r3, r0	@ tmp384,
 5212 0306 2370     		strb	r3, [r4]	@ tmp386, i
1875:src/sim900_800.c **** 
1876:src/sim900_800.c **** 				if (i == 2)
 5213              		.loc 1 1876 0
 5214 0308 1723     		movs	r3, #23	@ tmp387,
 5215 030a 6B44     		add	r3, r3, sp	@ tmp387,
 5216 030c 1B78     		ldrb	r3, [r3]	@ tmp388, i
 5217 030e 022B     		cmp	r3, #2	@ tmp388,
 5218 0310 05D1     		bne	.L349	@,
1877:src/sim900_800.c **** 					GSMrxSMSState++;
 5219              		.loc 1 1877 0
 5220 0312 104B     		ldr	r3, .L378+4	@ tmp389,
 5221 0314 1B78     		ldrb	r3, [r3]	@ D.7900, GSMrxSMSState
 5222 0316 0133     		adds	r3, r3, #1	@ tmp390,
 5223 0318 DAB2     		uxtb	r2, r3	@ D.7900, tmp390
 5224 031a 0E4B     		ldr	r3, .L378+4	@ tmp391,
 5225 031c 1A70     		strb	r2, [r3]	@ tmp392, GSMrxSMSState
 5226              	.L349:
1878:src/sim900_800.c **** 				if (i > 2)
 5227              		.loc 1 1878 0
 5228 031e 1723     		movs	r3, #23	@ tmp393,
 5229 0320 6B44     		add	r3, r3, sp	@ tmp393,
 5230 0322 1B78     		ldrb	r3, [r3]	@ tmp394, i
 5231 0324 022B     		cmp	r3, #2	@ tmp394,
 5232 0326 00D8     		bhi	.LCB4307	@
 5233 0328 5EE1     		b	.L375	@long jump	@
 5234              	.LCB4307:
1879:src/sim900_800.c **** 					GSMrxSMSState=0;
 5235              		.loc 1 1879 0
 5236 032a 0A4B     		ldr	r3, .L378+4	@ tmp395,
 5237 032c 0022     		movs	r2, #0	@ tmp396,
 5238 032e 1A70     		strb	r2, [r3]	@ tmp397, GSMrxSMSState
1880:src/sim900_800.c **** 				break;
 5239              		.loc 1 1880 0
 5240 0330 5AE1     		b	.L375	@
 5241              	.L347:
ARM GAS  /tmp/ccCNyPsy.s 			page 129


1881:src/sim900_800.c **** 
1882:src/sim900_800.c **** 			case 2:
1883:src/sim900_800.c **** 					//Verifico que no hayan sido leidos los SMS.
1884:src/sim900_800.c **** 					if (GSMnumSMS <= GSMCantSMS2)
 5242              		.loc 1 1884 0
 5243 0332 094B     		ldr	r3, .L378+8	@ tmp398,
 5244 0334 1A78     		ldrb	r2, [r3]	@ D.7900, GSMnumSMS
 5245 0336 154B     		ldr	r3, .L378+60	@ tmp399,
 5246 0338 1B78     		ldrb	r3, [r3]	@ D.7900, GSMCantSMS2
 5247 033a 9A42     		cmp	r2, r3	@ D.7900, D.7900
 5248 033c 00D9     		bls	.LCB4320	@
 5249 033e 22E1     		b	.L351	@long jump	@
 5250              	.LCB4320:
1885:src/sim900_800.c **** 					{
1886:src/sim900_800.c **** 						switch(GSMReadSMSState)
 5251              		.loc 1 1886 0
 5252 0340 064B     		ldr	r3, .L378+12	@ tmp400,
 5253 0342 1B78     		ldrb	r3, [r3]	@ D.7902, GSMReadSMSState
 5254 0344 002B     		cmp	r3, #0	@ D.7901,
 5255 0346 23D0     		beq	.L353	@,
 5256 0348 012B     		cmp	r3, #1	@ D.7901,
 5257 034a 33D0     		beq	.L354	@,
 5258 034c 16E1     		b	.L370	@
 5259              	.L379:
 5260 034e C046     		.align	2
 5261              	.L378:
 5262 0350 00000000 		.word	GSMCantSMS
 5263 0354 00000000 		.word	GSMrxSMSState
 5264 0358 00000000 		.word	GSMnumSMS
 5265 035c 00000000 		.word	GSMReadSMSState
 5266 0360 00000000 		.word	GSMReadSMSrepIn
 5267 0364 30020000 		.word	.LC179
 5268 0368 00000000 		.word	GSMReadSMScommand
 5269 036c 00000000 		.word	GSMbuffRtaCommand
 5270 0370 40020000 		.word	.LC183
 5271 0374 6C000000 		.word	.LC53
 5272 0378 48020000 		.word	.LC186
 5273 037c 09000000 		.word	GSMReadSMSrepIn+9
 5274 0380 10000000 		.word	buffUARTGSMrx2+16
 5275 0384 54020000 		.word	.LC190
 5276 0388 60020000 		.word	.LC192
 5277 038c 00000000 		.word	GSMCantSMS2
 5278              	.L353:
1887:src/sim900_800.c **** 						{
1888:src/sim900_800.c **** 							case 0:
1889:src/sim900_800.c **** 								GSMReadSMSrepIn[0] = 0;
 5279              		.loc 1 1889 0
 5280 0390 984B     		ldr	r3, .L380	@ tmp401,
 5281 0392 0022     		movs	r2, #0	@ tmp402,
 5282 0394 1A70     		strb	r2, [r3]	@ tmp403, GSMReadSMSrepIn
1890:src/sim900_800.c **** 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
 5283              		.loc 1 1890 0
 5284 0396 984B     		ldr	r3, .L380+4	@ tmp404,
 5285 0398 1B78     		ldrb	r3, [r3]	@ D.7900, GSMnumSMS
 5286 039a 1A00     		movs	r2, r3	@ D.7901, D.7900
 5287 039c 9749     		ldr	r1, .L380+8	@ tmp405,
 5288 039e 984B     		ldr	r3, .L380+12	@ tmp406,
ARM GAS  /tmp/ccCNyPsy.s 			page 130


 5289 03a0 1800     		movs	r0, r3	@, tmp406
 5290 03a2 FFF7FEFF 		bl	sprintf	@
1891:src/sim900_800.c **** 								GSMReadSMSState++;
 5291              		.loc 1 1891 0
 5292 03a6 974B     		ldr	r3, .L380+16	@ tmp407,
 5293 03a8 1B78     		ldrb	r3, [r3]	@ D.7902, GSMReadSMSState
 5294 03aa 0133     		adds	r3, r3, #1	@ tmp408,
 5295 03ac DAB2     		uxtb	r2, r3	@ D.7902, tmp408
 5296 03ae 954B     		ldr	r3, .L380+16	@ tmp409,
 5297 03b0 1A70     		strb	r2, [r3]	@ tmp410, GSMReadSMSState
1892:src/sim900_800.c **** 								break;
 5298              		.loc 1 1892 0
 5299 03b2 10E1     		b	.L365	@
 5300              	.L354:
1893:src/sim900_800.c **** 
1894:src/sim900_800.c **** 							case 1:
1895:src/sim900_800.c **** 
1896:src/sim900_800.c **** 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
 5301              		.loc 1 1896 0
 5302 03b4 1724     		movs	r4, #23	@ tmp411,
 5303 03b6 6C44     		add	r4, r4, sp	@ tmp411,
 5304 03b8 934B     		ldr	r3, .L380+20	@ tmp412,
 5305 03ba 9148     		ldr	r0, .L380+12	@ tmp413,
 5306 03bc 0122     		movs	r2, #1	@,
 5307 03be 0F21     		movs	r1, #15	@,
 5308 03c0 FFF7FEFF 		bl	GSMSendCommand	@
 5309 03c4 0300     		movs	r3, r0	@ tmp414,
 5310 03c6 2370     		strb	r3, [r4]	@ tmp416, i
1897:src/sim900_800.c **** 
1898:src/sim900_800.c **** 								if (i == 2)
 5311              		.loc 1 1898 0
 5312 03c8 1723     		movs	r3, #23	@ tmp417,
 5313 03ca 6B44     		add	r3, r3, sp	@ tmp417,
 5314 03cc 1B78     		ldrb	r3, [r3]	@ tmp418, i
 5315 03ce 022B     		cmp	r3, #2	@ tmp418,
 5316 03d0 00D0     		beq	.LCB4385	@
 5317 03d2 CAE0     		b	.L356	@long jump	@
 5318              	.LCB4385:
1899:src/sim900_800.c **** 								{
1900:src/sim900_800.c **** 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 5319              		.loc 1 1900 0
 5320 03d4 8D49     		ldr	r1, .L380+24	@ tmp419,
 5321 03d6 8C4B     		ldr	r3, .L380+20	@ tmp420,
 5322 03d8 0622     		movs	r2, #6	@,
 5323 03da 1800     		movs	r0, r3	@, tmp420
 5324 03dc FFF7FEFF 		bl	strncmp	@
 5325 03e0 031E     		subs	r3, r0, #0	@ D.7901,,
 5326 03e2 00D0     		beq	.LCB4393	@
 5327 03e4 C1E0     		b	.L356	@long jump	@
 5328              	.LCB4393:
1901:src/sim900_800.c **** 									{
1902:src/sim900_800.c **** 
1903:src/sim900_800.c **** 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
 5329              		.loc 1 1903 0
 5330 03e6 8A49     		ldr	r1, .L380+28	@ tmp421,
 5331 03e8 824B     		ldr	r3, .L380	@ tmp422,
 5332 03ea 0422     		movs	r2, #4	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 131


 5333 03ec 1800     		movs	r0, r3	@, tmp422
 5334 03ee FFF7FEFF 		bl	strncmp	@
 5335 03f2 031E     		subs	r3, r0, #0	@ D.7901,,
 5336 03f4 00D0     		beq	.LCB4401	@
 5337 03f6 AFE0     		b	.L357	@long jump	@
 5338              	.LCB4401:
1904:src/sim900_800.c **** 										{
1905:src/sim900_800.c **** 											i = 0;
 5339              		.loc 1 1905 0
 5340 03f8 1723     		movs	r3, #23	@ tmp423,
 5341 03fa 6B44     		add	r3, r3, sp	@ tmp423,
 5342 03fc 0022     		movs	r2, #0	@ tmp424,
 5343 03fe 1A70     		strb	r2, [r3]	@ tmp425, i
1906:src/sim900_800.c **** 											flag = 0;
 5344              		.loc 1 1906 0
 5345 0400 1623     		movs	r3, #22	@ tmp426,
 5346 0402 6B44     		add	r3, r3, sp	@ tmp426,
 5347 0404 0022     		movs	r2, #0	@ tmp427,
 5348 0406 1A70     		strb	r2, [r3]	@ tmp428, flag
1907:src/sim900_800.c **** 											while (*(GSMbuffRtaCommand+i) != 0)
 5349              		.loc 1 1907 0
 5350 0408 4AE0     		b	.L358	@
 5351              	.L362:
1908:src/sim900_800.c **** 											{
1909:src/sim900_800.c **** 												if ((*(GSMbuffRtaCommand+i) == ',') && (*(GSMbuffRtaCommand+i+1) == '"') && (flag == 0)
 5352              		.loc 1 1909 0
 5353 040a 1723     		movs	r3, #23	@ tmp429,
 5354 040c 6B44     		add	r3, r3, sp	@ tmp429,
 5355 040e 1A78     		ldrb	r2, [r3]	@ D.7905, i
 5356 0410 7D4B     		ldr	r3, .L380+20	@ tmp430,
 5357 0412 D318     		adds	r3, r2, r3	@ D.7903, D.7905, tmp430
 5358 0414 1B78     		ldrb	r3, [r3]	@ D.7902, *_170
 5359 0416 2C2B     		cmp	r3, #44	@ D.7902,
 5360 0418 3BD1     		bne	.L359	@,
 5361              		.loc 1 1909 0 is_stmt 0 discriminator 1
 5362 041a 1723     		movs	r3, #23	@ tmp431,
 5363 041c 6B44     		add	r3, r3, sp	@ tmp431,
 5364 041e 1B78     		ldrb	r3, [r3]	@ D.7905, i
 5365 0420 5A1C     		adds	r2, r3, #1	@ D.7905, D.7905,
 5366 0422 794B     		ldr	r3, .L380+20	@ tmp432,
 5367 0424 D318     		adds	r3, r2, r3	@ D.7903, D.7905, tmp432
 5368 0426 1B78     		ldrb	r3, [r3]	@ D.7902, *_174
 5369 0428 222B     		cmp	r3, #34	@ D.7902,
 5370 042a 32D1     		bne	.L359	@,
 5371              		.loc 1 1909 0 discriminator 2
 5372 042c 1623     		movs	r3, #22	@ tmp433,
 5373 042e 6B44     		add	r3, r3, sp	@ tmp433,
 5374 0430 1B78     		ldrb	r3, [r3]	@ tmp434, flag
 5375 0432 002B     		cmp	r3, #0	@ tmp434,
 5376 0434 2DD1     		bne	.L359	@,
1910:src/sim900_800.c **** 												{
1911:src/sim900_800.c **** 													i += 2;
 5377              		.loc 1 1911 0 is_stmt 1
 5378 0436 1723     		movs	r3, #23	@ tmp435,
 5379 0438 6B44     		add	r3, r3, sp	@ tmp435,
 5380 043a 1722     		movs	r2, #23	@ tmp436,
 5381 043c 6A44     		add	r2, r2, sp	@ tmp436,
ARM GAS  /tmp/ccCNyPsy.s 			page 132


 5382 043e 1278     		ldrb	r2, [r2]	@ tmp437, i
 5383 0440 0232     		adds	r2, r2, #2	@ tmp438,
 5384 0442 1A70     		strb	r2, [r3]	@ tmp439, i
1912:src/sim900_800.c **** 													flag = i;
 5385              		.loc 1 1912 0
 5386 0444 1623     		movs	r3, #22	@ tmp440,
 5387 0446 6B44     		add	r3, r3, sp	@ tmp440,
 5388 0448 1722     		movs	r2, #23	@ tmp441,
 5389 044a 6A44     		add	r2, r2, sp	@ tmp441,
 5390 044c 1278     		ldrb	r2, [r2]	@ tmp442, i
 5391 044e 1A70     		strb	r2, [r3]	@ tmp442, flag
1913:src/sim900_800.c **** 													while (*(GSMbuffRtaCommand+i) != '"')
 5392              		.loc 1 1913 0
 5393 0450 06E0     		b	.L360	@
 5394              	.L361:
1914:src/sim900_800.c **** 													{
1915:src/sim900_800.c **** 														i++;
 5395              		.loc 1 1915 0
 5396 0452 1723     		movs	r3, #23	@ tmp443,
 5397 0454 6B44     		add	r3, r3, sp	@ tmp443,
 5398 0456 1A78     		ldrb	r2, [r3]	@ D.7900, i
 5399 0458 1723     		movs	r3, #23	@ tmp444,
 5400 045a 6B44     		add	r3, r3, sp	@ tmp444,
 5401 045c 0132     		adds	r2, r2, #1	@ tmp445,
 5402 045e 1A70     		strb	r2, [r3]	@ tmp446, i
 5403              	.L360:
1913:src/sim900_800.c **** 													while (*(GSMbuffRtaCommand+i) != '"')
 5404              		.loc 1 1913 0
 5405 0460 1723     		movs	r3, #23	@ tmp447,
 5406 0462 6B44     		add	r3, r3, sp	@ tmp447,
 5407 0464 1A78     		ldrb	r2, [r3]	@ D.7905, i
 5408 0466 684B     		ldr	r3, .L380+20	@ tmp448,
 5409 0468 D318     		adds	r3, r2, r3	@ D.7903, D.7905, tmp448
 5410 046a 1B78     		ldrb	r3, [r3]	@ D.7902, *_179
 5411 046c 222B     		cmp	r3, #34	@ D.7902,
 5412 046e F0D1     		bne	.L361	@,
1916:src/sim900_800.c **** 													}
1917:src/sim900_800.c **** 													strncpy((char *)pGSMReadSMStel, (const char *)&GSMbuffRtaCommand[flag], (i - flag));
 5413              		.loc 1 1917 0
 5414 0470 1623     		movs	r3, #22	@ tmp449,
 5415 0472 6B44     		add	r3, r3, sp	@ tmp449,
 5416 0474 1A78     		ldrb	r2, [r3]	@ D.7901, flag
 5417 0476 644B     		ldr	r3, .L380+20	@ tmp450,
 5418 0478 D118     		adds	r1, r2, r3	@ D.7903, D.7901, tmp450
 5419 047a 1723     		movs	r3, #23	@ tmp451,
 5420 047c 6B44     		add	r3, r3, sp	@ tmp451,
 5421 047e 1A78     		ldrb	r2, [r3]	@ D.7901, i
 5422 0480 1623     		movs	r3, #22	@ tmp452,
 5423 0482 6B44     		add	r3, r3, sp	@ tmp452,
 5424 0484 1B78     		ldrb	r3, [r3]	@ D.7901, flag
 5425 0486 D31A     		subs	r3, r2, r3	@ D.7901, D.7901, D.7901
 5426 0488 1A00     		movs	r2, r3	@ D.7904, D.7901
 5427 048a 089B     		ldr	r3, [sp, #32]	@ tmp453, pGSMReadSMStel
 5428 048c 1800     		movs	r0, r3	@, tmp453
 5429 048e FFF7FEFF 		bl	strncpy	@
 5430              	.L359:
1918:src/sim900_800.c **** 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
ARM GAS  /tmp/ccCNyPsy.s 			page 133


1919:src/sim900_800.c **** 													//UARTDBGSend(pGSMReadSMStel);
1920:src/sim900_800.c **** 													//*pGSMReadSMStel  = 0;
1921:src/sim900_800.c **** 												}
1922:src/sim900_800.c **** 												i++;
 5431              		.loc 1 1922 0
 5432 0492 1723     		movs	r3, #23	@ tmp454,
 5433 0494 6B44     		add	r3, r3, sp	@ tmp454,
 5434 0496 1A78     		ldrb	r2, [r3]	@ D.7900, i
 5435 0498 1723     		movs	r3, #23	@ tmp455,
 5436 049a 6B44     		add	r3, r3, sp	@ tmp455,
 5437 049c 0132     		adds	r2, r2, #1	@ tmp456,
 5438 049e 1A70     		strb	r2, [r3]	@ tmp457, i
 5439              	.L358:
1907:src/sim900_800.c **** 											{
 5440              		.loc 1 1907 0
 5441 04a0 1723     		movs	r3, #23	@ tmp458,
 5442 04a2 6B44     		add	r3, r3, sp	@ tmp458,
 5443 04a4 1A78     		ldrb	r2, [r3]	@ D.7905, i
 5444 04a6 584B     		ldr	r3, .L380+20	@ tmp459,
 5445 04a8 D318     		adds	r3, r2, r3	@ D.7903, D.7905, tmp459
 5446 04aa 1B78     		ldrb	r3, [r3]	@ D.7902, *_167
 5447 04ac 002B     		cmp	r3, #0	@ D.7902,
 5448 04ae ACD1     		bne	.L362	@,
1923:src/sim900_800.c **** 											}
1924:src/sim900_800.c **** 
1925:src/sim900_800.c **** 											GSMReadSMSrepIn[19] = 0;
 5449              		.loc 1 1925 0
 5450 04b0 504B     		ldr	r3, .L380	@ tmp460,
 5451 04b2 0022     		movs	r2, #0	@ tmp461,
 5452 04b4 DA74     		strb	r2, [r3, #19]	@ tmp462, GSMReadSMSrepIn
1926:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000: AR
 5453              		.loc 1 1926 0
 5454 04b6 5749     		ldr	r1, .L380+32	@ tmp463,
 5455 04b8 4E4B     		ldr	r3, .L380	@ tmp464,
 5456 04ba 0822     		movs	r2, #8	@,
 5457 04bc 1800     		movs	r0, r3	@, tmp464
 5458 04be FFF7FEFF 		bl	strncmp	@
 5459 04c2 031E     		subs	r3, r0, #0	@ D.7901,,
 5460 04c4 1FD1     		bne	.L363	@,
1927:src/sim900_800.c **** 											{
1928:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5461              		.loc 1 1928 0
 5462 04c6 029B     		ldr	r3, [sp, #8]	@ tmp465, puserCode
 5463 04c8 1800     		movs	r0, r3	@, tmp465
 5464 04ca FFF7FEFF 		bl	strlen	@
 5465 04ce 0200     		movs	r2, r0	@ D.7904,
 5466 04d0 0299     		ldr	r1, [sp, #8]	@ tmp466, puserCode
 5467 04d2 514B     		ldr	r3, .L380+36	@ tmp467,
 5468 04d4 1800     		movs	r0, r3	@, tmp467
 5469 04d6 FFF7FEFF 		bl	strncmp	@
 5470 04da 031E     		subs	r3, r0, #0	@ D.7901,,
 5471 04dc 13D1     		bne	.L363	@,
1929:src/sim900_800.c **** 												{
1930:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5472              		.loc 1 1930 0
 5473 04de 4F49     		ldr	r1, .L380+40	@ tmp468,
 5474 04e0 019B     		ldr	r3, [sp, #4]	@ tmp469, pclaveAct
ARM GAS  /tmp/ccCNyPsy.s 			page 134


 5475 04e2 0422     		movs	r2, #4	@,
 5476 04e4 1800     		movs	r0, r3	@, tmp469
 5477 04e6 FFF7FEFF 		bl	strncpy	@
1931:src/sim900_800.c **** 
1932:src/sim900_800.c **** 													*pActDact |= 0x40; //Armar
 5478              		.loc 1 1932 0
 5479 04ea 009B     		ldr	r3, [sp]	@ tmp470, pActDact
 5480 04ec 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5481 04ee 4022     		movs	r2, #64	@ tmp472,
 5482 04f0 1343     		orrs	r3, r2	@ tmp471, tmp472
 5483 04f2 DAB2     		uxtb	r2, r3	@ D.7900, tmp471
 5484 04f4 009B     		ldr	r3, [sp]	@ tmp473, pActDact
 5485 04f6 1A70     		strb	r2, [r3]	@ tmp474, *pActDact_102(D)
1933:src/sim900_800.c **** 													*pActDact |= 0x02; //SendOK.
 5486              		.loc 1 1933 0
 5487 04f8 009B     		ldr	r3, [sp]	@ tmp475, pActDact
 5488 04fa 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5489 04fc 0222     		movs	r2, #2	@ tmp477,
 5490 04fe 1343     		orrs	r3, r2	@ tmp476, tmp477
 5491 0500 DAB2     		uxtb	r2, r3	@ D.7900, tmp476
 5492 0502 009B     		ldr	r3, [sp]	@ tmp478, pActDact
 5493 0504 1A70     		strb	r2, [r3]	@ tmp479, *pActDact_102(D)
 5494              	.L363:
1934:src/sim900_800.c **** 												}
1935:src/sim900_800.c **** 											}
1936:src/sim900_800.c **** 
1937:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000: DR
 5495              		.loc 1 1937 0
 5496 0506 4649     		ldr	r1, .L380+44	@ tmp480,
 5497 0508 3A4B     		ldr	r3, .L380	@ tmp481,
 5498 050a 0822     		movs	r2, #8	@,
 5499 050c 1800     		movs	r0, r3	@, tmp481
 5500 050e FFF7FEFF 		bl	strncmp	@
 5501 0512 031E     		subs	r3, r0, #0	@ D.7901,,
 5502 0514 20D1     		bne	.L357	@,
1938:src/sim900_800.c **** 											{
1939:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5503              		.loc 1 1939 0
 5504 0516 029B     		ldr	r3, [sp, #8]	@ tmp482, puserCode
 5505 0518 1800     		movs	r0, r3	@, tmp482
 5506 051a FFF7FEFF 		bl	strlen	@
 5507 051e 0200     		movs	r2, r0	@ D.7904,
 5508 0520 0299     		ldr	r1, [sp, #8]	@ tmp483, puserCode
 5509 0522 3D4B     		ldr	r3, .L380+36	@ tmp484,
 5510 0524 1800     		movs	r0, r3	@, tmp484
 5511 0526 FFF7FEFF 		bl	strncmp	@
 5512 052a 031E     		subs	r3, r0, #0	@ D.7901,,
 5513 052c 14D1     		bne	.L357	@,
1940:src/sim900_800.c **** 												{
1941:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5514              		.loc 1 1941 0
 5515 052e 3B49     		ldr	r1, .L380+40	@ tmp485,
 5516 0530 019B     		ldr	r3, [sp, #4]	@ tmp486, pclaveAct
 5517 0532 0422     		movs	r2, #4	@,
 5518 0534 1800     		movs	r0, r3	@, tmp486
 5519 0536 FFF7FEFF 		bl	strncpy	@
1942:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 135


1943:src/sim900_800.c **** 													*pActDact |= 0x80; //Desrmar
 5520              		.loc 1 1943 0
 5521 053a 009B     		ldr	r3, [sp]	@ tmp487, pActDact
 5522 053c 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5523 053e 8022     		movs	r2, #128	@ tmp543,
 5524 0540 5242     		rsbs	r2, r2, #0	@ tmp489, tmp543
 5525 0542 1343     		orrs	r3, r2	@ tmp488, tmp489
 5526 0544 DAB2     		uxtb	r2, r3	@ D.7900, tmp488
 5527 0546 009B     		ldr	r3, [sp]	@ tmp490, pActDact
 5528 0548 1A70     		strb	r2, [r3]	@ tmp491, *pActDact_102(D)
1944:src/sim900_800.c **** 													*pActDact |= 0x02; //SendOK.
 5529              		.loc 1 1944 0
 5530 054a 009B     		ldr	r3, [sp]	@ tmp492, pActDact
 5531 054c 1B78     		ldrb	r3, [r3]	@ D.7900, *pActDact_102(D)
 5532 054e 0222     		movs	r2, #2	@ tmp494,
 5533 0550 1343     		orrs	r3, r2	@ tmp493, tmp494
 5534 0552 DAB2     		uxtb	r2, r3	@ D.7900, tmp493
 5535 0554 009B     		ldr	r3, [sp]	@ tmp495, pActDact
 5536 0556 1A70     		strb	r2, [r3]	@ tmp496, *pActDact_102(D)
 5537              	.L357:
1945:src/sim900_800.c **** 												}
1946:src/sim900_800.c **** 											}
1947:src/sim900_800.c **** 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1948:src/sim900_800.c **** 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1949:src/sim900_800.c **** 											//Led4Toggle();
1950:src/sim900_800.c **** 										}
1951:src/sim900_800.c **** 
1952:src/sim900_800.c **** 										GSMReadSMSState = 0;
 5538              		.loc 1 1952 0
 5539 0558 2A4B     		ldr	r3, .L380+16	@ tmp497,
 5540 055a 0022     		movs	r2, #0	@ tmp498,
 5541 055c 1A70     		strb	r2, [r3]	@ tmp499, GSMReadSMSState
1953:src/sim900_800.c **** 										GSMnumSMS++;
 5542              		.loc 1 1953 0
 5543 055e 264B     		ldr	r3, .L380+4	@ tmp500,
 5544 0560 1B78     		ldrb	r3, [r3]	@ D.7900, GSMnumSMS
 5545 0562 0133     		adds	r3, r3, #1	@ tmp501,
 5546 0564 DAB2     		uxtb	r2, r3	@ D.7900, tmp501
 5547 0566 244B     		ldr	r3, .L380+4	@ tmp502,
 5548 0568 1A70     		strb	r2, [r3]	@ tmp503, GSMnumSMS
 5549              	.L356:
1954:src/sim900_800.c **** 									}
1955:src/sim900_800.c **** 								}
1956:src/sim900_800.c **** 
1957:src/sim900_800.c **** 								if (i > 2)
 5550              		.loc 1 1957 0
 5551 056a 1723     		movs	r3, #23	@ tmp504,
 5552 056c 6B44     		add	r3, r3, sp	@ tmp504,
 5553 056e 1B78     		ldrb	r3, [r3]	@ tmp505, i
 5554 0570 022B     		cmp	r3, #2	@ tmp505,
 5555 0572 2FD9     		bls	.L376	@,
1958:src/sim900_800.c **** 								{
1959:src/sim900_800.c **** 									GSMReadSMSState = 0;
 5556              		.loc 1 1959 0
 5557 0574 234B     		ldr	r3, .L380+16	@ tmp506,
 5558 0576 0022     		movs	r2, #0	@ tmp507,
 5559 0578 1A70     		strb	r2, [r3]	@ tmp508, GSMReadSMSState
ARM GAS  /tmp/ccCNyPsy.s 			page 136


1960:src/sim900_800.c **** 									//GSMrxSMSState = 0;
1961:src/sim900_800.c **** 								}
1962:src/sim900_800.c **** 							break;
 5560              		.loc 1 1962 0
 5561 057a 2BE0     		b	.L376	@
 5562              	.L370:
1963:src/sim900_800.c **** 
1964:src/sim900_800.c **** 						default:
1965:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5563              		.loc 1 1965 0
 5564 057c 214B     		ldr	r3, .L380+16	@ tmp509,
 5565 057e 0022     		movs	r2, #0	@ tmp510,
 5566 0580 1A70     		strb	r2, [r3]	@ tmp511, GSMReadSMSState
1966:src/sim900_800.c **** 							break;
 5567              		.loc 1 1966 0
 5568 0582 C046     		nop
 5569 0584 27E0     		b	.L365	@
 5570              	.L351:
1967:src/sim900_800.c **** 						}
1968:src/sim900_800.c **** 			}
1969:src/sim900_800.c **** 			else
1970:src/sim900_800.c **** 			{
1971:src/sim900_800.c **** 
1972:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 5571              		.loc 1 1972 0
 5572 0586 1724     		movs	r4, #23	@ tmp512,
 5573 0588 6C44     		add	r4, r4, sp	@ tmp512,
 5574 058a 1F4B     		ldr	r3, .L380+20	@ tmp513,
 5575 058c 2548     		ldr	r0, .L380+48	@ tmp514,
 5576 058e 0022     		movs	r2, #0	@,
 5577 0590 0F21     		movs	r1, #15	@,
 5578 0592 FFF7FEFF 		bl	GSMSendCommand	@
 5579 0596 0300     		movs	r3, r0	@ tmp515,
 5580 0598 2370     		strb	r3, [r4]	@ tmp517, i
1973:src/sim900_800.c **** 
1974:src/sim900_800.c **** 				if (i == 2)
 5581              		.loc 1 1974 0
 5582 059a 1723     		movs	r3, #23	@ tmp518,
 5583 059c 6B44     		add	r3, r3, sp	@ tmp518,
 5584 059e 1B78     		ldrb	r3, [r3]	@ tmp519, i
 5585 05a0 022B     		cmp	r3, #2	@ tmp519,
 5586 05a2 0BD1     		bne	.L366	@,
1975:src/sim900_800.c **** 				{
1976:src/sim900_800.c **** 					GSMnumSMS = 1;
 5587              		.loc 1 1976 0
 5588 05a4 144B     		ldr	r3, .L380+4	@ tmp520,
 5589 05a6 0122     		movs	r2, #1	@ tmp521,
 5590 05a8 1A70     		strb	r2, [r3]	@ tmp522, GSMnumSMS
1977:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5591              		.loc 1 1977 0
 5592 05aa 164B     		ldr	r3, .L380+16	@ tmp523,
 5593 05ac 0022     		movs	r2, #0	@ tmp524,
 5594 05ae 1A70     		strb	r2, [r3]	@ tmp525, GSMReadSMSState
1978:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5595              		.loc 1 1978 0
 5596 05b0 1D4B     		ldr	r3, .L380+52	@ tmp526,
 5597 05b2 0022     		movs	r2, #0	@ tmp527,
ARM GAS  /tmp/ccCNyPsy.s 			page 137


 5598 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMrxSMSState
1979:src/sim900_800.c **** 					GSMCantSMS2 = 0;
 5599              		.loc 1 1979 0
 5600 05b6 1D4B     		ldr	r3, .L380+56	@ tmp529,
 5601 05b8 0022     		movs	r2, #0	@ tmp530,
 5602 05ba 1A70     		strb	r2, [r3]	@ tmp531, GSMCantSMS2
 5603              	.L366:
1980:src/sim900_800.c **** 				}
1981:src/sim900_800.c **** 
1982:src/sim900_800.c **** 				if (i > 2)
 5604              		.loc 1 1982 0
 5605 05bc 1723     		movs	r3, #23	@ tmp532,
 5606 05be 6B44     		add	r3, r3, sp	@ tmp532,
 5607 05c0 1B78     		ldrb	r3, [r3]	@ tmp533, i
 5608 05c2 022B     		cmp	r3, #2	@ tmp533,
 5609 05c4 12D9     		bls	.L377	@,
1983:src/sim900_800.c **** 				{
1984:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5610              		.loc 1 1984 0
 5611 05c6 184B     		ldr	r3, .L380+52	@ tmp534,
 5612 05c8 0022     		movs	r2, #0	@ tmp535,
 5613 05ca 1A70     		strb	r2, [r3]	@ tmp536, GSMrxSMSState
1985:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5614              		.loc 1 1985 0
 5615 05cc 0D4B     		ldr	r3, .L380+16	@ tmp537,
 5616 05ce 0022     		movs	r2, #0	@ tmp538,
 5617 05d0 1A70     		strb	r2, [r3]	@ tmp539, GSMReadSMSState
1986:src/sim900_800.c **** 				}
1987:src/sim900_800.c **** 			}
1988:src/sim900_800.c **** 			break;
 5618              		.loc 1 1988 0
 5619 05d2 0BE0     		b	.L377	@
 5620              	.L376:
1962:src/sim900_800.c **** 
 5621              		.loc 1 1962 0
 5622 05d4 C046     		nop
 5623              	.L365:
 5624              		.loc 1 1988 0 discriminator 6
 5625 05d6 09E0     		b	.L377	@
 5626              	.L369:
1989:src/sim900_800.c **** 		default:
1990:src/sim900_800.c **** 			GSMrxSMSState = 0;
 5627              		.loc 1 1990 0
 5628 05d8 134B     		ldr	r3, .L380+52	@ tmp540,
 5629 05da 0022     		movs	r2, #0	@ tmp541,
 5630 05dc 1A70     		strb	r2, [r3]	@ tmp542, GSMrxSMSState
1991:src/sim900_800.c **** 			break;
 5631              		.loc 1 1991 0
 5632 05de 06E0     		b	.L344	@
 5633              	.L371:
1752:src/sim900_800.c **** 
 5634              		.loc 1 1752 0
 5635 05e0 C046     		nop
 5636 05e2 04E0     		b	.L374	@
 5637              	.L373:
1858:src/sim900_800.c **** 
 5638              		.loc 1 1858 0
ARM GAS  /tmp/ccCNyPsy.s 			page 138


 5639 05e4 C046     		nop
 5640 05e6 02E0     		b	.L374	@
 5641              	.L375:
1880:src/sim900_800.c **** 
 5642              		.loc 1 1880 0
 5643 05e8 C046     		nop
 5644 05ea 00E0     		b	.L374	@
 5645              	.L377:
1988:src/sim900_800.c **** 		default:
 5646              		.loc 1 1988 0
 5647 05ec C046     		nop
 5648              	.L344:
 5649              	.L374:
1992:src/sim900_800.c **** 		}
1993:src/sim900_800.c **** 	}
1994:src/sim900_800.c **** }
 5650              		.loc 1 1994 0
 5651 05ee C046     		nop
 5652 05f0 06B0     		add	sp, sp, #24	@,,
 5653              		@ sp needed	@
 5654 05f2 10BD     		pop	{r4, pc}
 5655              	.L381:
 5656              		.align	2
 5657              	.L380:
 5658 05f4 00000000 		.word	GSMReadSMSrepIn
 5659 05f8 00000000 		.word	GSMnumSMS
 5660 05fc 30020000 		.word	.LC179
 5661 0600 00000000 		.word	GSMReadSMScommand
 5662 0604 00000000 		.word	GSMReadSMSState
 5663 0608 00000000 		.word	GSMbuffRtaCommand
 5664 060c 40020000 		.word	.LC183
 5665 0610 6C000000 		.word	.LC53
 5666 0614 48020000 		.word	.LC186
 5667 0618 09000000 		.word	GSMReadSMSrepIn+9
 5668 061c 10000000 		.word	buffUARTGSMrx2+16
 5669 0620 54020000 		.word	.LC190
 5670 0624 60020000 		.word	.LC192
 5671 0628 00000000 		.word	GSMrxSMSState
 5672 062c 00000000 		.word	GSMCantSMS2
 5673              		.cfi_endproc
 5674              	.LFE33:
 5675              		.size	GSMrxSMS, .-GSMrxSMS
 5676              		.section	.text.GSMConfigPDPGPRS,"ax",%progbits
 5677              		.align	2
 5678              		.global	GSMConfigPDPGPRS
 5679              		.code	16
 5680              		.thumb_func
 5681              		.type	GSMConfigPDPGPRS, %function
 5682              	GSMConfigPDPGPRS:
 5683              	.LFB34:
1995:src/sim900_800.c **** 
1996:src/sim900_800.c **** char GSMConfigPDPGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *
1997:src/sim900_800.c **** {
 5684              		.loc 1 1997 0
 5685              		.cfi_startproc
 5686 0000 10B5     		push	{r4, lr}	@
 5687              	.LCFI21:
ARM GAS  /tmp/ccCNyPsy.s 			page 139


 5688              		.cfi_def_cfa_offset 8
 5689              		.cfi_offset 4, -8
 5690              		.cfi_offset 14, -4
 5691 0002 86B0     		sub	sp, sp, #24	@,,
 5692              	.LCFI22:
 5693              		.cfi_def_cfa_offset 32
 5694 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 5695 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 5696 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 5697 000a 0F23     		movs	r3, #15	@ tmp173,
 5698 000c 6B44     		add	r3, r3, sp	@ tmp173,
 5699 000e 021C     		adds	r2, r0, #0	@ tmp174, tmp172
 5700 0010 1A70     		strb	r2, [r3]	@ tmp174, sim
1998:src/sim900_800.c **** 	unsigned char i;
1999:src/sim900_800.c **** 
2000:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 5701              		.loc 1 2000 0
 5702 0012 C64B     		ldr	r3, .L458	@ tmp175,
 5703 0014 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5704 0016 102B     		cmp	r3, #16	@ D.7912,
 5705 0018 00D9     		bls	.LCB4748	@
 5706 001a 21E3     		b	.L383	@long jump	@
 5707              	.LCB4748:
 5708 001c 9A00     		lsls	r2, r3, #2	@ tmp176, D.7912,
 5709 001e C44B     		ldr	r3, .L458+4	@ tmp178,
 5710 0020 D318     		adds	r3, r2, r3	@ tmp177, tmp176, tmp178
 5711 0022 1B68     		ldr	r3, [r3]	@ tmp179,
 5712 0024 9F46     		mov	pc, r3	@ tmp179
 5713              		.section	.rodata.GSMConfigPDPGPRS,"a",%progbits
 5714              		.align	2
 5715              	.L385:
 5716 0000 26000000 		.word	.L384
 5717 0004 42000000 		.word	.L386
 5718 0008 4A000000 		.word	.L387
 5719 000c 8A000000 		.word	.L388
 5720 0010 A2010000 		.word	.L389
 5721 0014 FE010000 		.word	.L390
 5722 0018 5A020000 		.word	.L391
 5723 001c EA020000 		.word	.L392
 5724 0020 8C030000 		.word	.L393
 5725 0024 32040000 		.word	.L394
 5726 0028 00050000 		.word	.L395
 5727 002c 3A050000 		.word	.L396
 5728 0030 74050000 		.word	.L397
 5729 0034 BA050000 		.word	.L398
 5730 0038 C2050000 		.word	.L399
 5731 003c CC050000 		.word	.L400
 5732 0040 24060000 		.word	.L401
 5733              		.section	.text.GSMConfigPDPGPRS
 5734              	.L384:
2001:src/sim900_800.c **** 	{
2002:src/sim900_800.c **** 
2003:src/sim900_800.c **** 		case 0:
2004:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 5735              		.loc 1 2004 0
 5736 0026 C34B     		ldr	r3, .L458+8	@ tmp180,
 5737 0028 0BAA     		add	r2, sp, #44	@ tmp181,,
ARM GAS  /tmp/ccCNyPsy.s 			page 140


 5738 002a 1288     		ldrh	r2, [r2]	@ tmp182, timeOut
 5739 002c 1A80     		strh	r2, [r3]	@ tmp182, GSMConfigGPRSTimeOut
2005:src/sim900_800.c **** 			GSMConfigGPRSState++;
 5740              		.loc 1 2005 0
 5741 002e BF4B     		ldr	r3, .L458	@ tmp183,
 5742 0030 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5743 0032 0133     		adds	r3, r3, #1	@ tmp184,
 5744 0034 DAB2     		uxtb	r2, r3	@ D.7911, tmp184
 5745 0036 BD4B     		ldr	r3, .L458	@ tmp185,
 5746 0038 1A70     		strb	r2, [r3]	@ tmp186, GSMConfigGPRSState
2006:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 5747              		.loc 1 2006 0
 5748 003a BF4B     		ldr	r3, .L458+12	@ tmp187,
 5749 003c 0122     		movs	r2, #1	@ tmp188,
 5750 003e 1A70     		strb	r2, [r3]	@ tmp189, GSMConfigGPRSflag
2007:src/sim900_800.c **** 			break;
 5751              		.loc 1 2007 0
 5752 0040 29E3     		b	.L402	@
 5753              	.L386:
2008:src/sim900_800.c **** 
2009:src/sim900_800.c **** 		case 1:
2010:src/sim900_800.c **** 			GSMConfigGPRSState = 15;
 5754              		.loc 1 2010 0
 5755 0042 BA4B     		ldr	r3, .L458	@ tmp190,
 5756 0044 0F22     		movs	r2, #15	@ tmp191,
 5757 0046 1A70     		strb	r2, [r3]	@ tmp192, GSMConfigGPRSState
2011:src/sim900_800.c **** /*
2012:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 50, 0, &GSMbuffRtaCommand[0]);
2013:src/sim900_800.c **** 
2014:src/sim900_800.c **** 			if (i == 2)
2015:src/sim900_800.c **** 			{
2016:src/sim900_800.c **** 				//Respondio ACK.
2017:src/sim900_800.c **** 				//Conectado.
2018:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2019:src/sim900_800.c **** 				return 2;
2020:src/sim900_800.c **** 			}
2021:src/sim900_800.c **** 
2022:src/sim900_800.c **** 			if (i > 2)
2023:src/sim900_800.c **** 			{
2024:src/sim900_800.c **** 				//No conectado.
2025:src/sim900_800.c **** 				//Seleccionar Sim.
2026:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
2027:src/sim900_800.c **** 			}
2028:src/sim900_800.c **** */
2029:src/sim900_800.c **** 			break;
 5758              		.loc 1 2029 0
 5759 0048 25E3     		b	.L402	@
 5760              	.L387:
2030:src/sim900_800.c **** 		case 2:
2031:src/sim900_800.c **** 
2032:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 5761              		.loc 1 2032 0
 5762 004a 1724     		movs	r4, #23	@ tmp193,
 5763 004c 6C44     		add	r4, r4, sp	@ tmp193,
 5764 004e BB4B     		ldr	r3, .L458+16	@ tmp194,
 5765 0050 BB48     		ldr	r0, .L458+20	@ tmp195,
 5766 0052 0022     		movs	r2, #0	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 141


 5767 0054 3221     		movs	r1, #50	@,
 5768 0056 FFF7FEFF 		bl	GSMSendCommand	@
 5769 005a 0300     		movs	r3, r0	@ tmp196,
 5770 005c 2370     		strb	r3, [r4]	@ tmp198, i
2033:src/sim900_800.c **** 
2034:src/sim900_800.c **** 			if (i == 2)
 5771              		.loc 1 2034 0
 5772 005e 1723     		movs	r3, #23	@ tmp199,
 5773 0060 6B44     		add	r3, r3, sp	@ tmp199,
 5774 0062 1B78     		ldrb	r3, [r3]	@ tmp200, i
 5775 0064 022B     		cmp	r3, #2	@ tmp200,
 5776 0066 05D1     		bne	.L403	@,
2035:src/sim900_800.c **** 			{
2036:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5777              		.loc 1 2036 0
 5778 0068 B04B     		ldr	r3, .L458	@ tmp201,
 5779 006a 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5780 006c 0133     		adds	r3, r3, #1	@ tmp202,
 5781 006e DAB2     		uxtb	r2, r3	@ D.7911, tmp202
 5782 0070 AE4B     		ldr	r3, .L458	@ tmp203,
 5783 0072 1A70     		strb	r2, [r3]	@ tmp204, GSMConfigGPRSState
 5784              	.L403:
2037:src/sim900_800.c **** 			}
2038:src/sim900_800.c **** 
2039:src/sim900_800.c **** 			if (i > 2)
 5785              		.loc 1 2039 0
 5786 0074 1723     		movs	r3, #23	@ tmp205,
 5787 0076 6B44     		add	r3, r3, sp	@ tmp205,
 5788 0078 1B78     		ldrb	r3, [r3]	@ tmp206, i
 5789 007a 022B     		cmp	r3, #2	@ tmp206,
 5790 007c 00D8     		bhi	.LCB4810	@
 5791 007e F3E2     		b	.L446	@long jump	@
 5792              	.LCB4810:
2040:src/sim900_800.c **** 			{
2041:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5793              		.loc 1 2041 0
 5794 0080 AA4B     		ldr	r3, .L458	@ tmp207,
 5795 0082 0022     		movs	r2, #0	@ tmp208,
 5796 0084 1A70     		strb	r2, [r3]	@ tmp209, GSMConfigGPRSState
2042:src/sim900_800.c **** 				return 3;
 5797              		.loc 1 2042 0
 5798 0086 0323     		movs	r3, #3	@ D.7911,
 5799 0088 0FE3     		b	.L405	@
 5800              	.L388:
2043:src/sim900_800.c **** 			}
2044:src/sim900_800.c **** 			break;
2045:src/sim900_800.c **** 		case 3:
2046:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 5801              		.loc 1 2046 0
 5802 008a AB4B     		ldr	r3, .L458+12	@ tmp210,
 5803 008c 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSflag
 5804 008e 022B     		cmp	r3, #2	@ D.7911,
 5805 0090 00D0     		beq	.LCB4822	@
 5806 0092 EBE2     		b	.L447	@long jump	@
 5807              	.LCB4822:
2047:src/sim900_800.c **** 			{
2048:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
ARM GAS  /tmp/ccCNyPsy.s 			page 142


2049:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 5808              		.loc 1 2049 0
 5809 0094 AB49     		ldr	r1, .L458+24	@ tmp211,
 5810 0096 AC4B     		ldr	r3, .L458+28	@ tmp212,
 5811 0098 0A22     		movs	r2, #10	@,
 5812 009a 1800     		movs	r0, r3	@, tmp212
 5813 009c FFF7FEFF 		bl	strncmp	@
 5814 00a0 031E     		subs	r3, r0, #0	@ D.7912,,
 5815 00a2 08D1     		bne	.L407	@,
2050:src/sim900_800.c **** 				{
2051:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 5816              		.loc 1 2051 0
 5817 00a4 A14B     		ldr	r3, .L458	@ tmp213,
 5818 00a6 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5819 00a8 0133     		adds	r3, r3, #1	@ tmp214,
 5820 00aa DAB2     		uxtb	r2, r3	@ D.7911, tmp214
 5821 00ac 9F4B     		ldr	r3, .L458	@ tmp215,
 5822 00ae 1A70     		strb	r2, [r3]	@ tmp216, GSMConfigGPRSState
2052:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5823              		.loc 1 2052 0
 5824 00b0 A14B     		ldr	r3, .L458+12	@ tmp217,
 5825 00b2 0122     		movs	r2, #1	@ tmp218,
 5826 00b4 1A70     		strb	r2, [r3]	@ tmp219, GSMConfigGPRSflag
 5827              	.L407:
2053:src/sim900_800.c **** 				}
2054:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
2055:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 5828              		.loc 1 2055 0
 5829 00b6 A549     		ldr	r1, .L458+32	@ tmp220,
 5830 00b8 A34B     		ldr	r3, .L458+28	@ tmp221,
 5831 00ba 0822     		movs	r2, #8	@,
 5832 00bc 1800     		movs	r0, r3	@, tmp221
 5833 00be FFF7FEFF 		bl	strncmp	@
 5834 00c2 031E     		subs	r3, r0, #0	@ D.7912,,
 5835 00c4 08D1     		bne	.L408	@,
2056:src/sim900_800.c **** 				{
2057:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 5836              		.loc 1 2057 0
 5837 00c6 994B     		ldr	r3, .L458	@ tmp222,
 5838 00c8 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5839 00ca 0833     		adds	r3, r3, #8	@ tmp223,
 5840 00cc DAB2     		uxtb	r2, r3	@ D.7911, tmp223
 5841 00ce 974B     		ldr	r3, .L458	@ tmp224,
 5842 00d0 1A70     		strb	r2, [r3]	@ tmp225, GSMConfigGPRSState
2058:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5843              		.loc 1 2058 0
 5844 00d2 994B     		ldr	r3, .L458+12	@ tmp226,
 5845 00d4 0122     		movs	r2, #1	@ tmp227,
 5846 00d6 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigGPRSflag
 5847              	.L408:
2059:src/sim900_800.c **** 				}
2060:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
2061:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 5848              		.loc 1 2061 0
 5849 00d8 9D49     		ldr	r1, .L458+36	@ tmp229,
 5850 00da 9B4B     		ldr	r3, .L458+28	@ tmp230,
 5851 00dc 0A22     		movs	r2, #10	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 143


 5852 00de 1800     		movs	r0, r3	@, tmp230
 5853 00e0 FFF7FEFF 		bl	strncmp	@
 5854 00e4 031E     		subs	r3, r0, #0	@ D.7912,,
 5855 00e6 08D1     		bne	.L409	@,
2062:src/sim900_800.c **** 				{
2063:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 5856              		.loc 1 2063 0
 5857 00e8 904B     		ldr	r3, .L458	@ tmp231,
 5858 00ea 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5859 00ec 0933     		adds	r3, r3, #9	@ tmp232,
 5860 00ee DAB2     		uxtb	r2, r3	@ D.7911, tmp232
 5861 00f0 8E4B     		ldr	r3, .L458	@ tmp233,
 5862 00f2 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
2064:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5863              		.loc 1 2064 0
 5864 00f4 904B     		ldr	r3, .L458+12	@ tmp235,
 5865 00f6 0122     		movs	r2, #1	@ tmp236,
 5866 00f8 1A70     		strb	r2, [r3]	@ tmp237, GSMConfigGPRSflag
 5867              	.L409:
2065:src/sim900_800.c **** 				}
2066:src/sim900_800.c **** 
2067:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
2068:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 5868              		.loc 1 2068 0
 5869 00fa 9649     		ldr	r1, .L458+40	@ tmp238,
 5870 00fc 924B     		ldr	r3, .L458+28	@ tmp239,
 5871 00fe 0922     		movs	r2, #9	@,
 5872 0100 1800     		movs	r0, r3	@, tmp239
 5873 0102 FFF7FEFF 		bl	strncmp	@
 5874 0106 031E     		subs	r3, r0, #0	@ D.7912,,
 5875 0108 04D1     		bne	.L410	@,
2069:src/sim900_800.c **** 				{
2070:src/sim900_800.c **** /*					GSMConfigGPRSState += 10;
2071:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2072:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2073:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2074:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2075:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2076:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2077:src/sim900_800.c **** */
2078:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5876              		.loc 1 2078 0
 5877 010a 884B     		ldr	r3, .L458	@ tmp240,
 5878 010c 0022     		movs	r2, #0	@ tmp241,
 5879 010e 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigGPRSState
2079:src/sim900_800.c **** 					return 2;
 5880              		.loc 1 2079 0
 5881 0110 0223     		movs	r3, #2	@ D.7911,
 5882 0112 CAE2     		b	.L405	@
 5883              	.L410:
2080:src/sim900_800.c **** 				}
2081:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
2082:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 5884              		.loc 1 2082 0
 5885 0114 9049     		ldr	r1, .L458+44	@ tmp243,
 5886 0116 8C4B     		ldr	r3, .L458+28	@ tmp244,
 5887 0118 0E22     		movs	r2, #14	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 144


 5888 011a 1800     		movs	r0, r3	@, tmp244
 5889 011c FFF7FEFF 		bl	strncmp	@
 5890 0120 031E     		subs	r3, r0, #0	@ D.7912,,
 5891 0122 04D1     		bne	.L411	@,
2083:src/sim900_800.c **** 				{
2084:src/sim900_800.c **** 					//GSMConfigGPRSState -= 1;
2085:src/sim900_800.c **** 					//GSMConfigGPRSflag = 1;
2086:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5892              		.loc 1 2086 0
 5893 0124 814B     		ldr	r3, .L458	@ tmp245,
 5894 0126 0022     		movs	r2, #0	@ tmp246,
 5895 0128 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigGPRSState
2087:src/sim900_800.c **** 					return 2;
 5896              		.loc 1 2087 0
 5897 012a 0223     		movs	r3, #2	@ D.7911,
 5898 012c BDE2     		b	.L405	@
 5899              	.L411:
2088:src/sim900_800.c **** 				}
2089:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
2090:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 5900              		.loc 1 2090 0
 5901 012e 8B49     		ldr	r1, .L458+48	@ tmp248,
 5902 0130 854B     		ldr	r3, .L458+28	@ tmp249,
 5903 0132 0A22     		movs	r2, #10	@,
 5904 0134 1800     		movs	r0, r3	@, tmp249
 5905 0136 FFF7FEFF 		bl	strncmp	@
 5906 013a 031E     		subs	r3, r0, #0	@ D.7912,,
 5907 013c 04D1     		bne	.L412	@,
2091:src/sim900_800.c **** 				{
2092:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5908              		.loc 1 2092 0
 5909 013e 7B4B     		ldr	r3, .L458	@ tmp250,
 5910 0140 0022     		movs	r2, #0	@ tmp251,
 5911 0142 1A70     		strb	r2, [r3]	@ tmp252, GSMConfigGPRSState
2093:src/sim900_800.c **** 					return 2;
 5912              		.loc 1 2093 0
 5913 0144 0223     		movs	r3, #2	@ D.7911,
 5914 0146 B0E2     		b	.L405	@
 5915              	.L412:
2094:src/sim900_800.c **** 				}
2095:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
2096:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
2097:src/sim900_800.c **** 				{
2098:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
2099:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2100:src/sim900_800.c **** 				}
2101:src/sim900_800.c **** */
2102:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
2103:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 5916              		.loc 1 2103 0
 5917 0148 8549     		ldr	r1, .L458+52	@ tmp253,
 5918 014a 7F4B     		ldr	r3, .L458+28	@ tmp254,
 5919 014c 0A22     		movs	r2, #10	@,
 5920 014e 1800     		movs	r0, r3	@, tmp254
 5921 0150 FFF7FEFF 		bl	strncmp	@
 5922 0154 031E     		subs	r3, r0, #0	@ D.7912,,
 5923 0156 04D1     		bne	.L413	@,
ARM GAS  /tmp/ccCNyPsy.s 			page 145


2104:src/sim900_800.c **** 				{
2105:src/sim900_800.c **** 					/*	GSMConfigGPRSState += 10;
2106:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2107:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2108:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2109:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2110:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2111:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2112:src/sim900_800.c **** 					*/
2113:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5924              		.loc 1 2113 0
 5925 0158 744B     		ldr	r3, .L458	@ tmp255,
 5926 015a 0022     		movs	r2, #0	@ tmp256,
 5927 015c 1A70     		strb	r2, [r3]	@ tmp257, GSMConfigGPRSState
2114:src/sim900_800.c **** 					return 2;
 5928              		.loc 1 2114 0
 5929 015e 0223     		movs	r3, #2	@ D.7911,
 5930 0160 A3E2     		b	.L405	@
 5931              	.L413:
2115:src/sim900_800.c **** 				}
2116:src/sim900_800.c **** 
2117:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 5932              		.loc 1 2117 0
 5933 0162 8049     		ldr	r1, .L458+56	@ tmp258,
 5934 0164 784B     		ldr	r3, .L458+28	@ tmp259,
 5935 0166 0922     		movs	r2, #9	@,
 5936 0168 1800     		movs	r0, r3	@, tmp259
 5937 016a FFF7FEFF 		bl	strncmp	@
 5938 016e 031E     		subs	r3, r0, #0	@ D.7912,,
 5939 0170 04D1     		bne	.L414	@,
2118:src/sim900_800.c **** 				{
2119:src/sim900_800.c **** 					/*GSMConfigGPRSState += 11;
2120:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2121:src/sim900_800.c **** 					*/
2122:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5940              		.loc 1 2122 0
 5941 0172 6E4B     		ldr	r3, .L458	@ tmp260,
 5942 0174 0022     		movs	r2, #0	@ tmp261,
 5943 0176 1A70     		strb	r2, [r3]	@ tmp262, GSMConfigGPRSState
2123:src/sim900_800.c **** 					return 2;
 5944              		.loc 1 2123 0
 5945 0178 0223     		movs	r3, #2	@ D.7911,
 5946 017a 96E2     		b	.L405	@
 5947              	.L414:
2124:src/sim900_800.c **** 				}
2125:src/sim900_800.c **** 
2126:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 5948              		.loc 1 2126 0
 5949 017c 7A49     		ldr	r1, .L458+60	@ tmp263,
 5950 017e 724B     		ldr	r3, .L458+28	@ tmp264,
 5951 0180 0922     		movs	r2, #9	@,
 5952 0182 1800     		movs	r0, r3	@, tmp264
 5953 0184 FFF7FEFF 		bl	strncmp	@
 5954 0188 031E     		subs	r3, r0, #0	@ D.7912,,
 5955 018a 00D0     		beq	.LCB4967	@
 5956 018c 6EE2     		b	.L447	@long jump	@
 5957              	.LCB4967:
ARM GAS  /tmp/ccCNyPsy.s 			page 146


2127:src/sim900_800.c **** 				{
2128:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 5958              		.loc 1 2128 0
 5959 018e 674B     		ldr	r3, .L458	@ tmp265,
 5960 0190 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5961 0192 0D33     		adds	r3, r3, #13	@ tmp266,
 5962 0194 DAB2     		uxtb	r2, r3	@ D.7911, tmp266
 5963 0196 654B     		ldr	r3, .L458	@ tmp267,
 5964 0198 1A70     		strb	r2, [r3]	@ tmp268, GSMConfigGPRSState
2129:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5965              		.loc 1 2129 0
 5966 019a 674B     		ldr	r3, .L458+12	@ tmp269,
 5967 019c 0122     		movs	r2, #1	@ tmp270,
 5968 019e 1A70     		strb	r2, [r3]	@ tmp271, GSMConfigGPRSflag
2130:src/sim900_800.c **** 				}
2131:src/sim900_800.c **** 			}
2132:src/sim900_800.c **** 			break;
 5969              		.loc 1 2132 0
 5970 01a0 64E2     		b	.L447	@
 5971              	.L389:
2133:src/sim900_800.c **** 
2134:src/sim900_800.c **** 		case 4:
2135:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5972              		.loc 1 2135 0
 5973 01a2 1724     		movs	r4, #23	@ tmp272,
 5974 01a4 6C44     		add	r4, r4, sp	@ tmp272,
 5975 01a6 654B     		ldr	r3, .L458+16	@ tmp273,
 5976 01a8 7048     		ldr	r0, .L458+64	@ tmp274,
 5977 01aa 0122     		movs	r2, #1	@,
 5978 01ac 3221     		movs	r1, #50	@,
 5979 01ae FFF7FEFF 		bl	GSMSendCommand	@
 5980 01b2 0300     		movs	r3, r0	@ tmp275,
 5981 01b4 2370     		strb	r3, [r4]	@ tmp277, i
2136:src/sim900_800.c **** 
2137:src/sim900_800.c **** 			if (i == 2)
 5982              		.loc 1 2137 0
 5983 01b6 1723     		movs	r3, #23	@ tmp278,
 5984 01b8 6B44     		add	r3, r3, sp	@ tmp278,
 5985 01ba 1B78     		ldrb	r3, [r3]	@ tmp279, i
 5986 01bc 022B     		cmp	r3, #2	@ tmp279,
 5987 01be 13D1     		bne	.L415	@,
2138:src/sim900_800.c **** 			{
2139:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN: 
 5988              		.loc 1 2139 0
 5989 01c0 6B49     		ldr	r1, .L458+68	@ tmp280,
 5990 01c2 5E4B     		ldr	r3, .L458+16	@ tmp281,
 5991 01c4 0C22     		movs	r2, #12	@,
 5992 01c6 1800     		movs	r0, r3	@, tmp281
 5993 01c8 FFF7FEFF 		bl	strncmp	@
 5994 01cc 031E     		subs	r3, r0, #0	@ D.7912,,
 5995 01ce 06D1     		bne	.L416	@,
2140:src/sim900_800.c **** 				{
2141:src/sim900_800.c **** 					GSMConfigGPRSState++;
 5996              		.loc 1 2141 0
 5997 01d0 564B     		ldr	r3, .L458	@ tmp282,
 5998 01d2 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 5999 01d4 0133     		adds	r3, r3, #1	@ tmp283,
ARM GAS  /tmp/ccCNyPsy.s 			page 147


 6000 01d6 DAB2     		uxtb	r2, r3	@ D.7911, tmp283
 6001 01d8 544B     		ldr	r3, .L458	@ tmp284,
 6002 01da 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigGPRSState
 6003 01dc 04E0     		b	.L415	@
 6004              	.L416:
2142:src/sim900_800.c **** 				}
2143:src/sim900_800.c **** 				else
2144:src/sim900_800.c **** 				{
2145:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6005              		.loc 1 2145 0
 6006 01de 534B     		ldr	r3, .L458	@ tmp286,
 6007 01e0 0022     		movs	r2, #0	@ tmp287,
 6008 01e2 1A70     		strb	r2, [r3]	@ tmp288, GSMConfigGPRSState
2146:src/sim900_800.c **** 					return 3;
 6009              		.loc 1 2146 0
 6010 01e4 0323     		movs	r3, #3	@ D.7911,
 6011 01e6 60E2     		b	.L405	@
 6012              	.L415:
2147:src/sim900_800.c **** 				}
2148:src/sim900_800.c **** 			}
2149:src/sim900_800.c **** 
2150:src/sim900_800.c **** 			if (i > 2)
 6013              		.loc 1 2150 0
 6014 01e8 1723     		movs	r3, #23	@ tmp289,
 6015 01ea 6B44     		add	r3, r3, sp	@ tmp289,
 6016 01ec 1B78     		ldrb	r3, [r3]	@ tmp290, i
 6017 01ee 022B     		cmp	r3, #2	@ tmp290,
 6018 01f0 00D8     		bhi	.LCB5025	@
 6019 01f2 3DE2     		b	.L448	@long jump	@
 6020              	.LCB5025:
2151:src/sim900_800.c **** 			{
2152:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6021              		.loc 1 2152 0
 6022 01f4 4D4B     		ldr	r3, .L458	@ tmp291,
 6023 01f6 0022     		movs	r2, #0	@ tmp292,
 6024 01f8 1A70     		strb	r2, [r3]	@ tmp293, GSMConfigGPRSState
2153:src/sim900_800.c **** 				return 3;
 6025              		.loc 1 2153 0
 6026 01fa 0323     		movs	r3, #3	@ D.7911,
 6027 01fc 55E2     		b	.L405	@
 6028              	.L390:
2154:src/sim900_800.c **** 			}
2155:src/sim900_800.c **** 			break;
2156:src/sim900_800.c **** 
2157:src/sim900_800.c **** 		case 5:
2158:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6029              		.loc 1 2158 0
 6030 01fe 1724     		movs	r4, #23	@ tmp294,
 6031 0200 6C44     		add	r4, r4, sp	@ tmp294,
 6032 0202 4E4B     		ldr	r3, .L458+16	@ tmp295,
 6033 0204 5B48     		ldr	r0, .L458+72	@ tmp296,
 6034 0206 0122     		movs	r2, #1	@,
 6035 0208 3221     		movs	r1, #50	@,
 6036 020a FFF7FEFF 		bl	GSMSendCommand	@
 6037 020e 0300     		movs	r3, r0	@ tmp297,
 6038 0210 2370     		strb	r3, [r4]	@ tmp299, i
2159:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 148


2160:src/sim900_800.c **** 			if (i == 2)
 6039              		.loc 1 2160 0
 6040 0212 1723     		movs	r3, #23	@ tmp300,
 6041 0214 6B44     		add	r3, r3, sp	@ tmp300,
 6042 0216 1B78     		ldrb	r3, [r3]	@ tmp301, i
 6043 0218 022B     		cmp	r3, #2	@ tmp301,
 6044 021a 13D1     		bne	.L418	@,
2161:src/sim900_800.c **** 			{
2162:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 6045              		.loc 1 2162 0
 6046 021c 5649     		ldr	r1, .L458+76	@ tmp302,
 6047 021e 474B     		ldr	r3, .L458+16	@ tmp303,
 6048 0220 0A22     		movs	r2, #10	@,
 6049 0222 1800     		movs	r0, r3	@, tmp303
 6050 0224 FFF7FEFF 		bl	strncmp	@
 6051 0228 031E     		subs	r3, r0, #0	@ D.7912,,
 6052 022a 06D1     		bne	.L419	@,
2163:src/sim900_800.c **** 				{
2164:src/sim900_800.c **** 					GSMConfigGPRSState++;
 6053              		.loc 1 2164 0
 6054 022c 3F4B     		ldr	r3, .L458	@ tmp304,
 6055 022e 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 6056 0230 0133     		adds	r3, r3, #1	@ tmp305,
 6057 0232 DAB2     		uxtb	r2, r3	@ D.7911, tmp305
 6058 0234 3D4B     		ldr	r3, .L458	@ tmp306,
 6059 0236 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSState
 6060 0238 04E0     		b	.L418	@
 6061              	.L419:
2165:src/sim900_800.c **** 				}
2166:src/sim900_800.c **** 				else
2167:src/sim900_800.c **** 				{
2168:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6062              		.loc 1 2168 0
 6063 023a 3C4B     		ldr	r3, .L458	@ tmp308,
 6064 023c 0022     		movs	r2, #0	@ tmp309,
 6065 023e 1A70     		strb	r2, [r3]	@ tmp310, GSMConfigGPRSState
2169:src/sim900_800.c **** 					return 3;
 6066              		.loc 1 2169 0
 6067 0240 0323     		movs	r3, #3	@ D.7911,
 6068 0242 32E2     		b	.L405	@
 6069              	.L418:
2170:src/sim900_800.c **** 				}
2171:src/sim900_800.c **** 			}
2172:src/sim900_800.c **** 
2173:src/sim900_800.c **** 			if (i > 2)
 6070              		.loc 1 2173 0
 6071 0244 1723     		movs	r3, #23	@ tmp311,
 6072 0246 6B44     		add	r3, r3, sp	@ tmp311,
 6073 0248 1B78     		ldrb	r3, [r3]	@ tmp312, i
 6074 024a 022B     		cmp	r3, #2	@ tmp312,
 6075 024c 00D8     		bhi	.LCB5078	@
 6076 024e 11E2     		b	.L449	@long jump	@
 6077              	.LCB5078:
2174:src/sim900_800.c **** 			{
2175:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6078              		.loc 1 2175 0
 6079 0250 364B     		ldr	r3, .L458	@ tmp313,
ARM GAS  /tmp/ccCNyPsy.s 			page 149


 6080 0252 0022     		movs	r2, #0	@ tmp314,
 6081 0254 1A70     		strb	r2, [r3]	@ tmp315, GSMConfigGPRSState
2176:src/sim900_800.c **** 				return 3;
 6082              		.loc 1 2176 0
 6083 0256 0323     		movs	r3, #3	@ D.7911,
 6084 0258 27E2     		b	.L405	@
 6085              	.L391:
2177:src/sim900_800.c **** 			}
2178:src/sim900_800.c **** 			break;
2179:src/sim900_800.c **** 		case 6:
2180:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6086              		.loc 1 2180 0
 6087 025a 1724     		movs	r4, #23	@ tmp316,
 6088 025c 6C44     		add	r4, r4, sp	@ tmp316,
 6089 025e 374B     		ldr	r3, .L458+16	@ tmp317,
 6090 0260 4648     		ldr	r0, .L458+80	@ tmp318,
 6091 0262 0122     		movs	r2, #1	@,
 6092 0264 3221     		movs	r1, #50	@,
 6093 0266 FFF7FEFF 		bl	GSMSendCommand	@
 6094 026a 0300     		movs	r3, r0	@ tmp319,
 6095 026c 2370     		strb	r3, [r4]	@ tmp321, i
2181:src/sim900_800.c **** 
2182:src/sim900_800.c **** 			if (i == 2)
 6096              		.loc 1 2182 0
 6097 026e 1723     		movs	r3, #23	@ tmp322,
 6098 0270 6B44     		add	r3, r3, sp	@ tmp322,
 6099 0272 1B78     		ldrb	r3, [r3]	@ tmp323, i
 6100 0274 022B     		cmp	r3, #2	@ tmp323,
 6101 0276 2DD1     		bne	.L421	@,
2183:src/sim900_800.c **** 			{
2184:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 6102              		.loc 1 2184 0
 6103 0278 4149     		ldr	r1, .L458+84	@ tmp324,
 6104 027a 304B     		ldr	r3, .L458+16	@ tmp325,
 6105 027c 0522     		movs	r2, #5	@,
 6106 027e 1800     		movs	r0, r3	@, tmp325
 6107 0280 FFF7FEFF 		bl	strncmp	@
 6108 0284 031E     		subs	r3, r0, #0	@ D.7912,,
 6109 0286 20D1     		bne	.L422	@,
2185:src/sim900_800.c **** 				{
2186:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 6110              		.loc 1 2186 0
 6111 0288 2C4B     		ldr	r3, .L458+16	@ tmp326,
 6112 028a 9B79     		ldrb	r3, [r3, #6]	@ D.7911,
 6113 028c 303B     		subs	r3, r3, #48	@ D.7912,
 6114 028e DBB2     		uxtb	r3, r3	@ D.7913, D.7912
 6115 0290 1A1C     		adds	r2, r3, #0	@ tmp328, tmp327
 6116 0292 9200     		lsls	r2, r2, #2	@ tmp329, tmp328,
 6117 0294 D318     		adds	r3, r2, r3	@ tmp331, tmp330, tmp327
 6118 0296 DB18     		adds	r3, r3, r3	@ tmp333, tmp332, tmp332
 6119 0298 DAB2     		uxtb	r2, r3	@ D.7913, tmp331
 6120 029a 284B     		ldr	r3, .L458+16	@ tmp334,
 6121 029c DB79     		ldrb	r3, [r3, #7]	@ D.7911,
 6122 029e D318     		adds	r3, r2, r3	@ tmp335, D.7913, D.7911
 6123 02a0 DBB2     		uxtb	r3, r3	@ D.7913, tmp335
 6124 02a2 303B     		subs	r3, r3, #48	@ tmp336,
 6125 02a4 DAB2     		uxtb	r2, r3	@ D.7913, tmp336
ARM GAS  /tmp/ccCNyPsy.s 			page 150


 6126 02a6 374B     		ldr	r3, .L458+88	@ tmp337,
 6127 02a8 1A70     		strb	r2, [r3]	@ tmp338, GPRSrssi
2187:src/sim900_800.c **** 
2188:src/sim900_800.c **** 						if (GPRSrssi != 99)
 6128              		.loc 1 2188 0
 6129 02aa 364B     		ldr	r3, .L458+88	@ tmp339,
 6130 02ac 1B78     		ldrb	r3, [r3]	@ D.7913, GPRSrssi
 6131 02ae 632B     		cmp	r3, #99	@ D.7913,
 6132 02b0 06D0     		beq	.L423	@,
2189:src/sim900_800.c **** 							GSMConfigGPRSState++;
 6133              		.loc 1 2189 0
 6134 02b2 1E4B     		ldr	r3, .L458	@ tmp340,
 6135 02b4 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 6136 02b6 0133     		adds	r3, r3, #1	@ tmp341,
 6137 02b8 DAB2     		uxtb	r2, r3	@ D.7911, tmp341
 6138 02ba 1C4B     		ldr	r3, .L458	@ tmp342,
 6139 02bc 1A70     		strb	r2, [r3]	@ tmp343, GSMConfigGPRSState
 6140 02be 09E0     		b	.L421	@
 6141              	.L423:
2190:src/sim900_800.c **** 						else
2191:src/sim900_800.c **** 						{
2192:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 6142              		.loc 1 2192 0
 6143 02c0 1A4B     		ldr	r3, .L458	@ tmp344,
 6144 02c2 0022     		movs	r2, #0	@ tmp345,
 6145 02c4 1A70     		strb	r2, [r3]	@ tmp346, GSMConfigGPRSState
2193:src/sim900_800.c **** 							return 20;
 6146              		.loc 1 2193 0
 6147 02c6 1423     		movs	r3, #20	@ D.7911,
 6148 02c8 EFE1     		b	.L405	@
 6149              	.L422:
2194:src/sim900_800.c **** 						}
2195:src/sim900_800.c **** 				}
2196:src/sim900_800.c **** 				else
2197:src/sim900_800.c **** 				{
2198:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6150              		.loc 1 2198 0
 6151 02ca 184B     		ldr	r3, .L458	@ tmp347,
 6152 02cc 0022     		movs	r2, #0	@ tmp348,
 6153 02ce 1A70     		strb	r2, [r3]	@ tmp349, GSMConfigGPRSState
2199:src/sim900_800.c **** 					return 3;
 6154              		.loc 1 2199 0
 6155 02d0 0323     		movs	r3, #3	@ D.7911,
 6156 02d2 EAE1     		b	.L405	@
 6157              	.L421:
2200:src/sim900_800.c **** 				}
2201:src/sim900_800.c **** 			}
2202:src/sim900_800.c **** 
2203:src/sim900_800.c **** 			if (i > 2)
 6158              		.loc 1 2203 0
 6159 02d4 1723     		movs	r3, #23	@ tmp350,
 6160 02d6 6B44     		add	r3, r3, sp	@ tmp350,
 6161 02d8 1B78     		ldrb	r3, [r3]	@ tmp351, i
 6162 02da 022B     		cmp	r3, #2	@ tmp351,
 6163 02dc 00D8     		bhi	.LCB5160	@
 6164 02de CBE1     		b	.L450	@long jump	@
 6165              	.LCB5160:
ARM GAS  /tmp/ccCNyPsy.s 			page 151


2204:src/sim900_800.c **** 			{
2205:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6166              		.loc 1 2205 0
 6167 02e0 124B     		ldr	r3, .L458	@ tmp352,
 6168 02e2 0022     		movs	r2, #0	@ tmp353,
 6169 02e4 1A70     		strb	r2, [r3]	@ tmp354, GSMConfigGPRSState
2206:src/sim900_800.c **** 				return 3;
 6170              		.loc 1 2206 0
 6171 02e6 0323     		movs	r3, #3	@ D.7911,
 6172 02e8 DFE1     		b	.L405	@
 6173              	.L392:
2207:src/sim900_800.c **** 			}
2208:src/sim900_800.c **** 			break;
2209:src/sim900_800.c **** 		case 7:
2210:src/sim900_800.c **** 
2211:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6174              		.loc 1 2211 0
 6175 02ea 1724     		movs	r4, #23	@ tmp355,
 6176 02ec 6C44     		add	r4, r4, sp	@ tmp355,
 6177 02ee 134B     		ldr	r3, .L458+16	@ tmp356,
 6178 02f0 2548     		ldr	r0, .L458+92	@ tmp357,
 6179 02f2 0022     		movs	r2, #0	@,
 6180 02f4 3221     		movs	r1, #50	@,
 6181 02f6 FFF7FEFF 		bl	GSMSendCommand	@
 6182 02fa 0300     		movs	r3, r0	@ tmp358,
 6183 02fc 2370     		strb	r3, [r4]	@ tmp360, i
2212:src/sim900_800.c **** 
2213:src/sim900_800.c **** 			if (i == 2)
 6184              		.loc 1 2213 0
 6185 02fe 1723     		movs	r3, #23	@ tmp361,
 6186 0300 6B44     		add	r3, r3, sp	@ tmp361,
 6187 0302 1B78     		ldrb	r3, [r3]	@ tmp362, i
 6188 0304 022B     		cmp	r3, #2	@ tmp362,
 6189 0306 05D1     		bne	.L425	@,
2214:src/sim900_800.c **** 			{
2215:src/sim900_800.c **** 				GSMConfigGPRSState++;
 6190              		.loc 1 2215 0
 6191 0308 084B     		ldr	r3, .L458	@ tmp363,
 6192 030a 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 6193 030c 0133     		adds	r3, r3, #1	@ tmp364,
 6194 030e DAB2     		uxtb	r2, r3	@ D.7911, tmp364
 6195 0310 064B     		ldr	r3, .L458	@ tmp365,
 6196 0312 1A70     		strb	r2, [r3]	@ tmp366, GSMConfigGPRSState
 6197              	.L425:
2216:src/sim900_800.c **** 			}
2217:src/sim900_800.c **** 
2218:src/sim900_800.c **** 			if (i > 2)
 6198              		.loc 1 2218 0
 6199 0314 1723     		movs	r3, #23	@ tmp367,
 6200 0316 6B44     		add	r3, r3, sp	@ tmp367,
 6201 0318 1B78     		ldrb	r3, [r3]	@ tmp368, i
 6202 031a 022B     		cmp	r3, #2	@ tmp368,
 6203 031c 00D8     		bhi	.LCB5195	@
 6204 031e ADE1     		b	.L451	@long jump	@
 6205              	.LCB5195:
2219:src/sim900_800.c **** 			{
2220:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
ARM GAS  /tmp/ccCNyPsy.s 			page 152


 6206              		.loc 1 2220 0
 6207 0320 024B     		ldr	r3, .L458	@ tmp369,
 6208 0322 0022     		movs	r2, #0	@ tmp370,
 6209 0324 1A70     		strb	r2, [r3]	@ tmp371, GSMConfigGPRSState
2221:src/sim900_800.c **** 				return 3;
 6210              		.loc 1 2221 0
 6211 0326 0323     		movs	r3, #3	@ D.7911,
 6212 0328 BFE1     		b	.L405	@
 6213              	.L459:
 6214 032a C046     		.align	2
 6215              	.L458:
 6216 032c 00000000 		.word	GSMConfigGPRSState
 6217 0330 00000000 		.word	.L385
 6218 0334 00000000 		.word	GSMConfigGPRSTimeOut
 6219 0338 00000000 		.word	GSMConfigGPRSflag
 6220 033c 00000000 		.word	GSMbuffRtaCommand
 6221 0340 0C010000 		.word	.LC103
 6222 0344 00000000 		.word	GSM_IPINITIAL
 6223 0348 00000000 		.word	GSMbuffStatus
 6224 034c 00000000 		.word	GSM_IPSTART
 6225 0350 00000000 		.word	GSM_IPGPRSACT
 6226 0354 00000000 		.word	GSM_IPSTATUS
 6227 0358 00000000 		.word	GSM_IPCONNECTING
 6228 035c 00000000 		.word	GSM_IPCONNOK
 6229 0360 00000000 		.word	GSM_IPCONNCLOSE
 6230 0364 34010000 		.word	.LC119
 6231 0368 40010000 		.word	.LC121
 6232 036c 4C010000 		.word	.LC123
 6233 0370 58010000 		.word	.LC125
 6234 0374 78010000 		.word	.LC129
 6235 0378 84010000 		.word	.LC131
 6236 037c 90010000 		.word	.LC133
 6237 0380 9C010000 		.word	.LC135
 6238 0384 00000000 		.word	GPRSrssi
 6239 0388 A4010000 		.word	.LC138
 6240              	.L393:
2222:src/sim900_800.c **** 			}
2223:src/sim900_800.c **** 			break;
2224:src/sim900_800.c **** 
2225:src/sim900_800.c **** 		case 8:
2226:src/sim900_800.c **** 
2227:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6241              		.loc 1 2227 0
 6242 038c 1724     		movs	r4, #23	@ tmp372,
 6243 038e 6C44     		add	r4, r4, sp	@ tmp372,
 6244 0390 C74B     		ldr	r3, .L460	@ tmp373,
 6245 0392 C848     		ldr	r0, .L460+4	@ tmp374,
 6246 0394 0122     		movs	r2, #1	@,
 6247 0396 3221     		movs	r1, #50	@,
 6248 0398 FFF7FEFF 		bl	GSMSendCommand	@
 6249 039c 0300     		movs	r3, r0	@ tmp375,
 6250 039e 2370     		strb	r3, [r4]	@ tmp377, i
2228:src/sim900_800.c **** 
2229:src/sim900_800.c **** 			if (i == 2)
 6251              		.loc 1 2229 0
 6252 03a0 1723     		movs	r3, #23	@ tmp378,
 6253 03a2 6B44     		add	r3, r3, sp	@ tmp378,
ARM GAS  /tmp/ccCNyPsy.s 			page 153


 6254 03a4 1B78     		ldrb	r3, [r3]	@ tmp379, i
 6255 03a6 022B     		cmp	r3, #2	@ tmp379,
 6256 03a8 38D1     		bne	.L427	@,
2230:src/sim900_800.c **** 			{
2231:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 6257              		.loc 1 2231 0
 6258 03aa C349     		ldr	r1, .L460+8	@ tmp380,
 6259 03ac C04B     		ldr	r3, .L460	@ tmp381,
 6260 03ae 0722     		movs	r2, #7	@,
 6261 03b0 1800     		movs	r0, r3	@, tmp381
 6262 03b2 FFF7FEFF 		bl	strncmp	@
 6263 03b6 031E     		subs	r3, r0, #0	@ D.7912,,
 6264 03b8 30D1     		bne	.L427	@,
2232:src/sim900_800.c **** 				{
2233:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 6265              		.loc 1 2233 0
 6266 03ba BD4B     		ldr	r3, .L460	@ tmp382,
 6267 03bc 1B7A     		ldrb	r3, [r3, #8]	@ D.7911,
 6268 03be 312B     		cmp	r3, #49	@ D.7911,
 6269 03c0 23D1     		bne	.L428	@,
2234:src/sim900_800.c **** 					{
2235:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 6270              		.loc 1 2235 0
 6271 03c2 BE4B     		ldr	r3, .L460+12	@ tmp383,
 6272 03c4 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 6273 03c6 0133     		adds	r3, r3, #1	@ tmp384,
 6274 03c8 DAB2     		uxtb	r2, r3	@ D.7911, tmp384
 6275 03ca BC4B     		ldr	r3, .L460+12	@ tmp385,
 6276 03cc 1A70     		strb	r2, [r3]	@ tmp386, GSMConfigGPRSState
2236:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 6277              		.loc 1 2236 0
 6278 03ce BC4A     		ldr	r2, .L460+16	@ tmp387,
 6279 03d0 BC4B     		ldr	r3, .L460+20	@ tmp388,
 6280 03d2 1000     		movs	r0, r2	@ tmp389, tmp387
 6281 03d4 1900     		movs	r1, r3	@ tmp390, tmp388
 6282 03d6 1423     		movs	r3, #20	@ tmp391,
 6283 03d8 1A00     		movs	r2, r3	@, tmp391
 6284 03da FFF7FEFF 		bl	memcpy	@
2237:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 6285              		.loc 1 2237 0
 6286 03de 029A     		ldr	r2, [sp, #8]	@ tmp394, ptrAPN
 6287 03e0 B74B     		ldr	r3, .L460+16	@ tmp395,
 6288 03e2 1100     		movs	r1, r2	@, tmp394
 6289 03e4 1800     		movs	r0, r3	@, tmp395
 6290 03e6 FFF7FEFF 		bl	strcat	@
2238:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 6291              		.loc 1 2238 0
 6292 03ea B54B     		ldr	r3, .L460+16	@ tmp396,
 6293 03ec 1800     		movs	r0, r3	@, tmp396
 6294 03ee FFF7FEFF 		bl	strlen	@
 6295 03f2 0300     		movs	r3, r0	@ tmp397,
 6296 03f4 1A00     		movs	r2, r3	@ D.7914, tmp398
 6297 03f6 B24B     		ldr	r3, .L460+16	@ tmp399,
 6298 03f8 D218     		adds	r2, r2, r3	@ D.7915, D.7914, tmp399
 6299 03fa B34B     		ldr	r3, .L460+24	@ tmp400,
 6300 03fc 1000     		movs	r0, r2	@ tmp401, D.7915
 6301 03fe 1900     		movs	r1, r3	@ tmp402, tmp400
ARM GAS  /tmp/ccCNyPsy.s 			page 154


 6302 0400 0423     		movs	r3, #4	@ tmp403,
 6303 0402 1A00     		movs	r2, r3	@, tmp403
 6304 0404 FFF7FEFF 		bl	memcpy	@
 6305 0408 08E0     		b	.L427	@
 6306              	.L428:
2239:src/sim900_800.c **** 					}
2240:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 6307              		.loc 1 2240 0
 6308 040a A94B     		ldr	r3, .L460	@ tmp406,
 6309 040c 1B7A     		ldrb	r3, [r3, #8]	@ D.7911,
 6310 040e 302B     		cmp	r3, #48	@ D.7911,
 6311 0410 04D1     		bne	.L427	@,
2241:src/sim900_800.c **** 					{
2242:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 6312              		.loc 1 2242 0
 6313 0412 AA4B     		ldr	r3, .L460+12	@ tmp407,
 6314 0414 0022     		movs	r2, #0	@ tmp408,
 6315 0416 1A70     		strb	r2, [r3]	@ tmp409, GSMConfigGPRSState
2243:src/sim900_800.c **** 						return 3;
 6316              		.loc 1 2243 0
 6317 0418 0323     		movs	r3, #3	@ D.7911,
 6318 041a 46E1     		b	.L405	@
 6319              	.L427:
2244:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
2245:src/sim900_800.c **** 					}
2246:src/sim900_800.c **** 				}
2247:src/sim900_800.c **** 			}
2248:src/sim900_800.c **** 
2249:src/sim900_800.c **** 			if (i > 2)
 6320              		.loc 1 2249 0
 6321 041c 1723     		movs	r3, #23	@ tmp410,
 6322 041e 6B44     		add	r3, r3, sp	@ tmp410,
 6323 0420 1B78     		ldrb	r3, [r3]	@ tmp411, i
 6324 0422 022B     		cmp	r3, #2	@ tmp411,
 6325 0424 00D8     		bhi	.LCB5310	@
 6326 0426 2BE1     		b	.L452	@long jump	@
 6327              	.LCB5310:
2250:src/sim900_800.c **** 			{
2251:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6328              		.loc 1 2251 0
 6329 0428 A44B     		ldr	r3, .L460+12	@ tmp412,
 6330 042a 0022     		movs	r2, #0	@ tmp413,
 6331 042c 1A70     		strb	r2, [r3]	@ tmp414, GSMConfigGPRSState
2252:src/sim900_800.c **** 				return 3;
 6332              		.loc 1 2252 0
 6333 042e 0323     		movs	r3, #3	@ D.7911,
 6334 0430 3BE1     		b	.L405	@
 6335              	.L394:
2253:src/sim900_800.c **** 			}
2254:src/sim900_800.c **** 
2255:src/sim900_800.c **** 			break;
2256:src/sim900_800.c **** 
2257:src/sim900_800.c **** 		case 9:
2258:src/sim900_800.c **** 
2259:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 6336              		.loc 1 2259 0
 6337 0432 1724     		movs	r4, #23	@ tmp415,
ARM GAS  /tmp/ccCNyPsy.s 			page 155


 6338 0434 6C44     		add	r4, r4, sp	@ tmp415,
 6339 0436 9E4B     		ldr	r3, .L460	@ tmp416,
 6340 0438 A148     		ldr	r0, .L460+16	@ tmp417,
 6341 043a 0022     		movs	r2, #0	@,
 6342 043c 3221     		movs	r1, #50	@,
 6343 043e FFF7FEFF 		bl	GSMSendCommand	@
 6344 0442 0300     		movs	r3, r0	@ tmp418,
 6345 0444 2370     		strb	r3, [r4]	@ tmp420, i
2260:src/sim900_800.c **** 
2261:src/sim900_800.c **** 			if (i == 2)
 6346              		.loc 1 2261 0
 6347 0446 1723     		movs	r3, #23	@ tmp421,
 6348 0448 6B44     		add	r3, r3, sp	@ tmp421,
 6349 044a 1B78     		ldrb	r3, [r3]	@ tmp422, i
 6350 044c 022B     		cmp	r3, #2	@ tmp422,
 6351 044e 4CD1     		bne	.L430	@,
2262:src/sim900_800.c **** 			{
2263:src/sim900_800.c **** 				GSMConfigGPRSState++;
 6352              		.loc 1 2263 0
 6353 0450 9A4B     		ldr	r3, .L460+12	@ tmp423,
 6354 0452 1B78     		ldrb	r3, [r3]	@ D.7911, GSMConfigGPRSState
 6355 0454 0133     		adds	r3, r3, #1	@ tmp424,
 6356 0456 DAB2     		uxtb	r2, r3	@ D.7911, tmp424
 6357 0458 984B     		ldr	r3, .L460+12	@ tmp425,
 6358 045a 1A70     		strb	r2, [r3]	@ tmp426, GSMConfigGPRSState
2264:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 6359              		.loc 1 2264 0
 6360 045c 984A     		ldr	r2, .L460+16	@ tmp427,
 6361 045e 9B4B     		ldr	r3, .L460+28	@ tmp428,
 6362 0460 1000     		movs	r0, r2	@ tmp429, tmp427
 6363 0462 1900     		movs	r1, r3	@ tmp430, tmp428
 6364 0464 0A23     		movs	r3, #10	@ tmp431,
 6365 0466 1A00     		movs	r2, r3	@, tmp431
 6366 0468 FFF7FEFF 		bl	memcpy	@
2265:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 6367              		.loc 1 2265 0
 6368 046c 029A     		ldr	r2, [sp, #8]	@ tmp434, ptrAPN
 6369 046e 944B     		ldr	r3, .L460+16	@ tmp435,
 6370 0470 1100     		movs	r1, r2	@, tmp434
 6371 0472 1800     		movs	r0, r3	@, tmp435
 6372 0474 FFF7FEFF 		bl	strcat	@
2266:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 6373              		.loc 1 2266 0
 6374 0478 914B     		ldr	r3, .L460+16	@ tmp436,
 6375 047a 1800     		movs	r0, r3	@, tmp436
 6376 047c FFF7FEFF 		bl	strlen	@
 6377 0480 0300     		movs	r3, r0	@ tmp437,
 6378 0482 1A00     		movs	r2, r3	@ D.7914, tmp438
 6379 0484 8E4B     		ldr	r3, .L460+16	@ tmp439,
 6380 0486 D218     		adds	r2, r2, r3	@ D.7915, D.7914, tmp439
 6381 0488 914B     		ldr	r3, .L460+32	@ tmp440,
 6382 048a 1000     		movs	r0, r2	@ tmp441, D.7915
 6383 048c 1900     		movs	r1, r3	@ tmp442, tmp440
 6384 048e 0423     		movs	r3, #4	@ tmp443,
 6385 0490 1A00     		movs	r2, r3	@, tmp443
 6386 0492 FFF7FEFF 		bl	memcpy	@
2267:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
ARM GAS  /tmp/ccCNyPsy.s 			page 156


 6387              		.loc 1 2267 0
 6388 0496 019A     		ldr	r2, [sp, #4]	@ tmp446, ptrUSER
 6389 0498 894B     		ldr	r3, .L460+16	@ tmp447,
 6390 049a 1100     		movs	r1, r2	@, tmp446
 6391 049c 1800     		movs	r0, r3	@, tmp447
 6392 049e FFF7FEFF 		bl	strcat	@
2268:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 6393              		.loc 1 2268 0
 6394 04a2 874B     		ldr	r3, .L460+16	@ tmp448,
 6395 04a4 1800     		movs	r0, r3	@, tmp448
 6396 04a6 FFF7FEFF 		bl	strlen	@
 6397 04aa 0300     		movs	r3, r0	@ tmp449,
 6398 04ac 1A00     		movs	r2, r3	@ D.7914, tmp450
 6399 04ae 844B     		ldr	r3, .L460+16	@ tmp451,
 6400 04b0 D218     		adds	r2, r2, r3	@ D.7915, D.7914, tmp451
 6401 04b2 874B     		ldr	r3, .L460+32	@ tmp452,
 6402 04b4 1000     		movs	r0, r2	@ tmp453, D.7915
 6403 04b6 1900     		movs	r1, r3	@ tmp454, tmp452
 6404 04b8 0423     		movs	r3, #4	@ tmp455,
 6405 04ba 1A00     		movs	r2, r3	@, tmp455
 6406 04bc FFF7FEFF 		bl	memcpy	@
2269:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 6407              		.loc 1 2269 0
 6408 04c0 009A     		ldr	r2, [sp]	@ tmp458, ptrKEY
 6409 04c2 7F4B     		ldr	r3, .L460+16	@ tmp459,
 6410 04c4 1100     		movs	r1, r2	@, tmp458
 6411 04c6 1800     		movs	r0, r3	@, tmp459
 6412 04c8 FFF7FEFF 		bl	strcat	@
2270:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 6413              		.loc 1 2270 0
 6414 04cc 7C4B     		ldr	r3, .L460+16	@ tmp460,
 6415 04ce 1800     		movs	r0, r3	@, tmp460
 6416 04d0 FFF7FEFF 		bl	strlen	@
 6417 04d4 0300     		movs	r3, r0	@ tmp461,
 6418 04d6 1A00     		movs	r2, r3	@ D.7914, tmp462
 6419 04d8 794B     		ldr	r3, .L460+16	@ tmp463,
 6420 04da D218     		adds	r2, r2, r3	@ D.7915, D.7914, tmp463
 6421 04dc 7A4B     		ldr	r3, .L460+24	@ tmp464,
 6422 04de 1000     		movs	r0, r2	@ tmp465, D.7915
 6423 04e0 1900     		movs	r1, r3	@ tmp466, tmp464
 6424 04e2 0423     		movs	r3, #4	@ tmp467,
 6425 04e4 1A00     		movs	r2, r3	@, tmp467
 6426 04e6 FFF7FEFF 		bl	memcpy	@
 6427              	.L430:
2271:src/sim900_800.c **** 			}
2272:src/sim900_800.c **** 
2273:src/sim900_800.c **** 			if (i > 2)
 6428              		.loc 1 2273 0
 6429 04ea 1723     		movs	r3, #23	@ tmp470,
 6430 04ec 6B44     		add	r3, r3, sp	@ tmp470,
 6431 04ee 1B78     		ldrb	r3, [r3]	@ tmp471, i
 6432 04f0 022B     		cmp	r3, #2	@ tmp471,
 6433 04f2 00D8     		bhi	.LCB5406	@
 6434 04f4 C6E0     		b	.L453	@long jump	@
 6435              	.LCB5406:
2274:src/sim900_800.c **** 			{
2275:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
ARM GAS  /tmp/ccCNyPsy.s 			page 157


 6436              		.loc 1 2275 0
 6437 04f6 714B     		ldr	r3, .L460+12	@ tmp472,
 6438 04f8 0022     		movs	r2, #0	@ tmp473,
 6439 04fa 1A70     		strb	r2, [r3]	@ tmp474, GSMConfigGPRSState
2276:src/sim900_800.c **** 				return 3;
 6440              		.loc 1 2276 0
 6441 04fc 0323     		movs	r3, #3	@ D.7911,
 6442 04fe D4E0     		b	.L405	@
 6443              	.L395:
2277:src/sim900_800.c **** 			}
2278:src/sim900_800.c **** 			break;
2279:src/sim900_800.c **** 
2280:src/sim900_800.c **** 		case 10:
2281:src/sim900_800.c **** 
2282:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 6444              		.loc 1 2282 0
 6445 0500 1724     		movs	r4, #23	@ tmp475,
 6446 0502 6C44     		add	r4, r4, sp	@ tmp475,
 6447 0504 6A4B     		ldr	r3, .L460	@ tmp476,
 6448 0506 6E48     		ldr	r0, .L460+16	@ tmp477,
 6449 0508 0022     		movs	r2, #0	@,
 6450 050a 3221     		movs	r1, #50	@,
 6451 050c FFF7FEFF 		bl	GSMSendCommand	@
 6452 0510 0300     		movs	r3, r0	@ tmp478,
 6453 0512 2370     		strb	r3, [r4]	@ tmp480, i
2283:src/sim900_800.c **** 
2284:src/sim900_800.c **** 			if (i == 2)
 6454              		.loc 1 2284 0
 6455 0514 1723     		movs	r3, #23	@ tmp481,
 6456 0516 6B44     		add	r3, r3, sp	@ tmp481,
 6457 0518 1B78     		ldrb	r3, [r3]	@ tmp482, i
 6458 051a 022B     		cmp	r3, #2	@ tmp482,
 6459 051c 02D1     		bne	.L432	@,
2285:src/sim900_800.c **** 			{
2286:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6460              		.loc 1 2286 0
 6461 051e 674B     		ldr	r3, .L460+12	@ tmp483,
 6462 0520 0222     		movs	r2, #2	@ tmp484,
 6463 0522 1A70     		strb	r2, [r3]	@ tmp485, GSMConfigGPRSState
 6464              	.L432:
2287:src/sim900_800.c **** 			}
2288:src/sim900_800.c **** 
2289:src/sim900_800.c **** 			if (i > 2)
 6465              		.loc 1 2289 0
 6466 0524 1723     		movs	r3, #23	@ tmp486,
 6467 0526 6B44     		add	r3, r3, sp	@ tmp486,
 6468 0528 1B78     		ldrb	r3, [r3]	@ tmp487, i
 6469 052a 022B     		cmp	r3, #2	@ tmp487,
 6470 052c 00D8     		bhi	.LCB5438	@
 6471 052e ABE0     		b	.L454	@long jump	@
 6472              	.LCB5438:
2290:src/sim900_800.c **** 			{
2291:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6473              		.loc 1 2291 0
 6474 0530 624B     		ldr	r3, .L460+12	@ tmp488,
 6475 0532 0022     		movs	r2, #0	@ tmp489,
 6476 0534 1A70     		strb	r2, [r3]	@ tmp490, GSMConfigGPRSState
ARM GAS  /tmp/ccCNyPsy.s 			page 158


2292:src/sim900_800.c **** 				return 3;
 6477              		.loc 1 2292 0
 6478 0536 0323     		movs	r3, #3	@ D.7911,
 6479 0538 B7E0     		b	.L405	@
 6480              	.L396:
2293:src/sim900_800.c **** 			}
2294:src/sim900_800.c **** 			break;
2295:src/sim900_800.c **** 
2296:src/sim900_800.c **** 		case 11:
2297:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 6481              		.loc 1 2297 0
 6482 053a 1724     		movs	r4, #23	@ tmp491,
 6483 053c 6C44     		add	r4, r4, sp	@ tmp491,
 6484 053e 5C4B     		ldr	r3, .L460	@ tmp492,
 6485 0540 6448     		ldr	r0, .L460+36	@ tmp493,
 6486 0542 0022     		movs	r2, #0	@,
 6487 0544 C821     		movs	r1, #200	@,
 6488 0546 FFF7FEFF 		bl	GSMSendCommand	@
 6489 054a 0300     		movs	r3, r0	@ tmp494,
 6490 054c 2370     		strb	r3, [r4]	@ tmp496, i
2298:src/sim900_800.c **** 
2299:src/sim900_800.c **** 			if (i == 2)
 6491              		.loc 1 2299 0
 6492 054e 1723     		movs	r3, #23	@ tmp497,
 6493 0550 6B44     		add	r3, r3, sp	@ tmp497,
 6494 0552 1B78     		ldrb	r3, [r3]	@ tmp498, i
 6495 0554 022B     		cmp	r3, #2	@ tmp498,
 6496 0556 02D1     		bne	.L434	@,
2300:src/sim900_800.c **** 			{
2301:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6497              		.loc 1 2301 0
 6498 0558 584B     		ldr	r3, .L460+12	@ tmp499,
 6499 055a 0222     		movs	r2, #2	@ tmp500,
 6500 055c 1A70     		strb	r2, [r3]	@ tmp501, GSMConfigGPRSState
 6501              	.L434:
2302:src/sim900_800.c **** 			}
2303:src/sim900_800.c **** 
2304:src/sim900_800.c **** 			if (i > 2)
 6502              		.loc 1 2304 0
 6503 055e 1723     		movs	r3, #23	@ tmp502,
 6504 0560 6B44     		add	r3, r3, sp	@ tmp502,
 6505 0562 1B78     		ldrb	r3, [r3]	@ tmp503, i
 6506 0564 022B     		cmp	r3, #2	@ tmp503,
 6507 0566 00D8     		bhi	.LCB5470	@
 6508 0568 90E0     		b	.L455	@long jump	@
 6509              	.LCB5470:
2305:src/sim900_800.c **** 			{
2306:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6510              		.loc 1 2306 0
 6511 056a 544B     		ldr	r3, .L460+12	@ tmp504,
 6512 056c 0022     		movs	r2, #0	@ tmp505,
 6513 056e 1A70     		strb	r2, [r3]	@ tmp506, GSMConfigGPRSState
2307:src/sim900_800.c **** 				return 3;
 6514              		.loc 1 2307 0
 6515 0570 0323     		movs	r3, #3	@ D.7911,
 6516 0572 9AE0     		b	.L405	@
 6517              	.L397:
ARM GAS  /tmp/ccCNyPsy.s 			page 159


2308:src/sim900_800.c **** 			}
2309:src/sim900_800.c **** 			break;
2310:src/sim900_800.c **** 
2311:src/sim900_800.c **** 		case 12:
2312:src/sim900_800.c **** 
2313:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 6518              		.loc 1 2313 0
 6519 0574 584B     		ldr	r3, .L460+40	@ tmp507,
 6520 0576 0322     		movs	r2, #3	@ tmp508,
 6521 0578 1A70     		strb	r2, [r3]	@ tmp509, GSMConfigGPRSflag
2314:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6522              		.loc 1 2314 0
 6523 057a 1724     		movs	r4, #23	@ tmp510,
 6524 057c 6C44     		add	r4, r4, sp	@ tmp510,
 6525 057e 4C4B     		ldr	r3, .L460	@ tmp511,
 6526 0580 5648     		ldr	r0, .L460+44	@ tmp512,
 6527 0582 0022     		movs	r2, #0	@,
 6528 0584 3221     		movs	r1, #50	@,
 6529 0586 FFF7FEFF 		bl	GSMSendCommand	@
 6530 058a 0300     		movs	r3, r0	@ tmp513,
 6531 058c 2370     		strb	r3, [r4]	@ tmp515, i
2315:src/sim900_800.c **** 
2316:src/sim900_800.c **** 			if (i == 2)
 6532              		.loc 1 2316 0
 6533 058e 1723     		movs	r3, #23	@ tmp516,
 6534 0590 6B44     		add	r3, r3, sp	@ tmp516,
 6535 0592 1B78     		ldrb	r3, [r3]	@ tmp517, i
 6536 0594 022B     		cmp	r3, #2	@ tmp517,
 6537 0596 05D1     		bne	.L436	@,
2317:src/sim900_800.c **** 			{
2318:src/sim900_800.c **** 				GSMConfigGPRSState = 14;
 6538              		.loc 1 2318 0
 6539 0598 484B     		ldr	r3, .L460+12	@ tmp518,
 6540 059a 0E22     		movs	r2, #14	@ tmp519,
 6541 059c 1A70     		strb	r2, [r3]	@ tmp520, GSMConfigGPRSState
2319:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 6542              		.loc 1 2319 0
 6543 059e 4E4B     		ldr	r3, .L460+40	@ tmp521,
 6544 05a0 0122     		movs	r2, #1	@ tmp522,
 6545 05a2 1A70     		strb	r2, [r3]	@ tmp523, GSMConfigGPRSflag
 6546              	.L436:
2320:src/sim900_800.c **** 			}
2321:src/sim900_800.c **** 
2322:src/sim900_800.c **** 			if (i > 2)
 6547              		.loc 1 2322 0
 6548 05a4 1723     		movs	r3, #23	@ tmp524,
 6549 05a6 6B44     		add	r3, r3, sp	@ tmp524,
 6550 05a8 1B78     		ldrb	r3, [r3]	@ tmp525, i
 6551 05aa 022B     		cmp	r3, #2	@ tmp525,
 6552 05ac 00D8     		bhi	.LCB5508	@
 6553 05ae 6FE0     		b	.L456	@long jump	@
 6554              	.LCB5508:
2323:src/sim900_800.c **** 			{
2324:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6555              		.loc 1 2324 0
 6556 05b0 424B     		ldr	r3, .L460+12	@ tmp526,
 6557 05b2 0022     		movs	r2, #0	@ tmp527,
ARM GAS  /tmp/ccCNyPsy.s 			page 160


 6558 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMConfigGPRSState
2325:src/sim900_800.c **** 				return 3;
 6559              		.loc 1 2325 0
 6560 05b6 0323     		movs	r3, #3	@ D.7911,
 6561 05b8 77E0     		b	.L405	@
 6562              	.L398:
2326:src/sim900_800.c **** 			}
2327:src/sim900_800.c **** 			break;
2328:src/sim900_800.c **** 		case 13:
2329:src/sim900_800.c **** 			GSMConfigGPRSState = 2;
 6563              		.loc 1 2329 0
 6564 05ba 404B     		ldr	r3, .L460+12	@ tmp529,
 6565 05bc 0222     		movs	r2, #2	@ tmp530,
 6566 05be 1A70     		strb	r2, [r3]	@ tmp531, GSMConfigGPRSState
2330:src/sim900_800.c **** /*
2331:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
2332:src/sim900_800.c **** 
2333:src/sim900_800.c **** 			if (i == 2)
2334:src/sim900_800.c **** 			{
2335:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
2336:src/sim900_800.c **** 			}
2337:src/sim900_800.c **** 
2338:src/sim900_800.c **** 			if (i > 2)
2339:src/sim900_800.c **** 			{
2340:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2341:src/sim900_800.c **** 				return 3;
2342:src/sim900_800.c **** 			}
2343:src/sim900_800.c **** */
2344:src/sim900_800.c **** 			break;
 6567              		.loc 1 2344 0
 6568 05c0 69E0     		b	.L402	@
 6569              	.L399:
2345:src/sim900_800.c **** 
2346:src/sim900_800.c **** 		case 14:
2347:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6570              		.loc 1 2347 0
 6571 05c2 3E4B     		ldr	r3, .L460+12	@ tmp532,
 6572 05c4 0022     		movs	r2, #0	@ tmp533,
 6573 05c6 1A70     		strb	r2, [r3]	@ tmp534, GSMConfigGPRSState
2348:src/sim900_800.c **** 			return 2;
 6574              		.loc 1 2348 0
 6575 05c8 0223     		movs	r3, #2	@ D.7911,
 6576 05ca 6EE0     		b	.L405	@
 6577              	.L400:
2349:src/sim900_800.c **** 			break;
2350:src/sim900_800.c **** 
2351:src/sim900_800.c **** 		case 15:
2352:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 6578              		.loc 1 2352 0
 6579 05cc 0F23     		movs	r3, #15	@ tmp535,
 6580 05ce 6B44     		add	r3, r3, sp	@ tmp535,
 6581 05d0 1B78     		ldrb	r3, [r3]	@ tmp536, sim
 6582 05d2 012B     		cmp	r3, #1	@ tmp536,
 6583 05d4 04D0     		beq	.L438	@,
 6584              		.loc 1 2352 0 is_stmt 0 discriminator 1
 6585 05d6 0F23     		movs	r3, #15	@ tmp537,
 6586 05d8 6B44     		add	r3, r3, sp	@ tmp537,
ARM GAS  /tmp/ccCNyPsy.s 			page 161


 6587 05da 1B78     		ldrb	r3, [r3]	@ tmp538, sim
 6588 05dc 022B     		cmp	r3, #2	@ tmp538,
 6589 05de 1BD1     		bne	.L439	@,
 6590              	.L438:
2353:src/sim900_800.c **** 			{
2354:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 6591              		.loc 1 2354 0 is_stmt 1
 6592 05e0 1724     		movs	r4, #23	@ tmp539,
 6593 05e2 6C44     		add	r4, r4, sp	@ tmp539,
 6594 05e4 0F23     		movs	r3, #15	@ tmp540,
 6595 05e6 6B44     		add	r3, r3, sp	@ tmp540,
 6596 05e8 1B78     		ldrb	r3, [r3]	@ tmp541, sim
 6597 05ea 1800     		movs	r0, r3	@, tmp541
 6598 05ec FFF7FEFF 		bl	GSM_SetSIM	@
 6599 05f0 0300     		movs	r3, r0	@ tmp542,
 6600 05f2 2370     		strb	r3, [r4]	@ tmp544, i
2355:src/sim900_800.c **** 
2356:src/sim900_800.c **** 				if (i == 2)
 6601              		.loc 1 2356 0
 6602 05f4 1723     		movs	r3, #23	@ tmp545,
 6603 05f6 6B44     		add	r3, r3, sp	@ tmp545,
 6604 05f8 1B78     		ldrb	r3, [r3]	@ tmp546, i
 6605 05fa 022B     		cmp	r3, #2	@ tmp546,
 6606 05fc 02D1     		bne	.L440	@,
2357:src/sim900_800.c **** 				{
2358:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 6607              		.loc 1 2358 0
 6608 05fe 2F4B     		ldr	r3, .L460+12	@ tmp547,
 6609 0600 0222     		movs	r2, #2	@ tmp548,
 6610 0602 1A70     		strb	r2, [r3]	@ tmp549, GSMConfigGPRSState
 6611              	.L440:
2359:src/sim900_800.c **** 				}
2360:src/sim900_800.c **** 
2361:src/sim900_800.c **** 				if (i>2)
 6612              		.loc 1 2361 0
 6613 0604 1723     		movs	r3, #23	@ tmp550,
 6614 0606 6B44     		add	r3, r3, sp	@ tmp550,
 6615 0608 1B78     		ldrb	r3, [r3]	@ tmp551, i
 6616 060a 022B     		cmp	r3, #2	@ tmp551,
 6617 060c 09D9     		bls	.L442	@,
2362:src/sim900_800.c **** 				{
2363:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6618              		.loc 1 2363 0
 6619 060e 2B4B     		ldr	r3, .L460+12	@ tmp552,
 6620 0610 0022     		movs	r2, #0	@ tmp553,
 6621 0612 1A70     		strb	r2, [r3]	@ tmp554, GSMConfigGPRSState
2364:src/sim900_800.c **** 					return 3;
 6622              		.loc 1 2364 0
 6623 0614 0323     		movs	r3, #3	@ D.7911,
 6624 0616 48E0     		b	.L405	@
 6625              	.L439:
2365:src/sim900_800.c **** 				}
2366:src/sim900_800.c **** 			}
2367:src/sim900_800.c **** 			else
2368:src/sim900_800.c **** 			{
2369:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6626              		.loc 1 2369 0
ARM GAS  /tmp/ccCNyPsy.s 			page 162


 6627 0618 284B     		ldr	r3, .L460+12	@ tmp555,
 6628 061a 0022     		movs	r2, #0	@ tmp556,
 6629 061c 1A70     		strb	r2, [r3]	@ tmp557, GSMConfigGPRSState
2370:src/sim900_800.c **** 				return 3;
 6630              		.loc 1 2370 0
 6631 061e 0323     		movs	r3, #3	@ D.7911,
 6632 0620 43E0     		b	.L405	@
 6633              	.L442:
2371:src/sim900_800.c **** 			}
2372:src/sim900_800.c **** 
2373:src/sim900_800.c **** 			break;
 6634              		.loc 1 2373 0 discriminator 1
 6635 0622 38E0     		b	.L402	@
 6636              	.L401:
2374:src/sim900_800.c **** 		case 16:
2375:src/sim900_800.c **** 
2376:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6637              		.loc 1 2376 0
 6638 0624 1724     		movs	r4, #23	@ tmp558,
 6639 0626 6C44     		add	r4, r4, sp	@ tmp558,
 6640 0628 214B     		ldr	r3, .L460	@ tmp559,
 6641 062a 2D48     		ldr	r0, .L460+48	@ tmp560,
 6642 062c 0022     		movs	r2, #0	@,
 6643 062e 3221     		movs	r1, #50	@,
 6644 0630 FFF7FEFF 		bl	GSMSendCommand	@
 6645 0634 0300     		movs	r3, r0	@ tmp561,
 6646 0636 2370     		strb	r3, [r4]	@ tmp563, i
2377:src/sim900_800.c **** 
2378:src/sim900_800.c **** 			if (i == 2)
 6647              		.loc 1 2378 0
 6648 0638 1723     		movs	r3, #23	@ tmp564,
 6649 063a 6B44     		add	r3, r3, sp	@ tmp564,
 6650 063c 1B78     		ldrb	r3, [r3]	@ tmp565, i
 6651 063e 022B     		cmp	r3, #2	@ tmp565,
 6652 0640 04D1     		bne	.L443	@,
2379:src/sim900_800.c **** 			{
2380:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6653              		.loc 1 2380 0
 6654 0642 1E4B     		ldr	r3, .L460+12	@ tmp566,
 6655 0644 0022     		movs	r2, #0	@ tmp567,
 6656 0646 1A70     		strb	r2, [r3]	@ tmp568, GSMConfigGPRSState
2381:src/sim900_800.c **** 				return 3;
 6657              		.loc 1 2381 0
 6658 0648 0323     		movs	r3, #3	@ D.7911,
 6659 064a 2EE0     		b	.L405	@
 6660              	.L443:
2382:src/sim900_800.c **** 			}
2383:src/sim900_800.c **** 
2384:src/sim900_800.c **** 			if (i > 2)
 6661              		.loc 1 2384 0
 6662 064c 1723     		movs	r3, #23	@ tmp569,
 6663 064e 6B44     		add	r3, r3, sp	@ tmp569,
 6664 0650 1B78     		ldrb	r3, [r3]	@ tmp570, i
 6665 0652 022B     		cmp	r3, #2	@ tmp570,
 6666 0654 1ED9     		bls	.L457	@,
2385:src/sim900_800.c **** 			{
2386:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
ARM GAS  /tmp/ccCNyPsy.s 			page 163


 6667              		.loc 1 2386 0
 6668 0656 194B     		ldr	r3, .L460+12	@ tmp571,
 6669 0658 0022     		movs	r2, #0	@ tmp572,
 6670 065a 1A70     		strb	r2, [r3]	@ tmp573, GSMConfigGPRSState
2387:src/sim900_800.c **** 				return 3;
 6671              		.loc 1 2387 0
 6672 065c 0323     		movs	r3, #3	@ D.7911,
 6673 065e 24E0     		b	.L405	@
 6674              	.L383:
2388:src/sim900_800.c **** 			}
2389:src/sim900_800.c **** 			break;
2390:src/sim900_800.c **** 		default:
2391:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6675              		.loc 1 2391 0
 6676 0660 164B     		ldr	r3, .L460+12	@ tmp574,
 6677 0662 0022     		movs	r2, #0	@ tmp575,
 6678 0664 1A70     		strb	r2, [r3]	@ tmp576, GSMConfigGPRSState
2392:src/sim900_800.c **** 			break;
 6679              		.loc 1 2392 0
 6680 0666 16E0     		b	.L402	@
 6681              	.L446:
2044:src/sim900_800.c **** 		case 3:
 6682              		.loc 1 2044 0
 6683 0668 C046     		nop
 6684 066a 14E0     		b	.L402	@
 6685              	.L447:
2132:src/sim900_800.c **** 
 6686              		.loc 1 2132 0
 6687 066c C046     		nop
 6688 066e 12E0     		b	.L402	@
 6689              	.L448:
2155:src/sim900_800.c **** 
 6690              		.loc 1 2155 0
 6691 0670 C046     		nop
 6692 0672 10E0     		b	.L402	@
 6693              	.L449:
2178:src/sim900_800.c **** 		case 6:
 6694              		.loc 1 2178 0
 6695 0674 C046     		nop
 6696 0676 0EE0     		b	.L402	@
 6697              	.L450:
2208:src/sim900_800.c **** 		case 7:
 6698              		.loc 1 2208 0
 6699 0678 C046     		nop
 6700 067a 0CE0     		b	.L402	@
 6701              	.L451:
2223:src/sim900_800.c **** 
 6702              		.loc 1 2223 0
 6703 067c C046     		nop
 6704 067e 0AE0     		b	.L402	@
 6705              	.L452:
2255:src/sim900_800.c **** 
 6706              		.loc 1 2255 0
 6707 0680 C046     		nop
 6708 0682 08E0     		b	.L402	@
 6709              	.L453:
2278:src/sim900_800.c **** 
ARM GAS  /tmp/ccCNyPsy.s 			page 164


 6710              		.loc 1 2278 0
 6711 0684 C046     		nop
 6712 0686 06E0     		b	.L402	@
 6713              	.L454:
2294:src/sim900_800.c **** 
 6714              		.loc 1 2294 0
 6715 0688 C046     		nop
 6716 068a 04E0     		b	.L402	@
 6717              	.L455:
2309:src/sim900_800.c **** 
 6718              		.loc 1 2309 0
 6719 068c C046     		nop
 6720 068e 02E0     		b	.L402	@
 6721              	.L456:
2327:src/sim900_800.c **** 		case 13:
 6722              		.loc 1 2327 0
 6723 0690 C046     		nop
 6724 0692 00E0     		b	.L402	@
 6725              	.L457:
2389:src/sim900_800.c **** 		default:
 6726              		.loc 1 2389 0
 6727 0694 C046     		nop
 6728              	.L402:
2393:src/sim900_800.c **** 
2394:src/sim900_800.c **** 	}
2395:src/sim900_800.c **** 
2396:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 6729              		.loc 1 2396 0
 6730 0696 134B     		ldr	r3, .L460+52	@ tmp577,
 6731 0698 1B88     		ldrh	r3, [r3]	@ D.7916, GSMConfigGPRSTimeOut
 6732 069a 002B     		cmp	r3, #0	@ D.7916,
 6733 069c 04D1     		bne	.L445	@,
2397:src/sim900_800.c **** 	{
2398:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 6734              		.loc 1 2398 0
 6735 069e 074B     		ldr	r3, .L460+12	@ tmp578,
 6736 06a0 0022     		movs	r2, #0	@ tmp579,
 6737 06a2 1A70     		strb	r2, [r3]	@ tmp580, GSMConfigGPRSState
2399:src/sim900_800.c **** 		return 4;
 6738              		.loc 1 2399 0
 6739 06a4 0423     		movs	r3, #4	@ D.7911,
 6740 06a6 00E0     		b	.L405	@
 6741              	.L445:
2400:src/sim900_800.c **** 	}
2401:src/sim900_800.c **** 
2402:src/sim900_800.c **** 	return 1;
 6742              		.loc 1 2402 0
 6743 06a8 0123     		movs	r3, #1	@ D.7911,
 6744              	.L405:
2403:src/sim900_800.c **** }
 6745              		.loc 1 2403 0
 6746 06aa 1800     		movs	r0, r3	@, <retval>
 6747 06ac 06B0     		add	sp, sp, #24	@,,
 6748              		@ sp needed	@
 6749 06ae 10BD     		pop	{r4, pc}
 6750              	.L461:
 6751              		.align	2
ARM GAS  /tmp/ccCNyPsy.s 			page 165


 6752              	.L460:
 6753 06b0 00000000 		.word	GSMbuffRtaCommand
 6754 06b4 B4010000 		.word	.LC140
 6755 06b8 C0010000 		.word	.LC142
 6756 06bc 00000000 		.word	GSMConfigGPRSState
 6757 06c0 00000000 		.word	GSMbuffGPRSCommand
 6758 06c4 C8010000 		.word	.LC144
 6759 06c8 EC000000 		.word	.LC91
 6760 06cc DC010000 		.word	.LC146
 6761 06d0 30010000 		.word	.LC113
 6762 06d4 E8010000 		.word	.LC148
 6763 06d8 00000000 		.word	GSMConfigGPRSflag
 6764 06dc F4010000 		.word	.LC150
 6765 06e0 14000000 		.word	.LC27
 6766 06e4 00000000 		.word	GSMConfigGPRSTimeOut
 6767              		.cfi_endproc
 6768              	.LFE34:
 6769              		.size	GSMConfigPDPGPRS, .-GSMConfigPDPGPRS
 6770              		.text
 6771              	.Letext0:
 6772              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 6773              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6774              		.file 4 "./cmsis_boot/stm32f0xx.h"
 6775              		.section	.debug_info,"",%progbits
 6776              	.Ldebug_info0:
 6777 0000 EE0C0000 		.4byte	0xcee
 6778 0004 0200     		.2byte	0x2
 6779 0006 00000000 		.4byte	.Ldebug_abbrev0
 6780 000a 04       		.byte	0x4
 6781 000b 01       		.uleb128 0x1
 6782 000c 86070000 		.4byte	.LASF145
 6783 0010 0C       		.byte	0xc
 6784 0011 EB050000 		.4byte	.LASF146
 6785 0015 FC050000 		.4byte	.LASF147
 6786 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6787 001d 00000000 		.4byte	0
 6788 0021 00000000 		.4byte	0
 6789 0025 00000000 		.4byte	.Ldebug_line0
 6790 0029 02       		.uleb128 0x2
 6791 002a 01       		.byte	0x1
 6792 002b 08       		.byte	0x8
 6793 002c 70060000 		.4byte	.LASF0
 6794 0030 02       		.uleb128 0x2
 6795 0031 01       		.byte	0x1
 6796 0032 06       		.byte	0x6
 6797 0033 42070000 		.4byte	.LASF1
 6798 0037 02       		.uleb128 0x2
 6799 0038 02       		.byte	0x2
 6800 0039 05       		.byte	0x5
 6801 003a C5040000 		.4byte	.LASF2
 6802 003e 03       		.uleb128 0x3
 6803 003f 5B020000 		.4byte	.LASF5
 6804 0043 02       		.byte	0x2
 6805 0044 2B       		.byte	0x2b
 6806 0045 49000000 		.4byte	0x49
 6807 0049 02       		.uleb128 0x2
 6808 004a 02       		.byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 166


 6809 004b 07       		.byte	0x7
 6810 004c 73070000 		.4byte	.LASF3
 6811 0050 02       		.uleb128 0x2
 6812 0051 04       		.byte	0x4
 6813 0052 05       		.byte	0x5
 6814 0053 E5040000 		.4byte	.LASF4
 6815 0057 03       		.uleb128 0x3
 6816 0058 7E060000 		.4byte	.LASF6
 6817 005c 02       		.byte	0x2
 6818 005d 41       		.byte	0x41
 6819 005e 62000000 		.4byte	0x62
 6820 0062 02       		.uleb128 0x2
 6821 0063 04       		.byte	0x4
 6822 0064 07       		.byte	0x7
 6823 0065 D9050000 		.4byte	.LASF7
 6824 0069 02       		.uleb128 0x2
 6825 006a 08       		.byte	0x8
 6826 006b 05       		.byte	0x5
 6827 006c CD030000 		.4byte	.LASF8
 6828 0070 02       		.uleb128 0x2
 6829 0071 08       		.byte	0x8
 6830 0072 07       		.byte	0x7
 6831 0073 08020000 		.4byte	.LASF9
 6832 0077 04       		.uleb128 0x4
 6833 0078 04       		.byte	0x4
 6834 0079 05       		.byte	0x5
 6835 007a 696E7400 		.ascii	"int\000"
 6836 007e 02       		.uleb128 0x2
 6837 007f 04       		.byte	0x4
 6838 0080 07       		.byte	0x7
 6839 0081 BF000000 		.4byte	.LASF10
 6840 0085 03       		.uleb128 0x3
 6841 0086 5F040000 		.4byte	.LASF11
 6842 008a 03       		.byte	0x3
 6843 008b 1A       		.byte	0x1a
 6844 008c 3E000000 		.4byte	0x3e
 6845 0090 03       		.uleb128 0x3
 6846 0091 28010000 		.4byte	.LASF12
 6847 0095 03       		.byte	0x3
 6848 0096 20       		.byte	0x20
 6849 0097 57000000 		.4byte	0x57
 6850 009b 02       		.uleb128 0x2
 6851 009c 04       		.byte	0x4
 6852 009d 07       		.byte	0x7
 6853 009e D0050000 		.4byte	.LASF13
 6854 00a2 05       		.uleb128 0x5
 6855 00a3 90000000 		.4byte	0x90
 6856 00a7 06       		.uleb128 0x6
 6857 00a8 90000000 		.4byte	0x90
 6858 00ac B7000000 		.4byte	0xb7
 6859 00b0 07       		.uleb128 0x7
 6860 00b1 9B000000 		.4byte	0x9b
 6861 00b5 01       		.byte	0x1
 6862 00b6 00       		.byte	0
 6863 00b7 05       		.uleb128 0x5
 6864 00b8 85000000 		.4byte	0x85
 6865 00bc 08       		.uleb128 0x8
ARM GAS  /tmp/ccCNyPsy.s 			page 167


 6866 00bd 2C       		.byte	0x2c
 6867 00be 04       		.byte	0x4
 6868 00bf 6902     		.2byte	0x269
 6869 00c1 98010000 		.4byte	0x198
 6870 00c5 09       		.uleb128 0x9
 6871 00c6 66020000 		.4byte	.LASF14
 6872 00ca 04       		.byte	0x4
 6873 00cb 6B02     		.2byte	0x26b
 6874 00cd A2000000 		.4byte	0xa2
 6875 00d1 02       		.byte	0x2
 6876 00d2 23       		.byte	0x23
 6877 00d3 00       		.uleb128 0
 6878 00d4 09       		.uleb128 0x9
 6879 00d5 22050000 		.4byte	.LASF15
 6880 00d9 04       		.byte	0x4
 6881 00da 6C02     		.2byte	0x26c
 6882 00dc B7000000 		.4byte	0xb7
 6883 00e0 02       		.byte	0x2
 6884 00e1 23       		.byte	0x23
 6885 00e2 04       		.uleb128 0x4
 6886 00e3 09       		.uleb128 0x9
 6887 00e4 9D040000 		.4byte	.LASF16
 6888 00e8 04       		.byte	0x4
 6889 00e9 6D02     		.2byte	0x26d
 6890 00eb 85000000 		.4byte	0x85
 6891 00ef 02       		.byte	0x2
 6892 00f0 23       		.byte	0x23
 6893 00f1 06       		.uleb128 0x6
 6894 00f2 09       		.uleb128 0x9
 6895 00f3 4B040000 		.4byte	.LASF17
 6896 00f7 04       		.byte	0x4
 6897 00f8 6E02     		.2byte	0x26e
 6898 00fa A2000000 		.4byte	0xa2
 6899 00fe 02       		.byte	0x2
 6900 00ff 23       		.byte	0x23
 6901 0100 08       		.uleb128 0x8
 6902 0101 09       		.uleb128 0x9
 6903 0102 DE020000 		.4byte	.LASF18
 6904 0106 04       		.byte	0x4
 6905 0107 6F02     		.2byte	0x26f
 6906 0109 A2000000 		.4byte	0xa2
 6907 010d 02       		.byte	0x2
 6908 010e 23       		.byte	0x23
 6909 010f 0C       		.uleb128 0xc
 6910 0110 0A       		.uleb128 0xa
 6911 0111 49445200 		.ascii	"IDR\000"
 6912 0115 04       		.byte	0x4
 6913 0116 7002     		.2byte	0x270
 6914 0118 B7000000 		.4byte	0xb7
 6915 011c 02       		.byte	0x2
 6916 011d 23       		.byte	0x23
 6917 011e 10       		.uleb128 0x10
 6918 011f 09       		.uleb128 0x9
 6919 0120 A7040000 		.4byte	.LASF19
 6920 0124 04       		.byte	0x4
 6921 0125 7102     		.2byte	0x271
 6922 0127 85000000 		.4byte	0x85
ARM GAS  /tmp/ccCNyPsy.s 			page 168


 6923 012b 02       		.byte	0x2
 6924 012c 23       		.byte	0x23
 6925 012d 12       		.uleb128 0x12
 6926 012e 0A       		.uleb128 0xa
 6927 012f 4F445200 		.ascii	"ODR\000"
 6928 0133 04       		.byte	0x4
 6929 0134 7202     		.2byte	0x272
 6930 0136 B7000000 		.4byte	0xb7
 6931 013a 02       		.byte	0x2
 6932 013b 23       		.byte	0x23
 6933 013c 14       		.uleb128 0x14
 6934 013d 09       		.uleb128 0x9
 6935 013e B1040000 		.4byte	.LASF20
 6936 0142 04       		.byte	0x4
 6937 0143 7302     		.2byte	0x273
 6938 0145 85000000 		.4byte	0x85
 6939 0149 02       		.byte	0x2
 6940 014a 23       		.byte	0x23
 6941 014b 16       		.uleb128 0x16
 6942 014c 09       		.uleb128 0x9
 6943 014d 52000000 		.4byte	.LASF21
 6944 0151 04       		.byte	0x4
 6945 0152 7402     		.2byte	0x274
 6946 0154 A2000000 		.4byte	0xa2
 6947 0158 02       		.byte	0x2
 6948 0159 23       		.byte	0x23
 6949 015a 18       		.uleb128 0x18
 6950 015b 09       		.uleb128 0x9
 6951 015c E0080000 		.4byte	.LASF22
 6952 0160 04       		.byte	0x4
 6953 0161 7502     		.2byte	0x275
 6954 0163 A2000000 		.4byte	0xa2
 6955 0167 02       		.byte	0x2
 6956 0168 23       		.byte	0x23
 6957 0169 1C       		.uleb128 0x1c
 6958 016a 0A       		.uleb128 0xa
 6959 016b 41465200 		.ascii	"AFR\000"
 6960 016f 04       		.byte	0x4
 6961 0170 7602     		.2byte	0x276
 6962 0172 98010000 		.4byte	0x198
 6963 0176 02       		.byte	0x2
 6964 0177 23       		.byte	0x23
 6965 0178 20       		.uleb128 0x20
 6966 0179 0A       		.uleb128 0xa
 6967 017a 42525200 		.ascii	"BRR\000"
 6968 017e 04       		.byte	0x4
 6969 017f 7702     		.2byte	0x277
 6970 0181 B7000000 		.4byte	0xb7
 6971 0185 02       		.byte	0x2
 6972 0186 23       		.byte	0x23
 6973 0187 28       		.uleb128 0x28
 6974 0188 09       		.uleb128 0x9
 6975 0189 BB040000 		.4byte	.LASF23
 6976 018d 04       		.byte	0x4
 6977 018e 7802     		.2byte	0x278
 6978 0190 85000000 		.4byte	0x85
 6979 0194 02       		.byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 169


 6980 0195 23       		.byte	0x23
 6981 0196 2A       		.uleb128 0x2a
 6982 0197 00       		.byte	0
 6983 0198 05       		.uleb128 0x5
 6984 0199 A7000000 		.4byte	0xa7
 6985 019d 0B       		.uleb128 0xb
 6986 019e A5050000 		.4byte	.LASF24
 6987 01a2 04       		.byte	0x4
 6988 01a3 7902     		.2byte	0x279
 6989 01a5 BC000000 		.4byte	0xbc
 6990 01a9 02       		.uleb128 0x2
 6991 01aa 08       		.byte	0x8
 6992 01ab 04       		.byte	0x4
 6993 01ac 53040000 		.4byte	.LASF25
 6994 01b0 0C       		.uleb128 0xc
 6995 01b1 04       		.byte	0x4
 6996 01b2 29000000 		.4byte	0x29
 6997 01b6 0C       		.uleb128 0xc
 6998 01b7 04       		.byte	0x4
 6999 01b8 BC010000 		.4byte	0x1bc
 7000 01bc 02       		.uleb128 0x2
 7001 01bd 01       		.byte	0x1
 7002 01be 08       		.byte	0x8
 7003 01bf 12030000 		.4byte	.LASF26
 7004 01c3 0D       		.uleb128 0xd
 7005 01c4 BC010000 		.4byte	0x1bc
 7006 01c8 0E       		.uleb128 0xe
 7007 01c9 01       		.byte	0x1
 7008 01ca CF040000 		.4byte	.LASF27
 7009 01ce 01       		.byte	0x1
 7010 01cf D7       		.byte	0xd7
 7011 01d0 01       		.byte	0x1
 7012 01d1 00000000 		.4byte	.LFB20
 7013 01d5 5C000000 		.4byte	.LFE20
 7014 01d9 00000000 		.4byte	.LLST0
 7015 01dd 01       		.byte	0x1
 7016 01de 0F       		.uleb128 0xf
 7017 01df 01       		.byte	0x1
 7018 01e0 B5000000 		.4byte	.LASF148
 7019 01e4 01       		.byte	0x1
 7020 01e5 2E01     		.2byte	0x12e
 7021 01e7 01       		.byte	0x1
 7022 01e8 29000000 		.4byte	0x29
 7023 01ec 00000000 		.4byte	.LFB21
 7024 01f0 FC000000 		.4byte	.LFE21
 7025 01f4 02       		.byte	0x2
 7026 01f5 7D       		.byte	0x7d
 7027 01f6 00       		.sleb128 0
 7028 01f7 01       		.byte	0x1
 7029 01f8 10       		.uleb128 0x10
 7030 01f9 01       		.byte	0x1
 7031 01fa B6020000 		.4byte	.LASF28
 7032 01fe 01       		.byte	0x1
 7033 01ff 6601     		.2byte	0x166
 7034 0201 01       		.byte	0x1
 7035 0202 00000000 		.4byte	.LFB22
 7036 0206 38000000 		.4byte	.LFE22
ARM GAS  /tmp/ccCNyPsy.s 			page 170


 7037 020a 20000000 		.4byte	.LLST1
 7038 020e 01       		.byte	0x1
 7039 020f 11       		.uleb128 0x11
 7040 0210 01       		.byte	0x1
 7041 0211 A9060000 		.4byte	.LASF62
 7042 0215 01       		.byte	0x1
 7043 0216 7501     		.2byte	0x175
 7044 0218 01       		.byte	0x1
 7045 0219 00000000 		.4byte	.LFB23
 7046 021d CC030000 		.4byte	.LFE23
 7047 0221 40000000 		.4byte	.LLST2
 7048 0225 01       		.byte	0x1
 7049 0226 FB020000 		.4byte	0x2fb
 7050 022a 12       		.uleb128 0x12
 7051 022b 77040000 		.4byte	.LASF29
 7052 022f 01       		.byte	0x1
 7053 0230 7501     		.2byte	0x175
 7054 0232 B0010000 		.4byte	0x1b0
 7055 0236 02       		.byte	0x2
 7056 0237 91       		.byte	0x91
 7057 0238 6C       		.sleb128 -20
 7058 0239 12       		.uleb128 0x12
 7059 023a F1060000 		.4byte	.LASF30
 7060 023e 01       		.byte	0x1
 7061 023f 7501     		.2byte	0x175
 7062 0241 B0010000 		.4byte	0x1b0
 7063 0245 02       		.byte	0x2
 7064 0246 91       		.byte	0x91
 7065 0247 68       		.sleb128 -24
 7066 0248 12       		.uleb128 0x12
 7067 0249 FF060000 		.4byte	.LASF31
 7068 024d 01       		.byte	0x1
 7069 024e 7501     		.2byte	0x175
 7070 0250 B0010000 		.4byte	0x1b0
 7071 0254 02       		.byte	0x2
 7072 0255 91       		.byte	0x91
 7073 0256 64       		.sleb128 -28
 7074 0257 12       		.uleb128 0x12
 7075 0258 77050000 		.4byte	.LASF32
 7076 025c 01       		.byte	0x1
 7077 025d 7501     		.2byte	0x175
 7078 025f B6010000 		.4byte	0x1b6
 7079 0263 02       		.byte	0x2
 7080 0264 91       		.byte	0x91
 7081 0265 60       		.sleb128 -32
 7082 0266 12       		.uleb128 0x12
 7083 0267 31010000 		.4byte	.LASF33
 7084 026b 01       		.byte	0x1
 7085 026c 7501     		.2byte	0x175
 7086 026e B6010000 		.4byte	0x1b6
 7087 0272 02       		.byte	0x2
 7088 0273 91       		.byte	0x91
 7089 0274 00       		.sleb128 0
 7090 0275 12       		.uleb128 0x12
 7091 0276 77010000 		.4byte	.LASF34
 7092 027a 01       		.byte	0x1
 7093 027b 7501     		.2byte	0x175
ARM GAS  /tmp/ccCNyPsy.s 			page 171


 7094 027d B6010000 		.4byte	0x1b6
 7095 0281 02       		.byte	0x2
 7096 0282 91       		.byte	0x91
 7097 0283 04       		.sleb128 4
 7098 0284 12       		.uleb128 0x12
 7099 0285 3E080000 		.4byte	.LASF35
 7100 0289 01       		.byte	0x1
 7101 028a 7501     		.2byte	0x175
 7102 028c B6010000 		.4byte	0x1b6
 7103 0290 02       		.byte	0x2
 7104 0291 91       		.byte	0x91
 7105 0292 08       		.sleb128 8
 7106 0293 12       		.uleb128 0x12
 7107 0294 8E050000 		.4byte	.LASF36
 7108 0298 01       		.byte	0x1
 7109 0299 7501     		.2byte	0x175
 7110 029b B6010000 		.4byte	0x1b6
 7111 029f 02       		.byte	0x2
 7112 02a0 91       		.byte	0x91
 7113 02a1 0C       		.sleb128 12
 7114 02a2 12       		.uleb128 0x12
 7115 02a3 4C010000 		.4byte	.LASF37
 7116 02a7 01       		.byte	0x1
 7117 02a8 7501     		.2byte	0x175
 7118 02aa B6010000 		.4byte	0x1b6
 7119 02ae 02       		.byte	0x2
 7120 02af 91       		.byte	0x91
 7121 02b0 10       		.sleb128 16
 7122 02b1 12       		.uleb128 0x12
 7123 02b2 90010000 		.4byte	.LASF38
 7124 02b6 01       		.byte	0x1
 7125 02b7 7501     		.2byte	0x175
 7126 02b9 B6010000 		.4byte	0x1b6
 7127 02bd 02       		.byte	0x2
 7128 02be 91       		.byte	0x91
 7129 02bf 14       		.sleb128 20
 7130 02c0 12       		.uleb128 0x12
 7131 02c1 5B080000 		.4byte	.LASF39
 7132 02c5 01       		.byte	0x1
 7133 02c6 7501     		.2byte	0x175
 7134 02c8 B6010000 		.4byte	0x1b6
 7135 02cc 02       		.byte	0x2
 7136 02cd 91       		.byte	0x91
 7137 02ce 18       		.sleb128 24
 7138 02cf 12       		.uleb128 0x12
 7139 02d0 20040000 		.4byte	.LASF40
 7140 02d4 01       		.byte	0x1
 7141 02d5 7501     		.2byte	0x175
 7142 02d7 B6010000 		.4byte	0x1b6
 7143 02db 02       		.byte	0x2
 7144 02dc 91       		.byte	0x91
 7145 02dd 1C       		.sleb128 28
 7146 02de 12       		.uleb128 0x12
 7147 02df AB080000 		.4byte	.LASF41
 7148 02e3 01       		.byte	0x1
 7149 02e4 7501     		.2byte	0x175
 7150 02e6 B6010000 		.4byte	0x1b6
ARM GAS  /tmp/ccCNyPsy.s 			page 172


 7151 02ea 02       		.byte	0x2
 7152 02eb 91       		.byte	0x91
 7153 02ec 20       		.sleb128 32
 7154 02ed 13       		.uleb128 0x13
 7155 02ee 6900     		.ascii	"i\000"
 7156 02f0 01       		.byte	0x1
 7157 02f1 7701     		.2byte	0x177
 7158 02f3 29000000 		.4byte	0x29
 7159 02f7 02       		.byte	0x2
 7160 02f8 91       		.byte	0x91
 7161 02f9 77       		.sleb128 -9
 7162 02fa 00       		.byte	0
 7163 02fb 14       		.uleb128 0x14
 7164 02fc 01       		.byte	0x1
 7165 02fd 1F020000 		.4byte	.LASF43
 7166 0301 01       		.byte	0x1
 7167 0302 4302     		.2byte	0x243
 7168 0304 01       		.byte	0x1
 7169 0305 BC010000 		.4byte	0x1bc
 7170 0309 00000000 		.4byte	.LFB24
 7171 030d 70000000 		.4byte	.LFE24
 7172 0311 6C000000 		.4byte	.LLST3
 7173 0315 01       		.byte	0x1
 7174 0316 28030000 		.4byte	0x328
 7175 031a 13       		.uleb128 0x13
 7176 031b 6900     		.ascii	"i\000"
 7177 031d 01       		.byte	0x1
 7178 031e 4502     		.2byte	0x245
 7179 0320 29000000 		.4byte	0x29
 7180 0324 02       		.byte	0x2
 7181 0325 91       		.byte	0x91
 7182 0326 77       		.sleb128 -9
 7183 0327 00       		.byte	0
 7184 0328 10       		.uleb128 0x10
 7185 0329 01       		.byte	0x1
 7186 032a 6F000000 		.4byte	.LASF42
 7187 032e 01       		.byte	0x1
 7188 032f 6002     		.2byte	0x260
 7189 0331 01       		.byte	0x1
 7190 0332 00000000 		.4byte	.LFB25
 7191 0336 D4020000 		.4byte	.LFE25
 7192 033a 98000000 		.4byte	.LLST4
 7193 033e 01       		.byte	0x1
 7194 033f 14       		.uleb128 0x14
 7195 0340 01       		.byte	0x1
 7196 0341 89060000 		.4byte	.LASF44
 7197 0345 01       		.byte	0x1
 7198 0346 0103     		.2byte	0x301
 7199 0348 01       		.byte	0x1
 7200 0349 BC010000 		.4byte	0x1bc
 7201 034d 00000000 		.4byte	.LFB26
 7202 0351 50010000 		.4byte	.LFE26
 7203 0355 B8000000 		.4byte	.LLST5
 7204 0359 01       		.byte	0x1
 7205 035a 9B030000 		.4byte	0x39b
 7206 035e 12       		.uleb128 0x12
 7207 035f 4F050000 		.4byte	.LASF45
ARM GAS  /tmp/ccCNyPsy.s 			page 173


 7208 0363 01       		.byte	0x1
 7209 0364 0103     		.2byte	0x301
 7210 0366 B6010000 		.4byte	0x1b6
 7211 036a 02       		.byte	0x2
 7212 036b 91       		.byte	0x91
 7213 036c 74       		.sleb128 -12
 7214 036d 12       		.uleb128 0x12
 7215 036e F3000000 		.4byte	.LASF46
 7216 0372 01       		.byte	0x1
 7217 0373 0103     		.2byte	0x301
 7218 0375 49000000 		.4byte	0x49
 7219 0379 02       		.byte	0x2
 7220 037a 91       		.byte	0x91
 7221 037b 72       		.sleb128 -14
 7222 037c 15       		.uleb128 0x15
 7223 037d 72746100 		.ascii	"rta\000"
 7224 0381 01       		.byte	0x1
 7225 0382 0103     		.2byte	0x301
 7226 0384 29000000 		.4byte	0x29
 7227 0388 02       		.byte	0x2
 7228 0389 91       		.byte	0x91
 7229 038a 71       		.sleb128 -15
 7230 038b 12       		.uleb128 0x12
 7231 038c D8060000 		.4byte	.LASF47
 7232 0390 01       		.byte	0x1
 7233 0391 0103     		.2byte	0x301
 7234 0393 B6010000 		.4byte	0x1b6
 7235 0397 02       		.byte	0x2
 7236 0398 91       		.byte	0x91
 7237 0399 6C       		.sleb128 -20
 7238 039a 00       		.byte	0
 7239 039b 14       		.uleb128 0x14
 7240 039c 01       		.byte	0x1
 7241 039d DA040000 		.4byte	.LASF48
 7242 03a1 01       		.byte	0x1
 7243 03a2 5903     		.2byte	0x359
 7244 03a4 01       		.byte	0x1
 7245 03a5 BC010000 		.4byte	0x1bc
 7246 03a9 00000000 		.4byte	.LFB27
 7247 03ad F4020000 		.4byte	.LFE27
 7248 03b1 E4000000 		.4byte	.LLST6
 7249 03b5 01       		.byte	0x1
 7250 03b6 D7030000 		.4byte	0x3d7
 7251 03ba 12       		.uleb128 0x12
 7252 03bb F3000000 		.4byte	.LASF46
 7253 03bf 01       		.byte	0x1
 7254 03c0 5903     		.2byte	0x359
 7255 03c2 49000000 		.4byte	0x49
 7256 03c6 02       		.byte	0x2
 7257 03c7 91       		.byte	0x91
 7258 03c8 6E       		.sleb128 -18
 7259 03c9 13       		.uleb128 0x13
 7260 03ca 6900     		.ascii	"i\000"
 7261 03cc 01       		.byte	0x1
 7262 03cd 5B03     		.2byte	0x35b
 7263 03cf 29000000 		.4byte	0x29
 7264 03d3 02       		.byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 174


 7265 03d4 91       		.byte	0x91
 7266 03d5 77       		.sleb128 -9
 7267 03d6 00       		.byte	0
 7268 03d7 14       		.uleb128 0x14
 7269 03d8 01       		.byte	0x1
 7270 03d9 5A050000 		.4byte	.LASF49
 7271 03dd 01       		.byte	0x1
 7272 03de 0E04     		.2byte	0x40e
 7273 03e0 01       		.byte	0x1
 7274 03e1 BC010000 		.4byte	0x1bc
 7275 03e5 00000000 		.4byte	.LFB28
 7276 03e9 D4010000 		.4byte	.LFE28
 7277 03ed 10010000 		.4byte	.LLST7
 7278 03f1 01       		.byte	0x1
 7279 03f2 40040000 		.4byte	0x440
 7280 03f6 12       		.uleb128 0x12
 7281 03f7 1B050000 		.4byte	.LASF50
 7282 03fb 01       		.byte	0x1
 7283 03fc 0E04     		.2byte	0x40e
 7284 03fe B6010000 		.4byte	0x1b6
 7285 0402 02       		.byte	0x2
 7286 0403 91       		.byte	0x91
 7287 0404 6C       		.sleb128 -20
 7288 0405 12       		.uleb128 0x12
 7289 0406 01020000 		.4byte	.LASF51
 7290 040a 01       		.byte	0x1
 7291 040b 0E04     		.2byte	0x40e
 7292 040d B6010000 		.4byte	0x1b6
 7293 0411 02       		.byte	0x2
 7294 0412 91       		.byte	0x91
 7295 0413 68       		.sleb128 -24
 7296 0414 12       		.uleb128 0x12
 7297 0415 F3000000 		.4byte	.LASF46
 7298 0419 01       		.byte	0x1
 7299 041a 0E04     		.2byte	0x40e
 7300 041c 49000000 		.4byte	0x49
 7301 0420 02       		.byte	0x2
 7302 0421 91       		.byte	0x91
 7303 0422 66       		.sleb128 -26
 7304 0423 15       		.uleb128 0x15
 7305 0424 73696D00 		.ascii	"sim\000"
 7306 0428 01       		.byte	0x1
 7307 0429 0E04     		.2byte	0x40e
 7308 042b BC010000 		.4byte	0x1bc
 7309 042f 02       		.byte	0x2
 7310 0430 91       		.byte	0x91
 7311 0431 65       		.sleb128 -27
 7312 0432 13       		.uleb128 0x13
 7313 0433 6900     		.ascii	"i\000"
 7314 0435 01       		.byte	0x1
 7315 0436 1004     		.2byte	0x410
 7316 0438 29000000 		.4byte	0x29
 7317 043c 02       		.byte	0x2
 7318 043d 91       		.byte	0x91
 7319 043e 77       		.sleb128 -9
 7320 043f 00       		.byte	0
 7321 0440 14       		.uleb128 0x14
ARM GAS  /tmp/ccCNyPsy.s 			page 175


 7322 0441 01       		.byte	0x1
 7323 0442 0D050000 		.4byte	.LASF52
 7324 0446 01       		.byte	0x1
 7325 0447 7504     		.2byte	0x475
 7326 0449 01       		.byte	0x1
 7327 044a BC010000 		.4byte	0x1bc
 7328 044e 00000000 		.4byte	.LFB29
 7329 0452 80080000 		.4byte	.LFE29
 7330 0456 3C010000 		.4byte	.LLST8
 7331 045a 01       		.byte	0x1
 7332 045b E5040000 		.4byte	0x4e5
 7333 045f 15       		.uleb128 0x15
 7334 0460 73696D00 		.ascii	"sim\000"
 7335 0464 01       		.byte	0x1
 7336 0465 7504     		.2byte	0x475
 7337 0467 BC010000 		.4byte	0x1bc
 7338 046b 02       		.byte	0x2
 7339 046c 91       		.byte	0x91
 7340 046d 6F       		.sleb128 -17
 7341 046e 12       		.uleb128 0x12
 7342 046f B6060000 		.4byte	.LASF53
 7343 0473 01       		.byte	0x1
 7344 0474 7504     		.2byte	0x475
 7345 0476 B6010000 		.4byte	0x1b6
 7346 047a 02       		.byte	0x2
 7347 047b 91       		.byte	0x91
 7348 047c 68       		.sleb128 -24
 7349 047d 12       		.uleb128 0x12
 7350 047e 67000000 		.4byte	.LASF54
 7351 0482 01       		.byte	0x1
 7352 0483 7504     		.2byte	0x475
 7353 0485 B6010000 		.4byte	0x1b6
 7354 0489 02       		.byte	0x2
 7355 048a 91       		.byte	0x91
 7356 048b 64       		.sleb128 -28
 7357 048c 12       		.uleb128 0x12
 7358 048d 09000000 		.4byte	.LASF55
 7359 0491 01       		.byte	0x1
 7360 0492 7504     		.2byte	0x475
 7361 0494 B6010000 		.4byte	0x1b6
 7362 0498 02       		.byte	0x2
 7363 0499 91       		.byte	0x91
 7364 049a 60       		.sleb128 -32
 7365 049b 12       		.uleb128 0x12
 7366 049c A2080000 		.4byte	.LASF56
 7367 04a0 01       		.byte	0x1
 7368 04a1 7504     		.2byte	0x475
 7369 04a3 B6010000 		.4byte	0x1b6
 7370 04a7 02       		.byte	0x2
 7371 04a8 91       		.byte	0x91
 7372 04a9 00       		.sleb128 0
 7373 04aa 12       		.uleb128 0x12
 7374 04ab F5010000 		.4byte	.LASF57
 7375 04af 01       		.byte	0x1
 7376 04b0 7504     		.2byte	0x475
 7377 04b2 B6010000 		.4byte	0x1b6
 7378 04b6 02       		.byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 176


 7379 04b7 91       		.byte	0x91
 7380 04b8 04       		.sleb128 4
 7381 04b9 12       		.uleb128 0x12
 7382 04ba 04030000 		.4byte	.LASF58
 7383 04be 01       		.byte	0x1
 7384 04bf 7504     		.2byte	0x475
 7385 04c1 B6010000 		.4byte	0x1b6
 7386 04c5 02       		.byte	0x2
 7387 04c6 91       		.byte	0x91
 7388 04c7 08       		.sleb128 8
 7389 04c8 12       		.uleb128 0x12
 7390 04c9 F3000000 		.4byte	.LASF46
 7391 04cd 01       		.byte	0x1
 7392 04ce 7504     		.2byte	0x475
 7393 04d0 49000000 		.4byte	0x49
 7394 04d4 02       		.byte	0x2
 7395 04d5 91       		.byte	0x91
 7396 04d6 0C       		.sleb128 12
 7397 04d7 13       		.uleb128 0x13
 7398 04d8 6900     		.ascii	"i\000"
 7399 04da 01       		.byte	0x1
 7400 04db 7704     		.2byte	0x477
 7401 04dd 29000000 		.4byte	0x29
 7402 04e1 02       		.byte	0x2
 7403 04e2 91       		.byte	0x91
 7404 04e3 77       		.sleb128 -9
 7405 04e4 00       		.byte	0
 7406 04e5 14       		.uleb128 0x14
 7407 04e6 01       		.byte	0x1
 7408 04e7 84040000 		.4byte	.LASF59
 7409 04eb 01       		.byte	0x1
 7410 04ec FF05     		.2byte	0x5ff
 7411 04ee 01       		.byte	0x1
 7412 04ef BC010000 		.4byte	0x1bc
 7413 04f3 00000000 		.4byte	.LFB30
 7414 04f7 84000000 		.4byte	.LFE30
 7415 04fb 68010000 		.4byte	.LLST9
 7416 04ff 01       		.byte	0x1
 7417 0500 21050000 		.4byte	0x521
 7418 0504 15       		.uleb128 0x15
 7419 0505 73696D00 		.ascii	"sim\000"
 7420 0509 01       		.byte	0x1
 7421 050a FF05     		.2byte	0x5ff
 7422 050c 29000000 		.4byte	0x29
 7423 0510 02       		.byte	0x2
 7424 0511 91       		.byte	0x91
 7425 0512 6F       		.sleb128 -17
 7426 0513 13       		.uleb128 0x13
 7427 0514 6900     		.ascii	"i\000"
 7428 0516 01       		.byte	0x1
 7429 0517 0206     		.2byte	0x602
 7430 0519 29000000 		.4byte	0x29
 7431 051d 02       		.byte	0x2
 7432 051e 91       		.byte	0x91
 7433 051f 77       		.sleb128 -9
 7434 0520 00       		.byte	0
 7435 0521 14       		.uleb128 0x14
ARM GAS  /tmp/ccCNyPsy.s 			page 177


 7436 0522 01       		.byte	0x1
 7437 0523 07040000 		.4byte	.LASF60
 7438 0527 01       		.byte	0x1
 7439 0528 1706     		.2byte	0x617
 7440 052a 01       		.byte	0x1
 7441 052b BC010000 		.4byte	0x1bc
 7442 052f 00000000 		.4byte	.LFB31
 7443 0533 2C010000 		.4byte	.LFE31
 7444 0537 94010000 		.4byte	.LLST10
 7445 053b 01       		.byte	0x1
 7446 053c 6C050000 		.4byte	0x56c
 7447 0540 12       		.uleb128 0x12
 7448 0541 1B050000 		.4byte	.LASF50
 7449 0545 01       		.byte	0x1
 7450 0546 1706     		.2byte	0x617
 7451 0548 B6010000 		.4byte	0x1b6
 7452 054c 02       		.byte	0x2
 7453 054d 91       		.byte	0x91
 7454 054e 6C       		.sleb128 -20
 7455 054f 12       		.uleb128 0x12
 7456 0550 F3000000 		.4byte	.LASF46
 7457 0554 01       		.byte	0x1
 7458 0555 1706     		.2byte	0x617
 7459 0557 49000000 		.4byte	0x49
 7460 055b 02       		.byte	0x2
 7461 055c 91       		.byte	0x91
 7462 055d 6A       		.sleb128 -22
 7463 055e 13       		.uleb128 0x13
 7464 055f 6900     		.ascii	"i\000"
 7465 0561 01       		.byte	0x1
 7466 0562 1906     		.2byte	0x619
 7467 0564 29000000 		.4byte	0x29
 7468 0568 02       		.byte	0x2
 7469 0569 91       		.byte	0x91
 7470 056a 77       		.sleb128 -9
 7471 056b 00       		.byte	0
 7472 056c 16       		.uleb128 0x16
 7473 056d 01       		.byte	0x1
 7474 056e 85030000 		.4byte	.LASF61
 7475 0572 01       		.byte	0x1
 7476 0573 A406     		.2byte	0x6a4
 7477 0575 01       		.byte	0x1
 7478 0576 00000000 		.4byte	.LFB32
 7479 057a DC000000 		.4byte	.LFE32
 7480 057e 02       		.byte	0x2
 7481 057f 7D       		.byte	0x7d
 7482 0580 00       		.sleb128 0
 7483 0581 01       		.byte	0x1
 7484 0582 11       		.uleb128 0x11
 7485 0583 01       		.byte	0x1
 7486 0584 6D030000 		.4byte	.LASF63
 7487 0588 01       		.byte	0x1
 7488 0589 C406     		.2byte	0x6c4
 7489 058b 01       		.byte	0x1
 7490 058c 00000000 		.4byte	.LFB33
 7491 0590 30060000 		.4byte	.LFE33
 7492 0594 C0010000 		.4byte	.LLST11
ARM GAS  /tmp/ccCNyPsy.s 			page 178


 7493 0598 01       		.byte	0x1
 7494 0599 05060000 		.4byte	0x605
 7495 059d 12       		.uleb128 0x12
 7496 059e B3010000 		.4byte	.LASF64
 7497 05a2 01       		.byte	0x1
 7498 05a3 C406     		.2byte	0x6c4
 7499 05a5 B0010000 		.4byte	0x1b0
 7500 05a9 02       		.byte	0x2
 7501 05aa 91       		.byte	0x91
 7502 05ab 6C       		.sleb128 -20
 7503 05ac 12       		.uleb128 0x12
 7504 05ad 3E030000 		.4byte	.LASF65
 7505 05b1 01       		.byte	0x1
 7506 05b2 C406     		.2byte	0x6c4
 7507 05b4 B6010000 		.4byte	0x1b6
 7508 05b8 02       		.byte	0x2
 7509 05b9 91       		.byte	0x91
 7510 05ba 68       		.sleb128 -24
 7511 05bb 12       		.uleb128 0x12
 7512 05bc FD030000 		.4byte	.LASF66
 7513 05c0 01       		.byte	0x1
 7514 05c1 C406     		.2byte	0x6c4
 7515 05c3 B0010000 		.4byte	0x1b0
 7516 05c7 02       		.byte	0x2
 7517 05c8 91       		.byte	0x91
 7518 05c9 64       		.sleb128 -28
 7519 05ca 12       		.uleb128 0x12
 7520 05cb 10010000 		.4byte	.LASF67
 7521 05cf 01       		.byte	0x1
 7522 05d0 C406     		.2byte	0x6c4
 7523 05d2 B0010000 		.4byte	0x1b0
 7524 05d6 02       		.byte	0x2
 7525 05d7 91       		.byte	0x91
 7526 05d8 60       		.sleb128 -32
 7527 05d9 12       		.uleb128 0x12
 7528 05da 61060000 		.4byte	.LASF68
 7529 05de 01       		.byte	0x1
 7530 05df C406     		.2byte	0x6c4
 7531 05e1 B6010000 		.4byte	0x1b6
 7532 05e5 02       		.byte	0x2
 7533 05e6 91       		.byte	0x91
 7534 05e7 00       		.sleb128 0
 7535 05e8 13       		.uleb128 0x13
 7536 05e9 6900     		.ascii	"i\000"
 7537 05eb 01       		.byte	0x1
 7538 05ec C606     		.2byte	0x6c6
 7539 05ee 29000000 		.4byte	0x29
 7540 05f2 02       		.byte	0x2
 7541 05f3 91       		.byte	0x91
 7542 05f4 77       		.sleb128 -9
 7543 05f5 17       		.uleb128 0x17
 7544 05f6 29050000 		.4byte	.LASF69
 7545 05fa 01       		.byte	0x1
 7546 05fb C706     		.2byte	0x6c7
 7547 05fd 29000000 		.4byte	0x29
 7548 0601 02       		.byte	0x2
 7549 0602 91       		.byte	0x91
ARM GAS  /tmp/ccCNyPsy.s 			page 179


 7550 0603 76       		.sleb128 -10
 7551 0604 00       		.byte	0
 7552 0605 14       		.uleb128 0x14
 7553 0606 01       		.byte	0x1
 7554 0607 38020000 		.4byte	.LASF70
 7555 060b 01       		.byte	0x1
 7556 060c CC07     		.2byte	0x7cc
 7557 060e 01       		.byte	0x1
 7558 060f BC010000 		.4byte	0x1bc
 7559 0613 00000000 		.4byte	.LFB34
 7560 0617 E8060000 		.4byte	.LFE34
 7561 061b EC010000 		.4byte	.LLST12
 7562 061f 01       		.byte	0x1
 7563 0620 AA060000 		.4byte	0x6aa
 7564 0624 15       		.uleb128 0x15
 7565 0625 73696D00 		.ascii	"sim\000"
 7566 0629 01       		.byte	0x1
 7567 062a CC07     		.2byte	0x7cc
 7568 062c BC010000 		.4byte	0x1bc
 7569 0630 02       		.byte	0x2
 7570 0631 91       		.byte	0x91
 7571 0632 6F       		.sleb128 -17
 7572 0633 12       		.uleb128 0x12
 7573 0634 B6060000 		.4byte	.LASF53
 7574 0638 01       		.byte	0x1
 7575 0639 CC07     		.2byte	0x7cc
 7576 063b B6010000 		.4byte	0x1b6
 7577 063f 02       		.byte	0x2
 7578 0640 91       		.byte	0x91
 7579 0641 68       		.sleb128 -24
 7580 0642 12       		.uleb128 0x12
 7581 0643 67000000 		.4byte	.LASF54
 7582 0647 01       		.byte	0x1
 7583 0648 CC07     		.2byte	0x7cc
 7584 064a B6010000 		.4byte	0x1b6
 7585 064e 02       		.byte	0x2
 7586 064f 91       		.byte	0x91
 7587 0650 64       		.sleb128 -28
 7588 0651 12       		.uleb128 0x12
 7589 0652 09000000 		.4byte	.LASF55
 7590 0656 01       		.byte	0x1
 7591 0657 CC07     		.2byte	0x7cc
 7592 0659 B6010000 		.4byte	0x1b6
 7593 065d 02       		.byte	0x2
 7594 065e 91       		.byte	0x91
 7595 065f 60       		.sleb128 -32
 7596 0660 12       		.uleb128 0x12
 7597 0661 A2080000 		.4byte	.LASF56
 7598 0665 01       		.byte	0x1
 7599 0666 CC07     		.2byte	0x7cc
 7600 0668 B6010000 		.4byte	0x1b6
 7601 066c 02       		.byte	0x2
 7602 066d 91       		.byte	0x91
 7603 066e 00       		.sleb128 0
 7604 066f 12       		.uleb128 0x12
 7605 0670 F5010000 		.4byte	.LASF57
 7606 0674 01       		.byte	0x1
ARM GAS  /tmp/ccCNyPsy.s 			page 180


 7607 0675 CC07     		.2byte	0x7cc
 7608 0677 B6010000 		.4byte	0x1b6
 7609 067b 02       		.byte	0x2
 7610 067c 91       		.byte	0x91
 7611 067d 04       		.sleb128 4
 7612 067e 12       		.uleb128 0x12
 7613 067f 04030000 		.4byte	.LASF58
 7614 0683 01       		.byte	0x1
 7615 0684 CC07     		.2byte	0x7cc
 7616 0686 B6010000 		.4byte	0x1b6
 7617 068a 02       		.byte	0x2
 7618 068b 91       		.byte	0x91
 7619 068c 08       		.sleb128 8
 7620 068d 12       		.uleb128 0x12
 7621 068e F3000000 		.4byte	.LASF46
 7622 0692 01       		.byte	0x1
 7623 0693 CC07     		.2byte	0x7cc
 7624 0695 49000000 		.4byte	0x49
 7625 0699 02       		.byte	0x2
 7626 069a 91       		.byte	0x91
 7627 069b 0C       		.sleb128 12
 7628 069c 13       		.uleb128 0x13
 7629 069d 6900     		.ascii	"i\000"
 7630 069f 01       		.byte	0x1
 7631 06a0 CE07     		.2byte	0x7ce
 7632 06a2 29000000 		.4byte	0x29
 7633 06a6 02       		.byte	0x2
 7634 06a7 91       		.byte	0x91
 7635 06a8 77       		.sleb128 -9
 7636 06a9 00       		.byte	0
 7637 06aa 06       		.uleb128 0x6
 7638 06ab BC010000 		.4byte	0x1bc
 7639 06af BA060000 		.4byte	0x6ba
 7640 06b3 07       		.uleb128 0x7
 7641 06b4 9B000000 		.4byte	0x9b
 7642 06b8 FF       		.byte	0xff
 7643 06b9 00       		.byte	0
 7644 06ba 18       		.uleb128 0x18
 7645 06bb 2A020000 		.4byte	.LASF71
 7646 06bf 01       		.byte	0x1
 7647 06c0 0D       		.byte	0xd
 7648 06c1 CC060000 		.4byte	0x6cc
 7649 06c5 01       		.byte	0x1
 7650 06c6 05       		.byte	0x5
 7651 06c7 03       		.byte	0x3
 7652 06c8 00000000 		.4byte	buffUARTGSMrx
 7653 06cc 05       		.uleb128 0x5
 7654 06cd AA060000 		.4byte	0x6aa
 7655 06d1 18       		.uleb128 0x18
 7656 06d2 68040000 		.4byte	.LASF72
 7657 06d6 01       		.byte	0x1
 7658 06d7 0E       		.byte	0xe
 7659 06d8 E3060000 		.4byte	0x6e3
 7660 06dc 01       		.byte	0x1
 7661 06dd 05       		.byte	0x5
 7662 06de 03       		.byte	0x3
 7663 06df 00000000 		.4byte	buffUARTGSMrx2
ARM GAS  /tmp/ccCNyPsy.s 			page 181


 7664 06e3 05       		.uleb128 0x5
 7665 06e4 AA060000 		.4byte	0x6aa
 7666 06e8 18       		.uleb128 0x18
 7667 06e9 D4010000 		.4byte	.LASF73
 7668 06ed 01       		.byte	0x1
 7669 06ee 0F       		.byte	0xf
 7670 06ef FA060000 		.4byte	0x6fa
 7671 06f3 01       		.byte	0x1
 7672 06f4 05       		.byte	0x5
 7673 06f5 03       		.byte	0x3
 7674 06f6 00000000 		.4byte	pBuffUARTGSMrxW
 7675 06fa 0C       		.uleb128 0xc
 7676 06fb 04       		.byte	0x4
 7677 06fc 00070000 		.4byte	0x700
 7678 0700 05       		.uleb128 0x5
 7679 0701 BC010000 		.4byte	0x1bc
 7680 0705 18       		.uleb128 0x18
 7681 0706 C4010000 		.4byte	.LASF74
 7682 070a 01       		.byte	0x1
 7683 070b 10       		.byte	0x10
 7684 070c FA060000 		.4byte	0x6fa
 7685 0710 01       		.byte	0x1
 7686 0711 05       		.byte	0x5
 7687 0712 03       		.byte	0x3
 7688 0713 00000000 		.4byte	pBuffUARTGSMrxR
 7689 0717 18       		.uleb128 0x18
 7690 0718 11040000 		.4byte	.LASF75
 7691 071c 01       		.byte	0x1
 7692 071d 11       		.byte	0x11
 7693 071e 00070000 		.4byte	0x700
 7694 0722 01       		.byte	0x1
 7695 0723 05       		.byte	0x5
 7696 0724 03       		.byte	0x3
 7697 0725 00000000 		.4byte	counterUARTGSM
 7698 0729 18       		.uleb128 0x18
 7699 072a 98030000 		.4byte	.LASF76
 7700 072e 01       		.byte	0x1
 7701 072f 12       		.byte	0x12
 7702 0730 00070000 		.4byte	0x700
 7703 0734 01       		.byte	0x1
 7704 0735 05       		.byte	0x5
 7705 0736 03       		.byte	0x3
 7706 0737 00000000 		.4byte	PacketReadyUARTGSM
 7707 073b 18       		.uleb128 0x18
 7708 073c D0020000 		.4byte	.LASF77
 7709 0740 01       		.byte	0x1
 7710 0741 14       		.byte	0x14
 7711 0742 4D070000 		.4byte	0x74d
 7712 0746 01       		.byte	0x1
 7713 0747 05       		.byte	0x5
 7714 0748 03       		.byte	0x3
 7715 0749 00000000 		.4byte	buffUARTGSMtx
 7716 074d 05       		.uleb128 0x5
 7717 074e AA060000 		.4byte	0x6aa
 7718 0752 18       		.uleb128 0x18
 7719 0753 42000000 		.4byte	.LASF78
 7720 0757 01       		.byte	0x1
ARM GAS  /tmp/ccCNyPsy.s 			page 182


 7721 0758 15       		.byte	0x15
 7722 0759 FA060000 		.4byte	0x6fa
 7723 075d 01       		.byte	0x1
 7724 075e 05       		.byte	0x5
 7725 075f 03       		.byte	0x3
 7726 0760 00000000 		.4byte	pBuffUARTGSMtxR
 7727 0764 18       		.uleb128 0x18
 7728 0765 57000000 		.4byte	.LASF79
 7729 0769 01       		.byte	0x1
 7730 076a 16       		.byte	0x16
 7731 076b FA060000 		.4byte	0x6fa
 7732 076f 01       		.byte	0x1
 7733 0770 05       		.byte	0x5
 7734 0771 03       		.byte	0x3
 7735 0772 00000000 		.4byte	pBuffUARTGSMtxW
 7736 0776 18       		.uleb128 0x18
 7737 0777 EF030000 		.4byte	.LASF80
 7738 077b 01       		.byte	0x1
 7739 077c 19       		.byte	0x19
 7740 077d BC010000 		.4byte	0x1bc
 7741 0781 01       		.byte	0x1
 7742 0782 05       		.byte	0x5
 7743 0783 03       		.byte	0x3
 7744 0784 00000000 		.4byte	GSMStartState
 7745 0788 18       		.uleb128 0x18
 7746 0789 31080000 		.4byte	.LASF81
 7747 078d 01       		.byte	0x1
 7748 078e 1A       		.byte	0x1a
 7749 078f 9A070000 		.4byte	0x79a
 7750 0793 01       		.byte	0x1
 7751 0794 05       		.byte	0x5
 7752 0795 03       		.byte	0x3
 7753 0796 00000000 		.4byte	GSMStartTime
 7754 079a 05       		.uleb128 0x5
 7755 079b 49000000 		.4byte	0x49
 7756 079f 18       		.uleb128 0x18
 7757 07a0 31060000 		.4byte	.LASF82
 7758 07a4 01       		.byte	0x1
 7759 07a5 1D       		.byte	0x1d
 7760 07a6 BC010000 		.4byte	0x1bc
 7761 07aa 01       		.byte	0x1
 7762 07ab 05       		.byte	0x5
 7763 07ac 03       		.byte	0x3
 7764 07ad 00000000 		.4byte	GSMSendCommandState
 7765 07b1 18       		.uleb128 0x18
 7766 07b2 2E050000 		.4byte	.LASF83
 7767 07b6 01       		.byte	0x1
 7768 07b7 1E       		.byte	0x1e
 7769 07b8 BC010000 		.4byte	0x1bc
 7770 07bc 01       		.byte	0x1
 7771 07bd 05       		.byte	0x5
 7772 07be 03       		.byte	0x3
 7773 07bf 00000000 		.4byte	GSMSendCommandFlag
 7774 07c3 18       		.uleb128 0x18
 7775 07c4 DD000000 		.4byte	.LASF84
 7776 07c8 01       		.byte	0x1
 7777 07c9 1F       		.byte	0x1f
ARM GAS  /tmp/ccCNyPsy.s 			page 183


 7778 07ca 9A070000 		.4byte	0x79a
 7779 07ce 01       		.byte	0x1
 7780 07cf 05       		.byte	0x5
 7781 07d0 03       		.byte	0x3
 7782 07d1 00000000 		.4byte	GSMSendCommandTimeOut
 7783 07d5 18       		.uleb128 0x18
 7784 07d6 1E070000 		.4byte	.LASF85
 7785 07da 01       		.byte	0x1
 7786 07db 20       		.byte	0x20
 7787 07dc BC010000 		.4byte	0x1bc
 7788 07e0 01       		.byte	0x1
 7789 07e1 05       		.byte	0x5
 7790 07e2 03       		.byte	0x3
 7791 07e3 00000000 		.4byte	GSMSendCommandIntento
 7792 07e7 18       		.uleb128 0x18
 7793 07e8 67010000 		.4byte	.LASF86
 7794 07ec 01       		.byte	0x1
 7795 07ed 23       		.byte	0x23
 7796 07ee BC010000 		.4byte	0x1bc
 7797 07f2 01       		.byte	0x1
 7798 07f3 05       		.byte	0x5
 7799 07f4 03       		.byte	0x3
 7800 07f5 00000000 		.4byte	GSMSendSMSState
 7801 07f9 18       		.uleb128 0x18
 7802 07fa 19010000 		.4byte	.LASF87
 7803 07fe 01       		.byte	0x1
 7804 07ff 24       		.byte	0x24
 7805 0800 BC010000 		.4byte	0x1bc
 7806 0804 01       		.byte	0x1
 7807 0805 05       		.byte	0x5
 7808 0806 03       		.byte	0x3
 7809 0807 00000000 		.4byte	GSMSendSMSFlag
 7810 080b 18       		.uleb128 0x18
 7811 080c BE050000 		.4byte	.LASF88
 7812 0810 01       		.byte	0x1
 7813 0811 25       		.byte	0x25
 7814 0812 9A070000 		.4byte	0x79a
 7815 0816 01       		.byte	0x1
 7816 0817 05       		.byte	0x5
 7817 0818 03       		.byte	0x3
 7818 0819 00000000 		.4byte	GSMSendSMSTimeOut
 7819 081d 06       		.uleb128 0x6
 7820 081e BC010000 		.4byte	0x1bc
 7821 0822 2D080000 		.4byte	0x82d
 7822 0826 07       		.uleb128 0x7
 7823 0827 9B000000 		.4byte	0x9b
 7824 082b 1F       		.byte	0x1f
 7825 082c 00       		.byte	0
 7826 082d 18       		.uleb128 0x18
 7827 082e AB030000 		.4byte	.LASF89
 7828 0832 01       		.byte	0x1
 7829 0833 26       		.byte	0x26
 7830 0834 1D080000 		.4byte	0x81d
 7831 0838 01       		.byte	0x1
 7832 0839 05       		.byte	0x5
 7833 083a 03       		.byte	0x3
 7834 083b 00000000 		.4byte	GSMSendSMSbuffAux
ARM GAS  /tmp/ccCNyPsy.s 			page 184


 7835 083f 18       		.uleb128 0x18
 7836 0840 76030000 		.4byte	.LASF90
 7837 0844 01       		.byte	0x1
 7838 0845 29       		.byte	0x29
 7839 0846 BC010000 		.4byte	0x1bc
 7840 084a 01       		.byte	0x1
 7841 084b 05       		.byte	0x5
 7842 084c 03       		.byte	0x3
 7843 084d 00000000 		.4byte	GSMConfigState
 7844 0851 18       		.uleb128 0x18
 7845 0852 E5080000 		.4byte	.LASF91
 7846 0856 01       		.byte	0x1
 7847 0857 2A       		.byte	0x2a
 7848 0858 9A070000 		.4byte	0x79a
 7849 085c 01       		.byte	0x1
 7850 085d 05       		.byte	0x5
 7851 085e 03       		.byte	0x3
 7852 085f 00000000 		.4byte	GSMConfigTimeOut
 7853 0863 18       		.uleb128 0x18
 7854 0864 34070000 		.4byte	.LASF92
 7855 0868 01       		.byte	0x1
 7856 0869 2B       		.byte	0x2b
 7857 086a 9A070000 		.4byte	0x79a
 7858 086e 01       		.byte	0x1
 7859 086f 05       		.byte	0x5
 7860 0870 03       		.byte	0x3
 7861 0871 00000000 		.4byte	GSMConfigTime
 7862 0875 18       		.uleb128 0x18
 7863 0876 29030000 		.4byte	.LASF93
 7864 087a 01       		.byte	0x1
 7865 087b 2E       		.byte	0x2e
 7866 087c 49000000 		.4byte	0x49
 7867 0880 01       		.byte	0x1
 7868 0881 05       		.byte	0x5
 7869 0882 03       		.byte	0x3
 7870 0883 00000000 		.4byte	GSMConfigGPRSTimeOut
 7871 0887 18       		.uleb128 0x18
 7872 0888 8F080000 		.4byte	.LASF94
 7873 088c 01       		.byte	0x1
 7874 088d 2F       		.byte	0x2f
 7875 088e BC010000 		.4byte	0x1bc
 7876 0892 01       		.byte	0x1
 7877 0893 05       		.byte	0x5
 7878 0894 03       		.byte	0x3
 7879 0895 00000000 		.4byte	GSMConfigGPRSState
 7880 0899 18       		.uleb128 0x18
 7881 089a 65050000 		.4byte	.LASF95
 7882 089e 01       		.byte	0x1
 7883 089f 30       		.byte	0x30
 7884 08a0 BC010000 		.4byte	0x1bc
 7885 08a4 01       		.byte	0x1
 7886 08a5 05       		.byte	0x5
 7887 08a6 03       		.byte	0x3
 7888 08a7 00000000 		.4byte	GSMConfigGPRSflag
 7889 08ab 18       		.uleb128 0x18
 7890 08ac 8F040000 		.4byte	.LASF96
 7891 08b0 01       		.byte	0x1
ARM GAS  /tmp/ccCNyPsy.s 			page 185


 7892 08b1 31       		.byte	0x31
 7893 08b2 1D080000 		.4byte	0x81d
 7894 08b6 01       		.byte	0x1
 7895 08b7 05       		.byte	0x5
 7896 08b8 03       		.byte	0x3
 7897 08b9 00000000 		.4byte	GSMbuffStatus
 7898 08bd 06       		.uleb128 0x6
 7899 08be BC010000 		.4byte	0x1bc
 7900 08c2 CD080000 		.4byte	0x8cd
 7901 08c6 07       		.uleb128 0x7
 7902 08c7 9B000000 		.4byte	0x9b
 7903 08cb 3F       		.byte	0x3f
 7904 08cc 00       		.byte	0
 7905 08cd 18       		.uleb128 0x18
 7906 08ce 4E070000 		.4byte	.LASF97
 7907 08d2 01       		.byte	0x1
 7908 08d3 32       		.byte	0x32
 7909 08d4 BD080000 		.4byte	0x8bd
 7910 08d8 01       		.byte	0x1
 7911 08d9 05       		.byte	0x5
 7912 08da 03       		.byte	0x3
 7913 08db 00000000 		.4byte	GSMbuffGPRSCommand
 7914 08df 06       		.uleb128 0x6
 7915 08e0 BC010000 		.4byte	0x1bc
 7916 08e4 EF080000 		.4byte	0x8ef
 7917 08e8 07       		.uleb128 0x7
 7918 08e9 9B000000 		.4byte	0x9b
 7919 08ed 0F       		.byte	0xf
 7920 08ee 00       		.byte	0
 7921 08ef 18       		.uleb128 0x18
 7922 08f0 7A000000 		.4byte	.LASF98
 7923 08f4 01       		.byte	0x1
 7924 08f5 33       		.byte	0x33
 7925 08f6 DF080000 		.4byte	0x8df
 7926 08fa 01       		.byte	0x1
 7927 08fb 05       		.byte	0x5
 7928 08fc 03       		.byte	0x3
 7929 08fd 00000000 		.4byte	GSMIPadd
 7930 0901 18       		.uleb128 0x18
 7931 0902 37040000 		.4byte	.LASF99
 7932 0906 01       		.byte	0x1
 7933 0907 34       		.byte	0x34
 7934 0908 29000000 		.4byte	0x29
 7935 090c 01       		.byte	0x1
 7936 090d 05       		.byte	0x5
 7937 090e 03       		.byte	0x3
 7938 090f 00000000 		.4byte	GPRSrssi
 7939 0913 18       		.uleb128 0x18
 7940 0914 C9060000 		.4byte	.LASF100
 7941 0918 01       		.byte	0x1
 7942 0919 37       		.byte	0x37
 7943 091a BC010000 		.4byte	0x1bc
 7944 091e 01       		.byte	0x1
 7945 091f 05       		.byte	0x5
 7946 0920 03       		.byte	0x3
 7947 0921 00000000 		.4byte	GSMSendIPState
 7948 0925 18       		.uleb128 0x18
ARM GAS  /tmp/ccCNyPsy.s 			page 186


 7949 0926 41050000 		.4byte	.LASF101
 7950 092a 01       		.byte	0x1
 7951 092b 38       		.byte	0x38
 7952 092c BC010000 		.4byte	0x1bc
 7953 0930 01       		.byte	0x1
 7954 0931 05       		.byte	0x5
 7955 0932 03       		.byte	0x3
 7956 0933 00000000 		.4byte	GSMSendIPFlag
 7957 0937 18       		.uleb128 0x18
 7958 0938 E4020000 		.4byte	.LASF102
 7959 093c 01       		.byte	0x1
 7960 093d 39       		.byte	0x39
 7961 093e 9A070000 		.4byte	0x79a
 7962 0942 01       		.byte	0x1
 7963 0943 05       		.byte	0x5
 7964 0944 03       		.byte	0x3
 7965 0945 00000000 		.4byte	GSMSendIPTimeOut
 7966 0949 18       		.uleb128 0x18
 7967 094a 0D070000 		.4byte	.LASF103
 7968 094e 01       		.byte	0x1
 7969 094f 3A       		.byte	0x3a
 7970 0950 1D080000 		.4byte	0x81d
 7971 0954 01       		.byte	0x1
 7972 0955 05       		.byte	0x5
 7973 0956 03       		.byte	0x3
 7974 0957 00000000 		.4byte	GSMSendIPbuffAux
 7975 095b 18       		.uleb128 0x18
 7976 095c DF060000 		.4byte	.LASF104
 7977 0960 01       		.byte	0x1
 7978 0961 3C       		.byte	0x3c
 7979 0962 AA060000 		.4byte	0x6aa
 7980 0966 01       		.byte	0x1
 7981 0967 05       		.byte	0x5
 7982 0968 03       		.byte	0x3
 7983 0969 00000000 		.4byte	GSMbuffRtaCommand
 7984 096d 18       		.uleb128 0x18
 7985 096e 99020000 		.4byte	.LASF105
 7986 0972 01       		.byte	0x1
 7987 0973 3F       		.byte	0x3f
 7988 0974 BC010000 		.4byte	0x1bc
 7989 0978 01       		.byte	0x1
 7990 0979 05       		.byte	0x5
 7991 097a 03       		.byte	0x3
 7992 097b 00000000 		.4byte	DB300flagConnGPRS
 7993 097f 06       		.uleb128 0x6
 7994 0980 BC010000 		.4byte	0x1bc
 7995 0984 8F090000 		.4byte	0x98f
 7996 0988 07       		.uleb128 0x7
 7997 0989 9B000000 		.4byte	0x9b
 7998 098d 02       		.byte	0x2
 7999 098e 00       		.byte	0
 8000 098f 18       		.uleb128 0x18
 8001 0990 88080000 		.4byte	.LASF106
 8002 0994 01       		.byte	0x1
 8003 0995 41       		.byte	0x41
 8004 0996 A1090000 		.4byte	0x9a1
 8005 099a 01       		.byte	0x1
ARM GAS  /tmp/ccCNyPsy.s 			page 187


 8006 099b 05       		.byte	0x5
 8007 099c 03       		.byte	0x3
 8008 099d 00000000 		.4byte	GSM_OK
 8009 09a1 0D       		.uleb128 0xd
 8010 09a2 7F090000 		.4byte	0x97f
 8011 09a6 06       		.uleb128 0x6
 8012 09a7 BC010000 		.4byte	0x1bc
 8013 09ab B6090000 		.4byte	0x9b6
 8014 09af 07       		.uleb128 0x7
 8015 09b0 9B000000 		.4byte	0x9b
 8016 09b4 05       		.byte	0x5
 8017 09b5 00       		.byte	0
 8018 09b6 18       		.uleb128 0x18
 8019 09b7 08010000 		.4byte	.LASF107
 8020 09bb 01       		.byte	0x1
 8021 09bc 42       		.byte	0x42
 8022 09bd C8090000 		.4byte	0x9c8
 8023 09c1 01       		.byte	0x1
 8024 09c2 05       		.byte	0x5
 8025 09c3 03       		.byte	0x3
 8026 09c4 00000000 		.4byte	GSM_ERR
 8027 09c8 0D       		.uleb128 0xd
 8028 09c9 A6090000 		.4byte	0x9a6
 8029 09cd 18       		.uleb128 0x18
 8030 09ce 48030000 		.4byte	.LASF108
 8031 09d2 01       		.byte	0x1
 8032 09d3 44       		.byte	0x44
 8033 09d4 C3010000 		.4byte	0x1c3
 8034 09d8 01       		.byte	0x1
 8035 09d9 05       		.byte	0x5
 8036 09da 03       		.byte	0x3
 8037 09db 00000000 		.4byte	GSM_RTA
 8038 09df 06       		.uleb128 0x6
 8039 09e0 BC010000 		.4byte	0x1bc
 8040 09e4 EF090000 		.4byte	0x9ef
 8041 09e8 07       		.uleb128 0x7
 8042 09e9 9B000000 		.4byte	0x9b
 8043 09ed 06       		.byte	0x6
 8044 09ee 00       		.byte	0
 8045 09ef 18       		.uleb128 0x18
 8046 09f0 00000000 		.4byte	.LASF109
 8047 09f4 01       		.byte	0x1
 8048 09f5 46       		.byte	0x46
 8049 09f6 010A0000 		.4byte	0xa01
 8050 09fa 01       		.byte	0x1
 8051 09fb 05       		.byte	0x5
 8052 09fc 03       		.byte	0x3
 8053 09fd 00000000 		.4byte	GSM_CMGF
 8054 0a01 0D       		.uleb128 0xd
 8055 0a02 DF090000 		.4byte	0x9df
 8056 0a06 18       		.uleb128 0x18
 8057 0a07 BD060000 		.4byte	.LASF110
 8058 0a0b 01       		.byte	0x1
 8059 0a0c 47       		.byte	0x47
 8060 0a0d 180A0000 		.4byte	0xa18
 8061 0a11 01       		.byte	0x1
 8062 0a12 05       		.byte	0x5
ARM GAS  /tmp/ccCNyPsy.s 			page 188


 8063 0a13 03       		.byte	0x3
 8064 0a14 00000000 		.4byte	GSM_IPSTATE
 8065 0a18 0D       		.uleb128 0xd
 8066 0a19 DF090000 		.4byte	0x9df
 8067 0a1d 06       		.uleb128 0x6
 8068 0a1e BC010000 		.4byte	0x1bc
 8069 0a22 2D0A0000 		.4byte	0xa2d
 8070 0a26 07       		.uleb128 0x7
 8071 0a27 9B000000 		.4byte	0x9b
 8072 0a2b 0A       		.byte	0xa
 8073 0a2c 00       		.byte	0
 8074 0a2d 18       		.uleb128 0x18
 8075 0a2e A7000000 		.4byte	.LASF111
 8076 0a32 01       		.byte	0x1
 8077 0a33 4A       		.byte	0x4a
 8078 0a34 3F0A0000 		.4byte	0xa3f
 8079 0a38 01       		.byte	0x1
 8080 0a39 05       		.byte	0x5
 8081 0a3a 03       		.byte	0x3
 8082 0a3b 00000000 		.4byte	GSM_IPINITIAL
 8083 0a3f 0D       		.uleb128 0xd
 8084 0a40 1D0A0000 		.4byte	0xa1d
 8085 0a44 06       		.uleb128 0x6
 8086 0a45 BC010000 		.4byte	0x1bc
 8087 0a49 540A0000 		.4byte	0xa54
 8088 0a4d 07       		.uleb128 0x7
 8089 0a4e 9B000000 		.4byte	0x9b
 8090 0a52 08       		.byte	0x8
 8091 0a53 00       		.byte	0
 8092 0a54 18       		.uleb128 0x18
 8093 0a55 B2050000 		.4byte	.LASF112
 8094 0a59 01       		.byte	0x1
 8095 0a5a 4B       		.byte	0x4b
 8096 0a5b 660A0000 		.4byte	0xa66
 8097 0a5f 01       		.byte	0x1
 8098 0a60 05       		.byte	0x5
 8099 0a61 03       		.byte	0x3
 8100 0a62 00000000 		.4byte	GSM_IPSTART
 8101 0a66 0D       		.uleb128 0xd
 8102 0a67 440A0000 		.4byte	0xa44
 8103 0a6b 18       		.uleb128 0x18
 8104 0a6c 5F030000 		.4byte	.LASF113
 8105 0a70 01       		.byte	0x1
 8106 0a71 4C       		.byte	0x4c
 8107 0a72 7D0A0000 		.4byte	0xa7d
 8108 0a76 01       		.byte	0x1
 8109 0a77 05       		.byte	0x5
 8110 0a78 03       		.byte	0x3
 8111 0a79 00000000 		.4byte	GSM_IPGPRSACT
 8112 0a7d 0D       		.uleb128 0xd
 8113 0a7e 1D0A0000 		.4byte	0xa1d
 8114 0a82 06       		.uleb128 0x6
 8115 0a83 BC010000 		.4byte	0x1bc
 8116 0a87 920A0000 		.4byte	0xa92
 8117 0a8b 07       		.uleb128 0x7
 8118 0a8c 9B000000 		.4byte	0x9b
 8119 0a90 09       		.byte	0x9
ARM GAS  /tmp/ccCNyPsy.s 			page 189


 8120 0a91 00       		.byte	0
 8121 0a92 18       		.uleb128 0x18
 8122 0a93 FB000000 		.4byte	.LASF114
 8123 0a97 01       		.byte	0x1
 8124 0a98 4D       		.byte	0x4d
 8125 0a99 A40A0000 		.4byte	0xaa4
 8126 0a9d 01       		.byte	0x1
 8127 0a9e 05       		.byte	0x5
 8128 0a9f 03       		.byte	0x3
 8129 0aa0 00000000 		.4byte	GSM_IPSTATUS
 8130 0aa4 0D       		.uleb128 0xd
 8131 0aa5 820A0000 		.4byte	0xa82
 8132 0aa9 06       		.uleb128 0x6
 8133 0aaa BC010000 		.4byte	0x1bc
 8134 0aae B90A0000 		.4byte	0xab9
 8135 0ab2 07       		.uleb128 0x7
 8136 0ab3 9B000000 		.4byte	0x9b
 8137 0ab7 0E       		.byte	0xe
 8138 0ab8 00       		.byte	0
 8139 0ab9 18       		.uleb128 0x18
 8140 0aba 98060000 		.4byte	.LASF115
 8141 0abe 01       		.byte	0x1
 8142 0abf 4E       		.byte	0x4e
 8143 0ac0 CB0A0000 		.4byte	0xacb
 8144 0ac4 01       		.byte	0x1
 8145 0ac5 05       		.byte	0x5
 8146 0ac6 03       		.byte	0x3
 8147 0ac7 00000000 		.4byte	GSM_IPCONNECTING
 8148 0acb 0D       		.uleb128 0xd
 8149 0acc A90A0000 		.4byte	0xaa9
 8150 0ad0 18       		.uleb128 0x18
 8151 0ad1 00050000 		.4byte	.LASF116
 8152 0ad5 01       		.byte	0x1
 8153 0ad6 4F       		.byte	0x4f
 8154 0ad7 E20A0000 		.4byte	0xae2
 8155 0adb 01       		.byte	0x1
 8156 0adc 05       		.byte	0x5
 8157 0add 03       		.byte	0x3
 8158 0ade 00000000 		.4byte	GSM_IPCONNOK
 8159 0ae2 0D       		.uleb128 0xd
 8160 0ae3 1D0A0000 		.4byte	0xa1d
 8161 0ae7 06       		.uleb128 0x6
 8162 0ae8 BC010000 		.4byte	0x1bc
 8163 0aec F70A0000 		.4byte	0xaf7
 8164 0af0 07       		.uleb128 0x7
 8165 0af1 9B000000 		.4byte	0x9b
 8166 0af5 0C       		.byte	0xc
 8167 0af6 00       		.byte	0
 8168 0af7 18       		.uleb128 0x18
 8169 0af8 F5020000 		.4byte	.LASF117
 8170 0afc 01       		.byte	0x1
 8171 0afd 50       		.byte	0x50
 8172 0afe 090B0000 		.4byte	0xb09
 8173 0b02 01       		.byte	0x1
 8174 0b03 05       		.byte	0x5
 8175 0b04 03       		.byte	0x3
 8176 0b05 00000000 		.4byte	GSM_IPCONNFAIL
ARM GAS  /tmp/ccCNyPsy.s 			page 190


 8177 0b09 0D       		.uleb128 0xd
 8178 0b0a E70A0000 		.4byte	0xae7
 8179 0b0e 18       		.uleb128 0x18
 8180 0b0f 10000000 		.4byte	.LASF118
 8181 0b13 01       		.byte	0x1
 8182 0b14 51       		.byte	0x51
 8183 0b15 200B0000 		.4byte	0xb20
 8184 0b19 01       		.byte	0x1
 8185 0b1a 05       		.byte	0x5
 8186 0b1b 03       		.byte	0x3
 8187 0b1c 00000000 		.4byte	GSM_IPCONNCLOSE
 8188 0b20 0D       		.uleb128 0xd
 8189 0b21 1D0A0000 		.4byte	0xa1d
 8190 0b25 06       		.uleb128 0x6
 8191 0b26 BC010000 		.4byte	0x1bc
 8192 0b2a 350B0000 		.4byte	0xb35
 8193 0b2e 07       		.uleb128 0x7
 8194 0b2f 9B000000 		.4byte	0x9b
 8195 0b33 04       		.byte	0x4
 8196 0b34 00       		.byte	0
 8197 0b35 18       		.uleb128 0x18
 8198 0b36 20000000 		.4byte	.LASF119
 8199 0b3a 01       		.byte	0x1
 8200 0b3b 53       		.byte	0x53
 8201 0b3c 470B0000 		.4byte	0xb47
 8202 0b40 01       		.byte	0x1
 8203 0b41 05       		.byte	0x5
 8204 0b42 03       		.byte	0x3
 8205 0b43 00000000 		.4byte	GSM_SIM1
 8206 0b47 0D       		.uleb128 0xd
 8207 0b48 250B0000 		.4byte	0xb25
 8208 0b4c 18       		.uleb128 0x18
 8209 0b4d 29000000 		.4byte	.LASF120
 8210 0b51 01       		.byte	0x1
 8211 0b52 54       		.byte	0x54
 8212 0b53 5E0B0000 		.4byte	0xb5e
 8213 0b57 01       		.byte	0x1
 8214 0b58 05       		.byte	0x5
 8215 0b59 03       		.byte	0x3
 8216 0b5a 00000000 		.4byte	GSM_SIM2
 8217 0b5e 0D       		.uleb128 0xd
 8218 0b5f 250B0000 		.4byte	0xb25
 8219 0b63 18       		.uleb128 0x18
 8220 0b64 AB020000 		.4byte	.LASF121
 8221 0b68 01       		.byte	0x1
 8222 0b69 56       		.byte	0x56
 8223 0b6a 750B0000 		.4byte	0xb75
 8224 0b6e 01       		.byte	0x1
 8225 0b6f 05       		.byte	0x5
 8226 0b70 03       		.byte	0x3
 8227 0b71 00000000 		.4byte	GSM_SENDOK
 8228 0b75 0D       		.uleb128 0xd
 8229 0b76 440A0000 		.4byte	0xa44
 8230 0b7a 18       		.uleb128 0x18
 8231 0b7b 61070000 		.4byte	.LASF122
 8232 0b7f 01       		.byte	0x1
 8233 0b80 57       		.byte	0x57
ARM GAS  /tmp/ccCNyPsy.s 			page 191


 8234 0b81 29000000 		.4byte	0x29
 8235 0b85 01       		.byte	0x1
 8236 0b86 05       		.byte	0x5
 8237 0b87 03       		.byte	0x3
 8238 0b88 00000000 		.4byte	prestadorSimState
 8239 0b8c 18       		.uleb128 0x18
 8240 0b8d CC000000 		.4byte	.LASF123
 8241 0b91 01       		.byte	0x1
 8242 0b92 58       		.byte	0x58
 8243 0b93 29000000 		.4byte	0x29
 8244 0b97 01       		.byte	0x1
 8245 0b98 05       		.byte	0x5
 8246 0b99 03       		.byte	0x3
 8247 0b9a 00000000 		.4byte	prestadorSimTime
 8248 0b9e 18       		.uleb128 0x18
 8249 0b9f 40040000 		.4byte	.LASF124
 8250 0ba3 01       		.byte	0x1
 8251 0ba4 5C       		.byte	0x5c
 8252 0ba5 29000000 		.4byte	0x29
 8253 0ba9 01       		.byte	0x1
 8254 0baa 05       		.byte	0x5
 8255 0bab 03       		.byte	0x3
 8256 0bac 00000000 		.4byte	GSMCantSMS
 8257 0bb0 18       		.uleb128 0x18
 8258 0bb1 55060000 		.4byte	.LASF125
 8259 0bb5 01       		.byte	0x1
 8260 0bb6 5D       		.byte	0x5d
 8261 0bb7 29000000 		.4byte	0x29
 8262 0bbb 01       		.byte	0x1
 8263 0bbc 05       		.byte	0x5
 8264 0bbd 03       		.byte	0x3
 8265 0bbe 00000000 		.4byte	GSMCantSMS2
 8266 0bc2 18       		.uleb128 0x18
 8267 0bc3 A9010000 		.4byte	.LASF126
 8268 0bc7 01       		.byte	0x1
 8269 0bc8 5E       		.byte	0x5e
 8270 0bc9 29000000 		.4byte	0x29
 8271 0bcd 01       		.byte	0x1
 8272 0bce 05       		.byte	0x5
 8273 0bcf 03       		.byte	0x3
 8274 0bd0 00000000 		.4byte	GSMnumSMS
 8275 0bd4 18       		.uleb128 0x18
 8276 0bd5 45060000 		.4byte	.LASF127
 8277 0bd9 01       		.byte	0x1
 8278 0bda 5F       		.byte	0x5f
 8279 0bdb BC010000 		.4byte	0x1bc
 8280 0bdf 01       		.byte	0x1
 8281 0be0 05       		.byte	0x5
 8282 0be1 03       		.byte	0x3
 8283 0be2 00000000 		.4byte	GSMReadSMSState
 8284 0be6 18       		.uleb128 0x18
 8285 0be7 EE040000 		.4byte	.LASF128
 8286 0beb 01       		.byte	0x1
 8287 0bec 60       		.byte	0x60
 8288 0bed 1D080000 		.4byte	0x81d
 8289 0bf1 01       		.byte	0x1
 8290 0bf2 05       		.byte	0x5
ARM GAS  /tmp/ccCNyPsy.s 			page 192


 8291 0bf3 03       		.byte	0x3
 8292 0bf4 00000000 		.4byte	GSMReadSMScommand
 8293 0bf8 18       		.uleb128 0x18
 8294 0bf9 BD030000 		.4byte	.LASF129
 8295 0bfd 01       		.byte	0x1
 8296 0bfe 61       		.byte	0x61
 8297 0bff 1D080000 		.4byte	0x81d
 8298 0c03 01       		.byte	0x1
 8299 0c04 05       		.byte	0x5
 8300 0c05 03       		.byte	0x3
 8301 0c06 00000000 		.4byte	GSMReadSMSrepIn
 8302 0c0a 18       		.uleb128 0x18
 8303 0c0b 7F020000 		.4byte	.LASF130
 8304 0c0f 01       		.byte	0x1
 8305 0c10 62       		.byte	0x62
 8306 0c11 29000000 		.4byte	0x29
 8307 0c15 01       		.byte	0x1
 8308 0c16 05       		.byte	0x5
 8309 0c17 03       		.byte	0x3
 8310 0c18 00000000 		.4byte	GSMrxSMSState
 8311 0c1c 18       		.uleb128 0x18
 8312 0c1d 6C020000 		.4byte	.LASF131
 8313 0c21 01       		.byte	0x1
 8314 0c22 63       		.byte	0x63
 8315 0c23 29000000 		.4byte	0x29
 8316 0c27 01       		.byte	0x1
 8317 0c28 05       		.byte	0x5
 8318 0c29 03       		.byte	0x3
 8319 0c2a 00000000 		.4byte	prestadorSimSelect
 8320 0c2e 18       		.uleb128 0x18
 8321 0c2f 8D020000 		.4byte	.LASF132
 8322 0c33 01       		.byte	0x1
 8323 0c34 64       		.byte	0x64
 8324 0c35 29000000 		.4byte	0x29
 8325 0c39 01       		.byte	0x1
 8326 0c3a 05       		.byte	0x5
 8327 0c3b 03       		.byte	0x3
 8328 0c3c 00000000 		.4byte	flagCloseIP
 8329 0c40 19       		.uleb128 0x19
 8330 0c41 C4080000 		.4byte	.LASF133
 8331 0c45 01       		.byte	0x1
 8332 0c46 67       		.byte	0x67
 8333 0c47 BD080000 		.4byte	0x8bd
 8334 0c4b 01       		.byte	0x1
 8335 0c4c 01       		.byte	0x1
 8336 0c4d 06       		.uleb128 0x6
 8337 0c4e BC010000 		.4byte	0x1bc
 8338 0c52 5D0C0000 		.4byte	0xc5d
 8339 0c56 07       		.uleb128 0x7
 8340 0c57 9B000000 		.4byte	0x9b
 8341 0c5b 13       		.byte	0x13
 8342 0c5c 00       		.byte	0
 8343 0c5d 19       		.uleb128 0x19
 8344 0c5e 83000000 		.4byte	.LASF134
 8345 0c62 01       		.byte	0x1
 8346 0c63 68       		.byte	0x68
 8347 0c64 4D0C0000 		.4byte	0xc4d
ARM GAS  /tmp/ccCNyPsy.s 			page 193


 8348 0c68 01       		.byte	0x1
 8349 0c69 01       		.byte	0x1
 8350 0c6a 19       		.uleb128 0x19
 8351 0c6b 78080000 		.4byte	.LASF135
 8352 0c6f 01       		.byte	0x1
 8353 0c70 69       		.byte	0x69
 8354 0c71 4D0C0000 		.4byte	0xc4d
 8355 0c75 01       		.byte	0x1
 8356 0c76 01       		.byte	0x1
 8357 0c77 19       		.uleb128 0x19
 8358 0c78 D2080000 		.4byte	.LASF136
 8359 0c7c 01       		.byte	0x1
 8360 0c7d 6B       		.byte	0x6b
 8361 0c7e BD080000 		.4byte	0x8bd
 8362 0c82 01       		.byte	0x1
 8363 0c83 01       		.byte	0x1
 8364 0c84 19       		.uleb128 0x19
 8365 0c85 95000000 		.4byte	.LASF137
 8366 0c89 01       		.byte	0x1
 8367 0c8a 6C       		.byte	0x6c
 8368 0c8b 4D0C0000 		.4byte	0xc4d
 8369 0c8f 01       		.byte	0x1
 8370 0c90 01       		.byte	0x1
 8371 0c91 19       		.uleb128 0x19
 8372 0c92 32000000 		.4byte	.LASF138
 8373 0c96 01       		.byte	0x1
 8374 0c97 6D       		.byte	0x6d
 8375 0c98 4D0C0000 		.4byte	0xc4d
 8376 0c9c 01       		.byte	0x1
 8377 0c9d 01       		.byte	0x1
 8378 0c9e 19       		.uleb128 0x19
 8379 0c9f 50030000 		.4byte	.LASF139
 8380 0ca3 01       		.byte	0x1
 8381 0ca4 6E       		.byte	0x6e
 8382 0ca5 4D0C0000 		.4byte	0xc4d
 8383 0ca9 01       		.byte	0x1
 8384 0caa 01       		.byte	0x1
 8385 0cab 19       		.uleb128 0x19
 8386 0cac E4010000 		.4byte	.LASF140
 8387 0cb0 01       		.byte	0x1
 8388 0cb1 6F       		.byte	0x6f
 8389 0cb2 4D0C0000 		.4byte	0xc4d
 8390 0cb6 01       		.byte	0x1
 8391 0cb7 01       		.byte	0x1
 8392 0cb8 19       		.uleb128 0x19
 8393 0cb9 DB030000 		.4byte	.LASF141
 8394 0cbd 01       		.byte	0x1
 8395 0cbe 72       		.byte	0x72
 8396 0cbf C50C0000 		.4byte	0xcc5
 8397 0cc3 01       		.byte	0x1
 8398 0cc4 01       		.byte	0x1
 8399 0cc5 05       		.uleb128 0x5
 8400 0cc6 29000000 		.4byte	0x29
 8401 0cca 19       		.uleb128 0x19
 8402 0ccb 17030000 		.4byte	.LASF142
 8403 0ccf 01       		.byte	0x1
 8404 0cd0 73       		.byte	0x73
ARM GAS  /tmp/ccCNyPsy.s 			page 194


 8405 0cd1 C50C0000 		.4byte	0xcc5
 8406 0cd5 01       		.byte	0x1
 8407 0cd6 01       		.byte	0x1
 8408 0cd7 19       		.uleb128 0x19
 8409 0cd8 BF020000 		.4byte	.LASF143
 8410 0cdc 01       		.byte	0x1
 8411 0cdd 74       		.byte	0x74
 8412 0cde C50C0000 		.4byte	0xcc5
 8413 0ce2 01       		.byte	0x1
 8414 0ce3 01       		.byte	0x1
 8415 0ce4 19       		.uleb128 0x19
 8416 0ce5 49020000 		.4byte	.LASF144
 8417 0ce9 01       		.byte	0x1
 8418 0cea 75       		.byte	0x75
 8419 0ceb 29000000 		.4byte	0x29
 8420 0cef 01       		.byte	0x1
 8421 0cf0 01       		.byte	0x1
 8422 0cf1 00       		.byte	0
 8423              		.section	.debug_abbrev,"",%progbits
 8424              	.Ldebug_abbrev0:
 8425 0000 01       		.uleb128 0x1
 8426 0001 11       		.uleb128 0x11
 8427 0002 01       		.byte	0x1
 8428 0003 25       		.uleb128 0x25
 8429 0004 0E       		.uleb128 0xe
 8430 0005 13       		.uleb128 0x13
 8431 0006 0B       		.uleb128 0xb
 8432 0007 03       		.uleb128 0x3
 8433 0008 0E       		.uleb128 0xe
 8434 0009 1B       		.uleb128 0x1b
 8435 000a 0E       		.uleb128 0xe
 8436 000b 55       		.uleb128 0x55
 8437 000c 06       		.uleb128 0x6
 8438 000d 11       		.uleb128 0x11
 8439 000e 01       		.uleb128 0x1
 8440 000f 52       		.uleb128 0x52
 8441 0010 01       		.uleb128 0x1
 8442 0011 10       		.uleb128 0x10
 8443 0012 06       		.uleb128 0x6
 8444 0013 00       		.byte	0
 8445 0014 00       		.byte	0
 8446 0015 02       		.uleb128 0x2
 8447 0016 24       		.uleb128 0x24
 8448 0017 00       		.byte	0
 8449 0018 0B       		.uleb128 0xb
 8450 0019 0B       		.uleb128 0xb
 8451 001a 3E       		.uleb128 0x3e
 8452 001b 0B       		.uleb128 0xb
 8453 001c 03       		.uleb128 0x3
 8454 001d 0E       		.uleb128 0xe
 8455 001e 00       		.byte	0
 8456 001f 00       		.byte	0
 8457 0020 03       		.uleb128 0x3
 8458 0021 16       		.uleb128 0x16
 8459 0022 00       		.byte	0
 8460 0023 03       		.uleb128 0x3
 8461 0024 0E       		.uleb128 0xe
ARM GAS  /tmp/ccCNyPsy.s 			page 195


 8462 0025 3A       		.uleb128 0x3a
 8463 0026 0B       		.uleb128 0xb
 8464 0027 3B       		.uleb128 0x3b
 8465 0028 0B       		.uleb128 0xb
 8466 0029 49       		.uleb128 0x49
 8467 002a 13       		.uleb128 0x13
 8468 002b 00       		.byte	0
 8469 002c 00       		.byte	0
 8470 002d 04       		.uleb128 0x4
 8471 002e 24       		.uleb128 0x24
 8472 002f 00       		.byte	0
 8473 0030 0B       		.uleb128 0xb
 8474 0031 0B       		.uleb128 0xb
 8475 0032 3E       		.uleb128 0x3e
 8476 0033 0B       		.uleb128 0xb
 8477 0034 03       		.uleb128 0x3
 8478 0035 08       		.uleb128 0x8
 8479 0036 00       		.byte	0
 8480 0037 00       		.byte	0
 8481 0038 05       		.uleb128 0x5
 8482 0039 35       		.uleb128 0x35
 8483 003a 00       		.byte	0
 8484 003b 49       		.uleb128 0x49
 8485 003c 13       		.uleb128 0x13
 8486 003d 00       		.byte	0
 8487 003e 00       		.byte	0
 8488 003f 06       		.uleb128 0x6
 8489 0040 01       		.uleb128 0x1
 8490 0041 01       		.byte	0x1
 8491 0042 49       		.uleb128 0x49
 8492 0043 13       		.uleb128 0x13
 8493 0044 01       		.uleb128 0x1
 8494 0045 13       		.uleb128 0x13
 8495 0046 00       		.byte	0
 8496 0047 00       		.byte	0
 8497 0048 07       		.uleb128 0x7
 8498 0049 21       		.uleb128 0x21
 8499 004a 00       		.byte	0
 8500 004b 49       		.uleb128 0x49
 8501 004c 13       		.uleb128 0x13
 8502 004d 2F       		.uleb128 0x2f
 8503 004e 0B       		.uleb128 0xb
 8504 004f 00       		.byte	0
 8505 0050 00       		.byte	0
 8506 0051 08       		.uleb128 0x8
 8507 0052 13       		.uleb128 0x13
 8508 0053 01       		.byte	0x1
 8509 0054 0B       		.uleb128 0xb
 8510 0055 0B       		.uleb128 0xb
 8511 0056 3A       		.uleb128 0x3a
 8512 0057 0B       		.uleb128 0xb
 8513 0058 3B       		.uleb128 0x3b
 8514 0059 05       		.uleb128 0x5
 8515 005a 01       		.uleb128 0x1
 8516 005b 13       		.uleb128 0x13
 8517 005c 00       		.byte	0
 8518 005d 00       		.byte	0
ARM GAS  /tmp/ccCNyPsy.s 			page 196


 8519 005e 09       		.uleb128 0x9
 8520 005f 0D       		.uleb128 0xd
 8521 0060 00       		.byte	0
 8522 0061 03       		.uleb128 0x3
 8523 0062 0E       		.uleb128 0xe
 8524 0063 3A       		.uleb128 0x3a
 8525 0064 0B       		.uleb128 0xb
 8526 0065 3B       		.uleb128 0x3b
 8527 0066 05       		.uleb128 0x5
 8528 0067 49       		.uleb128 0x49
 8529 0068 13       		.uleb128 0x13
 8530 0069 38       		.uleb128 0x38
 8531 006a 0A       		.uleb128 0xa
 8532 006b 00       		.byte	0
 8533 006c 00       		.byte	0
 8534 006d 0A       		.uleb128 0xa
 8535 006e 0D       		.uleb128 0xd
 8536 006f 00       		.byte	0
 8537 0070 03       		.uleb128 0x3
 8538 0071 08       		.uleb128 0x8
 8539 0072 3A       		.uleb128 0x3a
 8540 0073 0B       		.uleb128 0xb
 8541 0074 3B       		.uleb128 0x3b
 8542 0075 05       		.uleb128 0x5
 8543 0076 49       		.uleb128 0x49
 8544 0077 13       		.uleb128 0x13
 8545 0078 38       		.uleb128 0x38
 8546 0079 0A       		.uleb128 0xa
 8547 007a 00       		.byte	0
 8548 007b 00       		.byte	0
 8549 007c 0B       		.uleb128 0xb
 8550 007d 16       		.uleb128 0x16
 8551 007e 00       		.byte	0
 8552 007f 03       		.uleb128 0x3
 8553 0080 0E       		.uleb128 0xe
 8554 0081 3A       		.uleb128 0x3a
 8555 0082 0B       		.uleb128 0xb
 8556 0083 3B       		.uleb128 0x3b
 8557 0084 05       		.uleb128 0x5
 8558 0085 49       		.uleb128 0x49
 8559 0086 13       		.uleb128 0x13
 8560 0087 00       		.byte	0
 8561 0088 00       		.byte	0
 8562 0089 0C       		.uleb128 0xc
 8563 008a 0F       		.uleb128 0xf
 8564 008b 00       		.byte	0
 8565 008c 0B       		.uleb128 0xb
 8566 008d 0B       		.uleb128 0xb
 8567 008e 49       		.uleb128 0x49
 8568 008f 13       		.uleb128 0x13
 8569 0090 00       		.byte	0
 8570 0091 00       		.byte	0
 8571 0092 0D       		.uleb128 0xd
 8572 0093 26       		.uleb128 0x26
 8573 0094 00       		.byte	0
 8574 0095 49       		.uleb128 0x49
 8575 0096 13       		.uleb128 0x13
ARM GAS  /tmp/ccCNyPsy.s 			page 197


 8576 0097 00       		.byte	0
 8577 0098 00       		.byte	0
 8578 0099 0E       		.uleb128 0xe
 8579 009a 2E       		.uleb128 0x2e
 8580 009b 00       		.byte	0
 8581 009c 3F       		.uleb128 0x3f
 8582 009d 0C       		.uleb128 0xc
 8583 009e 03       		.uleb128 0x3
 8584 009f 0E       		.uleb128 0xe
 8585 00a0 3A       		.uleb128 0x3a
 8586 00a1 0B       		.uleb128 0xb
 8587 00a2 3B       		.uleb128 0x3b
 8588 00a3 0B       		.uleb128 0xb
 8589 00a4 27       		.uleb128 0x27
 8590 00a5 0C       		.uleb128 0xc
 8591 00a6 11       		.uleb128 0x11
 8592 00a7 01       		.uleb128 0x1
 8593 00a8 12       		.uleb128 0x12
 8594 00a9 01       		.uleb128 0x1
 8595 00aa 40       		.uleb128 0x40
 8596 00ab 06       		.uleb128 0x6
 8597 00ac 9642     		.uleb128 0x2116
 8598 00ae 0C       		.uleb128 0xc
 8599 00af 00       		.byte	0
 8600 00b0 00       		.byte	0
 8601 00b1 0F       		.uleb128 0xf
 8602 00b2 2E       		.uleb128 0x2e
 8603 00b3 00       		.byte	0
 8604 00b4 3F       		.uleb128 0x3f
 8605 00b5 0C       		.uleb128 0xc
 8606 00b6 03       		.uleb128 0x3
 8607 00b7 0E       		.uleb128 0xe
 8608 00b8 3A       		.uleb128 0x3a
 8609 00b9 0B       		.uleb128 0xb
 8610 00ba 3B       		.uleb128 0x3b
 8611 00bb 05       		.uleb128 0x5
 8612 00bc 27       		.uleb128 0x27
 8613 00bd 0C       		.uleb128 0xc
 8614 00be 49       		.uleb128 0x49
 8615 00bf 13       		.uleb128 0x13
 8616 00c0 11       		.uleb128 0x11
 8617 00c1 01       		.uleb128 0x1
 8618 00c2 12       		.uleb128 0x12
 8619 00c3 01       		.uleb128 0x1
 8620 00c4 40       		.uleb128 0x40
 8621 00c5 0A       		.uleb128 0xa
 8622 00c6 9742     		.uleb128 0x2117
 8623 00c8 0C       		.uleb128 0xc
 8624 00c9 00       		.byte	0
 8625 00ca 00       		.byte	0
 8626 00cb 10       		.uleb128 0x10
 8627 00cc 2E       		.uleb128 0x2e
 8628 00cd 00       		.byte	0
 8629 00ce 3F       		.uleb128 0x3f
 8630 00cf 0C       		.uleb128 0xc
 8631 00d0 03       		.uleb128 0x3
 8632 00d1 0E       		.uleb128 0xe
ARM GAS  /tmp/ccCNyPsy.s 			page 198


 8633 00d2 3A       		.uleb128 0x3a
 8634 00d3 0B       		.uleb128 0xb
 8635 00d4 3B       		.uleb128 0x3b
 8636 00d5 05       		.uleb128 0x5
 8637 00d6 27       		.uleb128 0x27
 8638 00d7 0C       		.uleb128 0xc
 8639 00d8 11       		.uleb128 0x11
 8640 00d9 01       		.uleb128 0x1
 8641 00da 12       		.uleb128 0x12
 8642 00db 01       		.uleb128 0x1
 8643 00dc 40       		.uleb128 0x40
 8644 00dd 06       		.uleb128 0x6
 8645 00de 9642     		.uleb128 0x2116
 8646 00e0 0C       		.uleb128 0xc
 8647 00e1 00       		.byte	0
 8648 00e2 00       		.byte	0
 8649 00e3 11       		.uleb128 0x11
 8650 00e4 2E       		.uleb128 0x2e
 8651 00e5 01       		.byte	0x1
 8652 00e6 3F       		.uleb128 0x3f
 8653 00e7 0C       		.uleb128 0xc
 8654 00e8 03       		.uleb128 0x3
 8655 00e9 0E       		.uleb128 0xe
 8656 00ea 3A       		.uleb128 0x3a
 8657 00eb 0B       		.uleb128 0xb
 8658 00ec 3B       		.uleb128 0x3b
 8659 00ed 05       		.uleb128 0x5
 8660 00ee 27       		.uleb128 0x27
 8661 00ef 0C       		.uleb128 0xc
 8662 00f0 11       		.uleb128 0x11
 8663 00f1 01       		.uleb128 0x1
 8664 00f2 12       		.uleb128 0x12
 8665 00f3 01       		.uleb128 0x1
 8666 00f4 40       		.uleb128 0x40
 8667 00f5 06       		.uleb128 0x6
 8668 00f6 9642     		.uleb128 0x2116
 8669 00f8 0C       		.uleb128 0xc
 8670 00f9 01       		.uleb128 0x1
 8671 00fa 13       		.uleb128 0x13
 8672 00fb 00       		.byte	0
 8673 00fc 00       		.byte	0
 8674 00fd 12       		.uleb128 0x12
 8675 00fe 05       		.uleb128 0x5
 8676 00ff 00       		.byte	0
 8677 0100 03       		.uleb128 0x3
 8678 0101 0E       		.uleb128 0xe
 8679 0102 3A       		.uleb128 0x3a
 8680 0103 0B       		.uleb128 0xb
 8681 0104 3B       		.uleb128 0x3b
 8682 0105 05       		.uleb128 0x5
 8683 0106 49       		.uleb128 0x49
 8684 0107 13       		.uleb128 0x13
 8685 0108 02       		.uleb128 0x2
 8686 0109 0A       		.uleb128 0xa
 8687 010a 00       		.byte	0
 8688 010b 00       		.byte	0
 8689 010c 13       		.uleb128 0x13
ARM GAS  /tmp/ccCNyPsy.s 			page 199


 8690 010d 34       		.uleb128 0x34
 8691 010e 00       		.byte	0
 8692 010f 03       		.uleb128 0x3
 8693 0110 08       		.uleb128 0x8
 8694 0111 3A       		.uleb128 0x3a
 8695 0112 0B       		.uleb128 0xb
 8696 0113 3B       		.uleb128 0x3b
 8697 0114 05       		.uleb128 0x5
 8698 0115 49       		.uleb128 0x49
 8699 0116 13       		.uleb128 0x13
 8700 0117 02       		.uleb128 0x2
 8701 0118 0A       		.uleb128 0xa
 8702 0119 00       		.byte	0
 8703 011a 00       		.byte	0
 8704 011b 14       		.uleb128 0x14
 8705 011c 2E       		.uleb128 0x2e
 8706 011d 01       		.byte	0x1
 8707 011e 3F       		.uleb128 0x3f
 8708 011f 0C       		.uleb128 0xc
 8709 0120 03       		.uleb128 0x3
 8710 0121 0E       		.uleb128 0xe
 8711 0122 3A       		.uleb128 0x3a
 8712 0123 0B       		.uleb128 0xb
 8713 0124 3B       		.uleb128 0x3b
 8714 0125 05       		.uleb128 0x5
 8715 0126 27       		.uleb128 0x27
 8716 0127 0C       		.uleb128 0xc
 8717 0128 49       		.uleb128 0x49
 8718 0129 13       		.uleb128 0x13
 8719 012a 11       		.uleb128 0x11
 8720 012b 01       		.uleb128 0x1
 8721 012c 12       		.uleb128 0x12
 8722 012d 01       		.uleb128 0x1
 8723 012e 40       		.uleb128 0x40
 8724 012f 06       		.uleb128 0x6
 8725 0130 9642     		.uleb128 0x2116
 8726 0132 0C       		.uleb128 0xc
 8727 0133 01       		.uleb128 0x1
 8728 0134 13       		.uleb128 0x13
 8729 0135 00       		.byte	0
 8730 0136 00       		.byte	0
 8731 0137 15       		.uleb128 0x15
 8732 0138 05       		.uleb128 0x5
 8733 0139 00       		.byte	0
 8734 013a 03       		.uleb128 0x3
 8735 013b 08       		.uleb128 0x8
 8736 013c 3A       		.uleb128 0x3a
 8737 013d 0B       		.uleb128 0xb
 8738 013e 3B       		.uleb128 0x3b
 8739 013f 05       		.uleb128 0x5
 8740 0140 49       		.uleb128 0x49
 8741 0141 13       		.uleb128 0x13
 8742 0142 02       		.uleb128 0x2
 8743 0143 0A       		.uleb128 0xa
 8744 0144 00       		.byte	0
 8745 0145 00       		.byte	0
 8746 0146 16       		.uleb128 0x16
ARM GAS  /tmp/ccCNyPsy.s 			page 200


 8747 0147 2E       		.uleb128 0x2e
 8748 0148 00       		.byte	0
 8749 0149 3F       		.uleb128 0x3f
 8750 014a 0C       		.uleb128 0xc
 8751 014b 03       		.uleb128 0x3
 8752 014c 0E       		.uleb128 0xe
 8753 014d 3A       		.uleb128 0x3a
 8754 014e 0B       		.uleb128 0xb
 8755 014f 3B       		.uleb128 0x3b
 8756 0150 05       		.uleb128 0x5
 8757 0151 27       		.uleb128 0x27
 8758 0152 0C       		.uleb128 0xc
 8759 0153 11       		.uleb128 0x11
 8760 0154 01       		.uleb128 0x1
 8761 0155 12       		.uleb128 0x12
 8762 0156 01       		.uleb128 0x1
 8763 0157 40       		.uleb128 0x40
 8764 0158 0A       		.uleb128 0xa
 8765 0159 9742     		.uleb128 0x2117
 8766 015b 0C       		.uleb128 0xc
 8767 015c 00       		.byte	0
 8768 015d 00       		.byte	0
 8769 015e 17       		.uleb128 0x17
 8770 015f 34       		.uleb128 0x34
 8771 0160 00       		.byte	0
 8772 0161 03       		.uleb128 0x3
 8773 0162 0E       		.uleb128 0xe
 8774 0163 3A       		.uleb128 0x3a
 8775 0164 0B       		.uleb128 0xb
 8776 0165 3B       		.uleb128 0x3b
 8777 0166 05       		.uleb128 0x5
 8778 0167 49       		.uleb128 0x49
 8779 0168 13       		.uleb128 0x13
 8780 0169 02       		.uleb128 0x2
 8781 016a 0A       		.uleb128 0xa
 8782 016b 00       		.byte	0
 8783 016c 00       		.byte	0
 8784 016d 18       		.uleb128 0x18
 8785 016e 34       		.uleb128 0x34
 8786 016f 00       		.byte	0
 8787 0170 03       		.uleb128 0x3
 8788 0171 0E       		.uleb128 0xe
 8789 0172 3A       		.uleb128 0x3a
 8790 0173 0B       		.uleb128 0xb
 8791 0174 3B       		.uleb128 0x3b
 8792 0175 0B       		.uleb128 0xb
 8793 0176 49       		.uleb128 0x49
 8794 0177 13       		.uleb128 0x13
 8795 0178 3F       		.uleb128 0x3f
 8796 0179 0C       		.uleb128 0xc
 8797 017a 02       		.uleb128 0x2
 8798 017b 0A       		.uleb128 0xa
 8799 017c 00       		.byte	0
 8800 017d 00       		.byte	0
 8801 017e 19       		.uleb128 0x19
 8802 017f 34       		.uleb128 0x34
 8803 0180 00       		.byte	0
ARM GAS  /tmp/ccCNyPsy.s 			page 201


 8804 0181 03       		.uleb128 0x3
 8805 0182 0E       		.uleb128 0xe
 8806 0183 3A       		.uleb128 0x3a
 8807 0184 0B       		.uleb128 0xb
 8808 0185 3B       		.uleb128 0x3b
 8809 0186 0B       		.uleb128 0xb
 8810 0187 49       		.uleb128 0x49
 8811 0188 13       		.uleb128 0x13
 8812 0189 3F       		.uleb128 0x3f
 8813 018a 0C       		.uleb128 0xc
 8814 018b 3C       		.uleb128 0x3c
 8815 018c 0C       		.uleb128 0xc
 8816 018d 00       		.byte	0
 8817 018e 00       		.byte	0
 8818 018f 00       		.byte	0
 8819              		.section	.debug_loc,"",%progbits
 8820              	.Ldebug_loc0:
 8821              	.LLST0:
 8822 0000 00000000 		.4byte	.LFB20
 8823 0004 02000000 		.4byte	.LCFI0
 8824 0008 0200     		.2byte	0x2
 8825 000a 7D       		.byte	0x7d
 8826 000b 00       		.sleb128 0
 8827 000c 02000000 		.4byte	.LCFI0
 8828 0010 5C000000 		.4byte	.LFE20
 8829 0014 0200     		.2byte	0x2
 8830 0016 7D       		.byte	0x7d
 8831 0017 08       		.sleb128 8
 8832 0018 00000000 		.4byte	0
 8833 001c 00000000 		.4byte	0
 8834              	.LLST1:
 8835 0020 00000000 		.4byte	.LFB22
 8836 0024 02000000 		.4byte	.LCFI1
 8837 0028 0200     		.2byte	0x2
 8838 002a 7D       		.byte	0x7d
 8839 002b 00       		.sleb128 0
 8840 002c 02000000 		.4byte	.LCFI1
 8841 0030 38000000 		.4byte	.LFE22
 8842 0034 0200     		.2byte	0x2
 8843 0036 7D       		.byte	0x7d
 8844 0037 08       		.sleb128 8
 8845 0038 00000000 		.4byte	0
 8846 003c 00000000 		.4byte	0
 8847              	.LLST2:
 8848 0040 00000000 		.4byte	.LFB23
 8849 0044 02000000 		.4byte	.LCFI2
 8850 0048 0200     		.2byte	0x2
 8851 004a 7D       		.byte	0x7d
 8852 004b 00       		.sleb128 0
 8853 004c 02000000 		.4byte	.LCFI2
 8854 0050 04000000 		.4byte	.LCFI3
 8855 0054 0200     		.2byte	0x2
 8856 0056 7D       		.byte	0x7d
 8857 0057 08       		.sleb128 8
 8858 0058 04000000 		.4byte	.LCFI3
 8859 005c CC030000 		.4byte	.LFE23
 8860 0060 0200     		.2byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 202


 8861 0062 7D       		.byte	0x7d
 8862 0063 20       		.sleb128 32
 8863 0064 00000000 		.4byte	0
 8864 0068 00000000 		.4byte	0
 8865              	.LLST3:
 8866 006c 00000000 		.4byte	.LFB24
 8867 0070 02000000 		.4byte	.LCFI4
 8868 0074 0200     		.2byte	0x2
 8869 0076 7D       		.byte	0x7d
 8870 0077 00       		.sleb128 0
 8871 0078 02000000 		.4byte	.LCFI4
 8872 007c 04000000 		.4byte	.LCFI5
 8873 0080 0200     		.2byte	0x2
 8874 0082 7D       		.byte	0x7d
 8875 0083 08       		.sleb128 8
 8876 0084 04000000 		.4byte	.LCFI5
 8877 0088 70000000 		.4byte	.LFE24
 8878 008c 0200     		.2byte	0x2
 8879 008e 7D       		.byte	0x7d
 8880 008f 10       		.sleb128 16
 8881 0090 00000000 		.4byte	0
 8882 0094 00000000 		.4byte	0
 8883              	.LLST4:
 8884 0098 00000000 		.4byte	.LFB25
 8885 009c 02000000 		.4byte	.LCFI6
 8886 00a0 0200     		.2byte	0x2
 8887 00a2 7D       		.byte	0x7d
 8888 00a3 00       		.sleb128 0
 8889 00a4 02000000 		.4byte	.LCFI6
 8890 00a8 D4020000 		.4byte	.LFE25
 8891 00ac 0200     		.2byte	0x2
 8892 00ae 7D       		.byte	0x7d
 8893 00af 08       		.sleb128 8
 8894 00b0 00000000 		.4byte	0
 8895 00b4 00000000 		.4byte	0
 8896              	.LLST5:
 8897 00b8 00000000 		.4byte	.LFB26
 8898 00bc 02000000 		.4byte	.LCFI7
 8899 00c0 0200     		.2byte	0x2
 8900 00c2 7D       		.byte	0x7d
 8901 00c3 00       		.sleb128 0
 8902 00c4 02000000 		.4byte	.LCFI7
 8903 00c8 04000000 		.4byte	.LCFI8
 8904 00cc 0200     		.2byte	0x2
 8905 00ce 7D       		.byte	0x7d
 8906 00cf 04       		.sleb128 4
 8907 00d0 04000000 		.4byte	.LCFI8
 8908 00d4 50010000 		.4byte	.LFE26
 8909 00d8 0200     		.2byte	0x2
 8910 00da 7D       		.byte	0x7d
 8911 00db 18       		.sleb128 24
 8912 00dc 00000000 		.4byte	0
 8913 00e0 00000000 		.4byte	0
 8914              	.LLST6:
 8915 00e4 00000000 		.4byte	.LFB27
 8916 00e8 02000000 		.4byte	.LCFI9
 8917 00ec 0200     		.2byte	0x2
ARM GAS  /tmp/ccCNyPsy.s 			page 203


 8918 00ee 7D       		.byte	0x7d
 8919 00ef 00       		.sleb128 0
 8920 00f0 02000000 		.4byte	.LCFI9
 8921 00f4 04000000 		.4byte	.LCFI10
 8922 00f8 0200     		.2byte	0x2
 8923 00fa 7D       		.byte	0x7d
 8924 00fb 08       		.sleb128 8
 8925 00fc 04000000 		.4byte	.LCFI10
 8926 0100 F4020000 		.4byte	.LFE27
 8927 0104 0200     		.2byte	0x2
 8928 0106 7D       		.byte	0x7d
 8929 0107 18       		.sleb128 24
 8930 0108 00000000 		.4byte	0
 8931 010c 00000000 		.4byte	0
 8932              	.LLST7:
 8933 0110 00000000 		.4byte	.LFB28
 8934 0114 02000000 		.4byte	.LCFI11
 8935 0118 0200     		.2byte	0x2
 8936 011a 7D       		.byte	0x7d
 8937 011b 00       		.sleb128 0
 8938 011c 02000000 		.4byte	.LCFI11
 8939 0120 04000000 		.4byte	.LCFI12
 8940 0124 0200     		.2byte	0x2
 8941 0126 7D       		.byte	0x7d
 8942 0127 08       		.sleb128 8
 8943 0128 04000000 		.4byte	.LCFI12
 8944 012c D4010000 		.4byte	.LFE28
 8945 0130 0200     		.2byte	0x2
 8946 0132 7D       		.byte	0x7d
 8947 0133 20       		.sleb128 32
 8948 0134 00000000 		.4byte	0
 8949 0138 00000000 		.4byte	0
 8950              	.LLST8:
 8951 013c 00000000 		.4byte	.LFB29
 8952 0140 02000000 		.4byte	.LCFI13
 8953 0144 0200     		.2byte	0x2
 8954 0146 7D       		.byte	0x7d
 8955 0147 00       		.sleb128 0
 8956 0148 02000000 		.4byte	.LCFI13
 8957 014c 04000000 		.4byte	.LCFI14
 8958 0150 0200     		.2byte	0x2
 8959 0152 7D       		.byte	0x7d
 8960 0153 08       		.sleb128 8
 8961 0154 04000000 		.4byte	.LCFI14
 8962 0158 80080000 		.4byte	.LFE29
 8963 015c 0200     		.2byte	0x2
 8964 015e 7D       		.byte	0x7d
 8965 015f 20       		.sleb128 32
 8966 0160 00000000 		.4byte	0
 8967 0164 00000000 		.4byte	0
 8968              	.LLST9:
 8969 0168 00000000 		.4byte	.LFB30
 8970 016c 02000000 		.4byte	.LCFI15
 8971 0170 0200     		.2byte	0x2
 8972 0172 7D       		.byte	0x7d
 8973 0173 00       		.sleb128 0
 8974 0174 02000000 		.4byte	.LCFI15
ARM GAS  /tmp/ccCNyPsy.s 			page 204


 8975 0178 04000000 		.4byte	.LCFI16
 8976 017c 0200     		.2byte	0x2
 8977 017e 7D       		.byte	0x7d
 8978 017f 08       		.sleb128 8
 8979 0180 04000000 		.4byte	.LCFI16
 8980 0184 84000000 		.4byte	.LFE30
 8981 0188 0200     		.2byte	0x2
 8982 018a 7D       		.byte	0x7d
 8983 018b 18       		.sleb128 24
 8984 018c 00000000 		.4byte	0
 8985 0190 00000000 		.4byte	0
 8986              	.LLST10:
 8987 0194 00000000 		.4byte	.LFB31
 8988 0198 02000000 		.4byte	.LCFI17
 8989 019c 0200     		.2byte	0x2
 8990 019e 7D       		.byte	0x7d
 8991 019f 00       		.sleb128 0
 8992 01a0 02000000 		.4byte	.LCFI17
 8993 01a4 04000000 		.4byte	.LCFI18
 8994 01a8 0200     		.2byte	0x2
 8995 01aa 7D       		.byte	0x7d
 8996 01ab 08       		.sleb128 8
 8997 01ac 04000000 		.4byte	.LCFI18
 8998 01b0 2C010000 		.4byte	.LFE31
 8999 01b4 0200     		.2byte	0x2
 9000 01b6 7D       		.byte	0x7d
 9001 01b7 18       		.sleb128 24
 9002 01b8 00000000 		.4byte	0
 9003 01bc 00000000 		.4byte	0
 9004              	.LLST11:
 9005 01c0 00000000 		.4byte	.LFB33
 9006 01c4 02000000 		.4byte	.LCFI19
 9007 01c8 0200     		.2byte	0x2
 9008 01ca 7D       		.byte	0x7d
 9009 01cb 00       		.sleb128 0
 9010 01cc 02000000 		.4byte	.LCFI19
 9011 01d0 04000000 		.4byte	.LCFI20
 9012 01d4 0200     		.2byte	0x2
 9013 01d6 7D       		.byte	0x7d
 9014 01d7 08       		.sleb128 8
 9015 01d8 04000000 		.4byte	.LCFI20
 9016 01dc 30060000 		.4byte	.LFE33
 9017 01e0 0200     		.2byte	0x2
 9018 01e2 7D       		.byte	0x7d
 9019 01e3 20       		.sleb128 32
 9020 01e4 00000000 		.4byte	0
 9021 01e8 00000000 		.4byte	0
 9022              	.LLST12:
 9023 01ec 00000000 		.4byte	.LFB34
 9024 01f0 02000000 		.4byte	.LCFI21
 9025 01f4 0200     		.2byte	0x2
 9026 01f6 7D       		.byte	0x7d
 9027 01f7 00       		.sleb128 0
 9028 01f8 02000000 		.4byte	.LCFI21
 9029 01fc 04000000 		.4byte	.LCFI22
 9030 0200 0200     		.2byte	0x2
 9031 0202 7D       		.byte	0x7d
ARM GAS  /tmp/ccCNyPsy.s 			page 205


 9032 0203 08       		.sleb128 8
 9033 0204 04000000 		.4byte	.LCFI22
 9034 0208 E8060000 		.4byte	.LFE34
 9035 020c 0200     		.2byte	0x2
 9036 020e 7D       		.byte	0x7d
 9037 020f 20       		.sleb128 32
 9038 0210 00000000 		.4byte	0
 9039 0214 00000000 		.4byte	0
 9040              		.section	.debug_aranges,"",%progbits
 9041 0000 8C000000 		.4byte	0x8c
 9042 0004 0200     		.2byte	0x2
 9043 0006 00000000 		.4byte	.Ldebug_info0
 9044 000a 04       		.byte	0x4
 9045 000b 00       		.byte	0
 9046 000c 0000     		.2byte	0
 9047 000e 0000     		.2byte	0
 9048 0010 00000000 		.4byte	.LFB20
 9049 0014 5C000000 		.4byte	.LFE20-.LFB20
 9050 0018 00000000 		.4byte	.LFB21
 9051 001c FC000000 		.4byte	.LFE21-.LFB21
 9052 0020 00000000 		.4byte	.LFB22
 9053 0024 38000000 		.4byte	.LFE22-.LFB22
 9054 0028 00000000 		.4byte	.LFB23
 9055 002c CC030000 		.4byte	.LFE23-.LFB23
 9056 0030 00000000 		.4byte	.LFB24
 9057 0034 70000000 		.4byte	.LFE24-.LFB24
 9058 0038 00000000 		.4byte	.LFB25
 9059 003c D4020000 		.4byte	.LFE25-.LFB25
 9060 0040 00000000 		.4byte	.LFB26
 9061 0044 50010000 		.4byte	.LFE26-.LFB26
 9062 0048 00000000 		.4byte	.LFB27
 9063 004c F4020000 		.4byte	.LFE27-.LFB27
 9064 0050 00000000 		.4byte	.LFB28
 9065 0054 D4010000 		.4byte	.LFE28-.LFB28
 9066 0058 00000000 		.4byte	.LFB29
 9067 005c 80080000 		.4byte	.LFE29-.LFB29
 9068 0060 00000000 		.4byte	.LFB30
 9069 0064 84000000 		.4byte	.LFE30-.LFB30
 9070 0068 00000000 		.4byte	.LFB31
 9071 006c 2C010000 		.4byte	.LFE31-.LFB31
 9072 0070 00000000 		.4byte	.LFB32
 9073 0074 DC000000 		.4byte	.LFE32-.LFB32
 9074 0078 00000000 		.4byte	.LFB33
 9075 007c 30060000 		.4byte	.LFE33-.LFB33
 9076 0080 00000000 		.4byte	.LFB34
 9077 0084 E8060000 		.4byte	.LFE34-.LFB34
 9078 0088 00000000 		.4byte	0
 9079 008c 00000000 		.4byte	0
 9080              		.section	.debug_ranges,"",%progbits
 9081              	.Ldebug_ranges0:
 9082 0000 00000000 		.4byte	.LFB20
 9083 0004 5C000000 		.4byte	.LFE20
 9084 0008 00000000 		.4byte	.LFB21
 9085 000c FC000000 		.4byte	.LFE21
 9086 0010 00000000 		.4byte	.LFB22
 9087 0014 38000000 		.4byte	.LFE22
 9088 0018 00000000 		.4byte	.LFB23
ARM GAS  /tmp/ccCNyPsy.s 			page 206


 9089 001c CC030000 		.4byte	.LFE23
 9090 0020 00000000 		.4byte	.LFB24
 9091 0024 70000000 		.4byte	.LFE24
 9092 0028 00000000 		.4byte	.LFB25
 9093 002c D4020000 		.4byte	.LFE25
 9094 0030 00000000 		.4byte	.LFB26
 9095 0034 50010000 		.4byte	.LFE26
 9096 0038 00000000 		.4byte	.LFB27
 9097 003c F4020000 		.4byte	.LFE27
 9098 0040 00000000 		.4byte	.LFB28
 9099 0044 D4010000 		.4byte	.LFE28
 9100 0048 00000000 		.4byte	.LFB29
 9101 004c 80080000 		.4byte	.LFE29
 9102 0050 00000000 		.4byte	.LFB30
 9103 0054 84000000 		.4byte	.LFE30
 9104 0058 00000000 		.4byte	.LFB31
 9105 005c 2C010000 		.4byte	.LFE31
 9106 0060 00000000 		.4byte	.LFB32
 9107 0064 DC000000 		.4byte	.LFE32
 9108 0068 00000000 		.4byte	.LFB33
 9109 006c 30060000 		.4byte	.LFE33
 9110 0070 00000000 		.4byte	.LFB34
 9111 0074 E8060000 		.4byte	.LFE34
 9112 0078 00000000 		.4byte	0
 9113 007c 00000000 		.4byte	0
 9114              		.section	.debug_line,"",%progbits
 9115              	.Ldebug_line0:
 9116 0000 C4060000 		.section	.debug_str,"MS",%progbits,1
 9116      0200F600 
 9116      00000201 
 9116      FB0E0D00 
 9116      01010101 
 9117              	.LASF109:
 9118 0000 47534D5F 		.ascii	"GSM_CMGF\000"
 9118      434D4746 
 9118      00
 9119              	.LASF55:
 9120 0009 7074724B 		.ascii	"ptrKEY\000"
 9120      455900
 9121              	.LASF118:
 9122 0010 47534D5F 		.ascii	"GSM_IPCONNCLOSE\000"
 9122      4950434F 
 9122      4E4E434C 
 9122      4F534500 
 9123              	.LASF119:
 9124 0020 47534D5F 		.ascii	"GSM_SIM1\000"
 9124      53494D31 
 9124      00
 9125              	.LASF120:
 9126 0029 47534D5F 		.ascii	"GSM_SIM2\000"
 9126      53494D32 
 9126      00
 9127              	.LASF138:
 9128 0032 53494D39 		.ascii	"SIM900CLAVESIM2\000"
 9128      3030434C 
 9128      41564553 
 9128      494D3200 
ARM GAS  /tmp/ccCNyPsy.s 			page 207


 9129              	.LASF78:
 9130 0042 70427566 		.ascii	"pBuffUARTGSMtxR\000"
 9130      66554152 
 9130      5447534D 
 9130      74785200 
 9131              	.LASF21:
 9132 0052 42535252 		.ascii	"BSRR\000"
 9132      00
 9133              	.LASF79:
 9134 0057 70427566 		.ascii	"pBuffUARTGSMtxW\000"
 9134      66554152 
 9134      5447534D 
 9134      74785700 
 9135              	.LASF54:
 9136 0067 70747255 		.ascii	"ptrUSER\000"
 9136      53455200 
 9137              	.LASF42:
 9138 006f 47534D52 		.ascii	"GSMReceive\000"
 9138      65636569 
 9138      766500
 9139              	.LASF98:
 9140 007a 47534D49 		.ascii	"GSMIPadd\000"
 9140      50616464 
 9140      00
 9141              	.LASF134:
 9142 0083 53494D39 		.ascii	"SIM900USUARIOSIM1\000"
 9142      30305553 
 9142      55415249 
 9142      4F53494D 
 9142      3100
 9143              	.LASF137:
 9144 0095 53494D39 		.ascii	"SIM900USUARIOSIM2\000"
 9144      30305553 
 9144      55415249 
 9144      4F53494D 
 9144      3200
 9145              	.LASF111:
 9146 00a7 47534D5F 		.ascii	"GSM_IPINITIAL\000"
 9146      4950494E 
 9146      49544941 
 9146      4C00
 9147              	.LASF148:
 9148 00b5 47534D5F 		.ascii	"GSM_Start\000"
 9148      53746172 
 9148      7400
 9149              	.LASF10:
 9150 00bf 756E7369 		.ascii	"unsigned int\000"
 9150      676E6564 
 9150      20696E74 
 9150      00
 9151              	.LASF123:
 9152 00cc 70726573 		.ascii	"prestadorSimTime\000"
 9152      7461646F 
 9152      7253696D 
 9152      54696D65 
 9152      00
 9153              	.LASF84:
ARM GAS  /tmp/ccCNyPsy.s 			page 208


 9154 00dd 47534D53 		.ascii	"GSMSendCommandTimeOut\000"
 9154      656E6443 
 9154      6F6D6D61 
 9154      6E645469 
 9154      6D654F75 
 9155              	.LASF46:
 9156 00f3 74696D65 		.ascii	"timeOut\000"
 9156      4F757400 
 9157              	.LASF114:
 9158 00fb 47534D5F 		.ascii	"GSM_IPSTATUS\000"
 9158      49505354 
 9158      41545553 
 9158      00
 9159              	.LASF107:
 9160 0108 47534D5F 		.ascii	"GSM_ERR\000"
 9160      45525200 
 9161              	.LASF67:
 9162 0110 70416374 		.ascii	"pActDact\000"
 9162      44616374 
 9162      00
 9163              	.LASF87:
 9164 0119 47534D53 		.ascii	"GSMSendSMSFlag\000"
 9164      656E6453 
 9164      4D53466C 
 9164      616700
 9165              	.LASF12:
 9166 0128 75696E74 		.ascii	"uint32_t\000"
 9166      33325F74 
 9166      00
 9167              	.LASF33:
 9168 0131 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario1\000"
 9168      46494755 
 9168      52414349 
 9168      4F4E6770 
 9168      72735573 
 9169              	.LASF37:
 9170 014c 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario2\000"
 9170      46494755 
 9170      52414349 
 9170      4F4E6770 
 9170      72735573 
 9171              	.LASF86:
 9172 0167 47534D53 		.ascii	"GSMSendSMSState\000"
 9172      656E6453 
 9172      4D535374 
 9172      61746500 
 9173              	.LASF34:
 9174 0177 70434F4E 		.ascii	"pCONFIGURACIONgprsClave1\000"
 9174      46494755 
 9174      52414349 
 9174      4F4E6770 
 9174      7273436C 
 9175              	.LASF38:
 9176 0190 70434F4E 		.ascii	"pCONFIGURACIONgprsClave2\000"
 9176      46494755 
 9176      52414349 
 9176      4F4E6770 
ARM GAS  /tmp/ccCNyPsy.s 			page 209


 9176      7273436C 
 9177              	.LASF126:
 9178 01a9 47534D6E 		.ascii	"GSMnumSMS\000"
 9178      756D534D 
 9178      5300
 9179              	.LASF64:
 9180 01b3 70416C65 		.ascii	"pAlertasReportar\000"
 9180      72746173 
 9180      5265706F 
 9180      72746172 
 9180      00
 9181              	.LASF74:
 9182 01c4 70427566 		.ascii	"pBuffUARTGSMrxR\000"
 9182      66554152 
 9182      5447534D 
 9182      72785200 
 9183              	.LASF73:
 9184 01d4 70427566 		.ascii	"pBuffUARTGSMrxW\000"
 9184      66554152 
 9184      5447534D 
 9184      72785700 
 9185              	.LASF140:
 9186 01e4 53494D39 		.ascii	"SIM900PORTREMOTE\000"
 9186      3030504F 
 9186      52545245 
 9186      4D4F5445 
 9186      00
 9187              	.LASF57:
 9188 01f5 70747249 		.ascii	"ptrIPremote\000"
 9188      5072656D 
 9188      6F746500 
 9189              	.LASF51:
 9190 0201 7074724E 		.ascii	"ptrNUM\000"
 9190      554D00
 9191              	.LASF9:
 9192 0208 6C6F6E67 		.ascii	"long long unsigned int\000"
 9192      206C6F6E 
 9192      6720756E 
 9192      7369676E 
 9192      65642069 
 9193              	.LASF43:
 9194 021f 47534D43 		.ascii	"GSMCloseIP\000"
 9194      6C6F7365 
 9194      495000
 9195              	.LASF71:
 9196 022a 62756666 		.ascii	"buffUARTGSMrx\000"
 9196      55415254 
 9196      47534D72 
 9196      7800
 9197              	.LASF70:
 9198 0238 47534D43 		.ascii	"GSMConfigPDPGPRS\000"
 9198      6F6E6669 
 9198      67504450 
 9198      47505253 
 9198      00
 9199              	.LASF144:
 9200 0249 75736172 		.ascii	"usart1_pckt_bytes\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 210


 9200      74315F70 
 9200      636B745F 
 9200      62797465 
 9200      7300
 9201              	.LASF5:
 9202 025b 5F5F7569 		.ascii	"__uint16_t\000"
 9202      6E743136 
 9202      5F7400
 9203              	.LASF14:
 9204 0266 4D4F4445 		.ascii	"MODER\000"
 9204      5200
 9205              	.LASF131:
 9206 026c 70726573 		.ascii	"prestadorSimSelect\000"
 9206      7461646F 
 9206      7253696D 
 9206      53656C65 
 9206      637400
 9207              	.LASF130:
 9208 027f 47534D72 		.ascii	"GSMrxSMSState\000"
 9208      78534D53 
 9208      53746174 
 9208      6500
 9209              	.LASF132:
 9210 028d 666C6167 		.ascii	"flagCloseIP\000"
 9210      436C6F73 
 9210      65495000 
 9211              	.LASF105:
 9212 0299 44423330 		.ascii	"DB300flagConnGPRS\000"
 9212      30666C61 
 9212      67436F6E 
 9212      6E475052 
 9212      5300
 9213              	.LASF121:
 9214 02ab 47534D5F 		.ascii	"GSM_SENDOK\000"
 9214      53454E44 
 9214      4F4B00
 9215              	.LASF28:
 9216 02b6 47534D5F 		.ascii	"GSM_Stop\000"
 9216      53746F70 
 9216      00
 9217              	.LASF143:
 9218 02bf 75736172 		.ascii	"usart1_have_data\000"
 9218      74315F68 
 9218      6176655F 
 9218      64617461 
 9218      00
 9219              	.LASF77:
 9220 02d0 62756666 		.ascii	"buffUARTGSMtx\000"
 9220      55415254 
 9220      47534D74 
 9220      7800
 9221              	.LASF18:
 9222 02de 50555044 		.ascii	"PUPDR\000"
 9222      5200
 9223              	.LASF102:
 9224 02e4 47534D53 		.ascii	"GSMSendIPTimeOut\000"
 9224      656E6449 
ARM GAS  /tmp/ccCNyPsy.s 			page 211


 9224      5054696D 
 9224      654F7574 
 9224      00
 9225              	.LASF117:
 9226 02f5 47534D5F 		.ascii	"GSM_IPCONNFAIL\000"
 9226      4950434F 
 9226      4E4E4641 
 9226      494C00
 9227              	.LASF58:
 9228 0304 70747250 		.ascii	"ptrPORTremote\000"
 9228      4F525472 
 9228      656D6F74 
 9228      6500
 9229              	.LASF26:
 9230 0312 63686172 		.ascii	"char\000"
 9230      00
 9231              	.LASF142:
 9232 0317 75736172 		.ascii	"usart1_pckt_ready\000"
 9232      74315F70 
 9232      636B745F 
 9232      72656164 
 9232      7900
 9233              	.LASF93:
 9234 0329 47534D43 		.ascii	"GSMConfigGPRSTimeOut\000"
 9234      6F6E6669 
 9234      67475052 
 9234      5354696D 
 9234      654F7574 
 9235              	.LASF65:
 9236 033e 70757365 		.ascii	"puserCode\000"
 9236      72436F64 
 9236      6500
 9237              	.LASF108:
 9238 0348 47534D5F 		.ascii	"GSM_RTA\000"
 9238      52544100 
 9239              	.LASF139:
 9240 0350 53494D39 		.ascii	"SIM900IPREMOTE\000"
 9240      30304950 
 9240      52454D4F 
 9240      544500
 9241              	.LASF113:
 9242 035f 47534D5F 		.ascii	"GSM_IPGPRSACT\000"
 9242      49504750 
 9242      52534143 
 9242      5400
 9243              	.LASF63:
 9244 036d 47534D72 		.ascii	"GSMrxSMS\000"
 9244      78534D53 
 9244      00
 9245              	.LASF90:
 9246 0376 47534D43 		.ascii	"GSMConfigState\000"
 9246      6F6E6669 
 9246      67537461 
 9246      746500
 9247              	.LASF61:
 9248 0385 47534D54 		.ascii	"GSMTimeoutCounters\000"
 9248      696D656F 
ARM GAS  /tmp/ccCNyPsy.s 			page 212


 9248      7574436F 
 9248      756E7465 
 9248      727300
 9249              	.LASF76:
 9250 0398 5061636B 		.ascii	"PacketReadyUARTGSM\000"
 9250      65745265 
 9250      61647955 
 9250      41525447 
 9250      534D00
 9251              	.LASF89:
 9252 03ab 47534D53 		.ascii	"GSMSendSMSbuffAux\000"
 9252      656E6453 
 9252      4D536275 
 9252      66664175 
 9252      7800
 9253              	.LASF129:
 9254 03bd 47534D52 		.ascii	"GSMReadSMSrepIn\000"
 9254      65616453 
 9254      4D537265 
 9254      70496E00 
 9255              	.LASF8:
 9256 03cd 6C6F6E67 		.ascii	"long long int\000"
 9256      206C6F6E 
 9256      6720696E 
 9256      7400
 9257              	.LASF141:
 9258 03db 75736172 		.ascii	"usart1_mini_timeout\000"
 9258      74315F6D 
 9258      696E695F 
 9258      74696D65 
 9258      6F757400 
 9259              	.LASF80:
 9260 03ef 47534D53 		.ascii	"GSMStartState\000"
 9260      74617274 
 9260      53746174 
 9260      6500
 9261              	.LASF66:
 9262 03fd 70636C61 		.ascii	"pclaveAct\000"
 9262      76654163 
 9262      7400
 9263              	.LASF60:
 9264 0407 47534D53 		.ascii	"GSMSendIP\000"
 9264      656E6449 
 9264      5000
 9265              	.LASF75:
 9266 0411 636F756E 		.ascii	"counterUARTGSM\000"
 9266      74657255 
 9266      41525447 
 9266      534D00
 9267              	.LASF40:
 9268 0420 70434F4E 		.ascii	"pCONFIGURACIONIPREMOTE\000"
 9268      46494755 
 9268      52414349 
 9268      4F4E4950 
 9268      52454D4F 
 9269              	.LASF99:
 9270 0437 47505253 		.ascii	"GPRSrssi\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 213


 9270      72737369 
 9270      00
 9271              	.LASF124:
 9272 0440 47534D43 		.ascii	"GSMCantSMS\000"
 9272      616E7453 
 9272      4D5300
 9273              	.LASF17:
 9274 044b 4F535045 		.ascii	"OSPEEDR\000"
 9274      45445200 
 9275              	.LASF25:
 9276 0453 6C6F6E67 		.ascii	"long double\000"
 9276      20646F75 
 9276      626C6500 
 9277              	.LASF11:
 9278 045f 75696E74 		.ascii	"uint16_t\000"
 9278      31365F74 
 9278      00
 9279              	.LASF72:
 9280 0468 62756666 		.ascii	"buffUARTGSMrx2\000"
 9280      55415254 
 9280      47534D72 
 9280      783200
 9281              	.LASF29:
 9282 0477 7047534D 		.ascii	"pGSMHWstatus\000"
 9282      48577374 
 9282      61747573 
 9282      00
 9283              	.LASF59:
 9284 0484 47534D5F 		.ascii	"GSM_SetSIM\000"
 9284      53657453 
 9284      494D00
 9285              	.LASF96:
 9286 048f 47534D62 		.ascii	"GSMbuffStatus\000"
 9286      75666653 
 9286      74617475 
 9286      7300
 9287              	.LASF16:
 9288 049d 52455345 		.ascii	"RESERVED0\000"
 9288      52564544 
 9288      3000
 9289              	.LASF19:
 9290 04a7 52455345 		.ascii	"RESERVED1\000"
 9290      52564544 
 9290      3100
 9291              	.LASF20:
 9292 04b1 52455345 		.ascii	"RESERVED2\000"
 9292      52564544 
 9292      3200
 9293              	.LASF23:
 9294 04bb 52455345 		.ascii	"RESERVED3\000"
 9294      52564544 
 9294      3300
 9295              	.LASF2:
 9296 04c5 73686F72 		.ascii	"short int\000"
 9296      7420696E 
 9296      7400
 9297              	.LASF27:
ARM GAS  /tmp/ccCNyPsy.s 			page 214


 9298 04cf 47534D50 		.ascii	"GSMProcess\000"
 9298      726F6365 
 9298      737300
 9299              	.LASF48:
 9300 04da 47534D5F 		.ascii	"GSM_Config\000"
 9300      436F6E66 
 9300      696700
 9301              	.LASF4:
 9302 04e5 6C6F6E67 		.ascii	"long int\000"
 9302      20696E74 
 9302      00
 9303              	.LASF128:
 9304 04ee 47534D52 		.ascii	"GSMReadSMScommand\000"
 9304      65616453 
 9304      4D53636F 
 9304      6D6D616E 
 9304      6400
 9305              	.LASF116:
 9306 0500 47534D5F 		.ascii	"GSM_IPCONNOK\000"
 9306      4950434F 
 9306      4E4E4F4B 
 9306      00
 9307              	.LASF52:
 9308 050d 47534D43 		.ascii	"GSMConfigGPRS\000"
 9308      6F6E6669 
 9308      67475052 
 9308      5300
 9309              	.LASF50:
 9310 051b 7074724D 		.ascii	"ptrMSG\000"
 9310      534700
 9311              	.LASF15:
 9312 0522 4F545950 		.ascii	"OTYPER\000"
 9312      455200
 9313              	.LASF69:
 9314 0529 666C6167 		.ascii	"flag\000"
 9314      00
 9315              	.LASF83:
 9316 052e 47534D53 		.ascii	"GSMSendCommandFlag\000"
 9316      656E6443 
 9316      6F6D6D61 
 9316      6E64466C 
 9316      616700
 9317              	.LASF101:
 9318 0541 47534D53 		.ascii	"GSMSendIPFlag\000"
 9318      656E6449 
 9318      50466C61 
 9318      6700
 9319              	.LASF45:
 9320 054f 70747243 		.ascii	"ptrCommand\000"
 9320      6F6D6D61 
 9320      6E6400
 9321              	.LASF49:
 9322 055a 47534D53 		.ascii	"GSMSendSMS\000"
 9322      656E6453 
 9322      4D5300
 9323              	.LASF95:
 9324 0565 47534D43 		.ascii	"GSMConfigGPRSflag\000"
ARM GAS  /tmp/ccCNyPsy.s 			page 215


 9324      6F6E6669 
 9324      67475052 
 9324      53666C61 
 9324      6700
 9325              	.LASF32:
 9326 0577 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN1\000"
 9326      46494755 
 9326      52414349 
 9326      4F4E6770 
 9326      72734150 
 9327              	.LASF36:
 9328 058e 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN2\000"
 9328      46494755 
 9328      52414349 
 9328      4F4E6770 
 9328      72734150 
 9329              	.LASF24:
 9330 05a5 4750494F 		.ascii	"GPIO_TypeDef\000"
 9330      5F547970 
 9330      65446566 
 9330      00
 9331              	.LASF112:
 9332 05b2 47534D5F 		.ascii	"GSM_IPSTART\000"
 9332      49505354 
 9332      41525400 
 9333              	.LASF88:
 9334 05be 47534D53 		.ascii	"GSMSendSMSTimeOut\000"
 9334      656E6453 
 9334      4D535469 
 9334      6D654F75 
 9334      7400
 9335              	.LASF13:
 9336 05d0 73697A65 		.ascii	"sizetype\000"
 9336      74797065 
 9336      00
 9337              	.LASF7:
 9338 05d9 6C6F6E67 		.ascii	"long unsigned int\000"
 9338      20756E73 
 9338      69676E65 
 9338      6420696E 
 9338      7400
 9339              	.LASF146:
 9340 05eb 7372632F 		.ascii	"src/sim900_800.c\000"
 9340      73696D39 
 9340      30305F38 
 9340      30302E63 
 9340      00
 9341              	.LASF147:
 9342 05fc 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 9342      652F6D65 
 9342      642F446F 
 9342      63756D65 
 9342      6E74732F 
 9343 062f 6100     		.ascii	"a\000"
 9344              	.LASF82:
 9345 0631 47534D53 		.ascii	"GSMSendCommandState\000"
 9345      656E6443 
ARM GAS  /tmp/ccCNyPsy.s 			page 216


 9345      6F6D6D61 
 9345      6E645374 
 9345      61746500 
 9346              	.LASF127:
 9347 0645 47534D52 		.ascii	"GSMReadSMSState\000"
 9347      65616453 
 9347      4D535374 
 9347      61746500 
 9348              	.LASF125:
 9349 0655 47534D43 		.ascii	"GSMCantSMS2\000"
 9349      616E7453 
 9349      4D533200 
 9350              	.LASF68:
 9351 0661 7047534D 		.ascii	"pGSMReadSMStel\000"
 9351      52656164 
 9351      534D5374 
 9351      656C00
 9352              	.LASF0:
 9353 0670 756E7369 		.ascii	"unsigned char\000"
 9353      676E6564 
 9353      20636861 
 9353      7200
 9354              	.LASF6:
 9355 067e 5F5F7569 		.ascii	"__uint32_t\000"
 9355      6E743332 
 9355      5F7400
 9356              	.LASF44:
 9357 0689 47534D53 		.ascii	"GSMSendCommand\000"
 9357      656E6443 
 9357      6F6D6D61 
 9357      6E6400
 9358              	.LASF115:
 9359 0698 47534D5F 		.ascii	"GSM_IPCONNECTING\000"
 9359      4950434F 
 9359      4E4E4543 
 9359      54494E47 
 9359      00
 9360              	.LASF62:
 9361 06a9 47534D50 		.ascii	"GSMPrestador\000"
 9361      72657374 
 9361      61646F72 
 9361      00
 9362              	.LASF53:
 9363 06b6 70747241 		.ascii	"ptrAPN\000"
 9363      504E00
 9364              	.LASF110:
 9365 06bd 47534D5F 		.ascii	"GSM_IPSTATE\000"
 9365      49505354 
 9365      41544500 
 9366              	.LASF100:
 9367 06c9 47534D53 		.ascii	"GSMSendIPState\000"
 9367      656E6449 
 9367      50537461 
 9367      746500
 9368              	.LASF47:
 9369 06d8 70747252 		.ascii	"ptrRta\000"
 9369      746100
ARM GAS  /tmp/ccCNyPsy.s 			page 217


 9370              	.LASF104:
 9371 06df 47534D62 		.ascii	"GSMbuffRtaCommand\000"
 9371      75666652 
 9371      7461436F 
 9371      6D6D616E 
 9371      6400
 9372              	.LASF30:
 9373 06f1 70726573 		.ascii	"prestadorSim1\000"
 9373      7461646F 
 9373      7253696D 
 9373      3100
 9374              	.LASF31:
 9375 06ff 70726573 		.ascii	"prestadorSim2\000"
 9375      7461646F 
 9375      7253696D 
 9375      3200
 9376              	.LASF103:
 9377 070d 47534D53 		.ascii	"GSMSendIPbuffAux\000"
 9377      656E6449 
 9377      50627566 
 9377      66417578 
 9377      00
 9378              	.LASF85:
 9379 071e 47534D53 		.ascii	"GSMSendCommandIntento\000"
 9379      656E6443 
 9379      6F6D6D61 
 9379      6E64496E 
 9379      74656E74 
 9380              	.LASF92:
 9381 0734 47534D43 		.ascii	"GSMConfigTime\000"
 9381      6F6E6669 
 9381      6754696D 
 9381      6500
 9382              	.LASF1:
 9383 0742 7369676E 		.ascii	"signed char\000"
 9383      65642063 
 9383      68617200 
 9384              	.LASF97:
 9385 074e 47534D62 		.ascii	"GSMbuffGPRSCommand\000"
 9385      75666647 
 9385      50525343 
 9385      6F6D6D61 
 9385      6E6400
 9386              	.LASF122:
 9387 0761 70726573 		.ascii	"prestadorSimState\000"
 9387      7461646F 
 9387      7253696D 
 9387      53746174 
 9387      6500
 9388              	.LASF3:
 9389 0773 73686F72 		.ascii	"short unsigned int\000"
 9389      7420756E 
 9389      7369676E 
 9389      65642069 
 9389      6E7400
 9390              	.LASF145:
 9391 0786 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
ARM GAS  /tmp/ccCNyPsy.s 			page 218


 9391      43313120 
 9391      352E322E 
 9391      31203230 
 9391      31353132 
 9392 07b9 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 9392      20726576 
 9392      6973696F 
 9392      6E203233 
 9392      31383438 
 9393 07ec 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 9393      662D3220 
 9393      2D4F3020 
 9393      2D666F6D 
 9393      69742D66 
 9394 081f 66756E63 		.ascii	"function-sections\000"
 9394      74696F6E 
 9394      2D736563 
 9394      74696F6E 
 9394      7300
 9395              	.LASF81:
 9396 0831 47534D53 		.ascii	"GSMStartTime\000"
 9396      74617274 
 9396      54696D65 
 9396      00
 9397              	.LASF35:
 9398 083e 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor1\000"
 9398      46494755 
 9398      52414349 
 9398      4F4E6770 
 9398      72735072 
 9399              	.LASF39:
 9400 085b 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor2\000"
 9400      46494755 
 9400      52414349 
 9400      4F4E6770 
 9400      72735072 
 9401              	.LASF135:
 9402 0878 53494D39 		.ascii	"SIM900CLAVESIM1\000"
 9402      3030434C 
 9402      41564553 
 9402      494D3100 
 9403              	.LASF106:
 9404 0888 47534D5F 		.ascii	"GSM_OK\000"
 9404      4F4B00
 9405              	.LASF94:
 9406 088f 47534D43 		.ascii	"GSMConfigGPRSState\000"
 9406      6F6E6669 
 9406      67475052 
 9406      53537461 
 9406      746500
 9407              	.LASF56:
 9408 08a2 70747249 		.ascii	"ptrIPAdd\000"
 9408      50416464 
 9408      00
 9409              	.LASF41:
 9410 08ab 70434F4E 		.ascii	"pCONFIGURACIONPORTREMOTE\000"
 9410      46494755 
ARM GAS  /tmp/ccCNyPsy.s 			page 219


 9410      52414349 
 9410      4F4E504F 
 9410      52545245 
 9411              	.LASF133:
 9412 08c4 53494D39 		.ascii	"SIM900APNSIM1\000"
 9412      30304150 
 9412      4E53494D 
 9412      3100
 9413              	.LASF136:
 9414 08d2 53494D39 		.ascii	"SIM900APNSIM2\000"
 9414      30304150 
 9414      4E53494D 
 9414      3200
 9415              	.LASF22:
 9416 08e0 4C434B52 		.ascii	"LCKR\000"
 9416      00
 9417              	.LASF91:
 9418 08e5 47534D43 		.ascii	"GSMConfigTimeOut\000"
 9418      6F6E6669 
 9418      6754696D 
 9418      654F7574 
 9418      00
 9419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccCNyPsy.s 			page 220


DEFINED SYMBOLS
                            *ABS*:00000000 sim900_800.c
                            *COM*:00000100 buffUARTGSMrx
                            *COM*:00000100 buffUARTGSMrx2
                            *COM*:00000004 pBuffUARTGSMrxW
                            *COM*:00000004 pBuffUARTGSMrxR
                            *COM*:00000001 counterUARTGSM
                            *COM*:00000001 PacketReadyUARTGSM
                            *COM*:00000100 buffUARTGSMtx
                            *COM*:00000004 pBuffUARTGSMtxR
                            *COM*:00000004 pBuffUARTGSMtxW
     /tmp/ccCNyPsy.s:67     .bss.GSMStartState:00000000 GSMStartState
     /tmp/ccCNyPsy.s:68     .bss.GSMStartState:00000000 $d
                            *COM*:00000002 GSMStartTime
     /tmp/ccCNyPsy.s:74     .bss.GSMSendCommandState:00000000 GSMSendCommandState
     /tmp/ccCNyPsy.s:75     .bss.GSMSendCommandState:00000000 $d
     /tmp/ccCNyPsy.s:80     .bss.GSMSendCommandFlag:00000000 GSMSendCommandFlag
     /tmp/ccCNyPsy.s:81     .bss.GSMSendCommandFlag:00000000 $d
                            *COM*:00000002 GSMSendCommandTimeOut
     /tmp/ccCNyPsy.s:87     .bss.GSMSendCommandIntento:00000000 GSMSendCommandIntento
     /tmp/ccCNyPsy.s:88     .bss.GSMSendCommandIntento:00000000 $d
     /tmp/ccCNyPsy.s:93     .bss.GSMSendSMSState:00000000 GSMSendSMSState
     /tmp/ccCNyPsy.s:94     .bss.GSMSendSMSState:00000000 $d
     /tmp/ccCNyPsy.s:99     .bss.GSMSendSMSFlag:00000000 GSMSendSMSFlag
     /tmp/ccCNyPsy.s:100    .bss.GSMSendSMSFlag:00000000 $d
                            *COM*:00000002 GSMSendSMSTimeOut
                            *COM*:00000020 GSMSendSMSbuffAux
     /tmp/ccCNyPsy.s:107    .bss.GSMConfigState:00000000 GSMConfigState
     /tmp/ccCNyPsy.s:108    .bss.GSMConfigState:00000000 $d
                            *COM*:00000002 GSMConfigTimeOut
                            *COM*:00000002 GSMConfigTime
                            *COM*:00000002 GSMConfigGPRSTimeOut
     /tmp/ccCNyPsy.s:116    .bss.GSMConfigGPRSState:00000000 GSMConfigGPRSState
     /tmp/ccCNyPsy.s:117    .bss.GSMConfigGPRSState:00000000 $d
     /tmp/ccCNyPsy.s:122    .bss.GSMConfigGPRSflag:00000000 GSMConfigGPRSflag
     /tmp/ccCNyPsy.s:123    .bss.GSMConfigGPRSflag:00000000 $d
                            *COM*:00000020 GSMbuffStatus
                            *COM*:00000040 GSMbuffGPRSCommand
                            *COM*:00000010 GSMIPadd
     /tmp/ccCNyPsy.s:131    .data.GPRSrssi:00000000 GPRSrssi
     /tmp/ccCNyPsy.s:137    .bss.GSMSendIPState:00000000 GSMSendIPState
     /tmp/ccCNyPsy.s:138    .bss.GSMSendIPState:00000000 $d
     /tmp/ccCNyPsy.s:143    .bss.GSMSendIPFlag:00000000 GSMSendIPFlag
     /tmp/ccCNyPsy.s:144    .bss.GSMSendIPFlag:00000000 $d
                            *COM*:00000002 GSMSendIPTimeOut
                            *COM*:00000020 GSMSendIPbuffAux
                            *COM*:00000100 GSMbuffRtaCommand
                            *COM*:00000001 DB300flagConnGPRS
     /tmp/ccCNyPsy.s:154    .rodata.GSM_OK:00000000 GSM_OK
     /tmp/ccCNyPsy.s:151    .rodata.GSM_OK:00000000 $d
     /tmp/ccCNyPsy.s:161    .rodata.GSM_ERR:00000000 GSM_ERR
     /tmp/ccCNyPsy.s:158    .rodata.GSM_ERR:00000000 $d
     /tmp/ccCNyPsy.s:167    .rodata.GSM_RTA:00000000 GSM_RTA
     /tmp/ccCNyPsy.s:174    .rodata.GSM_CMGF:00000000 GSM_CMGF
     /tmp/ccCNyPsy.s:171    .rodata.GSM_CMGF:00000000 $d
     /tmp/ccCNyPsy.s:181    .rodata.GSM_IPSTATE:00000000 GSM_IPSTATE
     /tmp/ccCNyPsy.s:178    .rodata.GSM_IPSTATE:00000000 $d
ARM GAS  /tmp/ccCNyPsy.s 			page 221


     /tmp/ccCNyPsy.s:188    .rodata.GSM_IPINITIAL:00000000 GSM_IPINITIAL
     /tmp/ccCNyPsy.s:185    .rodata.GSM_IPINITIAL:00000000 $d
     /tmp/ccCNyPsy.s:195    .rodata.GSM_IPSTART:00000000 GSM_IPSTART
     /tmp/ccCNyPsy.s:192    .rodata.GSM_IPSTART:00000000 $d
     /tmp/ccCNyPsy.s:202    .rodata.GSM_IPGPRSACT:00000000 GSM_IPGPRSACT
     /tmp/ccCNyPsy.s:199    .rodata.GSM_IPGPRSACT:00000000 $d
     /tmp/ccCNyPsy.s:209    .rodata.GSM_IPSTATUS:00000000 GSM_IPSTATUS
     /tmp/ccCNyPsy.s:206    .rodata.GSM_IPSTATUS:00000000 $d
     /tmp/ccCNyPsy.s:216    .rodata.GSM_IPCONNECTING:00000000 GSM_IPCONNECTING
     /tmp/ccCNyPsy.s:213    .rodata.GSM_IPCONNECTING:00000000 $d
     /tmp/ccCNyPsy.s:223    .rodata.GSM_IPCONNOK:00000000 GSM_IPCONNOK
     /tmp/ccCNyPsy.s:220    .rodata.GSM_IPCONNOK:00000000 $d
     /tmp/ccCNyPsy.s:230    .rodata.GSM_IPCONNFAIL:00000000 GSM_IPCONNFAIL
     /tmp/ccCNyPsy.s:227    .rodata.GSM_IPCONNFAIL:00000000 $d
     /tmp/ccCNyPsy.s:237    .rodata.GSM_IPCONNCLOSE:00000000 GSM_IPCONNCLOSE
     /tmp/ccCNyPsy.s:234    .rodata.GSM_IPCONNCLOSE:00000000 $d
     /tmp/ccCNyPsy.s:244    .rodata.GSM_SIM1:00000000 GSM_SIM1
     /tmp/ccCNyPsy.s:241    .rodata.GSM_SIM1:00000000 $d
     /tmp/ccCNyPsy.s:251    .rodata.GSM_SIM2:00000000 GSM_SIM2
     /tmp/ccCNyPsy.s:248    .rodata.GSM_SIM2:00000000 $d
     /tmp/ccCNyPsy.s:258    .rodata.GSM_SENDOK:00000000 GSM_SENDOK
     /tmp/ccCNyPsy.s:255    .rodata.GSM_SENDOK:00000000 $d
     /tmp/ccCNyPsy.s:264    .bss.prestadorSimState:00000000 prestadorSimState
     /tmp/ccCNyPsy.s:265    .bss.prestadorSimState:00000000 $d
     /tmp/ccCNyPsy.s:270    .data.prestadorSimTime:00000000 prestadorSimTime
     /tmp/ccCNyPsy.s:276    .bss.GSMCantSMS:00000000 GSMCantSMS
     /tmp/ccCNyPsy.s:277    .bss.GSMCantSMS:00000000 $d
     /tmp/ccCNyPsy.s:282    .bss.GSMCantSMS2:00000000 GSMCantSMS2
     /tmp/ccCNyPsy.s:283    .bss.GSMCantSMS2:00000000 $d
     /tmp/ccCNyPsy.s:288    .data.GSMnumSMS:00000000 GSMnumSMS
     /tmp/ccCNyPsy.s:294    .bss.GSMReadSMSState:00000000 GSMReadSMSState
     /tmp/ccCNyPsy.s:295    .bss.GSMReadSMSState:00000000 $d
                            *COM*:00000020 GSMReadSMScommand
                            *COM*:00000020 GSMReadSMSrepIn
     /tmp/ccCNyPsy.s:302    .bss.GSMrxSMSState:00000000 GSMrxSMSState
     /tmp/ccCNyPsy.s:303    .bss.GSMrxSMSState:00000000 $d
     /tmp/ccCNyPsy.s:308    .bss.prestadorSimSelect:00000000 prestadorSimSelect
     /tmp/ccCNyPsy.s:309    .bss.prestadorSimSelect:00000000 $d
     /tmp/ccCNyPsy.s:314    .bss.flagCloseIP:00000000 flagCloseIP
     /tmp/ccCNyPsy.s:315    .bss.flagCloseIP:00000000 $d
     /tmp/ccCNyPsy.s:317    .text.GSMProcess:00000000 $t
     /tmp/ccCNyPsy.s:322    .text.GSMProcess:00000000 GSMProcess
     /tmp/ccCNyPsy.s:375    .text.GSMProcess:00000044 $d
     /tmp/ccCNyPsy.s:385    .text.GSM_Start:00000000 $t
     /tmp/ccCNyPsy.s:390    .text.GSM_Start:00000000 GSM_Start
     /tmp/ccCNyPsy.s:564    .text.GSM_Start:000000f4 $d
     /tmp/ccCNyPsy.s:570    .text.GSM_Stop:00000000 $t
     /tmp/ccCNyPsy.s:575    .text.GSM_Stop:00000000 GSM_Stop
     /tmp/ccCNyPsy.s:621    .rodata:00000000 $d
     /tmp/ccCNyPsy.s:628    .text.GSMPrestador:00000000 $t
     /tmp/ccCNyPsy.s:633    .text.GSMPrestador:00000000 GSMPrestador
     /tmp/ccCNyPsy.s:4264   .text.GSM_SetSIM:00000000 GSM_SetSIM
     /tmp/ccCNyPsy.s:1782   .text.GSMSendCommand:00000000 GSMSendCommand
     /tmp/ccCNyPsy.s:1184   .text.GSMPrestador:00000378 $d
     /tmp/ccCNyPsy.s:1201   .text.GSMPrestador:000003b4 $t
     /tmp/ccCNyPsy.s:1223   .text.GSMPrestador:000003c8 $d
     /tmp/ccCNyPsy.s:1232   .text.GSMCloseIP:00000000 $t
ARM GAS  /tmp/ccCNyPsy.s 			page 222


     /tmp/ccCNyPsy.s:1237   .text.GSMCloseIP:00000000 GSMCloseIP
     /tmp/ccCNyPsy.s:1316   .text.GSMCloseIP:00000064 $d
     /tmp/ccCNyPsy.s:1354   .text.GSMReceive:00000000 $t
     /tmp/ccCNyPsy.s:1359   .text.GSMReceive:00000000 GSMReceive
     /tmp/ccCNyPsy.s:1749   .text.GSMReceive:00000274 $d
     /tmp/ccCNyPsy.s:1777   .text.GSMSendCommand:00000000 $t
     /tmp/ccCNyPsy.s:2004   .text.GSMSendCommand:0000013c $d
     /tmp/ccCNyPsy.s:2032   .text.GSM_Config:00000000 $t
     /tmp/ccCNyPsy.s:2037   .text.GSM_Config:00000000 GSM_Config
     /tmp/ccCNyPsy.s:2066   .rodata.GSM_Config:00000000 $d
     /tmp/ccCNyPsy.s:2570   .text.GSM_Config:000002c8 $d
     /tmp/ccCNyPsy.s:2595   .text.GSMSendSMS:00000000 $t
     /tmp/ccCNyPsy.s:2600   .text.GSMSendSMS:00000000 GSMSendSMS
     /tmp/ccCNyPsy.s:2883   .text.GSMSendSMS:000001b4 $d
     /tmp/ccCNyPsy.s:2956   .text.GSMConfigGPRS:00000000 $t
     /tmp/ccCNyPsy.s:2961   .text.GSMConfigGPRS:00000000 GSMConfigGPRS
     /tmp/ccCNyPsy.s:2993   .rodata.GSMConfigGPRS:00000000 $d
     /tmp/ccCNyPsy.s:3520   .text.GSMConfigGPRS:00000398 $d
     /tmp/ccCNyPsy.s:3548   .text.GSMConfigGPRS:00000400 $t
     /tmp/ccCNyPsy.s:4044   .text.GSMConfigGPRS:00000744 $d
     /tmp/ccCNyPsy.s:4062   .text.GSMConfigGPRS:00000784 $t
     /tmp/ccCNyPsy.s:4244   .text.GSMConfigGPRS:00000870 $d
     /tmp/ccCNyPsy.s:4259   .text.GSM_SetSIM:00000000 $t
     /tmp/ccCNyPsy.s:4353   .text.GSM_SetSIM:00000078 $d
     /tmp/ccCNyPsy.s:4364   .text.GSMSendIP:00000000 $t
     /tmp/ccCNyPsy.s:4369   .text.GSMSendIP:00000000 GSMSendIP
     /tmp/ccCNyPsy.s:4554   .text.GSMSendIP:00000110 $d
     /tmp/ccCNyPsy.s:4565   .text.GSMTimeoutCounters:00000000 $t
     /tmp/ccCNyPsy.s:4570   .text.GSMTimeoutCounters:00000000 GSMTimeoutCounters
     /tmp/ccCNyPsy.s:4697   .text.GSMTimeoutCounters:000000bc $d
     /tmp/ccCNyPsy.s:4725   .text.GSMrxSMS:00000000 $t
     /tmp/ccCNyPsy.s:4730   .text.GSMrxSMS:00000000 GSMrxSMS
     /tmp/ccCNyPsy.s:5262   .text.GSMrxSMS:00000350 $d
     /tmp/ccCNyPsy.s:5280   .text.GSMrxSMS:00000390 $t
     /tmp/ccCNyPsy.s:5658   .text.GSMrxSMS:000005f4 $d
     /tmp/ccCNyPsy.s:5677   .text.GSMConfigPDPGPRS:00000000 $t
     /tmp/ccCNyPsy.s:5682   .text.GSMConfigPDPGPRS:00000000 GSMConfigPDPGPRS
     /tmp/ccCNyPsy.s:5714   .rodata.GSMConfigPDPGPRS:00000000 $d
     /tmp/ccCNyPsy.s:6216   .text.GSMConfigPDPGPRS:0000032c $d
     /tmp/ccCNyPsy.s:6242   .text.GSMConfigPDPGPRS:0000038c $t
     /tmp/ccCNyPsy.s:6753   .text.GSMConfigPDPGPRS:000006b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ReadUsart1Buffer
usart1_have_data
usart1_mini_timeout
usart1_pckt_ready
usart1_pckt_bytes
Wait_ms
strncmp
strcpy
SIM900APNSIM1
SIM900USUARIOSIM1
SIM900CLAVESIM1
SIM900IPREMOTE
SIM900PORTREMOTE
ARM GAS  /tmp/ccCNyPsy.s 			page 223


SIM900APNSIM2
SIM900USUARIOSIM2
SIM900CLAVESIM2
strncpy
Usart1Send
memcpy
strcat
strlen
sprintf
