ARM GAS  /tmp/ccNuUijR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"sim900_800.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ src/sim900_800.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip src/sim900_800.o -g -gdwarf-2 -O0 -Wall
  24              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.comm	buffUARTGSMrx2,256,4
  55              		.comm	PacketReadyUARTGSM,1,1
  56              		.global	GSMStartState
  57              		.section	.bss.GSMStartState,"aw",%nobits
ARM GAS  /tmp/ccNuUijR.s 			page 2


  58              		.type	GSMStartState, %object
  59              		.size	GSMStartState, 1
  60              	GSMStartState:
  61 0000 00       		.space	1
  62              		.comm	GSMStartTime,2,2
  63              		.comm	GSMGeneralTimeOut,2,2
  64              		.global	GSMSendCommandState
  65              		.section	.bss.GSMSendCommandState,"aw",%nobits
  66              		.type	GSMSendCommandState, %object
  67              		.size	GSMSendCommandState, 1
  68              	GSMSendCommandState:
  69 0000 00       		.space	1
  70              		.global	GSMSendCommandFlag
  71              		.section	.bss.GSMSendCommandFlag,"aw",%nobits
  72              		.type	GSMSendCommandFlag, %object
  73              		.size	GSMSendCommandFlag, 1
  74              	GSMSendCommandFlag:
  75 0000 00       		.space	1
  76              		.comm	GSMSendCommandTimeOut,2,2
  77              		.global	GSMSendCommandIntento
  78              		.section	.bss.GSMSendCommandIntento,"aw",%nobits
  79              		.type	GSMSendCommandIntento, %object
  80              		.size	GSMSendCommandIntento, 1
  81              	GSMSendCommandIntento:
  82 0000 00       		.space	1
  83              		.global	GSMSendSMSState
  84              		.section	.bss.GSMSendSMSState,"aw",%nobits
  85              		.type	GSMSendSMSState, %object
  86              		.size	GSMSendSMSState, 1
  87              	GSMSendSMSState:
  88 0000 00       		.space	1
  89              		.global	GSMSendSMSFlag
  90              		.section	.bss.GSMSendSMSFlag,"aw",%nobits
  91              		.type	GSMSendSMSFlag, %object
  92              		.size	GSMSendSMSFlag, 1
  93              	GSMSendSMSFlag:
  94 0000 00       		.space	1
  95              		.comm	GSMSendSMSTimeOut,2,2
  96              		.comm	GSMSendSMSbuffAux,32,4
  97              		.global	GSMConfigState
  98              		.section	.bss.GSMConfigState,"aw",%nobits
  99              		.type	GSMConfigState, %object
 100              		.size	GSMConfigState, 1
 101              	GSMConfigState:
 102 0000 00       		.space	1
 103              		.comm	GSMConfigTimeOut,2,2
 104              		.comm	GSMConfigTime,2,2
 105              		.comm	GSMConfigGPRSTimeOut,2,2
 106              		.global	GSMConfigGPRSState
 107              		.section	.bss.GSMConfigGPRSState,"aw",%nobits
 108              		.type	GSMConfigGPRSState, %object
 109              		.size	GSMConfigGPRSState, 1
 110              	GSMConfigGPRSState:
 111 0000 00       		.space	1
 112              		.global	GSMConfigGPRSflag
 113              		.section	.bss.GSMConfigGPRSflag,"aw",%nobits
 114              		.type	GSMConfigGPRSflag, %object
ARM GAS  /tmp/ccNuUijR.s 			page 3


 115              		.size	GSMConfigGPRSflag, 1
 116              	GSMConfigGPRSflag:
 117 0000 00       		.space	1
 118              		.comm	GSMbuffStatus,32,4
 119              		.comm	GSMbuffGPRSCommand,64,4
 120              		.comm	GSMIPadd,16,4
 121              		.global	GPRSrssi
 122              		.section	.data.GPRSrssi,"aw",%progbits
 123              		.type	GPRSrssi, %object
 124              		.size	GPRSrssi, 1
 125              	GPRSrssi:
 126 0000 63       		.byte	99
 127              		.global	GSMSendIPState
 128              		.section	.bss.GSMSendIPState,"aw",%nobits
 129              		.type	GSMSendIPState, %object
 130              		.size	GSMSendIPState, 1
 131              	GSMSendIPState:
 132 0000 00       		.space	1
 133              		.global	GSMSendIPFlag
 134              		.section	.bss.GSMSendIPFlag,"aw",%nobits
 135              		.type	GSMSendIPFlag, %object
 136              		.size	GSMSendIPFlag, 1
 137              	GSMSendIPFlag:
 138 0000 00       		.space	1
 139              		.comm	GSMSendIPTimeOut,2,2
 140              		.comm	GSMSendIPbuffAux,32,4
 141              		.comm	GSMbuffRtaCommand,256,4
 142              		.global	GSM_OK
 143              		.section	.rodata.GSM_OK,"a",%progbits
 144              		.align	2
 145              		.type	GSM_OK, %object
 146              		.size	GSM_OK, 3
 147              	GSM_OK:
 148 0000 4F4B00   		.ascii	"OK\000"
 149              		.global	GSM_ERR
 150              		.section	.rodata.GSM_ERR,"a",%progbits
 151              		.align	2
 152              		.type	GSM_ERR, %object
 153              		.size	GSM_ERR, 6
 154              	GSM_ERR:
 155 0000 4552524F 		.ascii	"ERROR\000"
 155      5200
 156              		.global	GSM_CMGF
 157              		.section	.rodata.GSM_CMGF,"a",%progbits
 158              		.align	2
 159              		.type	GSM_CMGF, %object
 160              		.size	GSM_CMGF, 7
 161              	GSM_CMGF:
 162 0000 2B434D47 		.ascii	"+CMGF:\000"
 162      463A00
 163              		.global	GSM_IPSTATE
 164              		.section	.rodata.GSM_IPSTATE,"a",%progbits
 165              		.align	2
 166              		.type	GSM_IPSTATE, %object
 167              		.size	GSM_IPSTATE, 7
 168              	GSM_IPSTATE:
 169 0000 53544154 		.ascii	"STATE:\000"
ARM GAS  /tmp/ccNuUijR.s 			page 4


 169      453A00
 170              		.global	GSM_IPINITIAL
 171              		.section	.rodata.GSM_IPINITIAL,"a",%progbits
 172              		.align	2
 173              		.type	GSM_IPINITIAL, %object
 174              		.size	GSM_IPINITIAL, 11
 175              	GSM_IPINITIAL:
 176 0000 49502049 		.ascii	"IP INITIAL\000"
 176      4E495449 
 176      414C00
 177              		.global	GSM_IPSTART
 178              		.section	.rodata.GSM_IPSTART,"a",%progbits
 179              		.align	2
 180              		.type	GSM_IPSTART, %object
 181              		.size	GSM_IPSTART, 9
 182              	GSM_IPSTART:
 183 0000 49502053 		.ascii	"IP START\000"
 183      54415254 
 183      00
 184              		.global	GSM_IPGPRSACT
 185              		.section	.rodata.GSM_IPGPRSACT,"a",%progbits
 186              		.align	2
 187              		.type	GSM_IPGPRSACT, %object
 188              		.size	GSM_IPGPRSACT, 11
 189              	GSM_IPGPRSACT:
 190 0000 49502047 		.ascii	"IP GPRSACT\000"
 190      50525341 
 190      435400
 191              		.global	GSM_IPSTATUS
 192              		.section	.rodata.GSM_IPSTATUS,"a",%progbits
 193              		.align	2
 194              		.type	GSM_IPSTATUS, %object
 195              		.size	GSM_IPSTATUS, 10
 196              	GSM_IPSTATUS:
 197 0000 49502053 		.ascii	"IP STATUS\000"
 197      54415455 
 197      5300
 198              		.global	GSM_IPCONNECTING
 199              		.section	.rodata.GSM_IPCONNECTING,"a",%progbits
 200              		.align	2
 201              		.type	GSM_IPCONNECTING, %object
 202              		.size	GSM_IPCONNECTING, 15
 203              	GSM_IPCONNECTING:
 204 0000 54435020 		.ascii	"TCP CONNECTING\000"
 204      434F4E4E 
 204      45435449 
 204      4E4700
 205              		.global	GSM_IPCONNOK
 206              		.section	.rodata.GSM_IPCONNOK,"a",%progbits
 207              		.align	2
 208              		.type	GSM_IPCONNOK, %object
 209              		.size	GSM_IPCONNOK, 11
 210              	GSM_IPCONNOK:
 211 0000 434F4E4E 		.ascii	"CONNECT OK\000"
 211      45435420 
 211      4F4B00
 212              		.global	GSM_IPCONNFAIL
ARM GAS  /tmp/ccNuUijR.s 			page 5


 213              		.section	.rodata.GSM_IPCONNFAIL,"a",%progbits
 214              		.align	2
 215              		.type	GSM_IPCONNFAIL, %object
 216              		.size	GSM_IPCONNFAIL, 13
 217              	GSM_IPCONNFAIL:
 218 0000 434F4E4E 		.ascii	"CONNECT FAIL\000"
 218      45435420 
 218      4641494C 
 218      00
 219              		.global	GSM_IPCONNCLOSE
 220              		.section	.rodata.GSM_IPCONNCLOSE,"a",%progbits
 221              		.align	2
 222              		.type	GSM_IPCONNCLOSE, %object
 223              		.size	GSM_IPCONNCLOSE, 11
 224              	GSM_IPCONNCLOSE:
 225 0000 54435020 		.ascii	"TCP CLOSED\000"
 225      434C4F53 
 225      454400
 226              		.global	GSM_SIM1
 227              		.section	.rodata.GSM_SIM1,"a",%progbits
 228              		.align	2
 229              		.type	GSM_SIM1, %object
 230              		.size	GSM_SIM1, 5
 231              	GSM_SIM1:
 232 0000 53494D31 		.ascii	"SIM1\000"
 232      00
 233              		.global	GSM_SIM2
 234              		.section	.rodata.GSM_SIM2,"a",%progbits
 235              		.align	2
 236              		.type	GSM_SIM2, %object
 237              		.size	GSM_SIM2, 5
 238              	GSM_SIM2:
 239 0000 53494D32 		.ascii	"SIM2\000"
 239      00
 240              		.global	GSM_SENDOK
 241              		.section	.rodata.GSM_SENDOK,"a",%progbits
 242              		.align	2
 243              		.type	GSM_SENDOK, %object
 244              		.size	GSM_SENDOK, 8
 245              	GSM_SENDOK:
 246 0000 53454E44 		.ascii	"SEND OK\000"
 246      204F4B00 
 247              		.global	prestadorSimState
 248              		.section	.bss.prestadorSimState,"aw",%nobits
 249              		.type	prestadorSimState, %object
 250              		.size	prestadorSimState, 1
 251              	prestadorSimState:
 252 0000 00       		.space	1
 253              		.global	prestadorSimTime
 254              		.section	.data.prestadorSimTime,"aw",%progbits
 255              		.type	prestadorSimTime, %object
 256              		.size	prestadorSimTime, 1
 257              	prestadorSimTime:
 258 0000 FA       		.byte	-6
 259              		.global	GSMCantSMS
 260              		.section	.bss.GSMCantSMS,"aw",%nobits
 261              		.type	GSMCantSMS, %object
ARM GAS  /tmp/ccNuUijR.s 			page 6


 262              		.size	GSMCantSMS, 1
 263              	GSMCantSMS:
 264 0000 00       		.space	1
 265              		.global	GSMCantSMS2
 266              		.section	.bss.GSMCantSMS2,"aw",%nobits
 267              		.type	GSMCantSMS2, %object
 268              		.size	GSMCantSMS2, 1
 269              	GSMCantSMS2:
 270 0000 00       		.space	1
 271              		.global	GSMnumSMS
 272              		.section	.data.GSMnumSMS,"aw",%progbits
 273              		.type	GSMnumSMS, %object
 274              		.size	GSMnumSMS, 1
 275              	GSMnumSMS:
 276 0000 01       		.byte	1
 277              		.global	GSMReadSMSState
 278              		.section	.bss.GSMReadSMSState,"aw",%nobits
 279              		.type	GSMReadSMSState, %object
 280              		.size	GSMReadSMSState, 1
 281              	GSMReadSMSState:
 282 0000 00       		.space	1
 283              		.comm	GSMReadSMScommand,32,4
 284              		.comm	GSMReadSMSrepIn,32,4
 285              		.global	prestadorSimSelect
 286              		.section	.bss.prestadorSimSelect,"aw",%nobits
 287              		.type	prestadorSimSelect, %object
 288              		.size	prestadorSimSelect, 1
 289              	prestadorSimSelect:
 290 0000 00       		.space	1
 291              		.global	flagCloseIP
 292              		.section	.bss.flagCloseIP,"aw",%nobits
 293              		.type	flagCloseIP, %object
 294              		.size	flagCloseIP, 1
 295              	flagCloseIP:
 296 0000 00       		.space	1
 297              		.section	.text.GSMProcess,"ax",%progbits
 298              		.align	2
 299              		.global	GSMProcess
 300              		.code	16
 301              		.thumb_func
 302              		.type	GSMProcess, %function
 303              	GSMProcess:
 304              	.LFB20:
 305              		.file 1 "src/sim900_800.c"
   1:src/sim900_800.c **** 
   2:src/sim900_800.c **** #include "sim900_800.h"
   3:src/sim900_800.c **** #include "uart.h"
   4:src/sim900_800.c **** #include "tim.h"
   5:src/sim900_800.c **** #include "ESP8266.h"
   6:src/sim900_800.c **** #include "funcs_gsm.h"		//para string flags
   7:src/sim900_800.c **** #include "flash_program.h"
   8:src/sim900_800.c **** 
   9:src/sim900_800.c **** #include <stdlib.h>
  10:src/sim900_800.c **** #include <stdio.h>
  11:src/sim900_800.c **** #include <string.h>
  12:src/sim900_800.c **** 
  13:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 7


  14:src/sim900_800.c **** //PARAMETROS
  15:src/sim900_800.c **** extern parameters_typedef param_struct;
  16:src/sim900_800.c **** #define num_tel_rep		param_struct.num_reportar
  17:src/sim900_800.c **** #define timer_rep			param_struct.timer_reportar
  18:src/sim900_800.c **** #define send_energy		param_struct.send_energy_flag
  19:src/sim900_800.c **** 
  20:src/sim900_800.c **** 
  21:src/sim900_800.c **** //UART GSM.
  22:src/sim900_800.c **** //RX.
  23:src/sim900_800.c **** volatile char buffUARTGSMrx2[buffUARTGSMrx_dimension];
  24:src/sim900_800.c **** volatile char PacketReadyUARTGSM;
  25:src/sim900_800.c **** //TX.
  26:src/sim900_800.c **** 
  27:src/sim900_800.c **** //GSM Start.
  28:src/sim900_800.c **** unsigned char GSMStartState = 0;
  29:src/sim900_800.c **** volatile unsigned short GSMStartTime;
  30:src/sim900_800.c **** volatile unsigned short GSMGeneralTimeOut;
  31:src/sim900_800.c **** 
  32:src/sim900_800.c **** //GSM SendCommand.
  33:src/sim900_800.c **** char GSMSendCommandState = 0;
  34:src/sim900_800.c **** char GSMSendCommandFlag = 0;
  35:src/sim900_800.c **** volatile unsigned short GSMSendCommandTimeOut;
  36:src/sim900_800.c **** char GSMSendCommandIntento = 0;
  37:src/sim900_800.c **** 
  38:src/sim900_800.c **** //GSM SendSMS
  39:src/sim900_800.c **** char GSMSendSMSState = 0;
  40:src/sim900_800.c **** char GSMSendSMSFlag = 0;
  41:src/sim900_800.c **** volatile unsigned short GSMSendSMSTimeOut;
  42:src/sim900_800.c **** char GSMSendSMSbuffAux[32];
  43:src/sim900_800.c **** 
  44:src/sim900_800.c **** //GSM Config.
  45:src/sim900_800.c **** char GSMConfigState = 0;
  46:src/sim900_800.c **** volatile unsigned short GSMConfigTimeOut;
  47:src/sim900_800.c **** volatile unsigned short GSMConfigTime;
  48:src/sim900_800.c **** 
  49:src/sim900_800.c **** //GPRS Config.
  50:src/sim900_800.c **** unsigned short GSMConfigGPRSTimeOut;
  51:src/sim900_800.c **** char GSMConfigGPRSState = 0;
  52:src/sim900_800.c **** char GSMConfigGPRSflag = 0;
  53:src/sim900_800.c **** char GSMbuffStatus[32];
  54:src/sim900_800.c **** char GSMbuffGPRSCommand[64];
  55:src/sim900_800.c **** char GSMIPadd[16];
  56:src/sim900_800.c **** unsigned char GPRSrssi = 99;
  57:src/sim900_800.c **** 
  58:src/sim900_800.c **** //GSM SendIP
  59:src/sim900_800.c **** char GSMSendIPState = 0;
  60:src/sim900_800.c **** char GSMSendIPFlag = 0;
  61:src/sim900_800.c **** volatile unsigned short GSMSendIPTimeOut;
  62:src/sim900_800.c **** char GSMSendIPbuffAux[32];
  63:src/sim900_800.c **** 
  64:src/sim900_800.c **** char GSMbuffRtaCommand[buffUARTGSMrx_dimension];
  65:src/sim900_800.c **** 
  66:src/sim900_800.c **** 
  67:src/sim900_800.c **** const char GSM_OK[] 	= "OK";
  68:src/sim900_800.c **** const char GSM_ERR[] 	= "ERROR";
  69:src/sim900_800.c **** 
  70:src/sim900_800.c **** const char GSM_CMGF[] = "+CMGF:";
ARM GAS  /tmp/ccNuUijR.s 			page 8


  71:src/sim900_800.c **** const char GSM_IPSTATE[] = "STATE:";
  72:src/sim900_800.c **** 
  73:src/sim900_800.c **** //Estados GPRS.
  74:src/sim900_800.c **** const char GSM_IPINITIAL[] 		= "IP INITIAL";
  75:src/sim900_800.c **** const char GSM_IPSTART[] 		= "IP START";
  76:src/sim900_800.c **** const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
  77:src/sim900_800.c **** const char GSM_IPSTATUS[] 		= "IP STATUS";
  78:src/sim900_800.c **** const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
  79:src/sim900_800.c **** const char GSM_IPCONNOK[] 		= "CONNECT OK";
  80:src/sim900_800.c **** const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
  81:src/sim900_800.c **** const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
  82:src/sim900_800.c **** 
  83:src/sim900_800.c **** const char GSM_SIM1[] = "SIM1";
  84:src/sim900_800.c **** const char GSM_SIM2[] = "SIM2";
  85:src/sim900_800.c **** const char GSM_SENDOK[] = "SEND OK";
  86:src/sim900_800.c **** // const char GSM_SENDOK[] = "000: ACK";
  87:src/sim900_800.c **** unsigned char prestadorSimState = 0;
  88:src/sim900_800.c **** unsigned char prestadorSimTime = 250;
  89:src/sim900_800.c **** 
  90:src/sim900_800.c **** 
  91:src/sim900_800.c **** //Recepcion de SMS.
  92:src/sim900_800.c **** unsigned char GSMCantSMS = 0;
  93:src/sim900_800.c **** unsigned char GSMCantSMS2 = 0;
  94:src/sim900_800.c **** unsigned char GSMnumSMS = 1;
  95:src/sim900_800.c **** char GSMReadSMSState = 0;
  96:src/sim900_800.c **** char GSMReadSMScommand[32];
  97:src/sim900_800.c **** char GSMReadSMSrepIn[32];
  98:src/sim900_800.c **** // unsigned char GSMrxSMSState = 0;
  99:src/sim900_800.c **** unsigned char prestadorSimSelect = 0;
 100:src/sim900_800.c **** unsigned char flagCloseIP = 0;
 101:src/sim900_800.c **** 
 102:src/sim900_800.c **** //Config SIM900.
 103:src/sim900_800.c **** extern char SIM900APNSIM1[64];
 104:src/sim900_800.c **** extern char SIM900USUARIOSIM1[20];
 105:src/sim900_800.c **** extern char SIM900CLAVESIM1[20];
 106:src/sim900_800.c **** 
 107:src/sim900_800.c **** extern char SIM900APNSIM2[64];
 108:src/sim900_800.c **** extern char SIM900USUARIOSIM2[20];
 109:src/sim900_800.c **** extern char SIM900CLAVESIM2[20];
 110:src/sim900_800.c **** extern char SIM900IPREMOTE[20];
 111:src/sim900_800.c **** extern char SIM900PORTREMOTE[20];
 112:src/sim900_800.c **** 
 113:src/sim900_800.c **** 
 114:src/sim900_800.c **** extern volatile unsigned char usart1_mini_timeout;
 115:src/sim900_800.c **** extern volatile unsigned char usart1_pckt_ready;
 116:src/sim900_800.c **** extern volatile unsigned char usart1_have_data;
 117:src/sim900_800.c **** extern unsigned char usart1_pckt_bytes;
 118:src/sim900_800.c **** 
 119:src/sim900_800.c **** #define gsm_mini_timeout	usart1_mini_timeout
 120:src/sim900_800.c **** #define gsm_pckt_ready		usart1_pckt_ready
 121:src/sim900_800.c **** #define gsm_have_data		usart1_have_data
 122:src/sim900_800.c **** #define gsm_pckt_bytes		usart1_pckt_bytes
 123:src/sim900_800.c **** 
 124:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 125:src/sim900_800.c **** extern volatile unsigned char usart2_mini_timeout;
 126:src/sim900_800.c **** extern volatile unsigned char usart2_pckt_ready;
 127:src/sim900_800.c **** extern volatile unsigned char usart2_have_data;
ARM GAS  /tmp/ccNuUijR.s 			page 9


 128:src/sim900_800.c **** extern unsigned char usart2_pckt_bytes;
 129:src/sim900_800.c **** #endif
 130:src/sim900_800.c **** 
 131:src/sim900_800.c **** //Procesa respuestas del modulo GSM esperando el final de linea por timeout
 132:src/sim900_800.c **** //carga el buffer buffUARTGSMrx2 y avisa con el flag PacketReadyUARTGSM
 133:src/sim900_800.c **** void GSMProcess (void)
 134:src/sim900_800.c **** {
 306              		.loc 1 134 0
 307              		.cfi_startproc
 308 0000 10B5     		push	{r4, lr}	@
 309              	.LCFI0:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 135:src/sim900_800.c **** 	if ((gsm_have_data) && (!gsm_mini_timeout))
 313              		.loc 1 135 0
 314 0002 104B     		ldr	r3, .L4	@ tmp113,
 315 0004 1B78     		ldrb	r3, [r3]	@ tmp114, usart1_have_data
 316 0006 DBB2     		uxtb	r3, r3	@ D.7882, tmp114
 317 0008 002B     		cmp	r3, #0	@ D.7882,
 318 000a 18D0     		beq	.L3	@,
 319              		.loc 1 135 0 is_stmt 0 discriminator 1
 320 000c 0E4B     		ldr	r3, .L4+4	@ tmp115,
 321 000e 1B78     		ldrb	r3, [r3]	@ tmp116, usart1_mini_timeout
 322 0010 DBB2     		uxtb	r3, r3	@ D.7882, tmp116
 323 0012 002B     		cmp	r3, #0	@ D.7882,
 324 0014 13D1     		bne	.L3	@,
 136:src/sim900_800.c **** 	{
 137:src/sim900_800.c **** 		gsm_have_data = 0;
 325              		.loc 1 137 0 is_stmt 1
 326 0016 0B4B     		ldr	r3, .L4	@ tmp117,
 327 0018 0022     		movs	r2, #0	@ tmp118,
 328 001a 1A70     		strb	r2, [r3]	@ tmp119, usart1_have_data
 138:src/sim900_800.c **** 		gsm_pckt_ready = 1;
 329              		.loc 1 138 0
 330 001c 0B4B     		ldr	r3, .L4+8	@ tmp120,
 331 001e 0122     		movs	r2, #1	@ tmp121,
 332 0020 1A70     		strb	r2, [r3]	@ tmp122, usart1_pckt_ready
 139:src/sim900_800.c **** 		gsm_pckt_bytes = ReadUsart1Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 333              		.loc 1 139 0
 334 0022 8023     		movs	r3, #128	@ tmp132,
 335 0024 5A00     		lsls	r2, r3, #1	@ tmp123, tmp132,
 336 0026 0A4B     		ldr	r3, .L4+12	@ tmp124,
 337 0028 1100     		movs	r1, r2	@, tmp123
 338 002a 1800     		movs	r0, r3	@, tmp124
 339 002c FFF7FEFF 		bl	ReadUsart1Buffer	@
 340 0030 0300     		movs	r3, r0	@ tmp125,
 341 0032 1A00     		movs	r2, r3	@ D.7882, tmp126
 342 0034 074B     		ldr	r3, .L4+16	@ tmp127,
 343 0036 1A70     		strb	r2, [r3]	@ tmp128, usart1_pckt_bytes
 140:src/sim900_800.c **** 		PacketReadyUARTGSM = 1;
 344              		.loc 1 140 0
 345 0038 074B     		ldr	r3, .L4+20	@ tmp129,
 346 003a 0122     		movs	r2, #1	@ tmp130,
 347 003c 1A70     		strb	r2, [r3]	@ tmp131, PacketReadyUARTGSM
 348              	.L3:
 141:src/sim900_800.c **** //		GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsi
ARM GAS  /tmp/ccNuUijR.s 			page 10


 142:src/sim900_800.c **** 	}
 143:src/sim900_800.c **** 
 144:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 145:src/sim900_800.c **** 	if ((usart2_have_data) && (!usart2_mini_timeout))
 146:src/sim900_800.c **** 	{
 147:src/sim900_800.c **** 		usart2_have_data = 0;
 148:src/sim900_800.c **** 		usart2_pckt_ready = 1;
 149:src/sim900_800.c **** 		usart2_pckt_bytes = ReadUsart2Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 150:src/sim900_800.c **** 	}
 151:src/sim900_800.c **** #endif
 152:src/sim900_800.c **** }
 349              		.loc 1 152 0
 350 003e C046     		nop
 351              		@ sp needed	@
 352 0040 10BD     		pop	{r4, pc}
 353              	.L5:
 354 0042 C046     		.align	2
 355              	.L4:
 356 0044 00000000 		.word	usart1_have_data
 357 0048 00000000 		.word	usart1_mini_timeout
 358 004c 00000000 		.word	usart1_pckt_ready
 359 0050 00000000 		.word	buffUARTGSMrx2
 360 0054 00000000 		.word	usart1_pckt_bytes
 361 0058 00000000 		.word	PacketReadyUARTGSM
 362              		.cfi_endproc
 363              	.LFE20:
 364              		.size	GSMProcess, .-GSMProcess
 365              		.section	.text.GSM_Start,"ax",%progbits
 366              		.align	2
 367              		.global	GSM_Start
 368              		.code	16
 369              		.thumb_func
 370              		.type	GSM_Start, %function
 371              	GSM_Start:
 372              	.LFB21:
 153:src/sim900_800.c **** 
 154:src/sim900_800.c **** 
 155:src/sim900_800.c **** //------------------------------------//
 156:src/sim900_800.c **** //
 157:src/sim900_800.c **** //Wait: 1
 158:src/sim900_800.c **** //OK: 	2
 159:src/sim900_800.c **** //ERR:	3
 160:src/sim900_800.c **** //TO:	4
 161:src/sim900_800.c **** //------------------------------------//
 162:src/sim900_800.c **** /*
 163:src/sim900_800.c **** unsigned char GSM_Start(void)
 164:src/sim900_800.c **** {
 165:src/sim900_800.c **** 
 166:src/sim900_800.c **** 	if (!GSM_STATUS || (GSMStartState > 1))
 167:src/sim900_800.c **** 	{
 168:src/sim900_800.c **** 		switch(GSMStartState)
 169:src/sim900_800.c **** 		{
 170:src/sim900_800.c **** 			case 0:
 171:src/sim900_800.c **** 				GSMStartTime = 40;
 172:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 173:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 174:src/sim900_800.c **** 				GSMStartState++;
ARM GAS  /tmp/ccNuUijR.s 			page 11


 175:src/sim900_800.c **** 				break;
 176:src/sim900_800.c **** 			case 1:
 177:src/sim900_800.c **** 				if(GSMStartTime == 0) //Espera 4 segugundos.
 178:src/sim900_800.c **** 				{
 179:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 180:src/sim900_800.c **** 					GSM_PWRKEY_OFF;
 181:src/sim900_800.c **** 					GSMStartTime = 100; //10 segundos.
 182:src/sim900_800.c **** 					GSMStartState++;
 183:src/sim900_800.c **** 				}
 184:src/sim900_800.c **** 				break;
 185:src/sim900_800.c **** 			case 2:
 186:src/sim900_800.c **** 				if(GSM_STATUS)
 187:src/sim900_800.c **** 				{
 188:src/sim900_800.c **** 					//Encendio.
 189:src/sim900_800.c **** 					LED_NETLIGHT_ON;
 190:src/sim900_800.c **** 					GSMStartState++;
 191:src/sim900_800.c **** 					GSMStartTime = 30;
 192:src/sim900_800.c **** 				}
 193:src/sim900_800.c **** 				if(GSMStartTime == 0)
 194:src/sim900_800.c **** 				{
 195:src/sim900_800.c **** 					//Se agoto el tiempo de espera.
 196:src/sim900_800.c **** 					GSMStartState = 0;
 197:src/sim900_800.c **** 					return 4;
 198:src/sim900_800.c **** 				}
 199:src/sim900_800.c **** 				break;
 200:src/sim900_800.c **** 			case 3:
 201:src/sim900_800.c **** 				if(GSMStartTime == 0)
 202:src/sim900_800.c **** 				{
 203:src/sim900_800.c **** 					//1 segundo mas.
 204:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 205:src/sim900_800.c **** 					GSM_PWRKEY_ON;
 206:src/sim900_800.c **** 					GSMStartState = 0;
 207:src/sim900_800.c **** 					return 2;
 208:src/sim900_800.c **** 				}
 209:src/sim900_800.c **** 				break;
 210:src/sim900_800.c **** 		}
 211:src/sim900_800.c **** 	}
 212:src/sim900_800.c **** 	if (GSM_STATUS || (GSMStartState == 0))
 213:src/sim900_800.c **** 	{
 214:src/sim900_800.c **** 		return 2;
 215:src/sim900_800.c **** 	}
 216:src/sim900_800.c **** 	return 1;
 217:src/sim900_800.c **** }
 218:src/sim900_800.c **** */
 219:src/sim900_800.c **** 
 220:src/sim900_800.c **** //GSM_Start() contesta:
 221:src/sim900_800.c **** //0 trabajando
 222:src/sim900_800.c **** //1 terminado OK
 223:src/sim900_800.c **** //2 ERROR
 224:src/sim900_800.c **** //3 Timeout
 225:src/sim900_800.c **** unsigned char GSM_Start (void)
 226:src/sim900_800.c **** {
 373              		.loc 1 226 0
 374              		.cfi_startproc
 227:src/sim900_800.c **** 	switch(GSMStartState)
 375              		.loc 1 227 0
 376 0000 3C4B     		ldr	r3, .L23	@ tmp137,
ARM GAS  /tmp/ccNuUijR.s 			page 12


 377 0002 1B78     		ldrb	r3, [r3]	@ D.7883, GSMStartState
 378 0004 012B     		cmp	r3, #1	@ D.7884,
 379 0006 1BD0     		beq	.L8	@,
 380 0008 02DC     		bgt	.L9	@,
 381 000a 002B     		cmp	r3, #0	@ D.7884,
 382 000c 05D0     		beq	.L10	@,
 383 000e 65E0     		b	.L7	@
 384              	.L9:
 385 0010 022B     		cmp	r3, #2	@ D.7884,
 386 0012 2FD0     		beq	.L11	@,
 387 0014 032B     		cmp	r3, #3	@ D.7884,
 388 0016 50D0     		beq	.L12	@,
 389 0018 60E0     		b	.L7	@
 390              	.L10:
 228:src/sim900_800.c **** 	{
 229:src/sim900_800.c **** 		case 0:
 230:src/sim900_800.c **** 			//Levanto PWRKEY
 231:src/sim900_800.c **** 			LED_NETLIGHT_ON;
 391              		.loc 1 231 0
 392 001a 9023     		movs	r3, #144	@ tmp192,
 393 001c DB05     		lsls	r3, r3, #23	@ D.7885, tmp192,
 394 001e 8022     		movs	r2, #128	@ tmp193,
 395 0020 5201     		lsls	r2, r2, #5	@ tmp138, tmp193,
 396 0022 9A61     		str	r2, [r3, #24]	@ tmp138, _31->BSRR
 232:src/sim900_800.c **** 			GSMStartTime = 100;
 397              		.loc 1 232 0
 398 0024 344B     		ldr	r3, .L23+4	@ tmp139,
 399 0026 6422     		movs	r2, #100	@ tmp140,
 400 0028 1A80     		strh	r2, [r3]	@ tmp141, GSMStartTime
 233:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 401              		.loc 1 233 0
 402 002a 9023     		movs	r3, #144	@ tmp194,
 403 002c DB05     		lsls	r3, r3, #23	@ D.7885, tmp194,
 404 002e 8022     		movs	r2, #128	@ tmp142,
 405 0030 9A61     		str	r2, [r3, #24]	@ tmp142, _34->BSRR
 234:src/sim900_800.c **** 			GSMStartState++;
 406              		.loc 1 234 0
 407 0032 304B     		ldr	r3, .L23	@ tmp143,
 408 0034 1B78     		ldrb	r3, [r3]	@ D.7883, GSMStartState
 409 0036 0133     		adds	r3, r3, #1	@ tmp144,
 410 0038 DAB2     		uxtb	r2, r3	@ D.7883, tmp144
 411 003a 2E4B     		ldr	r3, .L23	@ tmp145,
 412 003c 1A70     		strb	r2, [r3]	@ tmp146, GSMStartState
 235:src/sim900_800.c **** 			break;
 413              		.loc 1 235 0
 414 003e 56E0     		b	.L13	@
 415              	.L8:
 236:src/sim900_800.c **** 
 237:src/sim900_800.c **** 		case 1:
 238:src/sim900_800.c **** 			//Bajo PWRKEY
 239:src/sim900_800.c **** 			if(GSMStartTime == 0) //Espera 100 mseg
 416              		.loc 1 239 0
 417 0040 2D4B     		ldr	r3, .L23+4	@ tmp147,
 418 0042 1B88     		ldrh	r3, [r3]	@ tmp148, GSMStartTime
 419 0044 9BB2     		uxth	r3, r3	@ D.7886, tmp148
 420 0046 002B     		cmp	r3, #0	@ D.7886,
 421 0048 4CD1     		bne	.L20	@,
ARM GAS  /tmp/ccNuUijR.s 			page 13


 240:src/sim900_800.c **** 			{
 241:src/sim900_800.c **** 				LED_NETLIGHT_OFF;
 422              		.loc 1 241 0
 423 004a 9023     		movs	r3, #144	@ tmp187,
 424 004c DB05     		lsls	r3, r3, #23	@ D.7885, tmp187,
 425 004e 8022     		movs	r2, #128	@ tmp188,
 426 0050 5205     		lsls	r2, r2, #21	@ tmp149, tmp188,
 427 0052 9A61     		str	r2, [r3, #24]	@ tmp149, _41->BSRR
 242:src/sim900_800.c **** 				GSM_PWRKEY_OFF;
 428              		.loc 1 242 0
 429 0054 9023     		movs	r3, #144	@ tmp189,
 430 0056 DB05     		lsls	r3, r3, #23	@ D.7885, tmp189,
 431 0058 8022     		movs	r2, #128	@ tmp190,
 432 005a 1204     		lsls	r2, r2, #16	@ tmp150, tmp190,
 433 005c 9A61     		str	r2, [r3, #24]	@ tmp150, _43->BSRR
 243:src/sim900_800.c **** 				GSMStartTime = 4000; //hasta 4 segundos.
 434              		.loc 1 243 0
 435 005e 264B     		ldr	r3, .L23+4	@ tmp151,
 436 0060 FA22     		movs	r2, #250	@ tmp191,
 437 0062 1201     		lsls	r2, r2, #4	@ tmp152, tmp191,
 438 0064 1A80     		strh	r2, [r3]	@ tmp153, GSMStartTime
 244:src/sim900_800.c **** 				GSMStartState++;
 439              		.loc 1 244 0
 440 0066 234B     		ldr	r3, .L23	@ tmp154,
 441 0068 1B78     		ldrb	r3, [r3]	@ D.7883, GSMStartState
 442 006a 0133     		adds	r3, r3, #1	@ tmp155,
 443 006c DAB2     		uxtb	r2, r3	@ D.7883, tmp155
 444 006e 214B     		ldr	r3, .L23	@ tmp156,
 445 0070 1A70     		strb	r2, [r3]	@ tmp157, GSMStartState
 245:src/sim900_800.c **** 			}
 246:src/sim900_800.c **** 			break;
 446              		.loc 1 246 0
 447 0072 37E0     		b	.L20	@
 448              	.L11:
 247:src/sim900_800.c **** 
 248:src/sim900_800.c **** 		case 2:
 249:src/sim900_800.c **** 			//Levanto PWRKEY
 250:src/sim900_800.c **** 			if (GSM_STATUS)
 449              		.loc 1 250 0
 450 0074 9023     		movs	r3, #144	@ tmp186,
 451 0076 DB05     		lsls	r3, r3, #23	@ D.7885, tmp186,
 452 0078 1B8A     		ldrh	r3, [r3, #16]	@ tmp159,
 453 007a 9BB2     		uxth	r3, r3	@ D.7886, tmp159
 454 007c 1A00     		movs	r2, r3	@ D.7884, D.7886
 455 007e 2023     		movs	r3, #32	@ tmp160,
 456 0080 1340     		ands	r3, r2	@ D.7884, D.7884
 457 0082 13D0     		beq	.L15	@,
 251:src/sim900_800.c **** 			{
 252:src/sim900_800.c **** 				GSMStartTime = 1000;
 458              		.loc 1 252 0
 459 0084 1C4B     		ldr	r3, .L23+4	@ tmp161,
 460 0086 FA22     		movs	r2, #250	@ tmp182,
 461 0088 9200     		lsls	r2, r2, #2	@ tmp162, tmp182,
 462 008a 1A80     		strh	r2, [r3]	@ tmp163, GSMStartTime
 253:src/sim900_800.c **** 				GSMStartState++;
 463              		.loc 1 253 0
 464 008c 194B     		ldr	r3, .L23	@ tmp164,
ARM GAS  /tmp/ccNuUijR.s 			page 14


 465 008e 1B78     		ldrb	r3, [r3]	@ D.7883, GSMStartState
 466 0090 0133     		adds	r3, r3, #1	@ tmp165,
 467 0092 DAB2     		uxtb	r2, r3	@ D.7883, tmp165
 468 0094 174B     		ldr	r3, .L23	@ tmp166,
 469 0096 1A70     		strb	r2, [r3]	@ tmp167, GSMStartState
 254:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 470              		.loc 1 254 0
 471 0098 9023     		movs	r3, #144	@ tmp183,
 472 009a DB05     		lsls	r3, r3, #23	@ D.7885, tmp183,
 473 009c 8022     		movs	r2, #128	@ tmp184,
 474 009e 5201     		lsls	r2, r2, #5	@ tmp168, tmp184,
 475 00a0 9A61     		str	r2, [r3, #24]	@ tmp168, _20->BSRR
 255:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 476              		.loc 1 255 0
 477 00a2 9023     		movs	r3, #144	@ tmp185,
 478 00a4 DB05     		lsls	r3, r3, #23	@ D.7885, tmp185,
 479 00a6 8022     		movs	r2, #128	@ tmp169,
 480 00a8 9A61     		str	r2, [r3, #24]	@ tmp169, _22->BSRR
 256:src/sim900_800.c **** 			}
 257:src/sim900_800.c **** 			else if(GSMStartTime == 0) //Espera hasta 4 segs
 258:src/sim900_800.c **** 			{
 259:src/sim900_800.c **** 				return 3;		//TimeOut
 260:src/sim900_800.c **** 			}
 261:src/sim900_800.c **** 			break;
 481              		.loc 1 261 0
 482 00aa 1DE0     		b	.L21	@
 483              	.L15:
 257:src/sim900_800.c **** 			{
 484              		.loc 1 257 0
 485 00ac 124B     		ldr	r3, .L23+4	@ tmp170,
 486 00ae 1B88     		ldrh	r3, [r3]	@ tmp171, GSMStartTime
 487 00b0 9BB2     		uxth	r3, r3	@ D.7886, tmp171
 488 00b2 002B     		cmp	r3, #0	@ D.7886,
 489 00b4 18D1     		bne	.L21	@,
 259:src/sim900_800.c **** 			}
 490              		.loc 1 259 0
 491 00b6 0323     		movs	r3, #3	@ D.7883,
 492 00b8 1AE0     		b	.L17	@
 493              	.L12:
 262:src/sim900_800.c **** 
 263:src/sim900_800.c **** 		case 3:
 264:src/sim900_800.c **** 			if(GSMStartTime == 0)	//Espero 1 segundo mas y reviso GSM_STATUS
 494              		.loc 1 264 0
 495 00ba 0F4B     		ldr	r3, .L23+4	@ tmp172,
 496 00bc 1B88     		ldrh	r3, [r3]	@ tmp173, GSMStartTime
 497 00be 9BB2     		uxth	r3, r3	@ D.7886, tmp173
 498 00c0 002B     		cmp	r3, #0	@ D.7886,
 499 00c2 13D1     		bne	.L22	@,
 265:src/sim900_800.c **** 			{
 266:src/sim900_800.c **** 				if (GSM_STATUS)
 500              		.loc 1 266 0
 501 00c4 9023     		movs	r3, #144	@ tmp181,
 502 00c6 DB05     		lsls	r3, r3, #23	@ D.7885, tmp181,
 503 00c8 1B8A     		ldrh	r3, [r3, #16]	@ tmp175,
 504 00ca 9BB2     		uxth	r3, r3	@ D.7886, tmp175
 505 00cc 1A00     		movs	r2, r3	@ D.7884, D.7886
 506 00ce 2023     		movs	r3, #32	@ tmp176,
ARM GAS  /tmp/ccNuUijR.s 			page 15


 507 00d0 1340     		ands	r3, r2	@ D.7884, D.7884
 508 00d2 01D0     		beq	.L19	@,
 267:src/sim900_800.c **** 					return 1;		//OK
 509              		.loc 1 267 0
 510 00d4 0123     		movs	r3, #1	@ D.7883,
 511 00d6 0BE0     		b	.L17	@
 512              	.L19:
 268:src/sim900_800.c **** 				else
 269:src/sim900_800.c **** 					return 2;		//Error
 513              		.loc 1 269 0
 514 00d8 0223     		movs	r3, #2	@ D.7883,
 515 00da 09E0     		b	.L17	@
 516              	.L7:
 270:src/sim900_800.c **** 			}
 271:src/sim900_800.c **** 			break;
 272:src/sim900_800.c **** 
 273:src/sim900_800.c **** 		default:
 274:src/sim900_800.c **** 			GSMStartState = 0;
 517              		.loc 1 274 0
 518 00dc 054B     		ldr	r3, .L23	@ tmp177,
 519 00de 0022     		movs	r2, #0	@ tmp178,
 520 00e0 1A70     		strb	r2, [r3]	@ tmp179, GSMStartState
 275:src/sim900_800.c **** 			break;
 521              		.loc 1 275 0
 522 00e2 04E0     		b	.L13	@
 523              	.L20:
 246:src/sim900_800.c **** 
 524              		.loc 1 246 0
 525 00e4 C046     		nop
 526 00e6 02E0     		b	.L13	@
 527              	.L21:
 261:src/sim900_800.c **** 
 528              		.loc 1 261 0
 529 00e8 C046     		nop
 530 00ea 00E0     		b	.L13	@
 531              	.L22:
 271:src/sim900_800.c **** 
 532              		.loc 1 271 0
 533 00ec C046     		nop
 534              	.L13:
 276:src/sim900_800.c **** 	}
 277:src/sim900_800.c **** 	return 0;						//trabajando
 535              		.loc 1 277 0
 536 00ee 0023     		movs	r3, #0	@ D.7883,
 537              	.L17:
 278:src/sim900_800.c **** }
 538              		.loc 1 278 0
 539 00f0 1800     		movs	r0, r3	@, <retval>
 540              		@ sp needed	@
 541 00f2 7047     		bx	lr
 542              	.L24:
 543              		.align	2
 544              	.L23:
 545 00f4 00000000 		.word	GSMStartState
 546 00f8 00000000 		.word	GSMStartTime
 547              		.cfi_endproc
 548              	.LFE21:
ARM GAS  /tmp/ccNuUijR.s 			page 16


 549              		.size	GSM_Start, .-GSM_Start
 550              		.section	.text.GSM_Start_Stop_ResetSM,"ax",%progbits
 551              		.align	2
 552              		.global	GSM_Start_Stop_ResetSM
 553              		.code	16
 554              		.thumb_func
 555              		.type	GSM_Start_Stop_ResetSM, %function
 556              	GSM_Start_Stop_ResetSM:
 557              	.LFB22:
 279:src/sim900_800.c **** 
 280:src/sim900_800.c **** void GSM_Start_Stop_ResetSM (void)
 281:src/sim900_800.c **** {
 558              		.loc 1 281 0
 559              		.cfi_startproc
 282:src/sim900_800.c **** 	GSMStartState = 0;
 560              		.loc 1 282 0
 561 0000 024B     		ldr	r3, .L26	@ tmp110,
 562 0002 0022     		movs	r2, #0	@ tmp111,
 563 0004 1A70     		strb	r2, [r3]	@ tmp112, GSMStartState
 283:src/sim900_800.c **** }
 564              		.loc 1 283 0
 565 0006 C046     		nop
 566              		@ sp needed	@
 567 0008 7047     		bx	lr
 568              	.L27:
 569 000a C046     		.align	2
 570              	.L26:
 571 000c 00000000 		.word	GSMStartState
 572              		.cfi_endproc
 573              	.LFE22:
 574              		.size	GSM_Start_Stop_ResetSM, .-GSM_Start_Stop_ResetSM
 575              		.section	.text.GSM_Stop,"ax",%progbits
 576              		.align	2
 577              		.global	GSM_Stop
 578              		.code	16
 579              		.thumb_func
 580              		.type	GSM_Stop, %function
 581              	GSM_Stop:
 582              	.LFB23:
 284:src/sim900_800.c **** 
 285:src/sim900_800.c **** //GSM_Stop() contesta:
 286:src/sim900_800.c **** //0 trabajando
 287:src/sim900_800.c **** //1 terminado OK
 288:src/sim900_800.c **** //2 ERROR
 289:src/sim900_800.c **** //3 Timeout
 290:src/sim900_800.c **** unsigned char GSM_Stop(void)
 291:src/sim900_800.c **** {
 583              		.loc 1 291 0
 584              		.cfi_startproc
 585 0000 82B0     		sub	sp, sp, #8	@,,
 586              	.LCFI1:
 587              		.cfi_def_cfa_offset 8
 292:src/sim900_800.c **** 	unsigned char resp = 0;
 588              		.loc 1 292 0
 589 0002 6B46     		mov	r3, sp	@ tmp173,
 590 0004 0733     		adds	r3, r3, #7	@ tmp127,
 591 0006 0022     		movs	r2, #0	@ tmp128,
ARM GAS  /tmp/ccNuUijR.s 			page 17


 592 0008 1A70     		strb	r2, [r3]	@ tmp129, resp
 293:src/sim900_800.c **** 
 294:src/sim900_800.c **** 	switch(GSMStartState)
 593              		.loc 1 294 0
 594 000a 294B     		ldr	r3, .L39	@ tmp130,
 595 000c 1B78     		ldrb	r3, [r3]	@ D.7888, GSMStartState
 596 000e 012B     		cmp	r3, #1	@ D.7889,
 597 0010 16D0     		beq	.L30	@,
 598 0012 022B     		cmp	r3, #2	@ D.7889,
 599 0014 2CD0     		beq	.L31	@,
 600 0016 002B     		cmp	r3, #0	@ D.7889,
 601 0018 3BD1     		bne	.L29	@,
 295:src/sim900_800.c **** 	{
 296:src/sim900_800.c **** 		case 0:
 297:src/sim900_800.c **** 			//Levanto PWRKEY
 298:src/sim900_800.c **** 			GSM_PWRKEY_OFF;
 602              		.loc 1 298 0
 603 001a 9023     		movs	r3, #144	@ tmp170,
 604 001c DB05     		lsls	r3, r3, #23	@ D.7890, tmp170,
 605 001e 8022     		movs	r2, #128	@ tmp171,
 606 0020 1204     		lsls	r2, r2, #16	@ tmp131, tmp171,
 607 0022 9A61     		str	r2, [r3, #24]	@ tmp131, _11->BSRR
 299:src/sim900_800.c **** 			GSMStartTime = 250;	//espero 250ms
 608              		.loc 1 299 0
 609 0024 234B     		ldr	r3, .L39+4	@ tmp132,
 610 0026 FA22     		movs	r2, #250	@ tmp133,
 611 0028 1A80     		strh	r2, [r3]	@ tmp134, GSMStartTime
 300:src/sim900_800.c **** 			GSMGeneralTimeOut = 4000;	//timeout de 4 segs
 612              		.loc 1 300 0
 613 002a 234B     		ldr	r3, .L39+8	@ tmp135,
 614 002c FA22     		movs	r2, #250	@ tmp172,
 615 002e 1201     		lsls	r2, r2, #4	@ tmp136, tmp172,
 616 0030 1A80     		strh	r2, [r3]	@ tmp137, GSMGeneralTimeOut
 301:src/sim900_800.c **** 			GSMStartState++;
 617              		.loc 1 301 0
 618 0032 1F4B     		ldr	r3, .L39	@ tmp138,
 619 0034 1B78     		ldrb	r3, [r3]	@ D.7888, GSMStartState
 620 0036 0133     		adds	r3, r3, #1	@ tmp139,
 621 0038 DAB2     		uxtb	r2, r3	@ D.7888, tmp139
 622 003a 1D4B     		ldr	r3, .L39	@ tmp140,
 623 003c 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 302:src/sim900_800.c **** 			break;
 624              		.loc 1 302 0
 625 003e 28E0     		b	.L29	@
 626              	.L30:
 303:src/sim900_800.c **** 
 304:src/sim900_800.c **** 		case 1:
 305:src/sim900_800.c **** 			if ((!GSMStartTime) && (!GSM_STATUS))
 627              		.loc 1 305 0
 628 0040 1C4B     		ldr	r3, .L39+4	@ tmp142,
 629 0042 1B88     		ldrh	r3, [r3]	@ tmp143, GSMStartTime
 630 0044 9BB2     		uxth	r3, r3	@ D.7891, tmp143
 631 0046 002B     		cmp	r3, #0	@ D.7891,
 632 0048 20D1     		bne	.L37	@,
 633              		.loc 1 305 0 is_stmt 0 discriminator 1
 634 004a 9023     		movs	r3, #144	@ tmp169,
 635 004c DB05     		lsls	r3, r3, #23	@ D.7890, tmp169,
ARM GAS  /tmp/ccNuUijR.s 			page 18


 636 004e 1B8A     		ldrh	r3, [r3, #16]	@ tmp145,
 637 0050 9BB2     		uxth	r3, r3	@ D.7891, tmp145
 638 0052 1A00     		movs	r2, r3	@ D.7889, D.7891
 639 0054 2023     		movs	r3, #32	@ tmp146,
 640 0056 1340     		ands	r3, r2	@ D.7889, D.7889
 641 0058 18D1     		bne	.L37	@,
 306:src/sim900_800.c **** 			{
 307:src/sim900_800.c **** 				GSMStartTime = 1000;	//espero 1seg
 642              		.loc 1 307 0 is_stmt 1
 643 005a 164B     		ldr	r3, .L39+4	@ tmp147,
 644 005c FA22     		movs	r2, #250	@ tmp168,
 645 005e 9200     		lsls	r2, r2, #2	@ tmp148, tmp168,
 646 0060 1A80     		strh	r2, [r3]	@ tmp149, GSMStartTime
 308:src/sim900_800.c **** 				GSMStartState++;
 647              		.loc 1 308 0
 648 0062 134B     		ldr	r3, .L39	@ tmp150,
 649 0064 1B78     		ldrb	r3, [r3]	@ D.7888, GSMStartState
 650 0066 0133     		adds	r3, r3, #1	@ tmp151,
 651 0068 DAB2     		uxtb	r2, r3	@ D.7888, tmp151
 652 006a 114B     		ldr	r3, .L39	@ tmp152,
 653 006c 1A70     		strb	r2, [r3]	@ tmp153, GSMStartState
 309:src/sim900_800.c **** 			}
 310:src/sim900_800.c **** 			break;
 654              		.loc 1 310 0
 655 006e 0DE0     		b	.L37	@
 656              	.L31:
 311:src/sim900_800.c **** 
 312:src/sim900_800.c **** 		case 2:
 313:src/sim900_800.c **** 			if (!GSMStartTime)
 657              		.loc 1 313 0
 658 0070 104B     		ldr	r3, .L39+4	@ tmp154,
 659 0072 1B88     		ldrh	r3, [r3]	@ tmp155, GSMStartTime
 660 0074 9BB2     		uxth	r3, r3	@ D.7891, tmp155
 661 0076 002B     		cmp	r3, #0	@ D.7891,
 662 0078 0AD1     		bne	.L38	@,
 314:src/sim900_800.c **** 			{
 315:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 663              		.loc 1 315 0
 664 007a 9023     		movs	r3, #144	@ tmp167,
 665 007c DB05     		lsls	r3, r3, #23	@ D.7890, tmp167,
 666 007e 8022     		movs	r2, #128	@ tmp156,
 667 0080 9A61     		str	r2, [r3, #24]	@ tmp156, _30->BSRR
 316:src/sim900_800.c **** 				resp = 1;
 668              		.loc 1 316 0
 669 0082 6B46     		mov	r3, sp	@ tmp174,
 670 0084 0733     		adds	r3, r3, #7	@ tmp157,
 671 0086 0122     		movs	r2, #1	@ tmp158,
 672 0088 1A70     		strb	r2, [r3]	@ tmp159, resp
 317:src/sim900_800.c **** 			}
 318:src/sim900_800.c **** 			break;
 673              		.loc 1 318 0
 674 008a 01E0     		b	.L38	@
 675              	.L37:
 310:src/sim900_800.c **** 
 676              		.loc 1 310 0
 677 008c C046     		nop
 678 008e 00E0     		b	.L29	@
ARM GAS  /tmp/ccNuUijR.s 			page 19


 679              	.L38:
 680              		.loc 1 318 0
 681 0090 C046     		nop
 682              	.L29:
 319:src/sim900_800.c **** 	}
 320:src/sim900_800.c **** 
 321:src/sim900_800.c **** 	if (!GSMGeneralTimeOut)
 683              		.loc 1 321 0
 684 0092 094B     		ldr	r3, .L39+8	@ tmp160,
 685 0094 1B88     		ldrh	r3, [r3]	@ tmp161, GSMGeneralTimeOut
 686 0096 9BB2     		uxth	r3, r3	@ D.7891, tmp161
 687 0098 002B     		cmp	r3, #0	@ D.7891,
 688 009a 03D1     		bne	.L35	@,
 322:src/sim900_800.c **** 		resp = 3;				//timeout
 689              		.loc 1 322 0
 690 009c 6B46     		mov	r3, sp	@ tmp175,
 691 009e 0733     		adds	r3, r3, #7	@ tmp162,
 692 00a0 0322     		movs	r2, #3	@ tmp163,
 693 00a2 1A70     		strb	r2, [r3]	@ tmp164, resp
 694              	.L35:
 323:src/sim900_800.c **** 
 324:src/sim900_800.c **** 	return resp;
 695              		.loc 1 324 0
 696 00a4 6B46     		mov	r3, sp	@ tmp176,
 697 00a6 0733     		adds	r3, r3, #7	@ tmp165,
 698 00a8 1B78     		ldrb	r3, [r3]	@ D.7888, resp
 325:src/sim900_800.c **** }
 699              		.loc 1 325 0
 700 00aa 1800     		movs	r0, r3	@, <retval>
 701 00ac 02B0     		add	sp, sp, #8	@,,
 702              		@ sp needed	@
 703 00ae 7047     		bx	lr
 704              	.L40:
 705              		.align	2
 706              	.L39:
 707 00b0 00000000 		.word	GSMStartState
 708 00b4 00000000 		.word	GSMStartTime
 709 00b8 00000000 		.word	GSMGeneralTimeOut
 710              		.cfi_endproc
 711              	.LFE23:
 712              		.size	GSM_Stop, .-GSM_Stop
 713              		.section	.text.GSM_Delay,"ax",%progbits
 714              		.align	2
 715              		.global	GSM_Delay
 716              		.code	16
 717              		.thumb_func
 718              		.type	GSM_Delay, %function
 719              	GSM_Delay:
 720              	.LFB24:
 326:src/sim900_800.c **** 
 327:src/sim900_800.c **** //TODO: OJO utiliza GSMStartState
 328:src/sim900_800.c **** //in: delay en ms
 329:src/sim900_800.c **** //out: 0 working; 1 finish
 330:src/sim900_800.c **** unsigned char GSM_Delay (unsigned short tim)
 331:src/sim900_800.c **** {
 721              		.loc 1 331 0
 722              		.cfi_startproc
ARM GAS  /tmp/ccNuUijR.s 			page 20


 723 0000 84B0     		sub	sp, sp, #16	@,,
 724              	.LCFI2:
 725              		.cfi_def_cfa_offset 16
 726 0002 0200     		movs	r2, r0	@ tmp117, tim
 727 0004 6B46     		mov	r3, sp	@ tmp144,
 728 0006 0633     		adds	r3, r3, #6	@ tmp118,
 729 0008 1A80     		strh	r2, [r3]	@ tmp119, tim
 332:src/sim900_800.c **** 	unsigned char resp = 0;
 730              		.loc 1 332 0
 731 000a 0F23     		movs	r3, #15	@ tmp120,
 732 000c 6B44     		add	r3, r3, sp	@ tmp120,
 733 000e 0022     		movs	r2, #0	@ tmp121,
 734 0010 1A70     		strb	r2, [r3]	@ tmp122, resp
 333:src/sim900_800.c **** 
 334:src/sim900_800.c **** 	switch(GSMStartState)
 735              		.loc 1 334 0
 736 0012 154B     		ldr	r3, .L50	@ tmp123,
 737 0014 1B78     		ldrb	r3, [r3]	@ D.7892, GSMStartState
 738 0016 002B     		cmp	r3, #0	@ D.7893,
 739 0018 02D0     		beq	.L43	@,
 740 001a 012B     		cmp	r3, #1	@ D.7893,
 741 001c 0CD0     		beq	.L44	@,
 742 001e 18E0     		b	.L48	@
 743              	.L43:
 335:src/sim900_800.c **** 	{
 336:src/sim900_800.c **** 		case 0:
 337:src/sim900_800.c **** 			GSMGeneralTimeOut = tim;
 744              		.loc 1 337 0
 745 0020 124B     		ldr	r3, .L50+4	@ tmp124,
 746 0022 6A46     		mov	r2, sp	@ tmp146,
 747 0024 0632     		adds	r2, r2, #6	@ tmp125,
 748 0026 1288     		ldrh	r2, [r2]	@ tmp126, tim
 749 0028 1A80     		strh	r2, [r3]	@ tmp126, GSMGeneralTimeOut
 338:src/sim900_800.c **** 			GSMStartState++;
 750              		.loc 1 338 0
 751 002a 0F4B     		ldr	r3, .L50	@ tmp127,
 752 002c 1B78     		ldrb	r3, [r3]	@ D.7892, GSMStartState
 753 002e 0133     		adds	r3, r3, #1	@ tmp128,
 754 0030 DAB2     		uxtb	r2, r3	@ D.7892, tmp128
 755 0032 0D4B     		ldr	r3, .L50	@ tmp129,
 756 0034 1A70     		strb	r2, [r3]	@ tmp130, GSMStartState
 339:src/sim900_800.c **** 			break;
 757              		.loc 1 339 0
 758 0036 11E0     		b	.L45	@
 759              	.L44:
 340:src/sim900_800.c **** 
 341:src/sim900_800.c **** 		case 1:
 342:src/sim900_800.c **** 			if (!GSMGeneralTimeOut)
 760              		.loc 1 342 0
 761 0038 0C4B     		ldr	r3, .L50+4	@ tmp131,
 762 003a 1B88     		ldrh	r3, [r3]	@ tmp132, GSMGeneralTimeOut
 763 003c 9BB2     		uxth	r3, r3	@ D.7894, tmp132
 764 003e 002B     		cmp	r3, #0	@ D.7894,
 765 0040 0BD1     		bne	.L49	@,
 343:src/sim900_800.c **** 			{
 344:src/sim900_800.c **** 				GSMStartState = 0;
 766              		.loc 1 344 0
ARM GAS  /tmp/ccNuUijR.s 			page 21


 767 0042 094B     		ldr	r3, .L50	@ tmp133,
 768 0044 0022     		movs	r2, #0	@ tmp134,
 769 0046 1A70     		strb	r2, [r3]	@ tmp135, GSMStartState
 345:src/sim900_800.c **** 				resp = 1;
 770              		.loc 1 345 0
 771 0048 0F23     		movs	r3, #15	@ tmp136,
 772 004a 6B44     		add	r3, r3, sp	@ tmp136,
 773 004c 0122     		movs	r2, #1	@ tmp137,
 774 004e 1A70     		strb	r2, [r3]	@ tmp138, resp
 346:src/sim900_800.c **** 			}
 347:src/sim900_800.c **** 			break;
 775              		.loc 1 347 0
 776 0050 03E0     		b	.L49	@
 777              	.L48:
 348:src/sim900_800.c **** 
 349:src/sim900_800.c **** 		default:
 350:src/sim900_800.c **** 			GSMStartState = 0;
 778              		.loc 1 350 0
 779 0052 054B     		ldr	r3, .L50	@ tmp139,
 780 0054 0022     		movs	r2, #0	@ tmp140,
 781 0056 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 351:src/sim900_800.c **** 			break;
 782              		.loc 1 351 0
 783 0058 00E0     		b	.L45	@
 784              	.L49:
 347:src/sim900_800.c **** 
 785              		.loc 1 347 0
 786 005a C046     		nop
 787              	.L45:
 352:src/sim900_800.c **** 	}
 353:src/sim900_800.c **** 	return resp;
 788              		.loc 1 353 0
 789 005c 0F23     		movs	r3, #15	@ tmp142,
 790 005e 6B44     		add	r3, r3, sp	@ tmp142,
 791 0060 1B78     		ldrb	r3, [r3]	@ D.7892, resp
 354:src/sim900_800.c **** }
 792              		.loc 1 354 0
 793 0062 1800     		movs	r0, r3	@, <retval>
 794 0064 04B0     		add	sp, sp, #16	@,,
 795              		@ sp needed	@
 796 0066 7047     		bx	lr
 797              	.L51:
 798              		.align	2
 799              	.L50:
 800 0068 00000000 		.word	GSMStartState
 801 006c 00000000 		.word	GSMGeneralTimeOut
 802              		.cfi_endproc
 803              	.LFE24:
 804              		.size	GSM_Delay, .-GSM_Delay
 805              		.section	.rodata
 806              		.align	2
 807              	.LC18:
 808 0000 41542B43 		.ascii	"AT+CSPN?\015\012\000"
 808      53504E3F 
 808      0D0A00
 809 000b 00       		.align	2
 810              	.LC20:
ARM GAS  /tmp/ccNuUijR.s 			page 22


 811 000c 2B435350 		.ascii	"+CSPN\000"
 811      4E00
 812              		.section	.text.GSMPrestador,"ax",%progbits
 813              		.align	2
 814              		.global	GSMPrestador
 815              		.code	16
 816              		.thumb_func
 817              		.type	GSMPrestador, %function
 818              	GSMPrestador:
 819              	.LFB25:
 355:src/sim900_800.c **** 
 356:src/sim900_800.c **** //GSMPrestador(&PrestadorSim1, &PrestadorSim2, &CONFIGURACIONgprsAPN1[0], &CONFIGURACIONgprsUsuario
 357:src/sim900_800.c **** void GSMPrestador(unsigned char * pGSMHWstatus, unsigned char * prestadorSim1, unsigned char * pres
 358:src/sim900_800.c **** {
 820              		.loc 1 358 0
 821              		.cfi_startproc
 822 0000 10B5     		push	{r4, lr}	@
 823              	.LCFI3:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 827 0002 86B0     		sub	sp, sp, #24	@,,
 828              	.LCFI4:
 829              		.cfi_def_cfa_offset 32
 830 0004 0390     		str	r0, [sp, #12]	@ pGSMHWstatus, pGSMHWstatus
 831 0006 0291     		str	r1, [sp, #8]	@ prestadorSim1, prestadorSim1
 832 0008 0192     		str	r2, [sp, #4]	@ prestadorSim2, prestadorSim2
 833 000a 0093     		str	r3, [sp]	@ pCONFIGURACIONgprsAPN1, pCONFIGURACIONgprsAPN1
 359:src/sim900_800.c **** 	unsigned char i;
 360:src/sim900_800.c **** 
 361:src/sim900_800.c **** 	if (prestadorSimTime == 0)
 834              		.loc 1 361 0
 835 000c DA4B     		ldr	r3, .L94	@ tmp151,
 836 000e 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimTime
 837 0010 002B     		cmp	r3, #0	@ D.7895,
 838 0012 00D0     		beq	.LCB487	@
 839 0014 D5E1     		b	.L87	@long jump	@
 840              	.LCB487:
 362:src/sim900_800.c **** 	{
 363:src/sim900_800.c **** 		switch(prestadorSimSelect)
 841              		.loc 1 363 0
 842 0016 D94B     		ldr	r3, .L94+4	@ tmp152,
 843 0018 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 844 001a 012B     		cmp	r3, #1	@ D.7896,
 845 001c 13D0     		beq	.L55	@,
 846 001e 022B     		cmp	r3, #2	@ D.7896,
 847 0020 00D1     		bne	.LCB493	@
 848 0022 E8E0     		b	.L56	@long jump	@
 849              	.LCB493:
 850 0024 002B     		cmp	r3, #0	@ D.7896,
 851 0026 00D0     		beq	.LCB495	@
 852 0028 C4E1     		b	.L84	@long jump	@
 853              	.LCB495:
 364:src/sim900_800.c **** 		{
 365:src/sim900_800.c **** 			case 0:
 366:src/sim900_800.c **** 				if (*pGSMHWstatus & 0x01)
 854              		.loc 1 366 0
ARM GAS  /tmp/ccNuUijR.s 			page 23


 855 002a 039B     		ldr	r3, [sp, #12]	@ tmp153, pGSMHWstatus
 856 002c 1B78     		ldrb	r3, [r3]	@ D.7895, *pGSMHWstatus_25(D)
 857 002e 1A00     		movs	r2, r3	@ D.7896, D.7895
 858 0030 0123     		movs	r3, #1	@ tmp154,
 859 0032 1340     		ands	r3, r2	@ D.7896, D.7896
 860 0034 00D1     		bne	.LCB502	@
 861 0036 C1E1     		b	.L88	@long jump	@
 862              	.LCB502:
 367:src/sim900_800.c **** 					prestadorSimSelect++;
 863              		.loc 1 367 0
 864 0038 D04B     		ldr	r3, .L94+4	@ tmp155,
 865 003a 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 866 003c 0133     		adds	r3, r3, #1	@ tmp156,
 867 003e DAB2     		uxtb	r2, r3	@ D.7895, tmp156
 868 0040 CE4B     		ldr	r3, .L94+4	@ tmp157,
 869 0042 1A70     		strb	r2, [r3]	@ tmp158, prestadorSimSelect
 368:src/sim900_800.c **** 				break;
 870              		.loc 1 368 0
 871 0044 BAE1     		b	.L88	@
 872              	.L55:
 369:src/sim900_800.c **** 			case 1:
 370:src/sim900_800.c **** 				if (*prestadorSim1 == 0)
 873              		.loc 1 370 0
 874 0046 029B     		ldr	r3, [sp, #8]	@ tmp159, prestadorSim1
 875 0048 1B78     		ldrb	r3, [r3]	@ D.7895, *prestadorSim1_33(D)
 876 004a 002B     		cmp	r3, #0	@ D.7895,
 877 004c 00D0     		beq	.LCB516	@
 878 004e D2E0     		b	.L56	@long jump	@
 879              	.LCB516:
 371:src/sim900_800.c **** 				{
 372:src/sim900_800.c **** 					switch(prestadorSimState)
 880              		.loc 1 372 0
 881 0050 CB4B     		ldr	r3, .L94+8	@ tmp160,
 882 0052 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 883 0054 012B     		cmp	r3, #1	@ D.7896,
 884 0056 0BD0     		beq	.L60	@,
 885 0058 022B     		cmp	r3, #2	@ D.7896,
 886 005a 44D0     		beq	.L61	@,
 887 005c 002B     		cmp	r3, #0	@ D.7896,
 888 005e 00D0     		beq	.LCB524	@
 889 0060 C2E0     		b	.L85	@long jump	@
 890              	.LCB524:
 373:src/sim900_800.c **** 					{
 374:src/sim900_800.c **** 					case 0:
 375:src/sim900_800.c **** 						prestadorSimState++;
 891              		.loc 1 375 0
 892 0062 C74B     		ldr	r3, .L94+8	@ tmp161,
 893 0064 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 894 0066 0133     		adds	r3, r3, #1	@ tmp162,
 895 0068 DAB2     		uxtb	r2, r3	@ D.7895, tmp162
 896 006a C54B     		ldr	r3, .L94+8	@ tmp163,
 897 006c 1A70     		strb	r2, [r3]	@ tmp164, prestadorSimState
 376:src/sim900_800.c **** 						break;
 898              		.loc 1 376 0
 899 006e C2E0     		b	.L56	@
 900              	.L60:
 377:src/sim900_800.c **** 					case 1:
ARM GAS  /tmp/ccNuUijR.s 			page 24


 378:src/sim900_800.c **** 
 379:src/sim900_800.c **** 						i = GSM_SetSIM (1);
 901              		.loc 1 379 0
 902 0070 1724     		movs	r4, #23	@ tmp165,
 903 0072 6C44     		add	r4, r4, sp	@ tmp165,
 904 0074 0120     		movs	r0, #1	@,
 905 0076 FFF7FEFF 		bl	GSM_SetSIM	@
 906 007a 0300     		movs	r3, r0	@ tmp166,
 907 007c 2370     		strb	r3, [r4]	@ tmp168, i
 380:src/sim900_800.c **** 						if (i == 2)
 908              		.loc 1 380 0
 909 007e 1723     		movs	r3, #23	@ tmp169,
 910 0080 6B44     		add	r3, r3, sp	@ tmp169,
 911 0082 1B78     		ldrb	r3, [r3]	@ tmp170, i
 912 0084 022B     		cmp	r3, #2	@ tmp170,
 913 0086 05D1     		bne	.L63	@,
 381:src/sim900_800.c **** 							prestadorSimState++;
 914              		.loc 1 381 0
 915 0088 BD4B     		ldr	r3, .L94+8	@ tmp171,
 916 008a 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 917 008c 0133     		adds	r3, r3, #1	@ tmp172,
 918 008e DAB2     		uxtb	r2, r3	@ D.7895, tmp172
 919 0090 BB4B     		ldr	r3, .L94+8	@ tmp173,
 920 0092 1A70     		strb	r2, [r3]	@ tmp174, prestadorSimState
 921              	.L63:
 382:src/sim900_800.c **** 						if (i > 2)
 922              		.loc 1 382 0
 923 0094 1723     		movs	r3, #23	@ tmp175,
 924 0096 6B44     		add	r3, r3, sp	@ tmp175,
 925 0098 1B78     		ldrb	r3, [r3]	@ tmp176, i
 926 009a 022B     		cmp	r3, #2	@ tmp176,
 927 009c 08D9     		bls	.L64	@,
 383:src/sim900_800.c **** 						{
 384:src/sim900_800.c **** 							prestadorSimState = 0;
 928              		.loc 1 384 0
 929 009e B84B     		ldr	r3, .L94+8	@ tmp177,
 930 00a0 0022     		movs	r2, #0	@ tmp178,
 931 00a2 1A70     		strb	r2, [r3]	@ tmp179, prestadorSimState
 385:src/sim900_800.c **** 							//prestadorSimTime = 150;
 386:src/sim900_800.c **** 							prestadorSimSelect++;
 932              		.loc 1 386 0
 933 00a4 B54B     		ldr	r3, .L94+4	@ tmp180,
 934 00a6 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 935 00a8 0133     		adds	r3, r3, #1	@ tmp181,
 936 00aa DAB2     		uxtb	r2, r3	@ D.7895, tmp181
 937 00ac B34B     		ldr	r3, .L94+4	@ tmp182,
 938 00ae 1A70     		strb	r2, [r3]	@ tmp183, prestadorSimSelect
 939              	.L64:
 387:src/sim900_800.c **** 						}
 388:src/sim900_800.c **** 
 389:src/sim900_800.c **** 						if (i == 2)
 940              		.loc 1 389 0
 941 00b0 1723     		movs	r3, #23	@ tmp184,
 942 00b2 6B44     		add	r3, r3, sp	@ tmp184,
 943 00b4 1B78     		ldrb	r3, [r3]	@ tmp185, i
 944 00b6 022B     		cmp	r3, #2	@ tmp185,
 945 00b8 05D1     		bne	.L65	@,
ARM GAS  /tmp/ccNuUijR.s 			page 25


 390:src/sim900_800.c **** 							prestadorSimState++;
 946              		.loc 1 390 0
 947 00ba B14B     		ldr	r3, .L94+8	@ tmp186,
 948 00bc 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 949 00be 0133     		adds	r3, r3, #1	@ tmp187,
 950 00c0 DAB2     		uxtb	r2, r3	@ D.7895, tmp187
 951 00c2 AF4B     		ldr	r3, .L94+8	@ tmp188,
 952 00c4 1A70     		strb	r2, [r3]	@ tmp189, prestadorSimState
 953              	.L65:
 391:src/sim900_800.c **** 						if (i > 2)
 954              		.loc 1 391 0
 955 00c6 1723     		movs	r3, #23	@ tmp190,
 956 00c8 6B44     		add	r3, r3, sp	@ tmp190,
 957 00ca 1B78     		ldrb	r3, [r3]	@ tmp191, i
 958 00cc 022B     		cmp	r3, #2	@ tmp191,
 959 00ce 00D8     		bhi	.LCB587	@
 960 00d0 8EE0     		b	.L89	@long jump	@
 961              	.LCB587:
 392:src/sim900_800.c **** 						{
 393:src/sim900_800.c **** 							prestadorSimState = 0;
 962              		.loc 1 393 0
 963 00d2 AB4B     		ldr	r3, .L94+8	@ tmp192,
 964 00d4 0022     		movs	r2, #0	@ tmp193,
 965 00d6 1A70     		strb	r2, [r3]	@ tmp194, prestadorSimState
 394:src/sim900_800.c **** 							//prestadorSimTime = 150;
 395:src/sim900_800.c **** 							prestadorSimSelect++;
 966              		.loc 1 395 0
 967 00d8 A84B     		ldr	r3, .L94+4	@ tmp195,
 968 00da 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 969 00dc 0133     		adds	r3, r3, #1	@ tmp196,
 970 00de DAB2     		uxtb	r2, r3	@ D.7895, tmp196
 971 00e0 A64B     		ldr	r3, .L94+4	@ tmp197,
 972 00e2 1A70     		strb	r2, [r3]	@ tmp198, prestadorSimSelect
 396:src/sim900_800.c **** 						}
 397:src/sim900_800.c **** 
 398:src/sim900_800.c **** 						break;
 973              		.loc 1 398 0
 974 00e4 84E0     		b	.L89	@
 975              	.L61:
 399:src/sim900_800.c **** 					case 2:
 400:src/sim900_800.c **** 						i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 976              		.loc 1 400 0
 977 00e6 1724     		movs	r4, #23	@ tmp199,
 978 00e8 6C44     		add	r4, r4, sp	@ tmp199,
 979 00ea A64B     		ldr	r3, .L94+12	@ tmp200,
 980 00ec A648     		ldr	r0, .L94+16	@ tmp201,
 981 00ee 0122     		movs	r2, #1	@,
 982 00f0 0F21     		movs	r1, #15	@,
 983 00f2 FFF7FEFF 		bl	GSMSendCommand	@
 984 00f6 0300     		movs	r3, r0	@ tmp202,
 985 00f8 2370     		strb	r3, [r4]	@ tmp204, i
 401:src/sim900_800.c **** 
 402:src/sim900_800.c **** 						if (i == 2)
 986              		.loc 1 402 0
 987 00fa 1723     		movs	r3, #23	@ tmp205,
 988 00fc 6B44     		add	r3, r3, sp	@ tmp205,
 989 00fe 1B78     		ldrb	r3, [r3]	@ tmp206, i
ARM GAS  /tmp/ccNuUijR.s 			page 26


 990 0100 022B     		cmp	r3, #2	@ tmp206,
 991 0102 62D1     		bne	.L67	@,
 403:src/sim900_800.c **** 						{
 404:src/sim900_800.c **** 							if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") - 
 992              		.loc 1 404 0
 993 0104 A149     		ldr	r1, .L94+20	@ tmp207,
 994 0106 9F4B     		ldr	r3, .L94+12	@ tmp208,
 995 0108 0522     		movs	r2, #5	@,
 996 010a 1800     		movs	r0, r3	@, tmp208
 997 010c FFF7FEFF 		bl	strncmp	@
 998 0110 031E     		subs	r3, r0, #0	@ D.7896,,
 999 0112 54D1     		bne	.L68	@,
 405:src/sim900_800.c **** 							{
 406:src/sim900_800.c **** 
 407:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProveed
 1000              		.loc 1 407 0
 1001 0114 0A99     		ldr	r1, [sp, #40]	@ tmp209, pCONFIGURACIONgprsProveedor1
 1002 0116 9E4B     		ldr	r3, .L94+24	@ tmp210,
 1003 0118 0322     		movs	r2, #3	@,
 1004 011a 1800     		movs	r0, r3	@, tmp210
 1005 011c FFF7FEFF 		bl	strncmp	@
 1006 0120 031E     		subs	r3, r0, #0	@ D.7896,,
 1007 0122 20D1     		bne	.L69	@,
 408:src/sim900_800.c **** 								{
 409:src/sim900_800.c **** 									*prestadorSim1 = 1;
 1008              		.loc 1 409 0
 1009 0124 029B     		ldr	r3, [sp, #8]	@ tmp211, prestadorSim1
 1010 0126 0122     		movs	r2, #1	@ tmp212,
 1011 0128 1A70     		strb	r2, [r3]	@ tmp213, *prestadorSim1_33(D)
 410:src/sim900_800.c **** 
 411:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN1);
 1012              		.loc 1 411 0
 1013 012a 009A     		ldr	r2, [sp]	@ tmp214, pCONFIGURACIONgprsAPN1
 1014 012c 994B     		ldr	r3, .L94+28	@ tmp215,
 1015 012e 1100     		movs	r1, r2	@, tmp214
 1016 0130 1800     		movs	r0, r3	@, tmp215
 1017 0132 FFF7FEFF 		bl	strcpy	@
 412:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1018              		.loc 1 412 0
 1019 0136 089A     		ldr	r2, [sp, #32]	@ tmp216, pCONFIGURACIONgprsUsuario1
 1020 0138 974B     		ldr	r3, .L94+32	@ tmp217,
 1021 013a 1100     		movs	r1, r2	@, tmp216
 1022 013c 1800     		movs	r0, r3	@, tmp217
 1023 013e FFF7FEFF 		bl	strcpy	@
 413:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave1);
 1024              		.loc 1 413 0
 1025 0142 099A     		ldr	r2, [sp, #36]	@ tmp218, pCONFIGURACIONgprsClave1
 1026 0144 954B     		ldr	r3, .L94+36	@ tmp219,
 1027 0146 1100     		movs	r1, r2	@, tmp218
 1028 0148 1800     		movs	r0, r3	@, tmp219
 1029 014a FFF7FEFF 		bl	strcpy	@
 414:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1030              		.loc 1 414 0
 1031 014e 0F9A     		ldr	r2, [sp, #60]	@ tmp220, pCONFIGURACIONIPREMOTE
 1032 0150 934B     		ldr	r3, .L94+40	@ tmp221,
 1033 0152 1100     		movs	r1, r2	@, tmp220
 1034 0154 1800     		movs	r0, r3	@, tmp221
ARM GAS  /tmp/ccNuUijR.s 			page 27


 1035 0156 FFF7FEFF 		bl	strcpy	@
 415:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1036              		.loc 1 415 0
 1037 015a 109A     		ldr	r2, [sp, #64]	@ tmp222, pCONFIGURACIONPORTREMOTE
 1038 015c 914B     		ldr	r3, .L94+44	@ tmp223,
 1039 015e 1100     		movs	r1, r2	@, tmp222
 1040 0160 1800     		movs	r0, r3	@, tmp223
 1041 0162 FFF7FEFF 		bl	strcpy	@
 1042              	.L69:
 416:src/sim900_800.c **** 								}
 417:src/sim900_800.c **** 
 418:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) &pCONFIGURACIONgprsProvee
 1043              		.loc 1 418 0
 1044 0166 0E99     		ldr	r1, [sp, #56]	@ tmp224, pCONFIGURACIONgprsProveedor2
 1045 0168 894B     		ldr	r3, .L94+24	@ tmp225,
 1046 016a 0322     		movs	r2, #3	@,
 1047 016c 1800     		movs	r0, r3	@, tmp225
 1048 016e FFF7FEFF 		bl	strncmp	@
 1049 0172 031E     		subs	r3, r0, #0	@ D.7896,,
 1050 0174 20D1     		bne	.L70	@,
 419:src/sim900_800.c **** 								{
 420:src/sim900_800.c **** 									*prestadorSim1 = 2;
 1051              		.loc 1 420 0
 1052 0176 029B     		ldr	r3, [sp, #8]	@ tmp226, prestadorSim1
 1053 0178 0222     		movs	r2, #2	@ tmp227,
 1054 017a 1A70     		strb	r2, [r3]	@ tmp228, *prestadorSim1_33(D)
 421:src/sim900_800.c **** 
 422:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN2);
 1055              		.loc 1 422 0
 1056 017c 0B9A     		ldr	r2, [sp, #44]	@ tmp229, pCONFIGURACIONgprsAPN2
 1057 017e 854B     		ldr	r3, .L94+28	@ tmp230,
 1058 0180 1100     		movs	r1, r2	@, tmp229
 1059 0182 1800     		movs	r0, r3	@, tmp230
 1060 0184 FFF7FEFF 		bl	strcpy	@
 423:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1061              		.loc 1 423 0
 1062 0188 0C9A     		ldr	r2, [sp, #48]	@ tmp231, pCONFIGURACIONgprsUsuario2
 1063 018a 834B     		ldr	r3, .L94+32	@ tmp232,
 1064 018c 1100     		movs	r1, r2	@, tmp231
 1065 018e 1800     		movs	r0, r3	@, tmp232
 1066 0190 FFF7FEFF 		bl	strcpy	@
 424:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave2);
 1067              		.loc 1 424 0
 1068 0194 0D9A     		ldr	r2, [sp, #52]	@ tmp233, pCONFIGURACIONgprsClave2
 1069 0196 814B     		ldr	r3, .L94+36	@ tmp234,
 1070 0198 1100     		movs	r1, r2	@, tmp233
 1071 019a 1800     		movs	r0, r3	@, tmp234
 1072 019c FFF7FEFF 		bl	strcpy	@
 425:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1073              		.loc 1 425 0
 1074 01a0 0F9A     		ldr	r2, [sp, #60]	@ tmp235, pCONFIGURACIONIPREMOTE
 1075 01a2 7F4B     		ldr	r3, .L94+40	@ tmp236,
 1076 01a4 1100     		movs	r1, r2	@, tmp235
 1077 01a6 1800     		movs	r0, r3	@, tmp236
 1078 01a8 FFF7FEFF 		bl	strcpy	@
 426:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1079              		.loc 1 426 0
ARM GAS  /tmp/ccNuUijR.s 			page 28


 1080 01ac 109A     		ldr	r2, [sp, #64]	@ tmp237, pCONFIGURACIONPORTREMOTE
 1081 01ae 7D4B     		ldr	r3, .L94+44	@ tmp238,
 1082 01b0 1100     		movs	r1, r2	@, tmp237
 1083 01b2 1800     		movs	r0, r3	@, tmp238
 1084 01b4 FFF7FEFF 		bl	strcpy	@
 1085              	.L70:
 427:src/sim900_800.c **** 								}
 428:src/sim900_800.c **** 
 429:src/sim900_800.c **** /*								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Per
 430:src/sim900_800.c **** 								{
 431:src/sim900_800.c **** 									*prestadorSim1 = 1;
 432:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Personal    ");
 433:src/sim900_800.c **** 								}
 434:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movis
 435:src/sim900_800.c **** 								{
 436:src/sim900_800.c **** 									*prestadorSim1 = 2;
 437:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Movistar    ");
 438:src/sim900_800.c **** 								}
 439:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro") 
 440:src/sim900_800.c **** 								{
 441:src/sim900_800.c **** 									*prestadorSim1 = 3;
 442:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n      Claro     ");
 443:src/sim900_800.c **** 								}
 444:src/sim900_800.c **** */
 445:src/sim900_800.c **** 								prestadorSimState = 0;
 1086              		.loc 1 445 0
 1087 01b8 714B     		ldr	r3, .L94+8	@ tmp239,
 1088 01ba 0022     		movs	r2, #0	@ tmp240,
 1089 01bc 1A70     		strb	r2, [r3]	@ tmp241, prestadorSimState
 1090              	.L68:
 446:src/sim900_800.c **** 							}
 447:src/sim900_800.c **** 							//prestadorSimTime = 150;
 448:src/sim900_800.c **** 							prestadorSimSelect++;
 1091              		.loc 1 448 0
 1092 01be 6F4B     		ldr	r3, .L94+4	@ tmp242,
 1093 01c0 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 1094 01c2 0133     		adds	r3, r3, #1	@ tmp243,
 1095 01c4 DAB2     		uxtb	r2, r3	@ D.7895, tmp243
 1096 01c6 6D4B     		ldr	r3, .L94+4	@ tmp244,
 1097 01c8 1A70     		strb	r2, [r3]	@ tmp245, prestadorSimSelect
 1098              	.L67:
 449:src/sim900_800.c **** 						}
 450:src/sim900_800.c **** 						if (i > 2)
 1099              		.loc 1 450 0
 1100 01ca 1723     		movs	r3, #23	@ tmp246,
 1101 01cc 6B44     		add	r3, r3, sp	@ tmp246,
 1102 01ce 1B78     		ldrb	r3, [r3]	@ tmp247, i
 1103 01d0 022B     		cmp	r3, #2	@ tmp247,
 1104 01d2 0FD9     		bls	.L90	@,
 451:src/sim900_800.c **** 						{
 452:src/sim900_800.c **** 							prestadorSimState = 0;
 1105              		.loc 1 452 0
 1106 01d4 6A4B     		ldr	r3, .L94+8	@ tmp248,
 1107 01d6 0022     		movs	r2, #0	@ tmp249,
 1108 01d8 1A70     		strb	r2, [r3]	@ tmp250, prestadorSimState
 453:src/sim900_800.c **** 							//prestadorSimTime = 150;
 454:src/sim900_800.c **** 							prestadorSimSelect++;
ARM GAS  /tmp/ccNuUijR.s 			page 29


 1109              		.loc 1 454 0
 1110 01da 684B     		ldr	r3, .L94+4	@ tmp251,
 1111 01dc 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimSelect
 1112 01de 0133     		adds	r3, r3, #1	@ tmp252,
 1113 01e0 DAB2     		uxtb	r2, r3	@ D.7895, tmp252
 1114 01e2 664B     		ldr	r3, .L94+4	@ tmp253,
 1115 01e4 1A70     		strb	r2, [r3]	@ tmp254, prestadorSimSelect
 455:src/sim900_800.c **** 
 456:src/sim900_800.c **** 						}
 457:src/sim900_800.c **** 						break;
 1116              		.loc 1 457 0
 1117 01e6 05E0     		b	.L90	@
 1118              	.L85:
 458:src/sim900_800.c **** 
 459:src/sim900_800.c **** 					default:
 460:src/sim900_800.c **** 						prestadorSimState = 0;
 1119              		.loc 1 460 0
 1120 01e8 654B     		ldr	r3, .L94+8	@ tmp255,
 1121 01ea 0022     		movs	r2, #0	@ tmp256,
 1122 01ec 1A70     		strb	r2, [r3]	@ tmp257, prestadorSimState
 461:src/sim900_800.c **** 						break;
 1123              		.loc 1 461 0
 1124 01ee 02E0     		b	.L56	@
 1125              	.L89:
 398:src/sim900_800.c **** 					case 2:
 1126              		.loc 1 398 0
 1127 01f0 C046     		nop
 1128 01f2 00E0     		b	.L56	@
 1129              	.L90:
 457:src/sim900_800.c **** 
 1130              		.loc 1 457 0
 1131 01f4 C046     		nop
 1132              	.L56:
 462:src/sim900_800.c **** 					}
 463:src/sim900_800.c **** 				}
 464:src/sim900_800.c **** 			case 2:
 465:src/sim900_800.c **** 				if (*prestadorSim2 == 0)
 1133              		.loc 1 465 0
 1134 01f6 019B     		ldr	r3, [sp, #4]	@ tmp258, prestadorSim2
 1135 01f8 1B78     		ldrb	r3, [r3]	@ D.7895, *prestadorSim2_99(D)
 1136 01fa 002B     		cmp	r3, #0	@ D.7895,
 1137 01fc 00D0     		beq	.LCB748	@
 1138 01fe DFE0     		b	.L91	@long jump	@
 1139              	.LCB748:
 466:src/sim900_800.c **** 				{
 467:src/sim900_800.c **** 					switch(prestadorSimState)
 1140              		.loc 1 467 0
 1141 0200 5F4B     		ldr	r3, .L94+8	@ tmp259,
 1142 0202 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 1143 0204 012B     		cmp	r3, #1	@ D.7896,
 1144 0206 0BD0     		beq	.L74	@,
 1145 0208 022B     		cmp	r3, #2	@ D.7896,
 1146 020a 2BD0     		beq	.L75	@,
 1147 020c 002B     		cmp	r3, #0	@ D.7896,
 1148 020e 00D0     		beq	.LCB756	@
 1149 0210 A9E0     		b	.L86	@long jump	@
 1150              	.LCB756:
ARM GAS  /tmp/ccNuUijR.s 			page 30


 468:src/sim900_800.c **** 					{
 469:src/sim900_800.c **** 						case 0:
 470:src/sim900_800.c **** 							if (*pGSMHWstatus & 0x02);
 471:src/sim900_800.c **** 								prestadorSimState++;
 1151              		.loc 1 471 0
 1152 0212 5B4B     		ldr	r3, .L94+8	@ tmp262,
 1153 0214 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 1154 0216 0133     		adds	r3, r3, #1	@ tmp263,
 1155 0218 DAB2     		uxtb	r2, r3	@ D.7895, tmp263
 1156 021a 594B     		ldr	r3, .L94+8	@ tmp264,
 1157 021c 1A70     		strb	r2, [r3]	@ tmp265, prestadorSimState
 472:src/sim900_800.c **** 							break;
 1158              		.loc 1 472 0
 1159 021e A9E0     		b	.L72	@
 1160              	.L74:
 473:src/sim900_800.c **** 						case 1:
 474:src/sim900_800.c **** 							i = GSM_SetSIM (2);
 1161              		.loc 1 474 0
 1162 0220 1724     		movs	r4, #23	@ tmp266,
 1163 0222 6C44     		add	r4, r4, sp	@ tmp266,
 1164 0224 0220     		movs	r0, #2	@,
 1165 0226 FFF7FEFF 		bl	GSM_SetSIM	@
 1166 022a 0300     		movs	r3, r0	@ tmp267,
 1167 022c 2370     		strb	r3, [r4]	@ tmp269, i
 475:src/sim900_800.c **** 
 476:src/sim900_800.c **** 							if (i == 2)
 1168              		.loc 1 476 0
 1169 022e 1723     		movs	r3, #23	@ tmp270,
 1170 0230 6B44     		add	r3, r3, sp	@ tmp270,
 1171 0232 1B78     		ldrb	r3, [r3]	@ tmp271, i
 1172 0234 022B     		cmp	r3, #2	@ tmp271,
 1173 0236 05D1     		bne	.L77	@,
 477:src/sim900_800.c **** 								prestadorSimState++;
 1174              		.loc 1 477 0
 1175 0238 514B     		ldr	r3, .L94+8	@ tmp272,
 1176 023a 1B78     		ldrb	r3, [r3]	@ D.7895, prestadorSimState
 1177 023c 0133     		adds	r3, r3, #1	@ tmp273,
 1178 023e DAB2     		uxtb	r2, r3	@ D.7895, tmp273
 1179 0240 4F4B     		ldr	r3, .L94+8	@ tmp274,
 1180 0242 1A70     		strb	r2, [r3]	@ tmp275, prestadorSimState
 1181              	.L77:
 478:src/sim900_800.c **** 							if (i > 2)
 1182              		.loc 1 478 0
 1183 0244 1723     		movs	r3, #23	@ tmp276,
 1184 0246 6B44     		add	r3, r3, sp	@ tmp276,
 1185 0248 1B78     		ldrb	r3, [r3]	@ tmp277, i
 1186 024a 022B     		cmp	r3, #2	@ tmp277,
 1187 024c 00D8     		bhi	.LCB790	@
 1188 024e 8EE0     		b	.L92	@long jump	@
 1189              	.LCB790:
 479:src/sim900_800.c **** 							{
 480:src/sim900_800.c **** 								prestadorSimState = 0;
 1190              		.loc 1 480 0
 1191 0250 4B4B     		ldr	r3, .L94+8	@ tmp278,
 1192 0252 0022     		movs	r2, #0	@ tmp279,
 1193 0254 1A70     		strb	r2, [r3]	@ tmp280, prestadorSimState
 481:src/sim900_800.c **** 								prestadorSimSelect = 0;
ARM GAS  /tmp/ccNuUijR.s 			page 31


 1194              		.loc 1 481 0
 1195 0256 494B     		ldr	r3, .L94+4	@ tmp281,
 1196 0258 0022     		movs	r2, #0	@ tmp282,
 1197 025a 1A70     		strb	r2, [r3]	@ tmp283, prestadorSimSelect
 482:src/sim900_800.c **** 								prestadorSimTime = 150;
 1198              		.loc 1 482 0
 1199 025c 464B     		ldr	r3, .L94	@ tmp284,
 1200 025e 9622     		movs	r2, #150	@ tmp285,
 1201 0260 1A70     		strb	r2, [r3]	@ tmp286, prestadorSimTime
 483:src/sim900_800.c **** 							}
 484:src/sim900_800.c **** 
 485:src/sim900_800.c **** 							break;
 1202              		.loc 1 485 0
 1203 0262 84E0     		b	.L92	@
 1204              	.L75:
 486:src/sim900_800.c **** 						case 2:
 487:src/sim900_800.c **** 							i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 1205              		.loc 1 487 0
 1206 0264 1724     		movs	r4, #23	@ tmp287,
 1207 0266 6C44     		add	r4, r4, sp	@ tmp287,
 1208 0268 464B     		ldr	r3, .L94+12	@ tmp288,
 1209 026a 4748     		ldr	r0, .L94+16	@ tmp289,
 1210 026c 0122     		movs	r2, #1	@,
 1211 026e 0F21     		movs	r1, #15	@,
 1212 0270 FFF7FEFF 		bl	GSMSendCommand	@
 1213 0274 0300     		movs	r3, r0	@ tmp290,
 1214 0276 2370     		strb	r3, [r4]	@ tmp292, i
 488:src/sim900_800.c **** 
 489:src/sim900_800.c **** 							if (i == 2)
 1215              		.loc 1 489 0
 1216 0278 1723     		movs	r3, #23	@ tmp293,
 1217 027a 6B44     		add	r3, r3, sp	@ tmp293,
 1218 027c 1B78     		ldrb	r3, [r3]	@ tmp294, i
 1219 027e 022B     		cmp	r3, #2	@ tmp294,
 1220 0280 62D1     		bne	.L79	@,
 490:src/sim900_800.c **** 							{
 491:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") -
 1221              		.loc 1 491 0
 1222 0282 4249     		ldr	r1, .L94+20	@ tmp295,
 1223 0284 3F4B     		ldr	r3, .L94+12	@ tmp296,
 1224 0286 0522     		movs	r2, #5	@,
 1225 0288 1800     		movs	r0, r3	@, tmp296
 1226 028a FFF7FEFF 		bl	strncmp	@
 1227 028e 031E     		subs	r3, r0, #0	@ D.7896,,
 1228 0290 54D1     		bne	.L80	@,
 492:src/sim900_800.c **** 								{
 493:src/sim900_800.c **** 
 494:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1229              		.loc 1 494 0
 1230 0292 0A99     		ldr	r1, [sp, #40]	@ tmp297, pCONFIGURACIONgprsProveedor1
 1231 0294 3E4B     		ldr	r3, .L94+24	@ tmp298,
 1232 0296 0322     		movs	r2, #3	@,
 1233 0298 1800     		movs	r0, r3	@, tmp298
 1234 029a FFF7FEFF 		bl	strncmp	@
 1235 029e 031E     		subs	r3, r0, #0	@ D.7896,,
 1236 02a0 20D1     		bne	.L81	@,
 495:src/sim900_800.c **** 									{
ARM GAS  /tmp/ccNuUijR.s 			page 32


 496:src/sim900_800.c **** 										*prestadorSim2 = 1;
 1237              		.loc 1 496 0
 1238 02a2 019B     		ldr	r3, [sp, #4]	@ tmp299, prestadorSim2
 1239 02a4 0122     		movs	r2, #1	@ tmp300,
 1240 02a6 1A70     		strb	r2, [r3]	@ tmp301, *prestadorSim2_99(D)
 497:src/sim900_800.c **** 
 498:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN1);
 1241              		.loc 1 498 0
 1242 02a8 009A     		ldr	r2, [sp]	@ tmp302, pCONFIGURACIONgprsAPN1
 1243 02aa 3F4B     		ldr	r3, .L94+48	@ tmp303,
 1244 02ac 1100     		movs	r1, r2	@, tmp302
 1245 02ae 1800     		movs	r0, r3	@, tmp303
 1246 02b0 FFF7FEFF 		bl	strcpy	@
 499:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1247              		.loc 1 499 0
 1248 02b4 089A     		ldr	r2, [sp, #32]	@ tmp304, pCONFIGURACIONgprsUsuario1
 1249 02b6 3D4B     		ldr	r3, .L94+52	@ tmp305,
 1250 02b8 1100     		movs	r1, r2	@, tmp304
 1251 02ba 1800     		movs	r0, r3	@, tmp305
 1252 02bc FFF7FEFF 		bl	strcpy	@
 500:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave1);
 1253              		.loc 1 500 0
 1254 02c0 099A     		ldr	r2, [sp, #36]	@ tmp306, pCONFIGURACIONgprsClave1
 1255 02c2 3B4B     		ldr	r3, .L94+56	@ tmp307,
 1256 02c4 1100     		movs	r1, r2	@, tmp306
 1257 02c6 1800     		movs	r0, r3	@, tmp307
 1258 02c8 FFF7FEFF 		bl	strcpy	@
 501:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1259              		.loc 1 501 0
 1260 02cc 0F9A     		ldr	r2, [sp, #60]	@ tmp308, pCONFIGURACIONIPREMOTE
 1261 02ce 344B     		ldr	r3, .L94+40	@ tmp309,
 1262 02d0 1100     		movs	r1, r2	@, tmp308
 1263 02d2 1800     		movs	r0, r3	@, tmp309
 1264 02d4 FFF7FEFF 		bl	strcpy	@
 502:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1265              		.loc 1 502 0
 1266 02d8 109A     		ldr	r2, [sp, #64]	@ tmp310, pCONFIGURACIONPORTREMOTE
 1267 02da 324B     		ldr	r3, .L94+44	@ tmp311,
 1268 02dc 1100     		movs	r1, r2	@, tmp310
 1269 02de 1800     		movs	r0, r3	@, tmp311
 1270 02e0 FFF7FEFF 		bl	strcpy	@
 1271              	.L81:
 503:src/sim900_800.c **** 									}
 504:src/sim900_800.c **** 
 505:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1272              		.loc 1 505 0
 1273 02e4 0E99     		ldr	r1, [sp, #56]	@ tmp312, pCONFIGURACIONgprsProveedor2
 1274 02e6 2A4B     		ldr	r3, .L94+24	@ tmp313,
 1275 02e8 0322     		movs	r2, #3	@,
 1276 02ea 1800     		movs	r0, r3	@, tmp313
 1277 02ec FFF7FEFF 		bl	strncmp	@
 1278 02f0 031E     		subs	r3, r0, #0	@ D.7896,,
 1279 02f2 20D1     		bne	.L82	@,
 506:src/sim900_800.c **** 									{
 507:src/sim900_800.c **** 										*prestadorSim2 = 2;
 1280              		.loc 1 507 0
 1281 02f4 019B     		ldr	r3, [sp, #4]	@ tmp314, prestadorSim2
ARM GAS  /tmp/ccNuUijR.s 			page 33


 1282 02f6 0222     		movs	r2, #2	@ tmp315,
 1283 02f8 1A70     		strb	r2, [r3]	@ tmp316, *prestadorSim2_99(D)
 508:src/sim900_800.c **** 
 509:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN2);
 1284              		.loc 1 509 0
 1285 02fa 0B9A     		ldr	r2, [sp, #44]	@ tmp317, pCONFIGURACIONgprsAPN2
 1286 02fc 2A4B     		ldr	r3, .L94+48	@ tmp318,
 1287 02fe 1100     		movs	r1, r2	@, tmp317
 1288 0300 1800     		movs	r0, r3	@, tmp318
 1289 0302 FFF7FEFF 		bl	strcpy	@
 510:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1290              		.loc 1 510 0
 1291 0306 0C9A     		ldr	r2, [sp, #48]	@ tmp319, pCONFIGURACIONgprsUsuario2
 1292 0308 284B     		ldr	r3, .L94+52	@ tmp320,
 1293 030a 1100     		movs	r1, r2	@, tmp319
 1294 030c 1800     		movs	r0, r3	@, tmp320
 1295 030e FFF7FEFF 		bl	strcpy	@
 511:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave2);
 1296              		.loc 1 511 0
 1297 0312 0D9A     		ldr	r2, [sp, #52]	@ tmp321, pCONFIGURACIONgprsClave2
 1298 0314 264B     		ldr	r3, .L94+56	@ tmp322,
 1299 0316 1100     		movs	r1, r2	@, tmp321
 1300 0318 1800     		movs	r0, r3	@, tmp322
 1301 031a FFF7FEFF 		bl	strcpy	@
 512:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1302              		.loc 1 512 0
 1303 031e 0F9A     		ldr	r2, [sp, #60]	@ tmp323, pCONFIGURACIONIPREMOTE
 1304 0320 1F4B     		ldr	r3, .L94+40	@ tmp324,
 1305 0322 1100     		movs	r1, r2	@, tmp323
 1306 0324 1800     		movs	r0, r3	@, tmp324
 1307 0326 FFF7FEFF 		bl	strcpy	@
 513:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1308              		.loc 1 513 0
 1309 032a 109A     		ldr	r2, [sp, #64]	@ tmp325, pCONFIGURACIONPORTREMOTE
 1310 032c 1D4B     		ldr	r3, .L94+44	@ tmp326,
 1311 032e 1100     		movs	r1, r2	@, tmp325
 1312 0330 1800     		movs	r0, r3	@, tmp326
 1313 0332 FFF7FEFF 		bl	strcpy	@
 1314              	.L82:
 514:src/sim900_800.c **** 									}
 515:src/sim900_800.c **** 
 516:src/sim900_800.c **** /*									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Pe
 517:src/sim900_800.c **** 									{
 518:src/sim900_800.c **** 										*prestadorSim2 = 1;
 519:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Personal    ");
 520:src/sim900_800.c **** 									}
 521:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movi
 522:src/sim900_800.c **** 									{
 523:src/sim900_800.c **** 										*prestadorSim2 = 2;
 524:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Movistar    ");
 525:src/sim900_800.c **** 									}
 526:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro")
 527:src/sim900_800.c **** 									{
 528:src/sim900_800.c **** 										*prestadorSim2 = 3;
 529:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n      Claro     ");
 530:src/sim900_800.c **** 									}
 531:src/sim900_800.c **** */
ARM GAS  /tmp/ccNuUijR.s 			page 34


 532:src/sim900_800.c **** 									prestadorSimState = 0;
 1315              		.loc 1 532 0
 1316 0336 124B     		ldr	r3, .L94+8	@ tmp327,
 1317 0338 0022     		movs	r2, #0	@ tmp328,
 1318 033a 1A70     		strb	r2, [r3]	@ tmp329, prestadorSimState
 1319              	.L80:
 533:src/sim900_800.c **** 
 534:src/sim900_800.c **** 								}
 535:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1320              		.loc 1 535 0
 1321 033c 0F4B     		ldr	r3, .L94+4	@ tmp330,
 1322 033e 0022     		movs	r2, #0	@ tmp331,
 1323 0340 1A70     		strb	r2, [r3]	@ tmp332, prestadorSimSelect
 536:src/sim900_800.c **** 								prestadorSimTime = 150;
 1324              		.loc 1 536 0
 1325 0342 0D4B     		ldr	r3, .L94	@ tmp333,
 1326 0344 9622     		movs	r2, #150	@ tmp334,
 1327 0346 1A70     		strb	r2, [r3]	@ tmp335, prestadorSimTime
 1328              	.L79:
 537:src/sim900_800.c **** 							}
 538:src/sim900_800.c **** 							if (i > 2)
 1329              		.loc 1 538 0
 1330 0348 1723     		movs	r3, #23	@ tmp336,
 1331 034a 6B44     		add	r3, r3, sp	@ tmp336,
 1332 034c 1B78     		ldrb	r3, [r3]	@ tmp337, i
 1333 034e 022B     		cmp	r3, #2	@ tmp337,
 1334 0350 0FD9     		bls	.L93	@,
 539:src/sim900_800.c **** 							{
 540:src/sim900_800.c **** 								prestadorSimState = 0;
 1335              		.loc 1 540 0
 1336 0352 0B4B     		ldr	r3, .L94+8	@ tmp338,
 1337 0354 0022     		movs	r2, #0	@ tmp339,
 1338 0356 1A70     		strb	r2, [r3]	@ tmp340, prestadorSimState
 541:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1339              		.loc 1 541 0
 1340 0358 084B     		ldr	r3, .L94+4	@ tmp341,
 1341 035a 0022     		movs	r2, #0	@ tmp342,
 1342 035c 1A70     		strb	r2, [r3]	@ tmp343, prestadorSimSelect
 542:src/sim900_800.c **** 								prestadorSimTime = 150;
 1343              		.loc 1 542 0
 1344 035e 064B     		ldr	r3, .L94	@ tmp344,
 1345 0360 9622     		movs	r2, #150	@ tmp345,
 1346 0362 1A70     		strb	r2, [r3]	@ tmp346, prestadorSimTime
 543:src/sim900_800.c **** 							}
 544:src/sim900_800.c **** 							break;
 1347              		.loc 1 544 0
 1348 0364 05E0     		b	.L93	@
 1349              	.L86:
 545:src/sim900_800.c **** 
 546:src/sim900_800.c **** 						default:
 547:src/sim900_800.c **** 							prestadorSimState = 0;
 1350              		.loc 1 547 0
 1351 0366 064B     		ldr	r3, .L94+8	@ tmp347,
 1352 0368 0022     		movs	r2, #0	@ tmp348,
 1353 036a 1A70     		strb	r2, [r3]	@ tmp349, prestadorSimState
 548:src/sim900_800.c **** 							break;
 1354              		.loc 1 548 0
ARM GAS  /tmp/ccNuUijR.s 			page 35


 1355 036c 02E0     		b	.L72	@
 1356              	.L92:
 485:src/sim900_800.c **** 						case 2:
 1357              		.loc 1 485 0
 1358 036e C046     		nop
 1359 0370 26E0     		b	.L91	@
 1360              	.L93:
 544:src/sim900_800.c **** 
 1361              		.loc 1 544 0
 1362 0372 C046     		nop
 1363              	.L72:
 549:src/sim900_800.c **** 					}
 550:src/sim900_800.c **** 				}
 551:src/sim900_800.c **** 				break;
 1364              		.loc 1 551 0 discriminator 1
 1365 0374 24E0     		b	.L91	@
 1366              	.L95:
 1367 0376 C046     		.align	2
 1368              	.L94:
 1369 0378 00000000 		.word	prestadorSimTime
 1370 037c 00000000 		.word	prestadorSimSelect
 1371 0380 00000000 		.word	prestadorSimState
 1372 0384 00000000 		.word	GSMbuffRtaCommand
 1373 0388 00000000 		.word	.LC18
 1374 038c 0C000000 		.word	.LC20
 1375 0390 08000000 		.word	GSMbuffRtaCommand+8
 1376 0394 00000000 		.word	SIM900APNSIM1
 1377 0398 00000000 		.word	SIM900USUARIOSIM1
 1378 039c 00000000 		.word	SIM900CLAVESIM1
 1379 03a0 00000000 		.word	SIM900IPREMOTE
 1380 03a4 00000000 		.word	SIM900PORTREMOTE
 1381 03a8 00000000 		.word	SIM900APNSIM2
 1382 03ac 00000000 		.word	SIM900USUARIOSIM2
 1383 03b0 00000000 		.word	SIM900CLAVESIM2
 1384              	.L84:
 552:src/sim900_800.c **** 
 553:src/sim900_800.c **** 			default:
 554:src/sim900_800.c **** 				prestadorSimSelect = 0;
 1385              		.loc 1 554 0
 1386 03b4 044B     		ldr	r3, .L96	@ tmp350,
 1387 03b6 0022     		movs	r2, #0	@ tmp351,
 1388 03b8 1A70     		strb	r2, [r3]	@ tmp352, prestadorSimSelect
 555:src/sim900_800.c **** 				break;
 1389              		.loc 1 555 0
 1390 03ba 02E0     		b	.L53	@
 1391              	.L88:
 368:src/sim900_800.c **** 			case 1:
 1392              		.loc 1 368 0
 1393 03bc C046     		nop
 1394 03be 00E0     		b	.L87	@
 1395              	.L91:
 551:src/sim900_800.c **** 
 1396              		.loc 1 551 0
 1397 03c0 C046     		nop
 1398              	.L53:
 1399              	.L87:
 556:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 36


 557:src/sim900_800.c **** 
 558:src/sim900_800.c **** 		}
 559:src/sim900_800.c **** 
 560:src/sim900_800.c **** 	}
 561:src/sim900_800.c **** }
 1400              		.loc 1 561 0
 1401 03c2 C046     		nop
 1402 03c4 06B0     		add	sp, sp, #24	@,,
 1403              		@ sp needed	@
 1404 03c6 10BD     		pop	{r4, pc}
 1405              	.L97:
 1406              		.align	2
 1407              	.L96:
 1408 03c8 00000000 		.word	prestadorSimSelect
 1409              		.cfi_endproc
 1410              	.LFE25:
 1411              		.size	GSMPrestador, .-GSMPrestador
 1412              		.section	.rodata
 1413 0012 0000     		.align	2
 1414              	.LC33:
 1415 0014 41542B43 		.ascii	"AT+CIPSHUT\015\012\000"
 1415      49505348 
 1415      55540D0A 
 1415      00
 1416              		.section	.text.GSMCloseIP,"ax",%progbits
 1417              		.align	2
 1418              		.global	GSMCloseIP
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	GSMCloseIP, %function
 1422              	GSMCloseIP:
 1423              	.LFB26:
 562:src/sim900_800.c **** 
 563:src/sim900_800.c **** char GSMCloseIP(void)
 564:src/sim900_800.c **** {
 1424              		.loc 1 564 0
 1425              		.cfi_startproc
 1426 0000 10B5     		push	{r4, lr}	@
 1427              	.LCFI5:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 4, -8
 1430              		.cfi_offset 14, -4
 1431 0002 82B0     		sub	sp, sp, #8	@,,
 1432              	.LCFI6:
 1433              		.cfi_def_cfa_offset 16
 565:src/sim900_800.c **** 	unsigned char i = 0;
 1434              		.loc 1 565 0
 1435 0004 6B46     		mov	r3, sp	@ tmp136,
 1436 0006 0733     		adds	r3, r3, #7	@ tmp113,
 1437 0008 0022     		movs	r2, #0	@ tmp114,
 1438 000a 1A70     		strb	r2, [r3]	@ tmp115, i
 566:src/sim900_800.c **** 
 567:src/sim900_800.c **** 	if (flagCloseIP == 1)
 1439              		.loc 1 567 0
 1440 000c 154B     		ldr	r3, .L103	@ tmp116,
 1441 000e 1B78     		ldrb	r3, [r3]	@ D.7900, flagCloseIP
 1442 0010 012B     		cmp	r3, #1	@ D.7900,
ARM GAS  /tmp/ccNuUijR.s 			page 37


 1443 0012 23D1     		bne	.L99	@,
 568:src/sim900_800.c **** 	{
 569:src/sim900_800.c **** 		i = GSMSendCommand ("AT+CIPSHUT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 1444              		.loc 1 569 0
 1445 0014 6B46     		mov	r3, sp	@ tmp137,
 1446 0016 DC1D     		adds	r4, r3, #7	@ tmp117, tmp137,
 1447 0018 134B     		ldr	r3, .L103+4	@ tmp118,
 1448 001a 1448     		ldr	r0, .L103+8	@ tmp119,
 1449 001c 0022     		movs	r2, #0	@,
 1450 001e 0F21     		movs	r1, #15	@,
 1451 0020 FFF7FEFF 		bl	GSMSendCommand	@
 1452 0024 0300     		movs	r3, r0	@ tmp120,
 1453 0026 2370     		strb	r3, [r4]	@ tmp122, i
 570:src/sim900_800.c **** 
 571:src/sim900_800.c **** 		if (i == 2)
 1454              		.loc 1 571 0
 1455 0028 6B46     		mov	r3, sp	@ tmp138,
 1456 002a 0733     		adds	r3, r3, #7	@ tmp123,
 1457 002c 1B78     		ldrb	r3, [r3]	@ tmp124, i
 1458 002e 022B     		cmp	r3, #2	@ tmp124,
 1459 0030 06D1     		bne	.L100	@,
 572:src/sim900_800.c **** 		{
 573:src/sim900_800.c **** 			flagCloseIP = 0;
 1460              		.loc 1 573 0
 1461 0032 0C4B     		ldr	r3, .L103	@ tmp125,
 1462 0034 0022     		movs	r2, #0	@ tmp126,
 1463 0036 1A70     		strb	r2, [r3]	@ tmp127, flagCloseIP
 574:src/sim900_800.c **** 			return i;
 1464              		.loc 1 574 0
 1465 0038 6B46     		mov	r3, sp	@ tmp139,
 1466 003a 0733     		adds	r3, r3, #7	@ tmp128,
 1467 003c 1B78     		ldrb	r3, [r3]	@ D.7899, i
 1468 003e 0EE0     		b	.L101	@
 1469              	.L100:
 575:src/sim900_800.c **** 		}
 576:src/sim900_800.c **** 		if (i > 2)
 1470              		.loc 1 576 0
 1471 0040 6B46     		mov	r3, sp	@ tmp140,
 1472 0042 0733     		adds	r3, r3, #7	@ tmp129,
 1473 0044 1B78     		ldrb	r3, [r3]	@ tmp130, i
 1474 0046 022B     		cmp	r3, #2	@ tmp130,
 1475 0048 06D9     		bls	.L102	@,
 577:src/sim900_800.c **** 		{
 578:src/sim900_800.c **** 			flagCloseIP = 0;
 1476              		.loc 1 578 0
 1477 004a 064B     		ldr	r3, .L103	@ tmp131,
 1478 004c 0022     		movs	r2, #0	@ tmp132,
 1479 004e 1A70     		strb	r2, [r3]	@ tmp133, flagCloseIP
 579:src/sim900_800.c **** 			return i;
 1480              		.loc 1 579 0
 1481 0050 6B46     		mov	r3, sp	@ tmp141,
 1482 0052 0733     		adds	r3, r3, #7	@ tmp134,
 1483 0054 1B78     		ldrb	r3, [r3]	@ D.7899, i
 1484 0056 02E0     		b	.L101	@
 1485              	.L102:
 580:src/sim900_800.c **** 		}
 581:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 38


 582:src/sim900_800.c **** 		return 1;
 1486              		.loc 1 582 0
 1487 0058 0123     		movs	r3, #1	@ D.7899,
 1488 005a 00E0     		b	.L101	@
 1489              	.L99:
 583:src/sim900_800.c **** 	}
 584:src/sim900_800.c **** 
 585:src/sim900_800.c **** 	return 0;
 1490              		.loc 1 585 0
 1491 005c 0023     		movs	r3, #0	@ D.7899,
 1492              	.L101:
 586:src/sim900_800.c **** }
 1493              		.loc 1 586 0
 1494 005e 1800     		movs	r0, r3	@, <retval>
 1495 0060 02B0     		add	sp, sp, #8	@,,
 1496              		@ sp needed	@
 1497 0062 10BD     		pop	{r4, pc}
 1498              	.L104:
 1499              		.align	2
 1500              	.L103:
 1501 0064 00000000 		.word	flagCloseIP
 1502 0068 00000000 		.word	GSMbuffRtaCommand
 1503 006c 14000000 		.word	.LC33
 1504              		.cfi_endproc
 1505              	.LFE26:
 1506              		.size	GSMCloseIP, .-GSMCloseIP
 1507              		.section	.rodata
 1508 0021 000000   		.align	2
 1509              	.LC37:
 1510 0024 0D0A00   		.ascii	"\015\012\000"
 1511 0027 00       		.align	2
 1512              	.LC41:
 1513 0028 3E2000   		.ascii	"> \000"
 1514 002b 00       		.align	2
 1515              	.LC43:
 1516 002c 41544F4B 		.ascii	"ATOK\000"
 1516      00
 1517 0031 000000   		.align	2
 1518              	.LC45:
 1519 0034 4F4B00   		.ascii	"OK\000"
 1520 0037 00       		.align	2
 1521              	.LC47:
 1522 0038 4552524F 		.ascii	"ERROR\000"
 1522      5200
 1523 003e 0000     		.align	2
 1524              	.LC54:
 1525 0040 43616C6C 		.ascii	"Call Ready\000"
 1525      20526561 
 1525      647900
 1526 004b 00       		.align	2
 1527              	.LC56:
 1528 004c 534D5320 		.ascii	"SMS Ready\000"
 1528      52656164 
 1528      7900
 1529 0056 0000     		.align	2
 1530              	.LC58:
 1531 0058 4E4F524D 		.ascii	"NORMAL POWER DOWN\000"
ARM GAS  /tmp/ccNuUijR.s 			page 39


 1531      414C2050 
 1531      4F574552 
 1531      20444F57 
 1531      4E00
 1532 006a 0000     		.align	2
 1533              	.LC60:
 1534 006c 2B434D54 		.ascii	"+CMTI: \"SM\",\000"
 1534      493A2022 
 1534      534D222C 
 1534      00
 1535 0079 000000   		.align	2
 1536              	.LC63:
 1537 007c 434C4F53 		.ascii	"CLOSED\000"
 1537      454400
 1538              		.section	.text.GSMReceive,"ax",%progbits
 1539              		.align	2
 1540              		.global	GSMReceive
 1541              		.code	16
 1542              		.thumb_func
 1543              		.type	GSMReceive, %function
 1544              	GSMReceive:
 1545              	.LFB27:
 587:src/sim900_800.c **** 
 588:src/sim900_800.c **** //Procesa respuestas del modulo GSM ubicadas en el buffer buffUARTGSMrx2 con flag PacketReadyUARTGS
 589:src/sim900_800.c **** //revisa los flag de estados GSMConfigGPRSflag GSMSendCommandFlag y revisa respuestas no esperadas
 590:src/sim900_800.c **** //para respuestas no esperadas revisa SMS y avisa la cantidad con GSMCantSMS
 591:src/sim900_800.c **** //void GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, u
 592:src/sim900_800.c **** void GSMReceive (void)
 593:src/sim900_800.c **** {
 1546              		.loc 1 593 0
 1547              		.cfi_startproc
 1548 0000 10B5     		push	{r4, lr}	@
 1549              	.LCFI7:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 4, -8
 1552              		.cfi_offset 14, -4
 594:src/sim900_800.c **** 	//---- Comunicacion con modulo GSM ----//
 595:src/sim900_800.c **** 	if (PacketReadyUARTGSM)
 1553              		.loc 1 595 0
 1554 0002 934B     		ldr	r3, .L123	@ tmp144,
 1555 0004 1B78     		ldrb	r3, [r3]	@ tmp145, PacketReadyUARTGSM
 1556 0006 DBB2     		uxtb	r3, r3	@ D.7902, tmp145
 1557 0008 002B     		cmp	r3, #0	@ D.7902,
 1558 000a 00D1     		bne	.LCB1102	@
 1559 000c 1DE1     		b	.L122	@long jump	@
 1560              	.LCB1102:
 596:src/sim900_800.c **** 	{
 597:src/sim900_800.c **** 		//TODO: para debug envio lo que llega
 598:src/sim900_800.c **** 		ESPPreParser2(buffUARTGSMrx2, buffUARTGSMrx2);
 1561              		.loc 1 598 0
 1562 000e 914A     		ldr	r2, .L123+4	@ tmp146,
 1563 0010 904B     		ldr	r3, .L123+4	@ tmp147,
 1564 0012 1100     		movs	r1, r2	@, tmp146
 1565 0014 1800     		movs	r0, r3	@, tmp147
 1566 0016 FFF7FEFF 		bl	ESPPreParser2	@
 599:src/sim900_800.c **** 		Usart2Send(buffUARTGSMrx2);
 1567              		.loc 1 599 0
ARM GAS  /tmp/ccNuUijR.s 			page 40


 1568 001a 8E4B     		ldr	r3, .L123+4	@ tmp148,
 1569 001c 1800     		movs	r0, r3	@, tmp148
 1570 001e FFF7FEFF 		bl	Usart2Send	@
 600:src/sim900_800.c **** 		Usart2Send("\r\n");
 1571              		.loc 1 600 0
 1572 0022 8D4B     		ldr	r3, .L123+8	@ tmp149,
 1573 0024 1800     		movs	r0, r3	@, tmp149
 1574 0026 FFF7FEFF 		bl	Usart2Send	@
 601:src/sim900_800.c **** 
 602:src/sim900_800.c **** 		if (GSMSendCommandFlag)
 1575              		.loc 1 602 0
 1576 002a 8C4B     		ldr	r3, .L123+12	@ tmp150,
 1577 002c 1B78     		ldrb	r3, [r3]	@ D.7902, GSMSendCommandFlag
 1578 002e 002B     		cmp	r3, #0	@ D.7902,
 1579 0030 41D0     		beq	.L107	@,
 603:src/sim900_800.c **** 		{
 604:src/sim900_800.c **** 			if (GSMSendCommandFlag == 3)
 1580              		.loc 1 604 0
 1581 0032 8A4B     		ldr	r3, .L123+12	@ tmp151,
 1582 0034 1B78     		ldrb	r3, [r3]	@ D.7902, GSMSendCommandFlag
 1583 0036 032B     		cmp	r3, #3	@ D.7902,
 1584 0038 2BD1     		bne	.L108	@,
 605:src/sim900_800.c **** 			{
 606:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_SENDOK[0], strlen((const char 
 1585              		.loc 1 606 0
 1586 003a 8949     		ldr	r1, .L123+16	@ tmp152,
 1587 003c 854B     		ldr	r3, .L123+4	@ tmp153,
 1588 003e 0722     		movs	r2, #7	@,
 1589 0040 1800     		movs	r0, r3	@, tmp153
 1590 0042 FFF7FEFF 		bl	strncmp	@
 1591 0046 031E     		subs	r3, r0, #0	@ D.7903,,
 1592 0048 02D1     		bne	.L109	@,
 607:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1593              		.loc 1 607 0
 1594 004a 844B     		ldr	r3, .L123+12	@ tmp154,
 1595 004c 0422     		movs	r2, #4	@ tmp155,
 1596 004e 1A70     		strb	r2, [r3]	@ tmp156, GSMSendCommandFlag
 1597              	.L109:
 608:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"> ", (sizeof("> ") - 1)))
 1598              		.loc 1 608 0
 1599 0050 8449     		ldr	r1, .L123+20	@ tmp157,
 1600 0052 804B     		ldr	r3, .L123+4	@ tmp158,
 1601 0054 0222     		movs	r2, #2	@,
 1602 0056 1800     		movs	r0, r3	@, tmp158
 1603 0058 FFF7FEFF 		bl	strncmp	@
 1604 005c 031E     		subs	r3, r0, #0	@ D.7903,,
 1605 005e 02D1     		bne	.L110	@,
 609:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1606              		.loc 1 609 0
 1607 0060 7E4B     		ldr	r3, .L123+12	@ tmp159,
 1608 0062 0422     		movs	r2, #4	@ tmp160,
 1609 0064 1A70     		strb	r2, [r3]	@ tmp161, GSMSendCommandFlag
 1610              	.L110:
 610:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"ATOK", (sizeof("ATOK") - 1)))
 1611              		.loc 1 610 0
 1612 0066 8049     		ldr	r1, .L123+24	@ tmp162,
 1613 0068 7A4B     		ldr	r3, .L123+4	@ tmp163,
ARM GAS  /tmp/ccNuUijR.s 			page 41


 1614 006a 0422     		movs	r2, #4	@,
 1615 006c 1800     		movs	r0, r3	@, tmp163
 1616 006e FFF7FEFF 		bl	strncmp	@
 1617 0072 031E     		subs	r3, r0, #0	@ D.7903,,
 1618 0074 02D1     		bne	.L111	@,
 611:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1619              		.loc 1 611 0
 1620 0076 794B     		ldr	r3, .L123+12	@ tmp164,
 1621 0078 0422     		movs	r2, #4	@ tmp165,
 1622 007a 1A70     		strb	r2, [r3]	@ tmp166, GSMSendCommandFlag
 1623              	.L111:
 612:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"OK", (sizeof("OK") - 1)))
 1624              		.loc 1 612 0
 1625 007c 7B49     		ldr	r1, .L123+28	@ tmp167,
 1626 007e 754B     		ldr	r3, .L123+4	@ tmp168,
 1627 0080 0222     		movs	r2, #2	@,
 1628 0082 1800     		movs	r0, r3	@, tmp168
 1629 0084 FFF7FEFF 		bl	strncmp	@
 1630 0088 031E     		subs	r3, r0, #0	@ D.7903,,
 1631 008a 02D1     		bne	.L108	@,
 613:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1632              		.loc 1 613 0
 1633 008c 734B     		ldr	r3, .L123+12	@ tmp169,
 1634 008e 0422     		movs	r2, #4	@ tmp170,
 1635 0090 1A70     		strb	r2, [r3]	@ tmp171, GSMSendCommandFlag
 1636              	.L108:
 614:src/sim900_800.c **** 			}
 615:src/sim900_800.c **** 
 616:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *) "ERROR", (sizeof("ERROR") - 1)))
 1637              		.loc 1 616 0
 1638 0092 7749     		ldr	r1, .L123+32	@ tmp172,
 1639 0094 6F4B     		ldr	r3, .L123+4	@ tmp173,
 1640 0096 0522     		movs	r2, #5	@,
 1641 0098 1800     		movs	r0, r3	@, tmp173
 1642 009a FFF7FEFF 		bl	strncmp	@
 1643 009e 031E     		subs	r3, r0, #0	@ D.7903,,
 1644 00a0 02D1     		bne	.L112	@,
 617:src/sim900_800.c **** 				GSMSendCommandFlag = 5;
 1645              		.loc 1 617 0
 1646 00a2 6E4B     		ldr	r3, .L123+12	@ tmp174,
 1647 00a4 0522     		movs	r2, #5	@ tmp175,
 1648 00a6 1A70     		strb	r2, [r3]	@ tmp176, GSMSendCommandFlag
 1649              	.L112:
 618:src/sim900_800.c **** 
 619:src/sim900_800.c **** 			if (GSMSendCommandFlag == 1)
 1650              		.loc 1 619 0
 1651 00a8 6C4B     		ldr	r3, .L123+12	@ tmp177,
 1652 00aa 1B78     		ldrb	r3, [r3]	@ D.7902, GSMSendCommandFlag
 1653 00ac 012B     		cmp	r3, #1	@ D.7902,
 1654 00ae 02D1     		bne	.L107	@,
 620:src/sim900_800.c **** 			{
 621:src/sim900_800.c **** 				//autorizo la copia siempre
 622:src/sim900_800.c **** 				// if(buffUARTGSMrx2[0] == '+')		//lo que sigue es la respuesta al comando
 623:src/sim900_800.c **** 					GSMSendCommandFlag = 2;
 1655              		.loc 1 623 0
 1656 00b0 6A4B     		ldr	r3, .L123+12	@ tmp178,
 1657 00b2 0222     		movs	r2, #2	@ tmp179,
ARM GAS  /tmp/ccNuUijR.s 			page 42


 1658 00b4 1A70     		strb	r2, [r3]	@ tmp180, GSMSendCommandFlag
 1659              	.L107:
 624:src/sim900_800.c **** 			}
 625:src/sim900_800.c **** 		}
 626:src/sim900_800.c **** 
 627:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 1)
 1660              		.loc 1 627 0
 1661 00b6 6F4B     		ldr	r3, .L123+36	@ tmp181,
 1662 00b8 1B78     		ldrb	r3, [r3]	@ D.7902, GSMConfigGPRSflag
 1663 00ba 012B     		cmp	r3, #1	@ D.7902,
 1664 00bc 10D1     		bne	.L113	@,
 628:src/sim900_800.c **** 		{
 629:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_IPSTATE[0], strlen((const char 
 1665              		.loc 1 629 0
 1666 00be 6E49     		ldr	r1, .L123+40	@ tmp182,
 1667 00c0 644B     		ldr	r3, .L123+4	@ tmp183,
 1668 00c2 0622     		movs	r2, #6	@,
 1669 00c4 1800     		movs	r0, r3	@, tmp183
 1670 00c6 FFF7FEFF 		bl	strncmp	@
 1671 00ca 031E     		subs	r3, r0, #0	@ D.7903,,
 1672 00cc 08D1     		bne	.L113	@,
 630:src/sim900_800.c **** 			{
 631:src/sim900_800.c **** 				strcpy((char *)&GSMbuffStatus[0],(const char *)&buffUARTGSMrx2[sizeof(GSM_IPSTATE)]);
 1673              		.loc 1 631 0
 1674 00ce 6B4A     		ldr	r2, .L123+44	@ tmp184,
 1675 00d0 6B4B     		ldr	r3, .L123+48	@ tmp185,
 1676 00d2 1100     		movs	r1, r2	@, tmp184
 1677 00d4 1800     		movs	r0, r3	@, tmp185
 1678 00d6 FFF7FEFF 		bl	strcpy	@
 632:src/sim900_800.c **** 				GSMConfigGPRSflag = 2;
 1679              		.loc 1 632 0
 1680 00da 664B     		ldr	r3, .L123+36	@ tmp186,
 1681 00dc 0222     		movs	r2, #2	@ tmp187,
 1682 00de 1A70     		strb	r2, [r3]	@ tmp188, GSMConfigGPRSflag
 1683              	.L113:
 633:src/sim900_800.c **** 			}
 634:src/sim900_800.c **** 		}
 635:src/sim900_800.c **** 
 636:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 3)
 1684              		.loc 1 636 0
 1685 00e0 644B     		ldr	r3, .L123+36	@ tmp189,
 1686 00e2 1B78     		ldrb	r3, [r3]	@ D.7902, GSMConfigGPRSflag
 1687 00e4 032B     		cmp	r3, #3	@ D.7902,
 1688 00e6 00D0     		beq	.LCB1221	@
 1689 00e8 65E0     		b	.L114	@long jump	@
 1690              	.LCB1221:
 637:src/sim900_800.c **** 		{
 638:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1691              		.loc 1 638 0
 1692 00ea 5A4B     		ldr	r3, .L123+4	@ tmp190,
 1693 00ec 1B78     		ldrb	r3, [r3]	@ tmp191, buffUARTGSMrx2
 1694 00ee DBB2     		uxtb	r3, r3	@ D.7902, tmp191
 1695 00f0 2F2B     		cmp	r3, #47	@ D.7902,
 1696 00f2 26D9     		bls	.L115	@,
 1697              		.loc 1 638 0 is_stmt 0 discriminator 1
 1698 00f4 574B     		ldr	r3, .L123+4	@ tmp192,
 1699 00f6 1B78     		ldrb	r3, [r3]	@ tmp193, buffUARTGSMrx2
ARM GAS  /tmp/ccNuUijR.s 			page 43


 1700 00f8 DBB2     		uxtb	r3, r3	@ D.7902, tmp193
 1701 00fa 3A2B     		cmp	r3, #58	@ D.7902,
 1702 00fc 21D8     		bhi	.L115	@,
 1703              		.loc 1 638 0 discriminator 2
 1704 00fe 554B     		ldr	r3, .L123+4	@ tmp194,
 1705 0100 5B78     		ldrb	r3, [r3, #1]	@ tmp196,
 1706 0102 DBB2     		uxtb	r3, r3	@ D.7902, tmp196
 1707 0104 2F2B     		cmp	r3, #47	@ D.7902,
 1708 0106 1CD9     		bls	.L115	@,
 1709              		.loc 1 638 0 discriminator 3
 1710 0108 524B     		ldr	r3, .L123+4	@ tmp197,
 1711 010a 5B78     		ldrb	r3, [r3, #1]	@ tmp199,
 1712 010c DBB2     		uxtb	r3, r3	@ D.7902, tmp199
 1713 010e 3A2B     		cmp	r3, #58	@ D.7902,
 1714 0110 17D8     		bhi	.L115	@,
 1715              		.loc 1 638 0 discriminator 4
 1716 0112 504B     		ldr	r3, .L123+4	@ tmp200,
 1717 0114 9B78     		ldrb	r3, [r3, #2]	@ tmp202,
 1718 0116 DBB2     		uxtb	r3, r3	@ D.7902, tmp202
 1719 0118 2F2B     		cmp	r3, #47	@ D.7902,
 1720 011a 12D9     		bls	.L115	@,
 1721              		.loc 1 638 0 discriminator 5
 1722 011c 4D4B     		ldr	r3, .L123+4	@ tmp203,
 1723 011e 9B78     		ldrb	r3, [r3, #2]	@ tmp205,
 1724 0120 DBB2     		uxtb	r3, r3	@ D.7902, tmp205
 1725 0122 3A2B     		cmp	r3, #58	@ D.7902,
 1726 0124 0DD8     		bhi	.L115	@,
 1727              		.loc 1 638 0 discriminator 6
 1728 0126 4B4B     		ldr	r3, .L123+4	@ tmp206,
 1729 0128 DB78     		ldrb	r3, [r3, #3]	@ tmp208,
 1730 012a DBB2     		uxtb	r3, r3	@ D.7902, tmp208
 1731 012c 2E2B     		cmp	r3, #46	@ D.7902,
 1732 012e 08D1     		bne	.L115	@,
 639:src/sim900_800.c **** 			{
 640:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1733              		.loc 1 640 0 is_stmt 1
 1734 0130 4849     		ldr	r1, .L123+4	@ tmp209,
 1735 0132 544B     		ldr	r3, .L123+52	@ tmp210,
 1736 0134 1022     		movs	r2, #16	@,
 1737 0136 1800     		movs	r0, r3	@, tmp210
 1738 0138 FFF7FEFF 		bl	strncpy	@
 641:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1739              		.loc 1 641 0
 1740 013c 474B     		ldr	r3, .L123+12	@ tmp211,
 1741 013e 0422     		movs	r2, #4	@ tmp212,
 1742 0140 1A70     		strb	r2, [r3]	@ tmp213, GSMSendCommandFlag
 1743              	.L115:
 642:src/sim900_800.c **** 			}
 643:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1744              		.loc 1 643 0
 1745 0142 444B     		ldr	r3, .L123+4	@ tmp214,
 1746 0144 1B78     		ldrb	r3, [r3]	@ tmp215, buffUARTGSMrx2
 1747 0146 DBB2     		uxtb	r3, r3	@ D.7902, tmp215
 1748 0148 2F2B     		cmp	r3, #47	@ D.7902,
 1749 014a 1CD9     		bls	.L116	@,
 1750              		.loc 1 643 0 is_stmt 0 discriminator 1
 1751 014c 414B     		ldr	r3, .L123+4	@ tmp216,
ARM GAS  /tmp/ccNuUijR.s 			page 44


 1752 014e 1B78     		ldrb	r3, [r3]	@ tmp217, buffUARTGSMrx2
 1753 0150 DBB2     		uxtb	r3, r3	@ D.7902, tmp217
 1754 0152 3A2B     		cmp	r3, #58	@ D.7902,
 1755 0154 17D8     		bhi	.L116	@,
 1756              		.loc 1 643 0 discriminator 2
 1757 0156 3F4B     		ldr	r3, .L123+4	@ tmp218,
 1758 0158 5B78     		ldrb	r3, [r3, #1]	@ tmp220,
 1759 015a DBB2     		uxtb	r3, r3	@ D.7902, tmp220
 1760 015c 2F2B     		cmp	r3, #47	@ D.7902,
 1761 015e 12D9     		bls	.L116	@,
 1762              		.loc 1 643 0 discriminator 3
 1763 0160 3C4B     		ldr	r3, .L123+4	@ tmp221,
 1764 0162 5B78     		ldrb	r3, [r3, #1]	@ tmp223,
 1765 0164 DBB2     		uxtb	r3, r3	@ D.7902, tmp223
 1766 0166 3A2B     		cmp	r3, #58	@ D.7902,
 1767 0168 0DD8     		bhi	.L116	@,
 1768              		.loc 1 643 0 discriminator 4
 1769 016a 3A4B     		ldr	r3, .L123+4	@ tmp224,
 1770 016c 9B78     		ldrb	r3, [r3, #2]	@ tmp226,
 1771 016e DBB2     		uxtb	r3, r3	@ D.7902, tmp226
 1772 0170 2E2B     		cmp	r3, #46	@ D.7902,
 1773 0172 08D1     		bne	.L116	@,
 644:src/sim900_800.c **** 			{
 645:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1774              		.loc 1 645 0 is_stmt 1
 1775 0174 3749     		ldr	r1, .L123+4	@ tmp227,
 1776 0176 434B     		ldr	r3, .L123+52	@ tmp228,
 1777 0178 1022     		movs	r2, #16	@,
 1778 017a 1800     		movs	r0, r3	@, tmp228
 1779 017c FFF7FEFF 		bl	strncpy	@
 646:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1780              		.loc 1 646 0
 1781 0180 364B     		ldr	r3, .L123+12	@ tmp229,
 1782 0182 0422     		movs	r2, #4	@ tmp230,
 1783 0184 1A70     		strb	r2, [r3]	@ tmp231, GSMSendCommandFlag
 1784              	.L116:
 647:src/sim900_800.c **** 			}
 648:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && buffUARTGSMrx2[1] == '.')
 1785              		.loc 1 648 0
 1786 0186 334B     		ldr	r3, .L123+4	@ tmp232,
 1787 0188 1B78     		ldrb	r3, [r3]	@ tmp233, buffUARTGSMrx2
 1788 018a DBB2     		uxtb	r3, r3	@ D.7902, tmp233
 1789 018c 2F2B     		cmp	r3, #47	@ D.7902,
 1790 018e 12D9     		bls	.L114	@,
 1791              		.loc 1 648 0 is_stmt 0 discriminator 1
 1792 0190 304B     		ldr	r3, .L123+4	@ tmp234,
 1793 0192 1B78     		ldrb	r3, [r3]	@ tmp235, buffUARTGSMrx2
 1794 0194 DBB2     		uxtb	r3, r3	@ D.7902, tmp235
 1795 0196 3A2B     		cmp	r3, #58	@ D.7902,
 1796 0198 0DD8     		bhi	.L114	@,
 1797              		.loc 1 648 0 discriminator 2
 1798 019a 2E4B     		ldr	r3, .L123+4	@ tmp236,
 1799 019c 5B78     		ldrb	r3, [r3, #1]	@ tmp238,
 1800 019e DBB2     		uxtb	r3, r3	@ D.7902, tmp238
 1801 01a0 2E2B     		cmp	r3, #46	@ D.7902,
 1802 01a2 08D1     		bne	.L114	@,
 649:src/sim900_800.c **** 			{
ARM GAS  /tmp/ccNuUijR.s 			page 45


 650:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1803              		.loc 1 650 0 is_stmt 1
 1804 01a4 2B49     		ldr	r1, .L123+4	@ tmp239,
 1805 01a6 374B     		ldr	r3, .L123+52	@ tmp240,
 1806 01a8 1022     		movs	r2, #16	@,
 1807 01aa 1800     		movs	r0, r3	@, tmp240
 1808 01ac FFF7FEFF 		bl	strncpy	@
 651:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1809              		.loc 1 651 0
 1810 01b0 2A4B     		ldr	r3, .L123+12	@ tmp241,
 1811 01b2 0422     		movs	r2, #4	@ tmp242,
 1812 01b4 1A70     		strb	r2, [r3]	@ tmp243, GSMSendCommandFlag
 1813              	.L114:
 652:src/sim900_800.c **** 			}
 653:src/sim900_800.c **** 		}
 654:src/sim900_800.c **** 
 655:src/sim900_800.c **** 		//respuestas no esperadas
 656:src/sim900_800.c **** 		//primero reviso flags
 657:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"Call Ready", (sizeof("Call Ready") -
 1814              		.loc 1 657 0
 1815 01b6 3449     		ldr	r1, .L123+56	@ tmp244,
 1816 01b8 264B     		ldr	r3, .L123+4	@ tmp245,
 1817 01ba 0A22     		movs	r2, #10	@,
 1818 01bc 1800     		movs	r0, r3	@, tmp245
 1819 01be FFF7FEFF 		bl	strncmp	@
 1820 01c2 031E     		subs	r3, r0, #0	@ D.7903,,
 1821 01c4 07D1     		bne	.L117	@,
 658:src/sim900_800.c **** 		{
 659:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_RESET_FLAG);
 1822              		.loc 1 659 0
 1823 01c6 8023     		movs	r3, #128	@ tmp271,
 1824 01c8 1B02     		lsls	r3, r3, #8	@ tmp246, tmp271,
 1825 01ca 1800     		movs	r0, r3	@, tmp246
 1826 01cc FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 660:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_CALL);
 1827              		.loc 1 660 0
 1828 01d0 0120     		movs	r0, #1	@,
 1829 01d2 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1830              	.L117:
 661:src/sim900_800.c **** 		}
 662:src/sim900_800.c **** 
 663:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"SMS Ready", (sizeof("SMS Ready") - 1
 1831              		.loc 1 663 0
 1832 01d6 2D49     		ldr	r1, .L123+60	@ tmp247,
 1833 01d8 1E4B     		ldr	r3, .L123+4	@ tmp248,
 1834 01da 0922     		movs	r2, #9	@,
 1835 01dc 1800     		movs	r0, r3	@, tmp248
 1836 01de FFF7FEFF 		bl	strncmp	@
 1837 01e2 031E     		subs	r3, r0, #0	@ D.7903,,
 1838 01e4 02D1     		bne	.L118	@,
 664:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_SMS);
 1839              		.loc 1 664 0
 1840 01e6 0220     		movs	r0, #2	@,
 1841 01e8 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1842              	.L118:
 665:src/sim900_800.c **** 
 666:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"NORMAL POWER DOWN", (sizeof("NORMAL 
ARM GAS  /tmp/ccNuUijR.s 			page 46


 1843              		.loc 1 666 0
 1844 01ec 2849     		ldr	r1, .L123+64	@ tmp249,
 1845 01ee 194B     		ldr	r3, .L123+4	@ tmp250,
 1846 01f0 1122     		movs	r2, #17	@,
 1847 01f2 1800     		movs	r0, r3	@, tmp250
 1848 01f4 FFF7FEFF 		bl	strncmp	@
 1849 01f8 031E     		subs	r3, r0, #0	@ D.7903,,
 1850 01fa 09D1     		bne	.L119	@,
 667:src/sim900_800.c **** 		{
 668:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_RESET_FLAG);
 1851              		.loc 1 668 0
 1852 01fc 8023     		movs	r3, #128	@ tmp269,
 1853 01fe 1B02     		lsls	r3, r3, #8	@ tmp251, tmp269,
 1854 0200 1800     		movs	r0, r3	@, tmp251
 1855 0202 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 669:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_POWER_DOWN);
 1856              		.loc 1 669 0
 1857 0206 8023     		movs	r3, #128	@ tmp270,
 1858 0208 DB01     		lsls	r3, r3, #7	@ tmp252, tmp270,
 1859 020a 1800     		movs	r0, r3	@, tmp252
 1860 020c FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1861              	.L119:
 670:src/sim900_800.c **** 		}
 671:src/sim900_800.c **** 
 672:src/sim900_800.c **** 		// if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTIDS: \"SM\",", sizeof ("+CMTIDS: \
 673:src/sim900_800.c **** 		// {
 674:src/sim900_800.c **** 		// 	GSMCantSMS2 = buffUARTGSMrx2[14] - 48;
 675:src/sim900_800.c **** 		// }
 676:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTI: \"SM\",", sizeof ("+CMTI: \"SM\","
 1862              		.loc 1 676 0
 1863 0210 2049     		ldr	r1, .L123+68	@ tmp253,
 1864 0212 104B     		ldr	r3, .L123+4	@ tmp254,
 1865 0214 0C22     		movs	r2, #12	@,
 1866 0216 1800     		movs	r0, r3	@, tmp254
 1867 0218 FFF7FEFF 		bl	strncmp	@
 1868 021c 031E     		subs	r3, r0, #0	@ D.7903,,
 1869 021e 06D1     		bne	.L120	@,
 677:src/sim900_800.c **** 		{
 678:src/sim900_800.c **** 			//TODO: modificar a dos bytes
 679:src/sim900_800.c **** 			GSMCantSMS = buffUARTGSMrx2[12] - 48;
 1870              		.loc 1 679 0
 1871 0220 0C4B     		ldr	r3, .L123+4	@ tmp255,
 1872 0222 1B7B     		ldrb	r3, [r3, #12]	@ tmp257,
 1873 0224 DBB2     		uxtb	r3, r3	@ D.7902, tmp257
 1874 0226 303B     		subs	r3, r3, #48	@ tmp258,
 1875 0228 DAB2     		uxtb	r2, r3	@ D.7904, tmp258
 1876 022a 1B4B     		ldr	r3, .L123+72	@ tmp259,
 1877 022c 1A70     		strb	r2, [r3]	@ tmp260, GSMCantSMS
 1878              	.L120:
 680:src/sim900_800.c **** 		}
 681:src/sim900_800.c **** 
 682:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"CLOSE
 1879              		.loc 1 682 0
 1880 022e 1B49     		ldr	r1, .L123+76	@ tmp261,
 1881 0230 084B     		ldr	r3, .L123+4	@ tmp262,
 1882 0232 0622     		movs	r2, #6	@,
 1883 0234 1800     		movs	r0, r3	@, tmp262
ARM GAS  /tmp/ccNuUijR.s 			page 47


 1884 0236 FFF7FEFF 		bl	strncmp	@
 1885 023a 031E     		subs	r3, r0, #0	@ D.7903,,
 1886 023c 02D1     		bne	.L121	@,
 683:src/sim900_800.c **** 		{
 684:src/sim900_800.c **** 			flagCloseIP = 1;
 1887              		.loc 1 684 0
 1888 023e 184B     		ldr	r3, .L123+80	@ tmp263,
 1889 0240 0122     		movs	r2, #1	@ tmp264,
 1890 0242 1A70     		strb	r2, [r3]	@ tmp265, flagCloseIP
 1891              	.L121:
 685:src/sim900_800.c **** 		}
 686:src/sim900_800.c **** 
 687:src/sim900_800.c **** 		PacketReadyUARTGSM = 0;
 1892              		.loc 1 687 0
 1893 0244 024B     		ldr	r3, .L123	@ tmp266,
 1894 0246 0022     		movs	r2, #0	@ tmp267,
 1895 0248 1A70     		strb	r2, [r3]	@ tmp268, PacketReadyUARTGSM
 1896              	.L122:
 688:src/sim900_800.c **** 	}
 689:src/sim900_800.c **** }
 1897              		.loc 1 689 0
 1898 024a C046     		nop
 1899              		@ sp needed	@
 1900 024c 10BD     		pop	{r4, pc}
 1901              	.L124:
 1902 024e C046     		.align	2
 1903              	.L123:
 1904 0250 00000000 		.word	PacketReadyUARTGSM
 1905 0254 00000000 		.word	buffUARTGSMrx2
 1906 0258 24000000 		.word	.LC37
 1907 025c 00000000 		.word	GSMSendCommandFlag
 1908 0260 00000000 		.word	GSM_SENDOK
 1909 0264 28000000 		.word	.LC41
 1910 0268 2C000000 		.word	.LC43
 1911 026c 34000000 		.word	.LC45
 1912 0270 38000000 		.word	.LC47
 1913 0274 00000000 		.word	GSMConfigGPRSflag
 1914 0278 00000000 		.word	GSM_IPSTATE
 1915 027c 07000000 		.word	buffUARTGSMrx2+7
 1916 0280 00000000 		.word	GSMbuffStatus
 1917 0284 00000000 		.word	GSMIPadd
 1918 0288 40000000 		.word	.LC54
 1919 028c 4C000000 		.word	.LC56
 1920 0290 58000000 		.word	.LC58
 1921 0294 6C000000 		.word	.LC60
 1922 0298 00000000 		.word	GSMCantSMS
 1923 029c 7C000000 		.word	.LC63
 1924 02a0 00000000 		.word	flagCloseIP
 1925              		.cfi_endproc
 1926              	.LFE27:
 1927              		.size	GSMReceive, .-GSMReceive
 1928              		.section	.text.GSMSendCommand,"ax",%progbits
 1929              		.align	2
 1930              		.global	GSMSendCommand
 1931              		.code	16
 1932              		.thumb_func
 1933              		.type	GSMSendCommand, %function
ARM GAS  /tmp/ccNuUijR.s 			page 48


 1934              	GSMSendCommand:
 1935              	.LFB28:
 690:src/sim900_800.c **** 
 691:src/sim900_800.c **** //-----------------------------------------------------//
 692:src/sim900_800.c **** //char GSMSendCommand (char *ptrCommand, unsigned char timeOut, unsigned char rta, char *ptrRta)
 693:src/sim900_800.c **** //----------------------------------------------------//
 694:src/sim900_800.c **** //ptrCommand: Comando a enviar.
 695:src/sim900_800.c **** //ptrRta: Respuesta al comando desde sim900.
 696:src/sim900_800.c **** //rta: 0: No espera rta. 1: Espera respuesta antes de OK.
 697:src/sim900_800.c **** //TO: time out. en ms
 698:src/sim900_800.c **** //----------------------------------------------------//
 699:src/sim900_800.c **** //Wait: 	1
 700:src/sim900_800.c **** //OK: 		2
 701:src/sim900_800.c **** //ERR:		3
 702:src/sim900_800.c **** //TO:
 703:src/sim900_800.c **** //NO OK:	4
 704:src/sim900_800.c **** //NO RTA: 	5
 705:src/sim900_800.c **** //----------------------------------------------------//
 706:src/sim900_800.c **** char GSMSendCommand (char *ptrCommand, unsigned short timeOut, unsigned char rta, char *ptrRta)
 707:src/sim900_800.c **** {
 1936              		.loc 1 707 0
 1937              		.cfi_startproc
 1938 0000 00B5     		push	{lr}	@
 1939              	.LCFI8:
 1940              		.cfi_def_cfa_offset 4
 1941              		.cfi_offset 14, -4
 1942 0002 85B0     		sub	sp, sp, #20	@,,
 1943              	.LCFI9:
 1944              		.cfi_def_cfa_offset 24
 1945 0004 0390     		str	r0, [sp, #12]	@ ptrCommand, ptrCommand
 1946 0006 0800     		movs	r0, r1	@ tmp125, timeOut
 1947 0008 1100     		movs	r1, r2	@ tmp128, rta
 1948 000a 0193     		str	r3, [sp, #4]	@ ptrRta, ptrRta
 1949 000c 0A23     		movs	r3, #10	@ tmp126,
 1950 000e 6B44     		add	r3, r3, sp	@ tmp126,
 1951 0010 021C     		adds	r2, r0, #0	@ tmp127, tmp125
 1952 0012 1A80     		strh	r2, [r3]	@ tmp127, timeOut
 1953 0014 0923     		movs	r3, #9	@ tmp129,
 1954 0016 6B44     		add	r3, r3, sp	@ tmp129,
 1955 0018 0A1C     		adds	r2, r1, #0	@ tmp130, tmp128
 1956 001a 1A70     		strb	r2, [r3]	@ tmp130, rta
 708:src/sim900_800.c **** 	switch(GSMSendCommandState)
 1957              		.loc 1 708 0
 1958 001c 464B     		ldr	r3, .L143	@ tmp131,
 1959 001e 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandState
 1960 0020 012B     		cmp	r3, #1	@ D.7916,
 1961 0022 1AD0     		beq	.L127	@,
 1962 0024 02DC     		bgt	.L128	@,
 1963 0026 002B     		cmp	r3, #0	@ D.7916,
 1964 0028 05D0     		beq	.L129	@,
 1965 002a 54E0     		b	.L126	@
 1966              	.L128:
 1967 002c 022B     		cmp	r3, #2	@ D.7916,
 1968 002e 34D0     		beq	.L130	@,
 1969 0030 032B     		cmp	r3, #3	@ D.7916,
 1970 0032 44D0     		beq	.L131	@,
 1971 0034 4FE0     		b	.L126	@
ARM GAS  /tmp/ccNuUijR.s 			page 49


 1972              	.L129:
 709:src/sim900_800.c **** 	{
 710:src/sim900_800.c **** 		case 0:
 711:src/sim900_800.c **** 			GSMSendCommandFlag = 0;
 1973              		.loc 1 711 0
 1974 0036 414B     		ldr	r3, .L143+4	@ tmp132,
 1975 0038 0022     		movs	r2, #0	@ tmp133,
 1976 003a 1A70     		strb	r2, [r3]	@ tmp134, GSMSendCommandFlag
 712:src/sim900_800.c **** 			GSMSendCommandTimeOut = timeOut;
 1977              		.loc 1 712 0
 1978 003c 404B     		ldr	r3, .L143+8	@ tmp135,
 1979 003e 0A22     		movs	r2, #10	@ tmp136,
 1980 0040 6A44     		add	r2, r2, sp	@ tmp136,
 1981 0042 1288     		ldrh	r2, [r2]	@ tmp137, timeOut
 1982 0044 1A80     		strh	r2, [r3]	@ tmp137, GSMSendCommandTimeOut
 713:src/sim900_800.c **** 			GSMSendCommandState++;
 1983              		.loc 1 713 0
 1984 0046 3C4B     		ldr	r3, .L143	@ tmp138,
 1985 0048 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandState
 1986 004a 0133     		adds	r3, r3, #1	@ tmp139,
 1987 004c DAB2     		uxtb	r2, r3	@ D.7915, tmp139
 1988 004e 3A4B     		ldr	r3, .L143	@ tmp140,
 1989 0050 1A70     		strb	r2, [r3]	@ tmp141, GSMSendCommandState
 714:src/sim900_800.c **** 			GSMSendCommandIntento = 0;
 1990              		.loc 1 714 0
 1991 0052 3C4B     		ldr	r3, .L143+12	@ tmp142,
 1992 0054 0022     		movs	r2, #0	@ tmp143,
 1993 0056 1A70     		strb	r2, [r3]	@ tmp144, GSMSendCommandIntento
 715:src/sim900_800.c **** 			break;
 1994              		.loc 1 715 0
 1995 0058 44E0     		b	.L132	@
 1996              	.L127:
 716:src/sim900_800.c **** 
 717:src/sim900_800.c **** 		case 1:
 718:src/sim900_800.c **** 			if (rta)
 1997              		.loc 1 718 0
 1998 005a 0923     		movs	r3, #9	@ tmp145,
 1999 005c 6B44     		add	r3, r3, sp	@ tmp145,
 2000 005e 1B78     		ldrb	r3, [r3]	@ tmp146, rta
 2001 0060 002B     		cmp	r3, #0	@ tmp146,
 2002 0062 06D0     		beq	.L133	@,
 719:src/sim900_800.c **** 			{
 720:src/sim900_800.c **** 				GSMSendCommandState = 2;
 2003              		.loc 1 720 0
 2004 0064 344B     		ldr	r3, .L143	@ tmp147,
 2005 0066 0222     		movs	r2, #2	@ tmp148,
 2006 0068 1A70     		strb	r2, [r3]	@ tmp149, GSMSendCommandState
 721:src/sim900_800.c **** 				GSMSendCommandFlag = 1;
 2007              		.loc 1 721 0
 2008 006a 344B     		ldr	r3, .L143+4	@ tmp150,
 2009 006c 0122     		movs	r2, #1	@ tmp151,
 2010 006e 1A70     		strb	r2, [r3]	@ tmp152, GSMSendCommandFlag
 2011 0070 05E0     		b	.L134	@
 2012              	.L133:
 722:src/sim900_800.c **** 			}
 723:src/sim900_800.c **** 			else
 724:src/sim900_800.c **** 			{
ARM GAS  /tmp/ccNuUijR.s 			page 50


 725:src/sim900_800.c **** 				GSMSendCommandState = 3;
 2013              		.loc 1 725 0
 2014 0072 314B     		ldr	r3, .L143	@ tmp153,
 2015 0074 0322     		movs	r2, #3	@ tmp154,
 2016 0076 1A70     		strb	r2, [r3]	@ tmp155, GSMSendCommandState
 726:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 2017              		.loc 1 726 0
 2018 0078 304B     		ldr	r3, .L143+4	@ tmp156,
 2019 007a 0322     		movs	r2, #3	@ tmp157,
 2020 007c 1A70     		strb	r2, [r3]	@ tmp158, GSMSendCommandFlag
 2021              	.L134:
 727:src/sim900_800.c **** 			}
 728:src/sim900_800.c **** 
 729:src/sim900_800.c **** 			if (GSMSendCommandIntento == 1)
 2022              		.loc 1 729 0
 2023 007e 314B     		ldr	r3, .L143+12	@ tmp159,
 2024 0080 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandIntento
 2025 0082 012B     		cmp	r3, #1	@ D.7915,
 2026 0084 04D1     		bne	.L135	@,
 730:src/sim900_800.c **** 			{
 731:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2027              		.loc 1 731 0
 2028 0086 2C4B     		ldr	r3, .L143	@ tmp160,
 2029 0088 0022     		movs	r2, #0	@ tmp161,
 2030 008a 1A70     		strb	r2, [r3]	@ tmp162, GSMSendCommandState
 732:src/sim900_800.c **** 				return 4;
 2031              		.loc 1 732 0
 2032 008c 0423     		movs	r3, #4	@ D.7915,
 2033 008e 4FE0     		b	.L136	@
 2034              	.L135:
 733:src/sim900_800.c **** 			}
 734:src/sim900_800.c **** 			else
 735:src/sim900_800.c **** 			{
 736:src/sim900_800.c **** 				UARTGSMSend(&ptrCommand[0]);
 2035              		.loc 1 736 0
 2036 0090 039B     		ldr	r3, [sp, #12]	@ tmp163, ptrCommand
 2037 0092 1800     		movs	r0, r3	@, tmp163
 2038 0094 FFF7FEFF 		bl	Usart1Send	@
 737:src/sim900_800.c **** 			}
 738:src/sim900_800.c **** 			break;
 2039              		.loc 1 738 0
 2040 0098 24E0     		b	.L132	@
 2041              	.L130:
 739:src/sim900_800.c **** 
 740:src/sim900_800.c **** 		case 2:
 741:src/sim900_800.c **** 			//Espera rta.
 742:src/sim900_800.c **** 			if (GSMSendCommandFlag == 2)
 2042              		.loc 1 742 0
 2043 009a 284B     		ldr	r3, .L143+4	@ tmp164,
 2044 009c 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandFlag
 2045 009e 022B     		cmp	r3, #2	@ D.7915,
 2046 00a0 1DD1     		bne	.L141	@,
 743:src/sim900_800.c **** 			{
 744:src/sim900_800.c **** 				// GSMSendCommandFlag = 3;
 745:src/sim900_800.c **** 				// GSMSendCommandState++;
 746:src/sim900_800.c **** 				//Rta obtenida.
 747:src/sim900_800.c **** 				strcpy((char *)ptrRta, (const char *)&buffUARTGSMrx2[0]);
ARM GAS  /tmp/ccNuUijR.s 			page 51


 2047              		.loc 1 747 0
 2048 00a2 294A     		ldr	r2, .L143+16	@ tmp165,
 2049 00a4 019B     		ldr	r3, [sp, #4]	@ tmp166, ptrRta
 2050 00a6 1100     		movs	r1, r2	@, tmp165
 2051 00a8 1800     		movs	r0, r3	@, tmp166
 2052 00aa FFF7FEFF 		bl	strcpy	@
 748:src/sim900_800.c **** 				//OK pegado
 749:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 2053              		.loc 1 749 0
 2054 00ae 234B     		ldr	r3, .L143+4	@ tmp167,
 2055 00b0 0022     		movs	r2, #0	@ tmp168,
 2056 00b2 1A70     		strb	r2, [r3]	@ tmp169, GSMSendCommandFlag
 750:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2057              		.loc 1 750 0
 2058 00b4 204B     		ldr	r3, .L143	@ tmp170,
 2059 00b6 0022     		movs	r2, #0	@ tmp171,
 2060 00b8 1A70     		strb	r2, [r3]	@ tmp172, GSMSendCommandState
 751:src/sim900_800.c **** 				return 2;
 2061              		.loc 1 751 0
 2062 00ba 0223     		movs	r3, #2	@ D.7915,
 2063 00bc 38E0     		b	.L136	@
 2064              	.L131:
 752:src/sim900_800.c **** 			}
 753:src/sim900_800.c **** 			break;
 754:src/sim900_800.c **** 
 755:src/sim900_800.c **** 		case 3:
 756:src/sim900_800.c **** 			//Espera OK.
 757:src/sim900_800.c **** 			if (GSMSendCommandFlag == 4)
 2065              		.loc 1 757 0
 2066 00be 1F4B     		ldr	r3, .L143+4	@ tmp173,
 2067 00c0 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandFlag
 2068 00c2 042B     		cmp	r3, #4	@ D.7915,
 2069 00c4 0DD1     		bne	.L142	@,
 758:src/sim900_800.c **** 			{
 759:src/sim900_800.c **** 				//OK recibido.
 760:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 2070              		.loc 1 760 0
 2071 00c6 1D4B     		ldr	r3, .L143+4	@ tmp174,
 2072 00c8 0022     		movs	r2, #0	@ tmp175,
 2073 00ca 1A70     		strb	r2, [r3]	@ tmp176, GSMSendCommandFlag
 761:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2074              		.loc 1 761 0
 2075 00cc 1A4B     		ldr	r3, .L143	@ tmp177,
 2076 00ce 0022     		movs	r2, #0	@ tmp178,
 2077 00d0 1A70     		strb	r2, [r3]	@ tmp179, GSMSendCommandState
 762:src/sim900_800.c **** 				return 2;
 2078              		.loc 1 762 0
 2079 00d2 0223     		movs	r3, #2	@ D.7915,
 2080 00d4 2CE0     		b	.L136	@
 2081              	.L126:
 763:src/sim900_800.c **** 			}
 764:src/sim900_800.c **** 			break;
 765:src/sim900_800.c **** 
 766:src/sim900_800.c **** 		default:
 767:src/sim900_800.c **** 			GSMSendCommandState = 0;
 2082              		.loc 1 767 0
 2083 00d6 184B     		ldr	r3, .L143	@ tmp180,
ARM GAS  /tmp/ccNuUijR.s 			page 52


 2084 00d8 0022     		movs	r2, #0	@ tmp181,
 2085 00da 1A70     		strb	r2, [r3]	@ tmp182, GSMSendCommandState
 768:src/sim900_800.c **** 			break;
 2086              		.loc 1 768 0
 2087 00dc 02E0     		b	.L132	@
 2088              	.L141:
 753:src/sim900_800.c **** 
 2089              		.loc 1 753 0
 2090 00de C046     		nop
 2091 00e0 00E0     		b	.L132	@
 2092              	.L142:
 764:src/sim900_800.c **** 
 2093              		.loc 1 764 0
 2094 00e2 C046     		nop
 2095              	.L132:
 769:src/sim900_800.c **** 	}
 770:src/sim900_800.c **** 
 771:src/sim900_800.c **** 	if (GSMSendCommandFlag == 5)
 2096              		.loc 1 771 0
 2097 00e4 154B     		ldr	r3, .L143+4	@ tmp183,
 2098 00e6 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandFlag
 2099 00e8 052B     		cmp	r3, #5	@ D.7915,
 2100 00ea 0DD1     		bne	.L139	@,
 772:src/sim900_800.c **** 	{
 773:src/sim900_800.c **** 		GSMSendCommandIntento++;
 2101              		.loc 1 773 0
 2102 00ec 154B     		ldr	r3, .L143+12	@ tmp184,
 2103 00ee 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandIntento
 2104 00f0 0133     		adds	r3, r3, #1	@ tmp185,
 2105 00f2 DAB2     		uxtb	r2, r3	@ D.7915, tmp185
 2106 00f4 134B     		ldr	r3, .L143+12	@ tmp186,
 2107 00f6 1A70     		strb	r2, [r3]	@ tmp187, GSMSendCommandIntento
 774:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 2108              		.loc 1 774 0
 2109 00f8 114B     		ldr	r3, .L143+8	@ tmp188,
 2110 00fa 0A22     		movs	r2, #10	@ tmp189,
 2111 00fc 6A44     		add	r2, r2, sp	@ tmp189,
 2112 00fe 1288     		ldrh	r2, [r2]	@ tmp190, timeOut
 2113 0100 1A80     		strh	r2, [r3]	@ tmp190, GSMSendCommandTimeOut
 775:src/sim900_800.c **** 		GSMSendCommandState = 1;
 2114              		.loc 1 775 0
 2115 0102 0D4B     		ldr	r3, .L143	@ tmp191,
 2116 0104 0122     		movs	r2, #1	@ tmp192,
 2117 0106 1A70     		strb	r2, [r3]	@ tmp193, GSMSendCommandState
 2118              	.L139:
 776:src/sim900_800.c **** 	}
 777:src/sim900_800.c **** 
 778:src/sim900_800.c **** 	if (!GSMSendCommandTimeOut)
 2119              		.loc 1 778 0
 2120 0108 0D4B     		ldr	r3, .L143+8	@ tmp194,
 2121 010a 1B88     		ldrh	r3, [r3]	@ tmp195, GSMSendCommandTimeOut
 2122 010c 9BB2     		uxth	r3, r3	@ D.7917, tmp195
 2123 010e 002B     		cmp	r3, #0	@ D.7917,
 2124 0110 0DD1     		bne	.L140	@,
 779:src/sim900_800.c **** 	{
 780:src/sim900_800.c **** 		GSMSendCommandIntento++;
 2125              		.loc 1 780 0
ARM GAS  /tmp/ccNuUijR.s 			page 53


 2126 0112 0C4B     		ldr	r3, .L143+12	@ tmp196,
 2127 0114 1B78     		ldrb	r3, [r3]	@ D.7915, GSMSendCommandIntento
 2128 0116 0133     		adds	r3, r3, #1	@ tmp197,
 2129 0118 DAB2     		uxtb	r2, r3	@ D.7915, tmp197
 2130 011a 0A4B     		ldr	r3, .L143+12	@ tmp198,
 2131 011c 1A70     		strb	r2, [r3]	@ tmp199, GSMSendCommandIntento
 781:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 2132              		.loc 1 781 0
 2133 011e 084B     		ldr	r3, .L143+8	@ tmp200,
 2134 0120 0A22     		movs	r2, #10	@ tmp201,
 2135 0122 6A44     		add	r2, r2, sp	@ tmp201,
 2136 0124 1288     		ldrh	r2, [r2]	@ tmp202, timeOut
 2137 0126 1A80     		strh	r2, [r3]	@ tmp202, GSMSendCommandTimeOut
 782:src/sim900_800.c **** 		GSMSendCommandState = 1;
 2138              		.loc 1 782 0
 2139 0128 034B     		ldr	r3, .L143	@ tmp203,
 2140 012a 0122     		movs	r2, #1	@ tmp204,
 2141 012c 1A70     		strb	r2, [r3]	@ tmp205, GSMSendCommandState
 2142              	.L140:
 783:src/sim900_800.c **** 	}
 784:src/sim900_800.c **** 
 785:src/sim900_800.c **** 	return 1;
 2143              		.loc 1 785 0
 2144 012e 0123     		movs	r3, #1	@ D.7915,
 2145              	.L136:
 786:src/sim900_800.c **** }
 2146              		.loc 1 786 0
 2147 0130 1800     		movs	r0, r3	@, <retval>
 2148 0132 05B0     		add	sp, sp, #20	@,,
 2149              		@ sp needed	@
 2150 0134 00BD     		pop	{pc}
 2151              	.L144:
 2152 0136 C046     		.align	2
 2153              	.L143:
 2154 0138 00000000 		.word	GSMSendCommandState
 2155 013c 00000000 		.word	GSMSendCommandFlag
 2156 0140 00000000 		.word	GSMSendCommandTimeOut
 2157 0144 00000000 		.word	GSMSendCommandIntento
 2158 0148 00000000 		.word	buffUARTGSMrx2
 2159              		.cfi_endproc
 2160              	.LFE28:
 2161              		.size	GSMSendCommand, .-GSMSendCommand
 2162              		.section	.rodata
 2163 0083 00       		.align	2
 2164              	.LC76:
 2165 0084 41540D0A 		.ascii	"AT\015\012\000"
 2165      00
 2166 0089 000000   		.align	2
 2167              	.LC78:
 2168 008c 41544530 		.ascii	"ATE0\015\012\000"
 2168      0D0A00
 2169 0093 00       		.align	2
 2170              	.LC80:
 2171 0094 41542B43 		.ascii	"AT+CMGF=1\015\012\000"
 2171      4D47463D 
 2171      310D0A00 
 2172              		.align	2
ARM GAS  /tmp/ccNuUijR.s 			page 54


 2173              	.LC82:
 2174 00a0 41542B43 		.ascii	"AT+CSCS=\"GSM\"\015\012\000"
 2174      5343533D 
 2174      2247534D 
 2174      220D0A00 
 2175              		.align	2
 2176              	.LC84:
 2177 00b0 41542B43 		.ascii	"AT+CSMP=49,255,0,241\015\012\000"
 2177      534D503D 
 2177      34392C32 
 2177      35352C30 
 2177      2C323431 
 2178 00c7 00       		.align	2
 2179              	.LC86:
 2180 00c8 41542657 		.ascii	"AT&W\015\012\000"
 2180      0D0A00
 2181              		.section	.text.GSM_Config,"ax",%progbits
 2182              		.align	2
 2183              		.global	GSM_Config
 2184              		.code	16
 2185              		.thumb_func
 2186              		.type	GSM_Config, %function
 2187              	GSM_Config:
 2188              	.LFB29:
 787:src/sim900_800.c **** 
 788:src/sim900_800.c **** //---------------------------------------------------------------//
 789:src/sim900_800.c **** //Configuracion del modulo GSM.
 790:src/sim900_800.c **** //---------------------------------------------------------------//
 791:src/sim900_800.c **** //
 792:src/sim900_800.c **** //Wait: 	0
 793:src/sim900_800.c **** //OK:		1
 794:src/sim900_800.c **** //ERR:	2
 795:src/sim900_800.c **** //TO:		3
 796:src/sim900_800.c **** //---------------------------------------------------------------//
 797:src/sim900_800.c **** char GSM_Config(unsigned short timeOut)
 798:src/sim900_800.c **** {
 2189              		.loc 1 798 0
 2190              		.cfi_startproc
 2191 0000 10B5     		push	{r4, lr}	@
 2192              	.LCFI10:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 4, -8
 2195              		.cfi_offset 14, -4
 2196 0002 84B0     		sub	sp, sp, #16	@,,
 2197              	.LCFI11:
 2198              		.cfi_def_cfa_offset 24
 2199 0004 0200     		movs	r2, r0	@ tmp151, timeOut
 2200 0006 6B46     		mov	r3, sp	@ tmp335,
 2201 0008 0633     		adds	r3, r3, #6	@ tmp152,
 2202 000a 1A80     		strh	r2, [r3]	@ tmp153, timeOut
 799:src/sim900_800.c **** 	unsigned char i;
 800:src/sim900_800.c **** 
 801:src/sim900_800.c **** 	switch(GSMConfigState)
 2203              		.loc 1 801 0
 2204 000c AE4B     		ldr	r3, .L189	@ tmp154,
 2205 000e 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2206 0010 092B     		cmp	r3, #9	@ D.7920,
ARM GAS  /tmp/ccNuUijR.s 			page 55


 2207 0012 00D9     		bls	.LCB1678	@
 2208 0014 34E1     		b	.L146	@long jump	@
 2209              	.LCB1678:
 2210 0016 9A00     		lsls	r2, r3, #2	@ tmp155, D.7920,
 2211 0018 AC4B     		ldr	r3, .L189+4	@ tmp157,
 2212 001a D318     		adds	r3, r2, r3	@ tmp156, tmp155, tmp157
 2213 001c 1B68     		ldr	r3, [r3]	@ tmp158,
 2214 001e 9F46     		mov	pc, r3	@ tmp158
 2215              		.section	.rodata.GSM_Config,"a",%progbits
 2216              		.align	2
 2217              	.L148:
 2218 0000 20000000 		.word	.L147
 2219 0004 48000000 		.word	.L149
 2220 0008 BE000000 		.word	.L150
 2221 000c E2000000 		.word	.L151
 2222 0010 20010000 		.word	.L152
 2223 0014 34010000 		.word	.L153
 2224 0018 78010000 		.word	.L154
 2225 001c BC010000 		.word	.L155
 2226 0020 FE010000 		.word	.L156
 2227 0024 40020000 		.word	.L157
 2228              		.section	.text.GSM_Config
 2229              	.L147:
 802:src/sim900_800.c **** 	{
 803:src/sim900_800.c **** 		case 0:
 804:src/sim900_800.c **** 			GSM_NRESET_ON;
 2230              		.loc 1 804 0
 2231              		.syntax divided
 2232              	@ 804 "src/sim900_800.c" 1
 2233 0020 C046     		nop 
 2234              		
 2235              	@ 0 "" 2
 805:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 2236              		.loc 1 805 0
 2237              		.thumb
 2238              		.syntax unified
 2239 0022 9023     		movs	r3, #144	@ tmp334,
 2240 0024 DB05     		lsls	r3, r3, #23	@ D.7922, tmp334,
 2241 0026 8022     		movs	r2, #128	@ tmp159,
 2242 0028 9A61     		str	r2, [r3, #24]	@ tmp159, _69->BSRR
 806:src/sim900_800.c **** 			GSMConfigTime = 0;
 2243              		.loc 1 806 0
 2244 002a A94B     		ldr	r3, .L189+8	@ tmp160,
 2245 002c 0022     		movs	r2, #0	@ tmp161,
 2246 002e 1A80     		strh	r2, [r3]	@ tmp162, GSMConfigTime
 807:src/sim900_800.c **** 			GSMConfigTimeOut = timeOut;
 2247              		.loc 1 807 0
 2248 0030 A84B     		ldr	r3, .L189+12	@ tmp163,
 2249 0032 6A46     		mov	r2, sp	@ tmp336,
 2250 0034 0632     		adds	r2, r2, #6	@ tmp164,
 2251 0036 1288     		ldrh	r2, [r2]	@ tmp165, timeOut
 2252 0038 1A80     		strh	r2, [r3]	@ tmp165, GSMConfigTimeOut
 808:src/sim900_800.c **** 			GSMConfigState++;
 2253              		.loc 1 808 0
 2254 003a A34B     		ldr	r3, .L189	@ tmp166,
 2255 003c 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2256 003e 0133     		adds	r3, r3, #1	@ tmp167,
ARM GAS  /tmp/ccNuUijR.s 			page 56


 2257 0040 DAB2     		uxtb	r2, r3	@ D.7919, tmp167
 2258 0042 A14B     		ldr	r3, .L189	@ tmp168,
 2259 0044 1A70     		strb	r2, [r3]	@ tmp169, GSMConfigState
 809:src/sim900_800.c **** 			break;
 2260              		.loc 1 809 0
 2261 0046 30E1     		b	.L158	@
 2262              	.L149:
 810:src/sim900_800.c **** 
 811:src/sim900_800.c **** 		case 1:
 812:src/sim900_800.c **** 
 813:src/sim900_800.c **** 			if (GSM_STATUS)
 2263              		.loc 1 813 0
 2264 0048 9023     		movs	r3, #144	@ tmp333,
 2265 004a DB05     		lsls	r3, r3, #23	@ D.7922, tmp333,
 2266 004c 1B8A     		ldrh	r3, [r3, #16]	@ tmp171,
 2267 004e 9BB2     		uxth	r3, r3	@ D.7921, tmp171
 2268 0050 1A00     		movs	r2, r3	@ D.7920, D.7921
 2269 0052 2023     		movs	r3, #32	@ tmp172,
 2270 0054 1340     		ands	r3, r2	@ D.7920, D.7920
 2271 0056 2AD0     		beq	.L159	@,
 814:src/sim900_800.c **** 			{
 815:src/sim900_800.c **** 				//i = GSMSendCommand ("AT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 816:src/sim900_800.c **** 				i = GSMSendCommand ("AT\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2272              		.loc 1 816 0
 2273 0058 9E4B     		ldr	r3, .L189+12	@ tmp173,
 2274 005a 1B88     		ldrh	r3, [r3]	@ tmp174, GSMConfigTimeOut
 2275 005c 99B2     		uxth	r1, r3	@ D.7921, tmp174
 2276 005e 0F24     		movs	r4, #15	@ tmp175,
 2277 0060 6C44     		add	r4, r4, sp	@ tmp175,
 2278 0062 9D4B     		ldr	r3, .L189+16	@ tmp176,
 2279 0064 9D48     		ldr	r0, .L189+20	@ tmp177,
 2280 0066 0022     		movs	r2, #0	@,
 2281 0068 FFF7FEFF 		bl	GSMSendCommand	@
 2282 006c 0300     		movs	r3, r0	@ tmp178,
 2283 006e 2370     		strb	r3, [r4]	@ tmp180, i
 817:src/sim900_800.c **** 
 818:src/sim900_800.c **** 				if ((i == 2) || (i == 3))
 2284              		.loc 1 818 0
 2285 0070 0F23     		movs	r3, #15	@ tmp181,
 2286 0072 6B44     		add	r3, r3, sp	@ tmp181,
 2287 0074 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2288 0076 022B     		cmp	r3, #2	@ tmp182,
 2289 0078 04D0     		beq	.L160	@,
 2290              		.loc 1 818 0 is_stmt 0 discriminator 1
 2291 007a 0F23     		movs	r3, #15	@ tmp183,
 2292 007c 6B44     		add	r3, r3, sp	@ tmp183,
 2293 007e 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2294 0080 032B     		cmp	r3, #3	@ tmp184,
 2295 0082 06D1     		bne	.L161	@,
 2296              	.L160:
 819:src/sim900_800.c **** 				{
 820:src/sim900_800.c **** 					GSMConfigState += 4;
 2297              		.loc 1 820 0 is_stmt 1
 2298 0084 904B     		ldr	r3, .L189	@ tmp185,
 2299 0086 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2300 0088 0433     		adds	r3, r3, #4	@ tmp186,
 2301 008a DAB2     		uxtb	r2, r3	@ D.7919, tmp186
ARM GAS  /tmp/ccNuUijR.s 			page 57


 2302 008c 8E4B     		ldr	r3, .L189	@ tmp187,
 2303 008e 1A70     		strb	r2, [r3]	@ tmp188, GSMConfigState
 821:src/sim900_800.c **** 					GSM_NRESET_ON;
 2304              		.loc 1 821 0
 2305              		.syntax divided
 2306              	@ 821 "src/sim900_800.c" 1
 2307 0090 C046     		nop 
 2308              		
 2309              	@ 0 "" 2
 2310              		.thumb
 2311              		.syntax unified
 2312              	.L161:
 822:src/sim900_800.c **** 				}
 823:src/sim900_800.c **** 
 824:src/sim900_800.c **** 				if (i == 4)
 2313              		.loc 1 824 0
 2314 0092 0F23     		movs	r3, #15	@ tmp189,
 2315 0094 6B44     		add	r3, r3, sp	@ tmp189,
 2316 0096 1B78     		ldrb	r3, [r3]	@ tmp190, i
 2317 0098 042B     		cmp	r3, #4	@ tmp190,
 2318 009a 00D0     		beq	.LCB1757	@
 2319 009c F4E0     		b	.L180	@long jump	@
 2320              	.LCB1757:
 825:src/sim900_800.c **** 				{
 826:src/sim900_800.c **** 					GSMConfigState += 1;
 2321              		.loc 1 826 0
 2322 009e 8A4B     		ldr	r3, .L189	@ tmp191,
 2323 00a0 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2324 00a2 0133     		adds	r3, r3, #1	@ tmp192,
 2325 00a4 DAB2     		uxtb	r2, r3	@ D.7919, tmp192
 2326 00a6 884B     		ldr	r3, .L189	@ tmp193,
 2327 00a8 1A70     		strb	r2, [r3]	@ tmp194, GSMConfigState
 827:src/sim900_800.c **** 					GSM_NRESET_ON;
 2328              		.loc 1 827 0
 2329              		.syntax divided
 2330              	@ 827 "src/sim900_800.c" 1
 2331 00aa C046     		nop 
 2332              		
 2333              	@ 0 "" 2
 828:src/sim900_800.c **** 				}
 829:src/sim900_800.c **** 
 830:src/sim900_800.c **** 			}
 831:src/sim900_800.c **** 			else
 832:src/sim900_800.c **** 			{
 833:src/sim900_800.c **** 				GSMConfigState += 2;
 834:src/sim900_800.c **** 				GSM_NRESET_ON;
 835:src/sim900_800.c **** 			}
 836:src/sim900_800.c **** 			break;
 2334              		.loc 1 836 0
 2335              		.thumb
 2336              		.syntax unified
 2337 00ac ECE0     		b	.L180	@
 2338              	.L159:
 833:src/sim900_800.c **** 				GSM_NRESET_ON;
 2339              		.loc 1 833 0
 2340 00ae 864B     		ldr	r3, .L189	@ tmp195,
 2341 00b0 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
ARM GAS  /tmp/ccNuUijR.s 			page 58


 2342 00b2 0233     		adds	r3, r3, #2	@ tmp196,
 2343 00b4 DAB2     		uxtb	r2, r3	@ D.7919, tmp196
 2344 00b6 844B     		ldr	r3, .L189	@ tmp197,
 2345 00b8 1A70     		strb	r2, [r3]	@ tmp198, GSMConfigState
 834:src/sim900_800.c **** 			}
 2346              		.loc 1 834 0
 2347              		.syntax divided
 2348              	@ 834 "src/sim900_800.c" 1
 2349 00ba C046     		nop 
 2350              		
 2351              	@ 0 "" 2
 2352              		.loc 1 836 0
 2353              		.thumb
 2354              		.syntax unified
 2355 00bc E4E0     		b	.L180	@
 2356              	.L150:
 837:src/sim900_800.c **** 
 838:src/sim900_800.c **** 		case 2:
 839:src/sim900_800.c **** 			//Reinicio del modulo.
 840:src/sim900_800.c **** 			GSM_NRESET_OFF;
 2357              		.loc 1 840 0
 2358              		.syntax divided
 2359              	@ 840 "src/sim900_800.c" 1
 2360 00be C046     		nop 
 2361              		
 2362              	@ 0 "" 2
 841:src/sim900_800.c **** 			if(!GSM_STATUS)
 2363              		.loc 1 841 0
 2364              		.thumb
 2365              		.syntax unified
 2366 00c0 9023     		movs	r3, #144	@ tmp332,
 2367 00c2 DB05     		lsls	r3, r3, #23	@ D.7922, tmp332,
 2368 00c4 1B8A     		ldrh	r3, [r3, #16]	@ tmp200,
 2369 00c6 9BB2     		uxth	r3, r3	@ D.7921, tmp200
 2370 00c8 1A00     		movs	r2, r3	@ D.7920, D.7921
 2371 00ca 2023     		movs	r3, #32	@ tmp201,
 2372 00cc 1340     		ands	r3, r2	@ D.7920, D.7920
 2373 00ce 00D0     		beq	.LCB1789	@
 2374 00d0 DCE0     		b	.L181	@long jump	@
 2375              	.LCB1789:
 842:src/sim900_800.c **** 			{
 843:src/sim900_800.c **** 				GSMConfigState++;
 2376              		.loc 1 843 0
 2377 00d2 7D4B     		ldr	r3, .L189	@ tmp202,
 2378 00d4 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2379 00d6 0133     		adds	r3, r3, #1	@ tmp203,
 2380 00d8 DAB2     		uxtb	r2, r3	@ D.7919, tmp203
 2381 00da 7B4B     		ldr	r3, .L189	@ tmp204,
 2382 00dc 1A70     		strb	r2, [r3]	@ tmp205, GSMConfigState
 844:src/sim900_800.c **** 				GSM_NRESET_ON;
 2383              		.loc 1 844 0
 2384              		.syntax divided
 2385              	@ 844 "src/sim900_800.c" 1
 2386 00de C046     		nop 
 2387              		
 2388              	@ 0 "" 2
 845:src/sim900_800.c **** 			}
ARM GAS  /tmp/ccNuUijR.s 			page 59


 846:src/sim900_800.c **** 			break;
 2389              		.loc 1 846 0
 2390              		.thumb
 2391              		.syntax unified
 2392 00e0 D4E0     		b	.L181	@
 2393              	.L151:
 847:src/sim900_800.c **** 
 848:src/sim900_800.c **** 		case 3:
 849:src/sim900_800.c **** 
 850:src/sim900_800.c **** 			//Encendido del modulo.
 851:src/sim900_800.c **** 			i = GSM_Start();
 2394              		.loc 1 851 0
 2395 00e2 0F24     		movs	r4, #15	@ tmp206,
 2396 00e4 6C44     		add	r4, r4, sp	@ tmp206,
 2397 00e6 FFF7FEFF 		bl	GSM_Start	@
 2398 00ea 0300     		movs	r3, r0	@ tmp207,
 2399 00ec 2370     		strb	r3, [r4]	@ tmp209, i
 852:src/sim900_800.c **** 
 853:src/sim900_800.c **** 			if (i == 2)
 2400              		.loc 1 853 0
 2401 00ee 0F23     		movs	r3, #15	@ tmp210,
 2402 00f0 6B44     		add	r3, r3, sp	@ tmp210,
 2403 00f2 1B78     		ldrb	r3, [r3]	@ tmp211, i
 2404 00f4 022B     		cmp	r3, #2	@ tmp211,
 2405 00f6 08D1     		bne	.L165	@,
 854:src/sim900_800.c **** 			{
 855:src/sim900_800.c **** 				GSMConfigState++;
 2406              		.loc 1 855 0
 2407 00f8 734B     		ldr	r3, .L189	@ tmp212,
 2408 00fa 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2409 00fc 0133     		adds	r3, r3, #1	@ tmp213,
 2410 00fe DAB2     		uxtb	r2, r3	@ D.7919, tmp213
 2411 0100 714B     		ldr	r3, .L189	@ tmp214,
 2412 0102 1A70     		strb	r2, [r3]	@ tmp215, GSMConfigState
 856:src/sim900_800.c **** 				GSMConfigTime = 20;
 2413              		.loc 1 856 0
 2414 0104 724B     		ldr	r3, .L189+8	@ tmp216,
 2415 0106 1422     		movs	r2, #20	@ tmp217,
 2416 0108 1A80     		strh	r2, [r3]	@ tmp218, GSMConfigTime
 2417              	.L165:
 857:src/sim900_800.c **** 			}
 858:src/sim900_800.c **** 
 859:src/sim900_800.c **** 			if (i == 4)
 2418              		.loc 1 859 0
 2419 010a 0F23     		movs	r3, #15	@ tmp219,
 2420 010c 6B44     		add	r3, r3, sp	@ tmp219,
 2421 010e 1B78     		ldrb	r3, [r3]	@ tmp220, i
 2422 0110 042B     		cmp	r3, #4	@ tmp220,
 2423 0112 00D0     		beq	.LCB1826	@
 2424 0114 BCE0     		b	.L182	@long jump	@
 2425              	.LCB1826:
 860:src/sim900_800.c **** 			{
 861:src/sim900_800.c **** 				GSMConfigState = 1;
 2426              		.loc 1 861 0
 2427 0116 6C4B     		ldr	r3, .L189	@ tmp221,
 2428 0118 0122     		movs	r2, #1	@ tmp222,
 2429 011a 1A70     		strb	r2, [r3]	@ tmp223, GSMConfigState
ARM GAS  /tmp/ccNuUijR.s 			page 60


 862:src/sim900_800.c **** 				return 2;
 2430              		.loc 1 862 0
 2431 011c 0223     		movs	r3, #2	@ D.7919,
 2432 011e CFE0     		b	.L167	@
 2433              	.L152:
 863:src/sim900_800.c **** 			}
 864:src/sim900_800.c **** 			break;
 865:src/sim900_800.c **** 
 866:src/sim900_800.c **** 		case 4:
 867:src/sim900_800.c **** 
 868:src/sim900_800.c **** 			if (GSMConfigTime == 0)
 2434              		.loc 1 868 0
 2435 0120 6B4B     		ldr	r3, .L189+8	@ tmp224,
 2436 0122 1B88     		ldrh	r3, [r3]	@ tmp225, GSMConfigTime
 2437 0124 9BB2     		uxth	r3, r3	@ D.7921, tmp225
 2438 0126 002B     		cmp	r3, #0	@ D.7921,
 2439 0128 00D0     		beq	.LCB1839	@
 2440 012a B3E0     		b	.L183	@long jump	@
 2441              	.LCB1839:
 869:src/sim900_800.c **** 				GSMConfigState = 1;
 2442              		.loc 1 869 0
 2443 012c 664B     		ldr	r3, .L189	@ tmp226,
 2444 012e 0122     		movs	r2, #1	@ tmp227,
 2445 0130 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigState
 870:src/sim900_800.c **** 			break;
 2446              		.loc 1 870 0
 2447 0132 AFE0     		b	.L183	@
 2448              	.L153:
 871:src/sim900_800.c **** 
 872:src/sim900_800.c **** 		case 5:
 873:src/sim900_800.c **** 
 874:src/sim900_800.c **** 			//Comandos para configurar.
 875:src/sim900_800.c **** 			//ATE0.
 876:src/sim900_800.c **** 			//i = GSMSendCommand ("ATE0\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 877:src/sim900_800.c **** 			i = GSMSendCommand ("ATE0\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2449              		.loc 1 877 0
 2450 0134 674B     		ldr	r3, .L189+12	@ tmp229,
 2451 0136 1B88     		ldrh	r3, [r3]	@ tmp230, GSMConfigTimeOut
 2452 0138 99B2     		uxth	r1, r3	@ D.7921, tmp230
 2453 013a 0F24     		movs	r4, #15	@ tmp231,
 2454 013c 6C44     		add	r4, r4, sp	@ tmp231,
 2455 013e 664B     		ldr	r3, .L189+16	@ tmp232,
 2456 0140 6748     		ldr	r0, .L189+24	@ tmp233,
 2457 0142 0022     		movs	r2, #0	@,
 2458 0144 FFF7FEFF 		bl	GSMSendCommand	@
 2459 0148 0300     		movs	r3, r0	@ tmp234,
 2460 014a 2370     		strb	r3, [r4]	@ tmp236, i
 878:src/sim900_800.c **** 
 879:src/sim900_800.c **** 			if (i == 2)
 2461              		.loc 1 879 0
 2462 014c 0F23     		movs	r3, #15	@ tmp237,
 2463 014e 6B44     		add	r3, r3, sp	@ tmp237,
 2464 0150 1B78     		ldrb	r3, [r3]	@ tmp238, i
 2465 0152 022B     		cmp	r3, #2	@ tmp238,
 2466 0154 05D1     		bne	.L169	@,
 880:src/sim900_800.c **** 			{
 881:src/sim900_800.c **** 				GSMConfigState++;
ARM GAS  /tmp/ccNuUijR.s 			page 61


 2467              		.loc 1 881 0
 2468 0156 5C4B     		ldr	r3, .L189	@ tmp239,
 2469 0158 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2470 015a 0133     		adds	r3, r3, #1	@ tmp240,
 2471 015c DAB2     		uxtb	r2, r3	@ D.7919, tmp240
 2472 015e 5A4B     		ldr	r3, .L189	@ tmp241,
 2473 0160 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigState
 2474              	.L169:
 882:src/sim900_800.c **** 			}
 883:src/sim900_800.c **** 			if (i > 2)
 2475              		.loc 1 883 0
 2476 0162 0F23     		movs	r3, #15	@ tmp243,
 2477 0164 6B44     		add	r3, r3, sp	@ tmp243,
 2478 0166 1B78     		ldrb	r3, [r3]	@ tmp244, i
 2479 0168 022B     		cmp	r3, #2	@ tmp244,
 2480 016a 00D8     		bhi	.LCB1875	@
 2481 016c 94E0     		b	.L184	@long jump	@
 2482              	.LCB1875:
 884:src/sim900_800.c **** 			{
 885:src/sim900_800.c **** 				GSMConfigState = 1;
 2483              		.loc 1 885 0
 2484 016e 564B     		ldr	r3, .L189	@ tmp245,
 2485 0170 0122     		movs	r2, #1	@ tmp246,
 2486 0172 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigState
 886:src/sim900_800.c **** 				return 2;
 2487              		.loc 1 886 0
 2488 0174 0223     		movs	r3, #2	@ D.7919,
 2489 0176 A3E0     		b	.L167	@
 2490              	.L154:
 887:src/sim900_800.c **** 			}
 888:src/sim900_800.c **** 
 889:src/sim900_800.c **** 			break;
 890:src/sim900_800.c **** 
 891:src/sim900_800.c **** 		case 6:
 892:src/sim900_800.c **** 			//AT+CMGF=1
 893:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CMGF=1\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 894:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CMGF=1\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2491              		.loc 1 894 0
 2492 0178 564B     		ldr	r3, .L189+12	@ tmp248,
 2493 017a 1B88     		ldrh	r3, [r3]	@ tmp249, GSMConfigTimeOut
 2494 017c 99B2     		uxth	r1, r3	@ D.7921, tmp249
 2495 017e 0F24     		movs	r4, #15	@ tmp250,
 2496 0180 6C44     		add	r4, r4, sp	@ tmp250,
 2497 0182 554B     		ldr	r3, .L189+16	@ tmp251,
 2498 0184 5748     		ldr	r0, .L189+28	@ tmp252,
 2499 0186 0022     		movs	r2, #0	@,
 2500 0188 FFF7FEFF 		bl	GSMSendCommand	@
 2501 018c 0300     		movs	r3, r0	@ tmp253,
 2502 018e 2370     		strb	r3, [r4]	@ tmp255, i
 895:src/sim900_800.c **** 
 896:src/sim900_800.c **** 			if (i == 2)
 2503              		.loc 1 896 0
 2504 0190 0F23     		movs	r3, #15	@ tmp256,
 2505 0192 6B44     		add	r3, r3, sp	@ tmp256,
 2506 0194 1B78     		ldrb	r3, [r3]	@ tmp257, i
 2507 0196 022B     		cmp	r3, #2	@ tmp257,
 2508 0198 05D1     		bne	.L171	@,
ARM GAS  /tmp/ccNuUijR.s 			page 62


 897:src/sim900_800.c **** 			{
 898:src/sim900_800.c **** 				GSMConfigState++;
 2509              		.loc 1 898 0
 2510 019a 4B4B     		ldr	r3, .L189	@ tmp258,
 2511 019c 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2512 019e 0133     		adds	r3, r3, #1	@ tmp259,
 2513 01a0 DAB2     		uxtb	r2, r3	@ D.7919, tmp259
 2514 01a2 494B     		ldr	r3, .L189	@ tmp260,
 2515 01a4 1A70     		strb	r2, [r3]	@ tmp261, GSMConfigState
 2516              	.L171:
 899:src/sim900_800.c **** 			}
 900:src/sim900_800.c **** 			if (i > 2)
 2517              		.loc 1 900 0
 2518 01a6 0F23     		movs	r3, #15	@ tmp262,
 2519 01a8 6B44     		add	r3, r3, sp	@ tmp262,
 2520 01aa 1B78     		ldrb	r3, [r3]	@ tmp263, i
 2521 01ac 022B     		cmp	r3, #2	@ tmp263,
 2522 01ae 00D8     		bhi	.LCB1912	@
 2523 01b0 74E0     		b	.L185	@long jump	@
 2524              	.LCB1912:
 901:src/sim900_800.c **** 			{
 902:src/sim900_800.c **** 				GSMConfigState = 1;
 2525              		.loc 1 902 0
 2526 01b2 454B     		ldr	r3, .L189	@ tmp264,
 2527 01b4 0122     		movs	r2, #1	@ tmp265,
 2528 01b6 1A70     		strb	r2, [r3]	@ tmp266, GSMConfigState
 903:src/sim900_800.c **** 				return 2;
 2529              		.loc 1 903 0
 2530 01b8 0223     		movs	r3, #2	@ D.7919,
 2531 01ba 81E0     		b	.L167	@
 2532              	.L155:
 904:src/sim900_800.c **** 			}
 905:src/sim900_800.c **** 			break;
 906:src/sim900_800.c **** 		case 7:
 907:src/sim900_800.c **** 			//AT+CSCS="GSM"
 908:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 909:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2533              		.loc 1 909 0
 2534 01bc 454B     		ldr	r3, .L189+12	@ tmp267,
 2535 01be 1B88     		ldrh	r3, [r3]	@ tmp268, GSMConfigTimeOut
 2536 01c0 99B2     		uxth	r1, r3	@ D.7921, tmp268
 2537 01c2 0F24     		movs	r4, #15	@ tmp269,
 2538 01c4 6C44     		add	r4, r4, sp	@ tmp269,
 2539 01c6 444B     		ldr	r3, .L189+16	@ tmp270,
 2540 01c8 4748     		ldr	r0, .L189+32	@ tmp271,
 2541 01ca 0022     		movs	r2, #0	@,
 2542 01cc FFF7FEFF 		bl	GSMSendCommand	@
 2543 01d0 0300     		movs	r3, r0	@ tmp272,
 2544 01d2 2370     		strb	r3, [r4]	@ tmp274, i
 910:src/sim900_800.c **** 
 911:src/sim900_800.c **** 			if (i == 2)
 2545              		.loc 1 911 0
 2546 01d4 0F23     		movs	r3, #15	@ tmp275,
 2547 01d6 6B44     		add	r3, r3, sp	@ tmp275,
 2548 01d8 1B78     		ldrb	r3, [r3]	@ tmp276, i
 2549 01da 022B     		cmp	r3, #2	@ tmp276,
 2550 01dc 05D1     		bne	.L173	@,
ARM GAS  /tmp/ccNuUijR.s 			page 63


 912:src/sim900_800.c **** 			{
 913:src/sim900_800.c **** 				GSMConfigState++;
 2551              		.loc 1 913 0
 2552 01de 3A4B     		ldr	r3, .L189	@ tmp277,
 2553 01e0 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2554 01e2 0133     		adds	r3, r3, #1	@ tmp278,
 2555 01e4 DAB2     		uxtb	r2, r3	@ D.7919, tmp278
 2556 01e6 384B     		ldr	r3, .L189	@ tmp279,
 2557 01e8 1A70     		strb	r2, [r3]	@ tmp280, GSMConfigState
 2558              	.L173:
 914:src/sim900_800.c **** 			}
 915:src/sim900_800.c **** 			if (i > 2)
 2559              		.loc 1 915 0
 2560 01ea 0F23     		movs	r3, #15	@ tmp281,
 2561 01ec 6B44     		add	r3, r3, sp	@ tmp281,
 2562 01ee 1B78     		ldrb	r3, [r3]	@ tmp282, i
 2563 01f0 022B     		cmp	r3, #2	@ tmp282,
 2564 01f2 55D9     		bls	.L186	@,
 916:src/sim900_800.c **** 			{
 917:src/sim900_800.c **** 				GSMConfigState = 1;
 2565              		.loc 1 917 0
 2566 01f4 344B     		ldr	r3, .L189	@ tmp283,
 2567 01f6 0122     		movs	r2, #1	@ tmp284,
 2568 01f8 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigState
 918:src/sim900_800.c **** 				return 2;
 2569              		.loc 1 918 0
 2570 01fa 0223     		movs	r3, #2	@ D.7919,
 2571 01fc 60E0     		b	.L167	@
 2572              	.L156:
 919:src/sim900_800.c **** 			}
 920:src/sim900_800.c **** 			break;
 921:src/sim900_800.c **** 		case 8:
 922:src/sim900_800.c **** 			//AT+CSMP=49,255,0,241
 923:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 924:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2573              		.loc 1 924 0
 2574 01fe 354B     		ldr	r3, .L189+12	@ tmp286,
 2575 0200 1B88     		ldrh	r3, [r3]	@ tmp287, GSMConfigTimeOut
 2576 0202 99B2     		uxth	r1, r3	@ D.7921, tmp287
 2577 0204 0F24     		movs	r4, #15	@ tmp288,
 2578 0206 6C44     		add	r4, r4, sp	@ tmp288,
 2579 0208 334B     		ldr	r3, .L189+16	@ tmp289,
 2580 020a 3848     		ldr	r0, .L189+36	@ tmp290,
 2581 020c 0022     		movs	r2, #0	@,
 2582 020e FFF7FEFF 		bl	GSMSendCommand	@
 2583 0212 0300     		movs	r3, r0	@ tmp291,
 2584 0214 2370     		strb	r3, [r4]	@ tmp293, i
 925:src/sim900_800.c **** 
 926:src/sim900_800.c **** 			if (i == 2)
 2585              		.loc 1 926 0
 2586 0216 0F23     		movs	r3, #15	@ tmp294,
 2587 0218 6B44     		add	r3, r3, sp	@ tmp294,
 2588 021a 1B78     		ldrb	r3, [r3]	@ tmp295, i
 2589 021c 022B     		cmp	r3, #2	@ tmp295,
 2590 021e 05D1     		bne	.L175	@,
 927:src/sim900_800.c **** 			{
 928:src/sim900_800.c **** 				GSMConfigState++;
ARM GAS  /tmp/ccNuUijR.s 			page 64


 2591              		.loc 1 928 0
 2592 0220 294B     		ldr	r3, .L189	@ tmp296,
 2593 0222 1B78     		ldrb	r3, [r3]	@ D.7919, GSMConfigState
 2594 0224 0133     		adds	r3, r3, #1	@ tmp297,
 2595 0226 DAB2     		uxtb	r2, r3	@ D.7919, tmp297
 2596 0228 274B     		ldr	r3, .L189	@ tmp298,
 2597 022a 1A70     		strb	r2, [r3]	@ tmp299, GSMConfigState
 2598              	.L175:
 929:src/sim900_800.c **** 			}
 930:src/sim900_800.c **** 			if (i > 2)
 2599              		.loc 1 930 0
 2600 022c 0F23     		movs	r3, #15	@ tmp300,
 2601 022e 6B44     		add	r3, r3, sp	@ tmp300,
 2602 0230 1B78     		ldrb	r3, [r3]	@ tmp301, i
 2603 0232 022B     		cmp	r3, #2	@ tmp301,
 2604 0234 36D9     		bls	.L187	@,
 931:src/sim900_800.c **** 			{
 932:src/sim900_800.c **** 				GSMConfigState = 1;
 2605              		.loc 1 932 0
 2606 0236 244B     		ldr	r3, .L189	@ tmp302,
 2607 0238 0122     		movs	r2, #1	@ tmp303,
 2608 023a 1A70     		strb	r2, [r3]	@ tmp304, GSMConfigState
 933:src/sim900_800.c **** 				return 2;
 2609              		.loc 1 933 0
 2610 023c 0223     		movs	r3, #2	@ D.7919,
 2611 023e 3FE0     		b	.L167	@
 2612              	.L157:
 934:src/sim900_800.c **** 			}
 935:src/sim900_800.c **** 			break;
 936:src/sim900_800.c **** 		case 9:
 937:src/sim900_800.c **** 			//AT&W
 938:src/sim900_800.c **** 			//i = GSMSendCommand ("AT&W\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 939:src/sim900_800.c **** 			i = GSMSendCommand ("AT&W\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2613              		.loc 1 939 0
 2614 0240 244B     		ldr	r3, .L189+12	@ tmp305,
 2615 0242 1B88     		ldrh	r3, [r3]	@ tmp306, GSMConfigTimeOut
 2616 0244 99B2     		uxth	r1, r3	@ D.7921, tmp306
 2617 0246 0F24     		movs	r4, #15	@ tmp307,
 2618 0248 6C44     		add	r4, r4, sp	@ tmp307,
 2619 024a 234B     		ldr	r3, .L189+16	@ tmp308,
 2620 024c 2848     		ldr	r0, .L189+40	@ tmp309,
 2621 024e 0022     		movs	r2, #0	@,
 2622 0250 FFF7FEFF 		bl	GSMSendCommand	@
 2623 0254 0300     		movs	r3, r0	@ tmp310,
 2624 0256 2370     		strb	r3, [r4]	@ tmp312, i
 940:src/sim900_800.c **** 
 941:src/sim900_800.c **** 			if (i == 2)
 2625              		.loc 1 941 0
 2626 0258 0F23     		movs	r3, #15	@ tmp313,
 2627 025a 6B44     		add	r3, r3, sp	@ tmp313,
 2628 025c 1B78     		ldrb	r3, [r3]	@ tmp314, i
 2629 025e 022B     		cmp	r3, #2	@ tmp314,
 2630 0260 04D1     		bne	.L177	@,
 942:src/sim900_800.c **** 			{
 943:src/sim900_800.c **** 				GSMConfigState = 1;
 2631              		.loc 1 943 0
 2632 0262 194B     		ldr	r3, .L189	@ tmp315,
ARM GAS  /tmp/ccNuUijR.s 			page 65


 2633 0264 0122     		movs	r2, #1	@ tmp316,
 2634 0266 1A70     		strb	r2, [r3]	@ tmp317, GSMConfigState
 944:src/sim900_800.c **** 				return 1;
 2635              		.loc 1 944 0
 2636 0268 0123     		movs	r3, #1	@ D.7919,
 2637 026a 29E0     		b	.L167	@
 2638              	.L177:
 945:src/sim900_800.c **** 			}
 946:src/sim900_800.c **** 			if (i > 2)
 2639              		.loc 1 946 0
 2640 026c 0F23     		movs	r3, #15	@ tmp318,
 2641 026e 6B44     		add	r3, r3, sp	@ tmp318,
 2642 0270 1B78     		ldrb	r3, [r3]	@ tmp319, i
 2643 0272 022B     		cmp	r3, #2	@ tmp319,
 2644 0274 18D9     		bls	.L188	@,
 947:src/sim900_800.c **** 			{
 948:src/sim900_800.c **** 				GSMConfigState = 1;
 2645              		.loc 1 948 0
 2646 0276 144B     		ldr	r3, .L189	@ tmp320,
 2647 0278 0122     		movs	r2, #1	@ tmp321,
 2648 027a 1A70     		strb	r2, [r3]	@ tmp322, GSMConfigState
 949:src/sim900_800.c **** 				return 2;
 2649              		.loc 1 949 0
 2650 027c 0223     		movs	r3, #2	@ D.7919,
 2651 027e 1FE0     		b	.L167	@
 2652              	.L146:
 950:src/sim900_800.c **** 			}
 951:src/sim900_800.c **** 			break;
 952:src/sim900_800.c **** 		default:
 953:src/sim900_800.c **** 			GSMConfigState = 0;
 2653              		.loc 1 953 0
 2654 0280 114B     		ldr	r3, .L189	@ tmp323,
 2655 0282 0022     		movs	r2, #0	@ tmp324,
 2656 0284 1A70     		strb	r2, [r3]	@ tmp325, GSMConfigState
 954:src/sim900_800.c **** 			break;
 2657              		.loc 1 954 0
 2658 0286 10E0     		b	.L158	@
 2659              	.L180:
 836:src/sim900_800.c **** 
 2660              		.loc 1 836 0
 2661 0288 C046     		nop
 2662 028a 0EE0     		b	.L158	@
 2663              	.L181:
 846:src/sim900_800.c **** 
 2664              		.loc 1 846 0
 2665 028c C046     		nop
 2666 028e 0CE0     		b	.L158	@
 2667              	.L182:
 864:src/sim900_800.c **** 
 2668              		.loc 1 864 0
 2669 0290 C046     		nop
 2670 0292 0AE0     		b	.L158	@
 2671              	.L183:
 870:src/sim900_800.c **** 
 2672              		.loc 1 870 0
 2673 0294 C046     		nop
 2674 0296 08E0     		b	.L158	@
ARM GAS  /tmp/ccNuUijR.s 			page 66


 2675              	.L184:
 889:src/sim900_800.c **** 
 2676              		.loc 1 889 0
 2677 0298 C046     		nop
 2678 029a 06E0     		b	.L158	@
 2679              	.L185:
 905:src/sim900_800.c **** 		case 7:
 2680              		.loc 1 905 0
 2681 029c C046     		nop
 2682 029e 04E0     		b	.L158	@
 2683              	.L186:
 920:src/sim900_800.c **** 		case 8:
 2684              		.loc 1 920 0
 2685 02a0 C046     		nop
 2686 02a2 02E0     		b	.L158	@
 2687              	.L187:
 935:src/sim900_800.c **** 		case 9:
 2688              		.loc 1 935 0
 2689 02a4 C046     		nop
 2690 02a6 00E0     		b	.L158	@
 2691              	.L188:
 951:src/sim900_800.c **** 		default:
 2692              		.loc 1 951 0
 2693 02a8 C046     		nop
 2694              	.L158:
 955:src/sim900_800.c **** 
 956:src/sim900_800.c **** 	}
 957:src/sim900_800.c **** 
 958:src/sim900_800.c **** 	if (GSMConfigTimeOut == 0)
 2695              		.loc 1 958 0
 2696 02aa 0A4B     		ldr	r3, .L189+12	@ tmp326,
 2697 02ac 1B88     		ldrh	r3, [r3]	@ tmp327, GSMConfigTimeOut
 2698 02ae 9BB2     		uxth	r3, r3	@ D.7921, tmp327
 2699 02b0 002B     		cmp	r3, #0	@ D.7921,
 2700 02b2 04D1     		bne	.L179	@,
 959:src/sim900_800.c **** 	{
 960:src/sim900_800.c **** 		GSMConfigState = 0;
 2701              		.loc 1 960 0
 2702 02b4 044B     		ldr	r3, .L189	@ tmp328,
 2703 02b6 0022     		movs	r2, #0	@ tmp329,
 2704 02b8 1A70     		strb	r2, [r3]	@ tmp330, GSMConfigState
 961:src/sim900_800.c **** 		return 3;
 2705              		.loc 1 961 0
 2706 02ba 0323     		movs	r3, #3	@ D.7919,
 2707 02bc 00E0     		b	.L167	@
 2708              	.L179:
 962:src/sim900_800.c **** 	}
 963:src/sim900_800.c **** 
 964:src/sim900_800.c **** 	return 0;
 2709              		.loc 1 964 0
 2710 02be 0023     		movs	r3, #0	@ D.7919,
 2711              	.L167:
 965:src/sim900_800.c **** }
 2712              		.loc 1 965 0
 2713 02c0 1800     		movs	r0, r3	@, <retval>
 2714 02c2 04B0     		add	sp, sp, #16	@,,
 2715              		@ sp needed	@
ARM GAS  /tmp/ccNuUijR.s 			page 67


 2716 02c4 10BD     		pop	{r4, pc}
 2717              	.L190:
 2718 02c6 C046     		.align	2
 2719              	.L189:
 2720 02c8 00000000 		.word	GSMConfigState
 2721 02cc 00000000 		.word	.L148
 2722 02d0 00000000 		.word	GSMConfigTime
 2723 02d4 00000000 		.word	GSMConfigTimeOut
 2724 02d8 00000000 		.word	GSMbuffRtaCommand
 2725 02dc 84000000 		.word	.LC76
 2726 02e0 8C000000 		.word	.LC78
 2727 02e4 94000000 		.word	.LC80
 2728 02e8 A0000000 		.word	.LC82
 2729 02ec B0000000 		.word	.LC84
 2730 02f0 C8000000 		.word	.LC86
 2731              		.cfi_endproc
 2732              	.LFE29:
 2733              		.size	GSM_Config, .-GSM_Config
 2734              		.section	.rodata
 2735 00cf 00       		.align	2
 2736              	.LC92:
 2737 00d0 41542B43 		.ascii	"AT+CMGS=\"\000"
 2737      4D47533D 
 2737      2200
 2738 00da 0000     		.align	2
 2739              	.LC94:
 2740 00dc 220D0A00 		.ascii	"\"\015\012\000"
 2741              		.align	2
 2742              	.LC97:
 2743 00e0 1A00     		.ascii	"\032\000"
 2744              		.section	.text.GSMSendSMS,"ax",%progbits
 2745              		.align	2
 2746              		.global	GSMSendSMS
 2747              		.code	16
 2748              		.thumb_func
 2749              		.type	GSMSendSMS, %function
 2750              	GSMSendSMS:
 2751              	.LFB30:
 966:src/sim900_800.c **** 
 967:src/sim900_800.c **** //-----------------------------------------------------------------------//
 968:src/sim900_800.c **** //char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned char timeOut)
 969:src/sim900_800.c **** //-----------------------------------------------------------------------//
 970:src/sim900_800.c **** //String de mensaje: 	"..."
 971:src/sim900_800.c **** //timeOut en mS
 972:src/sim900_800.c **** //String Numero: 		"----------"
 973:src/sim900_800.c **** //Wait: 	0
 974:src/sim900_800.c **** //OK:		1
 975:src/sim900_800.c **** //ERR:	2
 976:src/sim900_800.c **** //TO:		3
 977:src/sim900_800.c **** //-----------------------------------------------------------------------//
 978:src/sim900_800.c **** char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned short timeOut)
 979:src/sim900_800.c **** {
 2752              		.loc 1 979 0
 2753              		.cfi_startproc
 2754 0000 10B5     		push	{r4, lr}	@
 2755              	.LCFI12:
 2756              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccNuUijR.s 			page 68


 2757              		.cfi_offset 4, -8
 2758              		.cfi_offset 14, -4
 2759 0002 86B0     		sub	sp, sp, #24	@,,
 2760              	.LCFI13:
 2761              		.cfi_def_cfa_offset 32
 2762 0004 0390     		str	r0, [sp, #12]	@ ptrMSG, ptrMSG
 2763 0006 0291     		str	r1, [sp, #8]	@ ptrNUM, ptrNUM
 2764 0008 6B46     		mov	r3, sp	@ tmp214,
 2765 000a 0633     		adds	r3, r3, #6	@ tmp122,
 2766 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
 980:src/sim900_800.c **** 	unsigned char i;
 981:src/sim900_800.c **** 
 982:src/sim900_800.c **** 	switch(GSMSendSMSState)
 2767              		.loc 1 982 0
 2768 000e 504B     		ldr	r3, .L206	@ tmp124,
 2769 0010 1B78     		ldrb	r3, [r3]	@ D.7930, GSMSendSMSState
 2770 0012 012B     		cmp	r3, #1	@ D.7931,
 2771 0014 2DD0     		beq	.L193	@,
 2772 0016 022B     		cmp	r3, #2	@ D.7931,
 2773 0018 64D0     		beq	.L194	@,
 2774 001a 002B     		cmp	r3, #0	@ D.7931,
 2775 001c 00D0     		beq	.LCB2148	@
 2776 001e 81E0     		b	.L203	@long jump	@
 2777              	.LCB2148:
 983:src/sim900_800.c **** 	{
 984:src/sim900_800.c **** 		case 0:
 985:src/sim900_800.c **** 			GSMSendSMSFlag = 0;
 2778              		.loc 1 985 0
 2779 0020 4C4B     		ldr	r3, .L206+4	@ tmp125,
 2780 0022 0022     		movs	r2, #0	@ tmp126,
 2781 0024 1A70     		strb	r2, [r3]	@ tmp127, GSMSendSMSFlag
 986:src/sim900_800.c **** 			GSMSendSMSTimeOut = timeOut;
 2782              		.loc 1 986 0
 2783 0026 4C4B     		ldr	r3, .L206+8	@ tmp128,
 2784 0028 6A46     		mov	r2, sp	@ tmp215,
 2785 002a 0632     		adds	r2, r2, #6	@ tmp129,
 2786 002c 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 2787 002e 1A80     		strh	r2, [r3]	@ tmp130, GSMSendSMSTimeOut
 987:src/sim900_800.c **** 			sprintf(&GSMSendSMSbuffAux[0], "AT+CMGS=\"");
 2788              		.loc 1 987 0
 2789 0030 4A4A     		ldr	r2, .L206+12	@ tmp131,
 2790 0032 4B4B     		ldr	r3, .L206+16	@ tmp132,
 2791 0034 1000     		movs	r0, r2	@ tmp133, tmp131
 2792 0036 1900     		movs	r1, r3	@ tmp134, tmp132
 2793 0038 0A23     		movs	r3, #10	@ tmp135,
 2794 003a 1A00     		movs	r2, r3	@, tmp135
 2795 003c FFF7FEFF 		bl	memcpy	@
 988:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], ptrNUM);
 2796              		.loc 1 988 0
 2797 0040 029A     		ldr	r2, [sp, #8]	@ tmp138, ptrNUM
 2798 0042 464B     		ldr	r3, .L206+12	@ tmp139,
 2799 0044 1100     		movs	r1, r2	@, tmp138
 2800 0046 1800     		movs	r0, r3	@, tmp139
 2801 0048 FFF7FEFF 		bl	strcat	@
 989:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], "\"\r\n");
 2802              		.loc 1 989 0
 2803 004c 434B     		ldr	r3, .L206+12	@ tmp140,
ARM GAS  /tmp/ccNuUijR.s 			page 69


 2804 004e 1800     		movs	r0, r3	@, tmp140
 2805 0050 FFF7FEFF 		bl	strlen	@
 2806 0054 0300     		movs	r3, r0	@ tmp141,
 2807 0056 1A00     		movs	r2, r3	@ D.7932, tmp142
 2808 0058 404B     		ldr	r3, .L206+12	@ tmp143,
 2809 005a D218     		adds	r2, r2, r3	@ D.7933, D.7932, tmp143
 2810 005c 414B     		ldr	r3, .L206+20	@ tmp144,
 2811 005e 1000     		movs	r0, r2	@ tmp145, D.7933
 2812 0060 1900     		movs	r1, r3	@ tmp146, tmp144
 2813 0062 0423     		movs	r3, #4	@ tmp147,
 2814 0064 1A00     		movs	r2, r3	@, tmp147
 2815 0066 FFF7FEFF 		bl	memcpy	@
 990:src/sim900_800.c **** 			GSMSendSMSState = 1;
 2816              		.loc 1 990 0
 2817 006a 394B     		ldr	r3, .L206	@ tmp150,
 2818 006c 0122     		movs	r2, #1	@ tmp151,
 2819 006e 1A70     		strb	r2, [r3]	@ tmp152, GSMSendSMSState
 991:src/sim900_800.c **** 			break;
 2820              		.loc 1 991 0
 2821 0070 5FE0     		b	.L196	@
 2822              	.L193:
 992:src/sim900_800.c **** 
 993:src/sim900_800.c **** 		case 1:
 994:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 0, &GSMbuffRtaCommand[0]);
 2823              		.loc 1 994 0
 2824 0072 1724     		movs	r4, #23	@ tmp153,
 2825 0074 6C44     		add	r4, r4, sp	@ tmp153,
 2826 0076 3C4A     		ldr	r2, .L206+24	@ tmp154,
 2827 0078 FA23     		movs	r3, #250	@ tmp213,
 2828 007a 9900     		lsls	r1, r3, #2	@ tmp155, tmp213,
 2829 007c 3748     		ldr	r0, .L206+12	@ tmp156,
 2830 007e 1300     		movs	r3, r2	@, tmp154
 2831 0080 0022     		movs	r2, #0	@,
 2832 0082 FFF7FEFF 		bl	GSMSendCommand	@
 2833 0086 0300     		movs	r3, r0	@ tmp157,
 2834 0088 2370     		strb	r3, [r4]	@ tmp159, i
 995:src/sim900_800.c **** 
 996:src/sim900_800.c **** 			if (i == 2)
 2835              		.loc 1 996 0
 2836 008a 1723     		movs	r3, #23	@ tmp160,
 2837 008c 6B44     		add	r3, r3, sp	@ tmp160,
 2838 008e 1B78     		ldrb	r3, [r3]	@ tmp161, i
 2839 0090 022B     		cmp	r3, #2	@ tmp161,
 2840 0092 1DD1     		bne	.L197	@,
 997:src/sim900_800.c **** 			{
 998:src/sim900_800.c **** 				GSMSendSMSbuffAux[0] = 0;
 2841              		.loc 1 998 0
 2842 0094 314B     		ldr	r3, .L206+12	@ tmp162,
 2843 0096 0022     		movs	r2, #0	@ tmp163,
 2844 0098 1A70     		strb	r2, [r3]	@ tmp164, GSMSendSMSbuffAux
 999:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], ptrMSG);
 2845              		.loc 1 999 0
 2846 009a 039A     		ldr	r2, [sp, #12]	@ tmp165, ptrMSG
 2847 009c 2F4B     		ldr	r3, .L206+12	@ tmp166,
 2848 009e 1100     		movs	r1, r2	@, tmp165
 2849 00a0 1800     		movs	r0, r3	@, tmp166
 2850 00a2 FFF7FEFF 		bl	strcat	@
ARM GAS  /tmp/ccNuUijR.s 			page 70


1000:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], "\032");
 2851              		.loc 1 1000 0
 2852 00a6 2D4B     		ldr	r3, .L206+12	@ tmp167,
 2853 00a8 1800     		movs	r0, r3	@, tmp167
 2854 00aa FFF7FEFF 		bl	strlen	@
 2855 00ae 0300     		movs	r3, r0	@ tmp168,
 2856 00b0 1A00     		movs	r2, r3	@ D.7932, tmp169
 2857 00b2 2A4B     		ldr	r3, .L206+12	@ tmp170,
 2858 00b4 D218     		adds	r2, r2, r3	@ D.7933, D.7932, tmp170
 2859 00b6 2D4B     		ldr	r3, .L206+28	@ tmp171,
 2860 00b8 1000     		movs	r0, r2	@ tmp172, D.7933
 2861 00ba 1900     		movs	r1, r3	@ tmp173, tmp171
 2862 00bc 0223     		movs	r3, #2	@ tmp174,
 2863 00be 1A00     		movs	r2, r3	@, tmp174
 2864 00c0 FFF7FEFF 		bl	memcpy	@
1001:src/sim900_800.c **** 				GSMSendSMSState++;
 2865              		.loc 1 1001 0
 2866 00c4 224B     		ldr	r3, .L206	@ tmp177,
 2867 00c6 1B78     		ldrb	r3, [r3]	@ D.7930, GSMSendSMSState
 2868 00c8 0133     		adds	r3, r3, #1	@ tmp178,
 2869 00ca DAB2     		uxtb	r2, r3	@ D.7930, tmp178
 2870 00cc 204B     		ldr	r3, .L206	@ tmp179,
 2871 00ce 1A70     		strb	r2, [r3]	@ tmp180, GSMSendSMSState
 2872              	.L197:
1002:src/sim900_800.c **** 			}
1003:src/sim900_800.c **** 
1004:src/sim900_800.c **** 			if (i > 2)
 2873              		.loc 1 1004 0
 2874 00d0 1723     		movs	r3, #23	@ tmp181,
 2875 00d2 6B44     		add	r3, r3, sp	@ tmp181,
 2876 00d4 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2877 00d6 022B     		cmp	r3, #2	@ tmp182,
 2878 00d8 28D9     		bls	.L204	@,
1005:src/sim900_800.c **** 			{
1006:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2879              		.loc 1 1006 0
 2880 00da 1D4B     		ldr	r3, .L206	@ tmp183,
 2881 00dc 0022     		movs	r2, #0	@ tmp184,
 2882 00de 1A70     		strb	r2, [r3]	@ tmp185, GSMSendSMSState
1007:src/sim900_800.c **** 				return 2;
 2883              		.loc 1 1007 0
 2884 00e0 0223     		movs	r3, #2	@ D.7930,
 2885 00e2 31E0     		b	.L199	@
 2886              	.L194:
1008:src/sim900_800.c **** 			}
1009:src/sim900_800.c **** 			break;
1010:src/sim900_800.c **** 
1011:src/sim900_800.c **** 		case 2:
1012:src/sim900_800.c **** 			// i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 1, &GSMbuffRtaCommand[0]);
1013:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 0, &GSMbuffRtaCommand[0]);
 2887              		.loc 1 1013 0
 2888 00e4 1724     		movs	r4, #23	@ tmp186,
 2889 00e6 6C44     		add	r4, r4, sp	@ tmp186,
 2890 00e8 1F4A     		ldr	r2, .L206+24	@ tmp187,
 2891 00ea FA23     		movs	r3, #250	@ tmp212,
 2892 00ec 9900     		lsls	r1, r3, #2	@ tmp188, tmp212,
 2893 00ee 1B48     		ldr	r0, .L206+12	@ tmp189,
ARM GAS  /tmp/ccNuUijR.s 			page 71


 2894 00f0 1300     		movs	r3, r2	@, tmp187
 2895 00f2 0022     		movs	r2, #0	@,
 2896 00f4 FFF7FEFF 		bl	GSMSendCommand	@
 2897 00f8 0300     		movs	r3, r0	@ tmp190,
 2898 00fa 2370     		strb	r3, [r4]	@ tmp192, i
1014:src/sim900_800.c **** 
1015:src/sim900_800.c **** 			if (i == 2)
 2899              		.loc 1 1015 0
 2900 00fc 1723     		movs	r3, #23	@ tmp193,
 2901 00fe 6B44     		add	r3, r3, sp	@ tmp193,
 2902 0100 1B78     		ldrb	r3, [r3]	@ tmp194, i
 2903 0102 022B     		cmp	r3, #2	@ tmp194,
 2904 0104 04D1     		bne	.L200	@,
1016:src/sim900_800.c **** 			{
1017:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2905              		.loc 1 1017 0
 2906 0106 124B     		ldr	r3, .L206	@ tmp195,
 2907 0108 0022     		movs	r2, #0	@ tmp196,
 2908 010a 1A70     		strb	r2, [r3]	@ tmp197, GSMSendSMSState
1018:src/sim900_800.c **** 				return 1;
 2909              		.loc 1 1018 0
 2910 010c 0123     		movs	r3, #1	@ D.7930,
 2911 010e 1BE0     		b	.L199	@
 2912              	.L200:
1019:src/sim900_800.c **** 			}
1020:src/sim900_800.c **** 
1021:src/sim900_800.c **** 			if (i > 2)
 2913              		.loc 1 1021 0
 2914 0110 1723     		movs	r3, #23	@ tmp198,
 2915 0112 6B44     		add	r3, r3, sp	@ tmp198,
 2916 0114 1B78     		ldrb	r3, [r3]	@ tmp199, i
 2917 0116 022B     		cmp	r3, #2	@ tmp199,
 2918 0118 0AD9     		bls	.L205	@,
1022:src/sim900_800.c **** 			{
1023:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2919              		.loc 1 1023 0
 2920 011a 0D4B     		ldr	r3, .L206	@ tmp200,
 2921 011c 0022     		movs	r2, #0	@ tmp201,
 2922 011e 1A70     		strb	r2, [r3]	@ tmp202, GSMSendSMSState
1024:src/sim900_800.c **** 				return 2;
 2923              		.loc 1 1024 0
 2924 0120 0223     		movs	r3, #2	@ D.7930,
 2925 0122 11E0     		b	.L199	@
 2926              	.L203:
1025:src/sim900_800.c **** 			}
1026:src/sim900_800.c **** 			break;
1027:src/sim900_800.c **** 
1028:src/sim900_800.c **** 		default:
1029:src/sim900_800.c **** 			GSMSendSMSState = 0;
 2927              		.loc 1 1029 0
 2928 0124 0A4B     		ldr	r3, .L206	@ tmp203,
 2929 0126 0022     		movs	r2, #0	@ tmp204,
 2930 0128 1A70     		strb	r2, [r3]	@ tmp205, GSMSendSMSState
1030:src/sim900_800.c **** 			break;
 2931              		.loc 1 1030 0
 2932 012a 02E0     		b	.L196	@
 2933              	.L204:
ARM GAS  /tmp/ccNuUijR.s 			page 72


1009:src/sim900_800.c **** 
 2934              		.loc 1 1009 0
 2935 012c C046     		nop
 2936 012e 00E0     		b	.L196	@
 2937              	.L205:
1026:src/sim900_800.c **** 
 2938              		.loc 1 1026 0
 2939 0130 C046     		nop
 2940              	.L196:
1031:src/sim900_800.c **** 	}
1032:src/sim900_800.c **** 
1033:src/sim900_800.c **** 	if (GSMSendSMSTimeOut == 0)
 2941              		.loc 1 1033 0
 2942 0132 094B     		ldr	r3, .L206+8	@ tmp206,
 2943 0134 1B88     		ldrh	r3, [r3]	@ tmp207, GSMSendSMSTimeOut
 2944 0136 9BB2     		uxth	r3, r3	@ D.7934, tmp207
 2945 0138 002B     		cmp	r3, #0	@ D.7934,
 2946 013a 04D1     		bne	.L202	@,
1034:src/sim900_800.c **** 	{
1035:src/sim900_800.c **** 		GSMSendSMSState = 0;
 2947              		.loc 1 1035 0
 2948 013c 044B     		ldr	r3, .L206	@ tmp208,
 2949 013e 0022     		movs	r2, #0	@ tmp209,
 2950 0140 1A70     		strb	r2, [r3]	@ tmp210, GSMSendSMSState
1036:src/sim900_800.c **** 		return 3;
 2951              		.loc 1 1036 0
 2952 0142 0323     		movs	r3, #3	@ D.7930,
 2953 0144 00E0     		b	.L199	@
 2954              	.L202:
1037:src/sim900_800.c **** 	}
1038:src/sim900_800.c **** 
1039:src/sim900_800.c **** 	return 0;
 2955              		.loc 1 1039 0
 2956 0146 0023     		movs	r3, #0	@ D.7930,
 2957              	.L199:
1040:src/sim900_800.c **** }
 2958              		.loc 1 1040 0
 2959 0148 1800     		movs	r0, r3	@, <retval>
 2960 014a 06B0     		add	sp, sp, #24	@,,
 2961              		@ sp needed	@
 2962 014c 10BD     		pop	{r4, pc}
 2963              	.L207:
 2964 014e C046     		.align	2
 2965              	.L206:
 2966 0150 00000000 		.word	GSMSendSMSState
 2967 0154 00000000 		.word	GSMSendSMSFlag
 2968 0158 00000000 		.word	GSMSendSMSTimeOut
 2969 015c 00000000 		.word	GSMSendSMSbuffAux
 2970 0160 D0000000 		.word	.LC92
 2971 0164 DC000000 		.word	.LC94
 2972 0168 00000000 		.word	GSMbuffRtaCommand
 2973 016c E0000000 		.word	.LC97
 2974              		.cfi_endproc
 2975              	.LFE30:
 2976              		.size	GSMSendSMS, .-GSMSendSMS
 2977              		.section	.rodata
 2978 00e2 0000     		.align	2
ARM GAS  /tmp/ccNuUijR.s 			page 73


 2979              	.LC104:
 2980 00e4 3030303A 		.ascii	"000: KAL,123456,100\015\012\000"
 2980      204B414C 
 2980      2C313233 
 2980      3435362C 
 2980      3130300D 
 2981 00fa 0000     		.align	2
 2982              	.LC106:
 2983 00fc 41542B43 		.ascii	"AT+CIPSTATUS\015\012\000"
 2983      49505354 
 2983      41545553 
 2983      0D0A00
 2984 010b 00       		.align	2
 2985              	.LC114:
 2986 010c 41542B43 		.ascii	"AT+CIPSTART=\"TCP\",\"\000"
 2986      49505354 
 2986      4152543D 
 2986      22544350 
 2986      222C2200 
 2987              		.align	2
 2988              	.LC116:
 2989 0120 222C2200 		.ascii	"\",\"\000"
 2990              		.align	2
 2991              	.LC122:
 2992 0124 434F4E4E 		.ascii	"CONNECTED\000"
 2992      45435445 
 2992      4400
 2993 012e 0000     		.align	2
 2994              	.LC124:
 2995 0130 50445020 		.ascii	"PDP DEACT\000"
 2995      44454143 
 2995      5400
 2996 013a 0000     		.align	2
 2997              	.LC126:
 2998 013c 41542B43 		.ascii	"AT+CPIN?\015\012\000"
 2998      50494E3F 
 2998      0D0A00
 2999 0147 00       		.align	2
 3000              	.LC128:
 3001 0148 2B435049 		.ascii	"+CPIN: READY\000"
 3001      4E3A2052 
 3001      45414459 
 3001      00
 3002 0155 000000   		.align	2
 3003              	.LC130:
 3004 0158 2B435049 		.ascii	"+CPINDS: READY\000"
 3004      4E44533A 
 3004      20524541 
 3004      445900
 3005 0167 00       		.align	2
 3006              	.LC132:
 3007 0168 41542B43 		.ascii	"AT+CREG?\015\012\000"
 3007      5245473F 
 3007      0D0A00
 3008 0173 00       		.align	2
 3009              	.LC134:
 3010 0174 2B435245 		.ascii	"+CREG: 0,1\000"
ARM GAS  /tmp/ccNuUijR.s 			page 74


 3010      473A2030 
 3010      2C3100
 3011 017f 00       		.align	2
 3012              	.LC136:
 3013 0180 41542B43 		.ascii	"AT+CSQ\015\012\000"
 3013      53510D0A 
 3013      00
 3014 0189 000000   		.align	2
 3015              	.LC138:
 3016 018c 2B435351 		.ascii	"+CSQ:\000"
 3016      3A00
 3017 0192 0000     		.align	2
 3018              	.LC141:
 3019 0194 41542B43 		.ascii	"AT+CIPMODE=1\015\012\000"
 3019      49504D4F 
 3019      44453D31 
 3019      0D0A00
 3020 01a3 00       		.align	2
 3021              	.LC143:
 3022 01a4 41542B43 		.ascii	"AT+CGATT?\015\012\000"
 3022      47415454 
 3022      3F0D0A00 
 3023              		.align	2
 3024              	.LC145:
 3025 01b0 2B434741 		.ascii	"+CGATT:\000"
 3025      54543A00 
 3026              		.align	2
 3027              	.LC147:
 3028 01b8 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"\000"
 3028      4744434F 
 3028      4E543D31 
 3028      2C224950 
 3028      222C2200 
 3029              		.align	2
 3030              	.LC149:
 3031 01cc 41542B43 		.ascii	"AT+CSTT=\"\000"
 3031      5354543D 
 3031      2200
 3032 01d6 0000     		.align	2
 3033              	.LC151:
 3034 01d8 41542B43 		.ascii	"AT+CIICR\015\012\000"
 3034      49494352 
 3034      0D0A00
 3035 01e3 00       		.align	2
 3036              	.LC153:
 3037 01e4 41542B43 		.ascii	"AT+CIFSR\015\012\000"
 3037      49465352 
 3037      0D0A00
 3038              		.section	.text.GSMConfigGPRS,"ax",%progbits
 3039              		.align	2
 3040              		.global	GSMConfigGPRS
 3041              		.code	16
 3042              		.thumb_func
 3043              		.type	GSMConfigGPRS, %function
 3044              	GSMConfigGPRS:
 3045              	.LFB31:
1041:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 75


1042:src/sim900_800.c **** //-----------------------------------------------------------------------//
1043:src/sim900_800.c **** //char GSMConfigGPRS (char *ptrAPN, char *ptrUSER, char *ptrKEY , unsigned char timeOut)
1044:src/sim900_800.c **** //-----------------------------------------------------------------------//
1045:src/sim900_800.c **** //char *ptrAPN "gprs.personal.com"
1046:src/sim900_800.c **** //char *ptrUSER ""
1047:src/sim900_800.c **** //char *ptrKEY  ""
1048:src/sim900_800.c **** //char *ptrIPAdd Para devolver la ip asignada.
1049:src/sim900_800.c **** //unsigned char timeOut x100mS
1050:src/sim900_800.c **** //char sim
1051:src/sim900_800.c **** //-----------------------------------------------------------------------//
1052:src/sim900_800.c **** //Wait:			1
1053:src/sim900_800.c **** //OK:			2
1054:src/sim900_800.c **** //ERR:			3
1055:src/sim900_800.c **** //TO:			4
1056:src/sim900_800.c **** //NO SIGNAL:	20
1057:src/sim900_800.c **** //-----------------------------------------------------------------------//
1058:src/sim900_800.c **** char GSMConfigGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *ptr
1059:src/sim900_800.c **** {
 3046              		.loc 1 1059 0
 3047              		.cfi_startproc
 3048 0000 10B5     		push	{r4, lr}	@
 3049              	.LCFI14:
 3050              		.cfi_def_cfa_offset 8
 3051              		.cfi_offset 4, -8
 3052              		.cfi_offset 14, -4
 3053 0002 86B0     		sub	sp, sp, #24	@,,
 3054              	.LCFI15:
 3055              		.cfi_def_cfa_offset 32
 3056 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 3057 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 3058 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 3059 000a 0F23     		movs	r3, #15	@ tmp190,
 3060 000c 6B44     		add	r3, r3, sp	@ tmp190,
 3061 000e 021C     		adds	r2, r0, #0	@ tmp191, tmp189
 3062 0010 1A70     		strb	r2, [r3]	@ tmp191, sim
1060:src/sim900_800.c **** 	unsigned char i;
1061:src/sim900_800.c **** 
1062:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 3063              		.loc 1 1062 0
 3064 0012 E14B     		ldr	r3, .L291	@ tmp192,
 3065 0014 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3066 0016 102B     		cmp	r3, #16	@ D.7949,
 3067 0018 01D9     		bls	.LCB2360	@
 3068 001a 00F0FDFB 		bl	.L209	@far jump	@
 3069              	.LCB2360:
 3070 001e 9A00     		lsls	r2, r3, #2	@ tmp193, D.7949,
 3071 0020 DE4B     		ldr	r3, .L291+4	@ tmp195,
 3072 0022 D318     		adds	r3, r2, r3	@ tmp194, tmp193, tmp195
 3073 0024 1B68     		ldr	r3, [r3]	@ tmp196,
 3074 0026 9F46     		mov	pc, r3	@ tmp196
 3075              		.section	.rodata.GSMConfigGPRS,"a",%progbits
 3076              		.align	2
 3077              	.L211:
 3078 0000 28000000 		.word	.L210
 3079 0004 46000000 		.word	.L212
 3080 0008 88000000 		.word	.L213
 3081 000c CC000000 		.word	.L214
ARM GAS  /tmp/ccNuUijR.s 			page 76


 3082 0010 CE020000 		.word	.L215
 3083 0014 3A030000 		.word	.L216
 3084 0018 00040000 		.word	.L217
 3085 001c 90040000 		.word	.L218
 3086 0020 D0040000 		.word	.L219
 3087 0024 76050000 		.word	.L220
 3088 0028 44060000 		.word	.L221
 3089 002c 7E060000 		.word	.L222
 3090 0030 B8060000 		.word	.L223
 3091 0034 FE060000 		.word	.L224
 3092 0038 38070000 		.word	.L225
 3093 003c 84070000 		.word	.L226
 3094 0040 DC070000 		.word	.L227
 3095              		.section	.text.GSMConfigGPRS
 3096              	.L210:
1063:src/sim900_800.c **** 	{
1064:src/sim900_800.c **** 
1065:src/sim900_800.c **** 		case 0:
1066:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 3097              		.loc 1 1066 0
 3098 0028 DD4B     		ldr	r3, .L291+8	@ tmp197,
 3099 002a 0BAA     		add	r2, sp, #44	@ tmp198,,
 3100 002c 1288     		ldrh	r2, [r2]	@ tmp199, timeOut
 3101 002e 1A80     		strh	r2, [r3]	@ tmp199, GSMConfigGPRSTimeOut
1067:src/sim900_800.c **** 			GSMConfigGPRSState++;
 3102              		.loc 1 1067 0
 3103 0030 D94B     		ldr	r3, .L291	@ tmp200,
 3104 0032 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3105 0034 0133     		adds	r3, r3, #1	@ tmp201,
 3106 0036 DAB2     		uxtb	r2, r3	@ D.7948, tmp201
 3107 0038 D74B     		ldr	r3, .L291	@ tmp202,
 3108 003a 1A70     		strb	r2, [r3]	@ tmp203, GSMConfigGPRSState
1068:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 3109              		.loc 1 1068 0
 3110 003c D94B     		ldr	r3, .L291+12	@ tmp204,
 3111 003e 0122     		movs	r2, #1	@ tmp205,
 3112 0040 1A70     		strb	r2, [r3]	@ tmp206, GSMConfigGPRSflag
1069:src/sim900_800.c **** 			break;
 3113              		.loc 1 1069 0
 3114 0042 00F008FC 		bl	.L228	@ far jump	@
 3115              	.L212:
1070:src/sim900_800.c **** 
1071:src/sim900_800.c **** 		case 1:
1072:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 20, 0, &GSMbuffRtaCommand[0]);
 3116              		.loc 1 1072 0
 3117 0046 1724     		movs	r4, #23	@ tmp207,
 3118 0048 6C44     		add	r4, r4, sp	@ tmp207,
 3119 004a D74B     		ldr	r3, .L291+16	@ tmp208,
 3120 004c D748     		ldr	r0, .L291+20	@ tmp209,
 3121 004e 0022     		movs	r2, #0	@,
 3122 0050 1421     		movs	r1, #20	@,
 3123 0052 FFF7FEFF 		bl	GSMSendCommand	@
 3124 0056 0300     		movs	r3, r0	@ tmp210,
 3125 0058 2370     		strb	r3, [r4]	@ tmp212, i
1073:src/sim900_800.c **** 
1074:src/sim900_800.c **** 			if (i == 2)
 3126              		.loc 1 1074 0
ARM GAS  /tmp/ccNuUijR.s 			page 77


 3127 005a 1723     		movs	r3, #23	@ tmp213,
 3128 005c 6B44     		add	r3, r3, sp	@ tmp213,
 3129 005e 1B78     		ldrb	r3, [r3]	@ tmp214, i
 3130 0060 022B     		cmp	r3, #2	@ tmp214,
 3131 0062 05D1     		bne	.L229	@,
1075:src/sim900_800.c **** 			{
1076:src/sim900_800.c **** 				//Respondio ACK.
1077:src/sim900_800.c **** 				//Conectado.
1078:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3132              		.loc 1 1078 0
 3133 0064 CC4B     		ldr	r3, .L291	@ tmp215,
 3134 0066 0022     		movs	r2, #0	@ tmp216,
 3135 0068 1A70     		strb	r2, [r3]	@ tmp217, GSMConfigGPRSState
1079:src/sim900_800.c **** 				return 2;
 3136              		.loc 1 1079 0
 3137 006a 0223     		movs	r3, #2	@ D.7948,
 3138 006c 00F0FDFB 		bl	.L230	@ far jump	@
 3139              	.L229:
1080:src/sim900_800.c **** 			}
1081:src/sim900_800.c **** 
1082:src/sim900_800.c **** 			if (i > 2)
 3140              		.loc 1 1082 0
 3141 0070 1723     		movs	r3, #23	@ tmp218,
 3142 0072 6B44     		add	r3, r3, sp	@ tmp218,
 3143 0074 1B78     		ldrb	r3, [r3]	@ tmp219, i
 3144 0076 022B     		cmp	r3, #2	@ tmp219,
 3145 0078 01D8     		bhi	.LCB2415	@
 3146 007a 00F0D1FB 		bl	.L277	@far jump	@
 3147              	.LCB2415:
1083:src/sim900_800.c **** 			{
1084:src/sim900_800.c **** 				//No conectado.
1085:src/sim900_800.c **** 				//Seleccionar Sim.
1086:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
 3148              		.loc 1 1086 0
 3149 007e C64B     		ldr	r3, .L291	@ tmp220,
 3150 0080 0F22     		movs	r2, #15	@ tmp221,
 3151 0082 1A70     		strb	r2, [r3]	@ tmp222, GSMConfigGPRSState
1087:src/sim900_800.c **** 			}
1088:src/sim900_800.c **** 
1089:src/sim900_800.c **** 			break;
 3152              		.loc 1 1089 0
 3153 0084 00F0CCFB 		bl	.L277	@ far jump	@
 3154              	.L213:
1090:src/sim900_800.c **** 		case 2:
1091:src/sim900_800.c **** 
1092:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3155              		.loc 1 1092 0
 3156 0088 1724     		movs	r4, #23	@ tmp223,
 3157 008a 6C44     		add	r4, r4, sp	@ tmp223,
 3158 008c C64B     		ldr	r3, .L291+16	@ tmp224,
 3159 008e C848     		ldr	r0, .L291+24	@ tmp225,
 3160 0090 0022     		movs	r2, #0	@,
 3161 0092 3221     		movs	r1, #50	@,
 3162 0094 FFF7FEFF 		bl	GSMSendCommand	@
 3163 0098 0300     		movs	r3, r0	@ tmp226,
 3164 009a 2370     		strb	r3, [r4]	@ tmp228, i
1093:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 78


1094:src/sim900_800.c **** 			if (i == 2)
 3165              		.loc 1 1094 0
 3166 009c 1723     		movs	r3, #23	@ tmp229,
 3167 009e 6B44     		add	r3, r3, sp	@ tmp229,
 3168 00a0 1B78     		ldrb	r3, [r3]	@ tmp230, i
 3169 00a2 022B     		cmp	r3, #2	@ tmp230,
 3170 00a4 05D1     		bne	.L232	@,
1095:src/sim900_800.c **** 			{
1096:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3171              		.loc 1 1096 0
 3172 00a6 BC4B     		ldr	r3, .L291	@ tmp231,
 3173 00a8 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3174 00aa 0133     		adds	r3, r3, #1	@ tmp232,
 3175 00ac DAB2     		uxtb	r2, r3	@ D.7948, tmp232
 3176 00ae BA4B     		ldr	r3, .L291	@ tmp233,
 3177 00b0 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
 3178              	.L232:
1097:src/sim900_800.c **** 			}
1098:src/sim900_800.c **** 
1099:src/sim900_800.c **** 			if (i > 2)
 3179              		.loc 1 1099 0
 3180 00b2 1723     		movs	r3, #23	@ tmp235,
 3181 00b4 6B44     		add	r3, r3, sp	@ tmp235,
 3182 00b6 1B78     		ldrb	r3, [r3]	@ tmp236, i
 3183 00b8 022B     		cmp	r3, #2	@ tmp236,
 3184 00ba 01D8     		bhi	.LCB2449	@
 3185 00bc 00F0B2FB 		bl	.L278	@far jump	@
 3186              	.LCB2449:
1100:src/sim900_800.c **** 			{
1101:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3187              		.loc 1 1101 0
 3188 00c0 B54B     		ldr	r3, .L291	@ tmp237,
 3189 00c2 0022     		movs	r2, #0	@ tmp238,
 3190 00c4 1A70     		strb	r2, [r3]	@ tmp239, GSMConfigGPRSState
1102:src/sim900_800.c **** 				return 3;
 3191              		.loc 1 1102 0
 3192 00c6 0323     		movs	r3, #3	@ D.7948,
 3193 00c8 00F0CFFB 		bl	.L230	@ far jump	@
 3194              	.L214:
1103:src/sim900_800.c **** 			}
1104:src/sim900_800.c **** 			break;
1105:src/sim900_800.c **** 		case 3:
1106:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 3195              		.loc 1 1106 0
 3196 00cc B54B     		ldr	r3, .L291+12	@ tmp240,
 3197 00ce 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSflag
 3198 00d0 022B     		cmp	r3, #2	@ D.7948,
 3199 00d2 01D0     		beq	.LCB2461	@
 3200 00d4 00F0A8FB 		bl	.L279	@far jump	@
 3201              	.LCB2461:
1107:src/sim900_800.c **** 			{
1108:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1109:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 3202              		.loc 1 1109 0
 3203 00d8 B649     		ldr	r1, .L291+28	@ tmp241,
 3204 00da B74B     		ldr	r3, .L291+32	@ tmp242,
 3205 00dc 0A22     		movs	r2, #10	@,
ARM GAS  /tmp/ccNuUijR.s 			page 79


 3206 00de 1800     		movs	r0, r3	@, tmp242
 3207 00e0 FFF7FEFF 		bl	strncmp	@
 3208 00e4 031E     		subs	r3, r0, #0	@ D.7949,,
 3209 00e6 08D1     		bne	.L235	@,
1110:src/sim900_800.c **** 				{
1111:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 3210              		.loc 1 1111 0
 3211 00e8 AB4B     		ldr	r3, .L291	@ tmp243,
 3212 00ea 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3213 00ec 0133     		adds	r3, r3, #1	@ tmp244,
 3214 00ee DAB2     		uxtb	r2, r3	@ D.7948, tmp244
 3215 00f0 A94B     		ldr	r3, .L291	@ tmp245,
 3216 00f2 1A70     		strb	r2, [r3]	@ tmp246, GSMConfigGPRSState
1112:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3217              		.loc 1 1112 0
 3218 00f4 AB4B     		ldr	r3, .L291+12	@ tmp247,
 3219 00f6 0122     		movs	r2, #1	@ tmp248,
 3220 00f8 1A70     		strb	r2, [r3]	@ tmp249, GSMConfigGPRSflag
 3221              	.L235:
1113:src/sim900_800.c **** 				}
1114:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1115:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 3222              		.loc 1 1115 0
 3223 00fa B049     		ldr	r1, .L291+36	@ tmp250,
 3224 00fc AE4B     		ldr	r3, .L291+32	@ tmp251,
 3225 00fe 0822     		movs	r2, #8	@,
 3226 0100 1800     		movs	r0, r3	@, tmp251
 3227 0102 FFF7FEFF 		bl	strncmp	@
 3228 0106 031E     		subs	r3, r0, #0	@ D.7949,,
 3229 0108 08D1     		bne	.L236	@,
1116:src/sim900_800.c **** 				{
1117:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 3230              		.loc 1 1117 0
 3231 010a A34B     		ldr	r3, .L291	@ tmp252,
 3232 010c 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3233 010e 0833     		adds	r3, r3, #8	@ tmp253,
 3234 0110 DAB2     		uxtb	r2, r3	@ D.7948, tmp253
 3235 0112 A14B     		ldr	r3, .L291	@ tmp254,
 3236 0114 1A70     		strb	r2, [r3]	@ tmp255, GSMConfigGPRSState
1118:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3237              		.loc 1 1118 0
 3238 0116 A34B     		ldr	r3, .L291+12	@ tmp256,
 3239 0118 0122     		movs	r2, #1	@ tmp257,
 3240 011a 1A70     		strb	r2, [r3]	@ tmp258, GSMConfigGPRSflag
 3241              	.L236:
1119:src/sim900_800.c **** 				}
1120:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
1121:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 3242              		.loc 1 1121 0
 3243 011c A849     		ldr	r1, .L291+40	@ tmp259,
 3244 011e A64B     		ldr	r3, .L291+32	@ tmp260,
 3245 0120 0A22     		movs	r2, #10	@,
 3246 0122 1800     		movs	r0, r3	@, tmp260
 3247 0124 FFF7FEFF 		bl	strncmp	@
 3248 0128 031E     		subs	r3, r0, #0	@ D.7949,,
 3249 012a 08D1     		bne	.L237	@,
1122:src/sim900_800.c **** 				{
ARM GAS  /tmp/ccNuUijR.s 			page 80


1123:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 3250              		.loc 1 1123 0
 3251 012c 9A4B     		ldr	r3, .L291	@ tmp261,
 3252 012e 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3253 0130 0933     		adds	r3, r3, #9	@ tmp262,
 3254 0132 DAB2     		uxtb	r2, r3	@ D.7948, tmp262
 3255 0134 984B     		ldr	r3, .L291	@ tmp263,
 3256 0136 1A70     		strb	r2, [r3]	@ tmp264, GSMConfigGPRSState
1124:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3257              		.loc 1 1124 0
 3258 0138 9A4B     		ldr	r3, .L291+12	@ tmp265,
 3259 013a 0122     		movs	r2, #1	@ tmp266,
 3260 013c 1A70     		strb	r2, [r3]	@ tmp267, GSMConfigGPRSflag
 3261              	.L237:
1125:src/sim900_800.c **** 				}
1126:src/sim900_800.c **** 
1127:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
1128:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 3262              		.loc 1 1128 0
 3263 013e A149     		ldr	r1, .L291+44	@ tmp268,
 3264 0140 9D4B     		ldr	r3, .L291+32	@ tmp269,
 3265 0142 0922     		movs	r2, #9	@,
 3266 0144 1800     		movs	r0, r3	@, tmp269
 3267 0146 FFF7FEFF 		bl	strncmp	@
 3268 014a 031E     		subs	r3, r0, #0	@ D.7949,,
 3269 014c 3AD1     		bne	.L238	@,
1129:src/sim900_800.c **** 				{
1130:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3270              		.loc 1 1130 0
 3271 014e 924B     		ldr	r3, .L291	@ tmp270,
 3272 0150 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3273 0152 0A33     		adds	r3, r3, #10	@ tmp271,
 3274 0154 DAB2     		uxtb	r2, r3	@ D.7948, tmp271
 3275 0156 904B     		ldr	r3, .L291	@ tmp272,
 3276 0158 1A70     		strb	r2, [r3]	@ tmp273, GSMConfigGPRSState
1131:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3277              		.loc 1 1131 0
 3278 015a 9B4A     		ldr	r2, .L291+48	@ tmp274,
 3279 015c 9B4B     		ldr	r3, .L291+52	@ tmp275,
 3280 015e 1000     		movs	r0, r2	@ tmp276, tmp274
 3281 0160 1900     		movs	r1, r3	@ tmp277, tmp275
 3282 0162 1423     		movs	r3, #20	@ tmp278,
 3283 0164 1A00     		movs	r2, r3	@, tmp278
 3284 0166 FFF7FEFF 		bl	memcpy	@
1132:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3285              		.loc 1 1132 0
 3286 016a 099A     		ldr	r2, [sp, #36]	@ tmp281, ptrIPremote
 3287 016c 964B     		ldr	r3, .L291+48	@ tmp282,
 3288 016e 1100     		movs	r1, r2	@, tmp281
 3289 0170 1800     		movs	r0, r3	@, tmp282
 3290 0172 FFF7FEFF 		bl	strcat	@
1133:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3291              		.loc 1 1133 0
 3292 0176 944B     		ldr	r3, .L291+48	@ tmp283,
 3293 0178 1800     		movs	r0, r3	@, tmp283
 3294 017a FFF7FEFF 		bl	strlen	@
 3295 017e 0300     		movs	r3, r0	@ tmp284,
ARM GAS  /tmp/ccNuUijR.s 			page 81


 3296 0180 1A00     		movs	r2, r3	@ D.7950, tmp285
 3297 0182 914B     		ldr	r3, .L291+48	@ tmp286,
 3298 0184 D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp286
 3299 0186 924B     		ldr	r3, .L291+56	@ tmp287,
 3300 0188 1000     		movs	r0, r2	@ tmp288, D.7951
 3301 018a 1900     		movs	r1, r3	@ tmp289, tmp287
 3302 018c 0423     		movs	r3, #4	@ tmp290,
 3303 018e 1A00     		movs	r2, r3	@, tmp290
 3304 0190 FFF7FEFF 		bl	memcpy	@
1134:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3305              		.loc 1 1134 0
 3306 0194 0A9A     		ldr	r2, [sp, #40]	@ tmp293, ptrPORTremote
 3307 0196 8C4B     		ldr	r3, .L291+48	@ tmp294,
 3308 0198 1100     		movs	r1, r2	@, tmp293
 3309 019a 1800     		movs	r0, r3	@, tmp294
 3310 019c FFF7FEFF 		bl	strcat	@
1135:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3311              		.loc 1 1135 0
 3312 01a0 894B     		ldr	r3, .L291+48	@ tmp295,
 3313 01a2 1800     		movs	r0, r3	@, tmp295
 3314 01a4 FFF7FEFF 		bl	strlen	@
 3315 01a8 0300     		movs	r3, r0	@ tmp296,
 3316 01aa 1A00     		movs	r2, r3	@ D.7950, tmp297
 3317 01ac 864B     		ldr	r3, .L291+48	@ tmp298,
 3318 01ae D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp298
 3319 01b0 884B     		ldr	r3, .L291+60	@ tmp299,
 3320 01b2 1000     		movs	r0, r2	@ tmp300, D.7951
 3321 01b4 1900     		movs	r1, r3	@ tmp301, tmp299
 3322 01b6 0423     		movs	r3, #4	@ tmp302,
 3323 01b8 1A00     		movs	r2, r3	@, tmp302
 3324 01ba FFF7FEFF 		bl	memcpy	@
1136:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3325              		.loc 1 1136 0
 3326 01be 794B     		ldr	r3, .L291+12	@ tmp305,
 3327 01c0 0122     		movs	r2, #1	@ tmp306,
 3328 01c2 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSflag
 3329              	.L238:
1137:src/sim900_800.c **** 				}
1138:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
1139:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 3330              		.loc 1 1139 0
 3331 01c4 8449     		ldr	r1, .L291+64	@ tmp308,
 3332 01c6 7C4B     		ldr	r3, .L291+32	@ tmp309,
 3333 01c8 0E22     		movs	r2, #14	@,
 3334 01ca 1800     		movs	r0, r3	@, tmp309
 3335 01cc FFF7FEFF 		bl	strncmp	@
 3336 01d0 031E     		subs	r3, r0, #0	@ D.7949,,
 3337 01d2 08D1     		bne	.L239	@,
1140:src/sim900_800.c **** 				{
1141:src/sim900_800.c **** 					GSMConfigGPRSState -= 1;
 3338              		.loc 1 1141 0
 3339 01d4 704B     		ldr	r3, .L291	@ tmp310,
 3340 01d6 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3341 01d8 013B     		subs	r3, r3, #1	@ tmp311,
 3342 01da DAB2     		uxtb	r2, r3	@ D.7948, tmp311
 3343 01dc 6E4B     		ldr	r3, .L291	@ tmp312,
 3344 01de 1A70     		strb	r2, [r3]	@ tmp313, GSMConfigGPRSState
ARM GAS  /tmp/ccNuUijR.s 			page 82


1142:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3345              		.loc 1 1142 0
 3346 01e0 704B     		ldr	r3, .L291+12	@ tmp314,
 3347 01e2 0122     		movs	r2, #1	@ tmp315,
 3348 01e4 1A70     		strb	r2, [r3]	@ tmp316, GSMConfigGPRSflag
 3349              	.L239:
1143:src/sim900_800.c **** 				}
1144:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
1145:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 3350              		.loc 1 1145 0
 3351 01e6 7D49     		ldr	r1, .L291+68	@ tmp317,
 3352 01e8 734B     		ldr	r3, .L291+32	@ tmp318,
 3353 01ea 0A22     		movs	r2, #10	@,
 3354 01ec 1800     		movs	r0, r3	@, tmp318
 3355 01ee FFF7FEFF 		bl	strncmp	@
 3356 01f2 031E     		subs	r3, r0, #0	@ D.7949,,
 3357 01f4 04D1     		bne	.L240	@,
1146:src/sim900_800.c **** 				{
1147:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3358              		.loc 1 1147 0
 3359 01f6 684B     		ldr	r3, .L291	@ tmp319,
 3360 01f8 0022     		movs	r2, #0	@ tmp320,
 3361 01fa 1A70     		strb	r2, [r3]	@ tmp321, GSMConfigGPRSState
1148:src/sim900_800.c **** 					return 2;
 3362              		.loc 1 1148 0
 3363 01fc 0223     		movs	r3, #2	@ D.7948,
 3364 01fe 34E3     		b	.L230	@
 3365              	.L240:
1149:src/sim900_800.c **** 				}
1150:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
1151:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
1152:src/sim900_800.c **** 				{
1153:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
1154:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
1155:src/sim900_800.c **** 				}
1156:src/sim900_800.c **** */
1157:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
1158:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 3366              		.loc 1 1158 0
 3367 0200 7749     		ldr	r1, .L291+72	@ tmp322,
 3368 0202 6D4B     		ldr	r3, .L291+32	@ tmp323,
 3369 0204 0A22     		movs	r2, #10	@,
 3370 0206 1800     		movs	r0, r3	@, tmp323
 3371 0208 FFF7FEFF 		bl	strncmp	@
 3372 020c 031E     		subs	r3, r0, #0	@ D.7949,,
 3373 020e 3AD1     		bne	.L241	@,
1159:src/sim900_800.c **** 				{
1160:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3374              		.loc 1 1160 0
 3375 0210 614B     		ldr	r3, .L291	@ tmp324,
 3376 0212 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3377 0214 0A33     		adds	r3, r3, #10	@ tmp325,
 3378 0216 DAB2     		uxtb	r2, r3	@ D.7948, tmp325
 3379 0218 5F4B     		ldr	r3, .L291	@ tmp326,
 3380 021a 1A70     		strb	r2, [r3]	@ tmp327, GSMConfigGPRSState
1161:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3381              		.loc 1 1161 0
ARM GAS  /tmp/ccNuUijR.s 			page 83


 3382 021c 6A4A     		ldr	r2, .L291+48	@ tmp328,
 3383 021e 6B4B     		ldr	r3, .L291+52	@ tmp329,
 3384 0220 1000     		movs	r0, r2	@ tmp330, tmp328
 3385 0222 1900     		movs	r1, r3	@ tmp331, tmp329
 3386 0224 1423     		movs	r3, #20	@ tmp332,
 3387 0226 1A00     		movs	r2, r3	@, tmp332
 3388 0228 FFF7FEFF 		bl	memcpy	@
1162:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3389              		.loc 1 1162 0
 3390 022c 099A     		ldr	r2, [sp, #36]	@ tmp335, ptrIPremote
 3391 022e 664B     		ldr	r3, .L291+48	@ tmp336,
 3392 0230 1100     		movs	r1, r2	@, tmp335
 3393 0232 1800     		movs	r0, r3	@, tmp336
 3394 0234 FFF7FEFF 		bl	strcat	@
1163:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3395              		.loc 1 1163 0
 3396 0238 634B     		ldr	r3, .L291+48	@ tmp337,
 3397 023a 1800     		movs	r0, r3	@, tmp337
 3398 023c FFF7FEFF 		bl	strlen	@
 3399 0240 0300     		movs	r3, r0	@ tmp338,
 3400 0242 1A00     		movs	r2, r3	@ D.7950, tmp339
 3401 0244 604B     		ldr	r3, .L291+48	@ tmp340,
 3402 0246 D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp340
 3403 0248 614B     		ldr	r3, .L291+56	@ tmp341,
 3404 024a 1000     		movs	r0, r2	@ tmp342, D.7951
 3405 024c 1900     		movs	r1, r3	@ tmp343, tmp341
 3406 024e 0423     		movs	r3, #4	@ tmp344,
 3407 0250 1A00     		movs	r2, r3	@, tmp344
 3408 0252 FFF7FEFF 		bl	memcpy	@
1164:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3409              		.loc 1 1164 0
 3410 0256 0A9A     		ldr	r2, [sp, #40]	@ tmp347, ptrPORTremote
 3411 0258 5B4B     		ldr	r3, .L291+48	@ tmp348,
 3412 025a 1100     		movs	r1, r2	@, tmp347
 3413 025c 1800     		movs	r0, r3	@, tmp348
 3414 025e FFF7FEFF 		bl	strcat	@
1165:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3415              		.loc 1 1165 0
 3416 0262 594B     		ldr	r3, .L291+48	@ tmp349,
 3417 0264 1800     		movs	r0, r3	@, tmp349
 3418 0266 FFF7FEFF 		bl	strlen	@
 3419 026a 0300     		movs	r3, r0	@ tmp350,
 3420 026c 1A00     		movs	r2, r3	@ D.7950, tmp351
 3421 026e 564B     		ldr	r3, .L291+48	@ tmp352,
 3422 0270 D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp352
 3423 0272 584B     		ldr	r3, .L291+60	@ tmp353,
 3424 0274 1000     		movs	r0, r2	@ tmp354, D.7951
 3425 0276 1900     		movs	r1, r3	@ tmp355, tmp353
 3426 0278 0423     		movs	r3, #4	@ tmp356,
 3427 027a 1A00     		movs	r2, r3	@, tmp356
 3428 027c FFF7FEFF 		bl	memcpy	@
1166:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3429              		.loc 1 1166 0
 3430 0280 484B     		ldr	r3, .L291+12	@ tmp359,
 3431 0282 0122     		movs	r2, #1	@ tmp360,
 3432 0284 1A70     		strb	r2, [r3]	@ tmp361, GSMConfigGPRSflag
 3433              	.L241:
ARM GAS  /tmp/ccNuUijR.s 			page 84


1167:src/sim900_800.c **** 				}
1168:src/sim900_800.c **** 
1169:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 3434              		.loc 1 1169 0
 3435 0286 5749     		ldr	r1, .L291+76	@ tmp362,
 3436 0288 4B4B     		ldr	r3, .L291+32	@ tmp363,
 3437 028a 0922     		movs	r2, #9	@,
 3438 028c 1800     		movs	r0, r3	@, tmp363
 3439 028e FFF7FEFF 		bl	strncmp	@
 3440 0292 031E     		subs	r3, r0, #0	@ D.7949,,
 3441 0294 08D1     		bne	.L242	@,
1170:src/sim900_800.c **** 				{
1171:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
 3442              		.loc 1 1171 0
 3443 0296 404B     		ldr	r3, .L291	@ tmp364,
 3444 0298 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3445 029a 0B33     		adds	r3, r3, #11	@ tmp365,
 3446 029c DAB2     		uxtb	r2, r3	@ D.7948, tmp365
 3447 029e 3E4B     		ldr	r3, .L291	@ tmp366,
 3448 02a0 1A70     		strb	r2, [r3]	@ tmp367, GSMConfigGPRSState
1172:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3449              		.loc 1 1172 0
 3450 02a2 404B     		ldr	r3, .L291+12	@ tmp368,
 3451 02a4 0122     		movs	r2, #1	@ tmp369,
 3452 02a6 1A70     		strb	r2, [r3]	@ tmp370, GSMConfigGPRSflag
 3453              	.L242:
1173:src/sim900_800.c **** 				}
1174:src/sim900_800.c **** 
1175:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 3454              		.loc 1 1175 0
 3455 02a8 4F49     		ldr	r1, .L291+80	@ tmp371,
 3456 02aa 434B     		ldr	r3, .L291+32	@ tmp372,
 3457 02ac 0922     		movs	r2, #9	@,
 3458 02ae 1800     		movs	r0, r3	@, tmp372
 3459 02b0 FFF7FEFF 		bl	strncmp	@
 3460 02b4 031E     		subs	r3, r0, #0	@ D.7949,,
 3461 02b6 00D0     		beq	.LCB2704	@
 3462 02b8 B6E2     		b	.L279	@long jump	@
 3463              	.LCB2704:
1176:src/sim900_800.c **** 				{
1177:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 3464              		.loc 1 1177 0
 3465 02ba 374B     		ldr	r3, .L291	@ tmp373,
 3466 02bc 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3467 02be 0D33     		adds	r3, r3, #13	@ tmp374,
 3468 02c0 DAB2     		uxtb	r2, r3	@ D.7948, tmp374
 3469 02c2 354B     		ldr	r3, .L291	@ tmp375,
 3470 02c4 1A70     		strb	r2, [r3]	@ tmp376, GSMConfigGPRSState
1178:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3471              		.loc 1 1178 0
 3472 02c6 374B     		ldr	r3, .L291+12	@ tmp377,
 3473 02c8 0122     		movs	r2, #1	@ tmp378,
 3474 02ca 1A70     		strb	r2, [r3]	@ tmp379, GSMConfigGPRSflag
1179:src/sim900_800.c **** 				}
1180:src/sim900_800.c **** 			}
1181:src/sim900_800.c **** 			break;
 3475              		.loc 1 1181 0
ARM GAS  /tmp/ccNuUijR.s 			page 85


 3476 02cc ACE2     		b	.L279	@
 3477              	.L215:
1182:src/sim900_800.c **** 
1183:src/sim900_800.c **** 		case 4:
1184:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3478              		.loc 1 1184 0
 3479 02ce 1724     		movs	r4, #23	@ tmp380,
 3480 02d0 6C44     		add	r4, r4, sp	@ tmp380,
 3481 02d2 354B     		ldr	r3, .L291+16	@ tmp381,
 3482 02d4 4548     		ldr	r0, .L291+84	@ tmp382,
 3483 02d6 0122     		movs	r2, #1	@,
 3484 02d8 3221     		movs	r1, #50	@,
 3485 02da FFF7FEFF 		bl	GSMSendCommand	@
 3486 02de 0300     		movs	r3, r0	@ tmp383,
 3487 02e0 2370     		strb	r3, [r4]	@ tmp385, i
1185:src/sim900_800.c **** 
1186:src/sim900_800.c **** 			if (i == 2)
 3488              		.loc 1 1186 0
 3489 02e2 1723     		movs	r3, #23	@ tmp386,
 3490 02e4 6B44     		add	r3, r3, sp	@ tmp386,
 3491 02e6 1B78     		ldrb	r3, [r3]	@ tmp387, i
 3492 02e8 022B     		cmp	r3, #2	@ tmp387,
 3493 02ea 1BD1     		bne	.L243	@,
1187:src/sim900_800.c **** 			{
1188:src/sim900_800.c **** 				if ((!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN:
 3494              		.loc 1 1188 0
 3495 02ec 4049     		ldr	r1, .L291+88	@ tmp388,
 3496 02ee 2E4B     		ldr	r3, .L291+16	@ tmp389,
 3497 02f0 0C22     		movs	r2, #12	@,
 3498 02f2 1800     		movs	r0, r3	@, tmp389
 3499 02f4 FFF7FEFF 		bl	strncmp	@
 3500 02f8 031E     		subs	r3, r0, #0	@ D.7949,,
 3501 02fa 07D0     		beq	.L244	@,
 3502              		.loc 1 1188 0 is_stmt 0 discriminator 1
 3503 02fc 3D49     		ldr	r1, .L291+92	@ tmp390,
 3504 02fe 2A4B     		ldr	r3, .L291+16	@ tmp391,
 3505 0300 0E22     		movs	r2, #14	@,
 3506 0302 1800     		movs	r0, r3	@, tmp391
 3507 0304 FFF7FEFF 		bl	strncmp	@
 3508 0308 031E     		subs	r3, r0, #0	@ D.7949,,
 3509 030a 06D1     		bne	.L245	@,
 3510              	.L244:
1189:src/sim900_800.c **** 				{
1190:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3511              		.loc 1 1190 0 is_stmt 1
 3512 030c 224B     		ldr	r3, .L291	@ tmp392,
 3513 030e 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3514 0310 0133     		adds	r3, r3, #1	@ tmp393,
 3515 0312 DAB2     		uxtb	r2, r3	@ D.7948, tmp393
 3516 0314 204B     		ldr	r3, .L291	@ tmp394,
 3517 0316 1A70     		strb	r2, [r3]	@ tmp395, GSMConfigGPRSState
 3518 0318 04E0     		b	.L243	@
 3519              	.L245:
1191:src/sim900_800.c **** 				}
1192:src/sim900_800.c **** 				else
1193:src/sim900_800.c **** 				{
1194:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
ARM GAS  /tmp/ccNuUijR.s 			page 86


 3520              		.loc 1 1194 0
 3521 031a 1F4B     		ldr	r3, .L291	@ tmp396,
 3522 031c 0022     		movs	r2, #0	@ tmp397,
 3523 031e 1A70     		strb	r2, [r3]	@ tmp398, GSMConfigGPRSState
1195:src/sim900_800.c **** 					return 3;
 3524              		.loc 1 1195 0
 3525 0320 0323     		movs	r3, #3	@ D.7948,
 3526 0322 A2E2     		b	.L230	@
 3527              	.L243:
1196:src/sim900_800.c **** 				}
1197:src/sim900_800.c **** 			}
1198:src/sim900_800.c **** 
1199:src/sim900_800.c **** 			if (i > 2)
 3528              		.loc 1 1199 0
 3529 0324 1723     		movs	r3, #23	@ tmp399,
 3530 0326 6B44     		add	r3, r3, sp	@ tmp399,
 3531 0328 1B78     		ldrb	r3, [r3]	@ tmp400, i
 3532 032a 022B     		cmp	r3, #2	@ tmp400,
 3533 032c 00D8     		bhi	.LCB2771	@
 3534 032e 7DE2     		b	.L280	@long jump	@
 3535              	.LCB2771:
1200:src/sim900_800.c **** 			{
1201:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3536              		.loc 1 1201 0
 3537 0330 194B     		ldr	r3, .L291	@ tmp401,
 3538 0332 0022     		movs	r2, #0	@ tmp402,
 3539 0334 1A70     		strb	r2, [r3]	@ tmp403, GSMConfigGPRSState
1202:src/sim900_800.c **** 				return 3;
 3540              		.loc 1 1202 0
 3541 0336 0323     		movs	r3, #3	@ D.7948,
 3542 0338 97E2     		b	.L230	@
 3543              	.L216:
1203:src/sim900_800.c **** 			}
1204:src/sim900_800.c **** 			break;
1205:src/sim900_800.c **** 
1206:src/sim900_800.c **** 		case 5:
1207:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3544              		.loc 1 1207 0
 3545 033a 1724     		movs	r4, #23	@ tmp404,
 3546 033c 6C44     		add	r4, r4, sp	@ tmp404,
 3547 033e 1A4B     		ldr	r3, .L291+16	@ tmp405,
 3548 0340 2D48     		ldr	r0, .L291+96	@ tmp406,
 3549 0342 0122     		movs	r2, #1	@,
 3550 0344 3221     		movs	r1, #50	@,
 3551 0346 FFF7FEFF 		bl	GSMSendCommand	@
 3552 034a 0300     		movs	r3, r0	@ tmp407,
 3553 034c 2370     		strb	r3, [r4]	@ tmp409, i
1208:src/sim900_800.c **** 
1209:src/sim900_800.c **** 			if (i == 2)
 3554              		.loc 1 1209 0
 3555 034e 1723     		movs	r3, #23	@ tmp410,
 3556 0350 6B44     		add	r3, r3, sp	@ tmp410,
 3557 0352 1B78     		ldrb	r3, [r3]	@ tmp411, i
 3558 0354 022B     		cmp	r3, #2	@ tmp411,
 3559 0356 13D1     		bne	.L247	@,
1210:src/sim900_800.c **** 			{
1211:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
ARM GAS  /tmp/ccNuUijR.s 			page 87


 3560              		.loc 1 1211 0
 3561 0358 2849     		ldr	r1, .L291+100	@ tmp412,
 3562 035a 134B     		ldr	r3, .L291+16	@ tmp413,
 3563 035c 0A22     		movs	r2, #10	@,
 3564 035e 1800     		movs	r0, r3	@, tmp413
 3565 0360 FFF7FEFF 		bl	strncmp	@
 3566 0364 031E     		subs	r3, r0, #0	@ D.7949,,
 3567 0366 06D1     		bne	.L248	@,
1212:src/sim900_800.c **** 				{
1213:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3568              		.loc 1 1213 0
 3569 0368 0B4B     		ldr	r3, .L291	@ tmp414,
 3570 036a 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3571 036c 0133     		adds	r3, r3, #1	@ tmp415,
 3572 036e DAB2     		uxtb	r2, r3	@ D.7948, tmp415
 3573 0370 094B     		ldr	r3, .L291	@ tmp416,
 3574 0372 1A70     		strb	r2, [r3]	@ tmp417, GSMConfigGPRSState
 3575 0374 04E0     		b	.L247	@
 3576              	.L248:
1214:src/sim900_800.c **** 				}
1215:src/sim900_800.c **** 				else
1216:src/sim900_800.c **** 				{
1217:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3577              		.loc 1 1217 0
 3578 0376 084B     		ldr	r3, .L291	@ tmp418,
 3579 0378 0022     		movs	r2, #0	@ tmp419,
 3580 037a 1A70     		strb	r2, [r3]	@ tmp420, GSMConfigGPRSState
1218:src/sim900_800.c **** 					return 3;
 3581              		.loc 1 1218 0
 3582 037c 0323     		movs	r3, #3	@ D.7948,
 3583 037e 74E2     		b	.L230	@
 3584              	.L247:
1219:src/sim900_800.c **** 				}
1220:src/sim900_800.c **** 			}
1221:src/sim900_800.c **** 
1222:src/sim900_800.c **** 			if (i > 2)
 3585              		.loc 1 1222 0
 3586 0380 1723     		movs	r3, #23	@ tmp421,
 3587 0382 6B44     		add	r3, r3, sp	@ tmp421,
 3588 0384 1B78     		ldrb	r3, [r3]	@ tmp422, i
 3589 0386 022B     		cmp	r3, #2	@ tmp422,
 3590 0388 00D8     		bhi	.LCB2824	@
 3591 038a 51E2     		b	.L281	@long jump	@
 3592              	.LCB2824:
1223:src/sim900_800.c **** 			{
1224:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3593              		.loc 1 1224 0
 3594 038c 024B     		ldr	r3, .L291	@ tmp423,
 3595 038e 0022     		movs	r2, #0	@ tmp424,
 3596 0390 1A70     		strb	r2, [r3]	@ tmp425, GSMConfigGPRSState
1225:src/sim900_800.c **** 				return 3;
 3597              		.loc 1 1225 0
 3598 0392 0323     		movs	r3, #3	@ D.7948,
 3599 0394 69E2     		b	.L230	@
 3600              	.L292:
 3601 0396 C046     		.align	2
 3602              	.L291:
ARM GAS  /tmp/ccNuUijR.s 			page 88


 3603 0398 00000000 		.word	GSMConfigGPRSState
 3604 039c 00000000 		.word	.L211
 3605 03a0 00000000 		.word	GSMConfigGPRSTimeOut
 3606 03a4 00000000 		.word	GSMConfigGPRSflag
 3607 03a8 00000000 		.word	GSMbuffRtaCommand
 3608 03ac E4000000 		.word	.LC104
 3609 03b0 FC000000 		.word	.LC106
 3610 03b4 00000000 		.word	GSM_IPINITIAL
 3611 03b8 00000000 		.word	GSMbuffStatus
 3612 03bc 00000000 		.word	GSM_IPSTART
 3613 03c0 00000000 		.word	GSM_IPGPRSACT
 3614 03c4 00000000 		.word	GSM_IPSTATUS
 3615 03c8 00000000 		.word	GSMbuffGPRSCommand
 3616 03cc 0C010000 		.word	.LC114
 3617 03d0 20010000 		.word	.LC116
 3618 03d4 DC000000 		.word	.LC94
 3619 03d8 00000000 		.word	GSM_IPCONNECTING
 3620 03dc 00000000 		.word	GSM_IPCONNOK
 3621 03e0 00000000 		.word	GSM_IPCONNCLOSE
 3622 03e4 24010000 		.word	.LC122
 3623 03e8 30010000 		.word	.LC124
 3624 03ec 3C010000 		.word	.LC126
 3625 03f0 48010000 		.word	.LC128
 3626 03f4 58010000 		.word	.LC130
 3627 03f8 68010000 		.word	.LC132
 3628 03fc 74010000 		.word	.LC134
 3629              	.L217:
1226:src/sim900_800.c **** 			}
1227:src/sim900_800.c **** 			break;
1228:src/sim900_800.c **** 		case 6:
1229:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3630              		.loc 1 1229 0
 3631 0400 1724     		movs	r4, #23	@ tmp426,
 3632 0402 6C44     		add	r4, r4, sp	@ tmp426,
 3633 0404 CF4B     		ldr	r3, .L293	@ tmp427,
 3634 0406 D048     		ldr	r0, .L293+4	@ tmp428,
 3635 0408 0122     		movs	r2, #1	@,
 3636 040a 3221     		movs	r1, #50	@,
 3637 040c FFF7FEFF 		bl	GSMSendCommand	@
 3638 0410 0300     		movs	r3, r0	@ tmp429,
 3639 0412 2370     		strb	r3, [r4]	@ tmp431, i
1230:src/sim900_800.c **** 
1231:src/sim900_800.c **** 			if (i == 2)
 3640              		.loc 1 1231 0
 3641 0414 1723     		movs	r3, #23	@ tmp432,
 3642 0416 6B44     		add	r3, r3, sp	@ tmp432,
 3643 0418 1B78     		ldrb	r3, [r3]	@ tmp433, i
 3644 041a 022B     		cmp	r3, #2	@ tmp433,
 3645 041c 2DD1     		bne	.L250	@,
1232:src/sim900_800.c **** 			{
1233:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 3646              		.loc 1 1233 0
 3647 041e CB49     		ldr	r1, .L293+8	@ tmp434,
 3648 0420 C84B     		ldr	r3, .L293	@ tmp435,
 3649 0422 0522     		movs	r2, #5	@,
 3650 0424 1800     		movs	r0, r3	@, tmp435
 3651 0426 FFF7FEFF 		bl	strncmp	@
ARM GAS  /tmp/ccNuUijR.s 			page 89


 3652 042a 031E     		subs	r3, r0, #0	@ D.7949,,
 3653 042c 20D1     		bne	.L251	@,
1234:src/sim900_800.c **** 				{
1235:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 3654              		.loc 1 1235 0
 3655 042e C54B     		ldr	r3, .L293	@ tmp436,
 3656 0430 9B79     		ldrb	r3, [r3, #6]	@ D.7948,
 3657 0432 303B     		subs	r3, r3, #48	@ D.7949,
 3658 0434 DBB2     		uxtb	r3, r3	@ D.7952, D.7949
 3659 0436 1A1C     		adds	r2, r3, #0	@ tmp438, tmp437
 3660 0438 9200     		lsls	r2, r2, #2	@ tmp439, tmp438,
 3661 043a D318     		adds	r3, r2, r3	@ tmp441, tmp440, tmp437
 3662 043c DB18     		adds	r3, r3, r3	@ tmp443, tmp442, tmp442
 3663 043e DAB2     		uxtb	r2, r3	@ D.7952, tmp441
 3664 0440 C04B     		ldr	r3, .L293	@ tmp444,
 3665 0442 DB79     		ldrb	r3, [r3, #7]	@ D.7948,
 3666 0444 D318     		adds	r3, r2, r3	@ tmp445, D.7952, D.7948
 3667 0446 DBB2     		uxtb	r3, r3	@ D.7952, tmp445
 3668 0448 303B     		subs	r3, r3, #48	@ tmp446,
 3669 044a DAB2     		uxtb	r2, r3	@ D.7952, tmp446
 3670 044c C04B     		ldr	r3, .L293+12	@ tmp447,
 3671 044e 1A70     		strb	r2, [r3]	@ tmp448, GPRSrssi
1236:src/sim900_800.c **** 
1237:src/sim900_800.c **** 						if (GPRSrssi != 99)
 3672              		.loc 1 1237 0
 3673 0450 BF4B     		ldr	r3, .L293+12	@ tmp449,
 3674 0452 1B78     		ldrb	r3, [r3]	@ D.7952, GPRSrssi
 3675 0454 632B     		cmp	r3, #99	@ D.7952,
 3676 0456 06D0     		beq	.L252	@,
1238:src/sim900_800.c **** 							GSMConfigGPRSState++;
 3677              		.loc 1 1238 0
 3678 0458 BE4B     		ldr	r3, .L293+16	@ tmp450,
 3679 045a 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3680 045c 0133     		adds	r3, r3, #1	@ tmp451,
 3681 045e DAB2     		uxtb	r2, r3	@ D.7948, tmp451
 3682 0460 BC4B     		ldr	r3, .L293+16	@ tmp452,
 3683 0462 1A70     		strb	r2, [r3]	@ tmp453, GSMConfigGPRSState
 3684 0464 09E0     		b	.L250	@
 3685              	.L252:
1239:src/sim900_800.c **** 						else
1240:src/sim900_800.c **** 						{
1241:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 3686              		.loc 1 1241 0
 3687 0466 BB4B     		ldr	r3, .L293+16	@ tmp454,
 3688 0468 0022     		movs	r2, #0	@ tmp455,
 3689 046a 1A70     		strb	r2, [r3]	@ tmp456, GSMConfigGPRSState
1242:src/sim900_800.c **** 							return 20;
 3690              		.loc 1 1242 0
 3691 046c 1423     		movs	r3, #20	@ D.7948,
 3692 046e FCE1     		b	.L230	@
 3693              	.L251:
1243:src/sim900_800.c **** 						}
1244:src/sim900_800.c **** 				}
1245:src/sim900_800.c **** 				else
1246:src/sim900_800.c **** 				{
1247:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3694              		.loc 1 1247 0
ARM GAS  /tmp/ccNuUijR.s 			page 90


 3695 0470 B84B     		ldr	r3, .L293+16	@ tmp457,
 3696 0472 0022     		movs	r2, #0	@ tmp458,
 3697 0474 1A70     		strb	r2, [r3]	@ tmp459, GSMConfigGPRSState
1248:src/sim900_800.c **** 					return 3;
 3698              		.loc 1 1248 0
 3699 0476 0323     		movs	r3, #3	@ D.7948,
 3700 0478 F7E1     		b	.L230	@
 3701              	.L250:
1249:src/sim900_800.c **** 				}
1250:src/sim900_800.c **** 			}
1251:src/sim900_800.c **** 
1252:src/sim900_800.c **** 			if (i > 2)
 3702              		.loc 1 1252 0
 3703 047a 1723     		movs	r3, #23	@ tmp460,
 3704 047c 6B44     		add	r3, r3, sp	@ tmp460,
 3705 047e 1B78     		ldrb	r3, [r3]	@ tmp461, i
 3706 0480 022B     		cmp	r3, #2	@ tmp461,
 3707 0482 00D8     		bhi	.LCB2937	@
 3708 0484 D6E1     		b	.L282	@long jump	@
 3709              	.LCB2937:
1253:src/sim900_800.c **** 			{
1254:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3710              		.loc 1 1254 0
 3711 0486 B34B     		ldr	r3, .L293+16	@ tmp462,
 3712 0488 0022     		movs	r2, #0	@ tmp463,
 3713 048a 1A70     		strb	r2, [r3]	@ tmp464, GSMConfigGPRSState
1255:src/sim900_800.c **** 				return 3;
 3714              		.loc 1 1255 0
 3715 048c 0323     		movs	r3, #3	@ D.7948,
 3716 048e ECE1     		b	.L230	@
 3717              	.L218:
1256:src/sim900_800.c **** 			}
1257:src/sim900_800.c **** 			break;
1258:src/sim900_800.c **** 		case 7:
1259:src/sim900_800.c **** 
1260:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3718              		.loc 1 1260 0
 3719 0490 1724     		movs	r4, #23	@ tmp465,
 3720 0492 6C44     		add	r4, r4, sp	@ tmp465,
 3721 0494 AB4B     		ldr	r3, .L293	@ tmp466,
 3722 0496 B048     		ldr	r0, .L293+20	@ tmp467,
 3723 0498 0022     		movs	r2, #0	@,
 3724 049a 3221     		movs	r1, #50	@,
 3725 049c FFF7FEFF 		bl	GSMSendCommand	@
 3726 04a0 0300     		movs	r3, r0	@ tmp468,
 3727 04a2 2370     		strb	r3, [r4]	@ tmp470, i
1261:src/sim900_800.c **** 
1262:src/sim900_800.c **** 			if (i == 2)
 3728              		.loc 1 1262 0
 3729 04a4 1723     		movs	r3, #23	@ tmp471,
 3730 04a6 6B44     		add	r3, r3, sp	@ tmp471,
 3731 04a8 1B78     		ldrb	r3, [r3]	@ tmp472, i
 3732 04aa 022B     		cmp	r3, #2	@ tmp472,
 3733 04ac 05D1     		bne	.L254	@,
1263:src/sim900_800.c **** 			{
1264:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3734              		.loc 1 1264 0
ARM GAS  /tmp/ccNuUijR.s 			page 91


 3735 04ae A94B     		ldr	r3, .L293+16	@ tmp473,
 3736 04b0 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3737 04b2 0133     		adds	r3, r3, #1	@ tmp474,
 3738 04b4 DAB2     		uxtb	r2, r3	@ D.7948, tmp474
 3739 04b6 A74B     		ldr	r3, .L293+16	@ tmp475,
 3740 04b8 1A70     		strb	r2, [r3]	@ tmp476, GSMConfigGPRSState
 3741              	.L254:
1265:src/sim900_800.c **** 			}
1266:src/sim900_800.c **** 
1267:src/sim900_800.c **** 			if (i > 2)
 3742              		.loc 1 1267 0
 3743 04ba 1723     		movs	r3, #23	@ tmp477,
 3744 04bc 6B44     		add	r3, r3, sp	@ tmp477,
 3745 04be 1B78     		ldrb	r3, [r3]	@ tmp478, i
 3746 04c0 022B     		cmp	r3, #2	@ tmp478,
 3747 04c2 00D8     		bhi	.LCB2972	@
 3748 04c4 B8E1     		b	.L283	@long jump	@
 3749              	.LCB2972:
1268:src/sim900_800.c **** 			{
1269:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3750              		.loc 1 1269 0
 3751 04c6 A34B     		ldr	r3, .L293+16	@ tmp479,
 3752 04c8 0022     		movs	r2, #0	@ tmp480,
 3753 04ca 1A70     		strb	r2, [r3]	@ tmp481, GSMConfigGPRSState
1270:src/sim900_800.c **** 				return 3;
 3754              		.loc 1 1270 0
 3755 04cc 0323     		movs	r3, #3	@ D.7948,
 3756 04ce CCE1     		b	.L230	@
 3757              	.L219:
1271:src/sim900_800.c **** 			}
1272:src/sim900_800.c **** 			break;
1273:src/sim900_800.c **** 
1274:src/sim900_800.c **** 		case 8:
1275:src/sim900_800.c **** 
1276:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3758              		.loc 1 1276 0
 3759 04d0 1724     		movs	r4, #23	@ tmp482,
 3760 04d2 6C44     		add	r4, r4, sp	@ tmp482,
 3761 04d4 9B4B     		ldr	r3, .L293	@ tmp483,
 3762 04d6 A148     		ldr	r0, .L293+24	@ tmp484,
 3763 04d8 0122     		movs	r2, #1	@,
 3764 04da 3221     		movs	r1, #50	@,
 3765 04dc FFF7FEFF 		bl	GSMSendCommand	@
 3766 04e0 0300     		movs	r3, r0	@ tmp485,
 3767 04e2 2370     		strb	r3, [r4]	@ tmp487, i
1277:src/sim900_800.c **** 
1278:src/sim900_800.c **** 			if (i == 2)
 3768              		.loc 1 1278 0
 3769 04e4 1723     		movs	r3, #23	@ tmp488,
 3770 04e6 6B44     		add	r3, r3, sp	@ tmp488,
 3771 04e8 1B78     		ldrb	r3, [r3]	@ tmp489, i
 3772 04ea 022B     		cmp	r3, #2	@ tmp489,
 3773 04ec 38D1     		bne	.L256	@,
1279:src/sim900_800.c **** 			{
1280:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 3774              		.loc 1 1280 0
 3775 04ee 9C49     		ldr	r1, .L293+28	@ tmp490,
ARM GAS  /tmp/ccNuUijR.s 			page 92


 3776 04f0 944B     		ldr	r3, .L293	@ tmp491,
 3777 04f2 0722     		movs	r2, #7	@,
 3778 04f4 1800     		movs	r0, r3	@, tmp491
 3779 04f6 FFF7FEFF 		bl	strncmp	@
 3780 04fa 031E     		subs	r3, r0, #0	@ D.7949,,
 3781 04fc 30D1     		bne	.L256	@,
1281:src/sim900_800.c **** 				{
1282:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 3782              		.loc 1 1282 0
 3783 04fe 914B     		ldr	r3, .L293	@ tmp492,
 3784 0500 1B7A     		ldrb	r3, [r3, #8]	@ D.7948,
 3785 0502 312B     		cmp	r3, #49	@ D.7948,
 3786 0504 23D1     		bne	.L257	@,
1283:src/sim900_800.c **** 					{
1284:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 3787              		.loc 1 1284 0
 3788 0506 934B     		ldr	r3, .L293+16	@ tmp493,
 3789 0508 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3790 050a 0133     		adds	r3, r3, #1	@ tmp494,
 3791 050c DAB2     		uxtb	r2, r3	@ D.7948, tmp494
 3792 050e 914B     		ldr	r3, .L293+16	@ tmp495,
 3793 0510 1A70     		strb	r2, [r3]	@ tmp496, GSMConfigGPRSState
1285:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 3794              		.loc 1 1285 0
 3795 0512 944A     		ldr	r2, .L293+32	@ tmp497,
 3796 0514 944B     		ldr	r3, .L293+36	@ tmp498,
 3797 0516 1000     		movs	r0, r2	@ tmp499, tmp497
 3798 0518 1900     		movs	r1, r3	@ tmp500, tmp498
 3799 051a 1423     		movs	r3, #20	@ tmp501,
 3800 051c 1A00     		movs	r2, r3	@, tmp501
 3801 051e FFF7FEFF 		bl	memcpy	@
1286:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3802              		.loc 1 1286 0
 3803 0522 029A     		ldr	r2, [sp, #8]	@ tmp504, ptrAPN
 3804 0524 8F4B     		ldr	r3, .L293+32	@ tmp505,
 3805 0526 1100     		movs	r1, r2	@, tmp504
 3806 0528 1800     		movs	r0, r3	@, tmp505
 3807 052a FFF7FEFF 		bl	strcat	@
1287:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3808              		.loc 1 1287 0
 3809 052e 8D4B     		ldr	r3, .L293+32	@ tmp506,
 3810 0530 1800     		movs	r0, r3	@, tmp506
 3811 0532 FFF7FEFF 		bl	strlen	@
 3812 0536 0300     		movs	r3, r0	@ tmp507,
 3813 0538 1A00     		movs	r2, r3	@ D.7950, tmp508
 3814 053a 8A4B     		ldr	r3, .L293+32	@ tmp509,
 3815 053c D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp509
 3816 053e 8B4B     		ldr	r3, .L293+40	@ tmp510,
 3817 0540 1000     		movs	r0, r2	@ tmp511, D.7951
 3818 0542 1900     		movs	r1, r3	@ tmp512, tmp510
 3819 0544 0423     		movs	r3, #4	@ tmp513,
 3820 0546 1A00     		movs	r2, r3	@, tmp513
 3821 0548 FFF7FEFF 		bl	memcpy	@
 3822 054c 08E0     		b	.L256	@
 3823              	.L257:
1288:src/sim900_800.c **** 					}
1289:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
ARM GAS  /tmp/ccNuUijR.s 			page 93


 3824              		.loc 1 1289 0
 3825 054e 7D4B     		ldr	r3, .L293	@ tmp516,
 3826 0550 1B7A     		ldrb	r3, [r3, #8]	@ D.7948,
 3827 0552 302B     		cmp	r3, #48	@ D.7948,
 3828 0554 04D1     		bne	.L256	@,
1290:src/sim900_800.c **** 					{
1291:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 3829              		.loc 1 1291 0
 3830 0556 7F4B     		ldr	r3, .L293+16	@ tmp517,
 3831 0558 0022     		movs	r2, #0	@ tmp518,
 3832 055a 1A70     		strb	r2, [r3]	@ tmp519, GSMConfigGPRSState
1292:src/sim900_800.c **** 						return 3;
 3833              		.loc 1 1292 0
 3834 055c 0323     		movs	r3, #3	@ D.7948,
 3835 055e 84E1     		b	.L230	@
 3836              	.L256:
1293:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
1294:src/sim900_800.c **** 					}
1295:src/sim900_800.c **** 				}
1296:src/sim900_800.c **** 			}
1297:src/sim900_800.c **** 
1298:src/sim900_800.c **** 			if (i > 2)
 3837              		.loc 1 1298 0
 3838 0560 1723     		movs	r3, #23	@ tmp520,
 3839 0562 6B44     		add	r3, r3, sp	@ tmp520,
 3840 0564 1B78     		ldrb	r3, [r3]	@ tmp521, i
 3841 0566 022B     		cmp	r3, #2	@ tmp521,
 3842 0568 00D8     		bhi	.LCB3058	@
 3843 056a 67E1     		b	.L284	@long jump	@
 3844              	.LCB3058:
1299:src/sim900_800.c **** 			{
1300:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3845              		.loc 1 1300 0
 3846 056c 794B     		ldr	r3, .L293+16	@ tmp522,
 3847 056e 0022     		movs	r2, #0	@ tmp523,
 3848 0570 1A70     		strb	r2, [r3]	@ tmp524, GSMConfigGPRSState
1301:src/sim900_800.c **** 				return 3;
 3849              		.loc 1 1301 0
 3850 0572 0323     		movs	r3, #3	@ D.7948,
 3851 0574 79E1     		b	.L230	@
 3852              	.L220:
1302:src/sim900_800.c **** 			}
1303:src/sim900_800.c **** 
1304:src/sim900_800.c **** 			break;
1305:src/sim900_800.c **** 
1306:src/sim900_800.c **** 		case 9:
1307:src/sim900_800.c **** 
1308:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3853              		.loc 1 1308 0
 3854 0576 1724     		movs	r4, #23	@ tmp525,
 3855 0578 6C44     		add	r4, r4, sp	@ tmp525,
 3856 057a 724B     		ldr	r3, .L293	@ tmp526,
 3857 057c 7948     		ldr	r0, .L293+32	@ tmp527,
 3858 057e 0022     		movs	r2, #0	@,
 3859 0580 3221     		movs	r1, #50	@,
 3860 0582 FFF7FEFF 		bl	GSMSendCommand	@
 3861 0586 0300     		movs	r3, r0	@ tmp528,
ARM GAS  /tmp/ccNuUijR.s 			page 94


 3862 0588 2370     		strb	r3, [r4]	@ tmp530, i
1309:src/sim900_800.c **** 
1310:src/sim900_800.c **** 			if (i == 2)
 3863              		.loc 1 1310 0
 3864 058a 1723     		movs	r3, #23	@ tmp531,
 3865 058c 6B44     		add	r3, r3, sp	@ tmp531,
 3866 058e 1B78     		ldrb	r3, [r3]	@ tmp532, i
 3867 0590 022B     		cmp	r3, #2	@ tmp532,
 3868 0592 4CD1     		bne	.L259	@,
1311:src/sim900_800.c **** 			{
1312:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3869              		.loc 1 1312 0
 3870 0594 6F4B     		ldr	r3, .L293+16	@ tmp533,
 3871 0596 1B78     		ldrb	r3, [r3]	@ D.7948, GSMConfigGPRSState
 3872 0598 0133     		adds	r3, r3, #1	@ tmp534,
 3873 059a DAB2     		uxtb	r2, r3	@ D.7948, tmp534
 3874 059c 6D4B     		ldr	r3, .L293+16	@ tmp535,
 3875 059e 1A70     		strb	r2, [r3]	@ tmp536, GSMConfigGPRSState
1313:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 3876              		.loc 1 1313 0
 3877 05a0 704A     		ldr	r2, .L293+32	@ tmp537,
 3878 05a2 734B     		ldr	r3, .L293+44	@ tmp538,
 3879 05a4 1000     		movs	r0, r2	@ tmp539, tmp537
 3880 05a6 1900     		movs	r1, r3	@ tmp540, tmp538
 3881 05a8 0A23     		movs	r3, #10	@ tmp541,
 3882 05aa 1A00     		movs	r2, r3	@, tmp541
 3883 05ac FFF7FEFF 		bl	memcpy	@
1314:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3884              		.loc 1 1314 0
 3885 05b0 029A     		ldr	r2, [sp, #8]	@ tmp544, ptrAPN
 3886 05b2 6C4B     		ldr	r3, .L293+32	@ tmp545,
 3887 05b4 1100     		movs	r1, r2	@, tmp544
 3888 05b6 1800     		movs	r0, r3	@, tmp545
 3889 05b8 FFF7FEFF 		bl	strcat	@
1315:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3890              		.loc 1 1315 0
 3891 05bc 694B     		ldr	r3, .L293+32	@ tmp546,
 3892 05be 1800     		movs	r0, r3	@, tmp546
 3893 05c0 FFF7FEFF 		bl	strlen	@
 3894 05c4 0300     		movs	r3, r0	@ tmp547,
 3895 05c6 1A00     		movs	r2, r3	@ D.7950, tmp548
 3896 05c8 664B     		ldr	r3, .L293+32	@ tmp549,
 3897 05ca D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp549
 3898 05cc 694B     		ldr	r3, .L293+48	@ tmp550,
 3899 05ce 1000     		movs	r0, r2	@ tmp551, D.7951
 3900 05d0 1900     		movs	r1, r3	@ tmp552, tmp550
 3901 05d2 0423     		movs	r3, #4	@ tmp553,
 3902 05d4 1A00     		movs	r2, r3	@, tmp553
 3903 05d6 FFF7FEFF 		bl	memcpy	@
1316:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 3904              		.loc 1 1316 0
 3905 05da 019A     		ldr	r2, [sp, #4]	@ tmp556, ptrUSER
 3906 05dc 614B     		ldr	r3, .L293+32	@ tmp557,
 3907 05de 1100     		movs	r1, r2	@, tmp556
 3908 05e0 1800     		movs	r0, r3	@, tmp557
 3909 05e2 FFF7FEFF 		bl	strcat	@
1317:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
ARM GAS  /tmp/ccNuUijR.s 			page 95


 3910              		.loc 1 1317 0
 3911 05e6 5F4B     		ldr	r3, .L293+32	@ tmp558,
 3912 05e8 1800     		movs	r0, r3	@, tmp558
 3913 05ea FFF7FEFF 		bl	strlen	@
 3914 05ee 0300     		movs	r3, r0	@ tmp559,
 3915 05f0 1A00     		movs	r2, r3	@ D.7950, tmp560
 3916 05f2 5C4B     		ldr	r3, .L293+32	@ tmp561,
 3917 05f4 D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp561
 3918 05f6 5F4B     		ldr	r3, .L293+48	@ tmp562,
 3919 05f8 1000     		movs	r0, r2	@ tmp563, D.7951
 3920 05fa 1900     		movs	r1, r3	@ tmp564, tmp562
 3921 05fc 0423     		movs	r3, #4	@ tmp565,
 3922 05fe 1A00     		movs	r2, r3	@, tmp565
 3923 0600 FFF7FEFF 		bl	memcpy	@
1318:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 3924              		.loc 1 1318 0
 3925 0604 009A     		ldr	r2, [sp]	@ tmp568, ptrKEY
 3926 0606 574B     		ldr	r3, .L293+32	@ tmp569,
 3927 0608 1100     		movs	r1, r2	@, tmp568
 3928 060a 1800     		movs	r0, r3	@, tmp569
 3929 060c FFF7FEFF 		bl	strcat	@
1319:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3930              		.loc 1 1319 0
 3931 0610 544B     		ldr	r3, .L293+32	@ tmp570,
 3932 0612 1800     		movs	r0, r3	@, tmp570
 3933 0614 FFF7FEFF 		bl	strlen	@
 3934 0618 0300     		movs	r3, r0	@ tmp571,
 3935 061a 1A00     		movs	r2, r3	@ D.7950, tmp572
 3936 061c 514B     		ldr	r3, .L293+32	@ tmp573,
 3937 061e D218     		adds	r2, r2, r3	@ D.7951, D.7950, tmp573
 3938 0620 524B     		ldr	r3, .L293+40	@ tmp574,
 3939 0622 1000     		movs	r0, r2	@ tmp575, D.7951
 3940 0624 1900     		movs	r1, r3	@ tmp576, tmp574
 3941 0626 0423     		movs	r3, #4	@ tmp577,
 3942 0628 1A00     		movs	r2, r3	@, tmp577
 3943 062a FFF7FEFF 		bl	memcpy	@
 3944              	.L259:
1320:src/sim900_800.c **** 			}
1321:src/sim900_800.c **** 
1322:src/sim900_800.c **** 			if (i > 2)
 3945              		.loc 1 1322 0
 3946 062e 1723     		movs	r3, #23	@ tmp580,
 3947 0630 6B44     		add	r3, r3, sp	@ tmp580,
 3948 0632 1B78     		ldrb	r3, [r3]	@ tmp581, i
 3949 0634 022B     		cmp	r3, #2	@ tmp581,
 3950 0636 00D8     		bhi	.LCB3154	@
 3951 0638 02E1     		b	.L285	@long jump	@
 3952              	.LCB3154:
1323:src/sim900_800.c **** 			{
1324:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3953              		.loc 1 1324 0
 3954 063a 464B     		ldr	r3, .L293+16	@ tmp582,
 3955 063c 0022     		movs	r2, #0	@ tmp583,
 3956 063e 1A70     		strb	r2, [r3]	@ tmp584, GSMConfigGPRSState
1325:src/sim900_800.c **** 				return 3;
 3957              		.loc 1 1325 0
 3958 0640 0323     		movs	r3, #3	@ D.7948,
ARM GAS  /tmp/ccNuUijR.s 			page 96


 3959 0642 12E1     		b	.L230	@
 3960              	.L221:
1326:src/sim900_800.c **** 			}
1327:src/sim900_800.c **** 			break;
1328:src/sim900_800.c **** 
1329:src/sim900_800.c **** 		case 10:
1330:src/sim900_800.c **** 
1331:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3961              		.loc 1 1331 0
 3962 0644 1724     		movs	r4, #23	@ tmp585,
 3963 0646 6C44     		add	r4, r4, sp	@ tmp585,
 3964 0648 3E4B     		ldr	r3, .L293	@ tmp586,
 3965 064a 4648     		ldr	r0, .L293+32	@ tmp587,
 3966 064c 0022     		movs	r2, #0	@,
 3967 064e 3221     		movs	r1, #50	@,
 3968 0650 FFF7FEFF 		bl	GSMSendCommand	@
 3969 0654 0300     		movs	r3, r0	@ tmp588,
 3970 0656 2370     		strb	r3, [r4]	@ tmp590, i
1332:src/sim900_800.c **** 
1333:src/sim900_800.c **** 			if (i == 2)
 3971              		.loc 1 1333 0
 3972 0658 1723     		movs	r3, #23	@ tmp591,
 3973 065a 6B44     		add	r3, r3, sp	@ tmp591,
 3974 065c 1B78     		ldrb	r3, [r3]	@ tmp592, i
 3975 065e 022B     		cmp	r3, #2	@ tmp592,
 3976 0660 02D1     		bne	.L261	@,
1334:src/sim900_800.c **** 			{
1335:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3977              		.loc 1 1335 0
 3978 0662 3C4B     		ldr	r3, .L293+16	@ tmp593,
 3979 0664 0222     		movs	r2, #2	@ tmp594,
 3980 0666 1A70     		strb	r2, [r3]	@ tmp595, GSMConfigGPRSState
 3981              	.L261:
1336:src/sim900_800.c **** 			}
1337:src/sim900_800.c **** 
1338:src/sim900_800.c **** 			if (i > 2)
 3982              		.loc 1 1338 0
 3983 0668 1723     		movs	r3, #23	@ tmp596,
 3984 066a 6B44     		add	r3, r3, sp	@ tmp596,
 3985 066c 1B78     		ldrb	r3, [r3]	@ tmp597, i
 3986 066e 022B     		cmp	r3, #2	@ tmp597,
 3987 0670 00D8     		bhi	.LCB3186	@
 3988 0672 E7E0     		b	.L286	@long jump	@
 3989              	.LCB3186:
1339:src/sim900_800.c **** 			{
1340:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3990              		.loc 1 1340 0
 3991 0674 374B     		ldr	r3, .L293+16	@ tmp598,
 3992 0676 0022     		movs	r2, #0	@ tmp599,
 3993 0678 1A70     		strb	r2, [r3]	@ tmp600, GSMConfigGPRSState
1341:src/sim900_800.c **** 				return 3;
 3994              		.loc 1 1341 0
 3995 067a 0323     		movs	r3, #3	@ D.7948,
 3996 067c F5E0     		b	.L230	@
 3997              	.L222:
1342:src/sim900_800.c **** 			}
1343:src/sim900_800.c **** 			break;
ARM GAS  /tmp/ccNuUijR.s 			page 97


1344:src/sim900_800.c **** 
1345:src/sim900_800.c **** 		case 11:
1346:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 3998              		.loc 1 1346 0
 3999 067e 1724     		movs	r4, #23	@ tmp601,
 4000 0680 6C44     		add	r4, r4, sp	@ tmp601,
 4001 0682 304B     		ldr	r3, .L293	@ tmp602,
 4002 0684 3C48     		ldr	r0, .L293+52	@ tmp603,
 4003 0686 0022     		movs	r2, #0	@,
 4004 0688 C821     		movs	r1, #200	@,
 4005 068a FFF7FEFF 		bl	GSMSendCommand	@
 4006 068e 0300     		movs	r3, r0	@ tmp604,
 4007 0690 2370     		strb	r3, [r4]	@ tmp606, i
1347:src/sim900_800.c **** 
1348:src/sim900_800.c **** 			if (i == 2)
 4008              		.loc 1 1348 0
 4009 0692 1723     		movs	r3, #23	@ tmp607,
 4010 0694 6B44     		add	r3, r3, sp	@ tmp607,
 4011 0696 1B78     		ldrb	r3, [r3]	@ tmp608, i
 4012 0698 022B     		cmp	r3, #2	@ tmp608,
 4013 069a 02D1     		bne	.L263	@,
1349:src/sim900_800.c **** 			{
1350:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 4014              		.loc 1 1350 0
 4015 069c 2D4B     		ldr	r3, .L293+16	@ tmp609,
 4016 069e 0222     		movs	r2, #2	@ tmp610,
 4017 06a0 1A70     		strb	r2, [r3]	@ tmp611, GSMConfigGPRSState
 4018              	.L263:
1351:src/sim900_800.c **** 			}
1352:src/sim900_800.c **** 
1353:src/sim900_800.c **** 			if (i > 2)
 4019              		.loc 1 1353 0
 4020 06a2 1723     		movs	r3, #23	@ tmp612,
 4021 06a4 6B44     		add	r3, r3, sp	@ tmp612,
 4022 06a6 1B78     		ldrb	r3, [r3]	@ tmp613, i
 4023 06a8 022B     		cmp	r3, #2	@ tmp613,
 4024 06aa 00D8     		bhi	.LCB3218	@
 4025 06ac CCE0     		b	.L287	@long jump	@
 4026              	.LCB3218:
1354:src/sim900_800.c **** 			{
1355:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4027              		.loc 1 1355 0
 4028 06ae 294B     		ldr	r3, .L293+16	@ tmp614,
 4029 06b0 0022     		movs	r2, #0	@ tmp615,
 4030 06b2 1A70     		strb	r2, [r3]	@ tmp616, GSMConfigGPRSState
1356:src/sim900_800.c **** 				return 3;
 4031              		.loc 1 1356 0
 4032 06b4 0323     		movs	r3, #3	@ D.7948,
 4033 06b6 D8E0     		b	.L230	@
 4034              	.L223:
1357:src/sim900_800.c **** 			}
1358:src/sim900_800.c **** 			break;
1359:src/sim900_800.c **** 
1360:src/sim900_800.c **** 		case 12:
1361:src/sim900_800.c **** 
1362:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 4035              		.loc 1 1362 0
ARM GAS  /tmp/ccNuUijR.s 			page 98


 4036 06b8 304B     		ldr	r3, .L293+56	@ tmp617,
 4037 06ba 0322     		movs	r2, #3	@ tmp618,
 4038 06bc 1A70     		strb	r2, [r3]	@ tmp619, GSMConfigGPRSflag
1363:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4039              		.loc 1 1363 0
 4040 06be 1724     		movs	r4, #23	@ tmp620,
 4041 06c0 6C44     		add	r4, r4, sp	@ tmp620,
 4042 06c2 204B     		ldr	r3, .L293	@ tmp621,
 4043 06c4 2E48     		ldr	r0, .L293+60	@ tmp622,
 4044 06c6 0022     		movs	r2, #0	@,
 4045 06c8 3221     		movs	r1, #50	@,
 4046 06ca FFF7FEFF 		bl	GSMSendCommand	@
 4047 06ce 0300     		movs	r3, r0	@ tmp623,
 4048 06d0 2370     		strb	r3, [r4]	@ tmp625, i
1364:src/sim900_800.c **** 
1365:src/sim900_800.c **** 			if (i == 2)
 4049              		.loc 1 1365 0
 4050 06d2 1723     		movs	r3, #23	@ tmp626,
 4051 06d4 6B44     		add	r3, r3, sp	@ tmp626,
 4052 06d6 1B78     		ldrb	r3, [r3]	@ tmp627, i
 4053 06d8 022B     		cmp	r3, #2	@ tmp627,
 4054 06da 05D1     		bne	.L265	@,
1366:src/sim900_800.c **** 			{
1367:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 4055              		.loc 1 1367 0
 4056 06dc 1D4B     		ldr	r3, .L293+16	@ tmp628,
 4057 06de 0222     		movs	r2, #2	@ tmp629,
 4058 06e0 1A70     		strb	r2, [r3]	@ tmp630, GSMConfigGPRSState
1368:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 4059              		.loc 1 1368 0
 4060 06e2 264B     		ldr	r3, .L293+56	@ tmp631,
 4061 06e4 0122     		movs	r2, #1	@ tmp632,
 4062 06e6 1A70     		strb	r2, [r3]	@ tmp633, GSMConfigGPRSflag
 4063              	.L265:
1369:src/sim900_800.c **** 			}
1370:src/sim900_800.c **** 
1371:src/sim900_800.c **** 			if (i > 2)
 4064              		.loc 1 1371 0
 4065 06e8 1723     		movs	r3, #23	@ tmp634,
 4066 06ea 6B44     		add	r3, r3, sp	@ tmp634,
 4067 06ec 1B78     		ldrb	r3, [r3]	@ tmp635, i
 4068 06ee 022B     		cmp	r3, #2	@ tmp635,
 4069 06f0 00D8     		bhi	.LCB3256	@
 4070 06f2 ABE0     		b	.L288	@long jump	@
 4071              	.LCB3256:
1372:src/sim900_800.c **** 			{
1373:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4072              		.loc 1 1373 0
 4073 06f4 174B     		ldr	r3, .L293+16	@ tmp636,
 4074 06f6 0022     		movs	r2, #0	@ tmp637,
 4075 06f8 1A70     		strb	r2, [r3]	@ tmp638, GSMConfigGPRSState
1374:src/sim900_800.c **** 				return 3;
 4076              		.loc 1 1374 0
 4077 06fa 0323     		movs	r3, #3	@ D.7948,
 4078 06fc B5E0     		b	.L230	@
 4079              	.L224:
1375:src/sim900_800.c **** 			}
ARM GAS  /tmp/ccNuUijR.s 			page 99


1376:src/sim900_800.c **** 			break;
1377:src/sim900_800.c **** 		case 13:
1378:src/sim900_800.c **** 
1379:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 4080              		.loc 1 1379 0
 4081 06fe 1724     		movs	r4, #23	@ tmp639,
 4082 0700 6C44     		add	r4, r4, sp	@ tmp639,
 4083 0702 104B     		ldr	r3, .L293	@ tmp640,
 4084 0704 1748     		ldr	r0, .L293+32	@ tmp641,
 4085 0706 0022     		movs	r2, #0	@,
 4086 0708 3221     		movs	r1, #50	@,
 4087 070a FFF7FEFF 		bl	GSMSendCommand	@
 4088 070e 0300     		movs	r3, r0	@ tmp642,
 4089 0710 2370     		strb	r3, [r4]	@ tmp644, i
1380:src/sim900_800.c **** 
1381:src/sim900_800.c **** 			if (i == 2)
 4090              		.loc 1 1381 0
 4091 0712 1723     		movs	r3, #23	@ tmp645,
 4092 0714 6B44     		add	r3, r3, sp	@ tmp645,
 4093 0716 1B78     		ldrb	r3, [r3]	@ tmp646, i
 4094 0718 022B     		cmp	r3, #2	@ tmp646,
 4095 071a 02D1     		bne	.L267	@,
1382:src/sim900_800.c **** 			{
1383:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
 4096              		.loc 1 1383 0
 4097 071c 0D4B     		ldr	r3, .L293+16	@ tmp647,
 4098 071e 0322     		movs	r2, #3	@ tmp648,
 4099 0720 1A70     		strb	r2, [r3]	@ tmp649, GSMConfigGPRSState
 4100              	.L267:
1384:src/sim900_800.c **** 			}
1385:src/sim900_800.c **** 
1386:src/sim900_800.c **** 			if (i > 2)
 4101              		.loc 1 1386 0
 4102 0722 1723     		movs	r3, #23	@ tmp650,
 4103 0724 6B44     		add	r3, r3, sp	@ tmp650,
 4104 0726 1B78     		ldrb	r3, [r3]	@ tmp651, i
 4105 0728 022B     		cmp	r3, #2	@ tmp651,
 4106 072a 00D8     		bhi	.LCB3288	@
 4107 072c 90E0     		b	.L289	@long jump	@
 4108              	.LCB3288:
1387:src/sim900_800.c **** 			{
1388:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4109              		.loc 1 1388 0
 4110 072e 094B     		ldr	r3, .L293+16	@ tmp652,
 4111 0730 0022     		movs	r2, #0	@ tmp653,
 4112 0732 1A70     		strb	r2, [r3]	@ tmp654, GSMConfigGPRSState
1389:src/sim900_800.c **** 				return 3;
 4113              		.loc 1 1389 0
 4114 0734 0323     		movs	r3, #3	@ D.7948,
 4115 0736 98E0     		b	.L230	@
 4116              	.L225:
1390:src/sim900_800.c **** 			}
1391:src/sim900_800.c **** 			break;
1392:src/sim900_800.c **** 
1393:src/sim900_800.c **** 		case 14:
1394:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4117              		.loc 1 1394 0
ARM GAS  /tmp/ccNuUijR.s 			page 100


 4118 0738 064B     		ldr	r3, .L293+16	@ tmp655,
 4119 073a 0022     		movs	r2, #0	@ tmp656,
 4120 073c 1A70     		strb	r2, [r3]	@ tmp657, GSMConfigGPRSState
1395:src/sim900_800.c **** 			return 2;
 4121              		.loc 1 1395 0
 4122 073e 0223     		movs	r3, #2	@ D.7948,
 4123 0740 93E0     		b	.L230	@
 4124              	.L294:
 4125 0742 C046     		.align	2
 4126              	.L293:
 4127 0744 00000000 		.word	GSMbuffRtaCommand
 4128 0748 80010000 		.word	.LC136
 4129 074c 8C010000 		.word	.LC138
 4130 0750 00000000 		.word	GPRSrssi
 4131 0754 00000000 		.word	GSMConfigGPRSState
 4132 0758 94010000 		.word	.LC141
 4133 075c A4010000 		.word	.LC143
 4134 0760 B0010000 		.word	.LC145
 4135 0764 00000000 		.word	GSMbuffGPRSCommand
 4136 0768 B8010000 		.word	.LC147
 4137 076c DC000000 		.word	.LC94
 4138 0770 CC010000 		.word	.LC149
 4139 0774 20010000 		.word	.LC116
 4140 0778 D8010000 		.word	.LC151
 4141 077c 00000000 		.word	GSMConfigGPRSflag
 4142 0780 E4010000 		.word	.LC153
 4143              	.L226:
1396:src/sim900_800.c **** 			break;
1397:src/sim900_800.c **** 
1398:src/sim900_800.c **** 		case 15:
1399:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 4144              		.loc 1 1399 0
 4145 0784 0F23     		movs	r3, #15	@ tmp658,
 4146 0786 6B44     		add	r3, r3, sp	@ tmp658,
 4147 0788 1B78     		ldrb	r3, [r3]	@ tmp659, sim
 4148 078a 012B     		cmp	r3, #1	@ tmp659,
 4149 078c 04D0     		beq	.L269	@,
 4150              		.loc 1 1399 0 is_stmt 0 discriminator 1
 4151 078e 0F23     		movs	r3, #15	@ tmp660,
 4152 0790 6B44     		add	r3, r3, sp	@ tmp660,
 4153 0792 1B78     		ldrb	r3, [r3]	@ tmp661, sim
 4154 0794 022B     		cmp	r3, #2	@ tmp661,
 4155 0796 1BD1     		bne	.L270	@,
 4156              	.L269:
1400:src/sim900_800.c **** 			{
1401:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 4157              		.loc 1 1401 0 is_stmt 1
 4158 0798 1724     		movs	r4, #23	@ tmp662,
 4159 079a 6C44     		add	r4, r4, sp	@ tmp662,
 4160 079c 0F23     		movs	r3, #15	@ tmp663,
 4161 079e 6B44     		add	r3, r3, sp	@ tmp663,
 4162 07a0 1B78     		ldrb	r3, [r3]	@ tmp664, sim
 4163 07a2 1800     		movs	r0, r3	@, tmp664
 4164 07a4 FFF7FEFF 		bl	GSM_SetSIM	@
 4165 07a8 0300     		movs	r3, r0	@ tmp665,
 4166 07aa 2370     		strb	r3, [r4]	@ tmp667, i
1402:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 101


1403:src/sim900_800.c **** 				if (i == 2)
 4167              		.loc 1 1403 0
 4168 07ac 1723     		movs	r3, #23	@ tmp668,
 4169 07ae 6B44     		add	r3, r3, sp	@ tmp668,
 4170 07b0 1B78     		ldrb	r3, [r3]	@ tmp669, i
 4171 07b2 022B     		cmp	r3, #2	@ tmp669,
 4172 07b4 02D1     		bne	.L271	@,
1404:src/sim900_800.c **** 				{
1405:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 4173              		.loc 1 1405 0
 4174 07b6 2E4B     		ldr	r3, .L295	@ tmp670,
 4175 07b8 0222     		movs	r2, #2	@ tmp671,
 4176 07ba 1A70     		strb	r2, [r3]	@ tmp672, GSMConfigGPRSState
 4177              	.L271:
1406:src/sim900_800.c **** 				}
1407:src/sim900_800.c **** 
1408:src/sim900_800.c **** 				if (i>2)
 4178              		.loc 1 1408 0
 4179 07bc 1723     		movs	r3, #23	@ tmp673,
 4180 07be 6B44     		add	r3, r3, sp	@ tmp673,
 4181 07c0 1B78     		ldrb	r3, [r3]	@ tmp674, i
 4182 07c2 022B     		cmp	r3, #2	@ tmp674,
 4183 07c4 09D9     		bls	.L273	@,
1409:src/sim900_800.c **** 				{
1410:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 4184              		.loc 1 1410 0
 4185 07c6 2A4B     		ldr	r3, .L295	@ tmp675,
 4186 07c8 0022     		movs	r2, #0	@ tmp676,
 4187 07ca 1A70     		strb	r2, [r3]	@ tmp677, GSMConfigGPRSState
1411:src/sim900_800.c **** 					return 3;
 4188              		.loc 1 1411 0
 4189 07cc 0323     		movs	r3, #3	@ D.7948,
 4190 07ce 4CE0     		b	.L230	@
 4191              	.L270:
1412:src/sim900_800.c **** 				}
1413:src/sim900_800.c **** 			}
1414:src/sim900_800.c **** 			else
1415:src/sim900_800.c **** 			{
1416:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4192              		.loc 1 1416 0
 4193 07d0 274B     		ldr	r3, .L295	@ tmp678,
 4194 07d2 0022     		movs	r2, #0	@ tmp679,
 4195 07d4 1A70     		strb	r2, [r3]	@ tmp680, GSMConfigGPRSState
1417:src/sim900_800.c **** 				return 3;
 4196              		.loc 1 1417 0
 4197 07d6 0323     		movs	r3, #3	@ D.7948,
 4198 07d8 47E0     		b	.L230	@
 4199              	.L273:
1418:src/sim900_800.c **** 			}
1419:src/sim900_800.c **** 
1420:src/sim900_800.c **** 			break;
 4200              		.loc 1 1420 0 discriminator 1
 4201 07da 3CE0     		b	.L228	@
 4202              	.L227:
1421:src/sim900_800.c **** 		case 16:
1422:src/sim900_800.c **** 
1423:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
ARM GAS  /tmp/ccNuUijR.s 			page 102


 4203              		.loc 1 1423 0
 4204 07dc 1724     		movs	r4, #23	@ tmp681,
 4205 07de 6C44     		add	r4, r4, sp	@ tmp681,
 4206 07e0 244B     		ldr	r3, .L295+4	@ tmp682,
 4207 07e2 2548     		ldr	r0, .L295+8	@ tmp683,
 4208 07e4 0022     		movs	r2, #0	@,
 4209 07e6 3221     		movs	r1, #50	@,
 4210 07e8 FFF7FEFF 		bl	GSMSendCommand	@
 4211 07ec 0300     		movs	r3, r0	@ tmp684,
 4212 07ee 2370     		strb	r3, [r4]	@ tmp686, i
1424:src/sim900_800.c **** 
1425:src/sim900_800.c **** 			if (i == 2)
 4213              		.loc 1 1425 0
 4214 07f0 1723     		movs	r3, #23	@ tmp687,
 4215 07f2 6B44     		add	r3, r3, sp	@ tmp687,
 4216 07f4 1B78     		ldrb	r3, [r3]	@ tmp688, i
 4217 07f6 022B     		cmp	r3, #2	@ tmp688,
 4218 07f8 04D1     		bne	.L274	@,
1426:src/sim900_800.c **** 			{
1427:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4219              		.loc 1 1427 0
 4220 07fa 1D4B     		ldr	r3, .L295	@ tmp689,
 4221 07fc 0022     		movs	r2, #0	@ tmp690,
 4222 07fe 1A70     		strb	r2, [r3]	@ tmp691, GSMConfigGPRSState
1428:src/sim900_800.c **** 				return 3;
 4223              		.loc 1 1428 0
 4224 0800 0323     		movs	r3, #3	@ D.7948,
 4225 0802 32E0     		b	.L230	@
 4226              	.L274:
1429:src/sim900_800.c **** 			}
1430:src/sim900_800.c **** 
1431:src/sim900_800.c **** 			if (i > 2)
 4227              		.loc 1 1431 0
 4228 0804 1723     		movs	r3, #23	@ tmp692,
 4229 0806 6B44     		add	r3, r3, sp	@ tmp692,
 4230 0808 1B78     		ldrb	r3, [r3]	@ tmp693, i
 4231 080a 022B     		cmp	r3, #2	@ tmp693,
 4232 080c 22D9     		bls	.L290	@,
1432:src/sim900_800.c **** 			{
1433:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4233              		.loc 1 1433 0
 4234 080e 184B     		ldr	r3, .L295	@ tmp694,
 4235 0810 0022     		movs	r2, #0	@ tmp695,
 4236 0812 1A70     		strb	r2, [r3]	@ tmp696, GSMConfigGPRSState
1434:src/sim900_800.c **** 				return 3;
 4237              		.loc 1 1434 0
 4238 0814 0323     		movs	r3, #3	@ D.7948,
 4239 0816 28E0     		b	.L230	@
 4240              	.L209:
1435:src/sim900_800.c **** 			}
1436:src/sim900_800.c **** 			break;
1437:src/sim900_800.c **** 		default:
1438:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4241              		.loc 1 1438 0
 4242 0818 154B     		ldr	r3, .L295	@ tmp697,
 4243 081a 0022     		movs	r2, #0	@ tmp698,
 4244 081c 1A70     		strb	r2, [r3]	@ tmp699, GSMConfigGPRSState
ARM GAS  /tmp/ccNuUijR.s 			page 103


1439:src/sim900_800.c **** 			break;
 4245              		.loc 1 1439 0
 4246 081e 1AE0     		b	.L228	@
 4247              	.L277:
1089:src/sim900_800.c **** 		case 2:
 4248              		.loc 1 1089 0
 4249 0820 C046     		nop
 4250 0822 18E0     		b	.L228	@
 4251              	.L278:
1104:src/sim900_800.c **** 		case 3:
 4252              		.loc 1 1104 0
 4253 0824 C046     		nop
 4254 0826 16E0     		b	.L228	@
 4255              	.L279:
1181:src/sim900_800.c **** 
 4256              		.loc 1 1181 0
 4257 0828 C046     		nop
 4258 082a 14E0     		b	.L228	@
 4259              	.L280:
1204:src/sim900_800.c **** 
 4260              		.loc 1 1204 0
 4261 082c C046     		nop
 4262 082e 12E0     		b	.L228	@
 4263              	.L281:
1227:src/sim900_800.c **** 		case 6:
 4264              		.loc 1 1227 0
 4265 0830 C046     		nop
 4266 0832 10E0     		b	.L228	@
 4267              	.L282:
1257:src/sim900_800.c **** 		case 7:
 4268              		.loc 1 1257 0
 4269 0834 C046     		nop
 4270 0836 0EE0     		b	.L228	@
 4271              	.L283:
1272:src/sim900_800.c **** 
 4272              		.loc 1 1272 0
 4273 0838 C046     		nop
 4274 083a 0CE0     		b	.L228	@
 4275              	.L284:
1304:src/sim900_800.c **** 
 4276              		.loc 1 1304 0
 4277 083c C046     		nop
 4278 083e 0AE0     		b	.L228	@
 4279              	.L285:
1327:src/sim900_800.c **** 
 4280              		.loc 1 1327 0
 4281 0840 C046     		nop
 4282 0842 08E0     		b	.L228	@
 4283              	.L286:
1343:src/sim900_800.c **** 
 4284              		.loc 1 1343 0
 4285 0844 C046     		nop
 4286 0846 06E0     		b	.L228	@
 4287              	.L287:
1358:src/sim900_800.c **** 
 4288              		.loc 1 1358 0
 4289 0848 C046     		nop
ARM GAS  /tmp/ccNuUijR.s 			page 104


 4290 084a 04E0     		b	.L228	@
 4291              	.L288:
1376:src/sim900_800.c **** 		case 13:
 4292              		.loc 1 1376 0
 4293 084c C046     		nop
 4294 084e 02E0     		b	.L228	@
 4295              	.L289:
1391:src/sim900_800.c **** 
 4296              		.loc 1 1391 0
 4297 0850 C046     		nop
 4298 0852 00E0     		b	.L228	@
 4299              	.L290:
1436:src/sim900_800.c **** 		default:
 4300              		.loc 1 1436 0
 4301 0854 C046     		nop
 4302              	.L228:
1440:src/sim900_800.c **** 
1441:src/sim900_800.c **** 	}
1442:src/sim900_800.c **** 
1443:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 4303              		.loc 1 1443 0
 4304 0856 094B     		ldr	r3, .L295+12	@ tmp700,
 4305 0858 1B88     		ldrh	r3, [r3]	@ D.7953, GSMConfigGPRSTimeOut
 4306 085a 002B     		cmp	r3, #0	@ D.7953,
 4307 085c 04D1     		bne	.L276	@,
1444:src/sim900_800.c **** 	{
1445:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 4308              		.loc 1 1445 0
 4309 085e 044B     		ldr	r3, .L295	@ tmp701,
 4310 0860 0022     		movs	r2, #0	@ tmp702,
 4311 0862 1A70     		strb	r2, [r3]	@ tmp703, GSMConfigGPRSState
1446:src/sim900_800.c **** 		return 4;
 4312              		.loc 1 1446 0
 4313 0864 0423     		movs	r3, #4	@ D.7948,
 4314 0866 00E0     		b	.L230	@
 4315              	.L276:
1447:src/sim900_800.c **** 	}
1448:src/sim900_800.c **** 
1449:src/sim900_800.c **** 	return 1;
 4316              		.loc 1 1449 0
 4317 0868 0123     		movs	r3, #1	@ D.7948,
 4318              	.L230:
1450:src/sim900_800.c **** }
 4319              		.loc 1 1450 0
 4320 086a 1800     		movs	r0, r3	@, <retval>
 4321 086c 06B0     		add	sp, sp, #24	@,,
 4322              		@ sp needed	@
 4323 086e 10BD     		pop	{r4, pc}
 4324              	.L296:
 4325              		.align	2
 4326              	.L295:
 4327 0870 00000000 		.word	GSMConfigGPRSState
 4328 0874 00000000 		.word	GSMbuffRtaCommand
 4329 0878 14000000 		.word	.LC33
 4330 087c 00000000 		.word	GSMConfigGPRSTimeOut
 4331              		.cfi_endproc
 4332              	.LFE31:
ARM GAS  /tmp/ccNuUijR.s 			page 105


 4333              		.size	GSMConfigGPRS, .-GSMConfigGPRS
 4334              		.section	.rodata
 4335 01ef 00       		.align	2
 4336              	.LC157:
 4337 01f0 41542B43 		.ascii	"AT+CDSDS=1\015\012\000"
 4337      44534453 
 4337      3D310D0A 
 4337      00
 4338 01fd 000000   		.align	2
 4339              	.LC159:
 4340 0200 41542B43 		.ascii	"AT+CDSDS=2\015\012\000"
 4340      44534453 
 4340      3D320D0A 
 4340      00
 4341              		.section	.text.GSM_SetSIM,"ax",%progbits
 4342              		.align	2
 4343              		.global	GSM_SetSIM
 4344              		.code	16
 4345              		.thumb_func
 4346              		.type	GSM_SetSIM, %function
 4347              	GSM_SetSIM:
 4348              	.LFB32:
1451:src/sim900_800.c **** 
1452:src/sim900_800.c **** char GSM_SetSIM (unsigned char sim)
1453:src/sim900_800.c **** {
 4349              		.loc 1 1453 0
 4350              		.cfi_startproc
 4351 0000 10B5     		push	{r4, lr}	@
 4352              	.LCFI16:
 4353              		.cfi_def_cfa_offset 8
 4354              		.cfi_offset 4, -8
 4355              		.cfi_offset 14, -4
 4356 0002 84B0     		sub	sp, sp, #16	@,,
 4357              	.LCFI17:
 4358              		.cfi_def_cfa_offset 24
 4359 0004 0200     		movs	r2, r0	@ tmp112, sim
 4360 0006 6B46     		mov	r3, sp	@ tmp137,
 4361 0008 0733     		adds	r3, r3, #7	@ tmp113,
 4362 000a 1A70     		strb	r2, [r3]	@ tmp114, sim
1454:src/sim900_800.c **** 
1455:src/sim900_800.c **** 	unsigned char i;
1456:src/sim900_800.c **** 
1457:src/sim900_800.c **** 	if (sim == 1)
 4363              		.loc 1 1457 0
 4364 000c 6B46     		mov	r3, sp	@ tmp138,
 4365 000e 0733     		adds	r3, r3, #7	@ tmp115,
 4366 0010 1B78     		ldrb	r3, [r3]	@ tmp116, sim
 4367 0012 012B     		cmp	r3, #1	@ tmp116,
 4368 0014 0AD1     		bne	.L298	@,
1458:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4369              		.loc 1 1458 0
 4370 0016 0F24     		movs	r4, #15	@ tmp117,
 4371 0018 6C44     		add	r4, r4, sp	@ tmp117,
 4372 001a 174B     		ldr	r3, .L304	@ tmp118,
 4373 001c 1748     		ldr	r0, .L304+4	@ tmp119,
 4374 001e 0022     		movs	r2, #0	@,
 4375 0020 3221     		movs	r1, #50	@,
ARM GAS  /tmp/ccNuUijR.s 			page 106


 4376 0022 FFF7FEFF 		bl	GSMSendCommand	@
 4377 0026 0300     		movs	r3, r0	@ tmp120,
 4378 0028 2370     		strb	r3, [r4]	@ tmp122, i
 4379 002a 11E0     		b	.L299	@
 4380              	.L298:
1459:src/sim900_800.c **** 	else if (sim == 2)
 4381              		.loc 1 1459 0
 4382 002c 6B46     		mov	r3, sp	@ tmp140,
 4383 002e 0733     		adds	r3, r3, #7	@ tmp123,
 4384 0030 1B78     		ldrb	r3, [r3]	@ tmp124, sim
 4385 0032 022B     		cmp	r3, #2	@ tmp124,
 4386 0034 0AD1     		bne	.L300	@,
1460:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=2\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4387              		.loc 1 1460 0
 4388 0036 0F24     		movs	r4, #15	@ tmp125,
 4389 0038 6C44     		add	r4, r4, sp	@ tmp125,
 4390 003a 0F4B     		ldr	r3, .L304	@ tmp126,
 4391 003c 1048     		ldr	r0, .L304+8	@ tmp127,
 4392 003e 0022     		movs	r2, #0	@,
 4393 0040 3221     		movs	r1, #50	@,
 4394 0042 FFF7FEFF 		bl	GSMSendCommand	@
 4395 0046 0300     		movs	r3, r0	@ tmp128,
 4396 0048 2370     		strb	r3, [r4]	@ tmp130, i
 4397 004a 01E0     		b	.L299	@
 4398              	.L300:
1461:src/sim900_800.c **** 	else
1462:src/sim900_800.c **** 		return 3;
 4399              		.loc 1 1462 0
 4400 004c 0323     		movs	r3, #3	@ D.8011,
 4401 004e 10E0     		b	.L301	@
 4402              	.L299:
1463:src/sim900_800.c **** 
1464:src/sim900_800.c **** 	if (i == 2)
 4403              		.loc 1 1464 0
 4404 0050 0F23     		movs	r3, #15	@ tmp131,
 4405 0052 6B44     		add	r3, r3, sp	@ tmp131,
 4406 0054 1B78     		ldrb	r3, [r3]	@ tmp132, i
 4407 0056 022B     		cmp	r3, #2	@ tmp132,
 4408 0058 01D1     		bne	.L302	@,
1465:src/sim900_800.c **** 	{
1466:src/sim900_800.c **** 		return 2;
 4409              		.loc 1 1466 0
 4410 005a 0223     		movs	r3, #2	@ D.8011,
 4411 005c 09E0     		b	.L301	@
 4412              	.L302:
1467:src/sim900_800.c **** 	}
1468:src/sim900_800.c **** 	if (i > 2)
 4413              		.loc 1 1468 0
 4414 005e 0F23     		movs	r3, #15	@ tmp133,
 4415 0060 6B44     		add	r3, r3, sp	@ tmp133,
 4416 0062 1B78     		ldrb	r3, [r3]	@ tmp134, i
 4417 0064 022B     		cmp	r3, #2	@ tmp134,
 4418 0066 03D9     		bls	.L303	@,
1469:src/sim900_800.c **** 	{
1470:src/sim900_800.c **** 		return i;
 4419              		.loc 1 1470 0
 4420 0068 0F23     		movs	r3, #15	@ tmp135,
ARM GAS  /tmp/ccNuUijR.s 			page 107


 4421 006a 6B44     		add	r3, r3, sp	@ tmp135,
 4422 006c 1B78     		ldrb	r3, [r3]	@ D.8011, i
 4423 006e 00E0     		b	.L301	@
 4424              	.L303:
1471:src/sim900_800.c **** 	}
1472:src/sim900_800.c **** 
1473:src/sim900_800.c **** 	return 1;
 4425              		.loc 1 1473 0
 4426 0070 0123     		movs	r3, #1	@ D.8011,
 4427              	.L301:
1474:src/sim900_800.c **** }
 4428              		.loc 1 1474 0
 4429 0072 1800     		movs	r0, r3	@, <retval>
 4430 0074 04B0     		add	sp, sp, #16	@,,
 4431              		@ sp needed	@
 4432 0076 10BD     		pop	{r4, pc}
 4433              	.L305:
 4434              		.align	2
 4435              	.L304:
 4436 0078 00000000 		.word	GSMbuffRtaCommand
 4437 007c F0010000 		.word	.LC157
 4438 0080 00020000 		.word	.LC159
 4439              		.cfi_endproc
 4440              	.LFE32:
 4441              		.size	GSM_SetSIM, .-GSM_SetSIM
 4442              		.section	.rodata
 4443 020d 000000   		.align	2
 4444              	.LC165:
 4445 0210 41542B43 		.ascii	"AT+CIPSEND\015\012\000"
 4445      49505345 
 4445      4E440D0A 
 4445      00
 4446              		.section	.text.GSMSendIP,"ax",%progbits
 4447              		.align	2
 4448              		.global	GSMSendIP
 4449              		.code	16
 4450              		.thumb_func
 4451              		.type	GSMSendIP, %function
 4452              	GSMSendIP:
 4453              	.LFB33:
1475:src/sim900_800.c **** 
1476:src/sim900_800.c **** char GSMSendIP (char *ptrMSG, unsigned short timeOut)
1477:src/sim900_800.c **** {
 4454              		.loc 1 1477 0
 4455              		.cfi_startproc
 4456 0000 10B5     		push	{r4, lr}	@
 4457              	.LCFI18:
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 4, -8
 4460              		.cfi_offset 14, -4
 4461 0002 84B0     		sub	sp, sp, #16	@,,
 4462              	.LCFI19:
 4463              		.cfi_def_cfa_offset 24
 4464 0004 0190     		str	r0, [sp, #4]	@ ptrMSG, ptrMSG
 4465 0006 0A00     		movs	r2, r1	@ tmp121, timeOut
 4466 0008 6B46     		mov	r3, sp	@ tmp192,
 4467 000a 0233     		adds	r3, r3, #2	@ tmp122,
ARM GAS  /tmp/ccNuUijR.s 			page 108


 4468 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
1478:src/sim900_800.c **** 	unsigned char i;
1479:src/sim900_800.c **** 
1480:src/sim900_800.c **** 	switch(GSMSendIPState)
 4469              		.loc 1 1480 0
 4470 000e 404B     		ldr	r3, .L321	@ tmp124,
 4471 0010 1B78     		ldrb	r3, [r3]	@ D.8014, GSMSendIPState
 4472 0012 012B     		cmp	r3, #1	@ D.8015,
 4473 0014 12D0     		beq	.L308	@,
 4474 0016 022B     		cmp	r3, #2	@ D.8015,
 4475 0018 47D0     		beq	.L309	@,
 4476 001a 002B     		cmp	r3, #0	@ D.8015,
 4477 001c 63D1     		bne	.L318	@,
1481:src/sim900_800.c **** 	{
1482:src/sim900_800.c **** 		case 0:
1483:src/sim900_800.c **** 			GSMSendIPFlag = 0;
 4478              		.loc 1 1483 0
 4479 001e 3D4B     		ldr	r3, .L321+4	@ tmp125,
 4480 0020 0022     		movs	r2, #0	@ tmp126,
 4481 0022 1A70     		strb	r2, [r3]	@ tmp127, GSMSendIPFlag
1484:src/sim900_800.c **** 			GSMSendIPTimeOut = timeOut;
 4482              		.loc 1 1484 0
 4483 0024 3C4B     		ldr	r3, .L321+8	@ tmp128,
 4484 0026 6A46     		mov	r2, sp	@ tmp193,
 4485 0028 0232     		adds	r2, r2, #2	@ tmp129,
 4486 002a 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 4487 002c 1A80     		strh	r2, [r3]	@ tmp130, GSMSendIPTimeOut
1485:src/sim900_800.c **** 			GSMSendIPState++;
 4488              		.loc 1 1485 0
 4489 002e 384B     		ldr	r3, .L321	@ tmp131,
 4490 0030 1B78     		ldrb	r3, [r3]	@ D.8014, GSMSendIPState
 4491 0032 0133     		adds	r3, r3, #1	@ tmp132,
 4492 0034 DAB2     		uxtb	r2, r3	@ D.8014, tmp132
 4493 0036 364B     		ldr	r3, .L321	@ tmp133,
 4494 0038 1A70     		strb	r2, [r3]	@ tmp134, GSMSendIPState
1486:src/sim900_800.c **** 			break;
 4495              		.loc 1 1486 0
 4496 003a 5BE0     		b	.L311	@
 4497              	.L308:
1487:src/sim900_800.c **** 
1488:src/sim900_800.c **** 		case 1:
1489:src/sim900_800.c **** 
1490:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSEND\r\n", 80, 0, &GSMbuffRtaCommand[0]);
 4498              		.loc 1 1490 0
 4499 003c 0F24     		movs	r4, #15	@ tmp135,
 4500 003e 6C44     		add	r4, r4, sp	@ tmp135,
 4501 0040 364B     		ldr	r3, .L321+12	@ tmp136,
 4502 0042 3748     		ldr	r0, .L321+16	@ tmp137,
 4503 0044 0022     		movs	r2, #0	@,
 4504 0046 5021     		movs	r1, #80	@,
 4505 0048 FFF7FEFF 		bl	GSMSendCommand	@
 4506 004c 0300     		movs	r3, r0	@ tmp138,
 4507 004e 2370     		strb	r3, [r4]	@ tmp140, i
1491:src/sim900_800.c **** 
1492:src/sim900_800.c **** 			if (i == 2)
 4508              		.loc 1 1492 0
 4509 0050 0F23     		movs	r3, #15	@ tmp141,
ARM GAS  /tmp/ccNuUijR.s 			page 109


 4510 0052 6B44     		add	r3, r3, sp	@ tmp141,
 4511 0054 1B78     		ldrb	r3, [r3]	@ tmp142, i
 4512 0056 022B     		cmp	r3, #2	@ tmp142,
 4513 0058 1DD1     		bne	.L312	@,
1493:src/sim900_800.c **** 			{
1494:src/sim900_800.c **** 
1495:src/sim900_800.c **** 				GSMSendIPbuffAux[0] = 0;
 4514              		.loc 1 1495 0
 4515 005a 324B     		ldr	r3, .L321+20	@ tmp143,
 4516 005c 0022     		movs	r2, #0	@ tmp144,
 4517 005e 1A70     		strb	r2, [r3]	@ tmp145, GSMSendIPbuffAux
1496:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], ptrMSG);
 4518              		.loc 1 1496 0
 4519 0060 019A     		ldr	r2, [sp, #4]	@ tmp146, ptrMSG
 4520 0062 304B     		ldr	r3, .L321+20	@ tmp147,
 4521 0064 1100     		movs	r1, r2	@, tmp146
 4522 0066 1800     		movs	r0, r3	@, tmp147
 4523 0068 FFF7FEFF 		bl	strcat	@
1497:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], "\032");
 4524              		.loc 1 1497 0
 4525 006c 2D4B     		ldr	r3, .L321+20	@ tmp148,
 4526 006e 1800     		movs	r0, r3	@, tmp148
 4527 0070 FFF7FEFF 		bl	strlen	@
 4528 0074 0300     		movs	r3, r0	@ tmp149,
 4529 0076 1A00     		movs	r2, r3	@ D.8016, tmp150
 4530 0078 2A4B     		ldr	r3, .L321+20	@ tmp151,
 4531 007a D218     		adds	r2, r2, r3	@ D.8017, D.8016, tmp151
 4532 007c 2A4B     		ldr	r3, .L321+24	@ tmp152,
 4533 007e 1000     		movs	r0, r2	@ tmp153, D.8017
 4534 0080 1900     		movs	r1, r3	@ tmp154, tmp152
 4535 0082 0223     		movs	r3, #2	@ tmp155,
 4536 0084 1A00     		movs	r2, r3	@, tmp155
 4537 0086 FFF7FEFF 		bl	memcpy	@
1498:src/sim900_800.c **** 				GSMSendIPState++;
 4538              		.loc 1 1498 0
 4539 008a 214B     		ldr	r3, .L321	@ tmp158,
 4540 008c 1B78     		ldrb	r3, [r3]	@ D.8014, GSMSendIPState
 4541 008e 0133     		adds	r3, r3, #1	@ tmp159,
 4542 0090 DAB2     		uxtb	r2, r3	@ D.8014, tmp159
 4543 0092 1F4B     		ldr	r3, .L321	@ tmp160,
 4544 0094 1A70     		strb	r2, [r3]	@ tmp161, GSMSendIPState
 4545              	.L312:
1499:src/sim900_800.c **** 			}
1500:src/sim900_800.c **** 
1501:src/sim900_800.c **** 			if (i > 2)
 4546              		.loc 1 1501 0
 4547 0096 0F23     		movs	r3, #15	@ tmp162,
 4548 0098 6B44     		add	r3, r3, sp	@ tmp162,
 4549 009a 1B78     		ldrb	r3, [r3]	@ tmp163, i
 4550 009c 022B     		cmp	r3, #2	@ tmp163,
 4551 009e 26D9     		bls	.L319	@,
1502:src/sim900_800.c **** 			{
1503:src/sim900_800.c **** 				GSMSendIPState = 0;
 4552              		.loc 1 1503 0
 4553 00a0 1B4B     		ldr	r3, .L321	@ tmp164,
 4554 00a2 0022     		movs	r2, #0	@ tmp165,
 4555 00a4 1A70     		strb	r2, [r3]	@ tmp166, GSMSendIPState
ARM GAS  /tmp/ccNuUijR.s 			page 110


1504:src/sim900_800.c **** 				return 3;
 4556              		.loc 1 1504 0
 4557 00a6 0323     		movs	r3, #3	@ D.8014,
 4558 00a8 2FE0     		b	.L314	@
 4559              	.L309:
1505:src/sim900_800.c **** 			}
1506:src/sim900_800.c **** 			break;
1507:src/sim900_800.c **** 		case 2:
1508:src/sim900_800.c **** 
1509:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendIPbuffAux[0], 50, 0, &GSMbuffRtaCommand[0]);
 4560              		.loc 1 1509 0
 4561 00aa 0F24     		movs	r4, #15	@ tmp167,
 4562 00ac 6C44     		add	r4, r4, sp	@ tmp167,
 4563 00ae 1B4B     		ldr	r3, .L321+12	@ tmp168,
 4564 00b0 1C48     		ldr	r0, .L321+20	@ tmp169,
 4565 00b2 0022     		movs	r2, #0	@,
 4566 00b4 3221     		movs	r1, #50	@,
 4567 00b6 FFF7FEFF 		bl	GSMSendCommand	@
 4568 00ba 0300     		movs	r3, r0	@ tmp170,
 4569 00bc 2370     		strb	r3, [r4]	@ tmp172, i
1510:src/sim900_800.c **** 
1511:src/sim900_800.c **** 			if (i == 2)
 4570              		.loc 1 1511 0
 4571 00be 0F23     		movs	r3, #15	@ tmp173,
 4572 00c0 6B44     		add	r3, r3, sp	@ tmp173,
 4573 00c2 1B78     		ldrb	r3, [r3]	@ tmp174, i
 4574 00c4 022B     		cmp	r3, #2	@ tmp174,
 4575 00c6 04D1     		bne	.L315	@,
1512:src/sim900_800.c **** 			{
1513:src/sim900_800.c **** 				GSMSendIPState = 0;
 4576              		.loc 1 1513 0
 4577 00c8 114B     		ldr	r3, .L321	@ tmp175,
 4578 00ca 0022     		movs	r2, #0	@ tmp176,
 4579 00cc 1A70     		strb	r2, [r3]	@ tmp177, GSMSendIPState
1514:src/sim900_800.c **** 				return 2;
 4580              		.loc 1 1514 0
 4581 00ce 0223     		movs	r3, #2	@ D.8014,
 4582 00d0 1BE0     		b	.L314	@
 4583              	.L315:
1515:src/sim900_800.c **** 			}
1516:src/sim900_800.c **** 
1517:src/sim900_800.c **** 			if (i > 2)
 4584              		.loc 1 1517 0
 4585 00d2 0F23     		movs	r3, #15	@ tmp178,
 4586 00d4 6B44     		add	r3, r3, sp	@ tmp178,
 4587 00d6 1B78     		ldrb	r3, [r3]	@ tmp179, i
 4588 00d8 022B     		cmp	r3, #2	@ tmp179,
 4589 00da 0AD9     		bls	.L320	@,
1518:src/sim900_800.c **** 			{
1519:src/sim900_800.c **** 				GSMSendIPState = 0;
 4590              		.loc 1 1519 0
 4591 00dc 0C4B     		ldr	r3, .L321	@ tmp180,
 4592 00de 0022     		movs	r2, #0	@ tmp181,
 4593 00e0 1A70     		strb	r2, [r3]	@ tmp182, GSMSendIPState
1520:src/sim900_800.c **** 				return 3;
 4594              		.loc 1 1520 0
 4595 00e2 0323     		movs	r3, #3	@ D.8014,
ARM GAS  /tmp/ccNuUijR.s 			page 111


 4596 00e4 11E0     		b	.L314	@
 4597              	.L318:
1521:src/sim900_800.c **** 			}
1522:src/sim900_800.c **** 			break;
1523:src/sim900_800.c **** 
1524:src/sim900_800.c **** 		default:
1525:src/sim900_800.c **** 			GSMSendIPState = 0;
 4598              		.loc 1 1525 0
 4599 00e6 0A4B     		ldr	r3, .L321	@ tmp183,
 4600 00e8 0022     		movs	r2, #0	@ tmp184,
 4601 00ea 1A70     		strb	r2, [r3]	@ tmp185, GSMSendIPState
1526:src/sim900_800.c **** 			break;
 4602              		.loc 1 1526 0
 4603 00ec 02E0     		b	.L311	@
 4604              	.L319:
1506:src/sim900_800.c **** 		case 2:
 4605              		.loc 1 1506 0
 4606 00ee C046     		nop
 4607 00f0 00E0     		b	.L311	@
 4608              	.L320:
1522:src/sim900_800.c **** 
 4609              		.loc 1 1522 0
 4610 00f2 C046     		nop
 4611              	.L311:
1527:src/sim900_800.c **** 	}
1528:src/sim900_800.c **** 
1529:src/sim900_800.c **** 	if (GSMSendIPTimeOut == 0)
 4612              		.loc 1 1529 0
 4613 00f4 084B     		ldr	r3, .L321+8	@ tmp186,
 4614 00f6 1B88     		ldrh	r3, [r3]	@ tmp187, GSMSendIPTimeOut
 4615 00f8 9BB2     		uxth	r3, r3	@ D.8018, tmp187
 4616 00fa 002B     		cmp	r3, #0	@ D.8018,
 4617 00fc 04D1     		bne	.L317	@,
1530:src/sim900_800.c **** 	{
1531:src/sim900_800.c **** 		GSMSendIPState = 0;
 4618              		.loc 1 1531 0
 4619 00fe 044B     		ldr	r3, .L321	@ tmp188,
 4620 0100 0022     		movs	r2, #0	@ tmp189,
 4621 0102 1A70     		strb	r2, [r3]	@ tmp190, GSMSendIPState
1532:src/sim900_800.c **** 		return 4;
 4622              		.loc 1 1532 0
 4623 0104 0423     		movs	r3, #4	@ D.8014,
 4624 0106 00E0     		b	.L314	@
 4625              	.L317:
1533:src/sim900_800.c **** 	}
1534:src/sim900_800.c **** 
1535:src/sim900_800.c **** 	return 1;
 4626              		.loc 1 1535 0
 4627 0108 0123     		movs	r3, #1	@ D.8014,
 4628              	.L314:
1536:src/sim900_800.c **** }
 4629              		.loc 1 1536 0
 4630 010a 1800     		movs	r0, r3	@, <retval>
 4631 010c 04B0     		add	sp, sp, #16	@,,
 4632              		@ sp needed	@
 4633 010e 10BD     		pop	{r4, pc}
 4634              	.L322:
ARM GAS  /tmp/ccNuUijR.s 			page 112


 4635              		.align	2
 4636              	.L321:
 4637 0110 00000000 		.word	GSMSendIPState
 4638 0114 00000000 		.word	GSMSendIPFlag
 4639 0118 00000000 		.word	GSMSendIPTimeOut
 4640 011c 00000000 		.word	GSMbuffRtaCommand
 4641 0120 10020000 		.word	.LC165
 4642 0124 00000000 		.word	GSMSendIPbuffAux
 4643 0128 E0000000 		.word	.LC97
 4644              		.cfi_endproc
 4645              	.LFE33:
 4646              		.size	GSMSendIP, .-GSMSendIP
 4647              		.section	.text.GSMTimeoutCounters,"ax",%progbits
 4648              		.align	2
 4649              		.global	GSMTimeoutCounters
 4650              		.code	16
 4651              		.thumb_func
 4652              		.type	GSMTimeoutCounters, %function
 4653              	GSMTimeoutCounters:
 4654              	.LFB34:
1537:src/sim900_800.c **** 
1538:src/sim900_800.c **** 
1539:src/sim900_800.c **** void GSMTimeoutCounters (void)
1540:src/sim900_800.c **** {
 4655              		.loc 1 1540 0
 4656              		.cfi_startproc
1541:src/sim900_800.c **** 	if (GSMStartTime)
 4657              		.loc 1 1541 0
 4658 0000 344B     		ldr	r3, .L334	@ tmp137,
 4659 0002 1B88     		ldrh	r3, [r3]	@ tmp138, GSMStartTime
 4660 0004 9BB2     		uxth	r3, r3	@ D.8023, tmp138
 4661 0006 002B     		cmp	r3, #0	@ D.8023,
 4662 0008 06D0     		beq	.L324	@,
1542:src/sim900_800.c **** 		GSMStartTime--;
 4663              		.loc 1 1542 0
 4664 000a 324B     		ldr	r3, .L334	@ tmp139,
 4665 000c 1B88     		ldrh	r3, [r3]	@ tmp140, GSMStartTime
 4666 000e 9BB2     		uxth	r3, r3	@ D.8023, tmp140
 4667 0010 013B     		subs	r3, r3, #1	@ tmp141,
 4668 0012 9AB2     		uxth	r2, r3	@ D.8023, tmp141
 4669 0014 2F4B     		ldr	r3, .L334	@ tmp142,
 4670 0016 1A80     		strh	r2, [r3]	@ tmp143, GSMStartTime
 4671              	.L324:
1543:src/sim900_800.c **** 
1544:src/sim900_800.c **** 	if(GSMSendCommandTimeOut)
 4672              		.loc 1 1544 0
 4673 0018 2F4B     		ldr	r3, .L334+4	@ tmp144,
 4674 001a 1B88     		ldrh	r3, [r3]	@ tmp145, GSMSendCommandTimeOut
 4675 001c 9BB2     		uxth	r3, r3	@ D.8023, tmp145
 4676 001e 002B     		cmp	r3, #0	@ D.8023,
 4677 0020 06D0     		beq	.L325	@,
1545:src/sim900_800.c **** 		GSMSendCommandTimeOut--;
 4678              		.loc 1 1545 0
 4679 0022 2D4B     		ldr	r3, .L334+4	@ tmp146,
 4680 0024 1B88     		ldrh	r3, [r3]	@ tmp147, GSMSendCommandTimeOut
 4681 0026 9BB2     		uxth	r3, r3	@ D.8023, tmp147
 4682 0028 013B     		subs	r3, r3, #1	@ tmp148,
ARM GAS  /tmp/ccNuUijR.s 			page 113


 4683 002a 9AB2     		uxth	r2, r3	@ D.8023, tmp148
 4684 002c 2A4B     		ldr	r3, .L334+4	@ tmp149,
 4685 002e 1A80     		strh	r2, [r3]	@ tmp150, GSMSendCommandTimeOut
 4686              	.L325:
1546:src/sim900_800.c **** 
1547:src/sim900_800.c **** 	if(GSMConfigTimeOut)
 4687              		.loc 1 1547 0
 4688 0030 2A4B     		ldr	r3, .L334+8	@ tmp151,
 4689 0032 1B88     		ldrh	r3, [r3]	@ tmp152, GSMConfigTimeOut
 4690 0034 9BB2     		uxth	r3, r3	@ D.8023, tmp152
 4691 0036 002B     		cmp	r3, #0	@ D.8023,
 4692 0038 06D0     		beq	.L326	@,
1548:src/sim900_800.c **** 		GSMConfigTimeOut--;
 4693              		.loc 1 1548 0
 4694 003a 284B     		ldr	r3, .L334+8	@ tmp153,
 4695 003c 1B88     		ldrh	r3, [r3]	@ tmp154, GSMConfigTimeOut
 4696 003e 9BB2     		uxth	r3, r3	@ D.8023, tmp154
 4697 0040 013B     		subs	r3, r3, #1	@ tmp155,
 4698 0042 9AB2     		uxth	r2, r3	@ D.8023, tmp155
 4699 0044 254B     		ldr	r3, .L334+8	@ tmp156,
 4700 0046 1A80     		strh	r2, [r3]	@ tmp157, GSMConfigTimeOut
 4701              	.L326:
1549:src/sim900_800.c **** 
1550:src/sim900_800.c **** 	if(GSMConfigTime)
 4702              		.loc 1 1550 0
 4703 0048 254B     		ldr	r3, .L334+12	@ tmp158,
 4704 004a 1B88     		ldrh	r3, [r3]	@ tmp159, GSMConfigTime
 4705 004c 9BB2     		uxth	r3, r3	@ D.8023, tmp159
 4706 004e 002B     		cmp	r3, #0	@ D.8023,
 4707 0050 06D0     		beq	.L327	@,
1551:src/sim900_800.c **** 		GSMConfigTime--;
 4708              		.loc 1 1551 0
 4709 0052 234B     		ldr	r3, .L334+12	@ tmp160,
 4710 0054 1B88     		ldrh	r3, [r3]	@ tmp161, GSMConfigTime
 4711 0056 9BB2     		uxth	r3, r3	@ D.8023, tmp161
 4712 0058 013B     		subs	r3, r3, #1	@ tmp162,
 4713 005a 9AB2     		uxth	r2, r3	@ D.8023, tmp162
 4714 005c 204B     		ldr	r3, .L334+12	@ tmp163,
 4715 005e 1A80     		strh	r2, [r3]	@ tmp164, GSMConfigTime
 4716              	.L327:
1552:src/sim900_800.c **** 
1553:src/sim900_800.c **** 	if(GSMSendSMSTimeOut)
 4717              		.loc 1 1553 0
 4718 0060 204B     		ldr	r3, .L334+16	@ tmp165,
 4719 0062 1B88     		ldrh	r3, [r3]	@ tmp166, GSMSendSMSTimeOut
 4720 0064 9BB2     		uxth	r3, r3	@ D.8023, tmp166
 4721 0066 002B     		cmp	r3, #0	@ D.8023,
 4722 0068 06D0     		beq	.L328	@,
1554:src/sim900_800.c **** 		GSMSendSMSTimeOut--;
 4723              		.loc 1 1554 0
 4724 006a 1E4B     		ldr	r3, .L334+16	@ tmp167,
 4725 006c 1B88     		ldrh	r3, [r3]	@ tmp168, GSMSendSMSTimeOut
 4726 006e 9BB2     		uxth	r3, r3	@ D.8023, tmp168
 4727 0070 013B     		subs	r3, r3, #1	@ tmp169,
 4728 0072 9AB2     		uxth	r2, r3	@ D.8023, tmp169
 4729 0074 1B4B     		ldr	r3, .L334+16	@ tmp170,
 4730 0076 1A80     		strh	r2, [r3]	@ tmp171, GSMSendSMSTimeOut
ARM GAS  /tmp/ccNuUijR.s 			page 114


 4731              	.L328:
1555:src/sim900_800.c **** 
1556:src/sim900_800.c **** 	if(GSMConfigGPRSTimeOut)
 4732              		.loc 1 1556 0
 4733 0078 1B4B     		ldr	r3, .L334+20	@ tmp172,
 4734 007a 1B88     		ldrh	r3, [r3]	@ D.8023, GSMConfigGPRSTimeOut
 4735 007c 002B     		cmp	r3, #0	@ D.8023,
 4736 007e 05D0     		beq	.L329	@,
1557:src/sim900_800.c **** 		GSMConfigGPRSTimeOut--;
 4737              		.loc 1 1557 0
 4738 0080 194B     		ldr	r3, .L334+20	@ tmp173,
 4739 0082 1B88     		ldrh	r3, [r3]	@ D.8023, GSMConfigGPRSTimeOut
 4740 0084 013B     		subs	r3, r3, #1	@ tmp174,
 4741 0086 9AB2     		uxth	r2, r3	@ D.8023, tmp174
 4742 0088 174B     		ldr	r3, .L334+20	@ tmp175,
 4743 008a 1A80     		strh	r2, [r3]	@ tmp176, GSMConfigGPRSTimeOut
 4744              	.L329:
1558:src/sim900_800.c **** 
1559:src/sim900_800.c **** 	if(GSMSendIPTimeOut)
 4745              		.loc 1 1559 0
 4746 008c 174B     		ldr	r3, .L334+24	@ tmp177,
 4747 008e 1B88     		ldrh	r3, [r3]	@ tmp178, GSMSendIPTimeOut
 4748 0090 9BB2     		uxth	r3, r3	@ D.8023, tmp178
 4749 0092 002B     		cmp	r3, #0	@ D.8023,
 4750 0094 06D0     		beq	.L330	@,
1560:src/sim900_800.c **** 		GSMSendIPTimeOut--;
 4751              		.loc 1 1560 0
 4752 0096 154B     		ldr	r3, .L334+24	@ tmp179,
 4753 0098 1B88     		ldrh	r3, [r3]	@ tmp180, GSMSendIPTimeOut
 4754 009a 9BB2     		uxth	r3, r3	@ D.8023, tmp180
 4755 009c 013B     		subs	r3, r3, #1	@ tmp181,
 4756 009e 9AB2     		uxth	r2, r3	@ D.8023, tmp181
 4757 00a0 124B     		ldr	r3, .L334+24	@ tmp182,
 4758 00a2 1A80     		strh	r2, [r3]	@ tmp183, GSMSendIPTimeOut
 4759              	.L330:
1561:src/sim900_800.c **** 
1562:src/sim900_800.c **** 	if (prestadorSimTime)
 4760              		.loc 1 1562 0
 4761 00a4 124B     		ldr	r3, .L334+28	@ tmp184,
 4762 00a6 1B78     		ldrb	r3, [r3]	@ D.8024, prestadorSimTime
 4763 00a8 002B     		cmp	r3, #0	@ D.8024,
 4764 00aa 05D0     		beq	.L331	@,
1563:src/sim900_800.c **** 		prestadorSimTime--;
 4765              		.loc 1 1563 0
 4766 00ac 104B     		ldr	r3, .L334+28	@ tmp185,
 4767 00ae 1B78     		ldrb	r3, [r3]	@ D.8024, prestadorSimTime
 4768 00b0 013B     		subs	r3, r3, #1	@ tmp186,
 4769 00b2 DAB2     		uxtb	r2, r3	@ D.8024, tmp186
 4770 00b4 0E4B     		ldr	r3, .L334+28	@ tmp187,
 4771 00b6 1A70     		strb	r2, [r3]	@ tmp188, prestadorSimTime
 4772              	.L331:
1564:src/sim900_800.c **** 
1565:src/sim900_800.c **** 	if(GSMGeneralTimeOut)
 4773              		.loc 1 1565 0
 4774 00b8 0E4B     		ldr	r3, .L334+32	@ tmp189,
 4775 00ba 1B88     		ldrh	r3, [r3]	@ tmp190, GSMGeneralTimeOut
 4776 00bc 9BB2     		uxth	r3, r3	@ D.8023, tmp190
ARM GAS  /tmp/ccNuUijR.s 			page 115


 4777 00be 002B     		cmp	r3, #0	@ D.8023,
 4778 00c0 06D0     		beq	.L333	@,
1566:src/sim900_800.c **** 		GSMGeneralTimeOut--;
 4779              		.loc 1 1566 0
 4780 00c2 0C4B     		ldr	r3, .L334+32	@ tmp191,
 4781 00c4 1B88     		ldrh	r3, [r3]	@ tmp192, GSMGeneralTimeOut
 4782 00c6 9BB2     		uxth	r3, r3	@ D.8023, tmp192
 4783 00c8 013B     		subs	r3, r3, #1	@ tmp193,
 4784 00ca 9AB2     		uxth	r2, r3	@ D.8023, tmp193
 4785 00cc 094B     		ldr	r3, .L334+32	@ tmp194,
 4786 00ce 1A80     		strh	r2, [r3]	@ tmp195, GSMGeneralTimeOut
 4787              	.L333:
1567:src/sim900_800.c **** 
1568:src/sim900_800.c **** }
 4788              		.loc 1 1568 0
 4789 00d0 C046     		nop
 4790              		@ sp needed	@
 4791 00d2 7047     		bx	lr
 4792              	.L335:
 4793              		.align	2
 4794              	.L334:
 4795 00d4 00000000 		.word	GSMStartTime
 4796 00d8 00000000 		.word	GSMSendCommandTimeOut
 4797 00dc 00000000 		.word	GSMConfigTimeOut
 4798 00e0 00000000 		.word	GSMConfigTime
 4799 00e4 00000000 		.word	GSMSendSMSTimeOut
 4800 00e8 00000000 		.word	GSMConfigGPRSTimeOut
 4801 00ec 00000000 		.word	GSMSendIPTimeOut
 4802 00f0 00000000 		.word	prestadorSimTime
 4803 00f4 00000000 		.word	GSMGeneralTimeOut
 4804              		.cfi_endproc
 4805              	.LFE34:
 4806              		.size	GSMTimeoutCounters, .-GSMTimeoutCounters
 4807              		.section	.rodata
 4808 021d 000000   		.align	2
 4809              	.LC180:
 4810 0220 41542B43 		.ascii	"AT+CMGR=%d\015\012\000"
 4810      4D47523D 
 4810      25640D0A 
 4810      00
 4811 022d 000000   		.align	2
 4812              	.LC184:
 4813 0230 2B434D47 		.ascii	"+CMGR:\000"
 4813      523A00
 4814 0237 00       		.align	2
 4815              	.LC186:
 4816 0238 5245504F 		.ascii	"REPORTAR:\000"
 4816      52544152 
 4816      3A00
 4817 0242 0000     		.align	2
 4818              	.LC189:
 4819 0244 54494D45 		.ascii	"TIMER:\000"
 4819      523A00
 4820 024b 00       		.align	2
 4821              	.LC191:
 4822 024c 454E4552 		.ascii	"ENERGIA:\000"
 4822      4749413A 
ARM GAS  /tmp/ccNuUijR.s 			page 116


 4822      00
 4823 0255 000000   		.align	2
 4824              	.LC193:
 4825 0258 41542B43 		.ascii	"AT+CMGDA=\"DEL READ\"\015\012\000"
 4825      4D474441 
 4825      3D224445 
 4825      4C205245 
 4825      4144220D 
 4826              		.section	.text.GSMReceivSMS,"ax",%progbits
 4827              		.align	2
 4828              		.global	GSMReceivSMS
 4829              		.code	16
 4830              		.thumb_func
 4831              		.type	GSMReceivSMS, %function
 4832              	GSMReceivSMS:
 4833              	.LFB35:
1569:src/sim900_800.c **** 
1570:src/sim900_800.c **** 
1571:src/sim900_800.c **** void GSMReceivSMS (void)
1572:src/sim900_800.c **** {
 4834              		.loc 1 1572 0
 4835              		.cfi_startproc
 4836 0000 10B5     		push	{r4, lr}	@
 4837              	.LCFI20:
 4838              		.cfi_def_cfa_offset 8
 4839              		.cfi_offset 4, -8
 4840              		.cfi_offset 14, -4
 4841 0002 84B0     		sub	sp, sp, #16	@,,
 4842              	.LCFI21:
 4843              		.cfi_def_cfa_offset 24
1573:src/sim900_800.c **** 	unsigned char i, j, colon_index;
1574:src/sim900_800.c **** 	char * pToAnswer;
1575:src/sim900_800.c **** 
1576:src/sim900_800.c **** 	if (GSMCantSMS)	//me avisan que hay un SMS para leer, este es el index
 4844              		.loc 1 1576 0
 4845 0004 8E4B     		ldr	r3, .L357	@ tmp145,
 4846 0006 1B78     		ldrb	r3, [r3]	@ D.8025, GSMCantSMS
 4847 0008 002B     		cmp	r3, #0	@ D.8025,
 4848 000a 00D1     		bne	.LCB3974	@
 4849 000c 14E1     		b	.L354	@long jump	@
 4850              	.LCB3974:
1577:src/sim900_800.c **** 	{
1578:src/sim900_800.c **** 		switch(GSMReadSMSState)
 4851              		.loc 1 1578 0
 4852 000e 8D4B     		ldr	r3, .L357+4	@ tmp146,
 4853 0010 1B78     		ldrb	r3, [r3]	@ D.8026, GSMReadSMSState
 4854 0012 012B     		cmp	r3, #1	@ D.8027,
 4855 0014 14D0     		beq	.L339	@,
 4856 0016 022B     		cmp	r3, #2	@ D.8027,
 4857 0018 00D1     		bne	.LCB3980	@
 4858 001a E8E0     		b	.L340	@long jump	@
 4859              	.LCB3980:
 4860 001c 002B     		cmp	r3, #0	@ D.8027,
 4861 001e 00D0     		beq	.LCB3982	@
 4862 0020 03E1     		b	.L353	@long jump	@
 4863              	.LCB3982:
1579:src/sim900_800.c **** 		{
ARM GAS  /tmp/ccNuUijR.s 			page 117


1580:src/sim900_800.c **** 			case 0:
1581:src/sim900_800.c **** 				sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMCantSMS);
 4864              		.loc 1 1581 0
 4865 0022 874B     		ldr	r3, .L357	@ tmp147,
 4866 0024 1B78     		ldrb	r3, [r3]	@ D.8025, GSMCantSMS
 4867 0026 1A00     		movs	r2, r3	@ D.8027, D.8025
 4868 0028 8749     		ldr	r1, .L357+8	@ tmp148,
 4869 002a 884B     		ldr	r3, .L357+12	@ tmp149,
 4870 002c 1800     		movs	r0, r3	@, tmp149
 4871 002e FFF7FEFF 		bl	sprintf	@
1582:src/sim900_800.c **** 				GSMReadSMSState++;
 4872              		.loc 1 1582 0
 4873 0032 844B     		ldr	r3, .L357+4	@ tmp150,
 4874 0034 1B78     		ldrb	r3, [r3]	@ D.8026, GSMReadSMSState
 4875 0036 0133     		adds	r3, r3, #1	@ tmp151,
 4876 0038 DAB2     		uxtb	r2, r3	@ D.8026, tmp151
 4877 003a 824B     		ldr	r3, .L357+4	@ tmp152,
 4878 003c 1A70     		strb	r2, [r3]	@ tmp153, GSMReadSMSState
1583:src/sim900_800.c **** 				break;
 4879              		.loc 1 1583 0
 4880 003e FBE0     		b	.L337	@
 4881              	.L339:
1584:src/sim900_800.c **** 
1585:src/sim900_800.c **** 			case 1:
1586:src/sim900_800.c **** 				i = GSMSendCommand (&GSMReadSMScommand[0], 6000, 1, &GSMbuffRtaCommand[0]);
 4882              		.loc 1 1586 0
 4883 0040 6B46     		mov	r3, sp	@ tmp285,
 4884 0042 DC1D     		adds	r4, r3, #7	@ tmp154, tmp285,
 4885 0044 824B     		ldr	r3, .L357+16	@ tmp155,
 4886 0046 8349     		ldr	r1, .L357+20	@ tmp156,
 4887 0048 8048     		ldr	r0, .L357+12	@ tmp157,
 4888 004a 0122     		movs	r2, #1	@,
 4889 004c FFF7FEFF 		bl	GSMSendCommand	@
 4890 0050 0300     		movs	r3, r0	@ tmp158,
 4891 0052 2370     		strb	r3, [r4]	@ tmp160, i
1587:src/sim900_800.c **** 
1588:src/sim900_800.c **** 				if (i == 2)
 4892              		.loc 1 1588 0
 4893 0054 6B46     		mov	r3, sp	@ tmp286,
 4894 0056 0733     		adds	r3, r3, #7	@ tmp161,
 4895 0058 1B78     		ldrb	r3, [r3]	@ tmp162, i
 4896 005a 022B     		cmp	r3, #2	@ tmp162,
 4897 005c 00D0     		beq	.LCB4013	@
 4898 005e BDE0     		b	.L342	@long jump	@
 4899              	.LCB4013:
1589:src/sim900_800.c **** 				{
1590:src/sim900_800.c **** 					if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 4900              		.loc 1 1590 0
 4901 0060 7D49     		ldr	r1, .L357+24	@ tmp163,
 4902 0062 7B4B     		ldr	r3, .L357+16	@ tmp164,
 4903 0064 0622     		movs	r2, #6	@,
 4904 0066 1800     		movs	r0, r3	@, tmp164
 4905 0068 FFF7FEFF 		bl	strncmp	@
 4906 006c 031E     		subs	r3, r0, #0	@ D.8027,,
 4907 006e 00D0     		beq	.LCB4021	@
 4908 0070 B4E0     		b	.L342	@long jump	@
 4909              	.LCB4021:
ARM GAS  /tmp/ccNuUijR.s 			page 118


1591:src/sim900_800.c **** 					{
1592:src/sim900_800.c **** 						//mensajes al modulo
1593:src/sim900_800.c **** 						colon_index = 0;
 4910              		.loc 1 1593 0
 4911 0072 0E23     		movs	r3, #14	@ tmp165,
 4912 0074 6B44     		add	r3, r3, sp	@ tmp165,
 4913 0076 0022     		movs	r2, #0	@ tmp166,
 4914 0078 1A70     		strb	r2, [r3]	@ tmp167, colon_index
1594:src/sim900_800.c **** 						for (j = 0; j < 222; j++)		//222 	160bytes para SMS + 62 bytes header
 4915              		.loc 1 1594 0
 4916 007a 0F23     		movs	r3, #15	@ tmp168,
 4917 007c 6B44     		add	r3, r3, sp	@ tmp168,
 4918 007e 0022     		movs	r2, #0	@ tmp169,
 4919 0080 1A70     		strb	r2, [r3]	@ tmp170, j
 4920 0082 24E0     		b	.L343	@
 4921              	.L345:
1595:src/sim900_800.c **** 						{
1596:src/sim900_800.c **** 							if (GSMbuffRtaCommand[j] == '"')
 4922              		.loc 1 1596 0
 4923 0084 0F23     		movs	r3, #15	@ tmp171,
 4924 0086 6B44     		add	r3, r3, sp	@ tmp171,
 4925 0088 1B78     		ldrb	r3, [r3]	@ D.8027, j
 4926 008a 714A     		ldr	r2, .L357+16	@ tmp172,
 4927 008c D35C     		ldrb	r3, [r2, r3]	@ D.8026, GSMbuffRtaCommand
 4928 008e 222B     		cmp	r3, #34	@ D.8026,
 4929 0090 16D1     		bne	.L344	@,
1597:src/sim900_800.c **** 							{
1598:src/sim900_800.c **** 								colon_index++;
 4930              		.loc 1 1598 0
 4931 0092 0E23     		movs	r3, #14	@ tmp173,
 4932 0094 6B44     		add	r3, r3, sp	@ tmp173,
 4933 0096 1A78     		ldrb	r2, [r3]	@ D.8025, colon_index
 4934 0098 0E23     		movs	r3, #14	@ tmp174,
 4935 009a 6B44     		add	r3, r3, sp	@ tmp174,
 4936 009c 0132     		adds	r2, r2, #1	@ tmp175,
 4937 009e 1A70     		strb	r2, [r3]	@ tmp176, colon_index
1599:src/sim900_800.c **** 								if (colon_index == 8)
 4938              		.loc 1 1599 0
 4939 00a0 0E23     		movs	r3, #14	@ tmp177,
 4940 00a2 6B44     		add	r3, r3, sp	@ tmp177,
 4941 00a4 1B78     		ldrb	r3, [r3]	@ tmp178, colon_index
 4942 00a6 082B     		cmp	r3, #8	@ tmp178,
 4943 00a8 0AD1     		bne	.L344	@,
1600:src/sim900_800.c **** 								{
1601:src/sim900_800.c **** 									pToAnswer = (char *) &GSMbuffRtaCommand [j+1];
 4944              		.loc 1 1601 0
 4945 00aa 0F23     		movs	r3, #15	@ tmp179,
 4946 00ac 6B44     		add	r3, r3, sp	@ tmp179,
 4947 00ae 1B78     		ldrb	r3, [r3]	@ D.8027, j
 4948 00b0 5A1C     		adds	r2, r3, #1	@ D.8027, D.8027,
 4949 00b2 674B     		ldr	r3, .L357+16	@ tmp181,
 4950 00b4 D318     		adds	r3, r2, r3	@ tmp180, D.8027, tmp181
 4951 00b6 0293     		str	r3, [sp, #8]	@ tmp180, pToAnswer
1602:src/sim900_800.c **** 									j = 222;
 4952              		.loc 1 1602 0
 4953 00b8 0F23     		movs	r3, #15	@ tmp182,
 4954 00ba 6B44     		add	r3, r3, sp	@ tmp182,
ARM GAS  /tmp/ccNuUijR.s 			page 119


 4955 00bc DE22     		movs	r2, #222	@ tmp183,
 4956 00be 1A70     		strb	r2, [r3]	@ tmp184, j
 4957              	.L344:
1594:src/sim900_800.c **** 						{
 4958              		.loc 1 1594 0 discriminator 2
 4959 00c0 0F23     		movs	r3, #15	@ tmp185,
 4960 00c2 6B44     		add	r3, r3, sp	@ tmp185,
 4961 00c4 1A78     		ldrb	r2, [r3]	@ D.8025, j
 4962 00c6 0F23     		movs	r3, #15	@ tmp186,
 4963 00c8 6B44     		add	r3, r3, sp	@ tmp186,
 4964 00ca 0132     		adds	r2, r2, #1	@ tmp187,
 4965 00cc 1A70     		strb	r2, [r3]	@ tmp188, j
 4966              	.L343:
1594:src/sim900_800.c **** 						{
 4967              		.loc 1 1594 0 is_stmt 0 discriminator 1
 4968 00ce 0F23     		movs	r3, #15	@ tmp189,
 4969 00d0 6B44     		add	r3, r3, sp	@ tmp189,
 4970 00d2 1B78     		ldrb	r3, [r3]	@ tmp190, j
 4971 00d4 DD2B     		cmp	r3, #221	@ tmp190,
 4972 00d6 D5D9     		bls	.L345	@,
1603:src/sim900_800.c **** 								}
1604:src/sim900_800.c **** 							}
1605:src/sim900_800.c **** 						}
1606:src/sim900_800.c **** 
1607:src/sim900_800.c **** 						//fin del for, en pToAnswer debo tener la respuesta (payload del SMS)
1608:src/sim900_800.c **** 						if (colon_index == 8)
 4973              		.loc 1 1608 0 is_stmt 1
 4974 00d8 0E23     		movs	r3, #14	@ tmp191,
 4975 00da 6B44     		add	r3, r3, sp	@ tmp191,
 4976 00dc 1B78     		ldrb	r3, [r3]	@ tmp192, colon_index
 4977 00de 082B     		cmp	r3, #8	@ tmp192,
 4978 00e0 68D1     		bne	.L346	@,
1609:src/sim900_800.c **** 						{
1610:src/sim900_800.c **** 							//Son todos payloads correctos REVISO RESPUESTAS
1611:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"REPORTAR:", sizeof ("REPORTAR:") -1))
 4979              		.loc 1 1611 0
 4980 00e2 5E49     		ldr	r1, .L357+28	@ tmp193,
 4981 00e4 029B     		ldr	r3, [sp, #8]	@ tmp194, pToAnswer
 4982 00e6 0922     		movs	r2, #9	@,
 4983 00e8 1800     		movs	r0, r3	@, tmp194
 4984 00ea FFF7FEFF 		bl	strncmp	@
 4985 00ee 031E     		subs	r3, r0, #0	@ D.8027,,
 4986 00f0 1BD1     		bne	.L347	@,
1612:src/sim900_800.c **** 							{
1613:src/sim900_800.c **** 								strcpy(num_tel_rep, (pToAnswer + 9));
 4987              		.loc 1 1613 0
 4988 00f2 029B     		ldr	r3, [sp, #8]	@ tmp195, pToAnswer
 4989 00f4 0933     		adds	r3, r3, #9	@ D.8028,
 4990 00f6 1A00     		movs	r2, r3	@ D.8028, D.8028
 4991 00f8 594B     		ldr	r3, .L357+32	@ tmp196,
 4992 00fa 1100     		movs	r1, r2	@, D.8028
 4993 00fc 1800     		movs	r0, r3	@, tmp196
 4994 00fe FFF7FEFF 		bl	strcpy	@
1614:src/sim900_800.c **** 								//quito el OK pegado
1615:src/sim900_800.c **** 								colon_index	= strlen(num_tel_rep);
 4995              		.loc 1 1615 0
 4996 0102 574B     		ldr	r3, .L357+32	@ tmp197,
ARM GAS  /tmp/ccNuUijR.s 			page 120


 4997 0104 1800     		movs	r0, r3	@, tmp197
 4998 0106 FFF7FEFF 		bl	strlen	@
 4999 010a 0200     		movs	r2, r0	@ D.8029,
 5000 010c 0E23     		movs	r3, #14	@ tmp198,
 5001 010e 6B44     		add	r3, r3, sp	@ tmp198,
 5002 0110 1A70     		strb	r2, [r3]	@ tmp199, colon_index
1616:src/sim900_800.c **** 								if (colon_index > 2)
 5003              		.loc 1 1616 0
 5004 0112 0E23     		movs	r3, #14	@ tmp200,
 5005 0114 6B44     		add	r3, r3, sp	@ tmp200,
 5006 0116 1B78     		ldrb	r3, [r3]	@ tmp201, colon_index
 5007 0118 022B     		cmp	r3, #2	@ tmp201,
 5008 011a 06D9     		bls	.L347	@,
1617:src/sim900_800.c **** 									num_tel_rep[colon_index - 2] = '\0';
 5009              		.loc 1 1617 0
 5010 011c 0E23     		movs	r3, #14	@ tmp202,
 5011 011e 6B44     		add	r3, r3, sp	@ tmp202,
 5012 0120 1B78     		ldrb	r3, [r3]	@ D.8027, colon_index
 5013 0122 023B     		subs	r3, r3, #2	@ D.8027,
 5014 0124 4E4A     		ldr	r2, .L357+32	@ tmp203,
 5015 0126 0021     		movs	r1, #0	@ tmp204,
 5016 0128 D154     		strb	r1, [r2, r3]	@ tmp205, param_struct.num_reportar
 5017              	.L347:
1618:src/sim900_800.c **** 
1619:src/sim900_800.c **** 							}
1620:src/sim900_800.c **** 
1621:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"TIMER:", sizeof ("TIMER:") -1))
 5018              		.loc 1 1621 0
 5019 012a 4E49     		ldr	r1, .L357+36	@ tmp206,
 5020 012c 029B     		ldr	r3, [sp, #8]	@ tmp207, pToAnswer
 5021 012e 0622     		movs	r2, #6	@,
 5022 0130 1800     		movs	r0, r3	@, tmp207
 5023 0132 FFF7FEFF 		bl	strncmp	@
 5024 0136 031E     		subs	r3, r0, #0	@ D.8027,,
 5025 0138 30D1     		bne	.L348	@,
1622:src/sim900_800.c **** 							{
1623:src/sim900_800.c **** 								colon_index = 0;
 5026              		.loc 1 1623 0
 5027 013a 0E23     		movs	r3, #14	@ tmp208,
 5028 013c 6B44     		add	r3, r3, sp	@ tmp208,
 5029 013e 0022     		movs	r2, #0	@ tmp209,
 5030 0140 1A70     		strb	r2, [r3]	@ tmp210, colon_index
1624:src/sim900_800.c **** 								colon_index += (*(pToAnswer + 6) - 48) * 10;
 5031              		.loc 1 1624 0
 5032 0142 029B     		ldr	r3, [sp, #8]	@ tmp211, pToAnswer
 5033 0144 0633     		adds	r3, r3, #6	@ D.8028,
 5034 0146 1B78     		ldrb	r3, [r3]	@ D.8026, *_52
 5035 0148 303B     		subs	r3, r3, #48	@ D.8027,
 5036 014a DBB2     		uxtb	r3, r3	@ D.8025, D.8027
 5037 014c 1A1C     		adds	r2, r3, #0	@ tmp213, tmp212
 5038 014e 9200     		lsls	r2, r2, #2	@ tmp214, tmp213,
 5039 0150 D318     		adds	r3, r2, r3	@ tmp216, tmp215, tmp212
 5040 0152 DB18     		adds	r3, r3, r3	@ tmp218, tmp217, tmp217
 5041 0154 D9B2     		uxtb	r1, r3	@ D.8025, tmp216
 5042 0156 0E23     		movs	r3, #14	@ tmp219,
 5043 0158 6B44     		add	r3, r3, sp	@ tmp219,
 5044 015a 0E22     		movs	r2, #14	@ tmp220,
ARM GAS  /tmp/ccNuUijR.s 			page 121


 5045 015c 6A44     		add	r2, r2, sp	@ tmp220,
 5046 015e 1278     		ldrb	r2, [r2]	@ tmp221, colon_index
 5047 0160 8A18     		adds	r2, r1, r2	@ tmp222, D.8025, tmp221
 5048 0162 1A70     		strb	r2, [r3]	@ tmp223, colon_index
1625:src/sim900_800.c **** 								colon_index += *(pToAnswer + 7) - 48;
 5049              		.loc 1 1625 0
 5050 0164 029B     		ldr	r3, [sp, #8]	@ tmp224, pToAnswer
 5051 0166 0733     		adds	r3, r3, #7	@ D.8028,
 5052 0168 1A78     		ldrb	r2, [r3]	@ D.8026, *_59
 5053 016a 0E23     		movs	r3, #14	@ tmp225,
 5054 016c 6B44     		add	r3, r3, sp	@ tmp225,
 5055 016e 1B78     		ldrb	r3, [r3]	@ tmp226, colon_index
 5056 0170 D318     		adds	r3, r2, r3	@ tmp227, D.8026, tmp226
 5057 0172 DAB2     		uxtb	r2, r3	@ D.8025, tmp227
 5058 0174 0E23     		movs	r3, #14	@ tmp228,
 5059 0176 6B44     		add	r3, r3, sp	@ tmp228,
 5060 0178 303A     		subs	r2, r2, #48	@ tmp229,
 5061 017a 1A70     		strb	r2, [r3]	@ tmp230, colon_index
1626:src/sim900_800.c **** 
1627:src/sim900_800.c **** 								if ((colon_index > 1) && (colon_index <= 60))
 5062              		.loc 1 1627 0
 5063 017c 0E23     		movs	r3, #14	@ tmp231,
 5064 017e 6B44     		add	r3, r3, sp	@ tmp231,
 5065 0180 1B78     		ldrb	r3, [r3]	@ tmp232, colon_index
 5066 0182 012B     		cmp	r3, #1	@ tmp232,
 5067 0184 0AD9     		bls	.L348	@,
 5068              		.loc 1 1627 0 is_stmt 0 discriminator 1
 5069 0186 0E23     		movs	r3, #14	@ tmp233,
 5070 0188 6B44     		add	r3, r3, sp	@ tmp233,
 5071 018a 1B78     		ldrb	r3, [r3]	@ tmp234, colon_index
 5072 018c 3C2B     		cmp	r3, #60	@ tmp234,
 5073 018e 05D8     		bhi	.L348	@,
1628:src/sim900_800.c **** 									timer_rep = colon_index;
 5074              		.loc 1 1628 0 is_stmt 1
 5075 0190 334B     		ldr	r3, .L357+32	@ tmp235,
 5076 0192 0E22     		movs	r2, #14	@ tmp236,
 5077 0194 6A44     		add	r2, r2, sp	@ tmp236,
 5078 0196 5221     		movs	r1, #82	@ tmp237,
 5079 0198 1278     		ldrb	r2, [r2]	@ tmp238, colon_index
 5080 019a 5A54     		strb	r2, [r3, r1]	@ tmp238, param_struct.timer_reportar
 5081              	.L348:
1629:src/sim900_800.c **** 							}
1630:src/sim900_800.c **** 
1631:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"ENERGIA:", sizeof ("ENERGIA:") -1))
 5082              		.loc 1 1631 0
 5083 019c 3249     		ldr	r1, .L357+40	@ tmp239,
 5084 019e 029B     		ldr	r3, [sp, #8]	@ tmp240, pToAnswer
 5085 01a0 0822     		movs	r2, #8	@,
 5086 01a2 1800     		movs	r0, r3	@, tmp240
 5087 01a4 FFF7FEFF 		bl	strncmp	@
 5088 01a8 031E     		subs	r3, r0, #0	@ D.8027,,
 5089 01aa 03D1     		bne	.L346	@,
1632:src/sim900_800.c **** 								send_energy = 1;
 5090              		.loc 1 1632 0
 5091 01ac 2C4B     		ldr	r3, .L357+32	@ tmp241,
 5092 01ae 5322     		movs	r2, #83	@ tmp242,
 5093 01b0 0121     		movs	r1, #1	@ tmp243,
ARM GAS  /tmp/ccNuUijR.s 			page 122


 5094 01b2 9954     		strb	r1, [r3, r2]	@ tmp244, param_struct.send_energy_flag
 5095              	.L346:
1633:src/sim900_800.c **** 
1634:src/sim900_800.c **** 						}
1635:src/sim900_800.c **** 
1636:src/sim900_800.c **** 						//me fijo si tengo mas SMS
1637:src/sim900_800.c **** 						if (GSMCantSMS > 1)
 5096              		.loc 1 1637 0
 5097 01b4 224B     		ldr	r3, .L357	@ tmp245,
 5098 01b6 1B78     		ldrb	r3, [r3]	@ D.8025, GSMCantSMS
 5099 01b8 012B     		cmp	r3, #1	@ D.8025,
 5100 01ba 09D9     		bls	.L349	@,
1638:src/sim900_800.c **** 						{
1639:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5101              		.loc 1 1639 0
 5102 01bc 214B     		ldr	r3, .L357+4	@ tmp246,
 5103 01be 0022     		movs	r2, #0	@ tmp247,
 5104 01c0 1A70     		strb	r2, [r3]	@ tmp248, GSMReadSMSState
1640:src/sim900_800.c **** 							GSMCantSMS--;
 5105              		.loc 1 1640 0
 5106 01c2 1F4B     		ldr	r3, .L357	@ tmp249,
 5107 01c4 1B78     		ldrb	r3, [r3]	@ D.8025, GSMCantSMS
 5108 01c6 013B     		subs	r3, r3, #1	@ tmp250,
 5109 01c8 DAB2     		uxtb	r2, r3	@ D.8025, tmp250
 5110 01ca 1D4B     		ldr	r3, .L357	@ tmp251,
 5111 01cc 1A70     		strb	r2, [r3]	@ tmp252, GSMCantSMS
 5112 01ce 05E0     		b	.L342	@
 5113              	.L349:
1641:src/sim900_800.c **** 						}
1642:src/sim900_800.c **** 						else
1643:src/sim900_800.c **** 							GSMReadSMSState++;
 5114              		.loc 1 1643 0
 5115 01d0 1C4B     		ldr	r3, .L357+4	@ tmp253,
 5116 01d2 1B78     		ldrb	r3, [r3]	@ D.8026, GSMReadSMSState
 5117 01d4 0133     		adds	r3, r3, #1	@ tmp254,
 5118 01d6 DAB2     		uxtb	r2, r3	@ D.8026, tmp254
 5119 01d8 1A4B     		ldr	r3, .L357+4	@ tmp255,
 5120 01da 1A70     		strb	r2, [r3]	@ tmp256, GSMReadSMSState
 5121              	.L342:
1644:src/sim900_800.c **** 					}
1645:src/sim900_800.c **** 				}
1646:src/sim900_800.c **** 
1647:src/sim900_800.c **** 				if (i > 2)
 5122              		.loc 1 1647 0
 5123 01dc 6B46     		mov	r3, sp	@ tmp311,
 5124 01de 0733     		adds	r3, r3, #7	@ tmp257,
 5125 01e0 1B78     		ldrb	r3, [r3]	@ tmp258, i
 5126 01e2 022B     		cmp	r3, #2	@ tmp258,
 5127 01e4 25D9     		bls	.L355	@,
1648:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5128              		.loc 1 1648 0
 5129 01e6 174B     		ldr	r3, .L357+4	@ tmp259,
 5130 01e8 0022     		movs	r2, #0	@ tmp260,
 5131 01ea 1A70     		strb	r2, [r3]	@ tmp261, GSMReadSMSState
1649:src/sim900_800.c **** 
1650:src/sim900_800.c **** 				break;
 5132              		.loc 1 1650 0
ARM GAS  /tmp/ccNuUijR.s 			page 123


 5133 01ec 21E0     		b	.L355	@
 5134              	.L340:
1651:src/sim900_800.c **** 
1652:src/sim900_800.c **** 			case 2:
1653:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 25000, 0, &GSMbuffRtaCommand[0]);
 5135              		.loc 1 1653 0
 5136 01ee 6B46     		mov	r3, sp	@ tmp312,
 5137 01f0 DC1D     		adds	r4, r3, #7	@ tmp262, tmp312,
 5138 01f2 174B     		ldr	r3, .L357+16	@ tmp263,
 5139 01f4 1D49     		ldr	r1, .L357+44	@ tmp264,
 5140 01f6 1E48     		ldr	r0, .L357+48	@ tmp265,
 5141 01f8 0022     		movs	r2, #0	@,
 5142 01fa FFF7FEFF 		bl	GSMSendCommand	@
 5143 01fe 0300     		movs	r3, r0	@ tmp266,
 5144 0200 2370     		strb	r3, [r4]	@ tmp268, i
1654:src/sim900_800.c **** 
1655:src/sim900_800.c **** 				if (i == 2)
 5145              		.loc 1 1655 0
 5146 0202 6B46     		mov	r3, sp	@ tmp313,
 5147 0204 0733     		adds	r3, r3, #7	@ tmp269,
 5148 0206 1B78     		ldrb	r3, [r3]	@ tmp270, i
 5149 0208 022B     		cmp	r3, #2	@ tmp270,
 5150 020a 05D1     		bne	.L351	@,
1656:src/sim900_800.c **** 				{
1657:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5151              		.loc 1 1657 0
 5152 020c 0D4B     		ldr	r3, .L357+4	@ tmp271,
 5153 020e 0022     		movs	r2, #0	@ tmp272,
 5154 0210 1A70     		strb	r2, [r3]	@ tmp273, GSMReadSMSState
1658:src/sim900_800.c **** 					GSMCantSMS = 0;
 5155              		.loc 1 1658 0
 5156 0212 0B4B     		ldr	r3, .L357	@ tmp274,
 5157 0214 0022     		movs	r2, #0	@ tmp275,
 5158 0216 1A70     		strb	r2, [r3]	@ tmp276, GSMCantSMS
 5159              	.L351:
1659:src/sim900_800.c **** 				}
1660:src/sim900_800.c **** 
1661:src/sim900_800.c **** 				if (i > 2)
 5160              		.loc 1 1661 0
 5161 0218 6B46     		mov	r3, sp	@ tmp314,
 5162 021a 0733     		adds	r3, r3, #7	@ tmp277,
 5163 021c 1B78     		ldrb	r3, [r3]	@ tmp278, i
 5164 021e 022B     		cmp	r3, #2	@ tmp278,
 5165 0220 09D9     		bls	.L356	@,
1662:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5166              		.loc 1 1662 0
 5167 0222 084B     		ldr	r3, .L357+4	@ tmp279,
 5168 0224 0022     		movs	r2, #0	@ tmp280,
 5169 0226 1A70     		strb	r2, [r3]	@ tmp281, GSMReadSMSState
1663:src/sim900_800.c **** 
1664:src/sim900_800.c **** 				break;
 5170              		.loc 1 1664 0
 5171 0228 05E0     		b	.L356	@
 5172              	.L353:
1665:src/sim900_800.c **** 
1666:src/sim900_800.c **** 			default:
1667:src/sim900_800.c **** 				GSMReadSMSState = 0;
ARM GAS  /tmp/ccNuUijR.s 			page 124


 5173              		.loc 1 1667 0
 5174 022a 064B     		ldr	r3, .L357+4	@ tmp282,
 5175 022c 0022     		movs	r2, #0	@ tmp283,
 5176 022e 1A70     		strb	r2, [r3]	@ tmp284, GSMReadSMSState
1668:src/sim900_800.c **** 				break;
 5177              		.loc 1 1668 0
 5178 0230 02E0     		b	.L337	@
 5179              	.L355:
1650:src/sim900_800.c **** 
 5180              		.loc 1 1650 0
 5181 0232 C046     		nop
 5182 0234 00E0     		b	.L354	@
 5183              	.L356:
1664:src/sim900_800.c **** 
 5184              		.loc 1 1664 0
 5185 0236 C046     		nop
 5186              	.L337:
 5187              	.L354:
1669:src/sim900_800.c **** 		}
1670:src/sim900_800.c **** 	}
1671:src/sim900_800.c **** }
 5188              		.loc 1 1671 0
 5189 0238 C046     		nop
 5190 023a 04B0     		add	sp, sp, #16	@,,
 5191              		@ sp needed	@
 5192 023c 10BD     		pop	{r4, pc}
 5193              	.L358:
 5194 023e C046     		.align	2
 5195              	.L357:
 5196 0240 00000000 		.word	GSMCantSMS
 5197 0244 00000000 		.word	GSMReadSMSState
 5198 0248 20020000 		.word	.LC180
 5199 024c 00000000 		.word	GSMReadSMScommand
 5200 0250 00000000 		.word	GSMbuffRtaCommand
 5201 0254 70170000 		.word	6000
 5202 0258 30020000 		.word	.LC184
 5203 025c 38020000 		.word	.LC186
 5204 0260 00000000 		.word	param_struct
 5205 0264 44020000 		.word	.LC189
 5206 0268 4C020000 		.word	.LC191
 5207 026c A8610000 		.word	25000
 5208 0270 58020000 		.word	.LC193
 5209              		.cfi_endproc
 5210              	.LFE35:
 5211              		.size	GSMReceivSMS, .-GSMReceivSMS
 5212              		.section	.text.GSMConfigPDPGPRS,"ax",%progbits
 5213              		.align	2
 5214              		.global	GSMConfigPDPGPRS
 5215              		.code	16
 5216              		.thumb_func
 5217              		.type	GSMConfigPDPGPRS, %function
 5218              	GSMConfigPDPGPRS:
 5219              	.LFB36:
1672:src/sim900_800.c **** //---------------------------------------------------------//
1673:src/sim900_800.c **** //void GSMrxSMS(char * ptrMSG, char *ptrNumTel, char flagSMSin)
1674:src/sim900_800.c **** //---------------------------------------------------------//
1675:src/sim900_800.c **** // void GSMrxSMS(unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, uns
ARM GAS  /tmp/ccNuUijR.s 			page 125


1676:src/sim900_800.c **** // {
1677:src/sim900_800.c **** // 	unsigned char i;
1678:src/sim900_800.c **** // 	unsigned char flag;
1679:src/sim900_800.c **** //
1680:src/sim900_800.c **** // 	if (GSMCantSMS)
1681:src/sim900_800.c **** // 	{
1682:src/sim900_800.c **** // 		switch(GSMrxSMSState)
1683:src/sim900_800.c **** // 		{
1684:src/sim900_800.c **** //
1685:src/sim900_800.c **** // 			case 0:
1686:src/sim900_800.c **** // 				GSMrxSMSState++;
1687:src/sim900_800.c **** // 				break;
1688:src/sim900_800.c **** // 			case 1:
1689:src/sim900_800.c **** // 				i = GSM_SetSIM (1);
1690:src/sim900_800.c **** //
1691:src/sim900_800.c **** // 				if (i == 2)
1692:src/sim900_800.c **** // 					GSMrxSMSState++;
1693:src/sim900_800.c **** // 				if (i > 2)
1694:src/sim900_800.c **** // 					GSMrxSMSState=0;
1695:src/sim900_800.c **** // 				break;
1696:src/sim900_800.c **** //
1697:src/sim900_800.c **** // 			case 2:
1698:src/sim900_800.c **** // 					//Verifico que no hayan sido leidos los SMS.
1699:src/sim900_800.c **** // 					if (GSMnumSMS <= GSMCantSMS)
1700:src/sim900_800.c **** // 					{
1701:src/sim900_800.c **** // 						switch(GSMReadSMSState)
1702:src/sim900_800.c **** // 						{
1703:src/sim900_800.c **** // 							case 0:
1704:src/sim900_800.c **** // 								GSMReadSMSrepIn[0] = 0;
1705:src/sim900_800.c **** // 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
1706:src/sim900_800.c **** // 								GSMReadSMSState++;
1707:src/sim900_800.c **** // 								break;
1708:src/sim900_800.c **** //
1709:src/sim900_800.c **** // 							case 1:
1710:src/sim900_800.c **** //
1711:src/sim900_800.c **** // 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
1712:src/sim900_800.c **** //
1713:src/sim900_800.c **** // 								if (i == 2)
1714:src/sim900_800.c **** // 								{
1715:src/sim900_800.c **** // 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 
1716:src/sim900_800.c **** // 									{
1717:src/sim900_800.c **** //
1718:src/sim900_800.c **** // 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
1719:src/sim900_800.c **** // 										{
1720:src/sim900_800.c **** // 											i = 0;
1721:src/sim900_800.c **** // 											flag = 0;
1722:src/sim900_800.c **** // 											while (GSMbuffRtaCommand[i] != 0)
1723:src/sim900_800.c **** // 											{
1724:src/sim900_800.c **** // 												if ((GSMbuffRtaCommand[i] == ',') && (GSMbuffRtaCommand[i+1] == '"') && (flag == 0))
1725:src/sim900_800.c **** // 												{
1726:src/sim900_800.c **** // 													i += 2;
1727:src/sim900_800.c **** // 													flag = i;
1728:src/sim900_800.c **** // 													while (GSMbuffRtaCommand[i] != '"')
1729:src/sim900_800.c **** // 													{
1730:src/sim900_800.c **** // 														i++;
1731:src/sim900_800.c **** // 													}
1732:src/sim900_800.c **** // 													strncpy(pGSMReadSMStel, &GSMbuffRtaCommand[flag], (i - flag));
ARM GAS  /tmp/ccNuUijR.s 			page 126


1733:src/sim900_800.c **** // 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1734:src/sim900_800.c **** // 													//UARTDBGSend(pGSMReadSMStel);
1735:src/sim900_800.c **** // 													//GSMReadSMStel[0]  = 0;
1736:src/sim900_800.c **** // 												}
1737:src/sim900_800.c **** // 												i++;
1738:src/sim900_800.c **** // 											}
1739:src/sim900_800.c **** //
1740:src/sim900_800.c **** // 											GSMReadSMSrepIn[19] = 0;
1741:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000:
1742:src/sim900_800.c **** // 											{
1743:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1744:src/sim900_800.c **** // 												{
1745:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1746:src/sim900_800.c **** //
1747:src/sim900_800.c **** // 													*pActDact |= 0x40; //Armar
1748:src/sim900_800.c **** // 													*pActDact |= 0x01; //SendOK.
1749:src/sim900_800.c **** // 												}
1750:src/sim900_800.c **** // 											}
1751:src/sim900_800.c **** //
1752:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000:
1753:src/sim900_800.c **** // 											{
1754:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1755:src/sim900_800.c **** // 												{
1756:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1757:src/sim900_800.c **** //
1758:src/sim900_800.c **** // 													*pActDact |= 0x80; //Desrmar
1759:src/sim900_800.c **** // 													*pActDact |= 0x01; //SendOK.
1760:src/sim900_800.c **** // 												}
1761:src/sim900_800.c **** // 											}
1762:src/sim900_800.c **** // 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1763:src/sim900_800.c **** // 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1764:src/sim900_800.c **** // 											//Led4Toggle();
1765:src/sim900_800.c **** // 										}
1766:src/sim900_800.c **** //
1767:src/sim900_800.c **** // 										GSMReadSMSState = 0;
1768:src/sim900_800.c **** // 										GSMnumSMS++;
1769:src/sim900_800.c **** // 									}
1770:src/sim900_800.c **** // 								}
1771:src/sim900_800.c **** //
1772:src/sim900_800.c **** // 								if (i > 2)
1773:src/sim900_800.c **** // 								{
1774:src/sim900_800.c **** // 									GSMReadSMSState = 0;
1775:src/sim900_800.c **** // 								}
1776:src/sim900_800.c **** // 							break;
1777:src/sim900_800.c **** //
1778:src/sim900_800.c **** // 						default:
1779:src/sim900_800.c **** // 							GSMReadSMSState = 0;
1780:src/sim900_800.c **** // 							break;
1781:src/sim900_800.c **** // 						}
1782:src/sim900_800.c **** // 			}
1783:src/sim900_800.c **** // 			else
1784:src/sim900_800.c **** // 			{
1785:src/sim900_800.c **** //
1786:src/sim900_800.c **** // 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1787:src/sim900_800.c **** //
1788:src/sim900_800.c **** // 				if (i == 2)
1789:src/sim900_800.c **** // 				{
ARM GAS  /tmp/ccNuUijR.s 			page 127


1790:src/sim900_800.c **** // 					GSMnumSMS = 1;
1791:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1792:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1793:src/sim900_800.c **** // 					GSMCantSMS = 0;
1794:src/sim900_800.c **** // 				}
1795:src/sim900_800.c **** //
1796:src/sim900_800.c **** // 				if (i > 2)
1797:src/sim900_800.c **** // 				{
1798:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1799:src/sim900_800.c **** // 				}
1800:src/sim900_800.c **** // 			}
1801:src/sim900_800.c **** // 			break;
1802:src/sim900_800.c **** //
1803:src/sim900_800.c **** // 		default:
1804:src/sim900_800.c **** // 			GSMrxSMSState = 0;
1805:src/sim900_800.c **** // 			break;
1806:src/sim900_800.c **** // 		}
1807:src/sim900_800.c **** // 	}
1808:src/sim900_800.c **** // 	else if (GSMCantSMS2)
1809:src/sim900_800.c **** // 	{
1810:src/sim900_800.c **** // 		switch(GSMrxSMSState)
1811:src/sim900_800.c **** // 		{
1812:src/sim900_800.c **** //
1813:src/sim900_800.c **** // 			case 0:
1814:src/sim900_800.c **** // 				GSMrxSMSState++;
1815:src/sim900_800.c **** // 				break;
1816:src/sim900_800.c **** // 			case 1:
1817:src/sim900_800.c **** // 				i = GSM_SetSIM (2);
1818:src/sim900_800.c **** //
1819:src/sim900_800.c **** // 				if (i == 2)
1820:src/sim900_800.c **** // 					GSMrxSMSState++;
1821:src/sim900_800.c **** // 				if (i > 2)
1822:src/sim900_800.c **** // 					GSMrxSMSState=0;
1823:src/sim900_800.c **** // 				break;
1824:src/sim900_800.c **** //
1825:src/sim900_800.c **** // 			case 2:
1826:src/sim900_800.c **** // 					//Verifico que no hayan sido leidos los SMS.
1827:src/sim900_800.c **** // 					if (GSMnumSMS <= GSMCantSMS2)
1828:src/sim900_800.c **** // 					{
1829:src/sim900_800.c **** // 						switch(GSMReadSMSState)
1830:src/sim900_800.c **** // 						{
1831:src/sim900_800.c **** // 							case 0:
1832:src/sim900_800.c **** // 								GSMReadSMSrepIn[0] = 0;
1833:src/sim900_800.c **** // 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
1834:src/sim900_800.c **** // 								GSMReadSMSState++;
1835:src/sim900_800.c **** // 								break;
1836:src/sim900_800.c **** //
1837:src/sim900_800.c **** // 							case 1:
1838:src/sim900_800.c **** //
1839:src/sim900_800.c **** // 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
1840:src/sim900_800.c **** //
1841:src/sim900_800.c **** // 								if (i == 2)
1842:src/sim900_800.c **** // 								{
1843:src/sim900_800.c **** // 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 
1844:src/sim900_800.c **** // 									{
1845:src/sim900_800.c **** //
1846:src/sim900_800.c **** // 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
ARM GAS  /tmp/ccNuUijR.s 			page 128


1847:src/sim900_800.c **** // 										{
1848:src/sim900_800.c **** // 											i = 0;
1849:src/sim900_800.c **** // 											flag = 0;
1850:src/sim900_800.c **** // 											while (*(GSMbuffRtaCommand+i) != 0)
1851:src/sim900_800.c **** // 											{
1852:src/sim900_800.c **** // 												if ((*(GSMbuffRtaCommand+i) == ',') && (*(GSMbuffRtaCommand+i+1) == '"') && (flag ==
1853:src/sim900_800.c **** // 												{
1854:src/sim900_800.c **** // 													i += 2;
1855:src/sim900_800.c **** // 													flag = i;
1856:src/sim900_800.c **** // 													while (*(GSMbuffRtaCommand+i) != '"')
1857:src/sim900_800.c **** // 													{
1858:src/sim900_800.c **** // 														i++;
1859:src/sim900_800.c **** // 													}
1860:src/sim900_800.c **** // 													strncpy((char *)pGSMReadSMStel, (const char *)&GSMbuffRtaCommand[flag], (i - flag))
1861:src/sim900_800.c **** // 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1862:src/sim900_800.c **** // 													//UARTDBGSend(pGSMReadSMStel);
1863:src/sim900_800.c **** // 													//*pGSMReadSMStel  = 0;
1864:src/sim900_800.c **** // 												}
1865:src/sim900_800.c **** // 												i++;
1866:src/sim900_800.c **** // 											}
1867:src/sim900_800.c **** //
1868:src/sim900_800.c **** // 											GSMReadSMSrepIn[19] = 0;
1869:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000:
1870:src/sim900_800.c **** // 											{
1871:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1872:src/sim900_800.c **** // 												{
1873:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1874:src/sim900_800.c **** //
1875:src/sim900_800.c **** // 													*pActDact |= 0x40; //Armar
1876:src/sim900_800.c **** // 													*pActDact |= 0x02; //SendOK.
1877:src/sim900_800.c **** // 												}
1878:src/sim900_800.c **** // 											}
1879:src/sim900_800.c **** //
1880:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000:
1881:src/sim900_800.c **** // 											{
1882:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1883:src/sim900_800.c **** // 												{
1884:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1885:src/sim900_800.c **** //
1886:src/sim900_800.c **** // 													*pActDact |= 0x80; //Desrmar
1887:src/sim900_800.c **** // 													*pActDact |= 0x02; //SendOK.
1888:src/sim900_800.c **** // 												}
1889:src/sim900_800.c **** // 											}
1890:src/sim900_800.c **** // 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1891:src/sim900_800.c **** // 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1892:src/sim900_800.c **** // 											//Led4Toggle();
1893:src/sim900_800.c **** // 										}
1894:src/sim900_800.c **** //
1895:src/sim900_800.c **** // 										GSMReadSMSState = 0;
1896:src/sim900_800.c **** // 										GSMnumSMS++;
1897:src/sim900_800.c **** // 									}
1898:src/sim900_800.c **** // 								}
1899:src/sim900_800.c **** //
1900:src/sim900_800.c **** // 								if (i > 2)
1901:src/sim900_800.c **** // 								{
1902:src/sim900_800.c **** // 									GSMReadSMSState = 0;
1903:src/sim900_800.c **** // 									//GSMrxSMSState = 0;
ARM GAS  /tmp/ccNuUijR.s 			page 129


1904:src/sim900_800.c **** // 								}
1905:src/sim900_800.c **** // 							break;
1906:src/sim900_800.c **** //
1907:src/sim900_800.c **** // 						default:
1908:src/sim900_800.c **** // 							GSMReadSMSState = 0;
1909:src/sim900_800.c **** // 							break;
1910:src/sim900_800.c **** // 						}
1911:src/sim900_800.c **** // 			}
1912:src/sim900_800.c **** // 			else
1913:src/sim900_800.c **** // 			{
1914:src/sim900_800.c **** //
1915:src/sim900_800.c **** // 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1916:src/sim900_800.c **** //
1917:src/sim900_800.c **** // 				if (i == 2)
1918:src/sim900_800.c **** // 				{
1919:src/sim900_800.c **** // 					GSMnumSMS = 1;
1920:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1921:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1922:src/sim900_800.c **** // 					GSMCantSMS2 = 0;
1923:src/sim900_800.c **** // 				}
1924:src/sim900_800.c **** //
1925:src/sim900_800.c **** // 				if (i > 2)
1926:src/sim900_800.c **** // 				{
1927:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1928:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1929:src/sim900_800.c **** // 				}
1930:src/sim900_800.c **** // 			}
1931:src/sim900_800.c **** // 			break;
1932:src/sim900_800.c **** // 		default:
1933:src/sim900_800.c **** // 			GSMrxSMSState = 0;
1934:src/sim900_800.c **** // 			break;
1935:src/sim900_800.c **** // 		}
1936:src/sim900_800.c **** // 	}
1937:src/sim900_800.c **** // }
1938:src/sim900_800.c **** 
1939:src/sim900_800.c **** char GSMConfigPDPGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *
1940:src/sim900_800.c **** {
 5220              		.loc 1 1940 0
 5221              		.cfi_startproc
 5222 0000 10B5     		push	{r4, lr}	@
 5223              	.LCFI22:
 5224              		.cfi_def_cfa_offset 8
 5225              		.cfi_offset 4, -8
 5226              		.cfi_offset 14, -4
 5227 0002 86B0     		sub	sp, sp, #24	@,,
 5228              	.LCFI23:
 5229              		.cfi_def_cfa_offset 32
 5230 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 5231 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 5232 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 5233 000a 0F23     		movs	r3, #15	@ tmp173,
 5234 000c 6B44     		add	r3, r3, sp	@ tmp173,
 5235 000e 021C     		adds	r2, r0, #0	@ tmp174, tmp172
 5236 0010 1A70     		strb	r2, [r3]	@ tmp174, sim
1941:src/sim900_800.c **** 	unsigned char i;
1942:src/sim900_800.c **** 
1943:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
ARM GAS  /tmp/ccNuUijR.s 			page 130


 5237              		.loc 1 1943 0
 5238 0012 C64B     		ldr	r3, .L435	@ tmp175,
 5239 0014 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5240 0016 102B     		cmp	r3, #16	@ D.8037,
 5241 0018 00D9     		bls	.LCB4331	@
 5242 001a 21E3     		b	.L360	@long jump	@
 5243              	.LCB4331:
 5244 001c 9A00     		lsls	r2, r3, #2	@ tmp176, D.8037,
 5245 001e C44B     		ldr	r3, .L435+4	@ tmp178,
 5246 0020 D318     		adds	r3, r2, r3	@ tmp177, tmp176, tmp178
 5247 0022 1B68     		ldr	r3, [r3]	@ tmp179,
 5248 0024 9F46     		mov	pc, r3	@ tmp179
 5249              		.section	.rodata.GSMConfigPDPGPRS,"a",%progbits
 5250              		.align	2
 5251              	.L362:
 5252 0000 26000000 		.word	.L361
 5253 0004 42000000 		.word	.L363
 5254 0008 4A000000 		.word	.L364
 5255 000c 8A000000 		.word	.L365
 5256 0010 A2010000 		.word	.L366
 5257 0014 FE010000 		.word	.L367
 5258 0018 5A020000 		.word	.L368
 5259 001c EA020000 		.word	.L369
 5260 0020 8C030000 		.word	.L370
 5261 0024 32040000 		.word	.L371
 5262 0028 00050000 		.word	.L372
 5263 002c 3A050000 		.word	.L373
 5264 0030 74050000 		.word	.L374
 5265 0034 BA050000 		.word	.L375
 5266 0038 C2050000 		.word	.L376
 5267 003c CC050000 		.word	.L377
 5268 0040 24060000 		.word	.L378
 5269              		.section	.text.GSMConfigPDPGPRS
 5270              	.L361:
1944:src/sim900_800.c **** 	{
1945:src/sim900_800.c **** 
1946:src/sim900_800.c **** 		case 0:
1947:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 5271              		.loc 1 1947 0
 5272 0026 C34B     		ldr	r3, .L435+8	@ tmp180,
 5273 0028 0BAA     		add	r2, sp, #44	@ tmp181,,
 5274 002a 1288     		ldrh	r2, [r2]	@ tmp182, timeOut
 5275 002c 1A80     		strh	r2, [r3]	@ tmp182, GSMConfigGPRSTimeOut
1948:src/sim900_800.c **** 			GSMConfigGPRSState++;
 5276              		.loc 1 1948 0
 5277 002e BF4B     		ldr	r3, .L435	@ tmp183,
 5278 0030 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5279 0032 0133     		adds	r3, r3, #1	@ tmp184,
 5280 0034 DAB2     		uxtb	r2, r3	@ D.8036, tmp184
 5281 0036 BD4B     		ldr	r3, .L435	@ tmp185,
 5282 0038 1A70     		strb	r2, [r3]	@ tmp186, GSMConfigGPRSState
1949:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 5283              		.loc 1 1949 0
 5284 003a BF4B     		ldr	r3, .L435+12	@ tmp187,
 5285 003c 0122     		movs	r2, #1	@ tmp188,
 5286 003e 1A70     		strb	r2, [r3]	@ tmp189, GSMConfigGPRSflag
1950:src/sim900_800.c **** 			break;
ARM GAS  /tmp/ccNuUijR.s 			page 131


 5287              		.loc 1 1950 0
 5288 0040 29E3     		b	.L379	@
 5289              	.L363:
1951:src/sim900_800.c **** 
1952:src/sim900_800.c **** 		case 1:
1953:src/sim900_800.c **** 			GSMConfigGPRSState = 15;
 5290              		.loc 1 1953 0
 5291 0042 BA4B     		ldr	r3, .L435	@ tmp190,
 5292 0044 0F22     		movs	r2, #15	@ tmp191,
 5293 0046 1A70     		strb	r2, [r3]	@ tmp192, GSMConfigGPRSState
1954:src/sim900_800.c **** /*
1955:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 50, 0, &GSMbuffRtaCommand[0]);
1956:src/sim900_800.c **** 
1957:src/sim900_800.c **** 			if (i == 2)
1958:src/sim900_800.c **** 			{
1959:src/sim900_800.c **** 				//Respondio ACK.
1960:src/sim900_800.c **** 				//Conectado.
1961:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
1962:src/sim900_800.c **** 				return 2;
1963:src/sim900_800.c **** 			}
1964:src/sim900_800.c **** 
1965:src/sim900_800.c **** 			if (i > 2)
1966:src/sim900_800.c **** 			{
1967:src/sim900_800.c **** 				//No conectado.
1968:src/sim900_800.c **** 				//Seleccionar Sim.
1969:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
1970:src/sim900_800.c **** 			}
1971:src/sim900_800.c **** */
1972:src/sim900_800.c **** 			break;
 5294              		.loc 1 1972 0
 5295 0048 25E3     		b	.L379	@
 5296              	.L364:
1973:src/sim900_800.c **** 		case 2:
1974:src/sim900_800.c **** 
1975:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 5297              		.loc 1 1975 0
 5298 004a 1724     		movs	r4, #23	@ tmp193,
 5299 004c 6C44     		add	r4, r4, sp	@ tmp193,
 5300 004e BB4B     		ldr	r3, .L435+16	@ tmp194,
 5301 0050 BB48     		ldr	r0, .L435+20	@ tmp195,
 5302 0052 0022     		movs	r2, #0	@,
 5303 0054 3221     		movs	r1, #50	@,
 5304 0056 FFF7FEFF 		bl	GSMSendCommand	@
 5305 005a 0300     		movs	r3, r0	@ tmp196,
 5306 005c 2370     		strb	r3, [r4]	@ tmp198, i
1976:src/sim900_800.c **** 
1977:src/sim900_800.c **** 			if (i == 2)
 5307              		.loc 1 1977 0
 5308 005e 1723     		movs	r3, #23	@ tmp199,
 5309 0060 6B44     		add	r3, r3, sp	@ tmp199,
 5310 0062 1B78     		ldrb	r3, [r3]	@ tmp200, i
 5311 0064 022B     		cmp	r3, #2	@ tmp200,
 5312 0066 05D1     		bne	.L380	@,
1978:src/sim900_800.c **** 			{
1979:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5313              		.loc 1 1979 0
 5314 0068 B04B     		ldr	r3, .L435	@ tmp201,
ARM GAS  /tmp/ccNuUijR.s 			page 132


 5315 006a 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5316 006c 0133     		adds	r3, r3, #1	@ tmp202,
 5317 006e DAB2     		uxtb	r2, r3	@ D.8036, tmp202
 5318 0070 AE4B     		ldr	r3, .L435	@ tmp203,
 5319 0072 1A70     		strb	r2, [r3]	@ tmp204, GSMConfigGPRSState
 5320              	.L380:
1980:src/sim900_800.c **** 			}
1981:src/sim900_800.c **** 
1982:src/sim900_800.c **** 			if (i > 2)
 5321              		.loc 1 1982 0
 5322 0074 1723     		movs	r3, #23	@ tmp205,
 5323 0076 6B44     		add	r3, r3, sp	@ tmp205,
 5324 0078 1B78     		ldrb	r3, [r3]	@ tmp206, i
 5325 007a 022B     		cmp	r3, #2	@ tmp206,
 5326 007c 00D8     		bhi	.LCB4393	@
 5327 007e F3E2     		b	.L423	@long jump	@
 5328              	.LCB4393:
1983:src/sim900_800.c **** 			{
1984:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5329              		.loc 1 1984 0
 5330 0080 AA4B     		ldr	r3, .L435	@ tmp207,
 5331 0082 0022     		movs	r2, #0	@ tmp208,
 5332 0084 1A70     		strb	r2, [r3]	@ tmp209, GSMConfigGPRSState
1985:src/sim900_800.c **** 				return 3;
 5333              		.loc 1 1985 0
 5334 0086 0323     		movs	r3, #3	@ D.8036,
 5335 0088 0FE3     		b	.L382	@
 5336              	.L365:
1986:src/sim900_800.c **** 			}
1987:src/sim900_800.c **** 			break;
1988:src/sim900_800.c **** 		case 3:
1989:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 5337              		.loc 1 1989 0
 5338 008a AB4B     		ldr	r3, .L435+12	@ tmp210,
 5339 008c 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSflag
 5340 008e 022B     		cmp	r3, #2	@ D.8036,
 5341 0090 00D0     		beq	.LCB4405	@
 5342 0092 EBE2     		b	.L424	@long jump	@
 5343              	.LCB4405:
1990:src/sim900_800.c **** 			{
1991:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1992:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 5344              		.loc 1 1992 0
 5345 0094 AB49     		ldr	r1, .L435+24	@ tmp211,
 5346 0096 AC4B     		ldr	r3, .L435+28	@ tmp212,
 5347 0098 0A22     		movs	r2, #10	@,
 5348 009a 1800     		movs	r0, r3	@, tmp212
 5349 009c FFF7FEFF 		bl	strncmp	@
 5350 00a0 031E     		subs	r3, r0, #0	@ D.8037,,
 5351 00a2 08D1     		bne	.L384	@,
1993:src/sim900_800.c **** 				{
1994:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 5352              		.loc 1 1994 0
 5353 00a4 A14B     		ldr	r3, .L435	@ tmp213,
 5354 00a6 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5355 00a8 0133     		adds	r3, r3, #1	@ tmp214,
 5356 00aa DAB2     		uxtb	r2, r3	@ D.8036, tmp214
ARM GAS  /tmp/ccNuUijR.s 			page 133


 5357 00ac 9F4B     		ldr	r3, .L435	@ tmp215,
 5358 00ae 1A70     		strb	r2, [r3]	@ tmp216, GSMConfigGPRSState
1995:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5359              		.loc 1 1995 0
 5360 00b0 A14B     		ldr	r3, .L435+12	@ tmp217,
 5361 00b2 0122     		movs	r2, #1	@ tmp218,
 5362 00b4 1A70     		strb	r2, [r3]	@ tmp219, GSMConfigGPRSflag
 5363              	.L384:
1996:src/sim900_800.c **** 				}
1997:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1998:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 5364              		.loc 1 1998 0
 5365 00b6 A549     		ldr	r1, .L435+32	@ tmp220,
 5366 00b8 A34B     		ldr	r3, .L435+28	@ tmp221,
 5367 00ba 0822     		movs	r2, #8	@,
 5368 00bc 1800     		movs	r0, r3	@, tmp221
 5369 00be FFF7FEFF 		bl	strncmp	@
 5370 00c2 031E     		subs	r3, r0, #0	@ D.8037,,
 5371 00c4 08D1     		bne	.L385	@,
1999:src/sim900_800.c **** 				{
2000:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 5372              		.loc 1 2000 0
 5373 00c6 994B     		ldr	r3, .L435	@ tmp222,
 5374 00c8 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5375 00ca 0833     		adds	r3, r3, #8	@ tmp223,
 5376 00cc DAB2     		uxtb	r2, r3	@ D.8036, tmp223
 5377 00ce 974B     		ldr	r3, .L435	@ tmp224,
 5378 00d0 1A70     		strb	r2, [r3]	@ tmp225, GSMConfigGPRSState
2001:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5379              		.loc 1 2001 0
 5380 00d2 994B     		ldr	r3, .L435+12	@ tmp226,
 5381 00d4 0122     		movs	r2, #1	@ tmp227,
 5382 00d6 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigGPRSflag
 5383              	.L385:
2002:src/sim900_800.c **** 				}
2003:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
2004:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 5384              		.loc 1 2004 0
 5385 00d8 9D49     		ldr	r1, .L435+36	@ tmp229,
 5386 00da 9B4B     		ldr	r3, .L435+28	@ tmp230,
 5387 00dc 0A22     		movs	r2, #10	@,
 5388 00de 1800     		movs	r0, r3	@, tmp230
 5389 00e0 FFF7FEFF 		bl	strncmp	@
 5390 00e4 031E     		subs	r3, r0, #0	@ D.8037,,
 5391 00e6 08D1     		bne	.L386	@,
2005:src/sim900_800.c **** 				{
2006:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 5392              		.loc 1 2006 0
 5393 00e8 904B     		ldr	r3, .L435	@ tmp231,
 5394 00ea 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5395 00ec 0933     		adds	r3, r3, #9	@ tmp232,
 5396 00ee DAB2     		uxtb	r2, r3	@ D.8036, tmp232
 5397 00f0 8E4B     		ldr	r3, .L435	@ tmp233,
 5398 00f2 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
2007:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5399              		.loc 1 2007 0
 5400 00f4 904B     		ldr	r3, .L435+12	@ tmp235,
ARM GAS  /tmp/ccNuUijR.s 			page 134


 5401 00f6 0122     		movs	r2, #1	@ tmp236,
 5402 00f8 1A70     		strb	r2, [r3]	@ tmp237, GSMConfigGPRSflag
 5403              	.L386:
2008:src/sim900_800.c **** 				}
2009:src/sim900_800.c **** 
2010:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
2011:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 5404              		.loc 1 2011 0
 5405 00fa 9649     		ldr	r1, .L435+40	@ tmp238,
 5406 00fc 924B     		ldr	r3, .L435+28	@ tmp239,
 5407 00fe 0922     		movs	r2, #9	@,
 5408 0100 1800     		movs	r0, r3	@, tmp239
 5409 0102 FFF7FEFF 		bl	strncmp	@
 5410 0106 031E     		subs	r3, r0, #0	@ D.8037,,
 5411 0108 04D1     		bne	.L387	@,
2012:src/sim900_800.c **** 				{
2013:src/sim900_800.c **** /*					GSMConfigGPRSState += 10;
2014:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2015:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2016:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2017:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2018:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2019:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2020:src/sim900_800.c **** */
2021:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5412              		.loc 1 2021 0
 5413 010a 884B     		ldr	r3, .L435	@ tmp240,
 5414 010c 0022     		movs	r2, #0	@ tmp241,
 5415 010e 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigGPRSState
2022:src/sim900_800.c **** 					return 2;
 5416              		.loc 1 2022 0
 5417 0110 0223     		movs	r3, #2	@ D.8036,
 5418 0112 CAE2     		b	.L382	@
 5419              	.L387:
2023:src/sim900_800.c **** 				}
2024:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
2025:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 5420              		.loc 1 2025 0
 5421 0114 9049     		ldr	r1, .L435+44	@ tmp243,
 5422 0116 8C4B     		ldr	r3, .L435+28	@ tmp244,
 5423 0118 0E22     		movs	r2, #14	@,
 5424 011a 1800     		movs	r0, r3	@, tmp244
 5425 011c FFF7FEFF 		bl	strncmp	@
 5426 0120 031E     		subs	r3, r0, #0	@ D.8037,,
 5427 0122 04D1     		bne	.L388	@,
2026:src/sim900_800.c **** 				{
2027:src/sim900_800.c **** 					//GSMConfigGPRSState -= 1;
2028:src/sim900_800.c **** 					//GSMConfigGPRSflag = 1;
2029:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5428              		.loc 1 2029 0
 5429 0124 814B     		ldr	r3, .L435	@ tmp245,
 5430 0126 0022     		movs	r2, #0	@ tmp246,
 5431 0128 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigGPRSState
2030:src/sim900_800.c **** 					return 2;
 5432              		.loc 1 2030 0
 5433 012a 0223     		movs	r3, #2	@ D.8036,
 5434 012c BDE2     		b	.L382	@
ARM GAS  /tmp/ccNuUijR.s 			page 135


 5435              	.L388:
2031:src/sim900_800.c **** 				}
2032:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
2033:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 5436              		.loc 1 2033 0
 5437 012e 8B49     		ldr	r1, .L435+48	@ tmp248,
 5438 0130 854B     		ldr	r3, .L435+28	@ tmp249,
 5439 0132 0A22     		movs	r2, #10	@,
 5440 0134 1800     		movs	r0, r3	@, tmp249
 5441 0136 FFF7FEFF 		bl	strncmp	@
 5442 013a 031E     		subs	r3, r0, #0	@ D.8037,,
 5443 013c 04D1     		bne	.L389	@,
2034:src/sim900_800.c **** 				{
2035:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5444              		.loc 1 2035 0
 5445 013e 7B4B     		ldr	r3, .L435	@ tmp250,
 5446 0140 0022     		movs	r2, #0	@ tmp251,
 5447 0142 1A70     		strb	r2, [r3]	@ tmp252, GSMConfigGPRSState
2036:src/sim900_800.c **** 					return 2;
 5448              		.loc 1 2036 0
 5449 0144 0223     		movs	r3, #2	@ D.8036,
 5450 0146 B0E2     		b	.L382	@
 5451              	.L389:
2037:src/sim900_800.c **** 				}
2038:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
2039:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
2040:src/sim900_800.c **** 				{
2041:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
2042:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2043:src/sim900_800.c **** 				}
2044:src/sim900_800.c **** */
2045:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
2046:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 5452              		.loc 1 2046 0
 5453 0148 8549     		ldr	r1, .L435+52	@ tmp253,
 5454 014a 7F4B     		ldr	r3, .L435+28	@ tmp254,
 5455 014c 0A22     		movs	r2, #10	@,
 5456 014e 1800     		movs	r0, r3	@, tmp254
 5457 0150 FFF7FEFF 		bl	strncmp	@
 5458 0154 031E     		subs	r3, r0, #0	@ D.8037,,
 5459 0156 04D1     		bne	.L390	@,
2047:src/sim900_800.c **** 				{
2048:src/sim900_800.c **** 					/*	GSMConfigGPRSState += 10;
2049:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2050:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2051:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2052:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2053:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2054:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2055:src/sim900_800.c **** 					*/
2056:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5460              		.loc 1 2056 0
 5461 0158 744B     		ldr	r3, .L435	@ tmp255,
 5462 015a 0022     		movs	r2, #0	@ tmp256,
 5463 015c 1A70     		strb	r2, [r3]	@ tmp257, GSMConfigGPRSState
2057:src/sim900_800.c **** 					return 2;
 5464              		.loc 1 2057 0
ARM GAS  /tmp/ccNuUijR.s 			page 136


 5465 015e 0223     		movs	r3, #2	@ D.8036,
 5466 0160 A3E2     		b	.L382	@
 5467              	.L390:
2058:src/sim900_800.c **** 				}
2059:src/sim900_800.c **** 
2060:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 5468              		.loc 1 2060 0
 5469 0162 8049     		ldr	r1, .L435+56	@ tmp258,
 5470 0164 784B     		ldr	r3, .L435+28	@ tmp259,
 5471 0166 0922     		movs	r2, #9	@,
 5472 0168 1800     		movs	r0, r3	@, tmp259
 5473 016a FFF7FEFF 		bl	strncmp	@
 5474 016e 031E     		subs	r3, r0, #0	@ D.8037,,
 5475 0170 04D1     		bne	.L391	@,
2061:src/sim900_800.c **** 				{
2062:src/sim900_800.c **** 					/*GSMConfigGPRSState += 11;
2063:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2064:src/sim900_800.c **** 					*/
2065:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5476              		.loc 1 2065 0
 5477 0172 6E4B     		ldr	r3, .L435	@ tmp260,
 5478 0174 0022     		movs	r2, #0	@ tmp261,
 5479 0176 1A70     		strb	r2, [r3]	@ tmp262, GSMConfigGPRSState
2066:src/sim900_800.c **** 					return 2;
 5480              		.loc 1 2066 0
 5481 0178 0223     		movs	r3, #2	@ D.8036,
 5482 017a 96E2     		b	.L382	@
 5483              	.L391:
2067:src/sim900_800.c **** 				}
2068:src/sim900_800.c **** 
2069:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 5484              		.loc 1 2069 0
 5485 017c 7A49     		ldr	r1, .L435+60	@ tmp263,
 5486 017e 724B     		ldr	r3, .L435+28	@ tmp264,
 5487 0180 0922     		movs	r2, #9	@,
 5488 0182 1800     		movs	r0, r3	@, tmp264
 5489 0184 FFF7FEFF 		bl	strncmp	@
 5490 0188 031E     		subs	r3, r0, #0	@ D.8037,,
 5491 018a 00D0     		beq	.LCB4550	@
 5492 018c 6EE2     		b	.L424	@long jump	@
 5493              	.LCB4550:
2070:src/sim900_800.c **** 				{
2071:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 5494              		.loc 1 2071 0
 5495 018e 674B     		ldr	r3, .L435	@ tmp265,
 5496 0190 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5497 0192 0D33     		adds	r3, r3, #13	@ tmp266,
 5498 0194 DAB2     		uxtb	r2, r3	@ D.8036, tmp266
 5499 0196 654B     		ldr	r3, .L435	@ tmp267,
 5500 0198 1A70     		strb	r2, [r3]	@ tmp268, GSMConfigGPRSState
2072:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5501              		.loc 1 2072 0
 5502 019a 674B     		ldr	r3, .L435+12	@ tmp269,
 5503 019c 0122     		movs	r2, #1	@ tmp270,
 5504 019e 1A70     		strb	r2, [r3]	@ tmp271, GSMConfigGPRSflag
2073:src/sim900_800.c **** 				}
2074:src/sim900_800.c **** 			}
ARM GAS  /tmp/ccNuUijR.s 			page 137


2075:src/sim900_800.c **** 			break;
 5505              		.loc 1 2075 0
 5506 01a0 64E2     		b	.L424	@
 5507              	.L366:
2076:src/sim900_800.c **** 
2077:src/sim900_800.c **** 		case 4:
2078:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5508              		.loc 1 2078 0
 5509 01a2 1724     		movs	r4, #23	@ tmp272,
 5510 01a4 6C44     		add	r4, r4, sp	@ tmp272,
 5511 01a6 654B     		ldr	r3, .L435+16	@ tmp273,
 5512 01a8 7048     		ldr	r0, .L435+64	@ tmp274,
 5513 01aa 0122     		movs	r2, #1	@,
 5514 01ac 3221     		movs	r1, #50	@,
 5515 01ae FFF7FEFF 		bl	GSMSendCommand	@
 5516 01b2 0300     		movs	r3, r0	@ tmp275,
 5517 01b4 2370     		strb	r3, [r4]	@ tmp277, i
2079:src/sim900_800.c **** 
2080:src/sim900_800.c **** 			if (i == 2)
 5518              		.loc 1 2080 0
 5519 01b6 1723     		movs	r3, #23	@ tmp278,
 5520 01b8 6B44     		add	r3, r3, sp	@ tmp278,
 5521 01ba 1B78     		ldrb	r3, [r3]	@ tmp279, i
 5522 01bc 022B     		cmp	r3, #2	@ tmp279,
 5523 01be 13D1     		bne	.L392	@,
2081:src/sim900_800.c **** 			{
2082:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN: 
 5524              		.loc 1 2082 0
 5525 01c0 6B49     		ldr	r1, .L435+68	@ tmp280,
 5526 01c2 5E4B     		ldr	r3, .L435+16	@ tmp281,
 5527 01c4 0C22     		movs	r2, #12	@,
 5528 01c6 1800     		movs	r0, r3	@, tmp281
 5529 01c8 FFF7FEFF 		bl	strncmp	@
 5530 01cc 031E     		subs	r3, r0, #0	@ D.8037,,
 5531 01ce 06D1     		bne	.L393	@,
2083:src/sim900_800.c **** 				{
2084:src/sim900_800.c **** 					GSMConfigGPRSState++;
 5532              		.loc 1 2084 0
 5533 01d0 564B     		ldr	r3, .L435	@ tmp282,
 5534 01d2 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5535 01d4 0133     		adds	r3, r3, #1	@ tmp283,
 5536 01d6 DAB2     		uxtb	r2, r3	@ D.8036, tmp283
 5537 01d8 544B     		ldr	r3, .L435	@ tmp284,
 5538 01da 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigGPRSState
 5539 01dc 04E0     		b	.L392	@
 5540              	.L393:
2085:src/sim900_800.c **** 				}
2086:src/sim900_800.c **** 				else
2087:src/sim900_800.c **** 				{
2088:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5541              		.loc 1 2088 0
 5542 01de 534B     		ldr	r3, .L435	@ tmp286,
 5543 01e0 0022     		movs	r2, #0	@ tmp287,
 5544 01e2 1A70     		strb	r2, [r3]	@ tmp288, GSMConfigGPRSState
2089:src/sim900_800.c **** 					return 3;
 5545              		.loc 1 2089 0
 5546 01e4 0323     		movs	r3, #3	@ D.8036,
ARM GAS  /tmp/ccNuUijR.s 			page 138


 5547 01e6 60E2     		b	.L382	@
 5548              	.L392:
2090:src/sim900_800.c **** 				}
2091:src/sim900_800.c **** 			}
2092:src/sim900_800.c **** 
2093:src/sim900_800.c **** 			if (i > 2)
 5549              		.loc 1 2093 0
 5550 01e8 1723     		movs	r3, #23	@ tmp289,
 5551 01ea 6B44     		add	r3, r3, sp	@ tmp289,
 5552 01ec 1B78     		ldrb	r3, [r3]	@ tmp290, i
 5553 01ee 022B     		cmp	r3, #2	@ tmp290,
 5554 01f0 00D8     		bhi	.LCB4608	@
 5555 01f2 3DE2     		b	.L425	@long jump	@
 5556              	.LCB4608:
2094:src/sim900_800.c **** 			{
2095:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5557              		.loc 1 2095 0
 5558 01f4 4D4B     		ldr	r3, .L435	@ tmp291,
 5559 01f6 0022     		movs	r2, #0	@ tmp292,
 5560 01f8 1A70     		strb	r2, [r3]	@ tmp293, GSMConfigGPRSState
2096:src/sim900_800.c **** 				return 3;
 5561              		.loc 1 2096 0
 5562 01fa 0323     		movs	r3, #3	@ D.8036,
 5563 01fc 55E2     		b	.L382	@
 5564              	.L367:
2097:src/sim900_800.c **** 			}
2098:src/sim900_800.c **** 			break;
2099:src/sim900_800.c **** 
2100:src/sim900_800.c **** 		case 5:
2101:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5565              		.loc 1 2101 0
 5566 01fe 1724     		movs	r4, #23	@ tmp294,
 5567 0200 6C44     		add	r4, r4, sp	@ tmp294,
 5568 0202 4E4B     		ldr	r3, .L435+16	@ tmp295,
 5569 0204 5B48     		ldr	r0, .L435+72	@ tmp296,
 5570 0206 0122     		movs	r2, #1	@,
 5571 0208 3221     		movs	r1, #50	@,
 5572 020a FFF7FEFF 		bl	GSMSendCommand	@
 5573 020e 0300     		movs	r3, r0	@ tmp297,
 5574 0210 2370     		strb	r3, [r4]	@ tmp299, i
2102:src/sim900_800.c **** 
2103:src/sim900_800.c **** 			if (i == 2)
 5575              		.loc 1 2103 0
 5576 0212 1723     		movs	r3, #23	@ tmp300,
 5577 0214 6B44     		add	r3, r3, sp	@ tmp300,
 5578 0216 1B78     		ldrb	r3, [r3]	@ tmp301, i
 5579 0218 022B     		cmp	r3, #2	@ tmp301,
 5580 021a 13D1     		bne	.L395	@,
2104:src/sim900_800.c **** 			{
2105:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 5581              		.loc 1 2105 0
 5582 021c 5649     		ldr	r1, .L435+76	@ tmp302,
 5583 021e 474B     		ldr	r3, .L435+16	@ tmp303,
 5584 0220 0A22     		movs	r2, #10	@,
 5585 0222 1800     		movs	r0, r3	@, tmp303
 5586 0224 FFF7FEFF 		bl	strncmp	@
 5587 0228 031E     		subs	r3, r0, #0	@ D.8037,,
ARM GAS  /tmp/ccNuUijR.s 			page 139


 5588 022a 06D1     		bne	.L396	@,
2106:src/sim900_800.c **** 				{
2107:src/sim900_800.c **** 					GSMConfigGPRSState++;
 5589              		.loc 1 2107 0
 5590 022c 3F4B     		ldr	r3, .L435	@ tmp304,
 5591 022e 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5592 0230 0133     		adds	r3, r3, #1	@ tmp305,
 5593 0232 DAB2     		uxtb	r2, r3	@ D.8036, tmp305
 5594 0234 3D4B     		ldr	r3, .L435	@ tmp306,
 5595 0236 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSState
 5596 0238 04E0     		b	.L395	@
 5597              	.L396:
2108:src/sim900_800.c **** 				}
2109:src/sim900_800.c **** 				else
2110:src/sim900_800.c **** 				{
2111:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5598              		.loc 1 2111 0
 5599 023a 3C4B     		ldr	r3, .L435	@ tmp308,
 5600 023c 0022     		movs	r2, #0	@ tmp309,
 5601 023e 1A70     		strb	r2, [r3]	@ tmp310, GSMConfigGPRSState
2112:src/sim900_800.c **** 					return 3;
 5602              		.loc 1 2112 0
 5603 0240 0323     		movs	r3, #3	@ D.8036,
 5604 0242 32E2     		b	.L382	@
 5605              	.L395:
2113:src/sim900_800.c **** 				}
2114:src/sim900_800.c **** 			}
2115:src/sim900_800.c **** 
2116:src/sim900_800.c **** 			if (i > 2)
 5606              		.loc 1 2116 0
 5607 0244 1723     		movs	r3, #23	@ tmp311,
 5608 0246 6B44     		add	r3, r3, sp	@ tmp311,
 5609 0248 1B78     		ldrb	r3, [r3]	@ tmp312, i
 5610 024a 022B     		cmp	r3, #2	@ tmp312,
 5611 024c 00D8     		bhi	.LCB4661	@
 5612 024e 11E2     		b	.L426	@long jump	@
 5613              	.LCB4661:
2117:src/sim900_800.c **** 			{
2118:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5614              		.loc 1 2118 0
 5615 0250 364B     		ldr	r3, .L435	@ tmp313,
 5616 0252 0022     		movs	r2, #0	@ tmp314,
 5617 0254 1A70     		strb	r2, [r3]	@ tmp315, GSMConfigGPRSState
2119:src/sim900_800.c **** 				return 3;
 5618              		.loc 1 2119 0
 5619 0256 0323     		movs	r3, #3	@ D.8036,
 5620 0258 27E2     		b	.L382	@
 5621              	.L368:
2120:src/sim900_800.c **** 			}
2121:src/sim900_800.c **** 			break;
2122:src/sim900_800.c **** 		case 6:
2123:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5622              		.loc 1 2123 0
 5623 025a 1724     		movs	r4, #23	@ tmp316,
 5624 025c 6C44     		add	r4, r4, sp	@ tmp316,
 5625 025e 374B     		ldr	r3, .L435+16	@ tmp317,
 5626 0260 4648     		ldr	r0, .L435+80	@ tmp318,
ARM GAS  /tmp/ccNuUijR.s 			page 140


 5627 0262 0122     		movs	r2, #1	@,
 5628 0264 3221     		movs	r1, #50	@,
 5629 0266 FFF7FEFF 		bl	GSMSendCommand	@
 5630 026a 0300     		movs	r3, r0	@ tmp319,
 5631 026c 2370     		strb	r3, [r4]	@ tmp321, i
2124:src/sim900_800.c **** 
2125:src/sim900_800.c **** 			if (i == 2)
 5632              		.loc 1 2125 0
 5633 026e 1723     		movs	r3, #23	@ tmp322,
 5634 0270 6B44     		add	r3, r3, sp	@ tmp322,
 5635 0272 1B78     		ldrb	r3, [r3]	@ tmp323, i
 5636 0274 022B     		cmp	r3, #2	@ tmp323,
 5637 0276 2DD1     		bne	.L398	@,
2126:src/sim900_800.c **** 			{
2127:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 5638              		.loc 1 2127 0
 5639 0278 4149     		ldr	r1, .L435+84	@ tmp324,
 5640 027a 304B     		ldr	r3, .L435+16	@ tmp325,
 5641 027c 0522     		movs	r2, #5	@,
 5642 027e 1800     		movs	r0, r3	@, tmp325
 5643 0280 FFF7FEFF 		bl	strncmp	@
 5644 0284 031E     		subs	r3, r0, #0	@ D.8037,,
 5645 0286 20D1     		bne	.L399	@,
2128:src/sim900_800.c **** 				{
2129:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 5646              		.loc 1 2129 0
 5647 0288 2C4B     		ldr	r3, .L435+16	@ tmp326,
 5648 028a 9B79     		ldrb	r3, [r3, #6]	@ D.8036,
 5649 028c 303B     		subs	r3, r3, #48	@ D.8037,
 5650 028e DBB2     		uxtb	r3, r3	@ D.8038, D.8037
 5651 0290 1A1C     		adds	r2, r3, #0	@ tmp328, tmp327
 5652 0292 9200     		lsls	r2, r2, #2	@ tmp329, tmp328,
 5653 0294 D318     		adds	r3, r2, r3	@ tmp331, tmp330, tmp327
 5654 0296 DB18     		adds	r3, r3, r3	@ tmp333, tmp332, tmp332
 5655 0298 DAB2     		uxtb	r2, r3	@ D.8038, tmp331
 5656 029a 284B     		ldr	r3, .L435+16	@ tmp334,
 5657 029c DB79     		ldrb	r3, [r3, #7]	@ D.8036,
 5658 029e D318     		adds	r3, r2, r3	@ tmp335, D.8038, D.8036
 5659 02a0 DBB2     		uxtb	r3, r3	@ D.8038, tmp335
 5660 02a2 303B     		subs	r3, r3, #48	@ tmp336,
 5661 02a4 DAB2     		uxtb	r2, r3	@ D.8038, tmp336
 5662 02a6 374B     		ldr	r3, .L435+88	@ tmp337,
 5663 02a8 1A70     		strb	r2, [r3]	@ tmp338, GPRSrssi
2130:src/sim900_800.c **** 
2131:src/sim900_800.c **** 						if (GPRSrssi != 99)
 5664              		.loc 1 2131 0
 5665 02aa 364B     		ldr	r3, .L435+88	@ tmp339,
 5666 02ac 1B78     		ldrb	r3, [r3]	@ D.8038, GPRSrssi
 5667 02ae 632B     		cmp	r3, #99	@ D.8038,
 5668 02b0 06D0     		beq	.L400	@,
2132:src/sim900_800.c **** 							GSMConfigGPRSState++;
 5669              		.loc 1 2132 0
 5670 02b2 1E4B     		ldr	r3, .L435	@ tmp340,
 5671 02b4 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5672 02b6 0133     		adds	r3, r3, #1	@ tmp341,
 5673 02b8 DAB2     		uxtb	r2, r3	@ D.8036, tmp341
 5674 02ba 1C4B     		ldr	r3, .L435	@ tmp342,
ARM GAS  /tmp/ccNuUijR.s 			page 141


 5675 02bc 1A70     		strb	r2, [r3]	@ tmp343, GSMConfigGPRSState
 5676 02be 09E0     		b	.L398	@
 5677              	.L400:
2133:src/sim900_800.c **** 						else
2134:src/sim900_800.c **** 						{
2135:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 5678              		.loc 1 2135 0
 5679 02c0 1A4B     		ldr	r3, .L435	@ tmp344,
 5680 02c2 0022     		movs	r2, #0	@ tmp345,
 5681 02c4 1A70     		strb	r2, [r3]	@ tmp346, GSMConfigGPRSState
2136:src/sim900_800.c **** 							return 20;
 5682              		.loc 1 2136 0
 5683 02c6 1423     		movs	r3, #20	@ D.8036,
 5684 02c8 EFE1     		b	.L382	@
 5685              	.L399:
2137:src/sim900_800.c **** 						}
2138:src/sim900_800.c **** 				}
2139:src/sim900_800.c **** 				else
2140:src/sim900_800.c **** 				{
2141:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5686              		.loc 1 2141 0
 5687 02ca 184B     		ldr	r3, .L435	@ tmp347,
 5688 02cc 0022     		movs	r2, #0	@ tmp348,
 5689 02ce 1A70     		strb	r2, [r3]	@ tmp349, GSMConfigGPRSState
2142:src/sim900_800.c **** 					return 3;
 5690              		.loc 1 2142 0
 5691 02d0 0323     		movs	r3, #3	@ D.8036,
 5692 02d2 EAE1     		b	.L382	@
 5693              	.L398:
2143:src/sim900_800.c **** 				}
2144:src/sim900_800.c **** 			}
2145:src/sim900_800.c **** 
2146:src/sim900_800.c **** 			if (i > 2)
 5694              		.loc 1 2146 0
 5695 02d4 1723     		movs	r3, #23	@ tmp350,
 5696 02d6 6B44     		add	r3, r3, sp	@ tmp350,
 5697 02d8 1B78     		ldrb	r3, [r3]	@ tmp351, i
 5698 02da 022B     		cmp	r3, #2	@ tmp351,
 5699 02dc 00D8     		bhi	.LCB4743	@
 5700 02de CBE1     		b	.L427	@long jump	@
 5701              	.LCB4743:
2147:src/sim900_800.c **** 			{
2148:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5702              		.loc 1 2148 0
 5703 02e0 124B     		ldr	r3, .L435	@ tmp352,
 5704 02e2 0022     		movs	r2, #0	@ tmp353,
 5705 02e4 1A70     		strb	r2, [r3]	@ tmp354, GSMConfigGPRSState
2149:src/sim900_800.c **** 				return 3;
 5706              		.loc 1 2149 0
 5707 02e6 0323     		movs	r3, #3	@ D.8036,
 5708 02e8 DFE1     		b	.L382	@
 5709              	.L369:
2150:src/sim900_800.c **** 			}
2151:src/sim900_800.c **** 			break;
2152:src/sim900_800.c **** 		case 7:
2153:src/sim900_800.c **** 
2154:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
ARM GAS  /tmp/ccNuUijR.s 			page 142


 5710              		.loc 1 2154 0
 5711 02ea 1724     		movs	r4, #23	@ tmp355,
 5712 02ec 6C44     		add	r4, r4, sp	@ tmp355,
 5713 02ee 134B     		ldr	r3, .L435+16	@ tmp356,
 5714 02f0 2548     		ldr	r0, .L435+92	@ tmp357,
 5715 02f2 0022     		movs	r2, #0	@,
 5716 02f4 3221     		movs	r1, #50	@,
 5717 02f6 FFF7FEFF 		bl	GSMSendCommand	@
 5718 02fa 0300     		movs	r3, r0	@ tmp358,
 5719 02fc 2370     		strb	r3, [r4]	@ tmp360, i
2155:src/sim900_800.c **** 
2156:src/sim900_800.c **** 			if (i == 2)
 5720              		.loc 1 2156 0
 5721 02fe 1723     		movs	r3, #23	@ tmp361,
 5722 0300 6B44     		add	r3, r3, sp	@ tmp361,
 5723 0302 1B78     		ldrb	r3, [r3]	@ tmp362, i
 5724 0304 022B     		cmp	r3, #2	@ tmp362,
 5725 0306 05D1     		bne	.L402	@,
2157:src/sim900_800.c **** 			{
2158:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5726              		.loc 1 2158 0
 5727 0308 084B     		ldr	r3, .L435	@ tmp363,
 5728 030a 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5729 030c 0133     		adds	r3, r3, #1	@ tmp364,
 5730 030e DAB2     		uxtb	r2, r3	@ D.8036, tmp364
 5731 0310 064B     		ldr	r3, .L435	@ tmp365,
 5732 0312 1A70     		strb	r2, [r3]	@ tmp366, GSMConfigGPRSState
 5733              	.L402:
2159:src/sim900_800.c **** 			}
2160:src/sim900_800.c **** 
2161:src/sim900_800.c **** 			if (i > 2)
 5734              		.loc 1 2161 0
 5735 0314 1723     		movs	r3, #23	@ tmp367,
 5736 0316 6B44     		add	r3, r3, sp	@ tmp367,
 5737 0318 1B78     		ldrb	r3, [r3]	@ tmp368, i
 5738 031a 022B     		cmp	r3, #2	@ tmp368,
 5739 031c 00D8     		bhi	.LCB4778	@
 5740 031e ADE1     		b	.L428	@long jump	@
 5741              	.LCB4778:
2162:src/sim900_800.c **** 			{
2163:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5742              		.loc 1 2163 0
 5743 0320 024B     		ldr	r3, .L435	@ tmp369,
 5744 0322 0022     		movs	r2, #0	@ tmp370,
 5745 0324 1A70     		strb	r2, [r3]	@ tmp371, GSMConfigGPRSState
2164:src/sim900_800.c **** 				return 3;
 5746              		.loc 1 2164 0
 5747 0326 0323     		movs	r3, #3	@ D.8036,
 5748 0328 BFE1     		b	.L382	@
 5749              	.L436:
 5750 032a C046     		.align	2
 5751              	.L435:
 5752 032c 00000000 		.word	GSMConfigGPRSState
 5753 0330 00000000 		.word	.L362
 5754 0334 00000000 		.word	GSMConfigGPRSTimeOut
 5755 0338 00000000 		.word	GSMConfigGPRSflag
 5756 033c 00000000 		.word	GSMbuffRtaCommand
ARM GAS  /tmp/ccNuUijR.s 			page 143


 5757 0340 FC000000 		.word	.LC106
 5758 0344 00000000 		.word	GSM_IPINITIAL
 5759 0348 00000000 		.word	GSMbuffStatus
 5760 034c 00000000 		.word	GSM_IPSTART
 5761 0350 00000000 		.word	GSM_IPGPRSACT
 5762 0354 00000000 		.word	GSM_IPSTATUS
 5763 0358 00000000 		.word	GSM_IPCONNECTING
 5764 035c 00000000 		.word	GSM_IPCONNOK
 5765 0360 00000000 		.word	GSM_IPCONNCLOSE
 5766 0364 24010000 		.word	.LC122
 5767 0368 30010000 		.word	.LC124
 5768 036c 3C010000 		.word	.LC126
 5769 0370 48010000 		.word	.LC128
 5770 0374 68010000 		.word	.LC132
 5771 0378 74010000 		.word	.LC134
 5772 037c 80010000 		.word	.LC136
 5773 0380 8C010000 		.word	.LC138
 5774 0384 00000000 		.word	GPRSrssi
 5775 0388 94010000 		.word	.LC141
 5776              	.L370:
2165:src/sim900_800.c **** 			}
2166:src/sim900_800.c **** 			break;
2167:src/sim900_800.c **** 
2168:src/sim900_800.c **** 		case 8:
2169:src/sim900_800.c **** 
2170:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5777              		.loc 1 2170 0
 5778 038c 1724     		movs	r4, #23	@ tmp372,
 5779 038e 6C44     		add	r4, r4, sp	@ tmp372,
 5780 0390 C74B     		ldr	r3, .L437	@ tmp373,
 5781 0392 C848     		ldr	r0, .L437+4	@ tmp374,
 5782 0394 0122     		movs	r2, #1	@,
 5783 0396 3221     		movs	r1, #50	@,
 5784 0398 FFF7FEFF 		bl	GSMSendCommand	@
 5785 039c 0300     		movs	r3, r0	@ tmp375,
 5786 039e 2370     		strb	r3, [r4]	@ tmp377, i
2171:src/sim900_800.c **** 
2172:src/sim900_800.c **** 			if (i == 2)
 5787              		.loc 1 2172 0
 5788 03a0 1723     		movs	r3, #23	@ tmp378,
 5789 03a2 6B44     		add	r3, r3, sp	@ tmp378,
 5790 03a4 1B78     		ldrb	r3, [r3]	@ tmp379, i
 5791 03a6 022B     		cmp	r3, #2	@ tmp379,
 5792 03a8 38D1     		bne	.L404	@,
2173:src/sim900_800.c **** 			{
2174:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 5793              		.loc 1 2174 0
 5794 03aa C349     		ldr	r1, .L437+8	@ tmp380,
 5795 03ac C04B     		ldr	r3, .L437	@ tmp381,
 5796 03ae 0722     		movs	r2, #7	@,
 5797 03b0 1800     		movs	r0, r3	@, tmp381
 5798 03b2 FFF7FEFF 		bl	strncmp	@
 5799 03b6 031E     		subs	r3, r0, #0	@ D.8037,,
 5800 03b8 30D1     		bne	.L404	@,
2175:src/sim900_800.c **** 				{
2176:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 5801              		.loc 1 2176 0
ARM GAS  /tmp/ccNuUijR.s 			page 144


 5802 03ba BD4B     		ldr	r3, .L437	@ tmp382,
 5803 03bc 1B7A     		ldrb	r3, [r3, #8]	@ D.8036,
 5804 03be 312B     		cmp	r3, #49	@ D.8036,
 5805 03c0 23D1     		bne	.L405	@,
2177:src/sim900_800.c **** 					{
2178:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 5806              		.loc 1 2178 0
 5807 03c2 BE4B     		ldr	r3, .L437+12	@ tmp383,
 5808 03c4 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5809 03c6 0133     		adds	r3, r3, #1	@ tmp384,
 5810 03c8 DAB2     		uxtb	r2, r3	@ D.8036, tmp384
 5811 03ca BC4B     		ldr	r3, .L437+12	@ tmp385,
 5812 03cc 1A70     		strb	r2, [r3]	@ tmp386, GSMConfigGPRSState
2179:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 5813              		.loc 1 2179 0
 5814 03ce BC4A     		ldr	r2, .L437+16	@ tmp387,
 5815 03d0 BC4B     		ldr	r3, .L437+20	@ tmp388,
 5816 03d2 1000     		movs	r0, r2	@ tmp389, tmp387
 5817 03d4 1900     		movs	r1, r3	@ tmp390, tmp388
 5818 03d6 1423     		movs	r3, #20	@ tmp391,
 5819 03d8 1A00     		movs	r2, r3	@, tmp391
 5820 03da FFF7FEFF 		bl	memcpy	@
2180:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 5821              		.loc 1 2180 0
 5822 03de 029A     		ldr	r2, [sp, #8]	@ tmp394, ptrAPN
 5823 03e0 B74B     		ldr	r3, .L437+16	@ tmp395,
 5824 03e2 1100     		movs	r1, r2	@, tmp394
 5825 03e4 1800     		movs	r0, r3	@, tmp395
 5826 03e6 FFF7FEFF 		bl	strcat	@
2181:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 5827              		.loc 1 2181 0
 5828 03ea B54B     		ldr	r3, .L437+16	@ tmp396,
 5829 03ec 1800     		movs	r0, r3	@, tmp396
 5830 03ee FFF7FEFF 		bl	strlen	@
 5831 03f2 0300     		movs	r3, r0	@ tmp397,
 5832 03f4 1A00     		movs	r2, r3	@ D.8039, tmp398
 5833 03f6 B24B     		ldr	r3, .L437+16	@ tmp399,
 5834 03f8 D218     		adds	r2, r2, r3	@ D.8040, D.8039, tmp399
 5835 03fa B34B     		ldr	r3, .L437+24	@ tmp400,
 5836 03fc 1000     		movs	r0, r2	@ tmp401, D.8040
 5837 03fe 1900     		movs	r1, r3	@ tmp402, tmp400
 5838 0400 0423     		movs	r3, #4	@ tmp403,
 5839 0402 1A00     		movs	r2, r3	@, tmp403
 5840 0404 FFF7FEFF 		bl	memcpy	@
 5841 0408 08E0     		b	.L404	@
 5842              	.L405:
2182:src/sim900_800.c **** 					}
2183:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 5843              		.loc 1 2183 0
 5844 040a A94B     		ldr	r3, .L437	@ tmp406,
 5845 040c 1B7A     		ldrb	r3, [r3, #8]	@ D.8036,
 5846 040e 302B     		cmp	r3, #48	@ D.8036,
 5847 0410 04D1     		bne	.L404	@,
2184:src/sim900_800.c **** 					{
2185:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 5848              		.loc 1 2185 0
 5849 0412 AA4B     		ldr	r3, .L437+12	@ tmp407,
ARM GAS  /tmp/ccNuUijR.s 			page 145


 5850 0414 0022     		movs	r2, #0	@ tmp408,
 5851 0416 1A70     		strb	r2, [r3]	@ tmp409, GSMConfigGPRSState
2186:src/sim900_800.c **** 						return 3;
 5852              		.loc 1 2186 0
 5853 0418 0323     		movs	r3, #3	@ D.8036,
 5854 041a 46E1     		b	.L382	@
 5855              	.L404:
2187:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
2188:src/sim900_800.c **** 					}
2189:src/sim900_800.c **** 				}
2190:src/sim900_800.c **** 			}
2191:src/sim900_800.c **** 
2192:src/sim900_800.c **** 			if (i > 2)
 5856              		.loc 1 2192 0
 5857 041c 1723     		movs	r3, #23	@ tmp410,
 5858 041e 6B44     		add	r3, r3, sp	@ tmp410,
 5859 0420 1B78     		ldrb	r3, [r3]	@ tmp411, i
 5860 0422 022B     		cmp	r3, #2	@ tmp411,
 5861 0424 00D8     		bhi	.LCB4893	@
 5862 0426 2BE1     		b	.L429	@long jump	@
 5863              	.LCB4893:
2193:src/sim900_800.c **** 			{
2194:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5864              		.loc 1 2194 0
 5865 0428 A44B     		ldr	r3, .L437+12	@ tmp412,
 5866 042a 0022     		movs	r2, #0	@ tmp413,
 5867 042c 1A70     		strb	r2, [r3]	@ tmp414, GSMConfigGPRSState
2195:src/sim900_800.c **** 				return 3;
 5868              		.loc 1 2195 0
 5869 042e 0323     		movs	r3, #3	@ D.8036,
 5870 0430 3BE1     		b	.L382	@
 5871              	.L371:
2196:src/sim900_800.c **** 			}
2197:src/sim900_800.c **** 
2198:src/sim900_800.c **** 			break;
2199:src/sim900_800.c **** 
2200:src/sim900_800.c **** 		case 9:
2201:src/sim900_800.c **** 
2202:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 5872              		.loc 1 2202 0
 5873 0432 1724     		movs	r4, #23	@ tmp415,
 5874 0434 6C44     		add	r4, r4, sp	@ tmp415,
 5875 0436 9E4B     		ldr	r3, .L437	@ tmp416,
 5876 0438 A148     		ldr	r0, .L437+16	@ tmp417,
 5877 043a 0022     		movs	r2, #0	@,
 5878 043c 3221     		movs	r1, #50	@,
 5879 043e FFF7FEFF 		bl	GSMSendCommand	@
 5880 0442 0300     		movs	r3, r0	@ tmp418,
 5881 0444 2370     		strb	r3, [r4]	@ tmp420, i
2203:src/sim900_800.c **** 
2204:src/sim900_800.c **** 			if (i == 2)
 5882              		.loc 1 2204 0
 5883 0446 1723     		movs	r3, #23	@ tmp421,
 5884 0448 6B44     		add	r3, r3, sp	@ tmp421,
 5885 044a 1B78     		ldrb	r3, [r3]	@ tmp422, i
 5886 044c 022B     		cmp	r3, #2	@ tmp422,
 5887 044e 4CD1     		bne	.L407	@,
ARM GAS  /tmp/ccNuUijR.s 			page 146


2205:src/sim900_800.c **** 			{
2206:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5888              		.loc 1 2206 0
 5889 0450 9A4B     		ldr	r3, .L437+12	@ tmp423,
 5890 0452 1B78     		ldrb	r3, [r3]	@ D.8036, GSMConfigGPRSState
 5891 0454 0133     		adds	r3, r3, #1	@ tmp424,
 5892 0456 DAB2     		uxtb	r2, r3	@ D.8036, tmp424
 5893 0458 984B     		ldr	r3, .L437+12	@ tmp425,
 5894 045a 1A70     		strb	r2, [r3]	@ tmp426, GSMConfigGPRSState
2207:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 5895              		.loc 1 2207 0
 5896 045c 984A     		ldr	r2, .L437+16	@ tmp427,
 5897 045e 9B4B     		ldr	r3, .L437+28	@ tmp428,
 5898 0460 1000     		movs	r0, r2	@ tmp429, tmp427
 5899 0462 1900     		movs	r1, r3	@ tmp430, tmp428
 5900 0464 0A23     		movs	r3, #10	@ tmp431,
 5901 0466 1A00     		movs	r2, r3	@, tmp431
 5902 0468 FFF7FEFF 		bl	memcpy	@
2208:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 5903              		.loc 1 2208 0
 5904 046c 029A     		ldr	r2, [sp, #8]	@ tmp434, ptrAPN
 5905 046e 944B     		ldr	r3, .L437+16	@ tmp435,
 5906 0470 1100     		movs	r1, r2	@, tmp434
 5907 0472 1800     		movs	r0, r3	@, tmp435
 5908 0474 FFF7FEFF 		bl	strcat	@
2209:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 5909              		.loc 1 2209 0
 5910 0478 914B     		ldr	r3, .L437+16	@ tmp436,
 5911 047a 1800     		movs	r0, r3	@, tmp436
 5912 047c FFF7FEFF 		bl	strlen	@
 5913 0480 0300     		movs	r3, r0	@ tmp437,
 5914 0482 1A00     		movs	r2, r3	@ D.8039, tmp438
 5915 0484 8E4B     		ldr	r3, .L437+16	@ tmp439,
 5916 0486 D218     		adds	r2, r2, r3	@ D.8040, D.8039, tmp439
 5917 0488 914B     		ldr	r3, .L437+32	@ tmp440,
 5918 048a 1000     		movs	r0, r2	@ tmp441, D.8040
 5919 048c 1900     		movs	r1, r3	@ tmp442, tmp440
 5920 048e 0423     		movs	r3, #4	@ tmp443,
 5921 0490 1A00     		movs	r2, r3	@, tmp443
 5922 0492 FFF7FEFF 		bl	memcpy	@
2210:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 5923              		.loc 1 2210 0
 5924 0496 019A     		ldr	r2, [sp, #4]	@ tmp446, ptrUSER
 5925 0498 894B     		ldr	r3, .L437+16	@ tmp447,
 5926 049a 1100     		movs	r1, r2	@, tmp446
 5927 049c 1800     		movs	r0, r3	@, tmp447
 5928 049e FFF7FEFF 		bl	strcat	@
2211:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 5929              		.loc 1 2211 0
 5930 04a2 874B     		ldr	r3, .L437+16	@ tmp448,
 5931 04a4 1800     		movs	r0, r3	@, tmp448
 5932 04a6 FFF7FEFF 		bl	strlen	@
 5933 04aa 0300     		movs	r3, r0	@ tmp449,
 5934 04ac 1A00     		movs	r2, r3	@ D.8039, tmp450
 5935 04ae 844B     		ldr	r3, .L437+16	@ tmp451,
 5936 04b0 D218     		adds	r2, r2, r3	@ D.8040, D.8039, tmp451
 5937 04b2 874B     		ldr	r3, .L437+32	@ tmp452,
ARM GAS  /tmp/ccNuUijR.s 			page 147


 5938 04b4 1000     		movs	r0, r2	@ tmp453, D.8040
 5939 04b6 1900     		movs	r1, r3	@ tmp454, tmp452
 5940 04b8 0423     		movs	r3, #4	@ tmp455,
 5941 04ba 1A00     		movs	r2, r3	@, tmp455
 5942 04bc FFF7FEFF 		bl	memcpy	@
2212:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 5943              		.loc 1 2212 0
 5944 04c0 009A     		ldr	r2, [sp]	@ tmp458, ptrKEY
 5945 04c2 7F4B     		ldr	r3, .L437+16	@ tmp459,
 5946 04c4 1100     		movs	r1, r2	@, tmp458
 5947 04c6 1800     		movs	r0, r3	@, tmp459
 5948 04c8 FFF7FEFF 		bl	strcat	@
2213:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 5949              		.loc 1 2213 0
 5950 04cc 7C4B     		ldr	r3, .L437+16	@ tmp460,
 5951 04ce 1800     		movs	r0, r3	@, tmp460
 5952 04d0 FFF7FEFF 		bl	strlen	@
 5953 04d4 0300     		movs	r3, r0	@ tmp461,
 5954 04d6 1A00     		movs	r2, r3	@ D.8039, tmp462
 5955 04d8 794B     		ldr	r3, .L437+16	@ tmp463,
 5956 04da D218     		adds	r2, r2, r3	@ D.8040, D.8039, tmp463
 5957 04dc 7A4B     		ldr	r3, .L437+24	@ tmp464,
 5958 04de 1000     		movs	r0, r2	@ tmp465, D.8040
 5959 04e0 1900     		movs	r1, r3	@ tmp466, tmp464
 5960 04e2 0423     		movs	r3, #4	@ tmp467,
 5961 04e4 1A00     		movs	r2, r3	@, tmp467
 5962 04e6 FFF7FEFF 		bl	memcpy	@
 5963              	.L407:
2214:src/sim900_800.c **** 			}
2215:src/sim900_800.c **** 
2216:src/sim900_800.c **** 			if (i > 2)
 5964              		.loc 1 2216 0
 5965 04ea 1723     		movs	r3, #23	@ tmp470,
 5966 04ec 6B44     		add	r3, r3, sp	@ tmp470,
 5967 04ee 1B78     		ldrb	r3, [r3]	@ tmp471, i
 5968 04f0 022B     		cmp	r3, #2	@ tmp471,
 5969 04f2 00D8     		bhi	.LCB4989	@
 5970 04f4 C6E0     		b	.L430	@long jump	@
 5971              	.LCB4989:
2217:src/sim900_800.c **** 			{
2218:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5972              		.loc 1 2218 0
 5973 04f6 714B     		ldr	r3, .L437+12	@ tmp472,
 5974 04f8 0022     		movs	r2, #0	@ tmp473,
 5975 04fa 1A70     		strb	r2, [r3]	@ tmp474, GSMConfigGPRSState
2219:src/sim900_800.c **** 				return 3;
 5976              		.loc 1 2219 0
 5977 04fc 0323     		movs	r3, #3	@ D.8036,
 5978 04fe D4E0     		b	.L382	@
 5979              	.L372:
2220:src/sim900_800.c **** 			}
2221:src/sim900_800.c **** 			break;
2222:src/sim900_800.c **** 
2223:src/sim900_800.c **** 		case 10:
2224:src/sim900_800.c **** 
2225:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 5980              		.loc 1 2225 0
ARM GAS  /tmp/ccNuUijR.s 			page 148


 5981 0500 1724     		movs	r4, #23	@ tmp475,
 5982 0502 6C44     		add	r4, r4, sp	@ tmp475,
 5983 0504 6A4B     		ldr	r3, .L437	@ tmp476,
 5984 0506 6E48     		ldr	r0, .L437+16	@ tmp477,
 5985 0508 0022     		movs	r2, #0	@,
 5986 050a 3221     		movs	r1, #50	@,
 5987 050c FFF7FEFF 		bl	GSMSendCommand	@
 5988 0510 0300     		movs	r3, r0	@ tmp478,
 5989 0512 2370     		strb	r3, [r4]	@ tmp480, i
2226:src/sim900_800.c **** 
2227:src/sim900_800.c **** 			if (i == 2)
 5990              		.loc 1 2227 0
 5991 0514 1723     		movs	r3, #23	@ tmp481,
 5992 0516 6B44     		add	r3, r3, sp	@ tmp481,
 5993 0518 1B78     		ldrb	r3, [r3]	@ tmp482, i
 5994 051a 022B     		cmp	r3, #2	@ tmp482,
 5995 051c 02D1     		bne	.L409	@,
2228:src/sim900_800.c **** 			{
2229:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 5996              		.loc 1 2229 0
 5997 051e 674B     		ldr	r3, .L437+12	@ tmp483,
 5998 0520 0222     		movs	r2, #2	@ tmp484,
 5999 0522 1A70     		strb	r2, [r3]	@ tmp485, GSMConfigGPRSState
 6000              	.L409:
2230:src/sim900_800.c **** 			}
2231:src/sim900_800.c **** 
2232:src/sim900_800.c **** 			if (i > 2)
 6001              		.loc 1 2232 0
 6002 0524 1723     		movs	r3, #23	@ tmp486,
 6003 0526 6B44     		add	r3, r3, sp	@ tmp486,
 6004 0528 1B78     		ldrb	r3, [r3]	@ tmp487, i
 6005 052a 022B     		cmp	r3, #2	@ tmp487,
 6006 052c 00D8     		bhi	.LCB5021	@
 6007 052e ABE0     		b	.L431	@long jump	@
 6008              	.LCB5021:
2233:src/sim900_800.c **** 			{
2234:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6009              		.loc 1 2234 0
 6010 0530 624B     		ldr	r3, .L437+12	@ tmp488,
 6011 0532 0022     		movs	r2, #0	@ tmp489,
 6012 0534 1A70     		strb	r2, [r3]	@ tmp490, GSMConfigGPRSState
2235:src/sim900_800.c **** 				return 3;
 6013              		.loc 1 2235 0
 6014 0536 0323     		movs	r3, #3	@ D.8036,
 6015 0538 B7E0     		b	.L382	@
 6016              	.L373:
2236:src/sim900_800.c **** 			}
2237:src/sim900_800.c **** 			break;
2238:src/sim900_800.c **** 
2239:src/sim900_800.c **** 		case 11:
2240:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 6017              		.loc 1 2240 0
 6018 053a 1724     		movs	r4, #23	@ tmp491,
 6019 053c 6C44     		add	r4, r4, sp	@ tmp491,
 6020 053e 5C4B     		ldr	r3, .L437	@ tmp492,
 6021 0540 6448     		ldr	r0, .L437+36	@ tmp493,
 6022 0542 0022     		movs	r2, #0	@,
ARM GAS  /tmp/ccNuUijR.s 			page 149


 6023 0544 C821     		movs	r1, #200	@,
 6024 0546 FFF7FEFF 		bl	GSMSendCommand	@
 6025 054a 0300     		movs	r3, r0	@ tmp494,
 6026 054c 2370     		strb	r3, [r4]	@ tmp496, i
2241:src/sim900_800.c **** 
2242:src/sim900_800.c **** 			if (i == 2)
 6027              		.loc 1 2242 0
 6028 054e 1723     		movs	r3, #23	@ tmp497,
 6029 0550 6B44     		add	r3, r3, sp	@ tmp497,
 6030 0552 1B78     		ldrb	r3, [r3]	@ tmp498, i
 6031 0554 022B     		cmp	r3, #2	@ tmp498,
 6032 0556 02D1     		bne	.L411	@,
2243:src/sim900_800.c **** 			{
2244:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6033              		.loc 1 2244 0
 6034 0558 584B     		ldr	r3, .L437+12	@ tmp499,
 6035 055a 0222     		movs	r2, #2	@ tmp500,
 6036 055c 1A70     		strb	r2, [r3]	@ tmp501, GSMConfigGPRSState
 6037              	.L411:
2245:src/sim900_800.c **** 			}
2246:src/sim900_800.c **** 
2247:src/sim900_800.c **** 			if (i > 2)
 6038              		.loc 1 2247 0
 6039 055e 1723     		movs	r3, #23	@ tmp502,
 6040 0560 6B44     		add	r3, r3, sp	@ tmp502,
 6041 0562 1B78     		ldrb	r3, [r3]	@ tmp503, i
 6042 0564 022B     		cmp	r3, #2	@ tmp503,
 6043 0566 00D8     		bhi	.LCB5053	@
 6044 0568 90E0     		b	.L432	@long jump	@
 6045              	.LCB5053:
2248:src/sim900_800.c **** 			{
2249:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6046              		.loc 1 2249 0
 6047 056a 544B     		ldr	r3, .L437+12	@ tmp504,
 6048 056c 0022     		movs	r2, #0	@ tmp505,
 6049 056e 1A70     		strb	r2, [r3]	@ tmp506, GSMConfigGPRSState
2250:src/sim900_800.c **** 				return 3;
 6050              		.loc 1 2250 0
 6051 0570 0323     		movs	r3, #3	@ D.8036,
 6052 0572 9AE0     		b	.L382	@
 6053              	.L374:
2251:src/sim900_800.c **** 			}
2252:src/sim900_800.c **** 			break;
2253:src/sim900_800.c **** 
2254:src/sim900_800.c **** 		case 12:
2255:src/sim900_800.c **** 
2256:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 6054              		.loc 1 2256 0
 6055 0574 584B     		ldr	r3, .L437+40	@ tmp507,
 6056 0576 0322     		movs	r2, #3	@ tmp508,
 6057 0578 1A70     		strb	r2, [r3]	@ tmp509, GSMConfigGPRSflag
2257:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6058              		.loc 1 2257 0
 6059 057a 1724     		movs	r4, #23	@ tmp510,
 6060 057c 6C44     		add	r4, r4, sp	@ tmp510,
 6061 057e 4C4B     		ldr	r3, .L437	@ tmp511,
 6062 0580 5648     		ldr	r0, .L437+44	@ tmp512,
ARM GAS  /tmp/ccNuUijR.s 			page 150


 6063 0582 0022     		movs	r2, #0	@,
 6064 0584 3221     		movs	r1, #50	@,
 6065 0586 FFF7FEFF 		bl	GSMSendCommand	@
 6066 058a 0300     		movs	r3, r0	@ tmp513,
 6067 058c 2370     		strb	r3, [r4]	@ tmp515, i
2258:src/sim900_800.c **** 
2259:src/sim900_800.c **** 			if (i == 2)
 6068              		.loc 1 2259 0
 6069 058e 1723     		movs	r3, #23	@ tmp516,
 6070 0590 6B44     		add	r3, r3, sp	@ tmp516,
 6071 0592 1B78     		ldrb	r3, [r3]	@ tmp517, i
 6072 0594 022B     		cmp	r3, #2	@ tmp517,
 6073 0596 05D1     		bne	.L413	@,
2260:src/sim900_800.c **** 			{
2261:src/sim900_800.c **** 				GSMConfigGPRSState = 14;
 6074              		.loc 1 2261 0
 6075 0598 484B     		ldr	r3, .L437+12	@ tmp518,
 6076 059a 0E22     		movs	r2, #14	@ tmp519,
 6077 059c 1A70     		strb	r2, [r3]	@ tmp520, GSMConfigGPRSState
2262:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 6078              		.loc 1 2262 0
 6079 059e 4E4B     		ldr	r3, .L437+40	@ tmp521,
 6080 05a0 0122     		movs	r2, #1	@ tmp522,
 6081 05a2 1A70     		strb	r2, [r3]	@ tmp523, GSMConfigGPRSflag
 6082              	.L413:
2263:src/sim900_800.c **** 			}
2264:src/sim900_800.c **** 
2265:src/sim900_800.c **** 			if (i > 2)
 6083              		.loc 1 2265 0
 6084 05a4 1723     		movs	r3, #23	@ tmp524,
 6085 05a6 6B44     		add	r3, r3, sp	@ tmp524,
 6086 05a8 1B78     		ldrb	r3, [r3]	@ tmp525, i
 6087 05aa 022B     		cmp	r3, #2	@ tmp525,
 6088 05ac 00D8     		bhi	.LCB5091	@
 6089 05ae 6FE0     		b	.L433	@long jump	@
 6090              	.LCB5091:
2266:src/sim900_800.c **** 			{
2267:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6091              		.loc 1 2267 0
 6092 05b0 424B     		ldr	r3, .L437+12	@ tmp526,
 6093 05b2 0022     		movs	r2, #0	@ tmp527,
 6094 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMConfigGPRSState
2268:src/sim900_800.c **** 				return 3;
 6095              		.loc 1 2268 0
 6096 05b6 0323     		movs	r3, #3	@ D.8036,
 6097 05b8 77E0     		b	.L382	@
 6098              	.L375:
2269:src/sim900_800.c **** 			}
2270:src/sim900_800.c **** 			break;
2271:src/sim900_800.c **** 		case 13:
2272:src/sim900_800.c **** 			GSMConfigGPRSState = 2;
 6099              		.loc 1 2272 0
 6100 05ba 404B     		ldr	r3, .L437+12	@ tmp529,
 6101 05bc 0222     		movs	r2, #2	@ tmp530,
 6102 05be 1A70     		strb	r2, [r3]	@ tmp531, GSMConfigGPRSState
2273:src/sim900_800.c **** /*
2274:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
ARM GAS  /tmp/ccNuUijR.s 			page 151


2275:src/sim900_800.c **** 
2276:src/sim900_800.c **** 			if (i == 2)
2277:src/sim900_800.c **** 			{
2278:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
2279:src/sim900_800.c **** 			}
2280:src/sim900_800.c **** 
2281:src/sim900_800.c **** 			if (i > 2)
2282:src/sim900_800.c **** 			{
2283:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2284:src/sim900_800.c **** 				return 3;
2285:src/sim900_800.c **** 			}
2286:src/sim900_800.c **** */
2287:src/sim900_800.c **** 			break;
 6103              		.loc 1 2287 0
 6104 05c0 69E0     		b	.L379	@
 6105              	.L376:
2288:src/sim900_800.c **** 
2289:src/sim900_800.c **** 		case 14:
2290:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6106              		.loc 1 2290 0
 6107 05c2 3E4B     		ldr	r3, .L437+12	@ tmp532,
 6108 05c4 0022     		movs	r2, #0	@ tmp533,
 6109 05c6 1A70     		strb	r2, [r3]	@ tmp534, GSMConfigGPRSState
2291:src/sim900_800.c **** 			return 2;
 6110              		.loc 1 2291 0
 6111 05c8 0223     		movs	r3, #2	@ D.8036,
 6112 05ca 6EE0     		b	.L382	@
 6113              	.L377:
2292:src/sim900_800.c **** 			break;
2293:src/sim900_800.c **** 
2294:src/sim900_800.c **** 		case 15:
2295:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 6114              		.loc 1 2295 0
 6115 05cc 0F23     		movs	r3, #15	@ tmp535,
 6116 05ce 6B44     		add	r3, r3, sp	@ tmp535,
 6117 05d0 1B78     		ldrb	r3, [r3]	@ tmp536, sim
 6118 05d2 012B     		cmp	r3, #1	@ tmp536,
 6119 05d4 04D0     		beq	.L415	@,
 6120              		.loc 1 2295 0 is_stmt 0 discriminator 1
 6121 05d6 0F23     		movs	r3, #15	@ tmp537,
 6122 05d8 6B44     		add	r3, r3, sp	@ tmp537,
 6123 05da 1B78     		ldrb	r3, [r3]	@ tmp538, sim
 6124 05dc 022B     		cmp	r3, #2	@ tmp538,
 6125 05de 1BD1     		bne	.L416	@,
 6126              	.L415:
2296:src/sim900_800.c **** 			{
2297:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 6127              		.loc 1 2297 0 is_stmt 1
 6128 05e0 1724     		movs	r4, #23	@ tmp539,
 6129 05e2 6C44     		add	r4, r4, sp	@ tmp539,
 6130 05e4 0F23     		movs	r3, #15	@ tmp540,
 6131 05e6 6B44     		add	r3, r3, sp	@ tmp540,
 6132 05e8 1B78     		ldrb	r3, [r3]	@ tmp541, sim
 6133 05ea 1800     		movs	r0, r3	@, tmp541
 6134 05ec FFF7FEFF 		bl	GSM_SetSIM	@
 6135 05f0 0300     		movs	r3, r0	@ tmp542,
 6136 05f2 2370     		strb	r3, [r4]	@ tmp544, i
ARM GAS  /tmp/ccNuUijR.s 			page 152


2298:src/sim900_800.c **** 
2299:src/sim900_800.c **** 				if (i == 2)
 6137              		.loc 1 2299 0
 6138 05f4 1723     		movs	r3, #23	@ tmp545,
 6139 05f6 6B44     		add	r3, r3, sp	@ tmp545,
 6140 05f8 1B78     		ldrb	r3, [r3]	@ tmp546, i
 6141 05fa 022B     		cmp	r3, #2	@ tmp546,
 6142 05fc 02D1     		bne	.L417	@,
2300:src/sim900_800.c **** 				{
2301:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 6143              		.loc 1 2301 0
 6144 05fe 2F4B     		ldr	r3, .L437+12	@ tmp547,
 6145 0600 0222     		movs	r2, #2	@ tmp548,
 6146 0602 1A70     		strb	r2, [r3]	@ tmp549, GSMConfigGPRSState
 6147              	.L417:
2302:src/sim900_800.c **** 				}
2303:src/sim900_800.c **** 
2304:src/sim900_800.c **** 				if (i>2)
 6148              		.loc 1 2304 0
 6149 0604 1723     		movs	r3, #23	@ tmp550,
 6150 0606 6B44     		add	r3, r3, sp	@ tmp550,
 6151 0608 1B78     		ldrb	r3, [r3]	@ tmp551, i
 6152 060a 022B     		cmp	r3, #2	@ tmp551,
 6153 060c 09D9     		bls	.L419	@,
2305:src/sim900_800.c **** 				{
2306:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6154              		.loc 1 2306 0
 6155 060e 2B4B     		ldr	r3, .L437+12	@ tmp552,
 6156 0610 0022     		movs	r2, #0	@ tmp553,
 6157 0612 1A70     		strb	r2, [r3]	@ tmp554, GSMConfigGPRSState
2307:src/sim900_800.c **** 					return 3;
 6158              		.loc 1 2307 0
 6159 0614 0323     		movs	r3, #3	@ D.8036,
 6160 0616 48E0     		b	.L382	@
 6161              	.L416:
2308:src/sim900_800.c **** 				}
2309:src/sim900_800.c **** 			}
2310:src/sim900_800.c **** 			else
2311:src/sim900_800.c **** 			{
2312:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6162              		.loc 1 2312 0
 6163 0618 284B     		ldr	r3, .L437+12	@ tmp555,
 6164 061a 0022     		movs	r2, #0	@ tmp556,
 6165 061c 1A70     		strb	r2, [r3]	@ tmp557, GSMConfigGPRSState
2313:src/sim900_800.c **** 				return 3;
 6166              		.loc 1 2313 0
 6167 061e 0323     		movs	r3, #3	@ D.8036,
 6168 0620 43E0     		b	.L382	@
 6169              	.L419:
2314:src/sim900_800.c **** 			}
2315:src/sim900_800.c **** 
2316:src/sim900_800.c **** 			break;
 6170              		.loc 1 2316 0 discriminator 1
 6171 0622 38E0     		b	.L379	@
 6172              	.L378:
2317:src/sim900_800.c **** 		case 16:
2318:src/sim900_800.c **** 
ARM GAS  /tmp/ccNuUijR.s 			page 153


2319:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6173              		.loc 1 2319 0
 6174 0624 1724     		movs	r4, #23	@ tmp558,
 6175 0626 6C44     		add	r4, r4, sp	@ tmp558,
 6176 0628 214B     		ldr	r3, .L437	@ tmp559,
 6177 062a 2D48     		ldr	r0, .L437+48	@ tmp560,
 6178 062c 0022     		movs	r2, #0	@,
 6179 062e 3221     		movs	r1, #50	@,
 6180 0630 FFF7FEFF 		bl	GSMSendCommand	@
 6181 0634 0300     		movs	r3, r0	@ tmp561,
 6182 0636 2370     		strb	r3, [r4]	@ tmp563, i
2320:src/sim900_800.c **** 
2321:src/sim900_800.c **** 			if (i == 2)
 6183              		.loc 1 2321 0
 6184 0638 1723     		movs	r3, #23	@ tmp564,
 6185 063a 6B44     		add	r3, r3, sp	@ tmp564,
 6186 063c 1B78     		ldrb	r3, [r3]	@ tmp565, i
 6187 063e 022B     		cmp	r3, #2	@ tmp565,
 6188 0640 04D1     		bne	.L420	@,
2322:src/sim900_800.c **** 			{
2323:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6189              		.loc 1 2323 0
 6190 0642 1E4B     		ldr	r3, .L437+12	@ tmp566,
 6191 0644 0022     		movs	r2, #0	@ tmp567,
 6192 0646 1A70     		strb	r2, [r3]	@ tmp568, GSMConfigGPRSState
2324:src/sim900_800.c **** 				return 3;
 6193              		.loc 1 2324 0
 6194 0648 0323     		movs	r3, #3	@ D.8036,
 6195 064a 2EE0     		b	.L382	@
 6196              	.L420:
2325:src/sim900_800.c **** 			}
2326:src/sim900_800.c **** 
2327:src/sim900_800.c **** 			if (i > 2)
 6197              		.loc 1 2327 0
 6198 064c 1723     		movs	r3, #23	@ tmp569,
 6199 064e 6B44     		add	r3, r3, sp	@ tmp569,
 6200 0650 1B78     		ldrb	r3, [r3]	@ tmp570, i
 6201 0652 022B     		cmp	r3, #2	@ tmp570,
 6202 0654 1ED9     		bls	.L434	@,
2328:src/sim900_800.c **** 			{
2329:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6203              		.loc 1 2329 0
 6204 0656 194B     		ldr	r3, .L437+12	@ tmp571,
 6205 0658 0022     		movs	r2, #0	@ tmp572,
 6206 065a 1A70     		strb	r2, [r3]	@ tmp573, GSMConfigGPRSState
2330:src/sim900_800.c **** 				return 3;
 6207              		.loc 1 2330 0
 6208 065c 0323     		movs	r3, #3	@ D.8036,
 6209 065e 24E0     		b	.L382	@
 6210              	.L360:
2331:src/sim900_800.c **** 			}
2332:src/sim900_800.c **** 			break;
2333:src/sim900_800.c **** 		default:
2334:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6211              		.loc 1 2334 0
 6212 0660 164B     		ldr	r3, .L437+12	@ tmp574,
 6213 0662 0022     		movs	r2, #0	@ tmp575,
ARM GAS  /tmp/ccNuUijR.s 			page 154


 6214 0664 1A70     		strb	r2, [r3]	@ tmp576, GSMConfigGPRSState
2335:src/sim900_800.c **** 			break;
 6215              		.loc 1 2335 0
 6216 0666 16E0     		b	.L379	@
 6217              	.L423:
1987:src/sim900_800.c **** 		case 3:
 6218              		.loc 1 1987 0
 6219 0668 C046     		nop
 6220 066a 14E0     		b	.L379	@
 6221              	.L424:
2075:src/sim900_800.c **** 
 6222              		.loc 1 2075 0
 6223 066c C046     		nop
 6224 066e 12E0     		b	.L379	@
 6225              	.L425:
2098:src/sim900_800.c **** 
 6226              		.loc 1 2098 0
 6227 0670 C046     		nop
 6228 0672 10E0     		b	.L379	@
 6229              	.L426:
2121:src/sim900_800.c **** 		case 6:
 6230              		.loc 1 2121 0
 6231 0674 C046     		nop
 6232 0676 0EE0     		b	.L379	@
 6233              	.L427:
2151:src/sim900_800.c **** 		case 7:
 6234              		.loc 1 2151 0
 6235 0678 C046     		nop
 6236 067a 0CE0     		b	.L379	@
 6237              	.L428:
2166:src/sim900_800.c **** 
 6238              		.loc 1 2166 0
 6239 067c C046     		nop
 6240 067e 0AE0     		b	.L379	@
 6241              	.L429:
2198:src/sim900_800.c **** 
 6242              		.loc 1 2198 0
 6243 0680 C046     		nop
 6244 0682 08E0     		b	.L379	@
 6245              	.L430:
2221:src/sim900_800.c **** 
 6246              		.loc 1 2221 0
 6247 0684 C046     		nop
 6248 0686 06E0     		b	.L379	@
 6249              	.L431:
2237:src/sim900_800.c **** 
 6250              		.loc 1 2237 0
 6251 0688 C046     		nop
 6252 068a 04E0     		b	.L379	@
 6253              	.L432:
2252:src/sim900_800.c **** 
 6254              		.loc 1 2252 0
 6255 068c C046     		nop
 6256 068e 02E0     		b	.L379	@
 6257              	.L433:
2270:src/sim900_800.c **** 		case 13:
 6258              		.loc 1 2270 0
ARM GAS  /tmp/ccNuUijR.s 			page 155


 6259 0690 C046     		nop
 6260 0692 00E0     		b	.L379	@
 6261              	.L434:
2332:src/sim900_800.c **** 		default:
 6262              		.loc 1 2332 0
 6263 0694 C046     		nop
 6264              	.L379:
2336:src/sim900_800.c **** 
2337:src/sim900_800.c **** 	}
2338:src/sim900_800.c **** 
2339:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 6265              		.loc 1 2339 0
 6266 0696 134B     		ldr	r3, .L437+52	@ tmp577,
 6267 0698 1B88     		ldrh	r3, [r3]	@ D.8041, GSMConfigGPRSTimeOut
 6268 069a 002B     		cmp	r3, #0	@ D.8041,
 6269 069c 04D1     		bne	.L422	@,
2340:src/sim900_800.c **** 	{
2341:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 6270              		.loc 1 2341 0
 6271 069e 074B     		ldr	r3, .L437+12	@ tmp578,
 6272 06a0 0022     		movs	r2, #0	@ tmp579,
 6273 06a2 1A70     		strb	r2, [r3]	@ tmp580, GSMConfigGPRSState
2342:src/sim900_800.c **** 		return 4;
 6274              		.loc 1 2342 0
 6275 06a4 0423     		movs	r3, #4	@ D.8036,
 6276 06a6 00E0     		b	.L382	@
 6277              	.L422:
2343:src/sim900_800.c **** 	}
2344:src/sim900_800.c **** 
2345:src/sim900_800.c **** 	return 1;
 6278              		.loc 1 2345 0
 6279 06a8 0123     		movs	r3, #1	@ D.8036,
 6280              	.L382:
2346:src/sim900_800.c **** }
 6281              		.loc 1 2346 0
 6282 06aa 1800     		movs	r0, r3	@, <retval>
 6283 06ac 06B0     		add	sp, sp, #24	@,,
 6284              		@ sp needed	@
 6285 06ae 10BD     		pop	{r4, pc}
 6286              	.L438:
 6287              		.align	2
 6288              	.L437:
 6289 06b0 00000000 		.word	GSMbuffRtaCommand
 6290 06b4 A4010000 		.word	.LC143
 6291 06b8 B0010000 		.word	.LC145
 6292 06bc 00000000 		.word	GSMConfigGPRSState
 6293 06c0 00000000 		.word	GSMbuffGPRSCommand
 6294 06c4 B8010000 		.word	.LC147
 6295 06c8 DC000000 		.word	.LC94
 6296 06cc CC010000 		.word	.LC149
 6297 06d0 20010000 		.word	.LC116
 6298 06d4 D8010000 		.word	.LC151
 6299 06d8 00000000 		.word	GSMConfigGPRSflag
 6300 06dc E4010000 		.word	.LC153
 6301 06e0 14000000 		.word	.LC33
 6302 06e4 00000000 		.word	GSMConfigGPRSTimeOut
 6303              		.cfi_endproc
ARM GAS  /tmp/ccNuUijR.s 			page 156


 6304              	.LFE36:
 6305              		.size	GSMConfigPDPGPRS, .-GSMConfigPDPGPRS
 6306              		.text
 6307              	.Letext0:
 6308              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 6309              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6310              		.file 4 "./cmsis_boot/stm32f0xx.h"
 6311              		.file 5 "src/flash_program.h"
 6312              		.section	.debug_info,"",%progbits
 6313              	.Ldebug_info0:
 6314 0000 190D0000 		.4byte	0xd19
 6315 0004 0200     		.2byte	0x2
 6316 0006 00000000 		.4byte	.Ldebug_abbrev0
 6317 000a 04       		.byte	0x4
 6318 000b 01       		.uleb128 0x1
 6319 000c B6070000 		.4byte	.LASF145
 6320 0010 0C       		.byte	0xc
 6321 0011 2C010000 		.4byte	.LASF146
 6322 0015 3F040000 		.4byte	.LASF147
 6323 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6324 001d 00000000 		.4byte	0
 6325 0021 00000000 		.4byte	0
 6326 0025 00000000 		.4byte	.Ldebug_line0
 6327 0029 02       		.uleb128 0x2
 6328 002a 01       		.byte	0x1
 6329 002b 08       		.byte	0x8
 6330 002c 74050000 		.4byte	.LASF0
 6331 0030 02       		.uleb128 0x2
 6332 0031 01       		.byte	0x1
 6333 0032 06       		.byte	0x6
 6334 0033 AA070000 		.4byte	.LASF1
 6335 0037 02       		.uleb128 0x2
 6336 0038 02       		.byte	0x2
 6337 0039 05       		.byte	0x5
 6338 003a 95050000 		.4byte	.LASF2
 6339 003e 03       		.uleb128 0x3
 6340 003f 2B020000 		.4byte	.LASF5
 6341 0043 02       		.byte	0x2
 6342 0044 2B       		.byte	0x2b
 6343 0045 49000000 		.4byte	0x49
 6344 0049 02       		.uleb128 0x2
 6345 004a 02       		.byte	0x2
 6346 004b 07       		.byte	0x7
 6347 004c 4D030000 		.4byte	.LASF3
 6348 0050 02       		.uleb128 0x2
 6349 0051 04       		.byte	0x4
 6350 0052 05       		.byte	0x5
 6351 0053 A6010000 		.4byte	.LASF4
 6352 0057 03       		.uleb128 0x3
 6353 0058 3E020000 		.4byte	.LASF6
 6354 005c 02       		.byte	0x2
 6355 005d 41       		.byte	0x41
 6356 005e 62000000 		.4byte	0x62
 6357 0062 02       		.uleb128 0x2
 6358 0063 04       		.byte	0x4
 6359 0064 07       		.byte	0x7
 6360 0065 0A030000 		.4byte	.LASF7
ARM GAS  /tmp/ccNuUijR.s 			page 157


 6361 0069 02       		.uleb128 0x2
 6362 006a 08       		.byte	0x8
 6363 006b 05       		.byte	0x5
 6364 006c 0E010000 		.4byte	.LASF8
 6365 0070 02       		.uleb128 0x2
 6366 0071 08       		.byte	0x8
 6367 0072 07       		.byte	0x7
 6368 0073 A4000000 		.4byte	.LASF9
 6369 0077 04       		.uleb128 0x4
 6370 0078 04       		.byte	0x4
 6371 0079 05       		.byte	0x5
 6372 007a 696E7400 		.ascii	"int\000"
 6373 007e 02       		.uleb128 0x2
 6374 007f 04       		.byte	0x4
 6375 0080 07       		.byte	0x7
 6376 0081 E1020000 		.4byte	.LASF10
 6377 0085 03       		.uleb128 0x3
 6378 0086 F2010000 		.4byte	.LASF11
 6379 008a 03       		.byte	0x3
 6380 008b 1A       		.byte	0x1a
 6381 008c 3E000000 		.4byte	0x3e
 6382 0090 03       		.uleb128 0x3
 6383 0091 FD060000 		.4byte	.LASF12
 6384 0095 03       		.byte	0x3
 6385 0096 20       		.byte	0x20
 6386 0097 57000000 		.4byte	0x57
 6387 009b 02       		.uleb128 0x2
 6388 009c 04       		.byte	0x4
 6389 009d 07       		.byte	0x7
 6390 009e E7030000 		.4byte	.LASF13
 6391 00a2 05       		.uleb128 0x5
 6392 00a3 90000000 		.4byte	0x90
 6393 00a7 06       		.uleb128 0x6
 6394 00a8 90000000 		.4byte	0x90
 6395 00ac B7000000 		.4byte	0xb7
 6396 00b0 07       		.uleb128 0x7
 6397 00b1 9B000000 		.4byte	0x9b
 6398 00b5 01       		.byte	0x1
 6399 00b6 00       		.byte	0
 6400 00b7 05       		.uleb128 0x5
 6401 00b8 85000000 		.4byte	0x85
 6402 00bc 08       		.uleb128 0x8
 6403 00bd 2C       		.byte	0x2c
 6404 00be 04       		.byte	0x4
 6405 00bf 6902     		.2byte	0x269
 6406 00c1 98010000 		.4byte	0x198
 6407 00c5 09       		.uleb128 0x9
 6408 00c6 9E000000 		.4byte	.LASF14
 6409 00ca 04       		.byte	0x4
 6410 00cb 6B02     		.2byte	0x26b
 6411 00cd A2000000 		.4byte	0xa2
 6412 00d1 02       		.byte	0x2
 6413 00d2 23       		.byte	0x23
 6414 00d3 00       		.uleb128 0
 6415 00d4 09       		.uleb128 0x9
 6416 00d5 65000000 		.4byte	.LASF15
 6417 00d9 04       		.byte	0x4
ARM GAS  /tmp/ccNuUijR.s 			page 158


 6418 00da 6C02     		.2byte	0x26c
 6419 00dc B7000000 		.4byte	0xb7
 6420 00e0 02       		.byte	0x2
 6421 00e1 23       		.byte	0x23
 6422 00e2 04       		.uleb128 0x4
 6423 00e3 09       		.uleb128 0x9
 6424 00e4 06050000 		.4byte	.LASF16
 6425 00e8 04       		.byte	0x4
 6426 00e9 6D02     		.2byte	0x26d
 6427 00eb 85000000 		.4byte	0x85
 6428 00ef 02       		.byte	0x2
 6429 00f0 23       		.byte	0x23
 6430 00f1 06       		.uleb128 0x6
 6431 00f2 09       		.uleb128 0x9
 6432 00f3 36020000 		.4byte	.LASF17
 6433 00f7 04       		.byte	0x4
 6434 00f8 6E02     		.2byte	0x26e
 6435 00fa A2000000 		.4byte	0xa2
 6436 00fe 02       		.byte	0x2
 6437 00ff 23       		.byte	0x23
 6438 0100 08       		.uleb128 0x8
 6439 0101 09       		.uleb128 0x9
 6440 0102 0F000000 		.4byte	.LASF18
 6441 0106 04       		.byte	0x4
 6442 0107 6F02     		.2byte	0x26f
 6443 0109 A2000000 		.4byte	0xa2
 6444 010d 02       		.byte	0x2
 6445 010e 23       		.byte	0x23
 6446 010f 0C       		.uleb128 0xc
 6447 0110 0A       		.uleb128 0xa
 6448 0111 49445200 		.ascii	"IDR\000"
 6449 0115 04       		.byte	0x4
 6450 0116 7002     		.2byte	0x270
 6451 0118 B7000000 		.4byte	0xb7
 6452 011c 02       		.byte	0x2
 6453 011d 23       		.byte	0x23
 6454 011e 10       		.uleb128 0x10
 6455 011f 09       		.uleb128 0x9
 6456 0120 10050000 		.4byte	.LASF19
 6457 0124 04       		.byte	0x4
 6458 0125 7102     		.2byte	0x271
 6459 0127 85000000 		.4byte	0x85
 6460 012b 02       		.byte	0x2
 6461 012c 23       		.byte	0x23
 6462 012d 12       		.uleb128 0x12
 6463 012e 0A       		.uleb128 0xa
 6464 012f 4F445200 		.ascii	"ODR\000"
 6465 0133 04       		.byte	0x4
 6466 0134 7202     		.2byte	0x272
 6467 0136 B7000000 		.4byte	0xb7
 6468 013a 02       		.byte	0x2
 6469 013b 23       		.byte	0x23
 6470 013c 14       		.uleb128 0x14
 6471 013d 09       		.uleb128 0x9
 6472 013e 1A050000 		.4byte	.LASF20
 6473 0142 04       		.byte	0x4
 6474 0143 7302     		.2byte	0x273
ARM GAS  /tmp/ccNuUijR.s 			page 159


 6475 0145 85000000 		.4byte	0x85
 6476 0149 02       		.byte	0x2
 6477 014a 23       		.byte	0x23
 6478 014b 16       		.uleb128 0x16
 6479 014c 09       		.uleb128 0x9
 6480 014d 2B070000 		.4byte	.LASF21
 6481 0151 04       		.byte	0x4
 6482 0152 7402     		.2byte	0x274
 6483 0154 A2000000 		.4byte	0xa2
 6484 0158 02       		.byte	0x2
 6485 0159 23       		.byte	0x23
 6486 015a 18       		.uleb128 0x18
 6487 015b 09       		.uleb128 0x9
 6488 015c 26000000 		.4byte	.LASF22
 6489 0160 04       		.byte	0x4
 6490 0161 7502     		.2byte	0x275
 6491 0163 A2000000 		.4byte	0xa2
 6492 0167 02       		.byte	0x2
 6493 0168 23       		.byte	0x23
 6494 0169 1C       		.uleb128 0x1c
 6495 016a 0A       		.uleb128 0xa
 6496 016b 41465200 		.ascii	"AFR\000"
 6497 016f 04       		.byte	0x4
 6498 0170 7602     		.2byte	0x276
 6499 0172 98010000 		.4byte	0x198
 6500 0176 02       		.byte	0x2
 6501 0177 23       		.byte	0x23
 6502 0178 20       		.uleb128 0x20
 6503 0179 0A       		.uleb128 0xa
 6504 017a 42525200 		.ascii	"BRR\000"
 6505 017e 04       		.byte	0x4
 6506 017f 7702     		.2byte	0x277
 6507 0181 B7000000 		.4byte	0xb7
 6508 0185 02       		.byte	0x2
 6509 0186 23       		.byte	0x23
 6510 0187 28       		.uleb128 0x28
 6511 0188 09       		.uleb128 0x9
 6512 0189 24050000 		.4byte	.LASF23
 6513 018d 04       		.byte	0x4
 6514 018e 7802     		.2byte	0x278
 6515 0190 85000000 		.4byte	0x85
 6516 0194 02       		.byte	0x2
 6517 0195 23       		.byte	0x23
 6518 0196 2A       		.uleb128 0x2a
 6519 0197 00       		.byte	0
 6520 0198 05       		.uleb128 0x5
 6521 0199 A7000000 		.4byte	0xa7
 6522 019d 0B       		.uleb128 0xb
 6523 019e 1C030000 		.4byte	.LASF24
 6524 01a2 04       		.byte	0x4
 6525 01a3 7902     		.2byte	0x279
 6526 01a5 BC000000 		.4byte	0xbc
 6527 01a9 0C       		.uleb128 0xc
 6528 01aa C8000000 		.4byte	.LASF148
 6529 01ae 54       		.byte	0x54
 6530 01af 05       		.byte	0x5
 6531 01b0 36       		.byte	0x36
ARM GAS  /tmp/ccNuUijR.s 			page 160


 6532 01b1 26020000 		.4byte	0x226
 6533 01b5 0D       		.uleb128 0xd
 6534 01b6 B6050000 		.4byte	.LASF25
 6535 01ba 05       		.byte	0x5
 6536 01bb 38       		.byte	0x38
 6537 01bc 26020000 		.4byte	0x226
 6538 01c0 02       		.byte	0x2
 6539 01c1 23       		.byte	0x23
 6540 01c2 00       		.uleb128 0
 6541 01c3 0D       		.uleb128 0xd
 6542 01c4 E4050000 		.4byte	.LASF26
 6543 01c8 05       		.byte	0x5
 6544 01c9 39       		.byte	0x39
 6545 01ca 26020000 		.4byte	0x226
 6546 01ce 02       		.byte	0x2
 6547 01cf 23       		.byte	0x23
 6548 01d0 18       		.uleb128 0x18
 6549 01d1 0D       		.uleb128 0xd
 6550 01d2 75060000 		.4byte	.LASF27
 6551 01d6 05       		.byte	0x5
 6552 01d7 3A       		.byte	0x3a
 6553 01d8 26020000 		.4byte	0x226
 6554 01dc 02       		.byte	0x2
 6555 01dd 23       		.byte	0x23
 6556 01de 30       		.uleb128 0x30
 6557 01df 0D       		.uleb128 0xd
 6558 01e0 D3000000 		.4byte	.LASF28
 6559 01e4 05       		.byte	0x5
 6560 01e5 3C       		.byte	0x3c
 6561 01e6 7E000000 		.4byte	0x7e
 6562 01ea 02       		.byte	0x2
 6563 01eb 23       		.byte	0x23
 6564 01ec 48       		.uleb128 0x48
 6565 01ed 0D       		.uleb128 0xd
 6566 01ee 0C060000 		.4byte	.LASF29
 6567 01f2 05       		.byte	0x5
 6568 01f3 3D       		.byte	0x3d
 6569 01f4 7E000000 		.4byte	0x7e
 6570 01f8 02       		.byte	0x2
 6571 01f9 23       		.byte	0x23
 6572 01fa 4C       		.uleb128 0x4c
 6573 01fb 0D       		.uleb128 0xd
 6574 01fc 24060000 		.4byte	.LASF30
 6575 0200 05       		.byte	0x5
 6576 0201 3E       		.byte	0x3e
 6577 0202 49000000 		.4byte	0x49
 6578 0206 02       		.byte	0x2
 6579 0207 23       		.byte	0x23
 6580 0208 50       		.uleb128 0x50
 6581 0209 0D       		.uleb128 0xd
 6582 020a 00000000 		.4byte	.LASF31
 6583 020e 05       		.byte	0x5
 6584 020f 40       		.byte	0x40
 6585 0210 29000000 		.4byte	0x29
 6586 0214 02       		.byte	0x2
 6587 0215 23       		.byte	0x23
 6588 0216 52       		.uleb128 0x52
ARM GAS  /tmp/ccNuUijR.s 			page 161


 6589 0217 0D       		.uleb128 0xd
 6590 0218 DF060000 		.4byte	.LASF32
 6591 021c 05       		.byte	0x5
 6592 021d 41       		.byte	0x41
 6593 021e 29000000 		.4byte	0x29
 6594 0222 02       		.byte	0x2
 6595 0223 23       		.byte	0x23
 6596 0224 53       		.uleb128 0x53
 6597 0225 00       		.byte	0
 6598 0226 06       		.uleb128 0x6
 6599 0227 36020000 		.4byte	0x236
 6600 022b 36020000 		.4byte	0x236
 6601 022f 07       		.uleb128 0x7
 6602 0230 9B000000 		.4byte	0x9b
 6603 0234 17       		.byte	0x17
 6604 0235 00       		.byte	0
 6605 0236 02       		.uleb128 0x2
 6606 0237 01       		.byte	0x1
 6607 0238 08       		.byte	0x8
 6608 0239 5B060000 		.4byte	.LASF33
 6609 023d 03       		.uleb128 0x3
 6610 023e C4030000 		.4byte	.LASF34
 6611 0242 05       		.byte	0x5
 6612 0243 47       		.byte	0x47
 6613 0244 A9010000 		.4byte	0x1a9
 6614 0248 02       		.uleb128 0x2
 6615 0249 08       		.byte	0x8
 6616 024a 04       		.byte	0x4
 6617 024b 3D060000 		.4byte	.LASF35
 6618 024f 0E       		.uleb128 0xe
 6619 0250 04       		.byte	0x4
 6620 0251 29000000 		.4byte	0x29
 6621 0255 0E       		.uleb128 0xe
 6622 0256 04       		.byte	0x4
 6623 0257 36020000 		.4byte	0x236
 6624 025b 06       		.uleb128 0x6
 6625 025c 36020000 		.4byte	0x236
 6626 0260 6B020000 		.4byte	0x26b
 6627 0264 07       		.uleb128 0x7
 6628 0265 9B000000 		.4byte	0x9b
 6629 0269 07       		.byte	0x7
 6630 026a 00       		.byte	0
 6631 026b 0F       		.uleb128 0xf
 6632 026c 01       		.byte	0x1
 6633 026d 52050000 		.4byte	.LASF36
 6634 0271 01       		.byte	0x1
 6635 0272 85       		.byte	0x85
 6636 0273 01       		.byte	0x1
 6637 0274 00000000 		.4byte	.LFB20
 6638 0278 5C000000 		.4byte	.LFE20
 6639 027c 00000000 		.4byte	.LLST0
 6640 0280 01       		.byte	0x1
 6641 0281 10       		.uleb128 0x10
 6642 0282 01       		.byte	0x1
 6643 0283 67020000 		.4byte	.LASF149
 6644 0287 01       		.byte	0x1
 6645 0288 E1       		.byte	0xe1
ARM GAS  /tmp/ccNuUijR.s 			page 162


 6646 0289 01       		.byte	0x1
 6647 028a 29000000 		.4byte	0x29
 6648 028e 00000000 		.4byte	.LFB21
 6649 0292 FC000000 		.4byte	.LFE21
 6650 0296 02       		.byte	0x2
 6651 0297 7D       		.byte	0x7d
 6652 0298 00       		.sleb128 0
 6653 0299 01       		.byte	0x1
 6654 029a 11       		.uleb128 0x11
 6655 029b 01       		.byte	0x1
 6656 029c F1080000 		.4byte	.LASF37
 6657 02a0 01       		.byte	0x1
 6658 02a1 1801     		.2byte	0x118
 6659 02a3 01       		.byte	0x1
 6660 02a4 00000000 		.4byte	.LFB22
 6661 02a8 10000000 		.4byte	.LFE22
 6662 02ac 02       		.byte	0x2
 6663 02ad 7D       		.byte	0x7d
 6664 02ae 00       		.sleb128 0
 6665 02af 01       		.byte	0x1
 6666 02b0 12       		.uleb128 0x12
 6667 02b1 01       		.byte	0x1
 6668 02b2 B6020000 		.4byte	.LASF38
 6669 02b6 01       		.byte	0x1
 6670 02b7 2201     		.2byte	0x122
 6671 02b9 01       		.byte	0x1
 6672 02ba 29000000 		.4byte	0x29
 6673 02be 00000000 		.4byte	.LFB23
 6674 02c2 BC000000 		.4byte	.LFE23
 6675 02c6 20000000 		.4byte	.LLST1
 6676 02ca 01       		.byte	0x1
 6677 02cb DF020000 		.4byte	0x2df
 6678 02cf 13       		.uleb128 0x13
 6679 02d0 DC020000 		.4byte	.LASF40
 6680 02d4 01       		.byte	0x1
 6681 02d5 2401     		.2byte	0x124
 6682 02d7 29000000 		.4byte	0x29
 6683 02db 02       		.byte	0x2
 6684 02dc 91       		.byte	0x91
 6685 02dd 7F       		.sleb128 -1
 6686 02de 00       		.byte	0
 6687 02df 12       		.uleb128 0x12
 6688 02e0 01       		.byte	0x1
 6689 02e1 71020000 		.4byte	.LASF39
 6690 02e5 01       		.byte	0x1
 6691 02e6 4A01     		.2byte	0x14a
 6692 02e8 01       		.byte	0x1
 6693 02e9 29000000 		.4byte	0x29
 6694 02ed 00000000 		.4byte	.LFB24
 6695 02f1 70000000 		.4byte	.LFE24
 6696 02f5 40000000 		.4byte	.LLST2
 6697 02f9 01       		.byte	0x1
 6698 02fa 1D030000 		.4byte	0x31d
 6699 02fe 14       		.uleb128 0x14
 6700 02ff 74696D00 		.ascii	"tim\000"
 6701 0303 01       		.byte	0x1
 6702 0304 4A01     		.2byte	0x14a
ARM GAS  /tmp/ccNuUijR.s 			page 163


 6703 0306 49000000 		.4byte	0x49
 6704 030a 02       		.byte	0x2
 6705 030b 91       		.byte	0x91
 6706 030c 76       		.sleb128 -10
 6707 030d 13       		.uleb128 0x13
 6708 030e DC020000 		.4byte	.LASF40
 6709 0312 01       		.byte	0x1
 6710 0313 4C01     		.2byte	0x14c
 6711 0315 29000000 		.4byte	0x29
 6712 0319 02       		.byte	0x2
 6713 031a 91       		.byte	0x91
 6714 031b 7F       		.sleb128 -1
 6715 031c 00       		.byte	0
 6716 031d 15       		.uleb128 0x15
 6717 031e 01       		.byte	0x1
 6718 031f 08020000 		.4byte	.LASF74
 6719 0323 01       		.byte	0x1
 6720 0324 6501     		.2byte	0x165
 6721 0326 01       		.byte	0x1
 6722 0327 00000000 		.4byte	.LFB25
 6723 032b CC030000 		.4byte	.LFE25
 6724 032f 60000000 		.4byte	.LLST3
 6725 0333 01       		.byte	0x1
 6726 0334 09040000 		.4byte	0x409
 6727 0338 16       		.uleb128 0x16
 6728 0339 91000000 		.4byte	.LASF41
 6729 033d 01       		.byte	0x1
 6730 033e 6501     		.2byte	0x165
 6731 0340 4F020000 		.4byte	0x24f
 6732 0344 02       		.byte	0x2
 6733 0345 91       		.byte	0x91
 6734 0346 6C       		.sleb128 -20
 6735 0347 16       		.uleb128 0x16
 6736 0348 74030000 		.4byte	.LASF42
 6737 034c 01       		.byte	0x1
 6738 034d 6501     		.2byte	0x165
 6739 034f 4F020000 		.4byte	0x24f
 6740 0353 02       		.byte	0x2
 6741 0354 91       		.byte	0x91
 6742 0355 68       		.sleb128 -24
 6743 0356 16       		.uleb128 0x16
 6744 0357 82030000 		.4byte	.LASF43
 6745 035b 01       		.byte	0x1
 6746 035c 6501     		.2byte	0x165
 6747 035e 4F020000 		.4byte	0x24f
 6748 0362 02       		.byte	0x2
 6749 0363 91       		.byte	0x91
 6750 0364 64       		.sleb128 -28
 6751 0365 16       		.uleb128 0x16
 6752 0366 5D050000 		.4byte	.LASF44
 6753 036a 01       		.byte	0x1
 6754 036b 6501     		.2byte	0x165
 6755 036d 55020000 		.4byte	0x255
 6756 0371 02       		.byte	0x2
 6757 0372 91       		.byte	0x91
 6758 0373 60       		.sleb128 -32
 6759 0374 16       		.uleb128 0x16
ARM GAS  /tmp/ccNuUijR.s 			page 164


 6760 0375 5F070000 		.4byte	.LASF45
 6761 0379 01       		.byte	0x1
 6762 037a 6501     		.2byte	0x165
 6763 037c 55020000 		.4byte	0x255
 6764 0380 02       		.byte	0x2
 6765 0381 91       		.byte	0x91
 6766 0382 00       		.sleb128 0
 6767 0383 16       		.uleb128 0x16
 6768 0384 CC040000 		.4byte	.LASF46
 6769 0388 01       		.byte	0x1
 6770 0389 6501     		.2byte	0x165
 6771 038b 55020000 		.4byte	0x255
 6772 038f 02       		.byte	0x2
 6773 0390 91       		.byte	0x91
 6774 0391 04       		.sleb128 4
 6775 0392 16       		.uleb128 0x16
 6776 0393 F0030000 		.4byte	.LASF47
 6777 0397 01       		.byte	0x1
 6778 0398 6501     		.2byte	0x165
 6779 039a 55020000 		.4byte	0x255
 6780 039e 02       		.byte	0x2
 6781 039f 91       		.byte	0x91
 6782 03a0 08       		.sleb128 8
 6783 03a1 16       		.uleb128 0x16
 6784 03a2 BA010000 		.4byte	.LASF48
 6785 03a6 01       		.byte	0x1
 6786 03a7 6501     		.2byte	0x165
 6787 03a9 55020000 		.4byte	0x255
 6788 03ad 02       		.byte	0x2
 6789 03ae 91       		.byte	0x91
 6790 03af 0C       		.sleb128 12
 6791 03b0 16       		.uleb128 0x16
 6792 03b1 7A070000 		.4byte	.LASF49
 6793 03b5 01       		.byte	0x1
 6794 03b6 6501     		.2byte	0x165
 6795 03b8 55020000 		.4byte	0x255
 6796 03bc 02       		.byte	0x2
 6797 03bd 91       		.byte	0x91
 6798 03be 10       		.sleb128 16
 6799 03bf 16       		.uleb128 0x16
 6800 03c0 8D010000 		.4byte	.LASF50
 6801 03c4 01       		.byte	0x1
 6802 03c5 6501     		.2byte	0x165
 6803 03c7 55020000 		.4byte	0x255
 6804 03cb 02       		.byte	0x2
 6805 03cc 91       		.byte	0x91
 6806 03cd 14       		.sleb128 20
 6807 03ce 16       		.uleb128 0x16
 6808 03cf F1000000 		.4byte	.LASF51
 6809 03d3 01       		.byte	0x1
 6810 03d4 6501     		.2byte	0x165
 6811 03d6 55020000 		.4byte	0x255
 6812 03da 02       		.byte	0x2
 6813 03db 91       		.byte	0x91
 6814 03dc 18       		.sleb128 24
 6815 03dd 16       		.uleb128 0x16
 6816 03de 49010000 		.4byte	.LASF52
ARM GAS  /tmp/ccNuUijR.s 			page 165


 6817 03e2 01       		.byte	0x1
 6818 03e3 6501     		.2byte	0x165
 6819 03e5 55020000 		.4byte	0x255
 6820 03e9 02       		.byte	0x2
 6821 03ea 91       		.byte	0x91
 6822 03eb 1C       		.sleb128 28
 6823 03ec 16       		.uleb128 0x16
 6824 03ed A3080000 		.4byte	.LASF53
 6825 03f1 01       		.byte	0x1
 6826 03f2 6501     		.2byte	0x165
 6827 03f4 55020000 		.4byte	0x255
 6828 03f8 02       		.byte	0x2
 6829 03f9 91       		.byte	0x91
 6830 03fa 20       		.sleb128 32
 6831 03fb 17       		.uleb128 0x17
 6832 03fc 6900     		.ascii	"i\000"
 6833 03fe 01       		.byte	0x1
 6834 03ff 6701     		.2byte	0x167
 6835 0401 29000000 		.4byte	0x29
 6836 0405 02       		.byte	0x2
 6837 0406 91       		.byte	0x91
 6838 0407 77       		.sleb128 -9
 6839 0408 00       		.byte	0
 6840 0409 18       		.uleb128 0x18
 6841 040a 01       		.byte	0x1
 6842 040b 0D040000 		.4byte	.LASF54
 6843 040f 01       		.byte	0x1
 6844 0410 3302     		.2byte	0x233
 6845 0412 01       		.byte	0x1
 6846 0413 36020000 		.4byte	0x236
 6847 0417 00000000 		.4byte	.LFB26
 6848 041b 70000000 		.4byte	.LFE26
 6849 041f 8C000000 		.4byte	.LLST4
 6850 0423 01       		.byte	0x1
 6851 0424 36040000 		.4byte	0x436
 6852 0428 17       		.uleb128 0x17
 6853 0429 6900     		.ascii	"i\000"
 6854 042b 01       		.byte	0x1
 6855 042c 3502     		.2byte	0x235
 6856 042e 29000000 		.4byte	0x29
 6857 0432 02       		.byte	0x2
 6858 0433 91       		.byte	0x91
 6859 0434 77       		.sleb128 -9
 6860 0435 00       		.byte	0
 6861 0436 19       		.uleb128 0x19
 6862 0437 01       		.byte	0x1
 6863 0438 BF020000 		.4byte	.LASF55
 6864 043c 01       		.byte	0x1
 6865 043d 5002     		.2byte	0x250
 6866 043f 01       		.byte	0x1
 6867 0440 00000000 		.4byte	.LFB27
 6868 0444 A4020000 		.4byte	.LFE27
 6869 0448 B8000000 		.4byte	.LLST5
 6870 044c 01       		.byte	0x1
 6871 044d 18       		.uleb128 0x18
 6872 044e 01       		.byte	0x1
 6873 044f F7040000 		.4byte	.LASF56
ARM GAS  /tmp/ccNuUijR.s 			page 166


 6874 0453 01       		.byte	0x1
 6875 0454 C202     		.2byte	0x2c2
 6876 0456 01       		.byte	0x1
 6877 0457 36020000 		.4byte	0x236
 6878 045b 00000000 		.4byte	.LFB28
 6879 045f 4C010000 		.4byte	.LFE28
 6880 0463 D8000000 		.4byte	.LLST6
 6881 0467 01       		.byte	0x1
 6882 0468 A9040000 		.4byte	0x4a9
 6883 046c 16       		.uleb128 0x16
 6884 046d 19060000 		.4byte	.LASF57
 6885 0471 01       		.byte	0x1
 6886 0472 C202     		.2byte	0x2c2
 6887 0474 55020000 		.4byte	0x255
 6888 0478 02       		.byte	0x2
 6889 0479 91       		.byte	0x91
 6890 047a 74       		.sleb128 -12
 6891 047b 16       		.uleb128 0x16
 6892 047c 1C010000 		.4byte	.LASF58
 6893 0480 01       		.byte	0x1
 6894 0481 C202     		.2byte	0x2c2
 6895 0483 49000000 		.4byte	0x49
 6896 0487 02       		.byte	0x2
 6897 0488 91       		.byte	0x91
 6898 0489 72       		.sleb128 -14
 6899 048a 14       		.uleb128 0x14
 6900 048b 72746100 		.ascii	"rta\000"
 6901 048f 01       		.byte	0x1
 6902 0490 C202     		.2byte	0x2c2
 6903 0492 29000000 		.4byte	0x29
 6904 0496 02       		.byte	0x2
 6905 0497 91       		.byte	0x91
 6906 0498 71       		.sleb128 -15
 6907 0499 16       		.uleb128 0x16
 6908 049a 7C000000 		.4byte	.LASF59
 6909 049e 01       		.byte	0x1
 6910 049f C202     		.2byte	0x2c2
 6911 04a1 55020000 		.4byte	0x255
 6912 04a5 02       		.byte	0x2
 6913 04a6 91       		.byte	0x91
 6914 04a7 6C       		.sleb128 -20
 6915 04a8 00       		.byte	0
 6916 04a9 18       		.uleb128 0x18
 6917 04aa 01       		.byte	0x1
 6918 04ab AF010000 		.4byte	.LASF60
 6919 04af 01       		.byte	0x1
 6920 04b0 1D03     		.2byte	0x31d
 6921 04b2 01       		.byte	0x1
 6922 04b3 36020000 		.4byte	0x236
 6923 04b7 00000000 		.4byte	.LFB29
 6924 04bb F4020000 		.4byte	.LFE29
 6925 04bf 04010000 		.4byte	.LLST7
 6926 04c3 01       		.byte	0x1
 6927 04c4 E5040000 		.4byte	0x4e5
 6928 04c8 16       		.uleb128 0x16
 6929 04c9 1C010000 		.4byte	.LASF58
 6930 04cd 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 167


 6931 04ce 1D03     		.2byte	0x31d
 6932 04d0 49000000 		.4byte	0x49
 6933 04d4 02       		.byte	0x2
 6934 04d5 91       		.byte	0x91
 6935 04d6 6E       		.sleb128 -18
 6936 04d7 17       		.uleb128 0x17
 6937 04d8 6900     		.ascii	"i\000"
 6938 04da 01       		.byte	0x1
 6939 04db 1F03     		.2byte	0x31f
 6940 04dd 29000000 		.4byte	0x29
 6941 04e1 02       		.byte	0x2
 6942 04e2 91       		.byte	0x91
 6943 04e3 77       		.sleb128 -9
 6944 04e4 00       		.byte	0
 6945 04e5 18       		.uleb128 0x18
 6946 04e6 01       		.byte	0x1
 6947 04e7 69030000 		.4byte	.LASF61
 6948 04eb 01       		.byte	0x1
 6949 04ec D203     		.2byte	0x3d2
 6950 04ee 01       		.byte	0x1
 6951 04ef 36020000 		.4byte	0x236
 6952 04f3 00000000 		.4byte	.LFB30
 6953 04f7 70010000 		.4byte	.LFE30
 6954 04fb 30010000 		.4byte	.LLST8
 6955 04ff 01       		.byte	0x1
 6956 0500 3F050000 		.4byte	0x53f
 6957 0504 16       		.uleb128 0x16
 6958 0505 C6060000 		.4byte	.LASF62
 6959 0509 01       		.byte	0x1
 6960 050a D203     		.2byte	0x3d2
 6961 050c 55020000 		.4byte	0x255
 6962 0510 02       		.byte	0x2
 6963 0511 91       		.byte	0x91
 6964 0512 6C       		.sleb128 -20
 6965 0513 16       		.uleb128 0x16
 6966 0514 58070000 		.4byte	.LASF63
 6967 0518 01       		.byte	0x1
 6968 0519 D203     		.2byte	0x3d2
 6969 051b 55020000 		.4byte	0x255
 6970 051f 02       		.byte	0x2
 6971 0520 91       		.byte	0x91
 6972 0521 68       		.sleb128 -24
 6973 0522 16       		.uleb128 0x16
 6974 0523 1C010000 		.4byte	.LASF58
 6975 0527 01       		.byte	0x1
 6976 0528 D203     		.2byte	0x3d2
 6977 052a 49000000 		.4byte	0x49
 6978 052e 02       		.byte	0x2
 6979 052f 91       		.byte	0x91
 6980 0530 66       		.sleb128 -26
 6981 0531 17       		.uleb128 0x17
 6982 0532 6900     		.ascii	"i\000"
 6983 0534 01       		.byte	0x1
 6984 0535 D403     		.2byte	0x3d4
 6985 0537 29000000 		.4byte	0x29
 6986 053b 02       		.byte	0x2
 6987 053c 91       		.byte	0x91
ARM GAS  /tmp/ccNuUijR.s 			page 168


 6988 053d 77       		.sleb128 -9
 6989 053e 00       		.byte	0
 6990 053f 18       		.uleb128 0x18
 6991 0540 01       		.byte	0x1
 6992 0541 90030000 		.4byte	.LASF64
 6993 0545 01       		.byte	0x1
 6994 0546 2204     		.2byte	0x422
 6995 0548 01       		.byte	0x1
 6996 0549 36020000 		.4byte	0x236
 6997 054d 00000000 		.4byte	.LFB31
 6998 0551 80080000 		.4byte	.LFE31
 6999 0555 5C010000 		.4byte	.LLST9
 7000 0559 01       		.byte	0x1
 7001 055a E4050000 		.4byte	0x5e4
 7002 055e 14       		.uleb128 0x14
 7003 055f 73696D00 		.ascii	"sim\000"
 7004 0563 01       		.byte	0x1
 7005 0564 2204     		.2byte	0x422
 7006 0566 36020000 		.4byte	0x236
 7007 056a 02       		.byte	0x2
 7008 056b 91       		.byte	0x91
 7009 056c 6F       		.sleb128 -17
 7010 056d 16       		.uleb128 0x16
 7011 056e E0030000 		.4byte	.LASF65
 7012 0572 01       		.byte	0x1
 7013 0573 2204     		.2byte	0x422
 7014 0575 55020000 		.4byte	0x255
 7015 0579 02       		.byte	0x2
 7016 057a 91       		.byte	0x91
 7017 057b 68       		.sleb128 -24
 7018 057c 16       		.uleb128 0x16
 7019 057d 24010000 		.4byte	.LASF66
 7020 0581 01       		.byte	0x1
 7021 0582 2204     		.2byte	0x422
 7022 0584 55020000 		.4byte	0x255
 7023 0588 02       		.byte	0x2
 7024 0589 91       		.byte	0x91
 7025 058a 64       		.sleb128 -28
 7026 058b 16       		.uleb128 0x16
 7027 058c 46030000 		.4byte	.LASF67
 7028 0590 01       		.byte	0x1
 7029 0591 2204     		.2byte	0x422
 7030 0593 55020000 		.4byte	0x255
 7031 0597 02       		.byte	0x2
 7032 0598 91       		.byte	0x91
 7033 0599 60       		.sleb128 -32
 7034 059a 16       		.uleb128 0x16
 7035 059b 60030000 		.4byte	.LASF68
 7036 059f 01       		.byte	0x1
 7037 05a0 2204     		.2byte	0x422
 7038 05a2 55020000 		.4byte	0x255
 7039 05a6 02       		.byte	0x2
 7040 05a7 91       		.byte	0x91
 7041 05a8 00       		.sleb128 0
 7042 05a9 16       		.uleb128 0x16
 7043 05aa 3D010000 		.4byte	.LASF69
 7044 05ae 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 169


 7045 05af 2204     		.2byte	0x422
 7046 05b1 55020000 		.4byte	0x255
 7047 05b5 02       		.byte	0x2
 7048 05b6 91       		.byte	0x91
 7049 05b7 04       		.sleb128 4
 7050 05b8 16       		.uleb128 0x16
 7051 05b9 83000000 		.4byte	.LASF70
 7052 05bd 01       		.byte	0x1
 7053 05be 2204     		.2byte	0x422
 7054 05c0 55020000 		.4byte	0x255
 7055 05c4 02       		.byte	0x2
 7056 05c5 91       		.byte	0x91
 7057 05c6 08       		.sleb128 8
 7058 05c7 16       		.uleb128 0x16
 7059 05c8 1C010000 		.4byte	.LASF58
 7060 05cc 01       		.byte	0x1
 7061 05cd 2204     		.2byte	0x422
 7062 05cf 49000000 		.4byte	0x49
 7063 05d3 02       		.byte	0x2
 7064 05d4 91       		.byte	0x91
 7065 05d5 0C       		.sleb128 12
 7066 05d6 17       		.uleb128 0x17
 7067 05d7 6900     		.ascii	"i\000"
 7068 05d9 01       		.byte	0x1
 7069 05da 2404     		.2byte	0x424
 7070 05dc 29000000 		.4byte	0x29
 7071 05e0 02       		.byte	0x2
 7072 05e1 91       		.byte	0x91
 7073 05e2 77       		.sleb128 -9
 7074 05e3 00       		.byte	0
 7075 05e4 18       		.uleb128 0x18
 7076 05e5 01       		.byte	0x1
 7077 05e6 4D070000 		.4byte	.LASF71
 7078 05ea 01       		.byte	0x1
 7079 05eb AC05     		.2byte	0x5ac
 7080 05ed 01       		.byte	0x1
 7081 05ee 36020000 		.4byte	0x236
 7082 05f2 00000000 		.4byte	.LFB32
 7083 05f6 84000000 		.4byte	.LFE32
 7084 05fa 88010000 		.4byte	.LLST10
 7085 05fe 01       		.byte	0x1
 7086 05ff 20060000 		.4byte	0x620
 7087 0603 14       		.uleb128 0x14
 7088 0604 73696D00 		.ascii	"sim\000"
 7089 0608 01       		.byte	0x1
 7090 0609 AC05     		.2byte	0x5ac
 7091 060b 29000000 		.4byte	0x29
 7092 060f 02       		.byte	0x2
 7093 0610 91       		.byte	0x91
 7094 0611 6F       		.sleb128 -17
 7095 0612 17       		.uleb128 0x17
 7096 0613 6900     		.ascii	"i\000"
 7097 0615 01       		.byte	0x1
 7098 0616 AF05     		.2byte	0x5af
 7099 0618 29000000 		.4byte	0x29
 7100 061c 02       		.byte	0x2
 7101 061d 91       		.byte	0x91
ARM GAS  /tmp/ccNuUijR.s 			page 170


 7102 061e 77       		.sleb128 -9
 7103 061f 00       		.byte	0
 7104 0620 18       		.uleb128 0x18
 7105 0621 01       		.byte	0x1
 7106 0622 97040000 		.4byte	.LASF72
 7107 0626 01       		.byte	0x1
 7108 0627 C405     		.2byte	0x5c4
 7109 0629 01       		.byte	0x1
 7110 062a 36020000 		.4byte	0x236
 7111 062e 00000000 		.4byte	.LFB33
 7112 0632 2C010000 		.4byte	.LFE33
 7113 0636 B4010000 		.4byte	.LLST11
 7114 063a 01       		.byte	0x1
 7115 063b 6B060000 		.4byte	0x66b
 7116 063f 16       		.uleb128 0x16
 7117 0640 C6060000 		.4byte	.LASF62
 7118 0644 01       		.byte	0x1
 7119 0645 C405     		.2byte	0x5c4
 7120 0647 55020000 		.4byte	0x255
 7121 064b 02       		.byte	0x2
 7122 064c 91       		.byte	0x91
 7123 064d 6C       		.sleb128 -20
 7124 064e 16       		.uleb128 0x16
 7125 064f 1C010000 		.4byte	.LASF58
 7126 0653 01       		.byte	0x1
 7127 0654 C405     		.2byte	0x5c4
 7128 0656 49000000 		.4byte	0x49
 7129 065a 02       		.byte	0x2
 7130 065b 91       		.byte	0x91
 7131 065c 6A       		.sleb128 -22
 7132 065d 17       		.uleb128 0x17
 7133 065e 6900     		.ascii	"i\000"
 7134 0660 01       		.byte	0x1
 7135 0661 C605     		.2byte	0x5c6
 7136 0663 29000000 		.4byte	0x29
 7137 0667 02       		.byte	0x2
 7138 0668 91       		.byte	0x91
 7139 0669 77       		.sleb128 -9
 7140 066a 00       		.byte	0
 7141 066b 11       		.uleb128 0x11
 7142 066c 01       		.byte	0x1
 7143 066d CD080000 		.4byte	.LASF73
 7144 0671 01       		.byte	0x1
 7145 0672 0306     		.2byte	0x603
 7146 0674 01       		.byte	0x1
 7147 0675 00000000 		.4byte	.LFB34
 7148 0679 F8000000 		.4byte	.LFE34
 7149 067d 02       		.byte	0x2
 7150 067e 7D       		.byte	0x7d
 7151 067f 00       		.sleb128 0
 7152 0680 01       		.byte	0x1
 7153 0681 15       		.uleb128 0x15
 7154 0682 01       		.byte	0x1
 7155 0683 FB010000 		.4byte	.LASF75
 7156 0687 01       		.byte	0x1
 7157 0688 2306     		.2byte	0x623
 7158 068a 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 171


 7159 068b 00000000 		.4byte	.LFB35
 7160 068f 74020000 		.4byte	.LFE35
 7161 0693 E0010000 		.4byte	.LLST12
 7162 0697 01       		.byte	0x1
 7163 0698 D5060000 		.4byte	0x6d5
 7164 069c 17       		.uleb128 0x17
 7165 069d 6900     		.ascii	"i\000"
 7166 069f 01       		.byte	0x1
 7167 06a0 2506     		.2byte	0x625
 7168 06a2 29000000 		.4byte	0x29
 7169 06a6 02       		.byte	0x2
 7170 06a7 91       		.byte	0x91
 7171 06a8 6F       		.sleb128 -17
 7172 06a9 17       		.uleb128 0x17
 7173 06aa 6A00     		.ascii	"j\000"
 7174 06ac 01       		.byte	0x1
 7175 06ad 2506     		.2byte	0x625
 7176 06af 29000000 		.4byte	0x29
 7177 06b3 02       		.byte	0x2
 7178 06b4 91       		.byte	0x91
 7179 06b5 77       		.sleb128 -9
 7180 06b6 13       		.uleb128 0x13
 7181 06b7 C0040000 		.4byte	.LASF76
 7182 06bb 01       		.byte	0x1
 7183 06bc 2506     		.2byte	0x625
 7184 06be 29000000 		.4byte	0x29
 7185 06c2 02       		.byte	0x2
 7186 06c3 91       		.byte	0x91
 7187 06c4 76       		.sleb128 -10
 7188 06c5 13       		.uleb128 0x13
 7189 06c6 AC050000 		.4byte	.LASF77
 7190 06ca 01       		.byte	0x1
 7191 06cb 2606     		.2byte	0x626
 7192 06cd 55020000 		.4byte	0x255
 7193 06d1 02       		.byte	0x2
 7194 06d2 91       		.byte	0x91
 7195 06d3 70       		.sleb128 -16
 7196 06d4 00       		.byte	0
 7197 06d5 18       		.uleb128 0x18
 7198 06d6 01       		.byte	0x1
 7199 06d7 B5060000 		.4byte	.LASF78
 7200 06db 01       		.byte	0x1
 7201 06dc 9307     		.2byte	0x793
 7202 06de 01       		.byte	0x1
 7203 06df 36020000 		.4byte	0x236
 7204 06e3 00000000 		.4byte	.LFB36
 7205 06e7 E8060000 		.4byte	.LFE36
 7206 06eb 0C020000 		.4byte	.LLST13
 7207 06ef 01       		.byte	0x1
 7208 06f0 7A070000 		.4byte	0x77a
 7209 06f4 14       		.uleb128 0x14
 7210 06f5 73696D00 		.ascii	"sim\000"
 7211 06f9 01       		.byte	0x1
 7212 06fa 9307     		.2byte	0x793
 7213 06fc 36020000 		.4byte	0x236
 7214 0700 02       		.byte	0x2
 7215 0701 91       		.byte	0x91
ARM GAS  /tmp/ccNuUijR.s 			page 172


 7216 0702 6F       		.sleb128 -17
 7217 0703 16       		.uleb128 0x16
 7218 0704 E0030000 		.4byte	.LASF65
 7219 0708 01       		.byte	0x1
 7220 0709 9307     		.2byte	0x793
 7221 070b 55020000 		.4byte	0x255
 7222 070f 02       		.byte	0x2
 7223 0710 91       		.byte	0x91
 7224 0711 68       		.sleb128 -24
 7225 0712 16       		.uleb128 0x16
 7226 0713 24010000 		.4byte	.LASF66
 7227 0717 01       		.byte	0x1
 7228 0718 9307     		.2byte	0x793
 7229 071a 55020000 		.4byte	0x255
 7230 071e 02       		.byte	0x2
 7231 071f 91       		.byte	0x91
 7232 0720 64       		.sleb128 -28
 7233 0721 16       		.uleb128 0x16
 7234 0722 46030000 		.4byte	.LASF67
 7235 0726 01       		.byte	0x1
 7236 0727 9307     		.2byte	0x793
 7237 0729 55020000 		.4byte	0x255
 7238 072d 02       		.byte	0x2
 7239 072e 91       		.byte	0x91
 7240 072f 60       		.sleb128 -32
 7241 0730 16       		.uleb128 0x16
 7242 0731 60030000 		.4byte	.LASF68
 7243 0735 01       		.byte	0x1
 7244 0736 9307     		.2byte	0x793
 7245 0738 55020000 		.4byte	0x255
 7246 073c 02       		.byte	0x2
 7247 073d 91       		.byte	0x91
 7248 073e 00       		.sleb128 0
 7249 073f 16       		.uleb128 0x16
 7250 0740 3D010000 		.4byte	.LASF69
 7251 0744 01       		.byte	0x1
 7252 0745 9307     		.2byte	0x793
 7253 0747 55020000 		.4byte	0x255
 7254 074b 02       		.byte	0x2
 7255 074c 91       		.byte	0x91
 7256 074d 04       		.sleb128 4
 7257 074e 16       		.uleb128 0x16
 7258 074f 83000000 		.4byte	.LASF70
 7259 0753 01       		.byte	0x1
 7260 0754 9307     		.2byte	0x793
 7261 0756 55020000 		.4byte	0x255
 7262 075a 02       		.byte	0x2
 7263 075b 91       		.byte	0x91
 7264 075c 08       		.sleb128 8
 7265 075d 16       		.uleb128 0x16
 7266 075e 1C010000 		.4byte	.LASF58
 7267 0762 01       		.byte	0x1
 7268 0763 9307     		.2byte	0x793
 7269 0765 49000000 		.4byte	0x49
 7270 0769 02       		.byte	0x2
 7271 076a 91       		.byte	0x91
 7272 076b 0C       		.sleb128 12
ARM GAS  /tmp/ccNuUijR.s 			page 173


 7273 076c 17       		.uleb128 0x17
 7274 076d 6900     		.ascii	"i\000"
 7275 076f 01       		.byte	0x1
 7276 0770 9507     		.2byte	0x795
 7277 0772 29000000 		.4byte	0x29
 7278 0776 02       		.byte	0x2
 7279 0777 91       		.byte	0x91
 7280 0778 77       		.sleb128 -9
 7281 0779 00       		.byte	0
 7282 077a 1A       		.uleb128 0x1a
 7283 077b 9F050000 		.4byte	.LASF79
 7284 077f 01       		.byte	0x1
 7285 0780 0F       		.byte	0xf
 7286 0781 3D020000 		.4byte	0x23d
 7287 0785 01       		.byte	0x1
 7288 0786 01       		.byte	0x1
 7289 0787 06       		.uleb128 0x6
 7290 0788 36020000 		.4byte	0x236
 7291 078c 97070000 		.4byte	0x797
 7292 0790 07       		.uleb128 0x7
 7293 0791 9B000000 		.4byte	0x9b
 7294 0795 FF       		.byte	0xff
 7295 0796 00       		.byte	0
 7296 0797 1B       		.uleb128 0x1b
 7297 0798 30070000 		.4byte	.LASF80
 7298 079c 01       		.byte	0x1
 7299 079d 17       		.byte	0x17
 7300 079e A9070000 		.4byte	0x7a9
 7301 07a2 01       		.byte	0x1
 7302 07a3 05       		.byte	0x5
 7303 07a4 03       		.byte	0x3
 7304 07a5 00000000 		.4byte	buffUARTGSMrx2
 7305 07a9 05       		.uleb128 0x5
 7306 07aa 87070000 		.4byte	0x787
 7307 07ae 1B       		.uleb128 0x1b
 7308 07af EE020000 		.4byte	.LASF81
 7309 07b3 01       		.byte	0x1
 7310 07b4 18       		.byte	0x18
 7311 07b5 C0070000 		.4byte	0x7c0
 7312 07b9 01       		.byte	0x1
 7313 07ba 05       		.byte	0x5
 7314 07bb 03       		.byte	0x3
 7315 07bc 00000000 		.4byte	PacketReadyUARTGSM
 7316 07c0 05       		.uleb128 0x5
 7317 07c1 36020000 		.4byte	0x236
 7318 07c5 1B       		.uleb128 0x1b
 7319 07c6 3F070000 		.4byte	.LASF82
 7320 07ca 01       		.byte	0x1
 7321 07cb 1C       		.byte	0x1c
 7322 07cc 29000000 		.4byte	0x29
 7323 07d0 01       		.byte	0x1
 7324 07d1 05       		.byte	0x5
 7325 07d2 03       		.byte	0x3
 7326 07d3 00000000 		.4byte	GSMStartState
 7327 07d7 1B       		.uleb128 0x1b
 7328 07d8 95070000 		.4byte	.LASF83
 7329 07dc 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 174


 7330 07dd 1D       		.byte	0x1d
 7331 07de E9070000 		.4byte	0x7e9
 7332 07e2 01       		.byte	0x1
 7333 07e3 05       		.byte	0x5
 7334 07e4 03       		.byte	0x3
 7335 07e5 00000000 		.4byte	GSMStartTime
 7336 07e9 05       		.uleb128 0x5
 7337 07ea 49000000 		.4byte	0x49
 7338 07ee 1B       		.uleb128 0x1b
 7339 07ef 49060000 		.4byte	.LASF84
 7340 07f3 01       		.byte	0x1
 7341 07f4 1E       		.byte	0x1e
 7342 07f5 E9070000 		.4byte	0x7e9
 7343 07f9 01       		.byte	0x1
 7344 07fa 05       		.byte	0x5
 7345 07fb 03       		.byte	0x3
 7346 07fc 00000000 		.4byte	GSMGeneralTimeOut
 7347 0800 1B       		.uleb128 0x1b
 7348 0801 74040000 		.4byte	.LASF85
 7349 0805 01       		.byte	0x1
 7350 0806 21       		.byte	0x21
 7351 0807 36020000 		.4byte	0x236
 7352 080b 01       		.byte	0x1
 7353 080c 05       		.byte	0x5
 7354 080d 03       		.byte	0x3
 7355 080e 00000000 		.4byte	GSMSendCommandState
 7356 0812 1B       		.uleb128 0x1b
 7357 0813 82050000 		.4byte	.LASF86
 7358 0817 01       		.byte	0x1
 7359 0818 22       		.byte	0x22
 7360 0819 36020000 		.4byte	0x236
 7361 081d 01       		.byte	0x1
 7362 081e 05       		.byte	0x5
 7363 081f 03       		.byte	0x3
 7364 0820 00000000 		.4byte	GSMSendCommandFlag
 7365 0824 1B       		.uleb128 0x1b
 7366 0825 15020000 		.4byte	.LASF87
 7367 0829 01       		.byte	0x1
 7368 082a 23       		.byte	0x23
 7369 082b E9070000 		.4byte	0x7e9
 7370 082f 01       		.byte	0x1
 7371 0830 05       		.byte	0x5
 7372 0831 03       		.byte	0x3
 7373 0832 00000000 		.4byte	GSMSendCommandTimeOut
 7374 0836 1B       		.uleb128 0x1b
 7375 0837 06070000 		.4byte	.LASF88
 7376 083b 01       		.byte	0x1
 7377 083c 24       		.byte	0x24
 7378 083d 36020000 		.4byte	0x236
 7379 0841 01       		.byte	0x1
 7380 0842 05       		.byte	0x5
 7381 0843 03       		.byte	0x3
 7382 0844 00000000 		.4byte	GSMSendCommandIntento
 7383 0848 1B       		.uleb128 0x1b
 7384 0849 57020000 		.4byte	.LASF89
 7385 084d 01       		.byte	0x1
 7386 084e 27       		.byte	0x27
ARM GAS  /tmp/ccNuUijR.s 			page 175


 7387 084f 36020000 		.4byte	0x236
 7388 0853 01       		.byte	0x1
 7389 0854 05       		.byte	0x5
 7390 0855 03       		.byte	0x3
 7391 0856 00000000 		.4byte	GSMSendSMSState
 7392 085a 1B       		.uleb128 0x1b
 7393 085b E3010000 		.4byte	.LASF90
 7394 085f 01       		.byte	0x1
 7395 0860 28       		.byte	0x28
 7396 0861 36020000 		.4byte	0x236
 7397 0865 01       		.byte	0x1
 7398 0866 05       		.byte	0x5
 7399 0867 03       		.byte	0x3
 7400 0868 00000000 		.4byte	GSMSendSMSFlag
 7401 086c 1B       		.uleb128 0x1b
 7402 086d 2B000000 		.4byte	.LASF91
 7403 0871 01       		.byte	0x1
 7404 0872 29       		.byte	0x29
 7405 0873 E9070000 		.4byte	0x7e9
 7406 0877 01       		.byte	0x1
 7407 0878 05       		.byte	0x5
 7408 0879 03       		.byte	0x3
 7409 087a 00000000 		.4byte	GSMSendSMSTimeOut
 7410 087e 06       		.uleb128 0x6
 7411 087f 36020000 		.4byte	0x236
 7412 0883 8E080000 		.4byte	0x88e
 7413 0887 07       		.uleb128 0x7
 7414 0888 9B000000 		.4byte	0x9b
 7415 088c 1F       		.byte	0x1f
 7416 088d 00       		.byte	0
 7417 088e 1B       		.uleb128 0x1b
 7418 088f D1010000 		.4byte	.LASF92
 7419 0893 01       		.byte	0x1
 7420 0894 2A       		.byte	0x2a
 7421 0895 7E080000 		.4byte	0x87e
 7422 0899 01       		.byte	0x1
 7423 089a 05       		.byte	0x5
 7424 089b 03       		.byte	0x3
 7425 089c 00000000 		.4byte	GSMSendSMSbuffAux
 7426 08a0 1B       		.uleb128 0x1b
 7427 08a1 2E050000 		.4byte	.LASF93
 7428 08a5 01       		.byte	0x1
 7429 08a6 2D       		.byte	0x2d
 7430 08a7 36020000 		.4byte	0x236
 7431 08ab 01       		.byte	0x1
 7432 08ac 05       		.byte	0x5
 7433 08ad 03       		.byte	0x3
 7434 08ae 00000000 		.4byte	GSMConfigState
 7435 08b2 1B       		.uleb128 0x1b
 7436 08b3 15000000 		.4byte	.LASF94
 7437 08b7 01       		.byte	0x1
 7438 08b8 2E       		.byte	0x2e
 7439 08b9 E9070000 		.4byte	0x7e9
 7440 08bd 01       		.byte	0x1
 7441 08be 05       		.byte	0x5
 7442 08bf 03       		.byte	0x3
 7443 08c0 00000000 		.4byte	GSMConfigTimeOut
ARM GAS  /tmp/ccNuUijR.s 			page 176


 7444 08c4 1B       		.uleb128 0x1b
 7445 08c5 57000000 		.4byte	.LASF95
 7446 08c9 01       		.byte	0x1
 7447 08ca 2F       		.byte	0x2f
 7448 08cb E9070000 		.4byte	0x7e9
 7449 08cf 01       		.byte	0x1
 7450 08d0 05       		.byte	0x5
 7451 08d1 03       		.byte	0x3
 7452 08d2 00000000 		.4byte	GSMConfigTime
 7453 08d6 1B       		.uleb128 0x1b
 7454 08d7 3D050000 		.4byte	.LASF96
 7455 08db 01       		.byte	0x1
 7456 08dc 32       		.byte	0x32
 7457 08dd 49000000 		.4byte	0x49
 7458 08e1 01       		.byte	0x1
 7459 08e2 05       		.byte	0x5
 7460 08e3 03       		.byte	0x3
 7461 08e4 00000000 		.4byte	GSMConfigGPRSTimeOut
 7462 08e8 1B       		.uleb128 0x1b
 7463 08e9 D1050000 		.4byte	.LASF97
 7464 08ed 01       		.byte	0x1
 7465 08ee 33       		.byte	0x33
 7466 08ef 36020000 		.4byte	0x236
 7467 08f3 01       		.byte	0x1
 7468 08f4 05       		.byte	0x5
 7469 08f5 03       		.byte	0x3
 7470 08f6 00000000 		.4byte	GSMConfigGPRSState
 7471 08fa 1B       		.uleb128 0x1b
 7472 08fb CA020000 		.4byte	.LASF98
 7473 08ff 01       		.byte	0x1
 7474 0900 34       		.byte	0x34
 7475 0901 36020000 		.4byte	0x236
 7476 0905 01       		.byte	0x1
 7477 0906 05       		.byte	0x5
 7478 0907 03       		.byte	0x3
 7479 0908 00000000 		.4byte	GSMConfigGPRSflag
 7480 090c 1B       		.uleb128 0x1b
 7481 090d C3050000 		.4byte	.LASF99
 7482 0911 01       		.byte	0x1
 7483 0912 35       		.byte	0x35
 7484 0913 7E080000 		.4byte	0x87e
 7485 0917 01       		.byte	0x1
 7486 0918 05       		.byte	0x5
 7487 0919 03       		.byte	0x3
 7488 091a 00000000 		.4byte	GSMbuffStatus
 7489 091e 06       		.uleb128 0x6
 7490 091f 36020000 		.4byte	0x236
 7491 0923 2E090000 		.4byte	0x92e
 7492 0927 07       		.uleb128 0x7
 7493 0928 9B000000 		.4byte	0x9b
 7494 092c 3F       		.byte	0x3f
 7495 092d 00       		.byte	0
 7496 092e 1B       		.uleb128 0x1b
 7497 092f 29030000 		.4byte	.LASF100
 7498 0933 01       		.byte	0x1
 7499 0934 36       		.byte	0x36
 7500 0935 1E090000 		.4byte	0x91e
ARM GAS  /tmp/ccNuUijR.s 			page 177


 7501 0939 01       		.byte	0x1
 7502 093a 05       		.byte	0x5
 7503 093b 03       		.byte	0x3
 7504 093c 00000000 		.4byte	GSMbuffGPRSCommand
 7505 0940 06       		.uleb128 0x6
 7506 0941 36020000 		.4byte	0x236
 7507 0945 50090000 		.4byte	0x950
 7508 0949 07       		.uleb128 0x7
 7509 094a 9B000000 		.4byte	0x9b
 7510 094e 0F       		.byte	0xf
 7511 094f 00       		.byte	0
 7512 0950 1B       		.uleb128 0x1b
 7513 0951 6C060000 		.4byte	.LASF101
 7514 0955 01       		.byte	0x1
 7515 0956 37       		.byte	0x37
 7516 0957 40090000 		.4byte	0x940
 7517 095b 01       		.byte	0x1
 7518 095c 05       		.byte	0x5
 7519 095d 03       		.byte	0x3
 7520 095e 00000000 		.4byte	GSMIPadd
 7521 0962 1B       		.uleb128 0x1b
 7522 0963 18040000 		.4byte	.LASF102
 7523 0967 01       		.byte	0x1
 7524 0968 38       		.byte	0x38
 7525 0969 29000000 		.4byte	0x29
 7526 096d 01       		.byte	0x1
 7527 096e 05       		.byte	0x5
 7528 096f 03       		.byte	0x3
 7529 0970 00000000 		.4byte	GPRSrssi
 7530 0974 1B       		.uleb128 0x1b
 7531 0975 1C070000 		.4byte	.LASF103
 7532 0979 01       		.byte	0x1
 7533 097a 3B       		.byte	0x3b
 7534 097b 36020000 		.4byte	0x236
 7535 097f 01       		.byte	0x1
 7536 0980 05       		.byte	0x5
 7537 0981 03       		.byte	0x3
 7538 0982 00000000 		.4byte	GSMSendIPState
 7539 0986 1B       		.uleb128 0x1b
 7540 0987 3D000000 		.4byte	.LASF104
 7541 098b 01       		.byte	0x1
 7542 098c 3C       		.byte	0x3c
 7543 098d 36020000 		.4byte	0x236
 7544 0991 01       		.byte	0x1
 7545 0992 05       		.byte	0x5
 7546 0993 03       		.byte	0x3
 7547 0994 00000000 		.4byte	GSMSendIPFlag
 7548 0998 1B       		.uleb128 0x1b
 7549 0999 80060000 		.4byte	.LASF105
 7550 099d 01       		.byte	0x1
 7551 099e 3D       		.byte	0x3d
 7552 099f E9070000 		.4byte	0x7e9
 7553 09a3 01       		.byte	0x1
 7554 09a4 05       		.byte	0x5
 7555 09a5 03       		.byte	0x3
 7556 09a6 00000000 		.4byte	GSMSendIPTimeOut
 7557 09aa 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccNuUijR.s 			page 178


 7558 09ab E0080000 		.4byte	.LASF106
 7559 09af 01       		.byte	0x1
 7560 09b0 3E       		.byte	0x3e
 7561 09b1 7E080000 		.4byte	0x87e
 7562 09b5 01       		.byte	0x1
 7563 09b6 05       		.byte	0x5
 7564 09b7 03       		.byte	0x3
 7565 09b8 00000000 		.4byte	GSMSendIPbuffAux
 7566 09bc 1B       		.uleb128 0x1b
 7567 09bd 2D040000 		.4byte	.LASF107
 7568 09c1 01       		.byte	0x1
 7569 09c2 40       		.byte	0x40
 7570 09c3 87070000 		.4byte	0x787
 7571 09c7 01       		.byte	0x1
 7572 09c8 05       		.byte	0x5
 7573 09c9 03       		.byte	0x3
 7574 09ca 00000000 		.4byte	GSMbuffRtaCommand
 7575 09ce 06       		.uleb128 0x6
 7576 09cf 36020000 		.4byte	0x236
 7577 09d3 DE090000 		.4byte	0x9de
 7578 09d7 07       		.uleb128 0x7
 7579 09d8 9B000000 		.4byte	0x9b
 7580 09dc 02       		.byte	0x2
 7581 09dd 00       		.byte	0
 7582 09de 1B       		.uleb128 0x1b
 7583 09df B2030000 		.4byte	.LASF108
 7584 09e3 01       		.byte	0x1
 7585 09e4 43       		.byte	0x43
 7586 09e5 F0090000 		.4byte	0x9f0
 7587 09e9 01       		.byte	0x1
 7588 09ea 05       		.byte	0x5
 7589 09eb 03       		.byte	0x3
 7590 09ec 00000000 		.4byte	GSM_OK
 7591 09f0 1C       		.uleb128 0x1c
 7592 09f1 CE090000 		.4byte	0x9ce
 7593 09f5 06       		.uleb128 0x6
 7594 09f6 36020000 		.4byte	0x236
 7595 09fa 050A0000 		.4byte	0xa05
 7596 09fe 07       		.uleb128 0x7
 7597 09ff 9B000000 		.4byte	0x9b
 7598 0a03 05       		.byte	0x5
 7599 0a04 00       		.byte	0
 7600 0a05 1B       		.uleb128 0x1b
 7601 0a06 A2070000 		.4byte	.LASF109
 7602 0a0a 01       		.byte	0x1
 7603 0a0b 44       		.byte	0x44
 7604 0a0c 170A0000 		.4byte	0xa17
 7605 0a10 01       		.byte	0x1
 7606 0a11 05       		.byte	0x5
 7607 0a12 03       		.byte	0x3
 7608 0a13 00000000 		.4byte	GSM_ERR
 7609 0a17 1C       		.uleb128 0x1c
 7610 0a18 F5090000 		.4byte	0x9f5
 7611 0a1c 06       		.uleb128 0x6
 7612 0a1d 36020000 		.4byte	0x236
 7613 0a21 2C0A0000 		.4byte	0xa2c
 7614 0a25 07       		.uleb128 0x7
ARM GAS  /tmp/ccNuUijR.s 			page 179


 7615 0a26 9B000000 		.4byte	0x9b
 7616 0a2a 06       		.byte	0x6
 7617 0a2b 00       		.byte	0
 7618 0a2c 1B       		.uleb128 0x1b
 7619 0a2d 34060000 		.4byte	.LASF110
 7620 0a31 01       		.byte	0x1
 7621 0a32 46       		.byte	0x46
 7622 0a33 3E0A0000 		.4byte	0xa3e
 7623 0a37 01       		.byte	0x1
 7624 0a38 05       		.byte	0x5
 7625 0a39 03       		.byte	0x3
 7626 0a3a 00000000 		.4byte	GSM_CMGF
 7627 0a3e 1C       		.uleb128 0x1c
 7628 0a3f 1C0A0000 		.4byte	0xa1c
 7629 0a43 1B       		.uleb128 0x1b
 7630 0a44 60060000 		.4byte	.LASF111
 7631 0a48 01       		.byte	0x1
 7632 0a49 47       		.byte	0x47
 7633 0a4a 550A0000 		.4byte	0xa55
 7634 0a4e 01       		.byte	0x1
 7635 0a4f 05       		.byte	0x5
 7636 0a50 03       		.byte	0x3
 7637 0a51 00000000 		.4byte	GSM_IPSTATE
 7638 0a55 1C       		.uleb128 0x1c
 7639 0a56 1C0A0000 		.4byte	0xa1c
 7640 0a5a 06       		.uleb128 0x6
 7641 0a5b 36020000 		.4byte	0x236
 7642 0a5f 6A0A0000 		.4byte	0xa6a
 7643 0a63 07       		.uleb128 0x7
 7644 0a64 9B000000 		.4byte	0x9b
 7645 0a68 0A       		.byte	0xa
 7646 0a69 00       		.byte	0
 7647 0a6a 1B       		.uleb128 0x1b
 7648 0a6b B2040000 		.4byte	.LASF112
 7649 0a6f 01       		.byte	0x1
 7650 0a70 4A       		.byte	0x4a
 7651 0a71 7C0A0000 		.4byte	0xa7c
 7652 0a75 01       		.byte	0x1
 7653 0a76 05       		.byte	0x5
 7654 0a77 03       		.byte	0x3
 7655 0a78 00000000 		.4byte	GSM_IPINITIAL
 7656 0a7c 1C       		.uleb128 0x1c
 7657 0a7d 5A0A0000 		.4byte	0xa5a
 7658 0a81 06       		.uleb128 0x6
 7659 0a82 36020000 		.4byte	0x236
 7660 0a86 910A0000 		.4byte	0xa91
 7661 0a8a 07       		.uleb128 0x7
 7662 0a8b 9B000000 		.4byte	0x9b
 7663 0a8f 08       		.byte	0x8
 7664 0a90 00       		.byte	0
 7665 0a91 1B       		.uleb128 0x1b
 7666 0a92 21040000 		.4byte	.LASF113
 7667 0a96 01       		.byte	0x1
 7668 0a97 4B       		.byte	0x4b
 7669 0a98 A30A0000 		.4byte	0xaa3
 7670 0a9c 01       		.byte	0x1
 7671 0a9d 05       		.byte	0x5
ARM GAS  /tmp/ccNuUijR.s 			page 180


 7672 0a9e 03       		.byte	0x3
 7673 0a9f 00000000 		.4byte	GSM_IPSTART
 7674 0aa3 1C       		.uleb128 0x1c
 7675 0aa4 810A0000 		.4byte	0xa81
 7676 0aa8 1B       		.uleb128 0x1b
 7677 0aa9 9D020000 		.4byte	.LASF114
 7678 0aad 01       		.byte	0x1
 7679 0aae 4C       		.byte	0x4c
 7680 0aaf BA0A0000 		.4byte	0xaba
 7681 0ab3 01       		.byte	0x1
 7682 0ab4 05       		.byte	0x5
 7683 0ab5 03       		.byte	0x3
 7684 0ab6 00000000 		.4byte	GSM_IPGPRSACT
 7685 0aba 1C       		.uleb128 0x1c
 7686 0abb 5A0A0000 		.4byte	0xa5a
 7687 0abf 06       		.uleb128 0x6
 7688 0ac0 36020000 		.4byte	0x236
 7689 0ac4 CF0A0000 		.4byte	0xacf
 7690 0ac8 07       		.uleb128 0x7
 7691 0ac9 9B000000 		.4byte	0x9b
 7692 0acd 09       		.byte	0x9
 7693 0ace 00       		.byte	0
 7694 0acf 1B       		.uleb128 0x1b
 7695 0ad0 F0060000 		.4byte	.LASF115
 7696 0ad4 01       		.byte	0x1
 7697 0ad5 4D       		.byte	0x4d
 7698 0ad6 E10A0000 		.4byte	0xae1
 7699 0ada 01       		.byte	0x1
 7700 0adb 05       		.byte	0x5
 7701 0adc 03       		.byte	0x3
 7702 0add 00000000 		.4byte	GSM_IPSTATUS
 7703 0ae1 1C       		.uleb128 0x1c
 7704 0ae2 BF0A0000 		.4byte	0xabf
 7705 0ae6 06       		.uleb128 0x6
 7706 0ae7 36020000 		.4byte	0x236
 7707 0aeb F60A0000 		.4byte	0xaf6
 7708 0aef 07       		.uleb128 0x7
 7709 0af0 9B000000 		.4byte	0x9b
 7710 0af4 0E       		.byte	0xe
 7711 0af5 00       		.byte	0
 7712 0af6 1B       		.uleb128 0x1b
 7713 0af7 A1040000 		.4byte	.LASF116
 7714 0afb 01       		.byte	0x1
 7715 0afc 4E       		.byte	0x4e
 7716 0afd 080B0000 		.4byte	0xb08
 7717 0b01 01       		.byte	0x1
 7718 0b02 05       		.byte	0x5
 7719 0b03 03       		.byte	0x3
 7720 0b04 00000000 		.4byte	GSM_IPCONNECTING
 7721 0b08 1C       		.uleb128 0x1c
 7722 0b09 E60A0000 		.4byte	0xae6
 7723 0b0d 1B       		.uleb128 0x1b
 7724 0b0e BB000000 		.4byte	.LASF117
 7725 0b12 01       		.byte	0x1
 7726 0b13 4F       		.byte	0x4f
 7727 0b14 1F0B0000 		.4byte	0xb1f
 7728 0b18 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 181


 7729 0b19 05       		.byte	0x5
 7730 0b1a 03       		.byte	0x3
 7731 0b1b 00000000 		.4byte	GSM_IPCONNOK
 7732 0b1f 1C       		.uleb128 0x1c
 7733 0b20 5A0A0000 		.4byte	0xa5a
 7734 0b24 06       		.uleb128 0x6
 7735 0b25 36020000 		.4byte	0x236
 7736 0b29 340B0000 		.4byte	0xb34
 7737 0b2d 07       		.uleb128 0x7
 7738 0b2e 9B000000 		.4byte	0x9b
 7739 0b32 0C       		.byte	0xc
 7740 0b33 00       		.byte	0
 7741 0b34 1B       		.uleb128 0x1b
 7742 0b35 88040000 		.4byte	.LASF118
 7743 0b39 01       		.byte	0x1
 7744 0b3a 50       		.byte	0x50
 7745 0b3b 460B0000 		.4byte	0xb46
 7746 0b3f 01       		.byte	0x1
 7747 0b40 05       		.byte	0x5
 7748 0b41 03       		.byte	0x3
 7749 0b42 00000000 		.4byte	GSM_IPCONNFAIL
 7750 0b46 1C       		.uleb128 0x1c
 7751 0b47 240B0000 		.4byte	0xb24
 7752 0b4b 1B       		.uleb128 0x1b
 7753 0b4c 6C000000 		.4byte	.LASF119
 7754 0b50 01       		.byte	0x1
 7755 0b51 51       		.byte	0x51
 7756 0b52 5D0B0000 		.4byte	0xb5d
 7757 0b56 01       		.byte	0x1
 7758 0b57 05       		.byte	0x5
 7759 0b58 03       		.byte	0x3
 7760 0b59 00000000 		.4byte	GSM_IPCONNCLOSE
 7761 0b5d 1C       		.uleb128 0x1c
 7762 0b5e 5A0A0000 		.4byte	0xa5a
 7763 0b62 06       		.uleb128 0x6
 7764 0b63 36020000 		.4byte	0x236
 7765 0b67 720B0000 		.4byte	0xb72
 7766 0b6b 07       		.uleb128 0x7
 7767 0b6c 9B000000 		.4byte	0x9b
 7768 0b70 04       		.byte	0x4
 7769 0b71 00       		.byte	0
 7770 0b72 1B       		.uleb128 0x1b
 7771 0b73 01030000 		.4byte	.LASF120
 7772 0b77 01       		.byte	0x1
 7773 0b78 53       		.byte	0x53
 7774 0b79 840B0000 		.4byte	0xb84
 7775 0b7d 01       		.byte	0x1
 7776 0b7e 05       		.byte	0x5
 7777 0b7f 03       		.byte	0x3
 7778 0b80 00000000 		.4byte	GSM_SIM1
 7779 0b84 1C       		.uleb128 0x1c
 7780 0b85 620B0000 		.4byte	0xb62
 7781 0b89 1B       		.uleb128 0x1b
 7782 0b8a D7030000 		.4byte	.LASF121
 7783 0b8e 01       		.byte	0x1
 7784 0b8f 54       		.byte	0x54
 7785 0b90 9B0B0000 		.4byte	0xb9b
ARM GAS  /tmp/ccNuUijR.s 			page 182


 7786 0b94 01       		.byte	0x1
 7787 0b95 05       		.byte	0x5
 7788 0b96 03       		.byte	0x3
 7789 0b97 00000000 		.4byte	GSM_SIM2
 7790 0b9b 1C       		.uleb128 0x1c
 7791 0b9c 620B0000 		.4byte	0xb62
 7792 0ba0 1B       		.uleb128 0x1b
 7793 0ba1 B9030000 		.4byte	.LASF122
 7794 0ba5 01       		.byte	0x1
 7795 0ba6 55       		.byte	0x55
 7796 0ba7 B20B0000 		.4byte	0xbb2
 7797 0bab 01       		.byte	0x1
 7798 0bac 05       		.byte	0x5
 7799 0bad 03       		.byte	0x3
 7800 0bae 00000000 		.4byte	GSM_SENDOK
 7801 0bb2 1C       		.uleb128 0x1c
 7802 0bb3 5B020000 		.4byte	0x25b
 7803 0bb7 1B       		.uleb128 0x1b
 7804 0bb8 71080000 		.4byte	.LASF123
 7805 0bbc 01       		.byte	0x1
 7806 0bbd 57       		.byte	0x57
 7807 0bbe 29000000 		.4byte	0x29
 7808 0bc2 01       		.byte	0x1
 7809 0bc3 05       		.byte	0x5
 7810 0bc4 03       		.byte	0x3
 7811 0bc5 00000000 		.4byte	prestadorSimState
 7812 0bc9 1B       		.uleb128 0x1b
 7813 0bca BC080000 		.4byte	.LASF124
 7814 0bce 01       		.byte	0x1
 7815 0bcf 58       		.byte	0x58
 7816 0bd0 29000000 		.4byte	0x29
 7817 0bd4 01       		.byte	0x1
 7818 0bd5 05       		.byte	0x5
 7819 0bd6 03       		.byte	0x3
 7820 0bd7 00000000 		.4byte	prestadorSimTime
 7821 0bdb 1B       		.uleb128 0x1b
 7822 0bdc AB020000 		.4byte	.LASF125
 7823 0be0 01       		.byte	0x1
 7824 0be1 5C       		.byte	0x5c
 7825 0be2 29000000 		.4byte	0x29
 7826 0be6 01       		.byte	0x1
 7827 0be7 05       		.byte	0x5
 7828 0be8 03       		.byte	0x3
 7829 0be9 00000000 		.4byte	GSMCantSMS
 7830 0bed 1B       		.uleb128 0x1b
 7831 0bee 81010000 		.4byte	.LASF126
 7832 0bf2 01       		.byte	0x1
 7833 0bf3 5D       		.byte	0x5d
 7834 0bf4 29000000 		.4byte	0x29
 7835 0bf8 01       		.byte	0x1
 7836 0bf9 05       		.byte	0x5
 7837 0bfa 03       		.byte	0x3
 7838 0bfb 00000000 		.4byte	GSMCantSMS2
 7839 0bff 1B       		.uleb128 0x1b
 7840 0c00 3C030000 		.4byte	.LASF127
 7841 0c04 01       		.byte	0x1
 7842 0c05 5E       		.byte	0x5e
ARM GAS  /tmp/ccNuUijR.s 			page 183


 7843 0c06 29000000 		.4byte	0x29
 7844 0c0a 01       		.byte	0x1
 7845 0c0b 05       		.byte	0x5
 7846 0c0c 03       		.byte	0x3
 7847 0c0d 00000000 		.4byte	GSMnumSMS
 7848 0c11 1B       		.uleb128 0x1b
 7849 0c12 71010000 		.4byte	.LASF128
 7850 0c16 01       		.byte	0x1
 7851 0c17 5F       		.byte	0x5f
 7852 0c18 36020000 		.4byte	0x236
 7853 0c1c 01       		.byte	0x1
 7854 0c1d 05       		.byte	0x5
 7855 0c1e 03       		.byte	0x3
 7856 0c1f 00000000 		.4byte	GSMReadSMSState
 7857 0c23 1B       		.uleb128 0x1b
 7858 0c24 E5040000 		.4byte	.LASF129
 7859 0c28 01       		.byte	0x1
 7860 0c29 60       		.byte	0x60
 7861 0c2a 7E080000 		.4byte	0x87e
 7862 0c2e 01       		.byte	0x1
 7863 0c2f 05       		.byte	0x5
 7864 0c30 03       		.byte	0x3
 7865 0c31 00000000 		.4byte	GSMReadSMScommand
 7866 0c35 1B       		.uleb128 0x1b
 7867 0c36 61080000 		.4byte	.LASF130
 7868 0c3a 01       		.byte	0x1
 7869 0c3b 61       		.byte	0x61
 7870 0c3c 7E080000 		.4byte	0x87e
 7871 0c40 01       		.byte	0x1
 7872 0c41 05       		.byte	0x5
 7873 0c42 03       		.byte	0x3
 7874 0c43 00000000 		.4byte	GSMReadSMSrepIn
 7875 0c47 1B       		.uleb128 0x1b
 7876 0c48 7B020000 		.4byte	.LASF131
 7877 0c4c 01       		.byte	0x1
 7878 0c4d 63       		.byte	0x63
 7879 0c4e 29000000 		.4byte	0x29
 7880 0c52 01       		.byte	0x1
 7881 0c53 05       		.byte	0x5
 7882 0c54 03       		.byte	0x3
 7883 0c55 00000000 		.4byte	prestadorSimSelect
 7884 0c59 1B       		.uleb128 0x1b
 7885 0c5a 4B000000 		.4byte	.LASF132
 7886 0c5e 01       		.byte	0x1
 7887 0c5f 64       		.byte	0x64
 7888 0c60 29000000 		.4byte	0x29
 7889 0c64 01       		.byte	0x1
 7890 0c65 05       		.byte	0x5
 7891 0c66 03       		.byte	0x3
 7892 0c67 00000000 		.4byte	flagCloseIP
 7893 0c6b 1A       		.uleb128 0x1a
 7894 0c6c E3000000 		.4byte	.LASF133
 7895 0c70 01       		.byte	0x1
 7896 0c71 67       		.byte	0x67
 7897 0c72 1E090000 		.4byte	0x91e
 7898 0c76 01       		.byte	0x1
 7899 0c77 01       		.byte	0x1
ARM GAS  /tmp/ccNuUijR.s 			page 184


 7900 0c78 06       		.uleb128 0x6
 7901 0c79 36020000 		.4byte	0x236
 7902 0c7d 880C0000 		.4byte	0xc88
 7903 0c81 07       		.uleb128 0x7
 7904 0c82 9B000000 		.4byte	0x9b
 7905 0c86 13       		.byte	0x13
 7906 0c87 00       		.byte	0
 7907 0c88 1A       		.uleb128 0x1a
 7908 0c89 91060000 		.4byte	.LASF134
 7909 0c8d 01       		.byte	0x1
 7910 0c8e 68       		.byte	0x68
 7911 0c8f 780C0000 		.4byte	0xc78
 7912 0c93 01       		.byte	0x1
 7913 0c94 01       		.byte	0x1
 7914 0c95 1A       		.uleb128 0x1a
 7915 0c96 83080000 		.4byte	.LASF135
 7916 0c9a 01       		.byte	0x1
 7917 0c9b 69       		.byte	0x69
 7918 0c9c 780C0000 		.4byte	0xc78
 7919 0ca0 01       		.byte	0x1
 7920 0ca1 01       		.byte	0x1
 7921 0ca2 1A       		.uleb128 0x1a
 7922 0ca3 49020000 		.4byte	.LASF136
 7923 0ca7 01       		.byte	0x1
 7924 0ca8 6B       		.byte	0x6b
 7925 0ca9 1E090000 		.4byte	0x91e
 7926 0cad 01       		.byte	0x1
 7927 0cae 01       		.byte	0x1
 7928 0caf 1A       		.uleb128 0x1a
 7929 0cb0 A3060000 		.4byte	.LASF137
 7930 0cb4 01       		.byte	0x1
 7931 0cb5 6C       		.byte	0x6c
 7932 0cb6 780C0000 		.4byte	0xc78
 7933 0cba 01       		.byte	0x1
 7934 0cbb 01       		.byte	0x1
 7935 0cbc 1A       		.uleb128 0x1a
 7936 0cbd 93080000 		.4byte	.LASF138
 7937 0cc1 01       		.byte	0x1
 7938 0cc2 6D       		.byte	0x6d
 7939 0cc3 780C0000 		.4byte	0xc78
 7940 0cc7 01       		.byte	0x1
 7941 0cc8 01       		.byte	0x1
 7942 0cc9 1A       		.uleb128 0x1a
 7943 0cca 8E020000 		.4byte	.LASF139
 7944 0cce 01       		.byte	0x1
 7945 0ccf 6E       		.byte	0x6e
 7946 0cd0 780C0000 		.4byte	0xc78
 7947 0cd4 01       		.byte	0x1
 7948 0cd5 01       		.byte	0x1
 7949 0cd6 1A       		.uleb128 0x1a
 7950 0cd7 E9050000 		.4byte	.LASF140
 7951 0cdb 01       		.byte	0x1
 7952 0cdc 6F       		.byte	0x6f
 7953 0cdd 780C0000 		.4byte	0xc78
 7954 0ce1 01       		.byte	0x1
 7955 0ce2 01       		.byte	0x1
 7956 0ce3 1A       		.uleb128 0x1a
ARM GAS  /tmp/ccNuUijR.s 			page 185


 7957 0ce4 9E030000 		.4byte	.LASF141
 7958 0ce8 01       		.byte	0x1
 7959 0ce9 72       		.byte	0x72
 7960 0cea F00C0000 		.4byte	0xcf0
 7961 0cee 01       		.byte	0x1
 7962 0cef 01       		.byte	0x1
 7963 0cf0 05       		.uleb128 0x5
 7964 0cf1 29000000 		.4byte	0x29
 7965 0cf5 1A       		.uleb128 0x1a
 7966 0cf6 FA050000 		.4byte	.LASF142
 7967 0cfa 01       		.byte	0x1
 7968 0cfb 73       		.byte	0x73
 7969 0cfc F00C0000 		.4byte	0xcf0
 7970 0d00 01       		.byte	0x1
 7971 0d01 01       		.byte	0x1
 7972 0d02 1A       		.uleb128 0x1a
 7973 0d03 60010000 		.4byte	.LASF143
 7974 0d07 01       		.byte	0x1
 7975 0d08 74       		.byte	0x74
 7976 0d09 F00C0000 		.4byte	0xcf0
 7977 0d0d 01       		.byte	0x1
 7978 0d0e 01       		.byte	0x1
 7979 0d0f 1A       		.uleb128 0x1a
 7980 0d10 CD060000 		.4byte	.LASF144
 7981 0d14 01       		.byte	0x1
 7982 0d15 75       		.byte	0x75
 7983 0d16 29000000 		.4byte	0x29
 7984 0d1a 01       		.byte	0x1
 7985 0d1b 01       		.byte	0x1
 7986 0d1c 00       		.byte	0
 7987              		.section	.debug_abbrev,"",%progbits
 7988              	.Ldebug_abbrev0:
 7989 0000 01       		.uleb128 0x1
 7990 0001 11       		.uleb128 0x11
 7991 0002 01       		.byte	0x1
 7992 0003 25       		.uleb128 0x25
 7993 0004 0E       		.uleb128 0xe
 7994 0005 13       		.uleb128 0x13
 7995 0006 0B       		.uleb128 0xb
 7996 0007 03       		.uleb128 0x3
 7997 0008 0E       		.uleb128 0xe
 7998 0009 1B       		.uleb128 0x1b
 7999 000a 0E       		.uleb128 0xe
 8000 000b 55       		.uleb128 0x55
 8001 000c 06       		.uleb128 0x6
 8002 000d 11       		.uleb128 0x11
 8003 000e 01       		.uleb128 0x1
 8004 000f 52       		.uleb128 0x52
 8005 0010 01       		.uleb128 0x1
 8006 0011 10       		.uleb128 0x10
 8007 0012 06       		.uleb128 0x6
 8008 0013 00       		.byte	0
 8009 0014 00       		.byte	0
 8010 0015 02       		.uleb128 0x2
 8011 0016 24       		.uleb128 0x24
 8012 0017 00       		.byte	0
 8013 0018 0B       		.uleb128 0xb
ARM GAS  /tmp/ccNuUijR.s 			page 186


 8014 0019 0B       		.uleb128 0xb
 8015 001a 3E       		.uleb128 0x3e
 8016 001b 0B       		.uleb128 0xb
 8017 001c 03       		.uleb128 0x3
 8018 001d 0E       		.uleb128 0xe
 8019 001e 00       		.byte	0
 8020 001f 00       		.byte	0
 8021 0020 03       		.uleb128 0x3
 8022 0021 16       		.uleb128 0x16
 8023 0022 00       		.byte	0
 8024 0023 03       		.uleb128 0x3
 8025 0024 0E       		.uleb128 0xe
 8026 0025 3A       		.uleb128 0x3a
 8027 0026 0B       		.uleb128 0xb
 8028 0027 3B       		.uleb128 0x3b
 8029 0028 0B       		.uleb128 0xb
 8030 0029 49       		.uleb128 0x49
 8031 002a 13       		.uleb128 0x13
 8032 002b 00       		.byte	0
 8033 002c 00       		.byte	0
 8034 002d 04       		.uleb128 0x4
 8035 002e 24       		.uleb128 0x24
 8036 002f 00       		.byte	0
 8037 0030 0B       		.uleb128 0xb
 8038 0031 0B       		.uleb128 0xb
 8039 0032 3E       		.uleb128 0x3e
 8040 0033 0B       		.uleb128 0xb
 8041 0034 03       		.uleb128 0x3
 8042 0035 08       		.uleb128 0x8
 8043 0036 00       		.byte	0
 8044 0037 00       		.byte	0
 8045 0038 05       		.uleb128 0x5
 8046 0039 35       		.uleb128 0x35
 8047 003a 00       		.byte	0
 8048 003b 49       		.uleb128 0x49
 8049 003c 13       		.uleb128 0x13
 8050 003d 00       		.byte	0
 8051 003e 00       		.byte	0
 8052 003f 06       		.uleb128 0x6
 8053 0040 01       		.uleb128 0x1
 8054 0041 01       		.byte	0x1
 8055 0042 49       		.uleb128 0x49
 8056 0043 13       		.uleb128 0x13
 8057 0044 01       		.uleb128 0x1
 8058 0045 13       		.uleb128 0x13
 8059 0046 00       		.byte	0
 8060 0047 00       		.byte	0
 8061 0048 07       		.uleb128 0x7
 8062 0049 21       		.uleb128 0x21
 8063 004a 00       		.byte	0
 8064 004b 49       		.uleb128 0x49
 8065 004c 13       		.uleb128 0x13
 8066 004d 2F       		.uleb128 0x2f
 8067 004e 0B       		.uleb128 0xb
 8068 004f 00       		.byte	0
 8069 0050 00       		.byte	0
 8070 0051 08       		.uleb128 0x8
ARM GAS  /tmp/ccNuUijR.s 			page 187


 8071 0052 13       		.uleb128 0x13
 8072 0053 01       		.byte	0x1
 8073 0054 0B       		.uleb128 0xb
 8074 0055 0B       		.uleb128 0xb
 8075 0056 3A       		.uleb128 0x3a
 8076 0057 0B       		.uleb128 0xb
 8077 0058 3B       		.uleb128 0x3b
 8078 0059 05       		.uleb128 0x5
 8079 005a 01       		.uleb128 0x1
 8080 005b 13       		.uleb128 0x13
 8081 005c 00       		.byte	0
 8082 005d 00       		.byte	0
 8083 005e 09       		.uleb128 0x9
 8084 005f 0D       		.uleb128 0xd
 8085 0060 00       		.byte	0
 8086 0061 03       		.uleb128 0x3
 8087 0062 0E       		.uleb128 0xe
 8088 0063 3A       		.uleb128 0x3a
 8089 0064 0B       		.uleb128 0xb
 8090 0065 3B       		.uleb128 0x3b
 8091 0066 05       		.uleb128 0x5
 8092 0067 49       		.uleb128 0x49
 8093 0068 13       		.uleb128 0x13
 8094 0069 38       		.uleb128 0x38
 8095 006a 0A       		.uleb128 0xa
 8096 006b 00       		.byte	0
 8097 006c 00       		.byte	0
 8098 006d 0A       		.uleb128 0xa
 8099 006e 0D       		.uleb128 0xd
 8100 006f 00       		.byte	0
 8101 0070 03       		.uleb128 0x3
 8102 0071 08       		.uleb128 0x8
 8103 0072 3A       		.uleb128 0x3a
 8104 0073 0B       		.uleb128 0xb
 8105 0074 3B       		.uleb128 0x3b
 8106 0075 05       		.uleb128 0x5
 8107 0076 49       		.uleb128 0x49
 8108 0077 13       		.uleb128 0x13
 8109 0078 38       		.uleb128 0x38
 8110 0079 0A       		.uleb128 0xa
 8111 007a 00       		.byte	0
 8112 007b 00       		.byte	0
 8113 007c 0B       		.uleb128 0xb
 8114 007d 16       		.uleb128 0x16
 8115 007e 00       		.byte	0
 8116 007f 03       		.uleb128 0x3
 8117 0080 0E       		.uleb128 0xe
 8118 0081 3A       		.uleb128 0x3a
 8119 0082 0B       		.uleb128 0xb
 8120 0083 3B       		.uleb128 0x3b
 8121 0084 05       		.uleb128 0x5
 8122 0085 49       		.uleb128 0x49
 8123 0086 13       		.uleb128 0x13
 8124 0087 00       		.byte	0
 8125 0088 00       		.byte	0
 8126 0089 0C       		.uleb128 0xc
 8127 008a 13       		.uleb128 0x13
ARM GAS  /tmp/ccNuUijR.s 			page 188


 8128 008b 01       		.byte	0x1
 8129 008c 03       		.uleb128 0x3
 8130 008d 0E       		.uleb128 0xe
 8131 008e 0B       		.uleb128 0xb
 8132 008f 0B       		.uleb128 0xb
 8133 0090 3A       		.uleb128 0x3a
 8134 0091 0B       		.uleb128 0xb
 8135 0092 3B       		.uleb128 0x3b
 8136 0093 0B       		.uleb128 0xb
 8137 0094 01       		.uleb128 0x1
 8138 0095 13       		.uleb128 0x13
 8139 0096 00       		.byte	0
 8140 0097 00       		.byte	0
 8141 0098 0D       		.uleb128 0xd
 8142 0099 0D       		.uleb128 0xd
 8143 009a 00       		.byte	0
 8144 009b 03       		.uleb128 0x3
 8145 009c 0E       		.uleb128 0xe
 8146 009d 3A       		.uleb128 0x3a
 8147 009e 0B       		.uleb128 0xb
 8148 009f 3B       		.uleb128 0x3b
 8149 00a0 0B       		.uleb128 0xb
 8150 00a1 49       		.uleb128 0x49
 8151 00a2 13       		.uleb128 0x13
 8152 00a3 38       		.uleb128 0x38
 8153 00a4 0A       		.uleb128 0xa
 8154 00a5 00       		.byte	0
 8155 00a6 00       		.byte	0
 8156 00a7 0E       		.uleb128 0xe
 8157 00a8 0F       		.uleb128 0xf
 8158 00a9 00       		.byte	0
 8159 00aa 0B       		.uleb128 0xb
 8160 00ab 0B       		.uleb128 0xb
 8161 00ac 49       		.uleb128 0x49
 8162 00ad 13       		.uleb128 0x13
 8163 00ae 00       		.byte	0
 8164 00af 00       		.byte	0
 8165 00b0 0F       		.uleb128 0xf
 8166 00b1 2E       		.uleb128 0x2e
 8167 00b2 00       		.byte	0
 8168 00b3 3F       		.uleb128 0x3f
 8169 00b4 0C       		.uleb128 0xc
 8170 00b5 03       		.uleb128 0x3
 8171 00b6 0E       		.uleb128 0xe
 8172 00b7 3A       		.uleb128 0x3a
 8173 00b8 0B       		.uleb128 0xb
 8174 00b9 3B       		.uleb128 0x3b
 8175 00ba 0B       		.uleb128 0xb
 8176 00bb 27       		.uleb128 0x27
 8177 00bc 0C       		.uleb128 0xc
 8178 00bd 11       		.uleb128 0x11
 8179 00be 01       		.uleb128 0x1
 8180 00bf 12       		.uleb128 0x12
 8181 00c0 01       		.uleb128 0x1
 8182 00c1 40       		.uleb128 0x40
 8183 00c2 06       		.uleb128 0x6
 8184 00c3 9642     		.uleb128 0x2116
ARM GAS  /tmp/ccNuUijR.s 			page 189


 8185 00c5 0C       		.uleb128 0xc
 8186 00c6 00       		.byte	0
 8187 00c7 00       		.byte	0
 8188 00c8 10       		.uleb128 0x10
 8189 00c9 2E       		.uleb128 0x2e
 8190 00ca 00       		.byte	0
 8191 00cb 3F       		.uleb128 0x3f
 8192 00cc 0C       		.uleb128 0xc
 8193 00cd 03       		.uleb128 0x3
 8194 00ce 0E       		.uleb128 0xe
 8195 00cf 3A       		.uleb128 0x3a
 8196 00d0 0B       		.uleb128 0xb
 8197 00d1 3B       		.uleb128 0x3b
 8198 00d2 0B       		.uleb128 0xb
 8199 00d3 27       		.uleb128 0x27
 8200 00d4 0C       		.uleb128 0xc
 8201 00d5 49       		.uleb128 0x49
 8202 00d6 13       		.uleb128 0x13
 8203 00d7 11       		.uleb128 0x11
 8204 00d8 01       		.uleb128 0x1
 8205 00d9 12       		.uleb128 0x12
 8206 00da 01       		.uleb128 0x1
 8207 00db 40       		.uleb128 0x40
 8208 00dc 0A       		.uleb128 0xa
 8209 00dd 9742     		.uleb128 0x2117
 8210 00df 0C       		.uleb128 0xc
 8211 00e0 00       		.byte	0
 8212 00e1 00       		.byte	0
 8213 00e2 11       		.uleb128 0x11
 8214 00e3 2E       		.uleb128 0x2e
 8215 00e4 00       		.byte	0
 8216 00e5 3F       		.uleb128 0x3f
 8217 00e6 0C       		.uleb128 0xc
 8218 00e7 03       		.uleb128 0x3
 8219 00e8 0E       		.uleb128 0xe
 8220 00e9 3A       		.uleb128 0x3a
 8221 00ea 0B       		.uleb128 0xb
 8222 00eb 3B       		.uleb128 0x3b
 8223 00ec 05       		.uleb128 0x5
 8224 00ed 27       		.uleb128 0x27
 8225 00ee 0C       		.uleb128 0xc
 8226 00ef 11       		.uleb128 0x11
 8227 00f0 01       		.uleb128 0x1
 8228 00f1 12       		.uleb128 0x12
 8229 00f2 01       		.uleb128 0x1
 8230 00f3 40       		.uleb128 0x40
 8231 00f4 0A       		.uleb128 0xa
 8232 00f5 9742     		.uleb128 0x2117
 8233 00f7 0C       		.uleb128 0xc
 8234 00f8 00       		.byte	0
 8235 00f9 00       		.byte	0
 8236 00fa 12       		.uleb128 0x12
 8237 00fb 2E       		.uleb128 0x2e
 8238 00fc 01       		.byte	0x1
 8239 00fd 3F       		.uleb128 0x3f
 8240 00fe 0C       		.uleb128 0xc
 8241 00ff 03       		.uleb128 0x3
ARM GAS  /tmp/ccNuUijR.s 			page 190


 8242 0100 0E       		.uleb128 0xe
 8243 0101 3A       		.uleb128 0x3a
 8244 0102 0B       		.uleb128 0xb
 8245 0103 3B       		.uleb128 0x3b
 8246 0104 05       		.uleb128 0x5
 8247 0105 27       		.uleb128 0x27
 8248 0106 0C       		.uleb128 0xc
 8249 0107 49       		.uleb128 0x49
 8250 0108 13       		.uleb128 0x13
 8251 0109 11       		.uleb128 0x11
 8252 010a 01       		.uleb128 0x1
 8253 010b 12       		.uleb128 0x12
 8254 010c 01       		.uleb128 0x1
 8255 010d 40       		.uleb128 0x40
 8256 010e 06       		.uleb128 0x6
 8257 010f 9742     		.uleb128 0x2117
 8258 0111 0C       		.uleb128 0xc
 8259 0112 01       		.uleb128 0x1
 8260 0113 13       		.uleb128 0x13
 8261 0114 00       		.byte	0
 8262 0115 00       		.byte	0
 8263 0116 13       		.uleb128 0x13
 8264 0117 34       		.uleb128 0x34
 8265 0118 00       		.byte	0
 8266 0119 03       		.uleb128 0x3
 8267 011a 0E       		.uleb128 0xe
 8268 011b 3A       		.uleb128 0x3a
 8269 011c 0B       		.uleb128 0xb
 8270 011d 3B       		.uleb128 0x3b
 8271 011e 05       		.uleb128 0x5
 8272 011f 49       		.uleb128 0x49
 8273 0120 13       		.uleb128 0x13
 8274 0121 02       		.uleb128 0x2
 8275 0122 0A       		.uleb128 0xa
 8276 0123 00       		.byte	0
 8277 0124 00       		.byte	0
 8278 0125 14       		.uleb128 0x14
 8279 0126 05       		.uleb128 0x5
 8280 0127 00       		.byte	0
 8281 0128 03       		.uleb128 0x3
 8282 0129 08       		.uleb128 0x8
 8283 012a 3A       		.uleb128 0x3a
 8284 012b 0B       		.uleb128 0xb
 8285 012c 3B       		.uleb128 0x3b
 8286 012d 05       		.uleb128 0x5
 8287 012e 49       		.uleb128 0x49
 8288 012f 13       		.uleb128 0x13
 8289 0130 02       		.uleb128 0x2
 8290 0131 0A       		.uleb128 0xa
 8291 0132 00       		.byte	0
 8292 0133 00       		.byte	0
 8293 0134 15       		.uleb128 0x15
 8294 0135 2E       		.uleb128 0x2e
 8295 0136 01       		.byte	0x1
 8296 0137 3F       		.uleb128 0x3f
 8297 0138 0C       		.uleb128 0xc
 8298 0139 03       		.uleb128 0x3
ARM GAS  /tmp/ccNuUijR.s 			page 191


 8299 013a 0E       		.uleb128 0xe
 8300 013b 3A       		.uleb128 0x3a
 8301 013c 0B       		.uleb128 0xb
 8302 013d 3B       		.uleb128 0x3b
 8303 013e 05       		.uleb128 0x5
 8304 013f 27       		.uleb128 0x27
 8305 0140 0C       		.uleb128 0xc
 8306 0141 11       		.uleb128 0x11
 8307 0142 01       		.uleb128 0x1
 8308 0143 12       		.uleb128 0x12
 8309 0144 01       		.uleb128 0x1
 8310 0145 40       		.uleb128 0x40
 8311 0146 06       		.uleb128 0x6
 8312 0147 9642     		.uleb128 0x2116
 8313 0149 0C       		.uleb128 0xc
 8314 014a 01       		.uleb128 0x1
 8315 014b 13       		.uleb128 0x13
 8316 014c 00       		.byte	0
 8317 014d 00       		.byte	0
 8318 014e 16       		.uleb128 0x16
 8319 014f 05       		.uleb128 0x5
 8320 0150 00       		.byte	0
 8321 0151 03       		.uleb128 0x3
 8322 0152 0E       		.uleb128 0xe
 8323 0153 3A       		.uleb128 0x3a
 8324 0154 0B       		.uleb128 0xb
 8325 0155 3B       		.uleb128 0x3b
 8326 0156 05       		.uleb128 0x5
 8327 0157 49       		.uleb128 0x49
 8328 0158 13       		.uleb128 0x13
 8329 0159 02       		.uleb128 0x2
 8330 015a 0A       		.uleb128 0xa
 8331 015b 00       		.byte	0
 8332 015c 00       		.byte	0
 8333 015d 17       		.uleb128 0x17
 8334 015e 34       		.uleb128 0x34
 8335 015f 00       		.byte	0
 8336 0160 03       		.uleb128 0x3
 8337 0161 08       		.uleb128 0x8
 8338 0162 3A       		.uleb128 0x3a
 8339 0163 0B       		.uleb128 0xb
 8340 0164 3B       		.uleb128 0x3b
 8341 0165 05       		.uleb128 0x5
 8342 0166 49       		.uleb128 0x49
 8343 0167 13       		.uleb128 0x13
 8344 0168 02       		.uleb128 0x2
 8345 0169 0A       		.uleb128 0xa
 8346 016a 00       		.byte	0
 8347 016b 00       		.byte	0
 8348 016c 18       		.uleb128 0x18
 8349 016d 2E       		.uleb128 0x2e
 8350 016e 01       		.byte	0x1
 8351 016f 3F       		.uleb128 0x3f
 8352 0170 0C       		.uleb128 0xc
 8353 0171 03       		.uleb128 0x3
 8354 0172 0E       		.uleb128 0xe
 8355 0173 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccNuUijR.s 			page 192


 8356 0174 0B       		.uleb128 0xb
 8357 0175 3B       		.uleb128 0x3b
 8358 0176 05       		.uleb128 0x5
 8359 0177 27       		.uleb128 0x27
 8360 0178 0C       		.uleb128 0xc
 8361 0179 49       		.uleb128 0x49
 8362 017a 13       		.uleb128 0x13
 8363 017b 11       		.uleb128 0x11
 8364 017c 01       		.uleb128 0x1
 8365 017d 12       		.uleb128 0x12
 8366 017e 01       		.uleb128 0x1
 8367 017f 40       		.uleb128 0x40
 8368 0180 06       		.uleb128 0x6
 8369 0181 9642     		.uleb128 0x2116
 8370 0183 0C       		.uleb128 0xc
 8371 0184 01       		.uleb128 0x1
 8372 0185 13       		.uleb128 0x13
 8373 0186 00       		.byte	0
 8374 0187 00       		.byte	0
 8375 0188 19       		.uleb128 0x19
 8376 0189 2E       		.uleb128 0x2e
 8377 018a 00       		.byte	0
 8378 018b 3F       		.uleb128 0x3f
 8379 018c 0C       		.uleb128 0xc
 8380 018d 03       		.uleb128 0x3
 8381 018e 0E       		.uleb128 0xe
 8382 018f 3A       		.uleb128 0x3a
 8383 0190 0B       		.uleb128 0xb
 8384 0191 3B       		.uleb128 0x3b
 8385 0192 05       		.uleb128 0x5
 8386 0193 27       		.uleb128 0x27
 8387 0194 0C       		.uleb128 0xc
 8388 0195 11       		.uleb128 0x11
 8389 0196 01       		.uleb128 0x1
 8390 0197 12       		.uleb128 0x12
 8391 0198 01       		.uleb128 0x1
 8392 0199 40       		.uleb128 0x40
 8393 019a 06       		.uleb128 0x6
 8394 019b 9642     		.uleb128 0x2116
 8395 019d 0C       		.uleb128 0xc
 8396 019e 00       		.byte	0
 8397 019f 00       		.byte	0
 8398 01a0 1A       		.uleb128 0x1a
 8399 01a1 34       		.uleb128 0x34
 8400 01a2 00       		.byte	0
 8401 01a3 03       		.uleb128 0x3
 8402 01a4 0E       		.uleb128 0xe
 8403 01a5 3A       		.uleb128 0x3a
 8404 01a6 0B       		.uleb128 0xb
 8405 01a7 3B       		.uleb128 0x3b
 8406 01a8 0B       		.uleb128 0xb
 8407 01a9 49       		.uleb128 0x49
 8408 01aa 13       		.uleb128 0x13
 8409 01ab 3F       		.uleb128 0x3f
 8410 01ac 0C       		.uleb128 0xc
 8411 01ad 3C       		.uleb128 0x3c
 8412 01ae 0C       		.uleb128 0xc
ARM GAS  /tmp/ccNuUijR.s 			page 193


 8413 01af 00       		.byte	0
 8414 01b0 00       		.byte	0
 8415 01b1 1B       		.uleb128 0x1b
 8416 01b2 34       		.uleb128 0x34
 8417 01b3 00       		.byte	0
 8418 01b4 03       		.uleb128 0x3
 8419 01b5 0E       		.uleb128 0xe
 8420 01b6 3A       		.uleb128 0x3a
 8421 01b7 0B       		.uleb128 0xb
 8422 01b8 3B       		.uleb128 0x3b
 8423 01b9 0B       		.uleb128 0xb
 8424 01ba 49       		.uleb128 0x49
 8425 01bb 13       		.uleb128 0x13
 8426 01bc 3F       		.uleb128 0x3f
 8427 01bd 0C       		.uleb128 0xc
 8428 01be 02       		.uleb128 0x2
 8429 01bf 0A       		.uleb128 0xa
 8430 01c0 00       		.byte	0
 8431 01c1 00       		.byte	0
 8432 01c2 1C       		.uleb128 0x1c
 8433 01c3 26       		.uleb128 0x26
 8434 01c4 00       		.byte	0
 8435 01c5 49       		.uleb128 0x49
 8436 01c6 13       		.uleb128 0x13
 8437 01c7 00       		.byte	0
 8438 01c8 00       		.byte	0
 8439 01c9 00       		.byte	0
 8440              		.section	.debug_loc,"",%progbits
 8441              	.Ldebug_loc0:
 8442              	.LLST0:
 8443 0000 00000000 		.4byte	.LFB20
 8444 0004 02000000 		.4byte	.LCFI0
 8445 0008 0200     		.2byte	0x2
 8446 000a 7D       		.byte	0x7d
 8447 000b 00       		.sleb128 0
 8448 000c 02000000 		.4byte	.LCFI0
 8449 0010 5C000000 		.4byte	.LFE20
 8450 0014 0200     		.2byte	0x2
 8451 0016 7D       		.byte	0x7d
 8452 0017 08       		.sleb128 8
 8453 0018 00000000 		.4byte	0
 8454 001c 00000000 		.4byte	0
 8455              	.LLST1:
 8456 0020 00000000 		.4byte	.LFB23
 8457 0024 02000000 		.4byte	.LCFI1
 8458 0028 0200     		.2byte	0x2
 8459 002a 7D       		.byte	0x7d
 8460 002b 00       		.sleb128 0
 8461 002c 02000000 		.4byte	.LCFI1
 8462 0030 BC000000 		.4byte	.LFE23
 8463 0034 0200     		.2byte	0x2
 8464 0036 7D       		.byte	0x7d
 8465 0037 08       		.sleb128 8
 8466 0038 00000000 		.4byte	0
 8467 003c 00000000 		.4byte	0
 8468              	.LLST2:
 8469 0040 00000000 		.4byte	.LFB24
ARM GAS  /tmp/ccNuUijR.s 			page 194


 8470 0044 02000000 		.4byte	.LCFI2
 8471 0048 0200     		.2byte	0x2
 8472 004a 7D       		.byte	0x7d
 8473 004b 00       		.sleb128 0
 8474 004c 02000000 		.4byte	.LCFI2
 8475 0050 70000000 		.4byte	.LFE24
 8476 0054 0200     		.2byte	0x2
 8477 0056 7D       		.byte	0x7d
 8478 0057 10       		.sleb128 16
 8479 0058 00000000 		.4byte	0
 8480 005c 00000000 		.4byte	0
 8481              	.LLST3:
 8482 0060 00000000 		.4byte	.LFB25
 8483 0064 02000000 		.4byte	.LCFI3
 8484 0068 0200     		.2byte	0x2
 8485 006a 7D       		.byte	0x7d
 8486 006b 00       		.sleb128 0
 8487 006c 02000000 		.4byte	.LCFI3
 8488 0070 04000000 		.4byte	.LCFI4
 8489 0074 0200     		.2byte	0x2
 8490 0076 7D       		.byte	0x7d
 8491 0077 08       		.sleb128 8
 8492 0078 04000000 		.4byte	.LCFI4
 8493 007c CC030000 		.4byte	.LFE25
 8494 0080 0200     		.2byte	0x2
 8495 0082 7D       		.byte	0x7d
 8496 0083 20       		.sleb128 32
 8497 0084 00000000 		.4byte	0
 8498 0088 00000000 		.4byte	0
 8499              	.LLST4:
 8500 008c 00000000 		.4byte	.LFB26
 8501 0090 02000000 		.4byte	.LCFI5
 8502 0094 0200     		.2byte	0x2
 8503 0096 7D       		.byte	0x7d
 8504 0097 00       		.sleb128 0
 8505 0098 02000000 		.4byte	.LCFI5
 8506 009c 04000000 		.4byte	.LCFI6
 8507 00a0 0200     		.2byte	0x2
 8508 00a2 7D       		.byte	0x7d
 8509 00a3 08       		.sleb128 8
 8510 00a4 04000000 		.4byte	.LCFI6
 8511 00a8 70000000 		.4byte	.LFE26
 8512 00ac 0200     		.2byte	0x2
 8513 00ae 7D       		.byte	0x7d
 8514 00af 10       		.sleb128 16
 8515 00b0 00000000 		.4byte	0
 8516 00b4 00000000 		.4byte	0
 8517              	.LLST5:
 8518 00b8 00000000 		.4byte	.LFB27
 8519 00bc 02000000 		.4byte	.LCFI7
 8520 00c0 0200     		.2byte	0x2
 8521 00c2 7D       		.byte	0x7d
 8522 00c3 00       		.sleb128 0
 8523 00c4 02000000 		.4byte	.LCFI7
 8524 00c8 A4020000 		.4byte	.LFE27
 8525 00cc 0200     		.2byte	0x2
 8526 00ce 7D       		.byte	0x7d
ARM GAS  /tmp/ccNuUijR.s 			page 195


 8527 00cf 08       		.sleb128 8
 8528 00d0 00000000 		.4byte	0
 8529 00d4 00000000 		.4byte	0
 8530              	.LLST6:
 8531 00d8 00000000 		.4byte	.LFB28
 8532 00dc 02000000 		.4byte	.LCFI8
 8533 00e0 0200     		.2byte	0x2
 8534 00e2 7D       		.byte	0x7d
 8535 00e3 00       		.sleb128 0
 8536 00e4 02000000 		.4byte	.LCFI8
 8537 00e8 04000000 		.4byte	.LCFI9
 8538 00ec 0200     		.2byte	0x2
 8539 00ee 7D       		.byte	0x7d
 8540 00ef 04       		.sleb128 4
 8541 00f0 04000000 		.4byte	.LCFI9
 8542 00f4 4C010000 		.4byte	.LFE28
 8543 00f8 0200     		.2byte	0x2
 8544 00fa 7D       		.byte	0x7d
 8545 00fb 18       		.sleb128 24
 8546 00fc 00000000 		.4byte	0
 8547 0100 00000000 		.4byte	0
 8548              	.LLST7:
 8549 0104 00000000 		.4byte	.LFB29
 8550 0108 02000000 		.4byte	.LCFI10
 8551 010c 0200     		.2byte	0x2
 8552 010e 7D       		.byte	0x7d
 8553 010f 00       		.sleb128 0
 8554 0110 02000000 		.4byte	.LCFI10
 8555 0114 04000000 		.4byte	.LCFI11
 8556 0118 0200     		.2byte	0x2
 8557 011a 7D       		.byte	0x7d
 8558 011b 08       		.sleb128 8
 8559 011c 04000000 		.4byte	.LCFI11
 8560 0120 F4020000 		.4byte	.LFE29
 8561 0124 0200     		.2byte	0x2
 8562 0126 7D       		.byte	0x7d
 8563 0127 18       		.sleb128 24
 8564 0128 00000000 		.4byte	0
 8565 012c 00000000 		.4byte	0
 8566              	.LLST8:
 8567 0130 00000000 		.4byte	.LFB30
 8568 0134 02000000 		.4byte	.LCFI12
 8569 0138 0200     		.2byte	0x2
 8570 013a 7D       		.byte	0x7d
 8571 013b 00       		.sleb128 0
 8572 013c 02000000 		.4byte	.LCFI12
 8573 0140 04000000 		.4byte	.LCFI13
 8574 0144 0200     		.2byte	0x2
 8575 0146 7D       		.byte	0x7d
 8576 0147 08       		.sleb128 8
 8577 0148 04000000 		.4byte	.LCFI13
 8578 014c 70010000 		.4byte	.LFE30
 8579 0150 0200     		.2byte	0x2
 8580 0152 7D       		.byte	0x7d
 8581 0153 20       		.sleb128 32
 8582 0154 00000000 		.4byte	0
 8583 0158 00000000 		.4byte	0
ARM GAS  /tmp/ccNuUijR.s 			page 196


 8584              	.LLST9:
 8585 015c 00000000 		.4byte	.LFB31
 8586 0160 02000000 		.4byte	.LCFI14
 8587 0164 0200     		.2byte	0x2
 8588 0166 7D       		.byte	0x7d
 8589 0167 00       		.sleb128 0
 8590 0168 02000000 		.4byte	.LCFI14
 8591 016c 04000000 		.4byte	.LCFI15
 8592 0170 0200     		.2byte	0x2
 8593 0172 7D       		.byte	0x7d
 8594 0173 08       		.sleb128 8
 8595 0174 04000000 		.4byte	.LCFI15
 8596 0178 80080000 		.4byte	.LFE31
 8597 017c 0200     		.2byte	0x2
 8598 017e 7D       		.byte	0x7d
 8599 017f 20       		.sleb128 32
 8600 0180 00000000 		.4byte	0
 8601 0184 00000000 		.4byte	0
 8602              	.LLST10:
 8603 0188 00000000 		.4byte	.LFB32
 8604 018c 02000000 		.4byte	.LCFI16
 8605 0190 0200     		.2byte	0x2
 8606 0192 7D       		.byte	0x7d
 8607 0193 00       		.sleb128 0
 8608 0194 02000000 		.4byte	.LCFI16
 8609 0198 04000000 		.4byte	.LCFI17
 8610 019c 0200     		.2byte	0x2
 8611 019e 7D       		.byte	0x7d
 8612 019f 08       		.sleb128 8
 8613 01a0 04000000 		.4byte	.LCFI17
 8614 01a4 84000000 		.4byte	.LFE32
 8615 01a8 0200     		.2byte	0x2
 8616 01aa 7D       		.byte	0x7d
 8617 01ab 18       		.sleb128 24
 8618 01ac 00000000 		.4byte	0
 8619 01b0 00000000 		.4byte	0
 8620              	.LLST11:
 8621 01b4 00000000 		.4byte	.LFB33
 8622 01b8 02000000 		.4byte	.LCFI18
 8623 01bc 0200     		.2byte	0x2
 8624 01be 7D       		.byte	0x7d
 8625 01bf 00       		.sleb128 0
 8626 01c0 02000000 		.4byte	.LCFI18
 8627 01c4 04000000 		.4byte	.LCFI19
 8628 01c8 0200     		.2byte	0x2
 8629 01ca 7D       		.byte	0x7d
 8630 01cb 08       		.sleb128 8
 8631 01cc 04000000 		.4byte	.LCFI19
 8632 01d0 2C010000 		.4byte	.LFE33
 8633 01d4 0200     		.2byte	0x2
 8634 01d6 7D       		.byte	0x7d
 8635 01d7 18       		.sleb128 24
 8636 01d8 00000000 		.4byte	0
 8637 01dc 00000000 		.4byte	0
 8638              	.LLST12:
 8639 01e0 00000000 		.4byte	.LFB35
 8640 01e4 02000000 		.4byte	.LCFI20
ARM GAS  /tmp/ccNuUijR.s 			page 197


 8641 01e8 0200     		.2byte	0x2
 8642 01ea 7D       		.byte	0x7d
 8643 01eb 00       		.sleb128 0
 8644 01ec 02000000 		.4byte	.LCFI20
 8645 01f0 04000000 		.4byte	.LCFI21
 8646 01f4 0200     		.2byte	0x2
 8647 01f6 7D       		.byte	0x7d
 8648 01f7 08       		.sleb128 8
 8649 01f8 04000000 		.4byte	.LCFI21
 8650 01fc 74020000 		.4byte	.LFE35
 8651 0200 0200     		.2byte	0x2
 8652 0202 7D       		.byte	0x7d
 8653 0203 18       		.sleb128 24
 8654 0204 00000000 		.4byte	0
 8655 0208 00000000 		.4byte	0
 8656              	.LLST13:
 8657 020c 00000000 		.4byte	.LFB36
 8658 0210 02000000 		.4byte	.LCFI22
 8659 0214 0200     		.2byte	0x2
 8660 0216 7D       		.byte	0x7d
 8661 0217 00       		.sleb128 0
 8662 0218 02000000 		.4byte	.LCFI22
 8663 021c 04000000 		.4byte	.LCFI23
 8664 0220 0200     		.2byte	0x2
 8665 0222 7D       		.byte	0x7d
 8666 0223 08       		.sleb128 8
 8667 0224 04000000 		.4byte	.LCFI23
 8668 0228 E8060000 		.4byte	.LFE36
 8669 022c 0200     		.2byte	0x2
 8670 022e 7D       		.byte	0x7d
 8671 022f 20       		.sleb128 32
 8672 0230 00000000 		.4byte	0
 8673 0234 00000000 		.4byte	0
 8674              		.section	.debug_aranges,"",%progbits
 8675 0000 9C000000 		.4byte	0x9c
 8676 0004 0200     		.2byte	0x2
 8677 0006 00000000 		.4byte	.Ldebug_info0
 8678 000a 04       		.byte	0x4
 8679 000b 00       		.byte	0
 8680 000c 0000     		.2byte	0
 8681 000e 0000     		.2byte	0
 8682 0010 00000000 		.4byte	.LFB20
 8683 0014 5C000000 		.4byte	.LFE20-.LFB20
 8684 0018 00000000 		.4byte	.LFB21
 8685 001c FC000000 		.4byte	.LFE21-.LFB21
 8686 0020 00000000 		.4byte	.LFB22
 8687 0024 10000000 		.4byte	.LFE22-.LFB22
 8688 0028 00000000 		.4byte	.LFB23
 8689 002c BC000000 		.4byte	.LFE23-.LFB23
 8690 0030 00000000 		.4byte	.LFB24
 8691 0034 70000000 		.4byte	.LFE24-.LFB24
 8692 0038 00000000 		.4byte	.LFB25
 8693 003c CC030000 		.4byte	.LFE25-.LFB25
 8694 0040 00000000 		.4byte	.LFB26
 8695 0044 70000000 		.4byte	.LFE26-.LFB26
 8696 0048 00000000 		.4byte	.LFB27
 8697 004c A4020000 		.4byte	.LFE27-.LFB27
ARM GAS  /tmp/ccNuUijR.s 			page 198


 8698 0050 00000000 		.4byte	.LFB28
 8699 0054 4C010000 		.4byte	.LFE28-.LFB28
 8700 0058 00000000 		.4byte	.LFB29
 8701 005c F4020000 		.4byte	.LFE29-.LFB29
 8702 0060 00000000 		.4byte	.LFB30
 8703 0064 70010000 		.4byte	.LFE30-.LFB30
 8704 0068 00000000 		.4byte	.LFB31
 8705 006c 80080000 		.4byte	.LFE31-.LFB31
 8706 0070 00000000 		.4byte	.LFB32
 8707 0074 84000000 		.4byte	.LFE32-.LFB32
 8708 0078 00000000 		.4byte	.LFB33
 8709 007c 2C010000 		.4byte	.LFE33-.LFB33
 8710 0080 00000000 		.4byte	.LFB34
 8711 0084 F8000000 		.4byte	.LFE34-.LFB34
 8712 0088 00000000 		.4byte	.LFB35
 8713 008c 74020000 		.4byte	.LFE35-.LFB35
 8714 0090 00000000 		.4byte	.LFB36
 8715 0094 E8060000 		.4byte	.LFE36-.LFB36
 8716 0098 00000000 		.4byte	0
 8717 009c 00000000 		.4byte	0
 8718              		.section	.debug_ranges,"",%progbits
 8719              	.Ldebug_ranges0:
 8720 0000 00000000 		.4byte	.LFB20
 8721 0004 5C000000 		.4byte	.LFE20
 8722 0008 00000000 		.4byte	.LFB21
 8723 000c FC000000 		.4byte	.LFE21
 8724 0010 00000000 		.4byte	.LFB22
 8725 0014 10000000 		.4byte	.LFE22
 8726 0018 00000000 		.4byte	.LFB23
 8727 001c BC000000 		.4byte	.LFE23
 8728 0020 00000000 		.4byte	.LFB24
 8729 0024 70000000 		.4byte	.LFE24
 8730 0028 00000000 		.4byte	.LFB25
 8731 002c CC030000 		.4byte	.LFE25
 8732 0030 00000000 		.4byte	.LFB26
 8733 0034 70000000 		.4byte	.LFE26
 8734 0038 00000000 		.4byte	.LFB27
 8735 003c A4020000 		.4byte	.LFE27
 8736 0040 00000000 		.4byte	.LFB28
 8737 0044 4C010000 		.4byte	.LFE28
 8738 0048 00000000 		.4byte	.LFB29
 8739 004c F4020000 		.4byte	.LFE29
 8740 0050 00000000 		.4byte	.LFB30
 8741 0054 70010000 		.4byte	.LFE30
 8742 0058 00000000 		.4byte	.LFB31
 8743 005c 80080000 		.4byte	.LFE31
 8744 0060 00000000 		.4byte	.LFB32
 8745 0064 84000000 		.4byte	.LFE32
 8746 0068 00000000 		.4byte	.LFB33
 8747 006c 2C010000 		.4byte	.LFE33
 8748 0070 00000000 		.4byte	.LFB34
 8749 0074 F8000000 		.4byte	.LFE34
 8750 0078 00000000 		.4byte	.LFB35
 8751 007c 74020000 		.4byte	.LFE35
 8752 0080 00000000 		.4byte	.LFB36
 8753 0084 E8060000 		.4byte	.LFE36
 8754 0088 00000000 		.4byte	0
ARM GAS  /tmp/ccNuUijR.s 			page 199


 8755 008c 00000000 		.4byte	0
 8756              		.section	.debug_line,"",%progbits
 8757              	.Ldebug_line0:
 8758 0000 85060000 		.section	.debug_str,"MS",%progbits,1
 8758      02000901 
 8758      00000201 
 8758      FB0E0D00 
 8758      01010101 
 8759              	.LASF31:
 8760 0000 74696D65 		.ascii	"timer_reportar\000"
 8760      725F7265 
 8760      706F7274 
 8760      617200
 8761              	.LASF18:
 8762 000f 50555044 		.ascii	"PUPDR\000"
 8762      5200
 8763              	.LASF94:
 8764 0015 47534D43 		.ascii	"GSMConfigTimeOut\000"
 8764      6F6E6669 
 8764      6754696D 
 8764      654F7574 
 8764      00
 8765              	.LASF22:
 8766 0026 4C434B52 		.ascii	"LCKR\000"
 8766      00
 8767              	.LASF91:
 8768 002b 47534D53 		.ascii	"GSMSendSMSTimeOut\000"
 8768      656E6453 
 8768      4D535469 
 8768      6D654F75 
 8768      7400
 8769              	.LASF104:
 8770 003d 47534D53 		.ascii	"GSMSendIPFlag\000"
 8770      656E6449 
 8770      50466C61 
 8770      6700
 8771              	.LASF132:
 8772 004b 666C6167 		.ascii	"flagCloseIP\000"
 8772      436C6F73 
 8772      65495000 
 8773              	.LASF95:
 8774 0057 47534D43 		.ascii	"GSMConfigTime\000"
 8774      6F6E6669 
 8774      6754696D 
 8774      6500
 8775              	.LASF15:
 8776 0065 4F545950 		.ascii	"OTYPER\000"
 8776      455200
 8777              	.LASF119:
 8778 006c 47534D5F 		.ascii	"GSM_IPCONNCLOSE\000"
 8778      4950434F 
 8778      4E4E434C 
 8778      4F534500 
 8779              	.LASF59:
 8780 007c 70747252 		.ascii	"ptrRta\000"
 8780      746100
 8781              	.LASF70:
ARM GAS  /tmp/ccNuUijR.s 			page 200


 8782 0083 70747250 		.ascii	"ptrPORTremote\000"
 8782      4F525472 
 8782      656D6F74 
 8782      6500
 8783              	.LASF41:
 8784 0091 7047534D 		.ascii	"pGSMHWstatus\000"
 8784      48577374 
 8784      61747573 
 8784      00
 8785              	.LASF14:
 8786 009e 4D4F4445 		.ascii	"MODER\000"
 8786      5200
 8787              	.LASF9:
 8788 00a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 8788      206C6F6E 
 8788      6720756E 
 8788      7369676E 
 8788      65642069 
 8789              	.LASF117:
 8790 00bb 47534D5F 		.ascii	"GSM_IPCONNOK\000"
 8790      4950434F 
 8790      4E4E4F4B 
 8790      00
 8791              	.LASF148:
 8792 00c8 70617261 		.ascii	"parameters\000"
 8792      6D657465 
 8792      727300
 8793              	.LASF28:
 8794 00d3 6163756D 		.ascii	"acumm_historico\000"
 8794      6D5F6869 
 8794      73746F72 
 8794      69636F00 
 8795              	.LASF133:
 8796 00e3 53494D39 		.ascii	"SIM900APNSIM1\000"
 8796      30304150 
 8796      4E53494D 
 8796      3100
 8797              	.LASF51:
 8798 00f1 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor2\000"
 8798      46494755 
 8798      52414349 
 8798      4F4E6770 
 8798      72735072 
 8799              	.LASF8:
 8800 010e 6C6F6E67 		.ascii	"long long int\000"
 8800      206C6F6E 
 8800      6720696E 
 8800      7400
 8801              	.LASF58:
 8802 011c 74696D65 		.ascii	"timeOut\000"
 8802      4F757400 
 8803              	.LASF66:
 8804 0124 70747255 		.ascii	"ptrUSER\000"
 8804      53455200 
 8805              	.LASF146:
 8806 012c 7372632F 		.ascii	"src/sim900_800.c\000"
 8806      73696D39 
ARM GAS  /tmp/ccNuUijR.s 			page 201


 8806      30305F38 
 8806      30302E63 
 8806      00
 8807              	.LASF69:
 8808 013d 70747249 		.ascii	"ptrIPremote\000"
 8808      5072656D 
 8808      6F746500 
 8809              	.LASF52:
 8810 0149 70434F4E 		.ascii	"pCONFIGURACIONIPREMOTE\000"
 8810      46494755 
 8810      52414349 
 8810      4F4E4950 
 8810      52454D4F 
 8811              	.LASF143:
 8812 0160 75736172 		.ascii	"usart1_have_data\000"
 8812      74315F68 
 8812      6176655F 
 8812      64617461 
 8812      00
 8813              	.LASF128:
 8814 0171 47534D52 		.ascii	"GSMReadSMSState\000"
 8814      65616453 
 8814      4D535374 
 8814      61746500 
 8815              	.LASF126:
 8816 0181 47534D43 		.ascii	"GSMCantSMS2\000"
 8816      616E7453 
 8816      4D533200 
 8817              	.LASF50:
 8818 018d 70434F4E 		.ascii	"pCONFIGURACIONgprsClave2\000"
 8818      46494755 
 8818      52414349 
 8818      4F4E6770 
 8818      7273436C 
 8819              	.LASF4:
 8820 01a6 6C6F6E67 		.ascii	"long int\000"
 8820      20696E74 
 8820      00
 8821              	.LASF60:
 8822 01af 47534D5F 		.ascii	"GSM_Config\000"
 8822      436F6E66 
 8822      696700
 8823              	.LASF48:
 8824 01ba 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN2\000"
 8824      46494755 
 8824      52414349 
 8824      4F4E6770 
 8824      72734150 
 8825              	.LASF92:
 8826 01d1 47534D53 		.ascii	"GSMSendSMSbuffAux\000"
 8826      656E6453 
 8826      4D536275 
 8826      66664175 
 8826      7800
 8827              	.LASF90:
 8828 01e3 47534D53 		.ascii	"GSMSendSMSFlag\000"
 8828      656E6453 
ARM GAS  /tmp/ccNuUijR.s 			page 202


 8828      4D53466C 
 8828      616700
 8829              	.LASF11:
 8830 01f2 75696E74 		.ascii	"uint16_t\000"
 8830      31365F74 
 8830      00
 8831              	.LASF75:
 8832 01fb 47534D52 		.ascii	"GSMReceivSMS\000"
 8832      65636569 
 8832      76534D53 
 8832      00
 8833              	.LASF74:
 8834 0208 47534D50 		.ascii	"GSMPrestador\000"
 8834      72657374 
 8834      61646F72 
 8834      00
 8835              	.LASF87:
 8836 0215 47534D53 		.ascii	"GSMSendCommandTimeOut\000"
 8836      656E6443 
 8836      6F6D6D61 
 8836      6E645469 
 8836      6D654F75 
 8837              	.LASF5:
 8838 022b 5F5F7569 		.ascii	"__uint16_t\000"
 8838      6E743136 
 8838      5F7400
 8839              	.LASF17:
 8840 0236 4F535045 		.ascii	"OSPEEDR\000"
 8840      45445200 
 8841              	.LASF6:
 8842 023e 5F5F7569 		.ascii	"__uint32_t\000"
 8842      6E743332 
 8842      5F7400
 8843              	.LASF136:
 8844 0249 53494D39 		.ascii	"SIM900APNSIM2\000"
 8844      30304150 
 8844      4E53494D 
 8844      3200
 8845              	.LASF89:
 8846 0257 47534D53 		.ascii	"GSMSendSMSState\000"
 8846      656E6453 
 8846      4D535374 
 8846      61746500 
 8847              	.LASF149:
 8848 0267 47534D5F 		.ascii	"GSM_Start\000"
 8848      53746172 
 8848      7400
 8849              	.LASF39:
 8850 0271 47534D5F 		.ascii	"GSM_Delay\000"
 8850      44656C61 
 8850      7900
 8851              	.LASF131:
 8852 027b 70726573 		.ascii	"prestadorSimSelect\000"
 8852      7461646F 
 8852      7253696D 
 8852      53656C65 
 8852      637400
ARM GAS  /tmp/ccNuUijR.s 			page 203


 8853              	.LASF139:
 8854 028e 53494D39 		.ascii	"SIM900IPREMOTE\000"
 8854      30304950 
 8854      52454D4F 
 8854      544500
 8855              	.LASF114:
 8856 029d 47534D5F 		.ascii	"GSM_IPGPRSACT\000"
 8856      49504750 
 8856      52534143 
 8856      5400
 8857              	.LASF125:
 8858 02ab 47534D43 		.ascii	"GSMCantSMS\000"
 8858      616E7453 
 8858      4D5300
 8859              	.LASF38:
 8860 02b6 47534D5F 		.ascii	"GSM_Stop\000"
 8860      53746F70 
 8860      00
 8861              	.LASF55:
 8862 02bf 47534D52 		.ascii	"GSMReceive\000"
 8862      65636569 
 8862      766500
 8863              	.LASF98:
 8864 02ca 47534D43 		.ascii	"GSMConfigGPRSflag\000"
 8864      6F6E6669 
 8864      67475052 
 8864      53666C61 
 8864      6700
 8865              	.LASF40:
 8866 02dc 72657370 		.ascii	"resp\000"
 8866      00
 8867              	.LASF10:
 8868 02e1 756E7369 		.ascii	"unsigned int\000"
 8868      676E6564 
 8868      20696E74 
 8868      00
 8869              	.LASF81:
 8870 02ee 5061636B 		.ascii	"PacketReadyUARTGSM\000"
 8870      65745265 
 8870      61647955 
 8870      41525447 
 8870      534D00
 8871              	.LASF120:
 8872 0301 47534D5F 		.ascii	"GSM_SIM1\000"
 8872      53494D31 
 8872      00
 8873              	.LASF7:
 8874 030a 6C6F6E67 		.ascii	"long unsigned int\000"
 8874      20756E73 
 8874      69676E65 
 8874      6420696E 
 8874      7400
 8875              	.LASF24:
 8876 031c 4750494F 		.ascii	"GPIO_TypeDef\000"
 8876      5F547970 
 8876      65446566 
 8876      00
ARM GAS  /tmp/ccNuUijR.s 			page 204


 8877              	.LASF100:
 8878 0329 47534D62 		.ascii	"GSMbuffGPRSCommand\000"
 8878      75666647 
 8878      50525343 
 8878      6F6D6D61 
 8878      6E6400
 8879              	.LASF127:
 8880 033c 47534D6E 		.ascii	"GSMnumSMS\000"
 8880      756D534D 
 8880      5300
 8881              	.LASF67:
 8882 0346 7074724B 		.ascii	"ptrKEY\000"
 8882      455900
 8883              	.LASF3:
 8884 034d 73686F72 		.ascii	"short unsigned int\000"
 8884      7420756E 
 8884      7369676E 
 8884      65642069 
 8884      6E7400
 8885              	.LASF68:
 8886 0360 70747249 		.ascii	"ptrIPAdd\000"
 8886      50416464 
 8886      00
 8887              	.LASF61:
 8888 0369 47534D53 		.ascii	"GSMSendSMS\000"
 8888      656E6453 
 8888      4D5300
 8889              	.LASF42:
 8890 0374 70726573 		.ascii	"prestadorSim1\000"
 8890      7461646F 
 8890      7253696D 
 8890      3100
 8891              	.LASF43:
 8892 0382 70726573 		.ascii	"prestadorSim2\000"
 8892      7461646F 
 8892      7253696D 
 8892      3200
 8893              	.LASF64:
 8894 0390 47534D43 		.ascii	"GSMConfigGPRS\000"
 8894      6F6E6669 
 8894      67475052 
 8894      5300
 8895              	.LASF141:
 8896 039e 75736172 		.ascii	"usart1_mini_timeout\000"
 8896      74315F6D 
 8896      696E695F 
 8896      74696D65 
 8896      6F757400 
 8897              	.LASF108:
 8898 03b2 47534D5F 		.ascii	"GSM_OK\000"
 8898      4F4B00
 8899              	.LASF122:
 8900 03b9 47534D5F 		.ascii	"GSM_SENDOK\000"
 8900      53454E44 
 8900      4F4B00
 8901              	.LASF34:
 8902 03c4 70617261 		.ascii	"parameters_typedef\000"
ARM GAS  /tmp/ccNuUijR.s 			page 205


 8902      6D657465 
 8902      72735F74 
 8902      79706564 
 8902      656600
 8903              	.LASF121:
 8904 03d7 47534D5F 		.ascii	"GSM_SIM2\000"
 8904      53494D32 
 8904      00
 8905              	.LASF65:
 8906 03e0 70747241 		.ascii	"ptrAPN\000"
 8906      504E00
 8907              	.LASF13:
 8908 03e7 73697A65 		.ascii	"sizetype\000"
 8908      74797065 
 8908      00
 8909              	.LASF47:
 8910 03f0 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor1\000"
 8910      46494755 
 8910      52414349 
 8910      4F4E6770 
 8910      72735072 
 8911              	.LASF54:
 8912 040d 47534D43 		.ascii	"GSMCloseIP\000"
 8912      6C6F7365 
 8912      495000
 8913              	.LASF102:
 8914 0418 47505253 		.ascii	"GPRSrssi\000"
 8914      72737369 
 8914      00
 8915              	.LASF113:
 8916 0421 47534D5F 		.ascii	"GSM_IPSTART\000"
 8916      49505354 
 8916      41525400 
 8917              	.LASF107:
 8918 042d 47534D62 		.ascii	"GSMbuffRtaCommand\000"
 8918      75666652 
 8918      7461436F 
 8918      6D6D616E 
 8918      6400
 8919              	.LASF147:
 8920 043f 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 8920      652F6D65 
 8920      642F446F 
 8920      63756D65 
 8920      6E74732F 
 8921 0472 6100     		.ascii	"a\000"
 8922              	.LASF85:
 8923 0474 47534D53 		.ascii	"GSMSendCommandState\000"
 8923      656E6443 
 8923      6F6D6D61 
 8923      6E645374 
 8923      61746500 
 8924              	.LASF118:
 8925 0488 47534D5F 		.ascii	"GSM_IPCONNFAIL\000"
 8925      4950434F 
 8925      4E4E4641 
 8925      494C00
ARM GAS  /tmp/ccNuUijR.s 			page 206


 8926              	.LASF72:
 8927 0497 47534D53 		.ascii	"GSMSendIP\000"
 8927      656E6449 
 8927      5000
 8928              	.LASF116:
 8929 04a1 47534D5F 		.ascii	"GSM_IPCONNECTING\000"
 8929      4950434F 
 8929      4E4E4543 
 8929      54494E47 
 8929      00
 8930              	.LASF112:
 8931 04b2 47534D5F 		.ascii	"GSM_IPINITIAL\000"
 8931      4950494E 
 8931      49544941 
 8931      4C00
 8932              	.LASF76:
 8933 04c0 636F6C6F 		.ascii	"colon_index\000"
 8933      6E5F696E 
 8933      64657800 
 8934              	.LASF46:
 8935 04cc 70434F4E 		.ascii	"pCONFIGURACIONgprsClave1\000"
 8935      46494755 
 8935      52414349 
 8935      4F4E6770 
 8935      7273436C 
 8936              	.LASF129:
 8937 04e5 47534D52 		.ascii	"GSMReadSMScommand\000"
 8937      65616453 
 8937      4D53636F 
 8937      6D6D616E 
 8937      6400
 8938              	.LASF56:
 8939 04f7 47534D53 		.ascii	"GSMSendCommand\000"
 8939      656E6443 
 8939      6F6D6D61 
 8939      6E6400
 8940              	.LASF16:
 8941 0506 52455345 		.ascii	"RESERVED0\000"
 8941      52564544 
 8941      3000
 8942              	.LASF19:
 8943 0510 52455345 		.ascii	"RESERVED1\000"
 8943      52564544 
 8943      3100
 8944              	.LASF20:
 8945 051a 52455345 		.ascii	"RESERVED2\000"
 8945      52564544 
 8945      3200
 8946              	.LASF23:
 8947 0524 52455345 		.ascii	"RESERVED3\000"
 8947      52564544 
 8947      3300
 8948              	.LASF93:
 8949 052e 47534D43 		.ascii	"GSMConfigState\000"
 8949      6F6E6669 
 8949      67537461 
 8949      746500
ARM GAS  /tmp/ccNuUijR.s 			page 207


 8950              	.LASF96:
 8951 053d 47534D43 		.ascii	"GSMConfigGPRSTimeOut\000"
 8951      6F6E6669 
 8951      67475052 
 8951      5354696D 
 8951      654F7574 
 8952              	.LASF36:
 8953 0552 47534D50 		.ascii	"GSMProcess\000"
 8953      726F6365 
 8953      737300
 8954              	.LASF44:
 8955 055d 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN1\000"
 8955      46494755 
 8955      52414349 
 8955      4F4E6770 
 8955      72734150 
 8956              	.LASF0:
 8957 0574 756E7369 		.ascii	"unsigned char\000"
 8957      676E6564 
 8957      20636861 
 8957      7200
 8958              	.LASF86:
 8959 0582 47534D53 		.ascii	"GSMSendCommandFlag\000"
 8959      656E6443 
 8959      6F6D6D61 
 8959      6E64466C 
 8959      616700
 8960              	.LASF2:
 8961 0595 73686F72 		.ascii	"short int\000"
 8961      7420696E 
 8961      7400
 8962              	.LASF79:
 8963 059f 70617261 		.ascii	"param_struct\000"
 8963      6D5F7374 
 8963      72756374 
 8963      00
 8964              	.LASF77:
 8965 05ac 70546F41 		.ascii	"pToAnswer\000"
 8965      6E737765 
 8965      7200
 8966              	.LASF25:
 8967 05b6 6E756D5F 		.ascii	"num_reportar\000"
 8967      7265706F 
 8967      72746172 
 8967      00
 8968              	.LASF99:
 8969 05c3 47534D62 		.ascii	"GSMbuffStatus\000"
 8969      75666653 
 8969      74617475 
 8969      7300
 8970              	.LASF97:
 8971 05d1 47534D43 		.ascii	"GSMConfigGPRSState\000"
 8971      6F6E6669 
 8971      67475052 
 8971      53537461 
 8971      746500
 8972              	.LASF26:
ARM GAS  /tmp/ccNuUijR.s 			page 208


 8973 05e4 696D6569 		.ascii	"imei\000"
 8973      00
 8974              	.LASF140:
 8975 05e9 53494D39 		.ascii	"SIM900PORTREMOTE\000"
 8975      3030504F 
 8975      52545245 
 8975      4D4F5445 
 8975      00
 8976              	.LASF142:
 8977 05fa 75736172 		.ascii	"usart1_pckt_ready\000"
 8977      74315F70 
 8977      636B745F 
 8977      72656164 
 8977      7900
 8978              	.LASF29:
 8979 060c 6163756D 		.ascii	"acumm_diario\000"
 8979      6D5F6469 
 8979      6172696F 
 8979      00
 8980              	.LASF57:
 8981 0619 70747243 		.ascii	"ptrCommand\000"
 8981      6F6D6D61 
 8981      6E6400
 8982              	.LASF30:
 8983 0624 706F745F 		.ascii	"pot_instantanea\000"
 8983      696E7374 
 8983      616E7461 
 8983      6E656100 
 8984              	.LASF110:
 8985 0634 47534D5F 		.ascii	"GSM_CMGF\000"
 8985      434D4746 
 8985      00
 8986              	.LASF35:
 8987 063d 6C6F6E67 		.ascii	"long double\000"
 8987      20646F75 
 8987      626C6500 
 8988              	.LASF84:
 8989 0649 47534D47 		.ascii	"GSMGeneralTimeOut\000"
 8989      656E6572 
 8989      616C5469 
 8989      6D654F75 
 8989      7400
 8990              	.LASF33:
 8991 065b 63686172 		.ascii	"char\000"
 8991      00
 8992              	.LASF111:
 8993 0660 47534D5F 		.ascii	"GSM_IPSTATE\000"
 8993      49505354 
 8993      41544500 
 8994              	.LASF101:
 8995 066c 47534D49 		.ascii	"GSMIPadd\000"
 8995      50616464 
 8995      00
 8996              	.LASF27:
 8997 0675 6E756D5F 		.ascii	"num_propio\000"
 8997      70726F70 
 8997      696F00
ARM GAS  /tmp/ccNuUijR.s 			page 209


 8998              	.LASF105:
 8999 0680 47534D53 		.ascii	"GSMSendIPTimeOut\000"
 8999      656E6449 
 8999      5054696D 
 8999      654F7574 
 8999      00
 9000              	.LASF134:
 9001 0691 53494D39 		.ascii	"SIM900USUARIOSIM1\000"
 9001      30305553 
 9001      55415249 
 9001      4F53494D 
 9001      3100
 9002              	.LASF137:
 9003 06a3 53494D39 		.ascii	"SIM900USUARIOSIM2\000"
 9003      30305553 
 9003      55415249 
 9003      4F53494D 
 9003      3200
 9004              	.LASF78:
 9005 06b5 47534D43 		.ascii	"GSMConfigPDPGPRS\000"
 9005      6F6E6669 
 9005      67504450 
 9005      47505253 
 9005      00
 9006              	.LASF62:
 9007 06c6 7074724D 		.ascii	"ptrMSG\000"
 9007      534700
 9008              	.LASF144:
 9009 06cd 75736172 		.ascii	"usart1_pckt_bytes\000"
 9009      74315F70 
 9009      636B745F 
 9009      62797465 
 9009      7300
 9010              	.LASF32:
 9011 06df 73656E64 		.ascii	"send_energy_flag\000"
 9011      5F656E65 
 9011      7267795F 
 9011      666C6167 
 9011      00
 9012              	.LASF115:
 9013 06f0 47534D5F 		.ascii	"GSM_IPSTATUS\000"
 9013      49505354 
 9013      41545553 
 9013      00
 9014              	.LASF12:
 9015 06fd 75696E74 		.ascii	"uint32_t\000"
 9015      33325F74 
 9015      00
 9016              	.LASF88:
 9017 0706 47534D53 		.ascii	"GSMSendCommandIntento\000"
 9017      656E6443 
 9017      6F6D6D61 
 9017      6E64496E 
 9017      74656E74 
 9018              	.LASF103:
 9019 071c 47534D53 		.ascii	"GSMSendIPState\000"
 9019      656E6449 
ARM GAS  /tmp/ccNuUijR.s 			page 210


 9019      50537461 
 9019      746500
 9020              	.LASF21:
 9021 072b 42535252 		.ascii	"BSRR\000"
 9021      00
 9022              	.LASF80:
 9023 0730 62756666 		.ascii	"buffUARTGSMrx2\000"
 9023      55415254 
 9023      47534D72 
 9023      783200
 9024              	.LASF82:
 9025 073f 47534D53 		.ascii	"GSMStartState\000"
 9025      74617274 
 9025      53746174 
 9025      6500
 9026              	.LASF71:
 9027 074d 47534D5F 		.ascii	"GSM_SetSIM\000"
 9027      53657453 
 9027      494D00
 9028              	.LASF63:
 9029 0758 7074724E 		.ascii	"ptrNUM\000"
 9029      554D00
 9030              	.LASF45:
 9031 075f 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario1\000"
 9031      46494755 
 9031      52414349 
 9031      4F4E6770 
 9031      72735573 
 9032              	.LASF49:
 9033 077a 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario2\000"
 9033      46494755 
 9033      52414349 
 9033      4F4E6770 
 9033      72735573 
 9034              	.LASF83:
 9035 0795 47534D53 		.ascii	"GSMStartTime\000"
 9035      74617274 
 9035      54696D65 
 9035      00
 9036              	.LASF109:
 9037 07a2 47534D5F 		.ascii	"GSM_ERR\000"
 9037      45525200 
 9038              	.LASF1:
 9039 07aa 7369676E 		.ascii	"signed char\000"
 9039      65642063 
 9039      68617200 
 9040              	.LASF145:
 9041 07b6 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 9041      43313120 
 9041      352E322E 
 9041      31203230 
 9041      31353132 
 9042 07e9 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 9042      20726576 
 9042      6973696F 
 9042      6E203233 
 9042      31383438 
ARM GAS  /tmp/ccNuUijR.s 			page 211


 9043 081c 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 9043      662D3220 
 9043      2D4F3020 
 9043      2D666F6D 
 9043      69742D66 
 9044 084f 66756E63 		.ascii	"function-sections\000"
 9044      74696F6E 
 9044      2D736563 
 9044      74696F6E 
 9044      7300
 9045              	.LASF130:
 9046 0861 47534D52 		.ascii	"GSMReadSMSrepIn\000"
 9046      65616453 
 9046      4D537265 
 9046      70496E00 
 9047              	.LASF123:
 9048 0871 70726573 		.ascii	"prestadorSimState\000"
 9048      7461646F 
 9048      7253696D 
 9048      53746174 
 9048      6500
 9049              	.LASF135:
 9050 0883 53494D39 		.ascii	"SIM900CLAVESIM1\000"
 9050      3030434C 
 9050      41564553 
 9050      494D3100 
 9051              	.LASF138:
 9052 0893 53494D39 		.ascii	"SIM900CLAVESIM2\000"
 9052      3030434C 
 9052      41564553 
 9052      494D3200 
 9053              	.LASF53:
 9054 08a3 70434F4E 		.ascii	"pCONFIGURACIONPORTREMOTE\000"
 9054      46494755 
 9054      52414349 
 9054      4F4E504F 
 9054      52545245 
 9055              	.LASF124:
 9056 08bc 70726573 		.ascii	"prestadorSimTime\000"
 9056      7461646F 
 9056      7253696D 
 9056      54696D65 
 9056      00
 9057              	.LASF73:
 9058 08cd 47534D54 		.ascii	"GSMTimeoutCounters\000"
 9058      696D656F 
 9058      7574436F 
 9058      756E7465 
 9058      727300
 9059              	.LASF106:
 9060 08e0 47534D53 		.ascii	"GSMSendIPbuffAux\000"
 9060      656E6449 
 9060      50627566 
 9060      66417578 
 9060      00
 9061              	.LASF37:
 9062 08f1 47534D5F 		.ascii	"GSM_Start_Stop_ResetSM\000"
ARM GAS  /tmp/ccNuUijR.s 			page 212


 9062      53746172 
 9062      745F5374 
 9062      6F705F52 
 9062      65736574 
 9063              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccNuUijR.s 			page 213


DEFINED SYMBOLS
                            *ABS*:00000000 sim900_800.c
                            *COM*:00000100 buffUARTGSMrx2
                            *COM*:00000001 PacketReadyUARTGSM
     /tmp/ccNuUijR.s:60     .bss.GSMStartState:00000000 GSMStartState
     /tmp/ccNuUijR.s:61     .bss.GSMStartState:00000000 $d
                            *COM*:00000002 GSMStartTime
                            *COM*:00000002 GSMGeneralTimeOut
     /tmp/ccNuUijR.s:68     .bss.GSMSendCommandState:00000000 GSMSendCommandState
     /tmp/ccNuUijR.s:69     .bss.GSMSendCommandState:00000000 $d
     /tmp/ccNuUijR.s:74     .bss.GSMSendCommandFlag:00000000 GSMSendCommandFlag
     /tmp/ccNuUijR.s:75     .bss.GSMSendCommandFlag:00000000 $d
                            *COM*:00000002 GSMSendCommandTimeOut
     /tmp/ccNuUijR.s:81     .bss.GSMSendCommandIntento:00000000 GSMSendCommandIntento
     /tmp/ccNuUijR.s:82     .bss.GSMSendCommandIntento:00000000 $d
     /tmp/ccNuUijR.s:87     .bss.GSMSendSMSState:00000000 GSMSendSMSState
     /tmp/ccNuUijR.s:88     .bss.GSMSendSMSState:00000000 $d
     /tmp/ccNuUijR.s:93     .bss.GSMSendSMSFlag:00000000 GSMSendSMSFlag
     /tmp/ccNuUijR.s:94     .bss.GSMSendSMSFlag:00000000 $d
                            *COM*:00000002 GSMSendSMSTimeOut
                            *COM*:00000020 GSMSendSMSbuffAux
     /tmp/ccNuUijR.s:101    .bss.GSMConfigState:00000000 GSMConfigState
     /tmp/ccNuUijR.s:102    .bss.GSMConfigState:00000000 $d
                            *COM*:00000002 GSMConfigTimeOut
                            *COM*:00000002 GSMConfigTime
                            *COM*:00000002 GSMConfigGPRSTimeOut
     /tmp/ccNuUijR.s:110    .bss.GSMConfigGPRSState:00000000 GSMConfigGPRSState
     /tmp/ccNuUijR.s:111    .bss.GSMConfigGPRSState:00000000 $d
     /tmp/ccNuUijR.s:116    .bss.GSMConfigGPRSflag:00000000 GSMConfigGPRSflag
     /tmp/ccNuUijR.s:117    .bss.GSMConfigGPRSflag:00000000 $d
                            *COM*:00000020 GSMbuffStatus
                            *COM*:00000040 GSMbuffGPRSCommand
                            *COM*:00000010 GSMIPadd
     /tmp/ccNuUijR.s:125    .data.GPRSrssi:00000000 GPRSrssi
     /tmp/ccNuUijR.s:131    .bss.GSMSendIPState:00000000 GSMSendIPState
     /tmp/ccNuUijR.s:132    .bss.GSMSendIPState:00000000 $d
     /tmp/ccNuUijR.s:137    .bss.GSMSendIPFlag:00000000 GSMSendIPFlag
     /tmp/ccNuUijR.s:138    .bss.GSMSendIPFlag:00000000 $d
                            *COM*:00000002 GSMSendIPTimeOut
                            *COM*:00000020 GSMSendIPbuffAux
                            *COM*:00000100 GSMbuffRtaCommand
     /tmp/ccNuUijR.s:147    .rodata.GSM_OK:00000000 GSM_OK
     /tmp/ccNuUijR.s:144    .rodata.GSM_OK:00000000 $d
     /tmp/ccNuUijR.s:154    .rodata.GSM_ERR:00000000 GSM_ERR
     /tmp/ccNuUijR.s:151    .rodata.GSM_ERR:00000000 $d
     /tmp/ccNuUijR.s:161    .rodata.GSM_CMGF:00000000 GSM_CMGF
     /tmp/ccNuUijR.s:158    .rodata.GSM_CMGF:00000000 $d
     /tmp/ccNuUijR.s:168    .rodata.GSM_IPSTATE:00000000 GSM_IPSTATE
     /tmp/ccNuUijR.s:165    .rodata.GSM_IPSTATE:00000000 $d
     /tmp/ccNuUijR.s:175    .rodata.GSM_IPINITIAL:00000000 GSM_IPINITIAL
     /tmp/ccNuUijR.s:172    .rodata.GSM_IPINITIAL:00000000 $d
     /tmp/ccNuUijR.s:182    .rodata.GSM_IPSTART:00000000 GSM_IPSTART
     /tmp/ccNuUijR.s:179    .rodata.GSM_IPSTART:00000000 $d
     /tmp/ccNuUijR.s:189    .rodata.GSM_IPGPRSACT:00000000 GSM_IPGPRSACT
     /tmp/ccNuUijR.s:186    .rodata.GSM_IPGPRSACT:00000000 $d
     /tmp/ccNuUijR.s:196    .rodata.GSM_IPSTATUS:00000000 GSM_IPSTATUS
     /tmp/ccNuUijR.s:193    .rodata.GSM_IPSTATUS:00000000 $d
ARM GAS  /tmp/ccNuUijR.s 			page 214


     /tmp/ccNuUijR.s:203    .rodata.GSM_IPCONNECTING:00000000 GSM_IPCONNECTING
     /tmp/ccNuUijR.s:200    .rodata.GSM_IPCONNECTING:00000000 $d
     /tmp/ccNuUijR.s:210    .rodata.GSM_IPCONNOK:00000000 GSM_IPCONNOK
     /tmp/ccNuUijR.s:207    .rodata.GSM_IPCONNOK:00000000 $d
     /tmp/ccNuUijR.s:217    .rodata.GSM_IPCONNFAIL:00000000 GSM_IPCONNFAIL
     /tmp/ccNuUijR.s:214    .rodata.GSM_IPCONNFAIL:00000000 $d
     /tmp/ccNuUijR.s:224    .rodata.GSM_IPCONNCLOSE:00000000 GSM_IPCONNCLOSE
     /tmp/ccNuUijR.s:221    .rodata.GSM_IPCONNCLOSE:00000000 $d
     /tmp/ccNuUijR.s:231    .rodata.GSM_SIM1:00000000 GSM_SIM1
     /tmp/ccNuUijR.s:228    .rodata.GSM_SIM1:00000000 $d
     /tmp/ccNuUijR.s:238    .rodata.GSM_SIM2:00000000 GSM_SIM2
     /tmp/ccNuUijR.s:235    .rodata.GSM_SIM2:00000000 $d
     /tmp/ccNuUijR.s:245    .rodata.GSM_SENDOK:00000000 GSM_SENDOK
     /tmp/ccNuUijR.s:242    .rodata.GSM_SENDOK:00000000 $d
     /tmp/ccNuUijR.s:251    .bss.prestadorSimState:00000000 prestadorSimState
     /tmp/ccNuUijR.s:252    .bss.prestadorSimState:00000000 $d
     /tmp/ccNuUijR.s:257    .data.prestadorSimTime:00000000 prestadorSimTime
     /tmp/ccNuUijR.s:263    .bss.GSMCantSMS:00000000 GSMCantSMS
     /tmp/ccNuUijR.s:264    .bss.GSMCantSMS:00000000 $d
     /tmp/ccNuUijR.s:269    .bss.GSMCantSMS2:00000000 GSMCantSMS2
     /tmp/ccNuUijR.s:270    .bss.GSMCantSMS2:00000000 $d
     /tmp/ccNuUijR.s:275    .data.GSMnumSMS:00000000 GSMnumSMS
     /tmp/ccNuUijR.s:281    .bss.GSMReadSMSState:00000000 GSMReadSMSState
     /tmp/ccNuUijR.s:282    .bss.GSMReadSMSState:00000000 $d
                            *COM*:00000020 GSMReadSMScommand
                            *COM*:00000020 GSMReadSMSrepIn
     /tmp/ccNuUijR.s:289    .bss.prestadorSimSelect:00000000 prestadorSimSelect
     /tmp/ccNuUijR.s:290    .bss.prestadorSimSelect:00000000 $d
     /tmp/ccNuUijR.s:295    .bss.flagCloseIP:00000000 flagCloseIP
     /tmp/ccNuUijR.s:296    .bss.flagCloseIP:00000000 $d
     /tmp/ccNuUijR.s:298    .text.GSMProcess:00000000 $t
     /tmp/ccNuUijR.s:303    .text.GSMProcess:00000000 GSMProcess
     /tmp/ccNuUijR.s:356    .text.GSMProcess:00000044 $d
     /tmp/ccNuUijR.s:366    .text.GSM_Start:00000000 $t
     /tmp/ccNuUijR.s:371    .text.GSM_Start:00000000 GSM_Start
     /tmp/ccNuUijR.s:545    .text.GSM_Start:000000f4 $d
     /tmp/ccNuUijR.s:551    .text.GSM_Start_Stop_ResetSM:00000000 $t
     /tmp/ccNuUijR.s:556    .text.GSM_Start_Stop_ResetSM:00000000 GSM_Start_Stop_ResetSM
     /tmp/ccNuUijR.s:571    .text.GSM_Start_Stop_ResetSM:0000000c $d
     /tmp/ccNuUijR.s:576    .text.GSM_Stop:00000000 $t
     /tmp/ccNuUijR.s:581    .text.GSM_Stop:00000000 GSM_Stop
     /tmp/ccNuUijR.s:707    .text.GSM_Stop:000000b0 $d
     /tmp/ccNuUijR.s:714    .text.GSM_Delay:00000000 $t
     /tmp/ccNuUijR.s:719    .text.GSM_Delay:00000000 GSM_Delay
     /tmp/ccNuUijR.s:800    .text.GSM_Delay:00000068 $d
     /tmp/ccNuUijR.s:806    .rodata:00000000 $d
     /tmp/ccNuUijR.s:813    .text.GSMPrestador:00000000 $t
     /tmp/ccNuUijR.s:818    .text.GSMPrestador:00000000 GSMPrestador
     /tmp/ccNuUijR.s:4347   .text.GSM_SetSIM:00000000 GSM_SetSIM
     /tmp/ccNuUijR.s:1934   .text.GSMSendCommand:00000000 GSMSendCommand
     /tmp/ccNuUijR.s:1369   .text.GSMPrestador:00000378 $d
     /tmp/ccNuUijR.s:1386   .text.GSMPrestador:000003b4 $t
     /tmp/ccNuUijR.s:1408   .text.GSMPrestador:000003c8 $d
     /tmp/ccNuUijR.s:1417   .text.GSMCloseIP:00000000 $t
     /tmp/ccNuUijR.s:1422   .text.GSMCloseIP:00000000 GSMCloseIP
     /tmp/ccNuUijR.s:1501   .text.GSMCloseIP:00000064 $d
     /tmp/ccNuUijR.s:1539   .text.GSMReceive:00000000 $t
ARM GAS  /tmp/ccNuUijR.s 			page 215


     /tmp/ccNuUijR.s:1544   .text.GSMReceive:00000000 GSMReceive
     /tmp/ccNuUijR.s:1904   .text.GSMReceive:00000250 $d
     /tmp/ccNuUijR.s:1929   .text.GSMSendCommand:00000000 $t
     /tmp/ccNuUijR.s:2154   .text.GSMSendCommand:00000138 $d
     /tmp/ccNuUijR.s:2182   .text.GSM_Config:00000000 $t
     /tmp/ccNuUijR.s:2187   .text.GSM_Config:00000000 GSM_Config
     /tmp/ccNuUijR.s:2216   .rodata.GSM_Config:00000000 $d
     /tmp/ccNuUijR.s:2720   .text.GSM_Config:000002c8 $d
     /tmp/ccNuUijR.s:2745   .text.GSMSendSMS:00000000 $t
     /tmp/ccNuUijR.s:2750   .text.GSMSendSMS:00000000 GSMSendSMS
     /tmp/ccNuUijR.s:2966   .text.GSMSendSMS:00000150 $d
     /tmp/ccNuUijR.s:3039   .text.GSMConfigGPRS:00000000 $t
     /tmp/ccNuUijR.s:3044   .text.GSMConfigGPRS:00000000 GSMConfigGPRS
     /tmp/ccNuUijR.s:3076   .rodata.GSMConfigGPRS:00000000 $d
     /tmp/ccNuUijR.s:3603   .text.GSMConfigGPRS:00000398 $d
     /tmp/ccNuUijR.s:3631   .text.GSMConfigGPRS:00000400 $t
     /tmp/ccNuUijR.s:4127   .text.GSMConfigGPRS:00000744 $d
     /tmp/ccNuUijR.s:4145   .text.GSMConfigGPRS:00000784 $t
     /tmp/ccNuUijR.s:4327   .text.GSMConfigGPRS:00000870 $d
     /tmp/ccNuUijR.s:4342   .text.GSM_SetSIM:00000000 $t
     /tmp/ccNuUijR.s:4436   .text.GSM_SetSIM:00000078 $d
     /tmp/ccNuUijR.s:4447   .text.GSMSendIP:00000000 $t
     /tmp/ccNuUijR.s:4452   .text.GSMSendIP:00000000 GSMSendIP
     /tmp/ccNuUijR.s:4637   .text.GSMSendIP:00000110 $d
     /tmp/ccNuUijR.s:4648   .text.GSMTimeoutCounters:00000000 $t
     /tmp/ccNuUijR.s:4653   .text.GSMTimeoutCounters:00000000 GSMTimeoutCounters
     /tmp/ccNuUijR.s:4795   .text.GSMTimeoutCounters:000000d4 $d
     /tmp/ccNuUijR.s:4827   .text.GSMReceivSMS:00000000 $t
     /tmp/ccNuUijR.s:4832   .text.GSMReceivSMS:00000000 GSMReceivSMS
     /tmp/ccNuUijR.s:5196   .text.GSMReceivSMS:00000240 $d
     /tmp/ccNuUijR.s:5213   .text.GSMConfigPDPGPRS:00000000 $t
     /tmp/ccNuUijR.s:5218   .text.GSMConfigPDPGPRS:00000000 GSMConfigPDPGPRS
     /tmp/ccNuUijR.s:5250   .rodata.GSMConfigPDPGPRS:00000000 $d
     /tmp/ccNuUijR.s:5752   .text.GSMConfigPDPGPRS:0000032c $d
     /tmp/ccNuUijR.s:5778   .text.GSMConfigPDPGPRS:0000038c $t
     /tmp/ccNuUijR.s:6289   .text.GSMConfigPDPGPRS:000006b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ReadUsart1Buffer
usart1_have_data
usart1_mini_timeout
usart1_pckt_ready
usart1_pckt_bytes
strncmp
strcpy
SIM900APNSIM1
SIM900USUARIOSIM1
SIM900CLAVESIM1
SIM900IPREMOTE
SIM900PORTREMOTE
SIM900APNSIM2
SIM900USUARIOSIM2
SIM900CLAVESIM2
ESPPreParser2
Usart2Send
strncpy
ARM GAS  /tmp/ccNuUijR.s 			page 216


FuncsGSMMessageFlags
Usart1Send
memcpy
strcat
strlen
sprintf
param_struct
