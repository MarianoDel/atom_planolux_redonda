ARM GAS  /tmp/cc4fp2Bh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"sim900_800.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ src/sim900_800.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip src/sim900_800.o -g -gdwarf-2 -O0 -Wall
  24              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.comm	buffUARTGSMrx,256,4
  55              		.comm	buffUARTGSMrx2,256,4
  56              		.comm	pBuffUARTGSMrxW,4,4
  57              		.comm	pBuffUARTGSMrxR,4,4
ARM GAS  /tmp/cc4fp2Bh.s 			page 2


  58              		.comm	PacketReadyUARTGSM,1,1
  59              		.comm	buffUARTGSMtx,256,4
  60              		.comm	pBuffUARTGSMtxR,4,4
  61              		.comm	pBuffUARTGSMtxW,4,4
  62              		.global	GSMStartState
  63              		.section	.bss.GSMStartState,"aw",%nobits
  64              		.type	GSMStartState, %object
  65              		.size	GSMStartState, 1
  66              	GSMStartState:
  67 0000 00       		.space	1
  68              		.comm	GSMStartTime,2,2
  69              		.comm	GSMGeneralTimeOut,2,2
  70              		.global	GSMSendCommandState
  71              		.section	.bss.GSMSendCommandState,"aw",%nobits
  72              		.type	GSMSendCommandState, %object
  73              		.size	GSMSendCommandState, 1
  74              	GSMSendCommandState:
  75 0000 00       		.space	1
  76              		.global	GSMSendCommandFlag
  77              		.section	.bss.GSMSendCommandFlag,"aw",%nobits
  78              		.type	GSMSendCommandFlag, %object
  79              		.size	GSMSendCommandFlag, 1
  80              	GSMSendCommandFlag:
  81 0000 00       		.space	1
  82              		.comm	GSMSendCommandTimeOut,2,2
  83              		.global	GSMSendCommandIntento
  84              		.section	.bss.GSMSendCommandIntento,"aw",%nobits
  85              		.type	GSMSendCommandIntento, %object
  86              		.size	GSMSendCommandIntento, 1
  87              	GSMSendCommandIntento:
  88 0000 00       		.space	1
  89              		.global	GSMSendSMSState
  90              		.section	.bss.GSMSendSMSState,"aw",%nobits
  91              		.type	GSMSendSMSState, %object
  92              		.size	GSMSendSMSState, 1
  93              	GSMSendSMSState:
  94 0000 00       		.space	1
  95              		.global	GSMSendSMSFlag
  96              		.section	.bss.GSMSendSMSFlag,"aw",%nobits
  97              		.type	GSMSendSMSFlag, %object
  98              		.size	GSMSendSMSFlag, 1
  99              	GSMSendSMSFlag:
 100 0000 00       		.space	1
 101              		.comm	GSMSendSMSTimeOut,2,2
 102              		.comm	GSMSendSMSbuffAux,32,4
 103              		.global	GSMConfigState
 104              		.section	.bss.GSMConfigState,"aw",%nobits
 105              		.type	GSMConfigState, %object
 106              		.size	GSMConfigState, 1
 107              	GSMConfigState:
 108 0000 00       		.space	1
 109              		.comm	GSMConfigTimeOut,2,2
 110              		.comm	GSMConfigTime,2,2
 111              		.comm	GSMConfigGPRSTimeOut,2,2
 112              		.global	GSMConfigGPRSState
 113              		.section	.bss.GSMConfigGPRSState,"aw",%nobits
 114              		.type	GSMConfigGPRSState, %object
ARM GAS  /tmp/cc4fp2Bh.s 			page 3


 115              		.size	GSMConfigGPRSState, 1
 116              	GSMConfigGPRSState:
 117 0000 00       		.space	1
 118              		.global	GSMConfigGPRSflag
 119              		.section	.bss.GSMConfigGPRSflag,"aw",%nobits
 120              		.type	GSMConfigGPRSflag, %object
 121              		.size	GSMConfigGPRSflag, 1
 122              	GSMConfigGPRSflag:
 123 0000 00       		.space	1
 124              		.comm	GSMbuffStatus,32,4
 125              		.comm	GSMbuffGPRSCommand,64,4
 126              		.comm	GSMIPadd,16,4
 127              		.global	GPRSrssi
 128              		.section	.data.GPRSrssi,"aw",%progbits
 129              		.type	GPRSrssi, %object
 130              		.size	GPRSrssi, 1
 131              	GPRSrssi:
 132 0000 63       		.byte	99
 133              		.global	GSMSendIPState
 134              		.section	.bss.GSMSendIPState,"aw",%nobits
 135              		.type	GSMSendIPState, %object
 136              		.size	GSMSendIPState, 1
 137              	GSMSendIPState:
 138 0000 00       		.space	1
 139              		.global	GSMSendIPFlag
 140              		.section	.bss.GSMSendIPFlag,"aw",%nobits
 141              		.type	GSMSendIPFlag, %object
 142              		.size	GSMSendIPFlag, 1
 143              	GSMSendIPFlag:
 144 0000 00       		.space	1
 145              		.comm	GSMSendIPTimeOut,2,2
 146              		.comm	GSMSendIPbuffAux,32,4
 147              		.comm	GSMbuffRtaCommand,256,4
 148              		.comm	DB300flagConnGPRS,1,1
 149              		.global	GSM_OK
 150              		.section	.rodata.GSM_OK,"a",%progbits
 151              		.align	2
 152              		.type	GSM_OK, %object
 153              		.size	GSM_OK, 3
 154              	GSM_OK:
 155 0000 4F4B00   		.ascii	"OK\000"
 156              		.global	GSM_ERR
 157              		.section	.rodata.GSM_ERR,"a",%progbits
 158              		.align	2
 159              		.type	GSM_ERR, %object
 160              		.size	GSM_ERR, 6
 161              	GSM_ERR:
 162 0000 4552524F 		.ascii	"ERROR\000"
 162      5200
 163              		.global	GSM_RTA
 164              		.section	.rodata.GSM_RTA,"a",%progbits
 165              		.type	GSM_RTA, %object
 166              		.size	GSM_RTA, 1
 167              	GSM_RTA:
 168 0000 2B       		.byte	43
 169              		.global	GSM_CMGF
 170              		.section	.rodata.GSM_CMGF,"a",%progbits
ARM GAS  /tmp/cc4fp2Bh.s 			page 4


 171              		.align	2
 172              		.type	GSM_CMGF, %object
 173              		.size	GSM_CMGF, 7
 174              	GSM_CMGF:
 175 0000 2B434D47 		.ascii	"+CMGF:\000"
 175      463A00
 176              		.global	GSM_IPSTATE
 177              		.section	.rodata.GSM_IPSTATE,"a",%progbits
 178              		.align	2
 179              		.type	GSM_IPSTATE, %object
 180              		.size	GSM_IPSTATE, 7
 181              	GSM_IPSTATE:
 182 0000 53544154 		.ascii	"STATE:\000"
 182      453A00
 183              		.global	GSM_IPINITIAL
 184              		.section	.rodata.GSM_IPINITIAL,"a",%progbits
 185              		.align	2
 186              		.type	GSM_IPINITIAL, %object
 187              		.size	GSM_IPINITIAL, 11
 188              	GSM_IPINITIAL:
 189 0000 49502049 		.ascii	"IP INITIAL\000"
 189      4E495449 
 189      414C00
 190              		.global	GSM_IPSTART
 191              		.section	.rodata.GSM_IPSTART,"a",%progbits
 192              		.align	2
 193              		.type	GSM_IPSTART, %object
 194              		.size	GSM_IPSTART, 9
 195              	GSM_IPSTART:
 196 0000 49502053 		.ascii	"IP START\000"
 196      54415254 
 196      00
 197              		.global	GSM_IPGPRSACT
 198              		.section	.rodata.GSM_IPGPRSACT,"a",%progbits
 199              		.align	2
 200              		.type	GSM_IPGPRSACT, %object
 201              		.size	GSM_IPGPRSACT, 11
 202              	GSM_IPGPRSACT:
 203 0000 49502047 		.ascii	"IP GPRSACT\000"
 203      50525341 
 203      435400
 204              		.global	GSM_IPSTATUS
 205              		.section	.rodata.GSM_IPSTATUS,"a",%progbits
 206              		.align	2
 207              		.type	GSM_IPSTATUS, %object
 208              		.size	GSM_IPSTATUS, 10
 209              	GSM_IPSTATUS:
 210 0000 49502053 		.ascii	"IP STATUS\000"
 210      54415455 
 210      5300
 211              		.global	GSM_IPCONNECTING
 212              		.section	.rodata.GSM_IPCONNECTING,"a",%progbits
 213              		.align	2
 214              		.type	GSM_IPCONNECTING, %object
 215              		.size	GSM_IPCONNECTING, 15
 216              	GSM_IPCONNECTING:
 217 0000 54435020 		.ascii	"TCP CONNECTING\000"
ARM GAS  /tmp/cc4fp2Bh.s 			page 5


 217      434F4E4E 
 217      45435449 
 217      4E4700
 218              		.global	GSM_IPCONNOK
 219              		.section	.rodata.GSM_IPCONNOK,"a",%progbits
 220              		.align	2
 221              		.type	GSM_IPCONNOK, %object
 222              		.size	GSM_IPCONNOK, 11
 223              	GSM_IPCONNOK:
 224 0000 434F4E4E 		.ascii	"CONNECT OK\000"
 224      45435420 
 224      4F4B00
 225              		.global	GSM_IPCONNFAIL
 226              		.section	.rodata.GSM_IPCONNFAIL,"a",%progbits
 227              		.align	2
 228              		.type	GSM_IPCONNFAIL, %object
 229              		.size	GSM_IPCONNFAIL, 13
 230              	GSM_IPCONNFAIL:
 231 0000 434F4E4E 		.ascii	"CONNECT FAIL\000"
 231      45435420 
 231      4641494C 
 231      00
 232              		.global	GSM_IPCONNCLOSE
 233              		.section	.rodata.GSM_IPCONNCLOSE,"a",%progbits
 234              		.align	2
 235              		.type	GSM_IPCONNCLOSE, %object
 236              		.size	GSM_IPCONNCLOSE, 11
 237              	GSM_IPCONNCLOSE:
 238 0000 54435020 		.ascii	"TCP CLOSED\000"
 238      434C4F53 
 238      454400
 239              		.global	GSM_SIM1
 240              		.section	.rodata.GSM_SIM1,"a",%progbits
 241              		.align	2
 242              		.type	GSM_SIM1, %object
 243              		.size	GSM_SIM1, 5
 244              	GSM_SIM1:
 245 0000 53494D31 		.ascii	"SIM1\000"
 245      00
 246              		.global	GSM_SIM2
 247              		.section	.rodata.GSM_SIM2,"a",%progbits
 248              		.align	2
 249              		.type	GSM_SIM2, %object
 250              		.size	GSM_SIM2, 5
 251              	GSM_SIM2:
 252 0000 53494D32 		.ascii	"SIM2\000"
 252      00
 253              		.global	GSM_SENDOK
 254              		.section	.rodata.GSM_SENDOK,"a",%progbits
 255              		.align	2
 256              		.type	GSM_SENDOK, %object
 257              		.size	GSM_SENDOK, 8
 258              	GSM_SENDOK:
 259 0000 53454E44 		.ascii	"SEND OK\000"
 259      204F4B00 
 260              		.global	prestadorSimState
 261              		.section	.bss.prestadorSimState,"aw",%nobits
ARM GAS  /tmp/cc4fp2Bh.s 			page 6


 262              		.type	prestadorSimState, %object
 263              		.size	prestadorSimState, 1
 264              	prestadorSimState:
 265 0000 00       		.space	1
 266              		.global	prestadorSimTime
 267              		.section	.data.prestadorSimTime,"aw",%progbits
 268              		.type	prestadorSimTime, %object
 269              		.size	prestadorSimTime, 1
 270              	prestadorSimTime:
 271 0000 FA       		.byte	-6
 272              		.global	GSMCantSMS
 273              		.section	.bss.GSMCantSMS,"aw",%nobits
 274              		.type	GSMCantSMS, %object
 275              		.size	GSMCantSMS, 1
 276              	GSMCantSMS:
 277 0000 00       		.space	1
 278              		.global	GSMCantSMS2
 279              		.section	.bss.GSMCantSMS2,"aw",%nobits
 280              		.type	GSMCantSMS2, %object
 281              		.size	GSMCantSMS2, 1
 282              	GSMCantSMS2:
 283 0000 00       		.space	1
 284              		.global	GSMnumSMS
 285              		.section	.data.GSMnumSMS,"aw",%progbits
 286              		.type	GSMnumSMS, %object
 287              		.size	GSMnumSMS, 1
 288              	GSMnumSMS:
 289 0000 01       		.byte	1
 290              		.global	GSMReadSMSState
 291              		.section	.bss.GSMReadSMSState,"aw",%nobits
 292              		.type	GSMReadSMSState, %object
 293              		.size	GSMReadSMSState, 1
 294              	GSMReadSMSState:
 295 0000 00       		.space	1
 296              		.comm	GSMReadSMScommand,32,4
 297              		.comm	GSMReadSMSrepIn,32,4
 298              		.global	GSMrxSMSState
 299              		.section	.bss.GSMrxSMSState,"aw",%nobits
 300              		.type	GSMrxSMSState, %object
 301              		.size	GSMrxSMSState, 1
 302              	GSMrxSMSState:
 303 0000 00       		.space	1
 304              		.global	prestadorSimSelect
 305              		.section	.bss.prestadorSimSelect,"aw",%nobits
 306              		.type	prestadorSimSelect, %object
 307              		.size	prestadorSimSelect, 1
 308              	prestadorSimSelect:
 309 0000 00       		.space	1
 310              		.global	flagCloseIP
 311              		.section	.bss.flagCloseIP,"aw",%nobits
 312              		.type	flagCloseIP, %object
 313              		.size	flagCloseIP, 1
 314              	flagCloseIP:
 315 0000 00       		.space	1
 316              		.section	.text.GSMProcess,"ax",%progbits
 317              		.align	2
 318              		.global	GSMProcess
ARM GAS  /tmp/cc4fp2Bh.s 			page 7


 319              		.code	16
 320              		.thumb_func
 321              		.type	GSMProcess, %function
 322              	GSMProcess:
 323              	.LFB20:
 324              		.file 1 "src/sim900_800.c"
   1:src/sim900_800.c **** 
   2:src/sim900_800.c **** #include "sim900_800.h"
   3:src/sim900_800.c **** #include "uart.h"
   4:src/sim900_800.c **** #include "tim.h"
   5:src/sim900_800.c **** 
   6:src/sim900_800.c **** #include <stdlib.h>
   7:src/sim900_800.c **** #include <stdio.h>
   8:src/sim900_800.c **** #include <string.h>
   9:src/sim900_800.c **** 
  10:src/sim900_800.c **** 
  11:src/sim900_800.c **** //UART GSM.
  12:src/sim900_800.c **** //RX.
  13:src/sim900_800.c **** volatile char buffUARTGSMrx[buffUARTGSMrx_dimension];
  14:src/sim900_800.c **** volatile char buffUARTGSMrx2[buffUARTGSMrx_dimension];
  15:src/sim900_800.c **** volatile char *pBuffUARTGSMrxW;
  16:src/sim900_800.c **** volatile char *pBuffUARTGSMrxR;
  17:src/sim900_800.c **** volatile char PacketReadyUARTGSM;
  18:src/sim900_800.c **** //TX.
  19:src/sim900_800.c **** volatile char buffUARTGSMtx[buffUARTGSMrx_dimension];
  20:src/sim900_800.c **** volatile char *pBuffUARTGSMtxR;
  21:src/sim900_800.c **** volatile char *pBuffUARTGSMtxW;
  22:src/sim900_800.c **** 
  23:src/sim900_800.c **** //GSM Start.
  24:src/sim900_800.c **** unsigned char GSMStartState = 0;
  25:src/sim900_800.c **** volatile unsigned short GSMStartTime;
  26:src/sim900_800.c **** volatile unsigned short GSMGeneralTimeOut;
  27:src/sim900_800.c **** 
  28:src/sim900_800.c **** //GSM SendCommand.
  29:src/sim900_800.c **** char GSMSendCommandState = 0;
  30:src/sim900_800.c **** char GSMSendCommandFlag = 0;
  31:src/sim900_800.c **** volatile unsigned short GSMSendCommandTimeOut;
  32:src/sim900_800.c **** char GSMSendCommandIntento = 0;
  33:src/sim900_800.c **** 
  34:src/sim900_800.c **** //GSM SendSMS
  35:src/sim900_800.c **** char GSMSendSMSState = 0;
  36:src/sim900_800.c **** char GSMSendSMSFlag = 0;
  37:src/sim900_800.c **** volatile unsigned short GSMSendSMSTimeOut;
  38:src/sim900_800.c **** char GSMSendSMSbuffAux[32];
  39:src/sim900_800.c **** 
  40:src/sim900_800.c **** //GSM Config.
  41:src/sim900_800.c **** char GSMConfigState = 0;
  42:src/sim900_800.c **** volatile unsigned short GSMConfigTimeOut;
  43:src/sim900_800.c **** volatile unsigned short GSMConfigTime;
  44:src/sim900_800.c **** 
  45:src/sim900_800.c **** //GPRS Config.
  46:src/sim900_800.c **** unsigned short GSMConfigGPRSTimeOut;
  47:src/sim900_800.c **** char GSMConfigGPRSState = 0;
  48:src/sim900_800.c **** char GSMConfigGPRSflag = 0;
  49:src/sim900_800.c **** char GSMbuffStatus[32];
  50:src/sim900_800.c **** char GSMbuffGPRSCommand[64];
  51:src/sim900_800.c **** char GSMIPadd[16];
ARM GAS  /tmp/cc4fp2Bh.s 			page 8


  52:src/sim900_800.c **** unsigned char GPRSrssi = 99;
  53:src/sim900_800.c **** 
  54:src/sim900_800.c **** //GSM SendIP
  55:src/sim900_800.c **** char GSMSendIPState = 0;
  56:src/sim900_800.c **** char GSMSendIPFlag = 0;
  57:src/sim900_800.c **** volatile unsigned short GSMSendIPTimeOut;
  58:src/sim900_800.c **** char GSMSendIPbuffAux[32];
  59:src/sim900_800.c **** 
  60:src/sim900_800.c **** char GSMbuffRtaCommand[buffUARTGSMrx_dimension];
  61:src/sim900_800.c **** 
  62:src/sim900_800.c **** //Conexion cerrada.
  63:src/sim900_800.c **** char DB300flagConnGPRS;
  64:src/sim900_800.c **** 
  65:src/sim900_800.c **** const char GSM_OK[] 	= "OK";
  66:src/sim900_800.c **** const char GSM_ERR[] 	= "ERROR";
  67:src/sim900_800.c **** 
  68:src/sim900_800.c **** const char GSM_RTA		= '+';
  69:src/sim900_800.c **** 
  70:src/sim900_800.c **** const char GSM_CMGF[] = "+CMGF:";
  71:src/sim900_800.c **** const char GSM_IPSTATE[] = "STATE:";
  72:src/sim900_800.c **** 
  73:src/sim900_800.c **** //Estados GPRS.
  74:src/sim900_800.c **** const char GSM_IPINITIAL[] 		= "IP INITIAL";
  75:src/sim900_800.c **** const char GSM_IPSTART[] 		= "IP START";
  76:src/sim900_800.c **** const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
  77:src/sim900_800.c **** const char GSM_IPSTATUS[] 		= "IP STATUS";
  78:src/sim900_800.c **** const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
  79:src/sim900_800.c **** const char GSM_IPCONNOK[] 		= "CONNECT OK";
  80:src/sim900_800.c **** const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
  81:src/sim900_800.c **** const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
  82:src/sim900_800.c **** 
  83:src/sim900_800.c **** const char GSM_SIM1[] = "SIM1";
  84:src/sim900_800.c **** const char GSM_SIM2[] = "SIM2";
  85:src/sim900_800.c **** const char GSM_SENDOK[] = "SEND OK";
  86:src/sim900_800.c **** // const char GSM_SENDOK[] = "000: ACK";
  87:src/sim900_800.c **** unsigned char prestadorSimState = 0;
  88:src/sim900_800.c **** unsigned char prestadorSimTime = 250;
  89:src/sim900_800.c **** 
  90:src/sim900_800.c **** 
  91:src/sim900_800.c **** //Recepcion de SMS.
  92:src/sim900_800.c **** unsigned char GSMCantSMS = 0;
  93:src/sim900_800.c **** unsigned char GSMCantSMS2 = 0;
  94:src/sim900_800.c **** unsigned char GSMnumSMS = 1;
  95:src/sim900_800.c **** char GSMReadSMSState = 0;
  96:src/sim900_800.c **** char GSMReadSMScommand[32];
  97:src/sim900_800.c **** char GSMReadSMSrepIn[32];
  98:src/sim900_800.c **** unsigned char GSMrxSMSState = 0;
  99:src/sim900_800.c **** unsigned char prestadorSimSelect = 0;
 100:src/sim900_800.c **** unsigned char flagCloseIP = 0;
 101:src/sim900_800.c **** 
 102:src/sim900_800.c **** //Config SIM900.
 103:src/sim900_800.c **** extern char SIM900APNSIM1[64];
 104:src/sim900_800.c **** extern char SIM900USUARIOSIM1[20];
 105:src/sim900_800.c **** extern char SIM900CLAVESIM1[20];
 106:src/sim900_800.c **** 
 107:src/sim900_800.c **** extern char SIM900APNSIM2[64];
 108:src/sim900_800.c **** extern char SIM900USUARIOSIM2[20];
ARM GAS  /tmp/cc4fp2Bh.s 			page 9


 109:src/sim900_800.c **** extern char SIM900CLAVESIM2[20];
 110:src/sim900_800.c **** extern char SIM900IPREMOTE[20];
 111:src/sim900_800.c **** extern char SIM900PORTREMOTE[20];
 112:src/sim900_800.c **** 
 113:src/sim900_800.c **** 
 114:src/sim900_800.c **** extern volatile unsigned char usart1_mini_timeout;
 115:src/sim900_800.c **** extern volatile unsigned char usart1_pckt_ready;
 116:src/sim900_800.c **** extern volatile unsigned char usart1_have_data;
 117:src/sim900_800.c **** extern unsigned char usart1_pckt_bytes;
 118:src/sim900_800.c **** 
 119:src/sim900_800.c **** #define gsm_mini_timeout	usart1_mini_timeout
 120:src/sim900_800.c **** #define gsm_pckt_ready		usart1_pckt_ready
 121:src/sim900_800.c **** #define gsm_have_data		usart1_have_data
 122:src/sim900_800.c **** #define gsm_pckt_bytes		usart1_pckt_bytes
 123:src/sim900_800.c **** 
 124:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 125:src/sim900_800.c **** extern volatile unsigned char usart2_mini_timeout;
 126:src/sim900_800.c **** extern volatile unsigned char usart2_pckt_ready;
 127:src/sim900_800.c **** extern volatile unsigned char usart2_have_data;
 128:src/sim900_800.c **** extern unsigned char usart2_pckt_bytes;
 129:src/sim900_800.c **** #endif
 130:src/sim900_800.c **** //TODO: reimplementar esto
 131:src/sim900_800.c **** //void UARTGSM_Config(void)
 132:src/sim900_800.c **** //{
 133:src/sim900_800.c **** //
 134:src/sim900_800.c **** //	unsigned long temp;
 135:src/sim900_800.c **** //	NVIC_InitTypeDef NVIC_InitStructure;
 136:src/sim900_800.c **** //
 137:src/sim900_800.c **** //	//---- Clk USART2 ----//
 138:src/sim900_800.c **** //	if (!(RCC->APB1ENR & 0x00020000))
 139:src/sim900_800.c **** //		RCC->APB1ENR |= 0x00020000;
 140:src/sim900_800.c **** //
 141:src/sim900_800.c **** //	if (!(RCC->APB2ENR & 0x00000004))
 142:src/sim900_800.c **** //		RCC->APB2ENR |= 0x00000004;
 143:src/sim900_800.c **** //
 144:src/sim900_800.c **** //	//----GPIOA----//
 145:src/sim900_800.c **** //	//----TX:PA2 RX:PA3----//
 146:src/sim900_800.c **** //	temp = GPIOA->CRL;
 147:src/sim900_800.c **** //	temp &= 0xFFFF00FF;
 148:src/sim900_800.c **** //	temp |= 0x00004B00;
 149:src/sim900_800.c **** //	GPIOA->CRL = temp;
 150:src/sim900_800.c **** //
 151:src/sim900_800.c **** //	//---- NVIC ----//
 152:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
 153:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 154:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 155:src/sim900_800.c **** //	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 156:src/sim900_800.c **** //	NVIC_Init(&NVIC_InitStructure);
 157:src/sim900_800.c **** //
 158:src/sim900_800.c **** //	//NVIC_SetPriority(USART2_IRQn, 0);
 159:src/sim900_800.c **** //
 160:src/sim900_800.c **** //	//buffer GSM.
 161:src/sim900_800.c **** //	//RX.
 162:src/sim900_800.c **** //	pBuffUARTGSMrxW = &buffUARTGSMrx[0];
 163:src/sim900_800.c **** //	pBuffUARTGSMrxR = &buffUARTGSMrx[0];
 164:src/sim900_800.c **** //	counterUARTGSM = 0;
 165:src/sim900_800.c **** //	PacketReadyUARTGSM = 0;
ARM GAS  /tmp/cc4fp2Bh.s 			page 10


 166:src/sim900_800.c **** //
 167:src/sim900_800.c **** //	//TX.
 168:src/sim900_800.c **** //	pBuffUARTGSMtxR = &buffUARTGSMtx[0];
 169:src/sim900_800.c **** //	pBuffUARTGSMtxW = &buffUARTGSMtx[0];
 170:src/sim900_800.c **** //
 171:src/sim900_800.c **** //	while (pBuffUARTGSMrxW != &buffUARTGSMrx[buffUARTGSMrx_dimension - 2])
 172:src/sim900_800.c **** //	{
 173:src/sim900_800.c **** //		*pBuffUARTGSMrxW = 0;
 174:src/sim900_800.c **** //		pBuffUARTGSMrxW++;
 175:src/sim900_800.c **** //	}
 176:src/sim900_800.c **** //
 177:src/sim900_800.c **** //	pBuffUARTGSMrxW = &buffUARTGSMrx[0];
 178:src/sim900_800.c **** //
 179:src/sim900_800.c **** //	while (pBuffUARTGSMtxW != &buffUARTGSMtx[buffUARTGSMrx_dimension - 2])
 180:src/sim900_800.c **** //	{
 181:src/sim900_800.c **** //		*pBuffUARTGSMtxW = 0;
 182:src/sim900_800.c **** //		pBuffUARTGSMtxW++;
 183:src/sim900_800.c **** //	}
 184:src/sim900_800.c **** //
 185:src/sim900_800.c **** //	pBuffUARTGSMtxW = &buffUARTGSMtx[0];
 186:src/sim900_800.c **** //
 187:src/sim900_800.c **** //	USART2->BRR |= 0x0EA6;
 188:src/sim900_800.c **** //	USART2->CR1 |= 0x202C;
 189:src/sim900_800.c **** //
 190:src/sim900_800.c **** //}
 191:src/sim900_800.c **** //
 192:src/sim900_800.c **** //
 193:src/sim900_800.c **** //void UARTGSMSend(char * ptrSend)
 194:src/sim900_800.c **** //{
 195:src/sim900_800.c **** //
 196:src/sim900_800.c **** //	char datos = strlen ((const char *) &ptrSend[0]);
 197:src/sim900_800.c **** //
 198:src/sim900_800.c **** //	if (datos < (buffUARTGSMrx_dimension - 2))
 199:src/sim900_800.c **** //	{
 200:src/sim900_800.c **** //		if ((pBuffUARTGSMtxW + datos) < &buffUARTGSMtx[buffUARTGSMrx_dimension - 2])
 201:src/sim900_800.c **** //		{
 202:src/sim900_800.c **** //			strncpy((char *)pBuffUARTGSMtxW, (const char *)&ptrSend[0], datos);
 203:src/sim900_800.c **** //			pBuffUARTGSMtxW += datos;
 204:src/sim900_800.c **** //			*pBuffUARTGSMtxW = 0;
 205:src/sim900_800.c **** //		}
 206:src/sim900_800.c **** //		else
 207:src/sim900_800.c **** //			pBuffUARTGSMtxW  = buffUARTGSMtx;
 208:src/sim900_800.c **** //
 209:src/sim900_800.c **** //		USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 210:src/sim900_800.c **** //	}
 211:src/sim900_800.c **** //}
 212:src/sim900_800.c **** 
 213:src/sim900_800.c **** //Procesa respuestas del modulo GSM esperando el final de linea por timeout
 214:src/sim900_800.c **** //carga el buffer buffUARTGSMrx2 y avisa con el flag PacketReadyUARTGSM
 215:src/sim900_800.c **** void GSMProcess (void)
 216:src/sim900_800.c **** {
 325              		.loc 1 216 0
 326              		.cfi_startproc
 327 0000 10B5     		push	{r4, lr}	@
 328              	.LCFI0:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 4, -8
ARM GAS  /tmp/cc4fp2Bh.s 			page 11


 331              		.cfi_offset 14, -4
 217:src/sim900_800.c **** 	if ((gsm_have_data) && (!gsm_mini_timeout))
 332              		.loc 1 217 0
 333 0002 104B     		ldr	r3, .L4	@ tmp113,
 334 0004 1B78     		ldrb	r3, [r3]	@ tmp114, usart1_have_data
 335 0006 DBB2     		uxtb	r3, r3	@ D.7815, tmp114
 336 0008 002B     		cmp	r3, #0	@ D.7815,
 337 000a 18D0     		beq	.L3	@,
 338              		.loc 1 217 0 is_stmt 0 discriminator 1
 339 000c 0E4B     		ldr	r3, .L4+4	@ tmp115,
 340 000e 1B78     		ldrb	r3, [r3]	@ tmp116, usart1_mini_timeout
 341 0010 DBB2     		uxtb	r3, r3	@ D.7815, tmp116
 342 0012 002B     		cmp	r3, #0	@ D.7815,
 343 0014 13D1     		bne	.L3	@,
 218:src/sim900_800.c **** 	{
 219:src/sim900_800.c **** 		gsm_have_data = 0;
 344              		.loc 1 219 0 is_stmt 1
 345 0016 0B4B     		ldr	r3, .L4	@ tmp117,
 346 0018 0022     		movs	r2, #0	@ tmp118,
 347 001a 1A70     		strb	r2, [r3]	@ tmp119, usart1_have_data
 220:src/sim900_800.c **** 		gsm_pckt_ready = 1;
 348              		.loc 1 220 0
 349 001c 0B4B     		ldr	r3, .L4+8	@ tmp120,
 350 001e 0122     		movs	r2, #1	@ tmp121,
 351 0020 1A70     		strb	r2, [r3]	@ tmp122, usart1_pckt_ready
 221:src/sim900_800.c **** 		gsm_pckt_bytes = ReadUsart1Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 352              		.loc 1 221 0
 353 0022 8023     		movs	r3, #128	@ tmp132,
 354 0024 5A00     		lsls	r2, r3, #1	@ tmp123, tmp132,
 355 0026 0A4B     		ldr	r3, .L4+12	@ tmp124,
 356 0028 1100     		movs	r1, r2	@, tmp123
 357 002a 1800     		movs	r0, r3	@, tmp124
 358 002c FFF7FEFF 		bl	ReadUsart1Buffer	@
 359 0030 0300     		movs	r3, r0	@ tmp125,
 360 0032 1A00     		movs	r2, r3	@ D.7815, tmp126
 361 0034 074B     		ldr	r3, .L4+16	@ tmp127,
 362 0036 1A70     		strb	r2, [r3]	@ tmp128, usart1_pckt_bytes
 222:src/sim900_800.c **** 		PacketReadyUARTGSM = 1;
 363              		.loc 1 222 0
 364 0038 074B     		ldr	r3, .L4+20	@ tmp129,
 365 003a 0122     		movs	r2, #1	@ tmp130,
 366 003c 1A70     		strb	r2, [r3]	@ tmp131, PacketReadyUARTGSM
 367              	.L3:
 223:src/sim900_800.c **** //		GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsi
 224:src/sim900_800.c **** 	}
 225:src/sim900_800.c **** 
 226:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 227:src/sim900_800.c **** 	if ((usart2_have_data) && (!usart2_mini_timeout))
 228:src/sim900_800.c **** 	{
 229:src/sim900_800.c **** 		usart2_have_data = 0;
 230:src/sim900_800.c **** 		usart2_pckt_ready = 1;
 231:src/sim900_800.c **** 		usart2_pckt_bytes = ReadUsart2Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 232:src/sim900_800.c **** 	}
 233:src/sim900_800.c **** #endif
 234:src/sim900_800.c **** }
 368              		.loc 1 234 0
 369 003e C046     		nop
ARM GAS  /tmp/cc4fp2Bh.s 			page 12


 370              		@ sp needed	@
 371 0040 10BD     		pop	{r4, pc}
 372              	.L5:
 373 0042 C046     		.align	2
 374              	.L4:
 375 0044 00000000 		.word	usart1_have_data
 376 0048 00000000 		.word	usart1_mini_timeout
 377 004c 00000000 		.word	usart1_pckt_ready
 378 0050 00000000 		.word	buffUARTGSMrx2
 379 0054 00000000 		.word	usart1_pckt_bytes
 380 0058 00000000 		.word	PacketReadyUARTGSM
 381              		.cfi_endproc
 382              	.LFE20:
 383              		.size	GSMProcess, .-GSMProcess
 384              		.section	.text.GSM_Start,"ax",%progbits
 385              		.align	2
 386              		.global	GSM_Start
 387              		.code	16
 388              		.thumb_func
 389              		.type	GSM_Start, %function
 390              	GSM_Start:
 391              	.LFB21:
 235:src/sim900_800.c **** 
 236:src/sim900_800.c **** 
 237:src/sim900_800.c **** //------------------------------------//
 238:src/sim900_800.c **** //
 239:src/sim900_800.c **** //Wait: 1
 240:src/sim900_800.c **** //OK: 	2
 241:src/sim900_800.c **** //ERR:	3
 242:src/sim900_800.c **** //TO:	4
 243:src/sim900_800.c **** //------------------------------------//
 244:src/sim900_800.c **** /*
 245:src/sim900_800.c **** unsigned char GSM_Start(void)
 246:src/sim900_800.c **** {
 247:src/sim900_800.c **** 
 248:src/sim900_800.c **** 	if (!GSM_STATUS || (GSMStartState > 1))
 249:src/sim900_800.c **** 	{
 250:src/sim900_800.c **** 		switch(GSMStartState)
 251:src/sim900_800.c **** 		{
 252:src/sim900_800.c **** 			case 0:
 253:src/sim900_800.c **** 				GSMStartTime = 40;
 254:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 255:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 256:src/sim900_800.c **** 				GSMStartState++;
 257:src/sim900_800.c **** 				break;
 258:src/sim900_800.c **** 			case 1:
 259:src/sim900_800.c **** 				if(GSMStartTime == 0) //Espera 4 segugundos.
 260:src/sim900_800.c **** 				{
 261:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 262:src/sim900_800.c **** 					GSM_PWRKEY_OFF;
 263:src/sim900_800.c **** 					GSMStartTime = 100; //10 segundos.
 264:src/sim900_800.c **** 					GSMStartState++;
 265:src/sim900_800.c **** 				}
 266:src/sim900_800.c **** 				break;
 267:src/sim900_800.c **** 			case 2:
 268:src/sim900_800.c **** 				if(GSM_STATUS)
 269:src/sim900_800.c **** 				{
ARM GAS  /tmp/cc4fp2Bh.s 			page 13


 270:src/sim900_800.c **** 					//Encendio.
 271:src/sim900_800.c **** 					LED_NETLIGHT_ON;
 272:src/sim900_800.c **** 					GSMStartState++;
 273:src/sim900_800.c **** 					GSMStartTime = 30;
 274:src/sim900_800.c **** 				}
 275:src/sim900_800.c **** 				if(GSMStartTime == 0)
 276:src/sim900_800.c **** 				{
 277:src/sim900_800.c **** 					//Se agoto el tiempo de espera.
 278:src/sim900_800.c **** 					GSMStartState = 0;
 279:src/sim900_800.c **** 					return 4;
 280:src/sim900_800.c **** 				}
 281:src/sim900_800.c **** 				break;
 282:src/sim900_800.c **** 			case 3:
 283:src/sim900_800.c **** 				if(GSMStartTime == 0)
 284:src/sim900_800.c **** 				{
 285:src/sim900_800.c **** 					//1 segundo mas.
 286:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 287:src/sim900_800.c **** 					GSM_PWRKEY_ON;
 288:src/sim900_800.c **** 					GSMStartState = 0;
 289:src/sim900_800.c **** 					return 2;
 290:src/sim900_800.c **** 				}
 291:src/sim900_800.c **** 				break;
 292:src/sim900_800.c **** 		}
 293:src/sim900_800.c **** 	}
 294:src/sim900_800.c **** 	if (GSM_STATUS || (GSMStartState == 0))
 295:src/sim900_800.c **** 	{
 296:src/sim900_800.c **** 		return 2;
 297:src/sim900_800.c **** 	}
 298:src/sim900_800.c **** 	return 1;
 299:src/sim900_800.c **** }
 300:src/sim900_800.c **** */
 301:src/sim900_800.c **** 
 302:src/sim900_800.c **** //GSM_Start() contesta:
 303:src/sim900_800.c **** //0 trabajando
 304:src/sim900_800.c **** //1 terminado OK
 305:src/sim900_800.c **** //2 ERROR
 306:src/sim900_800.c **** //3 Timeout
 307:src/sim900_800.c **** unsigned char GSM_Start (void)
 308:src/sim900_800.c **** {
 392              		.loc 1 308 0
 393              		.cfi_startproc
 309:src/sim900_800.c **** 	switch(GSMStartState)
 394              		.loc 1 309 0
 395 0000 3C4B     		ldr	r3, .L23	@ tmp137,
 396 0002 1B78     		ldrb	r3, [r3]	@ D.7816, GSMStartState
 397 0004 012B     		cmp	r3, #1	@ D.7817,
 398 0006 1BD0     		beq	.L8	@,
 399 0008 02DC     		bgt	.L9	@,
 400 000a 002B     		cmp	r3, #0	@ D.7817,
 401 000c 05D0     		beq	.L10	@,
 402 000e 65E0     		b	.L7	@
 403              	.L9:
 404 0010 022B     		cmp	r3, #2	@ D.7817,
 405 0012 2FD0     		beq	.L11	@,
 406 0014 032B     		cmp	r3, #3	@ D.7817,
 407 0016 50D0     		beq	.L12	@,
 408 0018 60E0     		b	.L7	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 14


 409              	.L10:
 310:src/sim900_800.c **** 	{
 311:src/sim900_800.c **** 		case 0:
 312:src/sim900_800.c **** 			//Levanto PWRKEY
 313:src/sim900_800.c **** 			LED_NETLIGHT_ON;
 410              		.loc 1 313 0
 411 001a 9023     		movs	r3, #144	@ tmp192,
 412 001c DB05     		lsls	r3, r3, #23	@ D.7818, tmp192,
 413 001e 8022     		movs	r2, #128	@ tmp193,
 414 0020 5201     		lsls	r2, r2, #5	@ tmp138, tmp193,
 415 0022 9A61     		str	r2, [r3, #24]	@ tmp138, _31->BSRR
 314:src/sim900_800.c **** 			GSMStartTime = 100;
 416              		.loc 1 314 0
 417 0024 344B     		ldr	r3, .L23+4	@ tmp139,
 418 0026 6422     		movs	r2, #100	@ tmp140,
 419 0028 1A80     		strh	r2, [r3]	@ tmp141, GSMStartTime
 315:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 420              		.loc 1 315 0
 421 002a 9023     		movs	r3, #144	@ tmp194,
 422 002c DB05     		lsls	r3, r3, #23	@ D.7818, tmp194,
 423 002e 8022     		movs	r2, #128	@ tmp142,
 424 0030 9A61     		str	r2, [r3, #24]	@ tmp142, _34->BSRR
 316:src/sim900_800.c **** 			GSMStartState++;
 425              		.loc 1 316 0
 426 0032 304B     		ldr	r3, .L23	@ tmp143,
 427 0034 1B78     		ldrb	r3, [r3]	@ D.7816, GSMStartState
 428 0036 0133     		adds	r3, r3, #1	@ tmp144,
 429 0038 DAB2     		uxtb	r2, r3	@ D.7816, tmp144
 430 003a 2E4B     		ldr	r3, .L23	@ tmp145,
 431 003c 1A70     		strb	r2, [r3]	@ tmp146, GSMStartState
 317:src/sim900_800.c **** 			break;
 432              		.loc 1 317 0
 433 003e 56E0     		b	.L13	@
 434              	.L8:
 318:src/sim900_800.c **** 
 319:src/sim900_800.c **** 		case 1:
 320:src/sim900_800.c **** 			//Bajo PWRKEY
 321:src/sim900_800.c **** 			if(GSMStartTime == 0) //Espera 100 mseg
 435              		.loc 1 321 0
 436 0040 2D4B     		ldr	r3, .L23+4	@ tmp147,
 437 0042 1B88     		ldrh	r3, [r3]	@ tmp148, GSMStartTime
 438 0044 9BB2     		uxth	r3, r3	@ D.7819, tmp148
 439 0046 002B     		cmp	r3, #0	@ D.7819,
 440 0048 4CD1     		bne	.L20	@,
 322:src/sim900_800.c **** 			{
 323:src/sim900_800.c **** 				LED_NETLIGHT_OFF;
 441              		.loc 1 323 0
 442 004a 9023     		movs	r3, #144	@ tmp187,
 443 004c DB05     		lsls	r3, r3, #23	@ D.7818, tmp187,
 444 004e 8022     		movs	r2, #128	@ tmp188,
 445 0050 5205     		lsls	r2, r2, #21	@ tmp149, tmp188,
 446 0052 9A61     		str	r2, [r3, #24]	@ tmp149, _41->BSRR
 324:src/sim900_800.c **** 				GSM_PWRKEY_OFF;
 447              		.loc 1 324 0
 448 0054 9023     		movs	r3, #144	@ tmp189,
 449 0056 DB05     		lsls	r3, r3, #23	@ D.7818, tmp189,
 450 0058 8022     		movs	r2, #128	@ tmp190,
ARM GAS  /tmp/cc4fp2Bh.s 			page 15


 451 005a 1204     		lsls	r2, r2, #16	@ tmp150, tmp190,
 452 005c 9A61     		str	r2, [r3, #24]	@ tmp150, _43->BSRR
 325:src/sim900_800.c **** 				GSMStartTime = 4000; //hasta 4 segundos.
 453              		.loc 1 325 0
 454 005e 264B     		ldr	r3, .L23+4	@ tmp151,
 455 0060 FA22     		movs	r2, #250	@ tmp191,
 456 0062 1201     		lsls	r2, r2, #4	@ tmp152, tmp191,
 457 0064 1A80     		strh	r2, [r3]	@ tmp153, GSMStartTime
 326:src/sim900_800.c **** 				GSMStartState++;
 458              		.loc 1 326 0
 459 0066 234B     		ldr	r3, .L23	@ tmp154,
 460 0068 1B78     		ldrb	r3, [r3]	@ D.7816, GSMStartState
 461 006a 0133     		adds	r3, r3, #1	@ tmp155,
 462 006c DAB2     		uxtb	r2, r3	@ D.7816, tmp155
 463 006e 214B     		ldr	r3, .L23	@ tmp156,
 464 0070 1A70     		strb	r2, [r3]	@ tmp157, GSMStartState
 327:src/sim900_800.c **** 			}
 328:src/sim900_800.c **** 			break;
 465              		.loc 1 328 0
 466 0072 37E0     		b	.L20	@
 467              	.L11:
 329:src/sim900_800.c **** 
 330:src/sim900_800.c **** 		case 2:
 331:src/sim900_800.c **** 			//Levanto PWRKEY
 332:src/sim900_800.c **** 			if (GSM_STATUS)
 468              		.loc 1 332 0
 469 0074 9023     		movs	r3, #144	@ tmp186,
 470 0076 DB05     		lsls	r3, r3, #23	@ D.7818, tmp186,
 471 0078 1B8A     		ldrh	r3, [r3, #16]	@ tmp159,
 472 007a 9BB2     		uxth	r3, r3	@ D.7819, tmp159
 473 007c 1A00     		movs	r2, r3	@ D.7817, D.7819
 474 007e 2023     		movs	r3, #32	@ tmp160,
 475 0080 1340     		ands	r3, r2	@ D.7817, D.7817
 476 0082 13D0     		beq	.L15	@,
 333:src/sim900_800.c **** 			{
 334:src/sim900_800.c **** 				GSMStartTime = 1000;
 477              		.loc 1 334 0
 478 0084 1C4B     		ldr	r3, .L23+4	@ tmp161,
 479 0086 FA22     		movs	r2, #250	@ tmp182,
 480 0088 9200     		lsls	r2, r2, #2	@ tmp162, tmp182,
 481 008a 1A80     		strh	r2, [r3]	@ tmp163, GSMStartTime
 335:src/sim900_800.c **** 				GSMStartState++;
 482              		.loc 1 335 0
 483 008c 194B     		ldr	r3, .L23	@ tmp164,
 484 008e 1B78     		ldrb	r3, [r3]	@ D.7816, GSMStartState
 485 0090 0133     		adds	r3, r3, #1	@ tmp165,
 486 0092 DAB2     		uxtb	r2, r3	@ D.7816, tmp165
 487 0094 174B     		ldr	r3, .L23	@ tmp166,
 488 0096 1A70     		strb	r2, [r3]	@ tmp167, GSMStartState
 336:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 489              		.loc 1 336 0
 490 0098 9023     		movs	r3, #144	@ tmp183,
 491 009a DB05     		lsls	r3, r3, #23	@ D.7818, tmp183,
 492 009c 8022     		movs	r2, #128	@ tmp184,
 493 009e 5201     		lsls	r2, r2, #5	@ tmp168, tmp184,
 494 00a0 9A61     		str	r2, [r3, #24]	@ tmp168, _20->BSRR
 337:src/sim900_800.c **** 				GSM_PWRKEY_ON;
ARM GAS  /tmp/cc4fp2Bh.s 			page 16


 495              		.loc 1 337 0
 496 00a2 9023     		movs	r3, #144	@ tmp185,
 497 00a4 DB05     		lsls	r3, r3, #23	@ D.7818, tmp185,
 498 00a6 8022     		movs	r2, #128	@ tmp169,
 499 00a8 9A61     		str	r2, [r3, #24]	@ tmp169, _22->BSRR
 338:src/sim900_800.c **** 			}
 339:src/sim900_800.c **** 			else if(GSMStartTime == 0) //Espera hasta 4 segs
 340:src/sim900_800.c **** 			{
 341:src/sim900_800.c **** 				return 3;		//TimeOut
 342:src/sim900_800.c **** 			}
 343:src/sim900_800.c **** 			break;
 500              		.loc 1 343 0
 501 00aa 1DE0     		b	.L21	@
 502              	.L15:
 339:src/sim900_800.c **** 			{
 503              		.loc 1 339 0
 504 00ac 124B     		ldr	r3, .L23+4	@ tmp170,
 505 00ae 1B88     		ldrh	r3, [r3]	@ tmp171, GSMStartTime
 506 00b0 9BB2     		uxth	r3, r3	@ D.7819, tmp171
 507 00b2 002B     		cmp	r3, #0	@ D.7819,
 508 00b4 18D1     		bne	.L21	@,
 341:src/sim900_800.c **** 			}
 509              		.loc 1 341 0
 510 00b6 0323     		movs	r3, #3	@ D.7816,
 511 00b8 1AE0     		b	.L17	@
 512              	.L12:
 344:src/sim900_800.c **** 
 345:src/sim900_800.c **** 		case 3:
 346:src/sim900_800.c **** 			if(GSMStartTime == 0)	//Espero 1 segundo mas y reviso GSM_STATUS
 513              		.loc 1 346 0
 514 00ba 0F4B     		ldr	r3, .L23+4	@ tmp172,
 515 00bc 1B88     		ldrh	r3, [r3]	@ tmp173, GSMStartTime
 516 00be 9BB2     		uxth	r3, r3	@ D.7819, tmp173
 517 00c0 002B     		cmp	r3, #0	@ D.7819,
 518 00c2 13D1     		bne	.L22	@,
 347:src/sim900_800.c **** 			{
 348:src/sim900_800.c **** 				if (GSM_STATUS)
 519              		.loc 1 348 0
 520 00c4 9023     		movs	r3, #144	@ tmp181,
 521 00c6 DB05     		lsls	r3, r3, #23	@ D.7818, tmp181,
 522 00c8 1B8A     		ldrh	r3, [r3, #16]	@ tmp175,
 523 00ca 9BB2     		uxth	r3, r3	@ D.7819, tmp175
 524 00cc 1A00     		movs	r2, r3	@ D.7817, D.7819
 525 00ce 2023     		movs	r3, #32	@ tmp176,
 526 00d0 1340     		ands	r3, r2	@ D.7817, D.7817
 527 00d2 01D0     		beq	.L19	@,
 349:src/sim900_800.c **** 					return 1;		//OK
 528              		.loc 1 349 0
 529 00d4 0123     		movs	r3, #1	@ D.7816,
 530 00d6 0BE0     		b	.L17	@
 531              	.L19:
 350:src/sim900_800.c **** 				else
 351:src/sim900_800.c **** 					return 2;		//Error
 532              		.loc 1 351 0
 533 00d8 0223     		movs	r3, #2	@ D.7816,
 534 00da 09E0     		b	.L17	@
 535              	.L7:
ARM GAS  /tmp/cc4fp2Bh.s 			page 17


 352:src/sim900_800.c **** 			}
 353:src/sim900_800.c **** 			break;
 354:src/sim900_800.c **** 
 355:src/sim900_800.c **** 		default:
 356:src/sim900_800.c **** 			GSMStartState = 0;
 536              		.loc 1 356 0
 537 00dc 054B     		ldr	r3, .L23	@ tmp177,
 538 00de 0022     		movs	r2, #0	@ tmp178,
 539 00e0 1A70     		strb	r2, [r3]	@ tmp179, GSMStartState
 357:src/sim900_800.c **** 			break;
 540              		.loc 1 357 0
 541 00e2 04E0     		b	.L13	@
 542              	.L20:
 328:src/sim900_800.c **** 
 543              		.loc 1 328 0
 544 00e4 C046     		nop
 545 00e6 02E0     		b	.L13	@
 546              	.L21:
 343:src/sim900_800.c **** 
 547              		.loc 1 343 0
 548 00e8 C046     		nop
 549 00ea 00E0     		b	.L13	@
 550              	.L22:
 353:src/sim900_800.c **** 
 551              		.loc 1 353 0
 552 00ec C046     		nop
 553              	.L13:
 358:src/sim900_800.c **** 	}
 359:src/sim900_800.c **** 	return 0;						//trabajando
 554              		.loc 1 359 0
 555 00ee 0023     		movs	r3, #0	@ D.7816,
 556              	.L17:
 360:src/sim900_800.c **** }
 557              		.loc 1 360 0
 558 00f0 1800     		movs	r0, r3	@, <retval>
 559              		@ sp needed	@
 560 00f2 7047     		bx	lr
 561              	.L24:
 562              		.align	2
 563              	.L23:
 564 00f4 00000000 		.word	GSMStartState
 565 00f8 00000000 		.word	GSMStartTime
 566              		.cfi_endproc
 567              	.LFE21:
 568              		.size	GSM_Start, .-GSM_Start
 569              		.section	.text.GSM_Start_Stop_ResetSM,"ax",%progbits
 570              		.align	2
 571              		.global	GSM_Start_Stop_ResetSM
 572              		.code	16
 573              		.thumb_func
 574              		.type	GSM_Start_Stop_ResetSM, %function
 575              	GSM_Start_Stop_ResetSM:
 576              	.LFB22:
 361:src/sim900_800.c **** 
 362:src/sim900_800.c **** void GSM_Start_Stop_ResetSM (void)
 363:src/sim900_800.c **** {
 577              		.loc 1 363 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 18


 578              		.cfi_startproc
 364:src/sim900_800.c **** 	GSMStartState = 0;
 579              		.loc 1 364 0
 580 0000 024B     		ldr	r3, .L26	@ tmp110,
 581 0002 0022     		movs	r2, #0	@ tmp111,
 582 0004 1A70     		strb	r2, [r3]	@ tmp112, GSMStartState
 365:src/sim900_800.c **** }
 583              		.loc 1 365 0
 584 0006 C046     		nop
 585              		@ sp needed	@
 586 0008 7047     		bx	lr
 587              	.L27:
 588 000a C046     		.align	2
 589              	.L26:
 590 000c 00000000 		.word	GSMStartState
 591              		.cfi_endproc
 592              	.LFE22:
 593              		.size	GSM_Start_Stop_ResetSM, .-GSM_Start_Stop_ResetSM
 594              		.section	.text.GSM_Stop,"ax",%progbits
 595              		.align	2
 596              		.global	GSM_Stop
 597              		.code	16
 598              		.thumb_func
 599              		.type	GSM_Stop, %function
 600              	GSM_Stop:
 601              	.LFB23:
 366:src/sim900_800.c **** 
 367:src/sim900_800.c **** //GSM_Stop() contesta:
 368:src/sim900_800.c **** //0 trabajando
 369:src/sim900_800.c **** //1 terminado OK
 370:src/sim900_800.c **** //2 ERROR
 371:src/sim900_800.c **** //3 Timeout
 372:src/sim900_800.c **** unsigned char GSM_Stop(void)
 373:src/sim900_800.c **** {
 602              		.loc 1 373 0
 603              		.cfi_startproc
 604 0000 82B0     		sub	sp, sp, #8	@,,
 605              	.LCFI1:
 606              		.cfi_def_cfa_offset 8
 374:src/sim900_800.c **** 	unsigned char resp = 0;
 607              		.loc 1 374 0
 608 0002 6B46     		mov	r3, sp	@ tmp173,
 609 0004 0733     		adds	r3, r3, #7	@ tmp127,
 610 0006 0022     		movs	r2, #0	@ tmp128,
 611 0008 1A70     		strb	r2, [r3]	@ tmp129, resp
 375:src/sim900_800.c **** 
 376:src/sim900_800.c **** 	switch(GSMStartState)
 612              		.loc 1 376 0
 613 000a 294B     		ldr	r3, .L39	@ tmp130,
 614 000c 1B78     		ldrb	r3, [r3]	@ D.7821, GSMStartState
 615 000e 012B     		cmp	r3, #1	@ D.7822,
 616 0010 16D0     		beq	.L30	@,
 617 0012 022B     		cmp	r3, #2	@ D.7822,
 618 0014 2CD0     		beq	.L31	@,
 619 0016 002B     		cmp	r3, #0	@ D.7822,
 620 0018 3BD1     		bne	.L29	@,
 377:src/sim900_800.c **** 	{
ARM GAS  /tmp/cc4fp2Bh.s 			page 19


 378:src/sim900_800.c **** 		case 0:
 379:src/sim900_800.c **** 			//Levanto PWRKEY
 380:src/sim900_800.c **** 			GSM_PWRKEY_OFF;
 621              		.loc 1 380 0
 622 001a 9023     		movs	r3, #144	@ tmp170,
 623 001c DB05     		lsls	r3, r3, #23	@ D.7823, tmp170,
 624 001e 8022     		movs	r2, #128	@ tmp171,
 625 0020 1204     		lsls	r2, r2, #16	@ tmp131, tmp171,
 626 0022 9A61     		str	r2, [r3, #24]	@ tmp131, _11->BSRR
 381:src/sim900_800.c **** 			GSMStartTime = 250;	//espero 250ms
 627              		.loc 1 381 0
 628 0024 234B     		ldr	r3, .L39+4	@ tmp132,
 629 0026 FA22     		movs	r2, #250	@ tmp133,
 630 0028 1A80     		strh	r2, [r3]	@ tmp134, GSMStartTime
 382:src/sim900_800.c **** 			GSMGeneralTimeOut = 4000;	//timeout de 4 segs
 631              		.loc 1 382 0
 632 002a 234B     		ldr	r3, .L39+8	@ tmp135,
 633 002c FA22     		movs	r2, #250	@ tmp172,
 634 002e 1201     		lsls	r2, r2, #4	@ tmp136, tmp172,
 635 0030 1A80     		strh	r2, [r3]	@ tmp137, GSMGeneralTimeOut
 383:src/sim900_800.c **** 			GSMStartState++;
 636              		.loc 1 383 0
 637 0032 1F4B     		ldr	r3, .L39	@ tmp138,
 638 0034 1B78     		ldrb	r3, [r3]	@ D.7821, GSMStartState
 639 0036 0133     		adds	r3, r3, #1	@ tmp139,
 640 0038 DAB2     		uxtb	r2, r3	@ D.7821, tmp139
 641 003a 1D4B     		ldr	r3, .L39	@ tmp140,
 642 003c 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 384:src/sim900_800.c **** 			break;
 643              		.loc 1 384 0
 644 003e 28E0     		b	.L29	@
 645              	.L30:
 385:src/sim900_800.c **** 
 386:src/sim900_800.c **** 		case 1:
 387:src/sim900_800.c **** 			if ((!GSMStartTime) && (!GSM_STATUS))
 646              		.loc 1 387 0
 647 0040 1C4B     		ldr	r3, .L39+4	@ tmp142,
 648 0042 1B88     		ldrh	r3, [r3]	@ tmp143, GSMStartTime
 649 0044 9BB2     		uxth	r3, r3	@ D.7824, tmp143
 650 0046 002B     		cmp	r3, #0	@ D.7824,
 651 0048 20D1     		bne	.L37	@,
 652              		.loc 1 387 0 is_stmt 0 discriminator 1
 653 004a 9023     		movs	r3, #144	@ tmp169,
 654 004c DB05     		lsls	r3, r3, #23	@ D.7823, tmp169,
 655 004e 1B8A     		ldrh	r3, [r3, #16]	@ tmp145,
 656 0050 9BB2     		uxth	r3, r3	@ D.7824, tmp145
 657 0052 1A00     		movs	r2, r3	@ D.7822, D.7824
 658 0054 2023     		movs	r3, #32	@ tmp146,
 659 0056 1340     		ands	r3, r2	@ D.7822, D.7822
 660 0058 18D1     		bne	.L37	@,
 388:src/sim900_800.c **** 			{
 389:src/sim900_800.c **** 				GSMStartTime = 1000;	//espero 1seg
 661              		.loc 1 389 0 is_stmt 1
 662 005a 164B     		ldr	r3, .L39+4	@ tmp147,
 663 005c FA22     		movs	r2, #250	@ tmp168,
 664 005e 9200     		lsls	r2, r2, #2	@ tmp148, tmp168,
 665 0060 1A80     		strh	r2, [r3]	@ tmp149, GSMStartTime
ARM GAS  /tmp/cc4fp2Bh.s 			page 20


 390:src/sim900_800.c **** 				GSMStartState++;
 666              		.loc 1 390 0
 667 0062 134B     		ldr	r3, .L39	@ tmp150,
 668 0064 1B78     		ldrb	r3, [r3]	@ D.7821, GSMStartState
 669 0066 0133     		adds	r3, r3, #1	@ tmp151,
 670 0068 DAB2     		uxtb	r2, r3	@ D.7821, tmp151
 671 006a 114B     		ldr	r3, .L39	@ tmp152,
 672 006c 1A70     		strb	r2, [r3]	@ tmp153, GSMStartState
 391:src/sim900_800.c **** 			}
 392:src/sim900_800.c **** 			break;
 673              		.loc 1 392 0
 674 006e 0DE0     		b	.L37	@
 675              	.L31:
 393:src/sim900_800.c **** 
 394:src/sim900_800.c **** 		case 2:
 395:src/sim900_800.c **** 			if (!GSMStartTime)
 676              		.loc 1 395 0
 677 0070 104B     		ldr	r3, .L39+4	@ tmp154,
 678 0072 1B88     		ldrh	r3, [r3]	@ tmp155, GSMStartTime
 679 0074 9BB2     		uxth	r3, r3	@ D.7824, tmp155
 680 0076 002B     		cmp	r3, #0	@ D.7824,
 681 0078 0AD1     		bne	.L38	@,
 396:src/sim900_800.c **** 			{
 397:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 682              		.loc 1 397 0
 683 007a 9023     		movs	r3, #144	@ tmp167,
 684 007c DB05     		lsls	r3, r3, #23	@ D.7823, tmp167,
 685 007e 8022     		movs	r2, #128	@ tmp156,
 686 0080 9A61     		str	r2, [r3, #24]	@ tmp156, _30->BSRR
 398:src/sim900_800.c **** 				resp = 1;
 687              		.loc 1 398 0
 688 0082 6B46     		mov	r3, sp	@ tmp174,
 689 0084 0733     		adds	r3, r3, #7	@ tmp157,
 690 0086 0122     		movs	r2, #1	@ tmp158,
 691 0088 1A70     		strb	r2, [r3]	@ tmp159, resp
 399:src/sim900_800.c **** 			}
 400:src/sim900_800.c **** 			break;
 692              		.loc 1 400 0
 693 008a 01E0     		b	.L38	@
 694              	.L37:
 392:src/sim900_800.c **** 
 695              		.loc 1 392 0
 696 008c C046     		nop
 697 008e 00E0     		b	.L29	@
 698              	.L38:
 699              		.loc 1 400 0
 700 0090 C046     		nop
 701              	.L29:
 401:src/sim900_800.c **** 	}
 402:src/sim900_800.c **** 
 403:src/sim900_800.c **** 	if (!GSMGeneralTimeOut)
 702              		.loc 1 403 0
 703 0092 094B     		ldr	r3, .L39+8	@ tmp160,
 704 0094 1B88     		ldrh	r3, [r3]	@ tmp161, GSMGeneralTimeOut
 705 0096 9BB2     		uxth	r3, r3	@ D.7824, tmp161
 706 0098 002B     		cmp	r3, #0	@ D.7824,
 707 009a 03D1     		bne	.L35	@,
ARM GAS  /tmp/cc4fp2Bh.s 			page 21


 404:src/sim900_800.c **** 		resp = 3;				//timeout
 708              		.loc 1 404 0
 709 009c 6B46     		mov	r3, sp	@ tmp175,
 710 009e 0733     		adds	r3, r3, #7	@ tmp162,
 711 00a0 0322     		movs	r2, #3	@ tmp163,
 712 00a2 1A70     		strb	r2, [r3]	@ tmp164, resp
 713              	.L35:
 405:src/sim900_800.c **** 
 406:src/sim900_800.c **** 	return resp;
 714              		.loc 1 406 0
 715 00a4 6B46     		mov	r3, sp	@ tmp176,
 716 00a6 0733     		adds	r3, r3, #7	@ tmp165,
 717 00a8 1B78     		ldrb	r3, [r3]	@ D.7821, resp
 407:src/sim900_800.c **** }
 718              		.loc 1 407 0
 719 00aa 1800     		movs	r0, r3	@, <retval>
 720 00ac 02B0     		add	sp, sp, #8	@,,
 721              		@ sp needed	@
 722 00ae 7047     		bx	lr
 723              	.L40:
 724              		.align	2
 725              	.L39:
 726 00b0 00000000 		.word	GSMStartState
 727 00b4 00000000 		.word	GSMStartTime
 728 00b8 00000000 		.word	GSMGeneralTimeOut
 729              		.cfi_endproc
 730              	.LFE23:
 731              		.size	GSM_Stop, .-GSM_Stop
 732              		.section	.text.GSM_Delay,"ax",%progbits
 733              		.align	2
 734              		.global	GSM_Delay
 735              		.code	16
 736              		.thumb_func
 737              		.type	GSM_Delay, %function
 738              	GSM_Delay:
 739              	.LFB24:
 408:src/sim900_800.c **** 
 409:src/sim900_800.c **** //TODO: OJO utiliza GSMStartState
 410:src/sim900_800.c **** //in: delay en ms
 411:src/sim900_800.c **** //out: 0 working; 1 finish
 412:src/sim900_800.c **** unsigned char GSM_Delay (unsigned short tim)
 413:src/sim900_800.c **** {
 740              		.loc 1 413 0
 741              		.cfi_startproc
 742 0000 84B0     		sub	sp, sp, #16	@,,
 743              	.LCFI2:
 744              		.cfi_def_cfa_offset 16
 745 0002 0200     		movs	r2, r0	@ tmp117, tim
 746 0004 6B46     		mov	r3, sp	@ tmp144,
 747 0006 0633     		adds	r3, r3, #6	@ tmp118,
 748 0008 1A80     		strh	r2, [r3]	@ tmp119, tim
 414:src/sim900_800.c **** 	unsigned char resp = 0;
 749              		.loc 1 414 0
 750 000a 0F23     		movs	r3, #15	@ tmp120,
 751 000c 6B44     		add	r3, r3, sp	@ tmp120,
 752 000e 0022     		movs	r2, #0	@ tmp121,
 753 0010 1A70     		strb	r2, [r3]	@ tmp122, resp
ARM GAS  /tmp/cc4fp2Bh.s 			page 22


 415:src/sim900_800.c **** 
 416:src/sim900_800.c **** 	switch(GSMStartState)
 754              		.loc 1 416 0
 755 0012 154B     		ldr	r3, .L50	@ tmp123,
 756 0014 1B78     		ldrb	r3, [r3]	@ D.7825, GSMStartState
 757 0016 002B     		cmp	r3, #0	@ D.7826,
 758 0018 02D0     		beq	.L43	@,
 759 001a 012B     		cmp	r3, #1	@ D.7826,
 760 001c 0CD0     		beq	.L44	@,
 761 001e 18E0     		b	.L48	@
 762              	.L43:
 417:src/sim900_800.c **** 	{
 418:src/sim900_800.c **** 		case 0:
 419:src/sim900_800.c **** 			GSMGeneralTimeOut = tim;
 763              		.loc 1 419 0
 764 0020 124B     		ldr	r3, .L50+4	@ tmp124,
 765 0022 6A46     		mov	r2, sp	@ tmp146,
 766 0024 0632     		adds	r2, r2, #6	@ tmp125,
 767 0026 1288     		ldrh	r2, [r2]	@ tmp126, tim
 768 0028 1A80     		strh	r2, [r3]	@ tmp126, GSMGeneralTimeOut
 420:src/sim900_800.c **** 			GSMStartState++;
 769              		.loc 1 420 0
 770 002a 0F4B     		ldr	r3, .L50	@ tmp127,
 771 002c 1B78     		ldrb	r3, [r3]	@ D.7825, GSMStartState
 772 002e 0133     		adds	r3, r3, #1	@ tmp128,
 773 0030 DAB2     		uxtb	r2, r3	@ D.7825, tmp128
 774 0032 0D4B     		ldr	r3, .L50	@ tmp129,
 775 0034 1A70     		strb	r2, [r3]	@ tmp130, GSMStartState
 421:src/sim900_800.c **** 			break;
 776              		.loc 1 421 0
 777 0036 11E0     		b	.L45	@
 778              	.L44:
 422:src/sim900_800.c **** 
 423:src/sim900_800.c **** 		case 1:
 424:src/sim900_800.c **** 			if (!GSMGeneralTimeOut)
 779              		.loc 1 424 0
 780 0038 0C4B     		ldr	r3, .L50+4	@ tmp131,
 781 003a 1B88     		ldrh	r3, [r3]	@ tmp132, GSMGeneralTimeOut
 782 003c 9BB2     		uxth	r3, r3	@ D.7827, tmp132
 783 003e 002B     		cmp	r3, #0	@ D.7827,
 784 0040 0BD1     		bne	.L49	@,
 425:src/sim900_800.c **** 			{
 426:src/sim900_800.c **** 				GSMStartState = 0;
 785              		.loc 1 426 0
 786 0042 094B     		ldr	r3, .L50	@ tmp133,
 787 0044 0022     		movs	r2, #0	@ tmp134,
 788 0046 1A70     		strb	r2, [r3]	@ tmp135, GSMStartState
 427:src/sim900_800.c **** 				resp = 1;
 789              		.loc 1 427 0
 790 0048 0F23     		movs	r3, #15	@ tmp136,
 791 004a 6B44     		add	r3, r3, sp	@ tmp136,
 792 004c 0122     		movs	r2, #1	@ tmp137,
 793 004e 1A70     		strb	r2, [r3]	@ tmp138, resp
 428:src/sim900_800.c **** 			}
 429:src/sim900_800.c **** 			break;
 794              		.loc 1 429 0
 795 0050 03E0     		b	.L49	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 23


 796              	.L48:
 430:src/sim900_800.c **** 
 431:src/sim900_800.c **** 		default:
 432:src/sim900_800.c **** 			GSMStartState = 0;
 797              		.loc 1 432 0
 798 0052 054B     		ldr	r3, .L50	@ tmp139,
 799 0054 0022     		movs	r2, #0	@ tmp140,
 800 0056 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 433:src/sim900_800.c **** 			break;
 801              		.loc 1 433 0
 802 0058 00E0     		b	.L45	@
 803              	.L49:
 429:src/sim900_800.c **** 
 804              		.loc 1 429 0
 805 005a C046     		nop
 806              	.L45:
 434:src/sim900_800.c **** 	}
 435:src/sim900_800.c **** 	return resp;
 807              		.loc 1 435 0
 808 005c 0F23     		movs	r3, #15	@ tmp142,
 809 005e 6B44     		add	r3, r3, sp	@ tmp142,
 810 0060 1B78     		ldrb	r3, [r3]	@ D.7825, resp
 436:src/sim900_800.c **** }
 811              		.loc 1 436 0
 812 0062 1800     		movs	r0, r3	@, <retval>
 813 0064 04B0     		add	sp, sp, #16	@,,
 814              		@ sp needed	@
 815 0066 7047     		bx	lr
 816              	.L51:
 817              		.align	2
 818              	.L50:
 819 0068 00000000 		.word	GSMStartState
 820 006c 00000000 		.word	GSMGeneralTimeOut
 821              		.cfi_endproc
 822              	.LFE24:
 823              		.size	GSM_Delay, .-GSM_Delay
 824              		.section	.rodata
 825              		.align	2
 826              	.LC18:
 827 0000 41542B43 		.ascii	"AT+CSPN?\015\012\000"
 827      53504E3F 
 827      0D0A00
 828 000b 00       		.align	2
 829              	.LC20:
 830 000c 2B435350 		.ascii	"+CSPN\000"
 830      4E00
 831              		.section	.text.GSMPrestador,"ax",%progbits
 832              		.align	2
 833              		.global	GSMPrestador
 834              		.code	16
 835              		.thumb_func
 836              		.type	GSMPrestador, %function
 837              	GSMPrestador:
 838              	.LFB25:
 437:src/sim900_800.c **** 
 438:src/sim900_800.c **** //GSMPrestador(&PrestadorSim1, &PrestadorSim2, &CONFIGURACIONgprsAPN1[0], &CONFIGURACIONgprsUsuario
 439:src/sim900_800.c **** void GSMPrestador(unsigned char * pGSMHWstatus, unsigned char * prestadorSim1, unsigned char * pres
ARM GAS  /tmp/cc4fp2Bh.s 			page 24


 440:src/sim900_800.c **** {
 839              		.loc 1 440 0
 840              		.cfi_startproc
 841 0000 10B5     		push	{r4, lr}	@
 842              	.LCFI3:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 4, -8
 845              		.cfi_offset 14, -4
 846 0002 86B0     		sub	sp, sp, #24	@,,
 847              	.LCFI4:
 848              		.cfi_def_cfa_offset 32
 849 0004 0390     		str	r0, [sp, #12]	@ pGSMHWstatus, pGSMHWstatus
 850 0006 0291     		str	r1, [sp, #8]	@ prestadorSim1, prestadorSim1
 851 0008 0192     		str	r2, [sp, #4]	@ prestadorSim2, prestadorSim2
 852 000a 0093     		str	r3, [sp]	@ pCONFIGURACIONgprsAPN1, pCONFIGURACIONgprsAPN1
 441:src/sim900_800.c **** 	unsigned char i;
 442:src/sim900_800.c **** 
 443:src/sim900_800.c **** 	if (prestadorSimTime == 0)
 853              		.loc 1 443 0
 854 000c DA4B     		ldr	r3, .L94	@ tmp151,
 855 000e 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimTime
 856 0010 002B     		cmp	r3, #0	@ D.7828,
 857 0012 00D0     		beq	.LCB487	@
 858 0014 D5E1     		b	.L87	@long jump	@
 859              	.LCB487:
 444:src/sim900_800.c **** 	{
 445:src/sim900_800.c **** 		switch(prestadorSimSelect)
 860              		.loc 1 445 0
 861 0016 D94B     		ldr	r3, .L94+4	@ tmp152,
 862 0018 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 863 001a 012B     		cmp	r3, #1	@ D.7829,
 864 001c 13D0     		beq	.L55	@,
 865 001e 022B     		cmp	r3, #2	@ D.7829,
 866 0020 00D1     		bne	.LCB493	@
 867 0022 E8E0     		b	.L56	@long jump	@
 868              	.LCB493:
 869 0024 002B     		cmp	r3, #0	@ D.7829,
 870 0026 00D0     		beq	.LCB495	@
 871 0028 C4E1     		b	.L84	@long jump	@
 872              	.LCB495:
 446:src/sim900_800.c **** 		{
 447:src/sim900_800.c **** 			case 0:
 448:src/sim900_800.c **** 				if (*pGSMHWstatus & 0x01)
 873              		.loc 1 448 0
 874 002a 039B     		ldr	r3, [sp, #12]	@ tmp153, pGSMHWstatus
 875 002c 1B78     		ldrb	r3, [r3]	@ D.7828, *pGSMHWstatus_25(D)
 876 002e 1A00     		movs	r2, r3	@ D.7829, D.7828
 877 0030 0123     		movs	r3, #1	@ tmp154,
 878 0032 1340     		ands	r3, r2	@ D.7829, D.7829
 879 0034 00D1     		bne	.LCB502	@
 880 0036 C1E1     		b	.L88	@long jump	@
 881              	.LCB502:
 449:src/sim900_800.c **** 					prestadorSimSelect++;
 882              		.loc 1 449 0
 883 0038 D04B     		ldr	r3, .L94+4	@ tmp155,
 884 003a 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 885 003c 0133     		adds	r3, r3, #1	@ tmp156,
ARM GAS  /tmp/cc4fp2Bh.s 			page 25


 886 003e DAB2     		uxtb	r2, r3	@ D.7828, tmp156
 887 0040 CE4B     		ldr	r3, .L94+4	@ tmp157,
 888 0042 1A70     		strb	r2, [r3]	@ tmp158, prestadorSimSelect
 450:src/sim900_800.c **** 				break;
 889              		.loc 1 450 0
 890 0044 BAE1     		b	.L88	@
 891              	.L55:
 451:src/sim900_800.c **** 			case 1:
 452:src/sim900_800.c **** 				if (*prestadorSim1 == 0)
 892              		.loc 1 452 0
 893 0046 029B     		ldr	r3, [sp, #8]	@ tmp159, prestadorSim1
 894 0048 1B78     		ldrb	r3, [r3]	@ D.7828, *prestadorSim1_33(D)
 895 004a 002B     		cmp	r3, #0	@ D.7828,
 896 004c 00D0     		beq	.LCB516	@
 897 004e D2E0     		b	.L56	@long jump	@
 898              	.LCB516:
 453:src/sim900_800.c **** 				{
 454:src/sim900_800.c **** 					switch(prestadorSimState)
 899              		.loc 1 454 0
 900 0050 CB4B     		ldr	r3, .L94+8	@ tmp160,
 901 0052 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 902 0054 012B     		cmp	r3, #1	@ D.7829,
 903 0056 0BD0     		beq	.L60	@,
 904 0058 022B     		cmp	r3, #2	@ D.7829,
 905 005a 44D0     		beq	.L61	@,
 906 005c 002B     		cmp	r3, #0	@ D.7829,
 907 005e 00D0     		beq	.LCB524	@
 908 0060 C2E0     		b	.L85	@long jump	@
 909              	.LCB524:
 455:src/sim900_800.c **** 					{
 456:src/sim900_800.c **** 					case 0:
 457:src/sim900_800.c **** 						prestadorSimState++;
 910              		.loc 1 457 0
 911 0062 C74B     		ldr	r3, .L94+8	@ tmp161,
 912 0064 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 913 0066 0133     		adds	r3, r3, #1	@ tmp162,
 914 0068 DAB2     		uxtb	r2, r3	@ D.7828, tmp162
 915 006a C54B     		ldr	r3, .L94+8	@ tmp163,
 916 006c 1A70     		strb	r2, [r3]	@ tmp164, prestadorSimState
 458:src/sim900_800.c **** 						break;
 917              		.loc 1 458 0
 918 006e C2E0     		b	.L56	@
 919              	.L60:
 459:src/sim900_800.c **** 					case 1:
 460:src/sim900_800.c **** 
 461:src/sim900_800.c **** 						i = GSM_SetSIM (1);
 920              		.loc 1 461 0
 921 0070 1724     		movs	r4, #23	@ tmp165,
 922 0072 6C44     		add	r4, r4, sp	@ tmp165,
 923 0074 0120     		movs	r0, #1	@,
 924 0076 FFF7FEFF 		bl	GSM_SetSIM	@
 925 007a 0300     		movs	r3, r0	@ tmp166,
 926 007c 2370     		strb	r3, [r4]	@ tmp168, i
 462:src/sim900_800.c **** 						if (i == 2)
 927              		.loc 1 462 0
 928 007e 1723     		movs	r3, #23	@ tmp169,
 929 0080 6B44     		add	r3, r3, sp	@ tmp169,
ARM GAS  /tmp/cc4fp2Bh.s 			page 26


 930 0082 1B78     		ldrb	r3, [r3]	@ tmp170, i
 931 0084 022B     		cmp	r3, #2	@ tmp170,
 932 0086 05D1     		bne	.L63	@,
 463:src/sim900_800.c **** 							prestadorSimState++;
 933              		.loc 1 463 0
 934 0088 BD4B     		ldr	r3, .L94+8	@ tmp171,
 935 008a 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 936 008c 0133     		adds	r3, r3, #1	@ tmp172,
 937 008e DAB2     		uxtb	r2, r3	@ D.7828, tmp172
 938 0090 BB4B     		ldr	r3, .L94+8	@ tmp173,
 939 0092 1A70     		strb	r2, [r3]	@ tmp174, prestadorSimState
 940              	.L63:
 464:src/sim900_800.c **** 						if (i > 2)
 941              		.loc 1 464 0
 942 0094 1723     		movs	r3, #23	@ tmp175,
 943 0096 6B44     		add	r3, r3, sp	@ tmp175,
 944 0098 1B78     		ldrb	r3, [r3]	@ tmp176, i
 945 009a 022B     		cmp	r3, #2	@ tmp176,
 946 009c 08D9     		bls	.L64	@,
 465:src/sim900_800.c **** 						{
 466:src/sim900_800.c **** 							prestadorSimState = 0;
 947              		.loc 1 466 0
 948 009e B84B     		ldr	r3, .L94+8	@ tmp177,
 949 00a0 0022     		movs	r2, #0	@ tmp178,
 950 00a2 1A70     		strb	r2, [r3]	@ tmp179, prestadorSimState
 467:src/sim900_800.c **** 							//prestadorSimTime = 150;
 468:src/sim900_800.c **** 							prestadorSimSelect++;
 951              		.loc 1 468 0
 952 00a4 B54B     		ldr	r3, .L94+4	@ tmp180,
 953 00a6 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 954 00a8 0133     		adds	r3, r3, #1	@ tmp181,
 955 00aa DAB2     		uxtb	r2, r3	@ D.7828, tmp181
 956 00ac B34B     		ldr	r3, .L94+4	@ tmp182,
 957 00ae 1A70     		strb	r2, [r3]	@ tmp183, prestadorSimSelect
 958              	.L64:
 469:src/sim900_800.c **** 						}
 470:src/sim900_800.c **** 
 471:src/sim900_800.c **** 						if (i == 2)
 959              		.loc 1 471 0
 960 00b0 1723     		movs	r3, #23	@ tmp184,
 961 00b2 6B44     		add	r3, r3, sp	@ tmp184,
 962 00b4 1B78     		ldrb	r3, [r3]	@ tmp185, i
 963 00b6 022B     		cmp	r3, #2	@ tmp185,
 964 00b8 05D1     		bne	.L65	@,
 472:src/sim900_800.c **** 							prestadorSimState++;
 965              		.loc 1 472 0
 966 00ba B14B     		ldr	r3, .L94+8	@ tmp186,
 967 00bc 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 968 00be 0133     		adds	r3, r3, #1	@ tmp187,
 969 00c0 DAB2     		uxtb	r2, r3	@ D.7828, tmp187
 970 00c2 AF4B     		ldr	r3, .L94+8	@ tmp188,
 971 00c4 1A70     		strb	r2, [r3]	@ tmp189, prestadorSimState
 972              	.L65:
 473:src/sim900_800.c **** 						if (i > 2)
 973              		.loc 1 473 0
 974 00c6 1723     		movs	r3, #23	@ tmp190,
 975 00c8 6B44     		add	r3, r3, sp	@ tmp190,
ARM GAS  /tmp/cc4fp2Bh.s 			page 27


 976 00ca 1B78     		ldrb	r3, [r3]	@ tmp191, i
 977 00cc 022B     		cmp	r3, #2	@ tmp191,
 978 00ce 00D8     		bhi	.LCB587	@
 979 00d0 8EE0     		b	.L89	@long jump	@
 980              	.LCB587:
 474:src/sim900_800.c **** 						{
 475:src/sim900_800.c **** 							prestadorSimState = 0;
 981              		.loc 1 475 0
 982 00d2 AB4B     		ldr	r3, .L94+8	@ tmp192,
 983 00d4 0022     		movs	r2, #0	@ tmp193,
 984 00d6 1A70     		strb	r2, [r3]	@ tmp194, prestadorSimState
 476:src/sim900_800.c **** 							//prestadorSimTime = 150;
 477:src/sim900_800.c **** 							prestadorSimSelect++;
 985              		.loc 1 477 0
 986 00d8 A84B     		ldr	r3, .L94+4	@ tmp195,
 987 00da 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 988 00dc 0133     		adds	r3, r3, #1	@ tmp196,
 989 00de DAB2     		uxtb	r2, r3	@ D.7828, tmp196
 990 00e0 A64B     		ldr	r3, .L94+4	@ tmp197,
 991 00e2 1A70     		strb	r2, [r3]	@ tmp198, prestadorSimSelect
 478:src/sim900_800.c **** 						}
 479:src/sim900_800.c **** 
 480:src/sim900_800.c **** 						break;
 992              		.loc 1 480 0
 993 00e4 84E0     		b	.L89	@
 994              	.L61:
 481:src/sim900_800.c **** 					case 2:
 482:src/sim900_800.c **** 						i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 995              		.loc 1 482 0
 996 00e6 1724     		movs	r4, #23	@ tmp199,
 997 00e8 6C44     		add	r4, r4, sp	@ tmp199,
 998 00ea A64B     		ldr	r3, .L94+12	@ tmp200,
 999 00ec A648     		ldr	r0, .L94+16	@ tmp201,
 1000 00ee 0122     		movs	r2, #1	@,
 1001 00f0 0F21     		movs	r1, #15	@,
 1002 00f2 FFF7FEFF 		bl	GSMSendCommand	@
 1003 00f6 0300     		movs	r3, r0	@ tmp202,
 1004 00f8 2370     		strb	r3, [r4]	@ tmp204, i
 483:src/sim900_800.c **** 
 484:src/sim900_800.c **** 						if (i == 2)
 1005              		.loc 1 484 0
 1006 00fa 1723     		movs	r3, #23	@ tmp205,
 1007 00fc 6B44     		add	r3, r3, sp	@ tmp205,
 1008 00fe 1B78     		ldrb	r3, [r3]	@ tmp206, i
 1009 0100 022B     		cmp	r3, #2	@ tmp206,
 1010 0102 62D1     		bne	.L67	@,
 485:src/sim900_800.c **** 						{
 486:src/sim900_800.c **** 							if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") - 
 1011              		.loc 1 486 0
 1012 0104 A149     		ldr	r1, .L94+20	@ tmp207,
 1013 0106 9F4B     		ldr	r3, .L94+12	@ tmp208,
 1014 0108 0522     		movs	r2, #5	@,
 1015 010a 1800     		movs	r0, r3	@, tmp208
 1016 010c FFF7FEFF 		bl	strncmp	@
 1017 0110 031E     		subs	r3, r0, #0	@ D.7829,,
 1018 0112 54D1     		bne	.L68	@,
 487:src/sim900_800.c **** 							{
ARM GAS  /tmp/cc4fp2Bh.s 			page 28


 488:src/sim900_800.c **** 
 489:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProveed
 1019              		.loc 1 489 0
 1020 0114 0A99     		ldr	r1, [sp, #40]	@ tmp209, pCONFIGURACIONgprsProveedor1
 1021 0116 9E4B     		ldr	r3, .L94+24	@ tmp210,
 1022 0118 0322     		movs	r2, #3	@,
 1023 011a 1800     		movs	r0, r3	@, tmp210
 1024 011c FFF7FEFF 		bl	strncmp	@
 1025 0120 031E     		subs	r3, r0, #0	@ D.7829,,
 1026 0122 20D1     		bne	.L69	@,
 490:src/sim900_800.c **** 								{
 491:src/sim900_800.c **** 									*prestadorSim1 = 1;
 1027              		.loc 1 491 0
 1028 0124 029B     		ldr	r3, [sp, #8]	@ tmp211, prestadorSim1
 1029 0126 0122     		movs	r2, #1	@ tmp212,
 1030 0128 1A70     		strb	r2, [r3]	@ tmp213, *prestadorSim1_33(D)
 492:src/sim900_800.c **** 
 493:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN1);
 1031              		.loc 1 493 0
 1032 012a 009A     		ldr	r2, [sp]	@ tmp214, pCONFIGURACIONgprsAPN1
 1033 012c 994B     		ldr	r3, .L94+28	@ tmp215,
 1034 012e 1100     		movs	r1, r2	@, tmp214
 1035 0130 1800     		movs	r0, r3	@, tmp215
 1036 0132 FFF7FEFF 		bl	strcpy	@
 494:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1037              		.loc 1 494 0
 1038 0136 089A     		ldr	r2, [sp, #32]	@ tmp216, pCONFIGURACIONgprsUsuario1
 1039 0138 974B     		ldr	r3, .L94+32	@ tmp217,
 1040 013a 1100     		movs	r1, r2	@, tmp216
 1041 013c 1800     		movs	r0, r3	@, tmp217
 1042 013e FFF7FEFF 		bl	strcpy	@
 495:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave1);
 1043              		.loc 1 495 0
 1044 0142 099A     		ldr	r2, [sp, #36]	@ tmp218, pCONFIGURACIONgprsClave1
 1045 0144 954B     		ldr	r3, .L94+36	@ tmp219,
 1046 0146 1100     		movs	r1, r2	@, tmp218
 1047 0148 1800     		movs	r0, r3	@, tmp219
 1048 014a FFF7FEFF 		bl	strcpy	@
 496:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1049              		.loc 1 496 0
 1050 014e 0F9A     		ldr	r2, [sp, #60]	@ tmp220, pCONFIGURACIONIPREMOTE
 1051 0150 934B     		ldr	r3, .L94+40	@ tmp221,
 1052 0152 1100     		movs	r1, r2	@, tmp220
 1053 0154 1800     		movs	r0, r3	@, tmp221
 1054 0156 FFF7FEFF 		bl	strcpy	@
 497:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1055              		.loc 1 497 0
 1056 015a 109A     		ldr	r2, [sp, #64]	@ tmp222, pCONFIGURACIONPORTREMOTE
 1057 015c 914B     		ldr	r3, .L94+44	@ tmp223,
 1058 015e 1100     		movs	r1, r2	@, tmp222
 1059 0160 1800     		movs	r0, r3	@, tmp223
 1060 0162 FFF7FEFF 		bl	strcpy	@
 1061              	.L69:
 498:src/sim900_800.c **** 								}
 499:src/sim900_800.c **** 
 500:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) &pCONFIGURACIONgprsProvee
 1062              		.loc 1 500 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 29


 1063 0166 0E99     		ldr	r1, [sp, #56]	@ tmp224, pCONFIGURACIONgprsProveedor2
 1064 0168 894B     		ldr	r3, .L94+24	@ tmp225,
 1065 016a 0322     		movs	r2, #3	@,
 1066 016c 1800     		movs	r0, r3	@, tmp225
 1067 016e FFF7FEFF 		bl	strncmp	@
 1068 0172 031E     		subs	r3, r0, #0	@ D.7829,,
 1069 0174 20D1     		bne	.L70	@,
 501:src/sim900_800.c **** 								{
 502:src/sim900_800.c **** 									*prestadorSim1 = 2;
 1070              		.loc 1 502 0
 1071 0176 029B     		ldr	r3, [sp, #8]	@ tmp226, prestadorSim1
 1072 0178 0222     		movs	r2, #2	@ tmp227,
 1073 017a 1A70     		strb	r2, [r3]	@ tmp228, *prestadorSim1_33(D)
 503:src/sim900_800.c **** 
 504:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN2);
 1074              		.loc 1 504 0
 1075 017c 0B9A     		ldr	r2, [sp, #44]	@ tmp229, pCONFIGURACIONgprsAPN2
 1076 017e 854B     		ldr	r3, .L94+28	@ tmp230,
 1077 0180 1100     		movs	r1, r2	@, tmp229
 1078 0182 1800     		movs	r0, r3	@, tmp230
 1079 0184 FFF7FEFF 		bl	strcpy	@
 505:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1080              		.loc 1 505 0
 1081 0188 0C9A     		ldr	r2, [sp, #48]	@ tmp231, pCONFIGURACIONgprsUsuario2
 1082 018a 834B     		ldr	r3, .L94+32	@ tmp232,
 1083 018c 1100     		movs	r1, r2	@, tmp231
 1084 018e 1800     		movs	r0, r3	@, tmp232
 1085 0190 FFF7FEFF 		bl	strcpy	@
 506:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave2);
 1086              		.loc 1 506 0
 1087 0194 0D9A     		ldr	r2, [sp, #52]	@ tmp233, pCONFIGURACIONgprsClave2
 1088 0196 814B     		ldr	r3, .L94+36	@ tmp234,
 1089 0198 1100     		movs	r1, r2	@, tmp233
 1090 019a 1800     		movs	r0, r3	@, tmp234
 1091 019c FFF7FEFF 		bl	strcpy	@
 507:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1092              		.loc 1 507 0
 1093 01a0 0F9A     		ldr	r2, [sp, #60]	@ tmp235, pCONFIGURACIONIPREMOTE
 1094 01a2 7F4B     		ldr	r3, .L94+40	@ tmp236,
 1095 01a4 1100     		movs	r1, r2	@, tmp235
 1096 01a6 1800     		movs	r0, r3	@, tmp236
 1097 01a8 FFF7FEFF 		bl	strcpy	@
 508:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1098              		.loc 1 508 0
 1099 01ac 109A     		ldr	r2, [sp, #64]	@ tmp237, pCONFIGURACIONPORTREMOTE
 1100 01ae 7D4B     		ldr	r3, .L94+44	@ tmp238,
 1101 01b0 1100     		movs	r1, r2	@, tmp237
 1102 01b2 1800     		movs	r0, r3	@, tmp238
 1103 01b4 FFF7FEFF 		bl	strcpy	@
 1104              	.L70:
 509:src/sim900_800.c **** 								}
 510:src/sim900_800.c **** 
 511:src/sim900_800.c **** /*								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Per
 512:src/sim900_800.c **** 								{
 513:src/sim900_800.c **** 									*prestadorSim1 = 1;
 514:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Personal    ");
 515:src/sim900_800.c **** 								}
ARM GAS  /tmp/cc4fp2Bh.s 			page 30


 516:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movis
 517:src/sim900_800.c **** 								{
 518:src/sim900_800.c **** 									*prestadorSim1 = 2;
 519:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Movistar    ");
 520:src/sim900_800.c **** 								}
 521:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro") 
 522:src/sim900_800.c **** 								{
 523:src/sim900_800.c **** 									*prestadorSim1 = 3;
 524:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n      Claro     ");
 525:src/sim900_800.c **** 								}
 526:src/sim900_800.c **** */
 527:src/sim900_800.c **** 								prestadorSimState = 0;
 1105              		.loc 1 527 0
 1106 01b8 714B     		ldr	r3, .L94+8	@ tmp239,
 1107 01ba 0022     		movs	r2, #0	@ tmp240,
 1108 01bc 1A70     		strb	r2, [r3]	@ tmp241, prestadorSimState
 1109              	.L68:
 528:src/sim900_800.c **** 							}
 529:src/sim900_800.c **** 							//prestadorSimTime = 150;
 530:src/sim900_800.c **** 							prestadorSimSelect++;
 1110              		.loc 1 530 0
 1111 01be 6F4B     		ldr	r3, .L94+4	@ tmp242,
 1112 01c0 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 1113 01c2 0133     		adds	r3, r3, #1	@ tmp243,
 1114 01c4 DAB2     		uxtb	r2, r3	@ D.7828, tmp243
 1115 01c6 6D4B     		ldr	r3, .L94+4	@ tmp244,
 1116 01c8 1A70     		strb	r2, [r3]	@ tmp245, prestadorSimSelect
 1117              	.L67:
 531:src/sim900_800.c **** 						}
 532:src/sim900_800.c **** 						if (i > 2)
 1118              		.loc 1 532 0
 1119 01ca 1723     		movs	r3, #23	@ tmp246,
 1120 01cc 6B44     		add	r3, r3, sp	@ tmp246,
 1121 01ce 1B78     		ldrb	r3, [r3]	@ tmp247, i
 1122 01d0 022B     		cmp	r3, #2	@ tmp247,
 1123 01d2 0FD9     		bls	.L90	@,
 533:src/sim900_800.c **** 						{
 534:src/sim900_800.c **** 							prestadorSimState = 0;
 1124              		.loc 1 534 0
 1125 01d4 6A4B     		ldr	r3, .L94+8	@ tmp248,
 1126 01d6 0022     		movs	r2, #0	@ tmp249,
 1127 01d8 1A70     		strb	r2, [r3]	@ tmp250, prestadorSimState
 535:src/sim900_800.c **** 							//prestadorSimTime = 150;
 536:src/sim900_800.c **** 							prestadorSimSelect++;
 1128              		.loc 1 536 0
 1129 01da 684B     		ldr	r3, .L94+4	@ tmp251,
 1130 01dc 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimSelect
 1131 01de 0133     		adds	r3, r3, #1	@ tmp252,
 1132 01e0 DAB2     		uxtb	r2, r3	@ D.7828, tmp252
 1133 01e2 664B     		ldr	r3, .L94+4	@ tmp253,
 1134 01e4 1A70     		strb	r2, [r3]	@ tmp254, prestadorSimSelect
 537:src/sim900_800.c **** 
 538:src/sim900_800.c **** 						}
 539:src/sim900_800.c **** 						break;
 1135              		.loc 1 539 0
 1136 01e6 05E0     		b	.L90	@
 1137              	.L85:
ARM GAS  /tmp/cc4fp2Bh.s 			page 31


 540:src/sim900_800.c **** 
 541:src/sim900_800.c **** 					default:
 542:src/sim900_800.c **** 						prestadorSimState = 0;
 1138              		.loc 1 542 0
 1139 01e8 654B     		ldr	r3, .L94+8	@ tmp255,
 1140 01ea 0022     		movs	r2, #0	@ tmp256,
 1141 01ec 1A70     		strb	r2, [r3]	@ tmp257, prestadorSimState
 543:src/sim900_800.c **** 						break;
 1142              		.loc 1 543 0
 1143 01ee 02E0     		b	.L56	@
 1144              	.L89:
 480:src/sim900_800.c **** 					case 2:
 1145              		.loc 1 480 0
 1146 01f0 C046     		nop
 1147 01f2 00E0     		b	.L56	@
 1148              	.L90:
 539:src/sim900_800.c **** 
 1149              		.loc 1 539 0
 1150 01f4 C046     		nop
 1151              	.L56:
 544:src/sim900_800.c **** 					}
 545:src/sim900_800.c **** 				}
 546:src/sim900_800.c **** 			case 2:
 547:src/sim900_800.c **** 				if (*prestadorSim2 == 0)
 1152              		.loc 1 547 0
 1153 01f6 019B     		ldr	r3, [sp, #4]	@ tmp258, prestadorSim2
 1154 01f8 1B78     		ldrb	r3, [r3]	@ D.7828, *prestadorSim2_99(D)
 1155 01fa 002B     		cmp	r3, #0	@ D.7828,
 1156 01fc 00D0     		beq	.LCB748	@
 1157 01fe DFE0     		b	.L91	@long jump	@
 1158              	.LCB748:
 548:src/sim900_800.c **** 				{
 549:src/sim900_800.c **** 					switch(prestadorSimState)
 1159              		.loc 1 549 0
 1160 0200 5F4B     		ldr	r3, .L94+8	@ tmp259,
 1161 0202 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 1162 0204 012B     		cmp	r3, #1	@ D.7829,
 1163 0206 0BD0     		beq	.L74	@,
 1164 0208 022B     		cmp	r3, #2	@ D.7829,
 1165 020a 2BD0     		beq	.L75	@,
 1166 020c 002B     		cmp	r3, #0	@ D.7829,
 1167 020e 00D0     		beq	.LCB756	@
 1168 0210 A9E0     		b	.L86	@long jump	@
 1169              	.LCB756:
 550:src/sim900_800.c **** 					{
 551:src/sim900_800.c **** 						case 0:
 552:src/sim900_800.c **** 							if (*pGSMHWstatus & 0x02);
 553:src/sim900_800.c **** 								prestadorSimState++;
 1170              		.loc 1 553 0
 1171 0212 5B4B     		ldr	r3, .L94+8	@ tmp262,
 1172 0214 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 1173 0216 0133     		adds	r3, r3, #1	@ tmp263,
 1174 0218 DAB2     		uxtb	r2, r3	@ D.7828, tmp263
 1175 021a 594B     		ldr	r3, .L94+8	@ tmp264,
 1176 021c 1A70     		strb	r2, [r3]	@ tmp265, prestadorSimState
 554:src/sim900_800.c **** 							break;
 1177              		.loc 1 554 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 32


 1178 021e A9E0     		b	.L72	@
 1179              	.L74:
 555:src/sim900_800.c **** 						case 1:
 556:src/sim900_800.c **** 							i = GSM_SetSIM (2);
 1180              		.loc 1 556 0
 1181 0220 1724     		movs	r4, #23	@ tmp266,
 1182 0222 6C44     		add	r4, r4, sp	@ tmp266,
 1183 0224 0220     		movs	r0, #2	@,
 1184 0226 FFF7FEFF 		bl	GSM_SetSIM	@
 1185 022a 0300     		movs	r3, r0	@ tmp267,
 1186 022c 2370     		strb	r3, [r4]	@ tmp269, i
 557:src/sim900_800.c **** 
 558:src/sim900_800.c **** 							if (i == 2)
 1187              		.loc 1 558 0
 1188 022e 1723     		movs	r3, #23	@ tmp270,
 1189 0230 6B44     		add	r3, r3, sp	@ tmp270,
 1190 0232 1B78     		ldrb	r3, [r3]	@ tmp271, i
 1191 0234 022B     		cmp	r3, #2	@ tmp271,
 1192 0236 05D1     		bne	.L77	@,
 559:src/sim900_800.c **** 								prestadorSimState++;
 1193              		.loc 1 559 0
 1194 0238 514B     		ldr	r3, .L94+8	@ tmp272,
 1195 023a 1B78     		ldrb	r3, [r3]	@ D.7828, prestadorSimState
 1196 023c 0133     		adds	r3, r3, #1	@ tmp273,
 1197 023e DAB2     		uxtb	r2, r3	@ D.7828, tmp273
 1198 0240 4F4B     		ldr	r3, .L94+8	@ tmp274,
 1199 0242 1A70     		strb	r2, [r3]	@ tmp275, prestadorSimState
 1200              	.L77:
 560:src/sim900_800.c **** 							if (i > 2)
 1201              		.loc 1 560 0
 1202 0244 1723     		movs	r3, #23	@ tmp276,
 1203 0246 6B44     		add	r3, r3, sp	@ tmp276,
 1204 0248 1B78     		ldrb	r3, [r3]	@ tmp277, i
 1205 024a 022B     		cmp	r3, #2	@ tmp277,
 1206 024c 00D8     		bhi	.LCB790	@
 1207 024e 8EE0     		b	.L92	@long jump	@
 1208              	.LCB790:
 561:src/sim900_800.c **** 							{
 562:src/sim900_800.c **** 								prestadorSimState = 0;
 1209              		.loc 1 562 0
 1210 0250 4B4B     		ldr	r3, .L94+8	@ tmp278,
 1211 0252 0022     		movs	r2, #0	@ tmp279,
 1212 0254 1A70     		strb	r2, [r3]	@ tmp280, prestadorSimState
 563:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1213              		.loc 1 563 0
 1214 0256 494B     		ldr	r3, .L94+4	@ tmp281,
 1215 0258 0022     		movs	r2, #0	@ tmp282,
 1216 025a 1A70     		strb	r2, [r3]	@ tmp283, prestadorSimSelect
 564:src/sim900_800.c **** 								prestadorSimTime = 150;
 1217              		.loc 1 564 0
 1218 025c 464B     		ldr	r3, .L94	@ tmp284,
 1219 025e 9622     		movs	r2, #150	@ tmp285,
 1220 0260 1A70     		strb	r2, [r3]	@ tmp286, prestadorSimTime
 565:src/sim900_800.c **** 							}
 566:src/sim900_800.c **** 
 567:src/sim900_800.c **** 							break;
 1221              		.loc 1 567 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 33


 1222 0262 84E0     		b	.L92	@
 1223              	.L75:
 568:src/sim900_800.c **** 						case 2:
 569:src/sim900_800.c **** 							i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 1224              		.loc 1 569 0
 1225 0264 1724     		movs	r4, #23	@ tmp287,
 1226 0266 6C44     		add	r4, r4, sp	@ tmp287,
 1227 0268 464B     		ldr	r3, .L94+12	@ tmp288,
 1228 026a 4748     		ldr	r0, .L94+16	@ tmp289,
 1229 026c 0122     		movs	r2, #1	@,
 1230 026e 0F21     		movs	r1, #15	@,
 1231 0270 FFF7FEFF 		bl	GSMSendCommand	@
 1232 0274 0300     		movs	r3, r0	@ tmp290,
 1233 0276 2370     		strb	r3, [r4]	@ tmp292, i
 570:src/sim900_800.c **** 
 571:src/sim900_800.c **** 							if (i == 2)
 1234              		.loc 1 571 0
 1235 0278 1723     		movs	r3, #23	@ tmp293,
 1236 027a 6B44     		add	r3, r3, sp	@ tmp293,
 1237 027c 1B78     		ldrb	r3, [r3]	@ tmp294, i
 1238 027e 022B     		cmp	r3, #2	@ tmp294,
 1239 0280 62D1     		bne	.L79	@,
 572:src/sim900_800.c **** 							{
 573:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") -
 1240              		.loc 1 573 0
 1241 0282 4249     		ldr	r1, .L94+20	@ tmp295,
 1242 0284 3F4B     		ldr	r3, .L94+12	@ tmp296,
 1243 0286 0522     		movs	r2, #5	@,
 1244 0288 1800     		movs	r0, r3	@, tmp296
 1245 028a FFF7FEFF 		bl	strncmp	@
 1246 028e 031E     		subs	r3, r0, #0	@ D.7829,,
 1247 0290 54D1     		bne	.L80	@,
 574:src/sim900_800.c **** 								{
 575:src/sim900_800.c **** 
 576:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1248              		.loc 1 576 0
 1249 0292 0A99     		ldr	r1, [sp, #40]	@ tmp297, pCONFIGURACIONgprsProveedor1
 1250 0294 3E4B     		ldr	r3, .L94+24	@ tmp298,
 1251 0296 0322     		movs	r2, #3	@,
 1252 0298 1800     		movs	r0, r3	@, tmp298
 1253 029a FFF7FEFF 		bl	strncmp	@
 1254 029e 031E     		subs	r3, r0, #0	@ D.7829,,
 1255 02a0 20D1     		bne	.L81	@,
 577:src/sim900_800.c **** 									{
 578:src/sim900_800.c **** 										*prestadorSim2 = 1;
 1256              		.loc 1 578 0
 1257 02a2 019B     		ldr	r3, [sp, #4]	@ tmp299, prestadorSim2
 1258 02a4 0122     		movs	r2, #1	@ tmp300,
 1259 02a6 1A70     		strb	r2, [r3]	@ tmp301, *prestadorSim2_99(D)
 579:src/sim900_800.c **** 
 580:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN1);
 1260              		.loc 1 580 0
 1261 02a8 009A     		ldr	r2, [sp]	@ tmp302, pCONFIGURACIONgprsAPN1
 1262 02aa 3F4B     		ldr	r3, .L94+48	@ tmp303,
 1263 02ac 1100     		movs	r1, r2	@, tmp302
 1264 02ae 1800     		movs	r0, r3	@, tmp303
 1265 02b0 FFF7FEFF 		bl	strcpy	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 34


 581:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1266              		.loc 1 581 0
 1267 02b4 089A     		ldr	r2, [sp, #32]	@ tmp304, pCONFIGURACIONgprsUsuario1
 1268 02b6 3D4B     		ldr	r3, .L94+52	@ tmp305,
 1269 02b8 1100     		movs	r1, r2	@, tmp304
 1270 02ba 1800     		movs	r0, r3	@, tmp305
 1271 02bc FFF7FEFF 		bl	strcpy	@
 582:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave1);
 1272              		.loc 1 582 0
 1273 02c0 099A     		ldr	r2, [sp, #36]	@ tmp306, pCONFIGURACIONgprsClave1
 1274 02c2 3B4B     		ldr	r3, .L94+56	@ tmp307,
 1275 02c4 1100     		movs	r1, r2	@, tmp306
 1276 02c6 1800     		movs	r0, r3	@, tmp307
 1277 02c8 FFF7FEFF 		bl	strcpy	@
 583:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1278              		.loc 1 583 0
 1279 02cc 0F9A     		ldr	r2, [sp, #60]	@ tmp308, pCONFIGURACIONIPREMOTE
 1280 02ce 344B     		ldr	r3, .L94+40	@ tmp309,
 1281 02d0 1100     		movs	r1, r2	@, tmp308
 1282 02d2 1800     		movs	r0, r3	@, tmp309
 1283 02d4 FFF7FEFF 		bl	strcpy	@
 584:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1284              		.loc 1 584 0
 1285 02d8 109A     		ldr	r2, [sp, #64]	@ tmp310, pCONFIGURACIONPORTREMOTE
 1286 02da 324B     		ldr	r3, .L94+44	@ tmp311,
 1287 02dc 1100     		movs	r1, r2	@, tmp310
 1288 02de 1800     		movs	r0, r3	@, tmp311
 1289 02e0 FFF7FEFF 		bl	strcpy	@
 1290              	.L81:
 585:src/sim900_800.c **** 									}
 586:src/sim900_800.c **** 
 587:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1291              		.loc 1 587 0
 1292 02e4 0E99     		ldr	r1, [sp, #56]	@ tmp312, pCONFIGURACIONgprsProveedor2
 1293 02e6 2A4B     		ldr	r3, .L94+24	@ tmp313,
 1294 02e8 0322     		movs	r2, #3	@,
 1295 02ea 1800     		movs	r0, r3	@, tmp313
 1296 02ec FFF7FEFF 		bl	strncmp	@
 1297 02f0 031E     		subs	r3, r0, #0	@ D.7829,,
 1298 02f2 20D1     		bne	.L82	@,
 588:src/sim900_800.c **** 									{
 589:src/sim900_800.c **** 										*prestadorSim2 = 2;
 1299              		.loc 1 589 0
 1300 02f4 019B     		ldr	r3, [sp, #4]	@ tmp314, prestadorSim2
 1301 02f6 0222     		movs	r2, #2	@ tmp315,
 1302 02f8 1A70     		strb	r2, [r3]	@ tmp316, *prestadorSim2_99(D)
 590:src/sim900_800.c **** 
 591:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN2);
 1303              		.loc 1 591 0
 1304 02fa 0B9A     		ldr	r2, [sp, #44]	@ tmp317, pCONFIGURACIONgprsAPN2
 1305 02fc 2A4B     		ldr	r3, .L94+48	@ tmp318,
 1306 02fe 1100     		movs	r1, r2	@, tmp317
 1307 0300 1800     		movs	r0, r3	@, tmp318
 1308 0302 FFF7FEFF 		bl	strcpy	@
 592:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1309              		.loc 1 592 0
 1310 0306 0C9A     		ldr	r2, [sp, #48]	@ tmp319, pCONFIGURACIONgprsUsuario2
ARM GAS  /tmp/cc4fp2Bh.s 			page 35


 1311 0308 284B     		ldr	r3, .L94+52	@ tmp320,
 1312 030a 1100     		movs	r1, r2	@, tmp319
 1313 030c 1800     		movs	r0, r3	@, tmp320
 1314 030e FFF7FEFF 		bl	strcpy	@
 593:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave2);
 1315              		.loc 1 593 0
 1316 0312 0D9A     		ldr	r2, [sp, #52]	@ tmp321, pCONFIGURACIONgprsClave2
 1317 0314 264B     		ldr	r3, .L94+56	@ tmp322,
 1318 0316 1100     		movs	r1, r2	@, tmp321
 1319 0318 1800     		movs	r0, r3	@, tmp322
 1320 031a FFF7FEFF 		bl	strcpy	@
 594:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1321              		.loc 1 594 0
 1322 031e 0F9A     		ldr	r2, [sp, #60]	@ tmp323, pCONFIGURACIONIPREMOTE
 1323 0320 1F4B     		ldr	r3, .L94+40	@ tmp324,
 1324 0322 1100     		movs	r1, r2	@, tmp323
 1325 0324 1800     		movs	r0, r3	@, tmp324
 1326 0326 FFF7FEFF 		bl	strcpy	@
 595:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1327              		.loc 1 595 0
 1328 032a 109A     		ldr	r2, [sp, #64]	@ tmp325, pCONFIGURACIONPORTREMOTE
 1329 032c 1D4B     		ldr	r3, .L94+44	@ tmp326,
 1330 032e 1100     		movs	r1, r2	@, tmp325
 1331 0330 1800     		movs	r0, r3	@, tmp326
 1332 0332 FFF7FEFF 		bl	strcpy	@
 1333              	.L82:
 596:src/sim900_800.c **** 									}
 597:src/sim900_800.c **** 
 598:src/sim900_800.c **** /*									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Pe
 599:src/sim900_800.c **** 									{
 600:src/sim900_800.c **** 										*prestadorSim2 = 1;
 601:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Personal    ");
 602:src/sim900_800.c **** 									}
 603:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movi
 604:src/sim900_800.c **** 									{
 605:src/sim900_800.c **** 										*prestadorSim2 = 2;
 606:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Movistar    ");
 607:src/sim900_800.c **** 									}
 608:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro")
 609:src/sim900_800.c **** 									{
 610:src/sim900_800.c **** 										*prestadorSim2 = 3;
 611:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n      Claro     ");
 612:src/sim900_800.c **** 									}
 613:src/sim900_800.c **** */
 614:src/sim900_800.c **** 									prestadorSimState = 0;
 1334              		.loc 1 614 0
 1335 0336 124B     		ldr	r3, .L94+8	@ tmp327,
 1336 0338 0022     		movs	r2, #0	@ tmp328,
 1337 033a 1A70     		strb	r2, [r3]	@ tmp329, prestadorSimState
 1338              	.L80:
 615:src/sim900_800.c **** 
 616:src/sim900_800.c **** 								}
 617:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1339              		.loc 1 617 0
 1340 033c 0F4B     		ldr	r3, .L94+4	@ tmp330,
 1341 033e 0022     		movs	r2, #0	@ tmp331,
 1342 0340 1A70     		strb	r2, [r3]	@ tmp332, prestadorSimSelect
ARM GAS  /tmp/cc4fp2Bh.s 			page 36


 618:src/sim900_800.c **** 								prestadorSimTime = 150;
 1343              		.loc 1 618 0
 1344 0342 0D4B     		ldr	r3, .L94	@ tmp333,
 1345 0344 9622     		movs	r2, #150	@ tmp334,
 1346 0346 1A70     		strb	r2, [r3]	@ tmp335, prestadorSimTime
 1347              	.L79:
 619:src/sim900_800.c **** 							}
 620:src/sim900_800.c **** 							if (i > 2)
 1348              		.loc 1 620 0
 1349 0348 1723     		movs	r3, #23	@ tmp336,
 1350 034a 6B44     		add	r3, r3, sp	@ tmp336,
 1351 034c 1B78     		ldrb	r3, [r3]	@ tmp337, i
 1352 034e 022B     		cmp	r3, #2	@ tmp337,
 1353 0350 0FD9     		bls	.L93	@,
 621:src/sim900_800.c **** 							{
 622:src/sim900_800.c **** 								prestadorSimState = 0;
 1354              		.loc 1 622 0
 1355 0352 0B4B     		ldr	r3, .L94+8	@ tmp338,
 1356 0354 0022     		movs	r2, #0	@ tmp339,
 1357 0356 1A70     		strb	r2, [r3]	@ tmp340, prestadorSimState
 623:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1358              		.loc 1 623 0
 1359 0358 084B     		ldr	r3, .L94+4	@ tmp341,
 1360 035a 0022     		movs	r2, #0	@ tmp342,
 1361 035c 1A70     		strb	r2, [r3]	@ tmp343, prestadorSimSelect
 624:src/sim900_800.c **** 								prestadorSimTime = 150;
 1362              		.loc 1 624 0
 1363 035e 064B     		ldr	r3, .L94	@ tmp344,
 1364 0360 9622     		movs	r2, #150	@ tmp345,
 1365 0362 1A70     		strb	r2, [r3]	@ tmp346, prestadorSimTime
 625:src/sim900_800.c **** 							}
 626:src/sim900_800.c **** 							break;
 1366              		.loc 1 626 0
 1367 0364 05E0     		b	.L93	@
 1368              	.L86:
 627:src/sim900_800.c **** 
 628:src/sim900_800.c **** 						default:
 629:src/sim900_800.c **** 							prestadorSimState = 0;
 1369              		.loc 1 629 0
 1370 0366 064B     		ldr	r3, .L94+8	@ tmp347,
 1371 0368 0022     		movs	r2, #0	@ tmp348,
 1372 036a 1A70     		strb	r2, [r3]	@ tmp349, prestadorSimState
 630:src/sim900_800.c **** 							break;
 1373              		.loc 1 630 0
 1374 036c 02E0     		b	.L72	@
 1375              	.L92:
 567:src/sim900_800.c **** 						case 2:
 1376              		.loc 1 567 0
 1377 036e C046     		nop
 1378 0370 26E0     		b	.L91	@
 1379              	.L93:
 626:src/sim900_800.c **** 
 1380              		.loc 1 626 0
 1381 0372 C046     		nop
 1382              	.L72:
 631:src/sim900_800.c **** 					}
 632:src/sim900_800.c **** 				}
ARM GAS  /tmp/cc4fp2Bh.s 			page 37


 633:src/sim900_800.c **** 				break;
 1383              		.loc 1 633 0 discriminator 1
 1384 0374 24E0     		b	.L91	@
 1385              	.L95:
 1386 0376 C046     		.align	2
 1387              	.L94:
 1388 0378 00000000 		.word	prestadorSimTime
 1389 037c 00000000 		.word	prestadorSimSelect
 1390 0380 00000000 		.word	prestadorSimState
 1391 0384 00000000 		.word	GSMbuffRtaCommand
 1392 0388 00000000 		.word	.LC18
 1393 038c 0C000000 		.word	.LC20
 1394 0390 08000000 		.word	GSMbuffRtaCommand+8
 1395 0394 00000000 		.word	SIM900APNSIM1
 1396 0398 00000000 		.word	SIM900USUARIOSIM1
 1397 039c 00000000 		.word	SIM900CLAVESIM1
 1398 03a0 00000000 		.word	SIM900IPREMOTE
 1399 03a4 00000000 		.word	SIM900PORTREMOTE
 1400 03a8 00000000 		.word	SIM900APNSIM2
 1401 03ac 00000000 		.word	SIM900USUARIOSIM2
 1402 03b0 00000000 		.word	SIM900CLAVESIM2
 1403              	.L84:
 634:src/sim900_800.c **** 
 635:src/sim900_800.c **** 			default:
 636:src/sim900_800.c **** 				prestadorSimSelect = 0;
 1404              		.loc 1 636 0
 1405 03b4 044B     		ldr	r3, .L96	@ tmp350,
 1406 03b6 0022     		movs	r2, #0	@ tmp351,
 1407 03b8 1A70     		strb	r2, [r3]	@ tmp352, prestadorSimSelect
 637:src/sim900_800.c **** 				break;
 1408              		.loc 1 637 0
 1409 03ba 02E0     		b	.L53	@
 1410              	.L88:
 450:src/sim900_800.c **** 			case 1:
 1411              		.loc 1 450 0
 1412 03bc C046     		nop
 1413 03be 00E0     		b	.L87	@
 1414              	.L91:
 633:src/sim900_800.c **** 
 1415              		.loc 1 633 0
 1416 03c0 C046     		nop
 1417              	.L53:
 1418              	.L87:
 638:src/sim900_800.c **** 
 639:src/sim900_800.c **** 
 640:src/sim900_800.c **** 		}
 641:src/sim900_800.c **** 
 642:src/sim900_800.c **** 	}
 643:src/sim900_800.c **** }
 1419              		.loc 1 643 0
 1420 03c2 C046     		nop
 1421 03c4 06B0     		add	sp, sp, #24	@,,
 1422              		@ sp needed	@
 1423 03c6 10BD     		pop	{r4, pc}
 1424              	.L97:
 1425              		.align	2
 1426              	.L96:
ARM GAS  /tmp/cc4fp2Bh.s 			page 38


 1427 03c8 00000000 		.word	prestadorSimSelect
 1428              		.cfi_endproc
 1429              	.LFE25:
 1430              		.size	GSMPrestador, .-GSMPrestador
 1431              		.section	.rodata
 1432 0012 0000     		.align	2
 1433              	.LC33:
 1434 0014 41542B43 		.ascii	"AT+CIPSHUT\015\012\000"
 1434      49505348 
 1434      55540D0A 
 1434      00
 1435              		.section	.text.GSMCloseIP,"ax",%progbits
 1436              		.align	2
 1437              		.global	GSMCloseIP
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	GSMCloseIP, %function
 1441              	GSMCloseIP:
 1442              	.LFB26:
 644:src/sim900_800.c **** 
 645:src/sim900_800.c **** char GSMCloseIP(void)
 646:src/sim900_800.c **** {
 1443              		.loc 1 646 0
 1444              		.cfi_startproc
 1445 0000 10B5     		push	{r4, lr}	@
 1446              	.LCFI5:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
 1450 0002 82B0     		sub	sp, sp, #8	@,,
 1451              	.LCFI6:
 1452              		.cfi_def_cfa_offset 16
 647:src/sim900_800.c **** 	unsigned char i = 0;
 1453              		.loc 1 647 0
 1454 0004 6B46     		mov	r3, sp	@ tmp136,
 1455 0006 0733     		adds	r3, r3, #7	@ tmp113,
 1456 0008 0022     		movs	r2, #0	@ tmp114,
 1457 000a 1A70     		strb	r2, [r3]	@ tmp115, i
 648:src/sim900_800.c **** 
 649:src/sim900_800.c **** 	if (flagCloseIP == 1)
 1458              		.loc 1 649 0
 1459 000c 154B     		ldr	r3, .L103	@ tmp116,
 1460 000e 1B78     		ldrb	r3, [r3]	@ D.7833, flagCloseIP
 1461 0010 012B     		cmp	r3, #1	@ D.7833,
 1462 0012 23D1     		bne	.L99	@,
 650:src/sim900_800.c **** 	{
 651:src/sim900_800.c **** 		i = GSMSendCommand ("AT+CIPSHUT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 1463              		.loc 1 651 0
 1464 0014 6B46     		mov	r3, sp	@ tmp137,
 1465 0016 DC1D     		adds	r4, r3, #7	@ tmp117, tmp137,
 1466 0018 134B     		ldr	r3, .L103+4	@ tmp118,
 1467 001a 1448     		ldr	r0, .L103+8	@ tmp119,
 1468 001c 0022     		movs	r2, #0	@,
 1469 001e 0F21     		movs	r1, #15	@,
 1470 0020 FFF7FEFF 		bl	GSMSendCommand	@
 1471 0024 0300     		movs	r3, r0	@ tmp120,
 1472 0026 2370     		strb	r3, [r4]	@ tmp122, i
ARM GAS  /tmp/cc4fp2Bh.s 			page 39


 652:src/sim900_800.c **** 
 653:src/sim900_800.c **** 		if (i == 2)
 1473              		.loc 1 653 0
 1474 0028 6B46     		mov	r3, sp	@ tmp138,
 1475 002a 0733     		adds	r3, r3, #7	@ tmp123,
 1476 002c 1B78     		ldrb	r3, [r3]	@ tmp124, i
 1477 002e 022B     		cmp	r3, #2	@ tmp124,
 1478 0030 06D1     		bne	.L100	@,
 654:src/sim900_800.c **** 		{
 655:src/sim900_800.c **** 			flagCloseIP = 0;
 1479              		.loc 1 655 0
 1480 0032 0C4B     		ldr	r3, .L103	@ tmp125,
 1481 0034 0022     		movs	r2, #0	@ tmp126,
 1482 0036 1A70     		strb	r2, [r3]	@ tmp127, flagCloseIP
 656:src/sim900_800.c **** 			return i;
 1483              		.loc 1 656 0
 1484 0038 6B46     		mov	r3, sp	@ tmp139,
 1485 003a 0733     		adds	r3, r3, #7	@ tmp128,
 1486 003c 1B78     		ldrb	r3, [r3]	@ D.7832, i
 1487 003e 0EE0     		b	.L101	@
 1488              	.L100:
 657:src/sim900_800.c **** 		}
 658:src/sim900_800.c **** 		if (i > 2)
 1489              		.loc 1 658 0
 1490 0040 6B46     		mov	r3, sp	@ tmp140,
 1491 0042 0733     		adds	r3, r3, #7	@ tmp129,
 1492 0044 1B78     		ldrb	r3, [r3]	@ tmp130, i
 1493 0046 022B     		cmp	r3, #2	@ tmp130,
 1494 0048 06D9     		bls	.L102	@,
 659:src/sim900_800.c **** 		{
 660:src/sim900_800.c **** 			flagCloseIP = 0;
 1495              		.loc 1 660 0
 1496 004a 064B     		ldr	r3, .L103	@ tmp131,
 1497 004c 0022     		movs	r2, #0	@ tmp132,
 1498 004e 1A70     		strb	r2, [r3]	@ tmp133, flagCloseIP
 661:src/sim900_800.c **** 			return i;
 1499              		.loc 1 661 0
 1500 0050 6B46     		mov	r3, sp	@ tmp141,
 1501 0052 0733     		adds	r3, r3, #7	@ tmp134,
 1502 0054 1B78     		ldrb	r3, [r3]	@ D.7832, i
 1503 0056 02E0     		b	.L101	@
 1504              	.L102:
 662:src/sim900_800.c **** 		}
 663:src/sim900_800.c **** 
 664:src/sim900_800.c **** 		return 1;
 1505              		.loc 1 664 0
 1506 0058 0123     		movs	r3, #1	@ D.7832,
 1507 005a 00E0     		b	.L101	@
 1508              	.L99:
 665:src/sim900_800.c **** 	}
 666:src/sim900_800.c **** 
 667:src/sim900_800.c **** 	return 0;
 1509              		.loc 1 667 0
 1510 005c 0023     		movs	r3, #0	@ D.7832,
 1511              	.L101:
 668:src/sim900_800.c **** }
 1512              		.loc 1 668 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 40


 1513 005e 1800     		movs	r0, r3	@, <retval>
 1514 0060 02B0     		add	sp, sp, #8	@,,
 1515              		@ sp needed	@
 1516 0062 10BD     		pop	{r4, pc}
 1517              	.L104:
 1518              		.align	2
 1519              	.L103:
 1520 0064 00000000 		.word	flagCloseIP
 1521 0068 00000000 		.word	GSMbuffRtaCommand
 1522 006c 14000000 		.word	.LC33
 1523              		.cfi_endproc
 1524              	.LFE26:
 1525              		.size	GSMCloseIP, .-GSMCloseIP
 1526              		.section	.rodata
 1527 0021 000000   		.align	2
 1528              	.LC39:
 1529 0024 53485554 		.ascii	"SHUT OK\000"
 1529      204F4B00 
 1530              		.align	2
 1531              	.LC41:
 1532 002c 0D0A3E20 		.ascii	"\015\012> \000"
 1532      00
 1533 0031 000000   		.align	2
 1534              	.LC43:
 1535 0034 41540D0D 		.ascii	"AT\015\015\012OK\015\012\000"
 1535      0A4F4B0D 
 1535      0A00
 1536 003e 0000     		.align	2
 1537              	.LC45:
 1538 0040 0D0A4F4B 		.ascii	"\015\012OK\015\012\000"
 1538      0D0A00
 1539 0047 00       		.align	2
 1540              	.LC47:
 1541 0048 0D0A4552 		.ascii	"\015\012ERROR\015\012\000"
 1541      524F520D 
 1541      0A00
 1542 0052 0000     		.align	2
 1543              	.LC54:
 1544 0054 3030303A 		.ascii	"000:\000"
 1544      00
 1545 0059 000000   		.align	2
 1546              	.LC57:
 1547 005c 2B434D54 		.ascii	"+CMTIDS: \"SM\",\000"
 1547      4944533A 
 1547      2022534D 
 1547      222C00
 1548 006b 00       		.align	2
 1549              	.LC60:
 1550 006c 2B434D54 		.ascii	"+CMTI: \"SM\",\000"
 1550      493A2022 
 1550      534D222C 
 1550      00
 1551 0079 000000   		.align	2
 1552              	.LC63:
 1553 007c 434C4F53 		.ascii	"CLOSED\000"
 1553      454400
 1554              		.section	.text.GSMReceive,"ax",%progbits
ARM GAS  /tmp/cc4fp2Bh.s 			page 41


 1555              		.align	2
 1556              		.global	GSMReceive
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	GSMReceive, %function
 1560              	GSMReceive:
 1561              	.LFB27:
 669:src/sim900_800.c **** 
 670:src/sim900_800.c **** //Procesa respuestas del modulo GSM ubicadas en el buffer buffUARTGSMrx2 con flag PacketReadyUARTGS
 671:src/sim900_800.c **** //revisa los flag de estados GSMConfigGPRSflag GSMSendCommandFlag y revisa respuestas no esperadas
 672:src/sim900_800.c **** //para respuestas no esperadas revisa SMS y avisa la cantidad con GSMCantSMS
 673:src/sim900_800.c **** //void GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, u
 674:src/sim900_800.c **** void GSMReceive (void)
 675:src/sim900_800.c **** {
 1562              		.loc 1 675 0
 1563              		.cfi_startproc
 1564 0000 10B5     		push	{r4, lr}	@
 1565              	.LCFI7:
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 4, -8
 1568              		.cfi_offset 14, -4
 676:src/sim900_800.c **** 
 677:src/sim900_800.c **** 	//---- Comunicacion con modulo GSM ----//
 678:src/sim900_800.c **** 	if (PacketReadyUARTGSM)
 1569              		.loc 1 678 0
 1570 0002 8F4B     		ldr	r3, .L123	@ tmp148,
 1571 0004 1B78     		ldrb	r3, [r3]	@ tmp149, PacketReadyUARTGSM
 1572 0006 DBB2     		uxtb	r3, r3	@ D.7835, tmp149
 1573 0008 002B     		cmp	r3, #0	@ D.7835,
 1574 000a 00D1     		bne	.LCB1102	@
 1575 000c 15E1     		b	.L122	@long jump	@
 1576              	.LCB1102:
 679:src/sim900_800.c **** 	{
 680:src/sim900_800.c **** 		//TODO: para debug envio lo que llega
 681:src/sim900_800.c **** 		Usart2Send(buffUARTGSMrx2);
 1577              		.loc 1 681 0
 1578 000e 8D4B     		ldr	r3, .L123+4	@ tmp150,
 1579 0010 1800     		movs	r0, r3	@, tmp150
 1580 0012 FFF7FEFF 		bl	Usart2Send	@
 682:src/sim900_800.c **** 
 683:src/sim900_800.c **** 		if (GSMSendCommandFlag)
 1581              		.loc 1 683 0
 1582 0016 8C4B     		ldr	r3, .L123+8	@ tmp151,
 1583 0018 1B78     		ldrb	r3, [r3]	@ D.7835, GSMSendCommandFlag
 1584 001a 002B     		cmp	r3, #0	@ D.7835,
 1585 001c 52D0     		beq	.L107	@,
 684:src/sim900_800.c **** 		{
 685:src/sim900_800.c **** 			// if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"C
 686:src/sim900_800.c **** 			// 	DB300flagConnGPRS = 1;
 687:src/sim900_800.c **** 
 688:src/sim900_800.c **** 			if (GSMSendCommandFlag == 3)
 1586              		.loc 1 688 0
 1587 001e 8A4B     		ldr	r3, .L123+8	@ tmp152,
 1588 0020 1B78     		ldrb	r3, [r3]	@ D.7835, GSMSendCommandFlag
 1589 0022 032B     		cmp	r3, #3	@ D.7835,
 1590 0024 36D1     		bne	.L108	@,
 689:src/sim900_800.c **** 			{
ARM GAS  /tmp/cc4fp2Bh.s 			page 42


 690:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_SENDOK[0], strlen((const char 
 1591              		.loc 1 690 0
 1592 0026 8949     		ldr	r1, .L123+12	@ tmp153,
 1593 0028 864B     		ldr	r3, .L123+4	@ tmp154,
 1594 002a 0722     		movs	r2, #7	@,
 1595 002c 1800     		movs	r0, r3	@, tmp154
 1596 002e FFF7FEFF 		bl	strncmp	@
 1597 0032 031E     		subs	r3, r0, #0	@ D.7836,,
 1598 0034 02D1     		bne	.L109	@,
 691:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1599              		.loc 1 691 0
 1600 0036 844B     		ldr	r3, .L123+8	@ tmp155,
 1601 0038 0422     		movs	r2, #4	@ tmp156,
 1602 003a 1A70     		strb	r2, [r3]	@ tmp157, GSMSendCommandFlag
 1603              	.L109:
 692:src/sim900_800.c **** //				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_OK[0], strlen((const char *)
 693:src/sim900_800.c **** //					GSMSendCommandFlag = 4;
 694:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"SHUT OK", strlen((const char *)"SH
 1604              		.loc 1 694 0
 1605 003c 8449     		ldr	r1, .L123+16	@ tmp158,
 1606 003e 814B     		ldr	r3, .L123+4	@ tmp159,
 1607 0040 0722     		movs	r2, #7	@,
 1608 0042 1800     		movs	r0, r3	@, tmp159
 1609 0044 FFF7FEFF 		bl	strncmp	@
 1610 0048 031E     		subs	r3, r0, #0	@ D.7836,,
 1611 004a 02D1     		bne	.L110	@,
 695:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1612              		.loc 1 695 0
 1613 004c 7E4B     		ldr	r3, .L123+8	@ tmp160,
 1614 004e 0422     		movs	r2, #4	@ tmp161,
 1615 0050 1A70     		strb	r2, [r3]	@ tmp162, GSMSendCommandFlag
 1616              	.L110:
 696:src/sim900_800.c **** 				// if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"AT\r\n", sizeof "AT\r\n"))
 697:src/sim900_800.c **** 				// 	GSMSendCommandFlag = 4;
 698:src/sim900_800.c **** 				// if (GSMSendSMSState == 1)
 699:src/sim900_800.c **** 				// {
 700:src/sim900_800.c **** 					if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"\r\n> ", (sizeof("\r\n> ") - 1)))
 1617              		.loc 1 700 0
 1618 0052 8049     		ldr	r1, .L123+20	@ tmp163,
 1619 0054 7B4B     		ldr	r3, .L123+4	@ tmp164,
 1620 0056 0422     		movs	r2, #4	@,
 1621 0058 1800     		movs	r0, r3	@, tmp164
 1622 005a FFF7FEFF 		bl	strncmp	@
 1623 005e 031E     		subs	r3, r0, #0	@ D.7836,,
 1624 0060 02D1     		bne	.L111	@,
 701:src/sim900_800.c **** 					// if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"\r\n> ", sizeof("\r\n> ")))
 702:src/sim900_800.c **** 					// if(buffUARTGSMrx2[0] == '>')
 703:src/sim900_800.c **** 						GSMSendCommandFlag = 4;
 1625              		.loc 1 703 0
 1626 0062 794B     		ldr	r3, .L123+8	@ tmp165,
 1627 0064 0422     		movs	r2, #4	@ tmp166,
 1628 0066 1A70     		strb	r2, [r3]	@ tmp167, GSMSendCommandFlag
 1629              	.L111:
 704:src/sim900_800.c **** 				// }
 705:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"AT\r\r\nOK\r\n", sizeof "AT\r\r\nO
 1630              		.loc 1 705 0
 1631 0068 7B49     		ldr	r1, .L123+24	@ tmp168,
ARM GAS  /tmp/cc4fp2Bh.s 			page 43


 1632 006a 764B     		ldr	r3, .L123+4	@ tmp169,
 1633 006c 0A22     		movs	r2, #10	@,
 1634 006e 1800     		movs	r0, r3	@, tmp169
 1635 0070 FFF7FEFF 		bl	strncmp	@
 1636 0074 031E     		subs	r3, r0, #0	@ D.7836,,
 1637 0076 02D1     		bne	.L112	@,
 706:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1638              		.loc 1 706 0
 1639 0078 734B     		ldr	r3, .L123+8	@ tmp170,
 1640 007a 0422     		movs	r2, #4	@ tmp171,
 1641 007c 1A70     		strb	r2, [r3]	@ tmp172, GSMSendCommandFlag
 1642              	.L112:
 707:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"\r\nOK\r\n", sizeof "\r\nOK\r\n"))
 1643              		.loc 1 707 0
 1644 007e 7749     		ldr	r1, .L123+28	@ tmp173,
 1645 0080 704B     		ldr	r3, .L123+4	@ tmp174,
 1646 0082 0722     		movs	r2, #7	@,
 1647 0084 1800     		movs	r0, r3	@, tmp174
 1648 0086 FFF7FEFF 		bl	strncmp	@
 1649 008a 031E     		subs	r3, r0, #0	@ D.7836,,
 1650 008c 02D1     		bne	.L108	@,
 708:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1651              		.loc 1 708 0
 1652 008e 6E4B     		ldr	r3, .L123+8	@ tmp175,
 1653 0090 0422     		movs	r2, #4	@ tmp176,
 1654 0092 1A70     		strb	r2, [r3]	@ tmp177, GSMSendCommandFlag
 1655              	.L108:
 709:src/sim900_800.c **** 			}
 710:src/sim900_800.c **** 
 711:src/sim900_800.c **** 			// if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: NAK", sizeof("000: NAK") - 
 712:src/sim900_800.c **** 			// 	GSMSendCommandFlag = 5;
 713:src/sim900_800.c **** 
 714:src/sim900_800.c **** 
 715:src/sim900_800.c **** 
 716:src/sim900_800.c **** //			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_ERR[0], strlen((const char *)
 717:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *) "\r\nERROR\r\n", sizeof("\r\nERROR\
 1656              		.loc 1 717 0
 1657 0094 7249     		ldr	r1, .L123+32	@ tmp178,
 1658 0096 6B4B     		ldr	r3, .L123+4	@ tmp179,
 1659 0098 0A22     		movs	r2, #10	@,
 1660 009a 1800     		movs	r0, r3	@, tmp179
 1661 009c FFF7FEFF 		bl	strncmp	@
 1662 00a0 031E     		subs	r3, r0, #0	@ D.7836,,
 1663 00a2 02D1     		bne	.L113	@,
 718:src/sim900_800.c **** 			{
 719:src/sim900_800.c **** 				GSMSendCommandFlag = 5;
 1664              		.loc 1 719 0
 1665 00a4 684B     		ldr	r3, .L123+8	@ tmp180,
 1666 00a6 0522     		movs	r2, #5	@ tmp181,
 1667 00a8 1A70     		strb	r2, [r3]	@ tmp182, GSMSendCommandFlag
 1668              	.L113:
 720:src/sim900_800.c **** 			}
 721:src/sim900_800.c **** 
 722:src/sim900_800.c **** 			if (GSMSendCommandFlag == 1)
 1669              		.loc 1 722 0
 1670 00aa 674B     		ldr	r3, .L123+8	@ tmp183,
 1671 00ac 1B78     		ldrb	r3, [r3]	@ D.7835, GSMSendCommandFlag
ARM GAS  /tmp/cc4fp2Bh.s 			page 44


 1672 00ae 012B     		cmp	r3, #1	@ D.7835,
 1673 00b0 08D1     		bne	.L107	@,
 723:src/sim900_800.c **** 			{
 724:src/sim900_800.c **** 				if(buffUARTGSMrx2[0] == GSM_RTA)
 1674              		.loc 1 724 0
 1675 00b2 644B     		ldr	r3, .L123+4	@ tmp184,
 1676 00b4 1B78     		ldrb	r3, [r3]	@ tmp185, buffUARTGSMrx2
 1677 00b6 DBB2     		uxtb	r3, r3	@ D.7835, tmp185
 1678 00b8 2B22     		movs	r2, #43	@ D.7835,
 1679 00ba 9342     		cmp	r3, r2	@ D.7835, D.7835
 1680 00bc 02D1     		bne	.L107	@,
 725:src/sim900_800.c **** 					GSMSendCommandFlag = 2;
 1681              		.loc 1 725 0
 1682 00be 624B     		ldr	r3, .L123+8	@ tmp186,
 1683 00c0 0222     		movs	r2, #2	@ tmp187,
 1684 00c2 1A70     		strb	r2, [r3]	@ tmp188, GSMSendCommandFlag
 1685              	.L107:
 726:src/sim900_800.c **** 			}
 727:src/sim900_800.c **** 
 728:src/sim900_800.c **** 		}
 729:src/sim900_800.c **** 
 730:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 1)
 1686              		.loc 1 730 0
 1687 00c4 674B     		ldr	r3, .L123+36	@ tmp189,
 1688 00c6 1B78     		ldrb	r3, [r3]	@ D.7835, GSMConfigGPRSflag
 1689 00c8 012B     		cmp	r3, #1	@ D.7835,
 1690 00ca 10D1     		bne	.L114	@,
 731:src/sim900_800.c **** 		{
 732:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_IPSTATE[0], strlen((const char 
 1691              		.loc 1 732 0
 1692 00cc 6649     		ldr	r1, .L123+40	@ tmp190,
 1693 00ce 5D4B     		ldr	r3, .L123+4	@ tmp191,
 1694 00d0 0622     		movs	r2, #6	@,
 1695 00d2 1800     		movs	r0, r3	@, tmp191
 1696 00d4 FFF7FEFF 		bl	strncmp	@
 1697 00d8 031E     		subs	r3, r0, #0	@ D.7836,,
 1698 00da 08D1     		bne	.L114	@,
 733:src/sim900_800.c **** 			{
 734:src/sim900_800.c **** 				strcpy((char *)&GSMbuffStatus[0],(const char *)&buffUARTGSMrx2[sizeof(GSM_IPSTATE)]);
 1699              		.loc 1 734 0
 1700 00dc 634A     		ldr	r2, .L123+44	@ tmp192,
 1701 00de 644B     		ldr	r3, .L123+48	@ tmp193,
 1702 00e0 1100     		movs	r1, r2	@, tmp192
 1703 00e2 1800     		movs	r0, r3	@, tmp193
 1704 00e4 FFF7FEFF 		bl	strcpy	@
 735:src/sim900_800.c **** 				GSMConfigGPRSflag = 2;
 1705              		.loc 1 735 0
 1706 00e8 5E4B     		ldr	r3, .L123+36	@ tmp194,
 1707 00ea 0222     		movs	r2, #2	@ tmp195,
 1708 00ec 1A70     		strb	r2, [r3]	@ tmp196, GSMConfigGPRSflag
 1709              	.L114:
 736:src/sim900_800.c **** 			}
 737:src/sim900_800.c **** 		}
 738:src/sim900_800.c **** 
 739:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 3)
 1710              		.loc 1 739 0
 1711 00ee 5D4B     		ldr	r3, .L123+36	@ tmp197,
ARM GAS  /tmp/cc4fp2Bh.s 			page 45


 1712 00f0 1B78     		ldrb	r3, [r3]	@ D.7835, GSMConfigGPRSflag
 1713 00f2 032B     		cmp	r3, #3	@ D.7835,
 1714 00f4 00D0     		beq	.LCB1232	@
 1715 00f6 65E0     		b	.L115	@long jump	@
 1716              	.LCB1232:
 740:src/sim900_800.c **** 		{
 741:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1717              		.loc 1 741 0
 1718 00f8 524B     		ldr	r3, .L123+4	@ tmp198,
 1719 00fa 1B78     		ldrb	r3, [r3]	@ tmp199, buffUARTGSMrx2
 1720 00fc DBB2     		uxtb	r3, r3	@ D.7835, tmp199
 1721 00fe 2F2B     		cmp	r3, #47	@ D.7835,
 1722 0100 26D9     		bls	.L116	@,
 1723              		.loc 1 741 0 is_stmt 0 discriminator 1
 1724 0102 504B     		ldr	r3, .L123+4	@ tmp200,
 1725 0104 1B78     		ldrb	r3, [r3]	@ tmp201, buffUARTGSMrx2
 1726 0106 DBB2     		uxtb	r3, r3	@ D.7835, tmp201
 1727 0108 3A2B     		cmp	r3, #58	@ D.7835,
 1728 010a 21D8     		bhi	.L116	@,
 1729              		.loc 1 741 0 discriminator 2
 1730 010c 4D4B     		ldr	r3, .L123+4	@ tmp202,
 1731 010e 5B78     		ldrb	r3, [r3, #1]	@ tmp204,
 1732 0110 DBB2     		uxtb	r3, r3	@ D.7835, tmp204
 1733 0112 2F2B     		cmp	r3, #47	@ D.7835,
 1734 0114 1CD9     		bls	.L116	@,
 1735              		.loc 1 741 0 discriminator 3
 1736 0116 4B4B     		ldr	r3, .L123+4	@ tmp205,
 1737 0118 5B78     		ldrb	r3, [r3, #1]	@ tmp207,
 1738 011a DBB2     		uxtb	r3, r3	@ D.7835, tmp207
 1739 011c 3A2B     		cmp	r3, #58	@ D.7835,
 1740 011e 17D8     		bhi	.L116	@,
 1741              		.loc 1 741 0 discriminator 4
 1742 0120 484B     		ldr	r3, .L123+4	@ tmp208,
 1743 0122 9B78     		ldrb	r3, [r3, #2]	@ tmp210,
 1744 0124 DBB2     		uxtb	r3, r3	@ D.7835, tmp210
 1745 0126 2F2B     		cmp	r3, #47	@ D.7835,
 1746 0128 12D9     		bls	.L116	@,
 1747              		.loc 1 741 0 discriminator 5
 1748 012a 464B     		ldr	r3, .L123+4	@ tmp211,
 1749 012c 9B78     		ldrb	r3, [r3, #2]	@ tmp213,
 1750 012e DBB2     		uxtb	r3, r3	@ D.7835, tmp213
 1751 0130 3A2B     		cmp	r3, #58	@ D.7835,
 1752 0132 0DD8     		bhi	.L116	@,
 1753              		.loc 1 741 0 discriminator 6
 1754 0134 434B     		ldr	r3, .L123+4	@ tmp214,
 1755 0136 DB78     		ldrb	r3, [r3, #3]	@ tmp216,
 1756 0138 DBB2     		uxtb	r3, r3	@ D.7835, tmp216
 1757 013a 2E2B     		cmp	r3, #46	@ D.7835,
 1758 013c 08D1     		bne	.L116	@,
 742:src/sim900_800.c **** 			{
 743:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1759              		.loc 1 743 0 is_stmt 1
 1760 013e 4149     		ldr	r1, .L123+4	@ tmp217,
 1761 0140 4C4B     		ldr	r3, .L123+52	@ tmp218,
 1762 0142 1022     		movs	r2, #16	@,
 1763 0144 1800     		movs	r0, r3	@, tmp218
 1764 0146 FFF7FEFF 		bl	strncpy	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 46


 744:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1765              		.loc 1 744 0
 1766 014a 3F4B     		ldr	r3, .L123+8	@ tmp219,
 1767 014c 0422     		movs	r2, #4	@ tmp220,
 1768 014e 1A70     		strb	r2, [r3]	@ tmp221, GSMSendCommandFlag
 1769              	.L116:
 745:src/sim900_800.c **** 			}
 746:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1770              		.loc 1 746 0
 1771 0150 3C4B     		ldr	r3, .L123+4	@ tmp222,
 1772 0152 1B78     		ldrb	r3, [r3]	@ tmp223, buffUARTGSMrx2
 1773 0154 DBB2     		uxtb	r3, r3	@ D.7835, tmp223
 1774 0156 2F2B     		cmp	r3, #47	@ D.7835,
 1775 0158 1CD9     		bls	.L117	@,
 1776              		.loc 1 746 0 is_stmt 0 discriminator 1
 1777 015a 3A4B     		ldr	r3, .L123+4	@ tmp224,
 1778 015c 1B78     		ldrb	r3, [r3]	@ tmp225, buffUARTGSMrx2
 1779 015e DBB2     		uxtb	r3, r3	@ D.7835, tmp225
 1780 0160 3A2B     		cmp	r3, #58	@ D.7835,
 1781 0162 17D8     		bhi	.L117	@,
 1782              		.loc 1 746 0 discriminator 2
 1783 0164 374B     		ldr	r3, .L123+4	@ tmp226,
 1784 0166 5B78     		ldrb	r3, [r3, #1]	@ tmp228,
 1785 0168 DBB2     		uxtb	r3, r3	@ D.7835, tmp228
 1786 016a 2F2B     		cmp	r3, #47	@ D.7835,
 1787 016c 12D9     		bls	.L117	@,
 1788              		.loc 1 746 0 discriminator 3
 1789 016e 354B     		ldr	r3, .L123+4	@ tmp229,
 1790 0170 5B78     		ldrb	r3, [r3, #1]	@ tmp231,
 1791 0172 DBB2     		uxtb	r3, r3	@ D.7835, tmp231
 1792 0174 3A2B     		cmp	r3, #58	@ D.7835,
 1793 0176 0DD8     		bhi	.L117	@,
 1794              		.loc 1 746 0 discriminator 4
 1795 0178 324B     		ldr	r3, .L123+4	@ tmp232,
 1796 017a 9B78     		ldrb	r3, [r3, #2]	@ tmp234,
 1797 017c DBB2     		uxtb	r3, r3	@ D.7835, tmp234
 1798 017e 2E2B     		cmp	r3, #46	@ D.7835,
 1799 0180 08D1     		bne	.L117	@,
 747:src/sim900_800.c **** 			{
 748:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1800              		.loc 1 748 0 is_stmt 1
 1801 0182 3049     		ldr	r1, .L123+4	@ tmp235,
 1802 0184 3B4B     		ldr	r3, .L123+52	@ tmp236,
 1803 0186 1022     		movs	r2, #16	@,
 1804 0188 1800     		movs	r0, r3	@, tmp236
 1805 018a FFF7FEFF 		bl	strncpy	@
 749:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1806              		.loc 1 749 0
 1807 018e 2E4B     		ldr	r3, .L123+8	@ tmp237,
 1808 0190 0422     		movs	r2, #4	@ tmp238,
 1809 0192 1A70     		strb	r2, [r3]	@ tmp239, GSMSendCommandFlag
 1810              	.L117:
 750:src/sim900_800.c **** 			}
 751:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && buffUARTGSMrx2[1] == '.')
 1811              		.loc 1 751 0
 1812 0194 2B4B     		ldr	r3, .L123+4	@ tmp240,
 1813 0196 1B78     		ldrb	r3, [r3]	@ tmp241, buffUARTGSMrx2
ARM GAS  /tmp/cc4fp2Bh.s 			page 47


 1814 0198 DBB2     		uxtb	r3, r3	@ D.7835, tmp241
 1815 019a 2F2B     		cmp	r3, #47	@ D.7835,
 1816 019c 12D9     		bls	.L115	@,
 1817              		.loc 1 751 0 is_stmt 0 discriminator 1
 1818 019e 294B     		ldr	r3, .L123+4	@ tmp242,
 1819 01a0 1B78     		ldrb	r3, [r3]	@ tmp243, buffUARTGSMrx2
 1820 01a2 DBB2     		uxtb	r3, r3	@ D.7835, tmp243
 1821 01a4 3A2B     		cmp	r3, #58	@ D.7835,
 1822 01a6 0DD8     		bhi	.L115	@,
 1823              		.loc 1 751 0 discriminator 2
 1824 01a8 264B     		ldr	r3, .L123+4	@ tmp244,
 1825 01aa 5B78     		ldrb	r3, [r3, #1]	@ tmp246,
 1826 01ac DBB2     		uxtb	r3, r3	@ D.7835, tmp246
 1827 01ae 2E2B     		cmp	r3, #46	@ D.7835,
 1828 01b0 08D1     		bne	.L115	@,
 752:src/sim900_800.c **** 			{
 753:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1829              		.loc 1 753 0 is_stmt 1
 1830 01b2 2449     		ldr	r1, .L123+4	@ tmp247,
 1831 01b4 2F4B     		ldr	r3, .L123+52	@ tmp248,
 1832 01b6 1022     		movs	r2, #16	@,
 1833 01b8 1800     		movs	r0, r3	@, tmp248
 1834 01ba FFF7FEFF 		bl	strncpy	@
 754:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1835              		.loc 1 754 0
 1836 01be 224B     		ldr	r3, .L123+8	@ tmp249,
 1837 01c0 0422     		movs	r2, #4	@ tmp250,
 1838 01c2 1A70     		strb	r2, [r3]	@ tmp251, GSMSendCommandFlag
 1839              	.L115:
 755:src/sim900_800.c **** 			}
 756:src/sim900_800.c **** 		}
 757:src/sim900_800.c **** 
 758:src/sim900_800.c **** 		//respuestas no esperadas
 759:src/sim900_800.c **** 		//respuestas no esperadas
 760:src/sim900_800.c **** 
 761:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"000:", sizeof ("000:") -1))
 1840              		.loc 1 761 0
 1841 01c4 2C49     		ldr	r1, .L123+56	@ tmp252,
 1842 01c6 1F4B     		ldr	r3, .L123+4	@ tmp253,
 1843 01c8 0422     		movs	r2, #4	@,
 1844 01ca 1800     		movs	r0, r3	@, tmp253
 1845 01cc FFF7FEFF 		bl	strncmp	@
 1846 01d0 031E     		subs	r3, r0, #0	@ D.7836,,
 1847 01d2 05D1     		bne	.L118	@,
 762:src/sim900_800.c **** 		{
 763:src/sim900_800.c **** 			strcpy(&GSMReadSMSrepIn[0], (const char *)&buffUARTGSMrx2[0]);
 1848              		.loc 1 763 0
 1849 01d4 1B4A     		ldr	r2, .L123+4	@ tmp254,
 1850 01d6 294B     		ldr	r3, .L123+60	@ tmp255,
 1851 01d8 1100     		movs	r1, r2	@, tmp254
 1852 01da 1800     		movs	r0, r3	@, tmp255
 1853 01dc FFF7FEFF 		bl	strcpy	@
 1854              	.L118:
 764:src/sim900_800.c **** 		}
 765:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTIDS: \"SM\",", sizeof ("+CMTIDS: \"SM
 1855              		.loc 1 765 0
 1856 01e0 2749     		ldr	r1, .L123+64	@ tmp256,
ARM GAS  /tmp/cc4fp2Bh.s 			page 48


 1857 01e2 184B     		ldr	r3, .L123+4	@ tmp257,
 1858 01e4 0E22     		movs	r2, #14	@,
 1859 01e6 1800     		movs	r0, r3	@, tmp257
 1860 01e8 FFF7FEFF 		bl	strncmp	@
 1861 01ec 031E     		subs	r3, r0, #0	@ D.7836,,
 1862 01ee 07D1     		bne	.L119	@,
 766:src/sim900_800.c **** 		{
 767:src/sim900_800.c **** 			GSMCantSMS2 = buffUARTGSMrx2[14] - 48;
 1863              		.loc 1 767 0
 1864 01f0 144B     		ldr	r3, .L123+4	@ tmp258,
 1865 01f2 9B7B     		ldrb	r3, [r3, #14]	@ tmp260,
 1866 01f4 DBB2     		uxtb	r3, r3	@ D.7835, tmp260
 1867 01f6 303B     		subs	r3, r3, #48	@ tmp261,
 1868 01f8 DAB2     		uxtb	r2, r3	@ D.7837, tmp261
 1869 01fa 224B     		ldr	r3, .L123+68	@ tmp262,
 1870 01fc 1A70     		strb	r2, [r3]	@ tmp263, GSMCantSMS2
 1871 01fe 0EE0     		b	.L120	@
 1872              	.L119:
 768:src/sim900_800.c **** 		}
 769:src/sim900_800.c **** 		else if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTI: \"SM\",", sizeof ("+CMTI: \"S
 1873              		.loc 1 769 0
 1874 0200 2149     		ldr	r1, .L123+72	@ tmp264,
 1875 0202 104B     		ldr	r3, .L123+4	@ tmp265,
 1876 0204 0C22     		movs	r2, #12	@,
 1877 0206 1800     		movs	r0, r3	@, tmp265
 1878 0208 FFF7FEFF 		bl	strncmp	@
 1879 020c 031E     		subs	r3, r0, #0	@ D.7836,,
 1880 020e 06D1     		bne	.L120	@,
 770:src/sim900_800.c **** 		{
 771:src/sim900_800.c **** 			GSMCantSMS = buffUARTGSMrx2[12] - 48;
 1881              		.loc 1 771 0
 1882 0210 0C4B     		ldr	r3, .L123+4	@ tmp266,
 1883 0212 1B7B     		ldrb	r3, [r3, #12]	@ tmp268,
 1884 0214 DBB2     		uxtb	r3, r3	@ D.7835, tmp268
 1885 0216 303B     		subs	r3, r3, #48	@ tmp269,
 1886 0218 DAB2     		uxtb	r2, r3	@ D.7837, tmp269
 1887 021a 1C4B     		ldr	r3, .L123+76	@ tmp270,
 1888 021c 1A70     		strb	r2, [r3]	@ tmp271, GSMCantSMS
 1889              	.L120:
 772:src/sim900_800.c **** 		}
 773:src/sim900_800.c **** 
 774:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: EST,", strlen((const char *)"
 775:src/sim900_800.c **** //			*pAlertasReportar |= 0x80;
 776:src/sim900_800.c **** //
 777:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: ARM,", strlen((const char *)"
 778:src/sim900_800.c **** //		{
 779:src/sim900_800.c **** //			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)p
 780:src/sim900_800.c **** //			{
 781:src/sim900_800.c **** //				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 782:src/sim900_800.c **** //
 783:src/sim900_800.c **** //				*pActDact |= 0x40; //Armar
 784:src/sim900_800.c **** //			}
 785:src/sim900_800.c **** //		}
 786:src/sim900_800.c **** 
 787:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"CLOSE
 1890              		.loc 1 787 0
 1891 021e 1C49     		ldr	r1, .L123+80	@ tmp272,
ARM GAS  /tmp/cc4fp2Bh.s 			page 49


 1892 0220 084B     		ldr	r3, .L123+4	@ tmp273,
 1893 0222 0622     		movs	r2, #6	@,
 1894 0224 1800     		movs	r0, r3	@, tmp273
 1895 0226 FFF7FEFF 		bl	strncmp	@
 1896 022a 031E     		subs	r3, r0, #0	@ D.7836,,
 1897 022c 02D1     		bne	.L121	@,
 788:src/sim900_800.c **** 		{
 789:src/sim900_800.c **** 			flagCloseIP = 1;
 1898              		.loc 1 789 0
 1899 022e 194B     		ldr	r3, .L123+84	@ tmp274,
 1900 0230 0122     		movs	r2, #1	@ tmp275,
 1901 0232 1A70     		strb	r2, [r3]	@ tmp276, flagCloseIP
 1902              	.L121:
 790:src/sim900_800.c **** 		}
 791:src/sim900_800.c **** 
 792:src/sim900_800.c **** //		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: DRM,", strlen((const char *)"
 793:src/sim900_800.c **** //		{
 794:src/sim900_800.c **** //			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)p
 795:src/sim900_800.c **** //			{
 796:src/sim900_800.c **** //				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 797:src/sim900_800.c **** //
 798:src/sim900_800.c **** //				*pActDact |= 0x80; //Desarmar
 799:src/sim900_800.c **** //			}
 800:src/sim900_800.c **** //		}
 801:src/sim900_800.c **** /*		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: ARM", sizeof("000: ARM") - 1)
 802:src/sim900_800.c **** 		{
 803:src/sim900_800.c **** 			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)pus
 804:src/sim900_800.c **** 			{
 805:src/sim900_800.c **** 				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 806:src/sim900_800.c **** 
 807:src/sim900_800.c **** 				*pActDact |= 0x40; //Armar
 808:src/sim900_800.c **** 				*pActDact |= 0x01; //SendOK.
 809:src/sim900_800.c **** 			}
 810:src/sim900_800.c **** 		}
 811:src/sim900_800.c **** 
 812:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"000: DRM", sizeof("000: DRM") - 1))
 813:src/sim900_800.c **** 		{
 814:src/sim900_800.c **** 			if (!strncmp((const char *)&buffUARTGSMrx2[9], (const char *)puserCode, strlen((const char *)pus
 815:src/sim900_800.c **** 			{
 816:src/sim900_800.c **** 				strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 817:src/sim900_800.c **** 
 818:src/sim900_800.c **** 				*pActDact |= 0x80; //Desrmar
 819:src/sim900_800.c **** 				*pActDact |= 0x01; //SendOK.
 820:src/sim900_800.c **** 			}
 821:src/sim900_800.c **** 		}
 822:src/sim900_800.c **** */
 823:src/sim900_800.c **** 		PacketReadyUARTGSM = 0;
 1903              		.loc 1 823 0
 1904 0234 024B     		ldr	r3, .L123	@ tmp277,
 1905 0236 0022     		movs	r2, #0	@ tmp278,
 1906 0238 1A70     		strb	r2, [r3]	@ tmp279, PacketReadyUARTGSM
 1907              	.L122:
 824:src/sim900_800.c **** 	}
 825:src/sim900_800.c **** }
 1908              		.loc 1 825 0
 1909 023a C046     		nop
 1910              		@ sp needed	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 50


 1911 023c 10BD     		pop	{r4, pc}
 1912              	.L124:
 1913 023e C046     		.align	2
 1914              	.L123:
 1915 0240 00000000 		.word	PacketReadyUARTGSM
 1916 0244 00000000 		.word	buffUARTGSMrx2
 1917 0248 00000000 		.word	GSMSendCommandFlag
 1918 024c 00000000 		.word	GSM_SENDOK
 1919 0250 24000000 		.word	.LC39
 1920 0254 2C000000 		.word	.LC41
 1921 0258 34000000 		.word	.LC43
 1922 025c 40000000 		.word	.LC45
 1923 0260 48000000 		.word	.LC47
 1924 0264 00000000 		.word	GSMConfigGPRSflag
 1925 0268 00000000 		.word	GSM_IPSTATE
 1926 026c 07000000 		.word	buffUARTGSMrx2+7
 1927 0270 00000000 		.word	GSMbuffStatus
 1928 0274 00000000 		.word	GSMIPadd
 1929 0278 54000000 		.word	.LC54
 1930 027c 00000000 		.word	GSMReadSMSrepIn
 1931 0280 5C000000 		.word	.LC57
 1932 0284 00000000 		.word	GSMCantSMS2
 1933 0288 6C000000 		.word	.LC60
 1934 028c 00000000 		.word	GSMCantSMS
 1935 0290 7C000000 		.word	.LC63
 1936 0294 00000000 		.word	flagCloseIP
 1937              		.cfi_endproc
 1938              	.LFE27:
 1939              		.size	GSMReceive, .-GSMReceive
 1940              		.section	.text.GSMSendCommand,"ax",%progbits
 1941              		.align	2
 1942              		.global	GSMSendCommand
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	GSMSendCommand, %function
 1946              	GSMSendCommand:
 1947              	.LFB28:
 826:src/sim900_800.c **** 
 827:src/sim900_800.c **** //-----------------------------------------------------//
 828:src/sim900_800.c **** //char GSMSendCommand (char *ptrCommand, unsigned char timeOut, unsigned char rta, char *ptrRta)
 829:src/sim900_800.c **** //----------------------------------------------------//
 830:src/sim900_800.c **** //ptrCommand: Comando a enviar.
 831:src/sim900_800.c **** //ptrRta: Respuesta al comando desde sim900.
 832:src/sim900_800.c **** //rta: 0: No espera rta. 1: Espera respuesta antes de OK.
 833:src/sim900_800.c **** //TO: time out. en ms
 834:src/sim900_800.c **** //----------------------------------------------------//
 835:src/sim900_800.c **** //Wait: 	1
 836:src/sim900_800.c **** //OK: 		2
 837:src/sim900_800.c **** //ERR:		3
 838:src/sim900_800.c **** //TO:
 839:src/sim900_800.c **** //NO OK:	4
 840:src/sim900_800.c **** //NO RTA: 	5
 841:src/sim900_800.c **** //----------------------------------------------------//
 842:src/sim900_800.c **** char GSMSendCommand (char *ptrCommand, unsigned short timeOut, unsigned char rta, char *ptrRta)
 843:src/sim900_800.c **** {
 1948              		.loc 1 843 0
 1949              		.cfi_startproc
ARM GAS  /tmp/cc4fp2Bh.s 			page 51


 1950 0000 00B5     		push	{lr}	@
 1951              	.LCFI8:
 1952              		.cfi_def_cfa_offset 4
 1953              		.cfi_offset 14, -4
 1954 0002 85B0     		sub	sp, sp, #20	@,,
 1955              	.LCFI9:
 1956              		.cfi_def_cfa_offset 24
 1957 0004 0390     		str	r0, [sp, #12]	@ ptrCommand, ptrCommand
 1958 0006 0800     		movs	r0, r1	@ tmp127, timeOut
 1959 0008 1100     		movs	r1, r2	@ tmp130, rta
 1960 000a 0193     		str	r3, [sp, #4]	@ ptrRta, ptrRta
 1961 000c 0A23     		movs	r3, #10	@ tmp128,
 1962 000e 6B44     		add	r3, r3, sp	@ tmp128,
 1963 0010 021C     		adds	r2, r0, #0	@ tmp129, tmp127
 1964 0012 1A80     		strh	r2, [r3]	@ tmp129, timeOut
 1965 0014 0923     		movs	r3, #9	@ tmp131,
 1966 0016 6B44     		add	r3, r3, sp	@ tmp131,
 1967 0018 0A1C     		adds	r2, r1, #0	@ tmp132, tmp130
 1968 001a 1A70     		strb	r2, [r3]	@ tmp132, rta
 844:src/sim900_800.c **** 	switch(GSMSendCommandState)
 1969              		.loc 1 844 0
 1970 001c 474B     		ldr	r3, .L143	@ tmp133,
 1971 001e 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandState
 1972 0020 012B     		cmp	r3, #1	@ D.7848,
 1973 0022 1AD0     		beq	.L127	@,
 1974 0024 02DC     		bgt	.L128	@,
 1975 0026 002B     		cmp	r3, #0	@ D.7848,
 1976 0028 05D0     		beq	.L129	@,
 1977 002a 56E0     		b	.L126	@
 1978              	.L128:
 1979 002c 022B     		cmp	r3, #2	@ D.7848,
 1980 002e 34D0     		beq	.L130	@,
 1981 0030 032B     		cmp	r3, #3	@ D.7848,
 1982 0032 46D0     		beq	.L131	@,
 1983 0034 51E0     		b	.L126	@
 1984              	.L129:
 845:src/sim900_800.c **** 	{
 846:src/sim900_800.c **** 		case 0:
 847:src/sim900_800.c **** 			GSMSendCommandFlag = 0;
 1985              		.loc 1 847 0
 1986 0036 424B     		ldr	r3, .L143+4	@ tmp134,
 1987 0038 0022     		movs	r2, #0	@ tmp135,
 1988 003a 1A70     		strb	r2, [r3]	@ tmp136, GSMSendCommandFlag
 848:src/sim900_800.c **** 			GSMSendCommandTimeOut = timeOut;
 1989              		.loc 1 848 0
 1990 003c 414B     		ldr	r3, .L143+8	@ tmp137,
 1991 003e 0A22     		movs	r2, #10	@ tmp138,
 1992 0040 6A44     		add	r2, r2, sp	@ tmp138,
 1993 0042 1288     		ldrh	r2, [r2]	@ tmp139, timeOut
 1994 0044 1A80     		strh	r2, [r3]	@ tmp139, GSMSendCommandTimeOut
 849:src/sim900_800.c **** 			GSMSendCommandState++;
 1995              		.loc 1 849 0
 1996 0046 3D4B     		ldr	r3, .L143	@ tmp140,
 1997 0048 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandState
 1998 004a 0133     		adds	r3, r3, #1	@ tmp141,
 1999 004c DAB2     		uxtb	r2, r3	@ D.7847, tmp141
 2000 004e 3B4B     		ldr	r3, .L143	@ tmp142,
ARM GAS  /tmp/cc4fp2Bh.s 			page 52


 2001 0050 1A70     		strb	r2, [r3]	@ tmp143, GSMSendCommandState
 850:src/sim900_800.c **** 			GSMSendCommandIntento = 0;
 2002              		.loc 1 850 0
 2003 0052 3D4B     		ldr	r3, .L143+12	@ tmp144,
 2004 0054 0022     		movs	r2, #0	@ tmp145,
 2005 0056 1A70     		strb	r2, [r3]	@ tmp146, GSMSendCommandIntento
 851:src/sim900_800.c **** 			break;
 2006              		.loc 1 851 0
 2007 0058 46E0     		b	.L132	@
 2008              	.L127:
 852:src/sim900_800.c **** 
 853:src/sim900_800.c **** 		case 1:
 854:src/sim900_800.c **** 			if (rta)
 2009              		.loc 1 854 0
 2010 005a 0923     		movs	r3, #9	@ tmp147,
 2011 005c 6B44     		add	r3, r3, sp	@ tmp147,
 2012 005e 1B78     		ldrb	r3, [r3]	@ tmp148, rta
 2013 0060 002B     		cmp	r3, #0	@ tmp148,
 2014 0062 06D0     		beq	.L133	@,
 855:src/sim900_800.c **** 			{
 856:src/sim900_800.c **** 				GSMSendCommandState = 2;
 2015              		.loc 1 856 0
 2016 0064 354B     		ldr	r3, .L143	@ tmp149,
 2017 0066 0222     		movs	r2, #2	@ tmp150,
 2018 0068 1A70     		strb	r2, [r3]	@ tmp151, GSMSendCommandState
 857:src/sim900_800.c **** 				GSMSendCommandFlag = 1;
 2019              		.loc 1 857 0
 2020 006a 354B     		ldr	r3, .L143+4	@ tmp152,
 2021 006c 0122     		movs	r2, #1	@ tmp153,
 2022 006e 1A70     		strb	r2, [r3]	@ tmp154, GSMSendCommandFlag
 2023 0070 05E0     		b	.L134	@
 2024              	.L133:
 858:src/sim900_800.c **** 			}
 859:src/sim900_800.c **** 			else
 860:src/sim900_800.c **** 			{
 861:src/sim900_800.c **** 				GSMSendCommandState = 3;
 2025              		.loc 1 861 0
 2026 0072 324B     		ldr	r3, .L143	@ tmp155,
 2027 0074 0322     		movs	r2, #3	@ tmp156,
 2028 0076 1A70     		strb	r2, [r3]	@ tmp157, GSMSendCommandState
 862:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 2029              		.loc 1 862 0
 2030 0078 314B     		ldr	r3, .L143+4	@ tmp158,
 2031 007a 0322     		movs	r2, #3	@ tmp159,
 2032 007c 1A70     		strb	r2, [r3]	@ tmp160, GSMSendCommandFlag
 2033              	.L134:
 863:src/sim900_800.c **** 			}
 864:src/sim900_800.c **** 
 865:src/sim900_800.c **** 			if (GSMSendCommandIntento == 1)
 2034              		.loc 1 865 0
 2035 007e 324B     		ldr	r3, .L143+12	@ tmp161,
 2036 0080 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandIntento
 2037 0082 012B     		cmp	r3, #1	@ D.7847,
 2038 0084 04D1     		bne	.L135	@,
 866:src/sim900_800.c **** 			{
 867:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2039              		.loc 1 867 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 53


 2040 0086 2D4B     		ldr	r3, .L143	@ tmp162,
 2041 0088 0022     		movs	r2, #0	@ tmp163,
 2042 008a 1A70     		strb	r2, [r3]	@ tmp164, GSMSendCommandState
 868:src/sim900_800.c **** 				return 4;
 2043              		.loc 1 868 0
 2044 008c 0423     		movs	r3, #4	@ D.7847,
 2045 008e 51E0     		b	.L136	@
 2046              	.L135:
 869:src/sim900_800.c **** 			}
 870:src/sim900_800.c **** 			else
 871:src/sim900_800.c **** 			{
 872:src/sim900_800.c **** 				UARTGSMSend(&ptrCommand[0]);
 2047              		.loc 1 872 0
 2048 0090 039B     		ldr	r3, [sp, #12]	@ tmp165, ptrCommand
 2049 0092 1800     		movs	r0, r3	@, tmp165
 2050 0094 FFF7FEFF 		bl	Usart1Send	@
 873:src/sim900_800.c **** 			}
 874:src/sim900_800.c **** 			break;
 2051              		.loc 1 874 0
 2052 0098 26E0     		b	.L132	@
 2053              	.L130:
 875:src/sim900_800.c **** 
 876:src/sim900_800.c **** 		case 2:
 877:src/sim900_800.c **** 			//Espera rta.
 878:src/sim900_800.c **** 			if (GSMSendCommandFlag == 2)
 2054              		.loc 1 878 0
 2055 009a 294B     		ldr	r3, .L143+4	@ tmp166,
 2056 009c 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandFlag
 2057 009e 022B     		cmp	r3, #2	@ D.7847,
 2058 00a0 1FD1     		bne	.L141	@,
 879:src/sim900_800.c **** 			{
 880:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 2059              		.loc 1 880 0
 2060 00a2 274B     		ldr	r3, .L143+4	@ tmp167,
 2061 00a4 0322     		movs	r2, #3	@ tmp168,
 2062 00a6 1A70     		strb	r2, [r3]	@ tmp169, GSMSendCommandFlag
 881:src/sim900_800.c **** 				GSMSendCommandState++;
 2063              		.loc 1 881 0
 2064 00a8 244B     		ldr	r3, .L143	@ tmp170,
 2065 00aa 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandState
 2066 00ac 0133     		adds	r3, r3, #1	@ tmp171,
 2067 00ae DAB2     		uxtb	r2, r3	@ D.7847, tmp171
 2068 00b0 224B     		ldr	r3, .L143	@ tmp172,
 2069 00b2 1A70     		strb	r2, [r3]	@ tmp173, GSMSendCommandState
 882:src/sim900_800.c **** 				//Rta obtenida.
 883:src/sim900_800.c **** 				strcpy((char *)ptrRta, (const char *)&buffUARTGSMrx2[0]);
 2070              		.loc 1 883 0
 2071 00b4 254A     		ldr	r2, .L143+16	@ tmp174,
 2072 00b6 019B     		ldr	r3, [sp, #4]	@ tmp175, ptrRta
 2073 00b8 1100     		movs	r1, r2	@, tmp174
 2074 00ba 1800     		movs	r0, r3	@, tmp175
 2075 00bc FFF7FEFF 		bl	strcpy	@
 884:src/sim900_800.c **** 			}
 885:src/sim900_800.c **** 			break;
 2076              		.loc 1 885 0
 2077 00c0 0FE0     		b	.L141	@
 2078              	.L131:
ARM GAS  /tmp/cc4fp2Bh.s 			page 54


 886:src/sim900_800.c **** 
 887:src/sim900_800.c **** 		case 3:
 888:src/sim900_800.c **** 			//Espera OK.
 889:src/sim900_800.c **** 			if (GSMSendCommandFlag == 4)
 2079              		.loc 1 889 0
 2080 00c2 1F4B     		ldr	r3, .L143+4	@ tmp176,
 2081 00c4 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandFlag
 2082 00c6 042B     		cmp	r3, #4	@ D.7847,
 2083 00c8 0DD1     		bne	.L142	@,
 890:src/sim900_800.c **** 			{
 891:src/sim900_800.c **** 				//OK recibido.
 892:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 2084              		.loc 1 892 0
 2085 00ca 1D4B     		ldr	r3, .L143+4	@ tmp177,
 2086 00cc 0022     		movs	r2, #0	@ tmp178,
 2087 00ce 1A70     		strb	r2, [r3]	@ tmp179, GSMSendCommandFlag
 893:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2088              		.loc 1 893 0
 2089 00d0 1A4B     		ldr	r3, .L143	@ tmp180,
 2090 00d2 0022     		movs	r2, #0	@ tmp181,
 2091 00d4 1A70     		strb	r2, [r3]	@ tmp182, GSMSendCommandState
 894:src/sim900_800.c **** 				return 2;
 2092              		.loc 1 894 0
 2093 00d6 0223     		movs	r3, #2	@ D.7847,
 2094 00d8 2CE0     		b	.L136	@
 2095              	.L126:
 895:src/sim900_800.c **** 			}
 896:src/sim900_800.c **** 			break;
 897:src/sim900_800.c **** 
 898:src/sim900_800.c **** 		default:
 899:src/sim900_800.c **** 			GSMSendCommandState = 0;
 2096              		.loc 1 899 0
 2097 00da 184B     		ldr	r3, .L143	@ tmp183,
 2098 00dc 0022     		movs	r2, #0	@ tmp184,
 2099 00de 1A70     		strb	r2, [r3]	@ tmp185, GSMSendCommandState
 900:src/sim900_800.c **** 			break;
 2100              		.loc 1 900 0
 2101 00e0 02E0     		b	.L132	@
 2102              	.L141:
 885:src/sim900_800.c **** 
 2103              		.loc 1 885 0
 2104 00e2 C046     		nop
 2105 00e4 00E0     		b	.L132	@
 2106              	.L142:
 896:src/sim900_800.c **** 
 2107              		.loc 1 896 0
 2108 00e6 C046     		nop
 2109              	.L132:
 901:src/sim900_800.c **** 	}
 902:src/sim900_800.c **** 
 903:src/sim900_800.c **** 	if (GSMSendCommandFlag == 5)
 2110              		.loc 1 903 0
 2111 00e8 154B     		ldr	r3, .L143+4	@ tmp186,
 2112 00ea 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandFlag
 2113 00ec 052B     		cmp	r3, #5	@ D.7847,
 2114 00ee 0DD1     		bne	.L139	@,
 904:src/sim900_800.c **** 	{
ARM GAS  /tmp/cc4fp2Bh.s 			page 55


 905:src/sim900_800.c **** 		GSMSendCommandIntento++;
 2115              		.loc 1 905 0
 2116 00f0 154B     		ldr	r3, .L143+12	@ tmp187,
 2117 00f2 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandIntento
 2118 00f4 0133     		adds	r3, r3, #1	@ tmp188,
 2119 00f6 DAB2     		uxtb	r2, r3	@ D.7847, tmp188
 2120 00f8 134B     		ldr	r3, .L143+12	@ tmp189,
 2121 00fa 1A70     		strb	r2, [r3]	@ tmp190, GSMSendCommandIntento
 906:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 2122              		.loc 1 906 0
 2123 00fc 114B     		ldr	r3, .L143+8	@ tmp191,
 2124 00fe 0A22     		movs	r2, #10	@ tmp192,
 2125 0100 6A44     		add	r2, r2, sp	@ tmp192,
 2126 0102 1288     		ldrh	r2, [r2]	@ tmp193, timeOut
 2127 0104 1A80     		strh	r2, [r3]	@ tmp193, GSMSendCommandTimeOut
 907:src/sim900_800.c **** 		GSMSendCommandState = 1;
 2128              		.loc 1 907 0
 2129 0106 0D4B     		ldr	r3, .L143	@ tmp194,
 2130 0108 0122     		movs	r2, #1	@ tmp195,
 2131 010a 1A70     		strb	r2, [r3]	@ tmp196, GSMSendCommandState
 2132              	.L139:
 908:src/sim900_800.c **** 	}
 909:src/sim900_800.c **** 
 910:src/sim900_800.c **** 	if (!GSMSendCommandTimeOut)
 2133              		.loc 1 910 0
 2134 010c 0D4B     		ldr	r3, .L143+8	@ tmp197,
 2135 010e 1B88     		ldrh	r3, [r3]	@ tmp198, GSMSendCommandTimeOut
 2136 0110 9BB2     		uxth	r3, r3	@ D.7849, tmp198
 2137 0112 002B     		cmp	r3, #0	@ D.7849,
 2138 0114 0DD1     		bne	.L140	@,
 911:src/sim900_800.c **** 	{
 912:src/sim900_800.c **** 		GSMSendCommandIntento++;
 2139              		.loc 1 912 0
 2140 0116 0C4B     		ldr	r3, .L143+12	@ tmp199,
 2141 0118 1B78     		ldrb	r3, [r3]	@ D.7847, GSMSendCommandIntento
 2142 011a 0133     		adds	r3, r3, #1	@ tmp200,
 2143 011c DAB2     		uxtb	r2, r3	@ D.7847, tmp200
 2144 011e 0A4B     		ldr	r3, .L143+12	@ tmp201,
 2145 0120 1A70     		strb	r2, [r3]	@ tmp202, GSMSendCommandIntento
 913:src/sim900_800.c **** 		GSMSendCommandTimeOut = timeOut;
 2146              		.loc 1 913 0
 2147 0122 084B     		ldr	r3, .L143+8	@ tmp203,
 2148 0124 0A22     		movs	r2, #10	@ tmp204,
 2149 0126 6A44     		add	r2, r2, sp	@ tmp204,
 2150 0128 1288     		ldrh	r2, [r2]	@ tmp205, timeOut
 2151 012a 1A80     		strh	r2, [r3]	@ tmp205, GSMSendCommandTimeOut
 914:src/sim900_800.c **** 		GSMSendCommandState = 1;
 2152              		.loc 1 914 0
 2153 012c 034B     		ldr	r3, .L143	@ tmp206,
 2154 012e 0122     		movs	r2, #1	@ tmp207,
 2155 0130 1A70     		strb	r2, [r3]	@ tmp208, GSMSendCommandState
 2156              	.L140:
 915:src/sim900_800.c **** 	}
 916:src/sim900_800.c **** 
 917:src/sim900_800.c **** 	return 1;
 2157              		.loc 1 917 0
 2158 0132 0123     		movs	r3, #1	@ D.7847,
ARM GAS  /tmp/cc4fp2Bh.s 			page 56


 2159              	.L136:
 918:src/sim900_800.c **** }
 2160              		.loc 1 918 0
 2161 0134 1800     		movs	r0, r3	@, <retval>
 2162 0136 05B0     		add	sp, sp, #20	@,,
 2163              		@ sp needed	@
 2164 0138 00BD     		pop	{pc}
 2165              	.L144:
 2166 013a C046     		.align	2
 2167              	.L143:
 2168 013c 00000000 		.word	GSMSendCommandState
 2169 0140 00000000 		.word	GSMSendCommandFlag
 2170 0144 00000000 		.word	GSMSendCommandTimeOut
 2171 0148 00000000 		.word	GSMSendCommandIntento
 2172 014c 00000000 		.word	buffUARTGSMrx2
 2173              		.cfi_endproc
 2174              	.LFE28:
 2175              		.size	GSMSendCommand, .-GSMSendCommand
 2176              		.section	.rodata
 2177 0083 00       		.align	2
 2178              	.LC76:
 2179 0084 41540D0A 		.ascii	"AT\015\012\000"
 2179      00
 2180 0089 000000   		.align	2
 2181              	.LC78:
 2182 008c 41544530 		.ascii	"ATE0\015\012\000"
 2182      0D0A00
 2183 0093 00       		.align	2
 2184              	.LC80:
 2185 0094 41542B43 		.ascii	"AT+CMGF=1\015\012\000"
 2185      4D47463D 
 2185      310D0A00 
 2186              		.align	2
 2187              	.LC82:
 2188 00a0 41542B43 		.ascii	"AT+CSCS=\"GSM\"\015\012\000"
 2188      5343533D 
 2188      2247534D 
 2188      220D0A00 
 2189              		.align	2
 2190              	.LC84:
 2191 00b0 41542B43 		.ascii	"AT+CSMP=49,255,0,241\015\012\000"
 2191      534D503D 
 2191      34392C32 
 2191      35352C30 
 2191      2C323431 
 2192 00c7 00       		.align	2
 2193              	.LC86:
 2194 00c8 41542657 		.ascii	"AT&W\015\012\000"
 2194      0D0A00
 2195              		.section	.text.GSM_Config,"ax",%progbits
 2196              		.align	2
 2197              		.global	GSM_Config
 2198              		.code	16
 2199              		.thumb_func
 2200              		.type	GSM_Config, %function
 2201              	GSM_Config:
 2202              	.LFB29:
ARM GAS  /tmp/cc4fp2Bh.s 			page 57


 919:src/sim900_800.c **** 
 920:src/sim900_800.c **** //---------------------------------------------------------------//
 921:src/sim900_800.c **** //Configuracion del modulo GSM.
 922:src/sim900_800.c **** //---------------------------------------------------------------//
 923:src/sim900_800.c **** //
 924:src/sim900_800.c **** //Wait: 	0
 925:src/sim900_800.c **** //OK:		1
 926:src/sim900_800.c **** //ERR:	2
 927:src/sim900_800.c **** //TO:		3
 928:src/sim900_800.c **** //---------------------------------------------------------------//
 929:src/sim900_800.c **** char GSM_Config(unsigned short timeOut)
 930:src/sim900_800.c **** {
 2203              		.loc 1 930 0
 2204              		.cfi_startproc
 2205 0000 10B5     		push	{r4, lr}	@
 2206              	.LCFI10:
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 4, -8
 2209              		.cfi_offset 14, -4
 2210 0002 84B0     		sub	sp, sp, #16	@,,
 2211              	.LCFI11:
 2212              		.cfi_def_cfa_offset 24
 2213 0004 0200     		movs	r2, r0	@ tmp151, timeOut
 2214 0006 6B46     		mov	r3, sp	@ tmp335,
 2215 0008 0633     		adds	r3, r3, #6	@ tmp152,
 2216 000a 1A80     		strh	r2, [r3]	@ tmp153, timeOut
 931:src/sim900_800.c **** 	unsigned char i;
 932:src/sim900_800.c **** 
 933:src/sim900_800.c **** 	switch(GSMConfigState)
 2217              		.loc 1 933 0
 2218 000c AE4B     		ldr	r3, .L189	@ tmp154,
 2219 000e 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2220 0010 092B     		cmp	r3, #9	@ D.7852,
 2221 0012 00D9     		bls	.LCB1680	@
 2222 0014 34E1     		b	.L146	@long jump	@
 2223              	.LCB1680:
 2224 0016 9A00     		lsls	r2, r3, #2	@ tmp155, D.7852,
 2225 0018 AC4B     		ldr	r3, .L189+4	@ tmp157,
 2226 001a D318     		adds	r3, r2, r3	@ tmp156, tmp155, tmp157
 2227 001c 1B68     		ldr	r3, [r3]	@ tmp158,
 2228 001e 9F46     		mov	pc, r3	@ tmp158
 2229              		.section	.rodata.GSM_Config,"a",%progbits
 2230              		.align	2
 2231              	.L148:
 2232 0000 20000000 		.word	.L147
 2233 0004 48000000 		.word	.L149
 2234 0008 BE000000 		.word	.L150
 2235 000c E2000000 		.word	.L151
 2236 0010 20010000 		.word	.L152
 2237 0014 34010000 		.word	.L153
 2238 0018 78010000 		.word	.L154
 2239 001c BC010000 		.word	.L155
 2240 0020 FE010000 		.word	.L156
 2241 0024 40020000 		.word	.L157
 2242              		.section	.text.GSM_Config
 2243              	.L147:
 934:src/sim900_800.c **** 	{
ARM GAS  /tmp/cc4fp2Bh.s 			page 58


 935:src/sim900_800.c **** 		case 0:
 936:src/sim900_800.c **** 			GSM_NRESET_ON;
 2244              		.loc 1 936 0
 2245              		.syntax divided
 2246              	@ 936 "src/sim900_800.c" 1
 2247 0020 C046     		nop 
 2248              		
 2249              	@ 0 "" 2
 937:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 2250              		.loc 1 937 0
 2251              		.thumb
 2252              		.syntax unified
 2253 0022 9023     		movs	r3, #144	@ tmp334,
 2254 0024 DB05     		lsls	r3, r3, #23	@ D.7854, tmp334,
 2255 0026 8022     		movs	r2, #128	@ tmp159,
 2256 0028 9A61     		str	r2, [r3, #24]	@ tmp159, _69->BSRR
 938:src/sim900_800.c **** 			GSMConfigTime = 0;
 2257              		.loc 1 938 0
 2258 002a A94B     		ldr	r3, .L189+8	@ tmp160,
 2259 002c 0022     		movs	r2, #0	@ tmp161,
 2260 002e 1A80     		strh	r2, [r3]	@ tmp162, GSMConfigTime
 939:src/sim900_800.c **** 			GSMConfigTimeOut = timeOut;
 2261              		.loc 1 939 0
 2262 0030 A84B     		ldr	r3, .L189+12	@ tmp163,
 2263 0032 6A46     		mov	r2, sp	@ tmp336,
 2264 0034 0632     		adds	r2, r2, #6	@ tmp164,
 2265 0036 1288     		ldrh	r2, [r2]	@ tmp165, timeOut
 2266 0038 1A80     		strh	r2, [r3]	@ tmp165, GSMConfigTimeOut
 940:src/sim900_800.c **** 			GSMConfigState++;
 2267              		.loc 1 940 0
 2268 003a A34B     		ldr	r3, .L189	@ tmp166,
 2269 003c 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2270 003e 0133     		adds	r3, r3, #1	@ tmp167,
 2271 0040 DAB2     		uxtb	r2, r3	@ D.7851, tmp167
 2272 0042 A14B     		ldr	r3, .L189	@ tmp168,
 2273 0044 1A70     		strb	r2, [r3]	@ tmp169, GSMConfigState
 941:src/sim900_800.c **** 			break;
 2274              		.loc 1 941 0
 2275 0046 30E1     		b	.L158	@
 2276              	.L149:
 942:src/sim900_800.c **** 
 943:src/sim900_800.c **** 		case 1:
 944:src/sim900_800.c **** 
 945:src/sim900_800.c **** 			if (GSM_STATUS)
 2277              		.loc 1 945 0
 2278 0048 9023     		movs	r3, #144	@ tmp333,
 2279 004a DB05     		lsls	r3, r3, #23	@ D.7854, tmp333,
 2280 004c 1B8A     		ldrh	r3, [r3, #16]	@ tmp171,
 2281 004e 9BB2     		uxth	r3, r3	@ D.7853, tmp171
 2282 0050 1A00     		movs	r2, r3	@ D.7852, D.7853
 2283 0052 2023     		movs	r3, #32	@ tmp172,
 2284 0054 1340     		ands	r3, r2	@ D.7852, D.7852
 2285 0056 2AD0     		beq	.L159	@,
 946:src/sim900_800.c **** 			{
 947:src/sim900_800.c **** 				//i = GSMSendCommand ("AT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 948:src/sim900_800.c **** 				i = GSMSendCommand ("AT\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2286              		.loc 1 948 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 59


 2287 0058 9E4B     		ldr	r3, .L189+12	@ tmp173,
 2288 005a 1B88     		ldrh	r3, [r3]	@ tmp174, GSMConfigTimeOut
 2289 005c 99B2     		uxth	r1, r3	@ D.7853, tmp174
 2290 005e 0F24     		movs	r4, #15	@ tmp175,
 2291 0060 6C44     		add	r4, r4, sp	@ tmp175,
 2292 0062 9D4B     		ldr	r3, .L189+16	@ tmp176,
 2293 0064 9D48     		ldr	r0, .L189+20	@ tmp177,
 2294 0066 0022     		movs	r2, #0	@,
 2295 0068 FFF7FEFF 		bl	GSMSendCommand	@
 2296 006c 0300     		movs	r3, r0	@ tmp178,
 2297 006e 2370     		strb	r3, [r4]	@ tmp180, i
 949:src/sim900_800.c **** 
 950:src/sim900_800.c **** 				if ((i == 2) || (i == 3))
 2298              		.loc 1 950 0
 2299 0070 0F23     		movs	r3, #15	@ tmp181,
 2300 0072 6B44     		add	r3, r3, sp	@ tmp181,
 2301 0074 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2302 0076 022B     		cmp	r3, #2	@ tmp182,
 2303 0078 04D0     		beq	.L160	@,
 2304              		.loc 1 950 0 is_stmt 0 discriminator 1
 2305 007a 0F23     		movs	r3, #15	@ tmp183,
 2306 007c 6B44     		add	r3, r3, sp	@ tmp183,
 2307 007e 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2308 0080 032B     		cmp	r3, #3	@ tmp184,
 2309 0082 06D1     		bne	.L161	@,
 2310              	.L160:
 951:src/sim900_800.c **** 				{
 952:src/sim900_800.c **** 					GSMConfigState += 4;
 2311              		.loc 1 952 0 is_stmt 1
 2312 0084 904B     		ldr	r3, .L189	@ tmp185,
 2313 0086 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2314 0088 0433     		adds	r3, r3, #4	@ tmp186,
 2315 008a DAB2     		uxtb	r2, r3	@ D.7851, tmp186
 2316 008c 8E4B     		ldr	r3, .L189	@ tmp187,
 2317 008e 1A70     		strb	r2, [r3]	@ tmp188, GSMConfigState
 953:src/sim900_800.c **** 					GSM_NRESET_ON;
 2318              		.loc 1 953 0
 2319              		.syntax divided
 2320              	@ 953 "src/sim900_800.c" 1
 2321 0090 C046     		nop 
 2322              		
 2323              	@ 0 "" 2
 2324              		.thumb
 2325              		.syntax unified
 2326              	.L161:
 954:src/sim900_800.c **** 				}
 955:src/sim900_800.c **** 
 956:src/sim900_800.c **** 				if (i == 4)
 2327              		.loc 1 956 0
 2328 0092 0F23     		movs	r3, #15	@ tmp189,
 2329 0094 6B44     		add	r3, r3, sp	@ tmp189,
 2330 0096 1B78     		ldrb	r3, [r3]	@ tmp190, i
 2331 0098 042B     		cmp	r3, #4	@ tmp190,
 2332 009a 00D0     		beq	.LCB1759	@
 2333 009c F4E0     		b	.L180	@long jump	@
 2334              	.LCB1759:
 957:src/sim900_800.c **** 				{
ARM GAS  /tmp/cc4fp2Bh.s 			page 60


 958:src/sim900_800.c **** 					GSMConfigState += 1;
 2335              		.loc 1 958 0
 2336 009e 8A4B     		ldr	r3, .L189	@ tmp191,
 2337 00a0 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2338 00a2 0133     		adds	r3, r3, #1	@ tmp192,
 2339 00a4 DAB2     		uxtb	r2, r3	@ D.7851, tmp192
 2340 00a6 884B     		ldr	r3, .L189	@ tmp193,
 2341 00a8 1A70     		strb	r2, [r3]	@ tmp194, GSMConfigState
 959:src/sim900_800.c **** 					GSM_NRESET_ON;
 2342              		.loc 1 959 0
 2343              		.syntax divided
 2344              	@ 959 "src/sim900_800.c" 1
 2345 00aa C046     		nop 
 2346              		
 2347              	@ 0 "" 2
 960:src/sim900_800.c **** 				}
 961:src/sim900_800.c **** 
 962:src/sim900_800.c **** 			}
 963:src/sim900_800.c **** 			else
 964:src/sim900_800.c **** 			{
 965:src/sim900_800.c **** 				GSMConfigState += 2;
 966:src/sim900_800.c **** 				GSM_NRESET_ON;
 967:src/sim900_800.c **** 			}
 968:src/sim900_800.c **** 			break;
 2348              		.loc 1 968 0
 2349              		.thumb
 2350              		.syntax unified
 2351 00ac ECE0     		b	.L180	@
 2352              	.L159:
 965:src/sim900_800.c **** 				GSM_NRESET_ON;
 2353              		.loc 1 965 0
 2354 00ae 864B     		ldr	r3, .L189	@ tmp195,
 2355 00b0 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2356 00b2 0233     		adds	r3, r3, #2	@ tmp196,
 2357 00b4 DAB2     		uxtb	r2, r3	@ D.7851, tmp196
 2358 00b6 844B     		ldr	r3, .L189	@ tmp197,
 2359 00b8 1A70     		strb	r2, [r3]	@ tmp198, GSMConfigState
 966:src/sim900_800.c **** 			}
 2360              		.loc 1 966 0
 2361              		.syntax divided
 2362              	@ 966 "src/sim900_800.c" 1
 2363 00ba C046     		nop 
 2364              		
 2365              	@ 0 "" 2
 2366              		.loc 1 968 0
 2367              		.thumb
 2368              		.syntax unified
 2369 00bc E4E0     		b	.L180	@
 2370              	.L150:
 969:src/sim900_800.c **** 
 970:src/sim900_800.c **** 		case 2:
 971:src/sim900_800.c **** 			//Reinicio del modulo.
 972:src/sim900_800.c **** 			GSM_NRESET_OFF;
 2371              		.loc 1 972 0
 2372              		.syntax divided
 2373              	@ 972 "src/sim900_800.c" 1
 2374 00be C046     		nop 
ARM GAS  /tmp/cc4fp2Bh.s 			page 61


 2375              		
 2376              	@ 0 "" 2
 973:src/sim900_800.c **** 			if(!GSM_STATUS)
 2377              		.loc 1 973 0
 2378              		.thumb
 2379              		.syntax unified
 2380 00c0 9023     		movs	r3, #144	@ tmp332,
 2381 00c2 DB05     		lsls	r3, r3, #23	@ D.7854, tmp332,
 2382 00c4 1B8A     		ldrh	r3, [r3, #16]	@ tmp200,
 2383 00c6 9BB2     		uxth	r3, r3	@ D.7853, tmp200
 2384 00c8 1A00     		movs	r2, r3	@ D.7852, D.7853
 2385 00ca 2023     		movs	r3, #32	@ tmp201,
 2386 00cc 1340     		ands	r3, r2	@ D.7852, D.7852
 2387 00ce 00D0     		beq	.LCB1791	@
 2388 00d0 DCE0     		b	.L181	@long jump	@
 2389              	.LCB1791:
 974:src/sim900_800.c **** 			{
 975:src/sim900_800.c **** 				GSMConfigState++;
 2390              		.loc 1 975 0
 2391 00d2 7D4B     		ldr	r3, .L189	@ tmp202,
 2392 00d4 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2393 00d6 0133     		adds	r3, r3, #1	@ tmp203,
 2394 00d8 DAB2     		uxtb	r2, r3	@ D.7851, tmp203
 2395 00da 7B4B     		ldr	r3, .L189	@ tmp204,
 2396 00dc 1A70     		strb	r2, [r3]	@ tmp205, GSMConfigState
 976:src/sim900_800.c **** 				GSM_NRESET_ON;
 2397              		.loc 1 976 0
 2398              		.syntax divided
 2399              	@ 976 "src/sim900_800.c" 1
 2400 00de C046     		nop 
 2401              		
 2402              	@ 0 "" 2
 977:src/sim900_800.c **** 			}
 978:src/sim900_800.c **** 			break;
 2403              		.loc 1 978 0
 2404              		.thumb
 2405              		.syntax unified
 2406 00e0 D4E0     		b	.L181	@
 2407              	.L151:
 979:src/sim900_800.c **** 
 980:src/sim900_800.c **** 		case 3:
 981:src/sim900_800.c **** 
 982:src/sim900_800.c **** 			//Encendido del modulo.
 983:src/sim900_800.c **** 			i = GSM_Start();
 2408              		.loc 1 983 0
 2409 00e2 0F24     		movs	r4, #15	@ tmp206,
 2410 00e4 6C44     		add	r4, r4, sp	@ tmp206,
 2411 00e6 FFF7FEFF 		bl	GSM_Start	@
 2412 00ea 0300     		movs	r3, r0	@ tmp207,
 2413 00ec 2370     		strb	r3, [r4]	@ tmp209, i
 984:src/sim900_800.c **** 
 985:src/sim900_800.c **** 			if (i == 2)
 2414              		.loc 1 985 0
 2415 00ee 0F23     		movs	r3, #15	@ tmp210,
 2416 00f0 6B44     		add	r3, r3, sp	@ tmp210,
 2417 00f2 1B78     		ldrb	r3, [r3]	@ tmp211, i
 2418 00f4 022B     		cmp	r3, #2	@ tmp211,
ARM GAS  /tmp/cc4fp2Bh.s 			page 62


 2419 00f6 08D1     		bne	.L165	@,
 986:src/sim900_800.c **** 			{
 987:src/sim900_800.c **** 				GSMConfigState++;
 2420              		.loc 1 987 0
 2421 00f8 734B     		ldr	r3, .L189	@ tmp212,
 2422 00fa 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2423 00fc 0133     		adds	r3, r3, #1	@ tmp213,
 2424 00fe DAB2     		uxtb	r2, r3	@ D.7851, tmp213
 2425 0100 714B     		ldr	r3, .L189	@ tmp214,
 2426 0102 1A70     		strb	r2, [r3]	@ tmp215, GSMConfigState
 988:src/sim900_800.c **** 				GSMConfigTime = 20;
 2427              		.loc 1 988 0
 2428 0104 724B     		ldr	r3, .L189+8	@ tmp216,
 2429 0106 1422     		movs	r2, #20	@ tmp217,
 2430 0108 1A80     		strh	r2, [r3]	@ tmp218, GSMConfigTime
 2431              	.L165:
 989:src/sim900_800.c **** 			}
 990:src/sim900_800.c **** 
 991:src/sim900_800.c **** 			if (i == 4)
 2432              		.loc 1 991 0
 2433 010a 0F23     		movs	r3, #15	@ tmp219,
 2434 010c 6B44     		add	r3, r3, sp	@ tmp219,
 2435 010e 1B78     		ldrb	r3, [r3]	@ tmp220, i
 2436 0110 042B     		cmp	r3, #4	@ tmp220,
 2437 0112 00D0     		beq	.LCB1828	@
 2438 0114 BCE0     		b	.L182	@long jump	@
 2439              	.LCB1828:
 992:src/sim900_800.c **** 			{
 993:src/sim900_800.c **** 				GSMConfigState = 1;
 2440              		.loc 1 993 0
 2441 0116 6C4B     		ldr	r3, .L189	@ tmp221,
 2442 0118 0122     		movs	r2, #1	@ tmp222,
 2443 011a 1A70     		strb	r2, [r3]	@ tmp223, GSMConfigState
 994:src/sim900_800.c **** 				return 2;
 2444              		.loc 1 994 0
 2445 011c 0223     		movs	r3, #2	@ D.7851,
 2446 011e CFE0     		b	.L167	@
 2447              	.L152:
 995:src/sim900_800.c **** 			}
 996:src/sim900_800.c **** 			break;
 997:src/sim900_800.c **** 
 998:src/sim900_800.c **** 		case 4:
 999:src/sim900_800.c **** 
1000:src/sim900_800.c **** 			if (GSMConfigTime == 0)
 2448              		.loc 1 1000 0
 2449 0120 6B4B     		ldr	r3, .L189+8	@ tmp224,
 2450 0122 1B88     		ldrh	r3, [r3]	@ tmp225, GSMConfigTime
 2451 0124 9BB2     		uxth	r3, r3	@ D.7853, tmp225
 2452 0126 002B     		cmp	r3, #0	@ D.7853,
 2453 0128 00D0     		beq	.LCB1841	@
 2454 012a B3E0     		b	.L183	@long jump	@
 2455              	.LCB1841:
1001:src/sim900_800.c **** 				GSMConfigState = 1;
 2456              		.loc 1 1001 0
 2457 012c 664B     		ldr	r3, .L189	@ tmp226,
 2458 012e 0122     		movs	r2, #1	@ tmp227,
 2459 0130 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigState
ARM GAS  /tmp/cc4fp2Bh.s 			page 63


1002:src/sim900_800.c **** 			break;
 2460              		.loc 1 1002 0
 2461 0132 AFE0     		b	.L183	@
 2462              	.L153:
1003:src/sim900_800.c **** 
1004:src/sim900_800.c **** 		case 5:
1005:src/sim900_800.c **** 
1006:src/sim900_800.c **** 			//Comandos para configurar.
1007:src/sim900_800.c **** 			//ATE0.
1008:src/sim900_800.c **** 			//i = GSMSendCommand ("ATE0\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1009:src/sim900_800.c **** 			i = GSMSendCommand ("ATE0\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2463              		.loc 1 1009 0
 2464 0134 674B     		ldr	r3, .L189+12	@ tmp229,
 2465 0136 1B88     		ldrh	r3, [r3]	@ tmp230, GSMConfigTimeOut
 2466 0138 99B2     		uxth	r1, r3	@ D.7853, tmp230
 2467 013a 0F24     		movs	r4, #15	@ tmp231,
 2468 013c 6C44     		add	r4, r4, sp	@ tmp231,
 2469 013e 664B     		ldr	r3, .L189+16	@ tmp232,
 2470 0140 6748     		ldr	r0, .L189+24	@ tmp233,
 2471 0142 0022     		movs	r2, #0	@,
 2472 0144 FFF7FEFF 		bl	GSMSendCommand	@
 2473 0148 0300     		movs	r3, r0	@ tmp234,
 2474 014a 2370     		strb	r3, [r4]	@ tmp236, i
1010:src/sim900_800.c **** 
1011:src/sim900_800.c **** 			if (i == 2)
 2475              		.loc 1 1011 0
 2476 014c 0F23     		movs	r3, #15	@ tmp237,
 2477 014e 6B44     		add	r3, r3, sp	@ tmp237,
 2478 0150 1B78     		ldrb	r3, [r3]	@ tmp238, i
 2479 0152 022B     		cmp	r3, #2	@ tmp238,
 2480 0154 05D1     		bne	.L169	@,
1012:src/sim900_800.c **** 			{
1013:src/sim900_800.c **** 				GSMConfigState++;
 2481              		.loc 1 1013 0
 2482 0156 5C4B     		ldr	r3, .L189	@ tmp239,
 2483 0158 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2484 015a 0133     		adds	r3, r3, #1	@ tmp240,
 2485 015c DAB2     		uxtb	r2, r3	@ D.7851, tmp240
 2486 015e 5A4B     		ldr	r3, .L189	@ tmp241,
 2487 0160 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigState
 2488              	.L169:
1014:src/sim900_800.c **** 			}
1015:src/sim900_800.c **** 			if (i > 2)
 2489              		.loc 1 1015 0
 2490 0162 0F23     		movs	r3, #15	@ tmp243,
 2491 0164 6B44     		add	r3, r3, sp	@ tmp243,
 2492 0166 1B78     		ldrb	r3, [r3]	@ tmp244, i
 2493 0168 022B     		cmp	r3, #2	@ tmp244,
 2494 016a 00D8     		bhi	.LCB1877	@
 2495 016c 94E0     		b	.L184	@long jump	@
 2496              	.LCB1877:
1016:src/sim900_800.c **** 			{
1017:src/sim900_800.c **** 				GSMConfigState = 1;
 2497              		.loc 1 1017 0
 2498 016e 564B     		ldr	r3, .L189	@ tmp245,
 2499 0170 0122     		movs	r2, #1	@ tmp246,
 2500 0172 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigState
ARM GAS  /tmp/cc4fp2Bh.s 			page 64


1018:src/sim900_800.c **** 				return 2;
 2501              		.loc 1 1018 0
 2502 0174 0223     		movs	r3, #2	@ D.7851,
 2503 0176 A3E0     		b	.L167	@
 2504              	.L154:
1019:src/sim900_800.c **** 			}
1020:src/sim900_800.c **** 
1021:src/sim900_800.c **** 			break;
1022:src/sim900_800.c **** 
1023:src/sim900_800.c **** 		case 6:
1024:src/sim900_800.c **** 			//AT+CMGF=1
1025:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CMGF=1\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1026:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CMGF=1\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2505              		.loc 1 1026 0
 2506 0178 564B     		ldr	r3, .L189+12	@ tmp248,
 2507 017a 1B88     		ldrh	r3, [r3]	@ tmp249, GSMConfigTimeOut
 2508 017c 99B2     		uxth	r1, r3	@ D.7853, tmp249
 2509 017e 0F24     		movs	r4, #15	@ tmp250,
 2510 0180 6C44     		add	r4, r4, sp	@ tmp250,
 2511 0182 554B     		ldr	r3, .L189+16	@ tmp251,
 2512 0184 5748     		ldr	r0, .L189+28	@ tmp252,
 2513 0186 0022     		movs	r2, #0	@,
 2514 0188 FFF7FEFF 		bl	GSMSendCommand	@
 2515 018c 0300     		movs	r3, r0	@ tmp253,
 2516 018e 2370     		strb	r3, [r4]	@ tmp255, i
1027:src/sim900_800.c **** 
1028:src/sim900_800.c **** 			if (i == 2)
 2517              		.loc 1 1028 0
 2518 0190 0F23     		movs	r3, #15	@ tmp256,
 2519 0192 6B44     		add	r3, r3, sp	@ tmp256,
 2520 0194 1B78     		ldrb	r3, [r3]	@ tmp257, i
 2521 0196 022B     		cmp	r3, #2	@ tmp257,
 2522 0198 05D1     		bne	.L171	@,
1029:src/sim900_800.c **** 			{
1030:src/sim900_800.c **** 				GSMConfigState++;
 2523              		.loc 1 1030 0
 2524 019a 4B4B     		ldr	r3, .L189	@ tmp258,
 2525 019c 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2526 019e 0133     		adds	r3, r3, #1	@ tmp259,
 2527 01a0 DAB2     		uxtb	r2, r3	@ D.7851, tmp259
 2528 01a2 494B     		ldr	r3, .L189	@ tmp260,
 2529 01a4 1A70     		strb	r2, [r3]	@ tmp261, GSMConfigState
 2530              	.L171:
1031:src/sim900_800.c **** 			}
1032:src/sim900_800.c **** 			if (i > 2)
 2531              		.loc 1 1032 0
 2532 01a6 0F23     		movs	r3, #15	@ tmp262,
 2533 01a8 6B44     		add	r3, r3, sp	@ tmp262,
 2534 01aa 1B78     		ldrb	r3, [r3]	@ tmp263, i
 2535 01ac 022B     		cmp	r3, #2	@ tmp263,
 2536 01ae 00D8     		bhi	.LCB1914	@
 2537 01b0 74E0     		b	.L185	@long jump	@
 2538              	.LCB1914:
1033:src/sim900_800.c **** 			{
1034:src/sim900_800.c **** 				GSMConfigState = 1;
 2539              		.loc 1 1034 0
 2540 01b2 454B     		ldr	r3, .L189	@ tmp264,
ARM GAS  /tmp/cc4fp2Bh.s 			page 65


 2541 01b4 0122     		movs	r2, #1	@ tmp265,
 2542 01b6 1A70     		strb	r2, [r3]	@ tmp266, GSMConfigState
1035:src/sim900_800.c **** 				return 2;
 2543              		.loc 1 1035 0
 2544 01b8 0223     		movs	r3, #2	@ D.7851,
 2545 01ba 81E0     		b	.L167	@
 2546              	.L155:
1036:src/sim900_800.c **** 			}
1037:src/sim900_800.c **** 			break;
1038:src/sim900_800.c **** 		case 7:
1039:src/sim900_800.c **** 			//AT+CSCS="GSM"
1040:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1041:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2547              		.loc 1 1041 0
 2548 01bc 454B     		ldr	r3, .L189+12	@ tmp267,
 2549 01be 1B88     		ldrh	r3, [r3]	@ tmp268, GSMConfigTimeOut
 2550 01c0 99B2     		uxth	r1, r3	@ D.7853, tmp268
 2551 01c2 0F24     		movs	r4, #15	@ tmp269,
 2552 01c4 6C44     		add	r4, r4, sp	@ tmp269,
 2553 01c6 444B     		ldr	r3, .L189+16	@ tmp270,
 2554 01c8 4748     		ldr	r0, .L189+32	@ tmp271,
 2555 01ca 0022     		movs	r2, #0	@,
 2556 01cc FFF7FEFF 		bl	GSMSendCommand	@
 2557 01d0 0300     		movs	r3, r0	@ tmp272,
 2558 01d2 2370     		strb	r3, [r4]	@ tmp274, i
1042:src/sim900_800.c **** 
1043:src/sim900_800.c **** 			if (i == 2)
 2559              		.loc 1 1043 0
 2560 01d4 0F23     		movs	r3, #15	@ tmp275,
 2561 01d6 6B44     		add	r3, r3, sp	@ tmp275,
 2562 01d8 1B78     		ldrb	r3, [r3]	@ tmp276, i
 2563 01da 022B     		cmp	r3, #2	@ tmp276,
 2564 01dc 05D1     		bne	.L173	@,
1044:src/sim900_800.c **** 			{
1045:src/sim900_800.c **** 				GSMConfigState++;
 2565              		.loc 1 1045 0
 2566 01de 3A4B     		ldr	r3, .L189	@ tmp277,
 2567 01e0 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2568 01e2 0133     		adds	r3, r3, #1	@ tmp278,
 2569 01e4 DAB2     		uxtb	r2, r3	@ D.7851, tmp278
 2570 01e6 384B     		ldr	r3, .L189	@ tmp279,
 2571 01e8 1A70     		strb	r2, [r3]	@ tmp280, GSMConfigState
 2572              	.L173:
1046:src/sim900_800.c **** 			}
1047:src/sim900_800.c **** 			if (i > 2)
 2573              		.loc 1 1047 0
 2574 01ea 0F23     		movs	r3, #15	@ tmp281,
 2575 01ec 6B44     		add	r3, r3, sp	@ tmp281,
 2576 01ee 1B78     		ldrb	r3, [r3]	@ tmp282, i
 2577 01f0 022B     		cmp	r3, #2	@ tmp282,
 2578 01f2 55D9     		bls	.L186	@,
1048:src/sim900_800.c **** 			{
1049:src/sim900_800.c **** 				GSMConfigState = 1;
 2579              		.loc 1 1049 0
 2580 01f4 344B     		ldr	r3, .L189	@ tmp283,
 2581 01f6 0122     		movs	r2, #1	@ tmp284,
 2582 01f8 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigState
ARM GAS  /tmp/cc4fp2Bh.s 			page 66


1050:src/sim900_800.c **** 				return 2;
 2583              		.loc 1 1050 0
 2584 01fa 0223     		movs	r3, #2	@ D.7851,
 2585 01fc 60E0     		b	.L167	@
 2586              	.L156:
1051:src/sim900_800.c **** 			}
1052:src/sim900_800.c **** 			break;
1053:src/sim900_800.c **** 		case 8:
1054:src/sim900_800.c **** 			//AT+CSMP=49,255,0,241
1055:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1056:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2587              		.loc 1 1056 0
 2588 01fe 354B     		ldr	r3, .L189+12	@ tmp286,
 2589 0200 1B88     		ldrh	r3, [r3]	@ tmp287, GSMConfigTimeOut
 2590 0202 99B2     		uxth	r1, r3	@ D.7853, tmp287
 2591 0204 0F24     		movs	r4, #15	@ tmp288,
 2592 0206 6C44     		add	r4, r4, sp	@ tmp288,
 2593 0208 334B     		ldr	r3, .L189+16	@ tmp289,
 2594 020a 3848     		ldr	r0, .L189+36	@ tmp290,
 2595 020c 0022     		movs	r2, #0	@,
 2596 020e FFF7FEFF 		bl	GSMSendCommand	@
 2597 0212 0300     		movs	r3, r0	@ tmp291,
 2598 0214 2370     		strb	r3, [r4]	@ tmp293, i
1057:src/sim900_800.c **** 
1058:src/sim900_800.c **** 			if (i == 2)
 2599              		.loc 1 1058 0
 2600 0216 0F23     		movs	r3, #15	@ tmp294,
 2601 0218 6B44     		add	r3, r3, sp	@ tmp294,
 2602 021a 1B78     		ldrb	r3, [r3]	@ tmp295, i
 2603 021c 022B     		cmp	r3, #2	@ tmp295,
 2604 021e 05D1     		bne	.L175	@,
1059:src/sim900_800.c **** 			{
1060:src/sim900_800.c **** 				GSMConfigState++;
 2605              		.loc 1 1060 0
 2606 0220 294B     		ldr	r3, .L189	@ tmp296,
 2607 0222 1B78     		ldrb	r3, [r3]	@ D.7851, GSMConfigState
 2608 0224 0133     		adds	r3, r3, #1	@ tmp297,
 2609 0226 DAB2     		uxtb	r2, r3	@ D.7851, tmp297
 2610 0228 274B     		ldr	r3, .L189	@ tmp298,
 2611 022a 1A70     		strb	r2, [r3]	@ tmp299, GSMConfigState
 2612              	.L175:
1061:src/sim900_800.c **** 			}
1062:src/sim900_800.c **** 			if (i > 2)
 2613              		.loc 1 1062 0
 2614 022c 0F23     		movs	r3, #15	@ tmp300,
 2615 022e 6B44     		add	r3, r3, sp	@ tmp300,
 2616 0230 1B78     		ldrb	r3, [r3]	@ tmp301, i
 2617 0232 022B     		cmp	r3, #2	@ tmp301,
 2618 0234 36D9     		bls	.L187	@,
1063:src/sim900_800.c **** 			{
1064:src/sim900_800.c **** 				GSMConfigState = 1;
 2619              		.loc 1 1064 0
 2620 0236 244B     		ldr	r3, .L189	@ tmp302,
 2621 0238 0122     		movs	r2, #1	@ tmp303,
 2622 023a 1A70     		strb	r2, [r3]	@ tmp304, GSMConfigState
1065:src/sim900_800.c **** 				return 2;
 2623              		.loc 1 1065 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 67


 2624 023c 0223     		movs	r3, #2	@ D.7851,
 2625 023e 3FE0     		b	.L167	@
 2626              	.L157:
1066:src/sim900_800.c **** 			}
1067:src/sim900_800.c **** 			break;
1068:src/sim900_800.c **** 		case 9:
1069:src/sim900_800.c **** 			//AT&W
1070:src/sim900_800.c **** 			//i = GSMSendCommand ("AT&W\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1071:src/sim900_800.c **** 			i = GSMSendCommand ("AT&W\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2627              		.loc 1 1071 0
 2628 0240 244B     		ldr	r3, .L189+12	@ tmp305,
 2629 0242 1B88     		ldrh	r3, [r3]	@ tmp306, GSMConfigTimeOut
 2630 0244 99B2     		uxth	r1, r3	@ D.7853, tmp306
 2631 0246 0F24     		movs	r4, #15	@ tmp307,
 2632 0248 6C44     		add	r4, r4, sp	@ tmp307,
 2633 024a 234B     		ldr	r3, .L189+16	@ tmp308,
 2634 024c 2848     		ldr	r0, .L189+40	@ tmp309,
 2635 024e 0022     		movs	r2, #0	@,
 2636 0250 FFF7FEFF 		bl	GSMSendCommand	@
 2637 0254 0300     		movs	r3, r0	@ tmp310,
 2638 0256 2370     		strb	r3, [r4]	@ tmp312, i
1072:src/sim900_800.c **** 
1073:src/sim900_800.c **** 			if (i == 2)
 2639              		.loc 1 1073 0
 2640 0258 0F23     		movs	r3, #15	@ tmp313,
 2641 025a 6B44     		add	r3, r3, sp	@ tmp313,
 2642 025c 1B78     		ldrb	r3, [r3]	@ tmp314, i
 2643 025e 022B     		cmp	r3, #2	@ tmp314,
 2644 0260 04D1     		bne	.L177	@,
1074:src/sim900_800.c **** 			{
1075:src/sim900_800.c **** 				GSMConfigState = 1;
 2645              		.loc 1 1075 0
 2646 0262 194B     		ldr	r3, .L189	@ tmp315,
 2647 0264 0122     		movs	r2, #1	@ tmp316,
 2648 0266 1A70     		strb	r2, [r3]	@ tmp317, GSMConfigState
1076:src/sim900_800.c **** 				return 1;
 2649              		.loc 1 1076 0
 2650 0268 0123     		movs	r3, #1	@ D.7851,
 2651 026a 29E0     		b	.L167	@
 2652              	.L177:
1077:src/sim900_800.c **** 			}
1078:src/sim900_800.c **** 			if (i > 2)
 2653              		.loc 1 1078 0
 2654 026c 0F23     		movs	r3, #15	@ tmp318,
 2655 026e 6B44     		add	r3, r3, sp	@ tmp318,
 2656 0270 1B78     		ldrb	r3, [r3]	@ tmp319, i
 2657 0272 022B     		cmp	r3, #2	@ tmp319,
 2658 0274 18D9     		bls	.L188	@,
1079:src/sim900_800.c **** 			{
1080:src/sim900_800.c **** 				GSMConfigState = 1;
 2659              		.loc 1 1080 0
 2660 0276 144B     		ldr	r3, .L189	@ tmp320,
 2661 0278 0122     		movs	r2, #1	@ tmp321,
 2662 027a 1A70     		strb	r2, [r3]	@ tmp322, GSMConfigState
1081:src/sim900_800.c **** 				return 2;
 2663              		.loc 1 1081 0
 2664 027c 0223     		movs	r3, #2	@ D.7851,
ARM GAS  /tmp/cc4fp2Bh.s 			page 68


 2665 027e 1FE0     		b	.L167	@
 2666              	.L146:
1082:src/sim900_800.c **** 			}
1083:src/sim900_800.c **** 			break;
1084:src/sim900_800.c **** 		default:
1085:src/sim900_800.c **** 			GSMConfigState = 0;
 2667              		.loc 1 1085 0
 2668 0280 114B     		ldr	r3, .L189	@ tmp323,
 2669 0282 0022     		movs	r2, #0	@ tmp324,
 2670 0284 1A70     		strb	r2, [r3]	@ tmp325, GSMConfigState
1086:src/sim900_800.c **** 			break;
 2671              		.loc 1 1086 0
 2672 0286 10E0     		b	.L158	@
 2673              	.L180:
 968:src/sim900_800.c **** 
 2674              		.loc 1 968 0
 2675 0288 C046     		nop
 2676 028a 0EE0     		b	.L158	@
 2677              	.L181:
 978:src/sim900_800.c **** 
 2678              		.loc 1 978 0
 2679 028c C046     		nop
 2680 028e 0CE0     		b	.L158	@
 2681              	.L182:
 996:src/sim900_800.c **** 
 2682              		.loc 1 996 0
 2683 0290 C046     		nop
 2684 0292 0AE0     		b	.L158	@
 2685              	.L183:
1002:src/sim900_800.c **** 
 2686              		.loc 1 1002 0
 2687 0294 C046     		nop
 2688 0296 08E0     		b	.L158	@
 2689              	.L184:
1021:src/sim900_800.c **** 
 2690              		.loc 1 1021 0
 2691 0298 C046     		nop
 2692 029a 06E0     		b	.L158	@
 2693              	.L185:
1037:src/sim900_800.c **** 		case 7:
 2694              		.loc 1 1037 0
 2695 029c C046     		nop
 2696 029e 04E0     		b	.L158	@
 2697              	.L186:
1052:src/sim900_800.c **** 		case 8:
 2698              		.loc 1 1052 0
 2699 02a0 C046     		nop
 2700 02a2 02E0     		b	.L158	@
 2701              	.L187:
1067:src/sim900_800.c **** 		case 9:
 2702              		.loc 1 1067 0
 2703 02a4 C046     		nop
 2704 02a6 00E0     		b	.L158	@
 2705              	.L188:
1083:src/sim900_800.c **** 		default:
 2706              		.loc 1 1083 0
 2707 02a8 C046     		nop
ARM GAS  /tmp/cc4fp2Bh.s 			page 69


 2708              	.L158:
1087:src/sim900_800.c **** 
1088:src/sim900_800.c **** 	}
1089:src/sim900_800.c **** 
1090:src/sim900_800.c **** 	if (GSMConfigTimeOut == 0)
 2709              		.loc 1 1090 0
 2710 02aa 0A4B     		ldr	r3, .L189+12	@ tmp326,
 2711 02ac 1B88     		ldrh	r3, [r3]	@ tmp327, GSMConfigTimeOut
 2712 02ae 9BB2     		uxth	r3, r3	@ D.7853, tmp327
 2713 02b0 002B     		cmp	r3, #0	@ D.7853,
 2714 02b2 04D1     		bne	.L179	@,
1091:src/sim900_800.c **** 	{
1092:src/sim900_800.c **** 		GSMConfigState = 0;
 2715              		.loc 1 1092 0
 2716 02b4 044B     		ldr	r3, .L189	@ tmp328,
 2717 02b6 0022     		movs	r2, #0	@ tmp329,
 2718 02b8 1A70     		strb	r2, [r3]	@ tmp330, GSMConfigState
1093:src/sim900_800.c **** 		return 3;
 2719              		.loc 1 1093 0
 2720 02ba 0323     		movs	r3, #3	@ D.7851,
 2721 02bc 00E0     		b	.L167	@
 2722              	.L179:
1094:src/sim900_800.c **** 	}
1095:src/sim900_800.c **** 
1096:src/sim900_800.c **** 	return 0;
 2723              		.loc 1 1096 0
 2724 02be 0023     		movs	r3, #0	@ D.7851,
 2725              	.L167:
1097:src/sim900_800.c **** }
 2726              		.loc 1 1097 0
 2727 02c0 1800     		movs	r0, r3	@, <retval>
 2728 02c2 04B0     		add	sp, sp, #16	@,,
 2729              		@ sp needed	@
 2730 02c4 10BD     		pop	{r4, pc}
 2731              	.L190:
 2732 02c6 C046     		.align	2
 2733              	.L189:
 2734 02c8 00000000 		.word	GSMConfigState
 2735 02cc 00000000 		.word	.L148
 2736 02d0 00000000 		.word	GSMConfigTime
 2737 02d4 00000000 		.word	GSMConfigTimeOut
 2738 02d8 00000000 		.word	GSMbuffRtaCommand
 2739 02dc 84000000 		.word	.LC76
 2740 02e0 8C000000 		.word	.LC78
 2741 02e4 94000000 		.word	.LC80
 2742 02e8 A0000000 		.word	.LC82
 2743 02ec B0000000 		.word	.LC84
 2744 02f0 C8000000 		.word	.LC86
 2745              		.cfi_endproc
 2746              	.LFE29:
 2747              		.size	GSM_Config, .-GSM_Config
 2748              		.section	.rodata
 2749 00cf 00       		.align	2
 2750              	.LC92:
 2751 00d0 41542B43 		.ascii	"AT+CMGS=\"\000"
 2751      4D47533D 
 2751      2200
ARM GAS  /tmp/cc4fp2Bh.s 			page 70


 2752 00da 0000     		.align	2
 2753              	.LC94:
 2754 00dc 220D0A00 		.ascii	"\"\015\012\000"
 2755              		.align	2
 2756              	.LC97:
 2757 00e0 1A00     		.ascii	"\032\000"
 2758              		.section	.text.GSMSendSMS,"ax",%progbits
 2759              		.align	2
 2760              		.global	GSMSendSMS
 2761              		.code	16
 2762              		.thumb_func
 2763              		.type	GSMSendSMS, %function
 2764              	GSMSendSMS:
 2765              	.LFB30:
1098:src/sim900_800.c **** 
1099:src/sim900_800.c **** //-----------------------------------------------------------------------//
1100:src/sim900_800.c **** //char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned char timeOut)
1101:src/sim900_800.c **** //-----------------------------------------------------------------------//
1102:src/sim900_800.c **** //String de mensaje: 	"..."
1103:src/sim900_800.c **** //timeOut en mS
1104:src/sim900_800.c **** //String Numero: 		"----------"
1105:src/sim900_800.c **** //Wait: 	0
1106:src/sim900_800.c **** //OK:		1
1107:src/sim900_800.c **** //ERR:	2
1108:src/sim900_800.c **** //TO:		3
1109:src/sim900_800.c **** //-----------------------------------------------------------------------//
1110:src/sim900_800.c **** char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned short timeOut)
1111:src/sim900_800.c **** {
 2766              		.loc 1 1111 0
 2767              		.cfi_startproc
 2768 0000 10B5     		push	{r4, lr}	@
 2769              	.LCFI12:
 2770              		.cfi_def_cfa_offset 8
 2771              		.cfi_offset 4, -8
 2772              		.cfi_offset 14, -4
 2773 0002 86B0     		sub	sp, sp, #24	@,,
 2774              	.LCFI13:
 2775              		.cfi_def_cfa_offset 32
 2776 0004 0390     		str	r0, [sp, #12]	@ ptrMSG, ptrMSG
 2777 0006 0291     		str	r1, [sp, #8]	@ ptrNUM, ptrNUM
 2778 0008 6B46     		mov	r3, sp	@ tmp214,
 2779 000a 0633     		adds	r3, r3, #6	@ tmp122,
 2780 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
1112:src/sim900_800.c **** 	unsigned char i;
1113:src/sim900_800.c **** 
1114:src/sim900_800.c **** 	switch(GSMSendSMSState)
 2781              		.loc 1 1114 0
 2782 000e 504B     		ldr	r3, .L206	@ tmp124,
 2783 0010 1B78     		ldrb	r3, [r3]	@ D.7862, GSMSendSMSState
 2784 0012 012B     		cmp	r3, #1	@ D.7863,
 2785 0014 2DD0     		beq	.L193	@,
 2786 0016 022B     		cmp	r3, #2	@ D.7863,
 2787 0018 64D0     		beq	.L194	@,
 2788 001a 002B     		cmp	r3, #0	@ D.7863,
 2789 001c 00D0     		beq	.LCB2150	@
 2790 001e 81E0     		b	.L203	@long jump	@
 2791              	.LCB2150:
ARM GAS  /tmp/cc4fp2Bh.s 			page 71


1115:src/sim900_800.c **** 	{
1116:src/sim900_800.c **** 		case 0:
1117:src/sim900_800.c **** 			GSMSendSMSFlag = 0;
 2792              		.loc 1 1117 0
 2793 0020 4C4B     		ldr	r3, .L206+4	@ tmp125,
 2794 0022 0022     		movs	r2, #0	@ tmp126,
 2795 0024 1A70     		strb	r2, [r3]	@ tmp127, GSMSendSMSFlag
1118:src/sim900_800.c **** 			GSMSendSMSTimeOut = timeOut;
 2796              		.loc 1 1118 0
 2797 0026 4C4B     		ldr	r3, .L206+8	@ tmp128,
 2798 0028 6A46     		mov	r2, sp	@ tmp215,
 2799 002a 0632     		adds	r2, r2, #6	@ tmp129,
 2800 002c 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 2801 002e 1A80     		strh	r2, [r3]	@ tmp130, GSMSendSMSTimeOut
1119:src/sim900_800.c **** 			sprintf(&GSMSendSMSbuffAux[0], "AT+CMGS=\"");
 2802              		.loc 1 1119 0
 2803 0030 4A4A     		ldr	r2, .L206+12	@ tmp131,
 2804 0032 4B4B     		ldr	r3, .L206+16	@ tmp132,
 2805 0034 1000     		movs	r0, r2	@ tmp133, tmp131
 2806 0036 1900     		movs	r1, r3	@ tmp134, tmp132
 2807 0038 0A23     		movs	r3, #10	@ tmp135,
 2808 003a 1A00     		movs	r2, r3	@, tmp135
 2809 003c FFF7FEFF 		bl	memcpy	@
1120:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], ptrNUM);
 2810              		.loc 1 1120 0
 2811 0040 029A     		ldr	r2, [sp, #8]	@ tmp138, ptrNUM
 2812 0042 464B     		ldr	r3, .L206+12	@ tmp139,
 2813 0044 1100     		movs	r1, r2	@, tmp138
 2814 0046 1800     		movs	r0, r3	@, tmp139
 2815 0048 FFF7FEFF 		bl	strcat	@
1121:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], "\"\r\n");
 2816              		.loc 1 1121 0
 2817 004c 434B     		ldr	r3, .L206+12	@ tmp140,
 2818 004e 1800     		movs	r0, r3	@, tmp140
 2819 0050 FFF7FEFF 		bl	strlen	@
 2820 0054 0300     		movs	r3, r0	@ tmp141,
 2821 0056 1A00     		movs	r2, r3	@ D.7864, tmp142
 2822 0058 404B     		ldr	r3, .L206+12	@ tmp143,
 2823 005a D218     		adds	r2, r2, r3	@ D.7865, D.7864, tmp143
 2824 005c 414B     		ldr	r3, .L206+20	@ tmp144,
 2825 005e 1000     		movs	r0, r2	@ tmp145, D.7865
 2826 0060 1900     		movs	r1, r3	@ tmp146, tmp144
 2827 0062 0423     		movs	r3, #4	@ tmp147,
 2828 0064 1A00     		movs	r2, r3	@, tmp147
 2829 0066 FFF7FEFF 		bl	memcpy	@
1122:src/sim900_800.c **** 			GSMSendSMSState = 1;
 2830              		.loc 1 1122 0
 2831 006a 394B     		ldr	r3, .L206	@ tmp150,
 2832 006c 0122     		movs	r2, #1	@ tmp151,
 2833 006e 1A70     		strb	r2, [r3]	@ tmp152, GSMSendSMSState
1123:src/sim900_800.c **** 			break;
 2834              		.loc 1 1123 0
 2835 0070 5FE0     		b	.L196	@
 2836              	.L193:
1124:src/sim900_800.c **** 
1125:src/sim900_800.c **** 		case 1:
1126:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 0, &GSMbuffRtaCommand[0]);
ARM GAS  /tmp/cc4fp2Bh.s 			page 72


 2837              		.loc 1 1126 0
 2838 0072 1724     		movs	r4, #23	@ tmp153,
 2839 0074 6C44     		add	r4, r4, sp	@ tmp153,
 2840 0076 3C4A     		ldr	r2, .L206+24	@ tmp154,
 2841 0078 FA23     		movs	r3, #250	@ tmp213,
 2842 007a 9900     		lsls	r1, r3, #2	@ tmp155, tmp213,
 2843 007c 3748     		ldr	r0, .L206+12	@ tmp156,
 2844 007e 1300     		movs	r3, r2	@, tmp154
 2845 0080 0022     		movs	r2, #0	@,
 2846 0082 FFF7FEFF 		bl	GSMSendCommand	@
 2847 0086 0300     		movs	r3, r0	@ tmp157,
 2848 0088 2370     		strb	r3, [r4]	@ tmp159, i
1127:src/sim900_800.c **** 
1128:src/sim900_800.c **** 			if (i == 2)
 2849              		.loc 1 1128 0
 2850 008a 1723     		movs	r3, #23	@ tmp160,
 2851 008c 6B44     		add	r3, r3, sp	@ tmp160,
 2852 008e 1B78     		ldrb	r3, [r3]	@ tmp161, i
 2853 0090 022B     		cmp	r3, #2	@ tmp161,
 2854 0092 1DD1     		bne	.L197	@,
1129:src/sim900_800.c **** 			{
1130:src/sim900_800.c **** 				GSMSendSMSbuffAux[0] = 0;
 2855              		.loc 1 1130 0
 2856 0094 314B     		ldr	r3, .L206+12	@ tmp162,
 2857 0096 0022     		movs	r2, #0	@ tmp163,
 2858 0098 1A70     		strb	r2, [r3]	@ tmp164, GSMSendSMSbuffAux
1131:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], ptrMSG);
 2859              		.loc 1 1131 0
 2860 009a 039A     		ldr	r2, [sp, #12]	@ tmp165, ptrMSG
 2861 009c 2F4B     		ldr	r3, .L206+12	@ tmp166,
 2862 009e 1100     		movs	r1, r2	@, tmp165
 2863 00a0 1800     		movs	r0, r3	@, tmp166
 2864 00a2 FFF7FEFF 		bl	strcat	@
1132:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], "\032");
 2865              		.loc 1 1132 0
 2866 00a6 2D4B     		ldr	r3, .L206+12	@ tmp167,
 2867 00a8 1800     		movs	r0, r3	@, tmp167
 2868 00aa FFF7FEFF 		bl	strlen	@
 2869 00ae 0300     		movs	r3, r0	@ tmp168,
 2870 00b0 1A00     		movs	r2, r3	@ D.7864, tmp169
 2871 00b2 2A4B     		ldr	r3, .L206+12	@ tmp170,
 2872 00b4 D218     		adds	r2, r2, r3	@ D.7865, D.7864, tmp170
 2873 00b6 2D4B     		ldr	r3, .L206+28	@ tmp171,
 2874 00b8 1000     		movs	r0, r2	@ tmp172, D.7865
 2875 00ba 1900     		movs	r1, r3	@ tmp173, tmp171
 2876 00bc 0223     		movs	r3, #2	@ tmp174,
 2877 00be 1A00     		movs	r2, r3	@, tmp174
 2878 00c0 FFF7FEFF 		bl	memcpy	@
1133:src/sim900_800.c **** 				GSMSendSMSState++;
 2879              		.loc 1 1133 0
 2880 00c4 224B     		ldr	r3, .L206	@ tmp177,
 2881 00c6 1B78     		ldrb	r3, [r3]	@ D.7862, GSMSendSMSState
 2882 00c8 0133     		adds	r3, r3, #1	@ tmp178,
 2883 00ca DAB2     		uxtb	r2, r3	@ D.7862, tmp178
 2884 00cc 204B     		ldr	r3, .L206	@ tmp179,
 2885 00ce 1A70     		strb	r2, [r3]	@ tmp180, GSMSendSMSState
 2886              	.L197:
ARM GAS  /tmp/cc4fp2Bh.s 			page 73


1134:src/sim900_800.c **** 			}
1135:src/sim900_800.c **** 
1136:src/sim900_800.c **** 			if (i > 2)
 2887              		.loc 1 1136 0
 2888 00d0 1723     		movs	r3, #23	@ tmp181,
 2889 00d2 6B44     		add	r3, r3, sp	@ tmp181,
 2890 00d4 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2891 00d6 022B     		cmp	r3, #2	@ tmp182,
 2892 00d8 28D9     		bls	.L204	@,
1137:src/sim900_800.c **** 			{
1138:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2893              		.loc 1 1138 0
 2894 00da 1D4B     		ldr	r3, .L206	@ tmp183,
 2895 00dc 0022     		movs	r2, #0	@ tmp184,
 2896 00de 1A70     		strb	r2, [r3]	@ tmp185, GSMSendSMSState
1139:src/sim900_800.c **** 				return 2;
 2897              		.loc 1 1139 0
 2898 00e0 0223     		movs	r3, #2	@ D.7862,
 2899 00e2 31E0     		b	.L199	@
 2900              	.L194:
1140:src/sim900_800.c **** 			}
1141:src/sim900_800.c **** 			break;
1142:src/sim900_800.c **** 
1143:src/sim900_800.c **** 		case 2:
1144:src/sim900_800.c **** 			// i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 1, &GSMbuffRtaCommand[0]);
1145:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], 1000, 0, &GSMbuffRtaCommand[0]);
 2901              		.loc 1 1145 0
 2902 00e4 1724     		movs	r4, #23	@ tmp186,
 2903 00e6 6C44     		add	r4, r4, sp	@ tmp186,
 2904 00e8 1F4A     		ldr	r2, .L206+24	@ tmp187,
 2905 00ea FA23     		movs	r3, #250	@ tmp212,
 2906 00ec 9900     		lsls	r1, r3, #2	@ tmp188, tmp212,
 2907 00ee 1B48     		ldr	r0, .L206+12	@ tmp189,
 2908 00f0 1300     		movs	r3, r2	@, tmp187
 2909 00f2 0022     		movs	r2, #0	@,
 2910 00f4 FFF7FEFF 		bl	GSMSendCommand	@
 2911 00f8 0300     		movs	r3, r0	@ tmp190,
 2912 00fa 2370     		strb	r3, [r4]	@ tmp192, i
1146:src/sim900_800.c **** 
1147:src/sim900_800.c **** 			if (i == 2)
 2913              		.loc 1 1147 0
 2914 00fc 1723     		movs	r3, #23	@ tmp193,
 2915 00fe 6B44     		add	r3, r3, sp	@ tmp193,
 2916 0100 1B78     		ldrb	r3, [r3]	@ tmp194, i
 2917 0102 022B     		cmp	r3, #2	@ tmp194,
 2918 0104 04D1     		bne	.L200	@,
1148:src/sim900_800.c **** 			{
1149:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2919              		.loc 1 1149 0
 2920 0106 124B     		ldr	r3, .L206	@ tmp195,
 2921 0108 0022     		movs	r2, #0	@ tmp196,
 2922 010a 1A70     		strb	r2, [r3]	@ tmp197, GSMSendSMSState
1150:src/sim900_800.c **** 				return 1;
 2923              		.loc 1 1150 0
 2924 010c 0123     		movs	r3, #1	@ D.7862,
 2925 010e 1BE0     		b	.L199	@
 2926              	.L200:
ARM GAS  /tmp/cc4fp2Bh.s 			page 74


1151:src/sim900_800.c **** 			}
1152:src/sim900_800.c **** 
1153:src/sim900_800.c **** 			if (i > 2)
 2927              		.loc 1 1153 0
 2928 0110 1723     		movs	r3, #23	@ tmp198,
 2929 0112 6B44     		add	r3, r3, sp	@ tmp198,
 2930 0114 1B78     		ldrb	r3, [r3]	@ tmp199, i
 2931 0116 022B     		cmp	r3, #2	@ tmp199,
 2932 0118 0AD9     		bls	.L205	@,
1154:src/sim900_800.c **** 			{
1155:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2933              		.loc 1 1155 0
 2934 011a 0D4B     		ldr	r3, .L206	@ tmp200,
 2935 011c 0022     		movs	r2, #0	@ tmp201,
 2936 011e 1A70     		strb	r2, [r3]	@ tmp202, GSMSendSMSState
1156:src/sim900_800.c **** 				return 2;
 2937              		.loc 1 1156 0
 2938 0120 0223     		movs	r3, #2	@ D.7862,
 2939 0122 11E0     		b	.L199	@
 2940              	.L203:
1157:src/sim900_800.c **** 			}
1158:src/sim900_800.c **** 			break;
1159:src/sim900_800.c **** 
1160:src/sim900_800.c **** 		default:
1161:src/sim900_800.c **** 			GSMSendSMSState = 0;
 2941              		.loc 1 1161 0
 2942 0124 0A4B     		ldr	r3, .L206	@ tmp203,
 2943 0126 0022     		movs	r2, #0	@ tmp204,
 2944 0128 1A70     		strb	r2, [r3]	@ tmp205, GSMSendSMSState
1162:src/sim900_800.c **** 			break;
 2945              		.loc 1 1162 0
 2946 012a 02E0     		b	.L196	@
 2947              	.L204:
1141:src/sim900_800.c **** 
 2948              		.loc 1 1141 0
 2949 012c C046     		nop
 2950 012e 00E0     		b	.L196	@
 2951              	.L205:
1158:src/sim900_800.c **** 
 2952              		.loc 1 1158 0
 2953 0130 C046     		nop
 2954              	.L196:
1163:src/sim900_800.c **** 	}
1164:src/sim900_800.c **** 
1165:src/sim900_800.c **** 	if (GSMSendSMSTimeOut == 0)
 2955              		.loc 1 1165 0
 2956 0132 094B     		ldr	r3, .L206+8	@ tmp206,
 2957 0134 1B88     		ldrh	r3, [r3]	@ tmp207, GSMSendSMSTimeOut
 2958 0136 9BB2     		uxth	r3, r3	@ D.7866, tmp207
 2959 0138 002B     		cmp	r3, #0	@ D.7866,
 2960 013a 04D1     		bne	.L202	@,
1166:src/sim900_800.c **** 	{
1167:src/sim900_800.c **** 		GSMSendSMSState = 0;
 2961              		.loc 1 1167 0
 2962 013c 044B     		ldr	r3, .L206	@ tmp208,
 2963 013e 0022     		movs	r2, #0	@ tmp209,
 2964 0140 1A70     		strb	r2, [r3]	@ tmp210, GSMSendSMSState
ARM GAS  /tmp/cc4fp2Bh.s 			page 75


1168:src/sim900_800.c **** 		return 3;
 2965              		.loc 1 1168 0
 2966 0142 0323     		movs	r3, #3	@ D.7862,
 2967 0144 00E0     		b	.L199	@
 2968              	.L202:
1169:src/sim900_800.c **** 	}
1170:src/sim900_800.c **** 
1171:src/sim900_800.c **** 	return 0;
 2969              		.loc 1 1171 0
 2970 0146 0023     		movs	r3, #0	@ D.7862,
 2971              	.L199:
1172:src/sim900_800.c **** }
 2972              		.loc 1 1172 0
 2973 0148 1800     		movs	r0, r3	@, <retval>
 2974 014a 06B0     		add	sp, sp, #24	@,,
 2975              		@ sp needed	@
 2976 014c 10BD     		pop	{r4, pc}
 2977              	.L207:
 2978 014e C046     		.align	2
 2979              	.L206:
 2980 0150 00000000 		.word	GSMSendSMSState
 2981 0154 00000000 		.word	GSMSendSMSFlag
 2982 0158 00000000 		.word	GSMSendSMSTimeOut
 2983 015c 00000000 		.word	GSMSendSMSbuffAux
 2984 0160 D0000000 		.word	.LC92
 2985 0164 DC000000 		.word	.LC94
 2986 0168 00000000 		.word	GSMbuffRtaCommand
 2987 016c E0000000 		.word	.LC97
 2988              		.cfi_endproc
 2989              	.LFE30:
 2990              		.size	GSMSendSMS, .-GSMSendSMS
 2991              		.section	.rodata
 2992 00e2 0000     		.align	2
 2993              	.LC104:
 2994 00e4 3030303A 		.ascii	"000: KAL,123456,100\015\012\000"
 2994      204B414C 
 2994      2C313233 
 2994      3435362C 
 2994      3130300D 
 2995 00fa 0000     		.align	2
 2996              	.LC106:
 2997 00fc 41542B43 		.ascii	"AT+CIPSTATUS\015\012\000"
 2997      49505354 
 2997      41545553 
 2997      0D0A00
 2998 010b 00       		.align	2
 2999              	.LC114:
 3000 010c 41542B43 		.ascii	"AT+CIPSTART=\"TCP\",\"\000"
 3000      49505354 
 3000      4152543D 
 3000      22544350 
 3000      222C2200 
 3001              		.align	2
 3002              	.LC116:
 3003 0120 222C2200 		.ascii	"\",\"\000"
 3004              		.align	2
 3005              	.LC122:
ARM GAS  /tmp/cc4fp2Bh.s 			page 76


 3006 0124 434F4E4E 		.ascii	"CONNECTED\000"
 3006      45435445 
 3006      4400
 3007 012e 0000     		.align	2
 3008              	.LC124:
 3009 0130 50445020 		.ascii	"PDP DEACT\000"
 3009      44454143 
 3009      5400
 3010 013a 0000     		.align	2
 3011              	.LC126:
 3012 013c 41542B43 		.ascii	"AT+CPIN?\015\012\000"
 3012      50494E3F 
 3012      0D0A00
 3013 0147 00       		.align	2
 3014              	.LC128:
 3015 0148 2B435049 		.ascii	"+CPIN: READY\000"
 3015      4E3A2052 
 3015      45414459 
 3015      00
 3016 0155 000000   		.align	2
 3017              	.LC130:
 3018 0158 2B435049 		.ascii	"+CPINDS: READY\000"
 3018      4E44533A 
 3018      20524541 
 3018      445900
 3019 0167 00       		.align	2
 3020              	.LC132:
 3021 0168 41542B43 		.ascii	"AT+CREG?\015\012\000"
 3021      5245473F 
 3021      0D0A00
 3022 0173 00       		.align	2
 3023              	.LC134:
 3024 0174 2B435245 		.ascii	"+CREG: 0,1\000"
 3024      473A2030 
 3024      2C3100
 3025 017f 00       		.align	2
 3026              	.LC136:
 3027 0180 41542B43 		.ascii	"AT+CSQ\015\012\000"
 3027      53510D0A 
 3027      00
 3028 0189 000000   		.align	2
 3029              	.LC138:
 3030 018c 2B435351 		.ascii	"+CSQ:\000"
 3030      3A00
 3031 0192 0000     		.align	2
 3032              	.LC141:
 3033 0194 41542B43 		.ascii	"AT+CIPMODE=1\015\012\000"
 3033      49504D4F 
 3033      44453D31 
 3033      0D0A00
 3034 01a3 00       		.align	2
 3035              	.LC143:
 3036 01a4 41542B43 		.ascii	"AT+CGATT?\015\012\000"
 3036      47415454 
 3036      3F0D0A00 
 3037              		.align	2
 3038              	.LC145:
ARM GAS  /tmp/cc4fp2Bh.s 			page 77


 3039 01b0 2B434741 		.ascii	"+CGATT:\000"
 3039      54543A00 
 3040              		.align	2
 3041              	.LC147:
 3042 01b8 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"\000"
 3042      4744434F 
 3042      4E543D31 
 3042      2C224950 
 3042      222C2200 
 3043              		.align	2
 3044              	.LC149:
 3045 01cc 41542B43 		.ascii	"AT+CSTT=\"\000"
 3045      5354543D 
 3045      2200
 3046 01d6 0000     		.align	2
 3047              	.LC151:
 3048 01d8 41542B43 		.ascii	"AT+CIICR\015\012\000"
 3048      49494352 
 3048      0D0A00
 3049 01e3 00       		.align	2
 3050              	.LC153:
 3051 01e4 41542B43 		.ascii	"AT+CIFSR\015\012\000"
 3051      49465352 
 3051      0D0A00
 3052              		.section	.text.GSMConfigGPRS,"ax",%progbits
 3053              		.align	2
 3054              		.global	GSMConfigGPRS
 3055              		.code	16
 3056              		.thumb_func
 3057              		.type	GSMConfigGPRS, %function
 3058              	GSMConfigGPRS:
 3059              	.LFB31:
1173:src/sim900_800.c **** 
1174:src/sim900_800.c **** //-----------------------------------------------------------------------//
1175:src/sim900_800.c **** //char GSMConfigGPRS (char *ptrAPN, char *ptrUSER, char *ptrKEY , unsigned char timeOut)
1176:src/sim900_800.c **** //-----------------------------------------------------------------------//
1177:src/sim900_800.c **** //char *ptrAPN "gprs.personal.com"
1178:src/sim900_800.c **** //char *ptrUSER ""
1179:src/sim900_800.c **** //char *ptrKEY  ""
1180:src/sim900_800.c **** //char *ptrIPAdd Para devolver la ip asignada.
1181:src/sim900_800.c **** //unsigned char timeOut x100mS
1182:src/sim900_800.c **** //char sim
1183:src/sim900_800.c **** //-----------------------------------------------------------------------//
1184:src/sim900_800.c **** //Wait:			1
1185:src/sim900_800.c **** //OK:			2
1186:src/sim900_800.c **** //ERR:			3
1187:src/sim900_800.c **** //TO:			4
1188:src/sim900_800.c **** //NO SIGNAL:	20
1189:src/sim900_800.c **** //-----------------------------------------------------------------------//
1190:src/sim900_800.c **** char GSMConfigGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *ptr
1191:src/sim900_800.c **** {
 3060              		.loc 1 1191 0
 3061              		.cfi_startproc
 3062 0000 10B5     		push	{r4, lr}	@
 3063              	.LCFI14:
 3064              		.cfi_def_cfa_offset 8
 3065              		.cfi_offset 4, -8
ARM GAS  /tmp/cc4fp2Bh.s 			page 78


 3066              		.cfi_offset 14, -4
 3067 0002 86B0     		sub	sp, sp, #24	@,,
 3068              	.LCFI15:
 3069              		.cfi_def_cfa_offset 32
 3070 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 3071 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 3072 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 3073 000a 0F23     		movs	r3, #15	@ tmp190,
 3074 000c 6B44     		add	r3, r3, sp	@ tmp190,
 3075 000e 021C     		adds	r2, r0, #0	@ tmp191, tmp189
 3076 0010 1A70     		strb	r2, [r3]	@ tmp191, sim
1192:src/sim900_800.c **** 	unsigned char i;
1193:src/sim900_800.c **** 
1194:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 3077              		.loc 1 1194 0
 3078 0012 E14B     		ldr	r3, .L291	@ tmp192,
 3079 0014 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3080 0016 102B     		cmp	r3, #16	@ D.7881,
 3081 0018 01D9     		bls	.LCB2362	@
 3082 001a 00F0FDFB 		bl	.L209	@far jump	@
 3083              	.LCB2362:
 3084 001e 9A00     		lsls	r2, r3, #2	@ tmp193, D.7881,
 3085 0020 DE4B     		ldr	r3, .L291+4	@ tmp195,
 3086 0022 D318     		adds	r3, r2, r3	@ tmp194, tmp193, tmp195
 3087 0024 1B68     		ldr	r3, [r3]	@ tmp196,
 3088 0026 9F46     		mov	pc, r3	@ tmp196
 3089              		.section	.rodata.GSMConfigGPRS,"a",%progbits
 3090              		.align	2
 3091              	.L211:
 3092 0000 28000000 		.word	.L210
 3093 0004 46000000 		.word	.L212
 3094 0008 88000000 		.word	.L213
 3095 000c CC000000 		.word	.L214
 3096 0010 CE020000 		.word	.L215
 3097 0014 3A030000 		.word	.L216
 3098 0018 00040000 		.word	.L217
 3099 001c 90040000 		.word	.L218
 3100 0020 D0040000 		.word	.L219
 3101 0024 76050000 		.word	.L220
 3102 0028 44060000 		.word	.L221
 3103 002c 7E060000 		.word	.L222
 3104 0030 B8060000 		.word	.L223
 3105 0034 FE060000 		.word	.L224
 3106 0038 38070000 		.word	.L225
 3107 003c 84070000 		.word	.L226
 3108 0040 DC070000 		.word	.L227
 3109              		.section	.text.GSMConfigGPRS
 3110              	.L210:
1195:src/sim900_800.c **** 	{
1196:src/sim900_800.c **** 
1197:src/sim900_800.c **** 		case 0:
1198:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 3111              		.loc 1 1198 0
 3112 0028 DD4B     		ldr	r3, .L291+8	@ tmp197,
 3113 002a 0BAA     		add	r2, sp, #44	@ tmp198,,
 3114 002c 1288     		ldrh	r2, [r2]	@ tmp199, timeOut
 3115 002e 1A80     		strh	r2, [r3]	@ tmp199, GSMConfigGPRSTimeOut
ARM GAS  /tmp/cc4fp2Bh.s 			page 79


1199:src/sim900_800.c **** 			GSMConfigGPRSState++;
 3116              		.loc 1 1199 0
 3117 0030 D94B     		ldr	r3, .L291	@ tmp200,
 3118 0032 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3119 0034 0133     		adds	r3, r3, #1	@ tmp201,
 3120 0036 DAB2     		uxtb	r2, r3	@ D.7880, tmp201
 3121 0038 D74B     		ldr	r3, .L291	@ tmp202,
 3122 003a 1A70     		strb	r2, [r3]	@ tmp203, GSMConfigGPRSState
1200:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 3123              		.loc 1 1200 0
 3124 003c D94B     		ldr	r3, .L291+12	@ tmp204,
 3125 003e 0122     		movs	r2, #1	@ tmp205,
 3126 0040 1A70     		strb	r2, [r3]	@ tmp206, GSMConfigGPRSflag
1201:src/sim900_800.c **** 			break;
 3127              		.loc 1 1201 0
 3128 0042 00F008FC 		bl	.L228	@ far jump	@
 3129              	.L212:
1202:src/sim900_800.c **** 
1203:src/sim900_800.c **** 		case 1:
1204:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 20, 0, &GSMbuffRtaCommand[0]);
 3130              		.loc 1 1204 0
 3131 0046 1724     		movs	r4, #23	@ tmp207,
 3132 0048 6C44     		add	r4, r4, sp	@ tmp207,
 3133 004a D74B     		ldr	r3, .L291+16	@ tmp208,
 3134 004c D748     		ldr	r0, .L291+20	@ tmp209,
 3135 004e 0022     		movs	r2, #0	@,
 3136 0050 1421     		movs	r1, #20	@,
 3137 0052 FFF7FEFF 		bl	GSMSendCommand	@
 3138 0056 0300     		movs	r3, r0	@ tmp210,
 3139 0058 2370     		strb	r3, [r4]	@ tmp212, i
1205:src/sim900_800.c **** 
1206:src/sim900_800.c **** 			if (i == 2)
 3140              		.loc 1 1206 0
 3141 005a 1723     		movs	r3, #23	@ tmp213,
 3142 005c 6B44     		add	r3, r3, sp	@ tmp213,
 3143 005e 1B78     		ldrb	r3, [r3]	@ tmp214, i
 3144 0060 022B     		cmp	r3, #2	@ tmp214,
 3145 0062 05D1     		bne	.L229	@,
1207:src/sim900_800.c **** 			{
1208:src/sim900_800.c **** 				//Respondio ACK.
1209:src/sim900_800.c **** 				//Conectado.
1210:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3146              		.loc 1 1210 0
 3147 0064 CC4B     		ldr	r3, .L291	@ tmp215,
 3148 0066 0022     		movs	r2, #0	@ tmp216,
 3149 0068 1A70     		strb	r2, [r3]	@ tmp217, GSMConfigGPRSState
1211:src/sim900_800.c **** 				return 2;
 3150              		.loc 1 1211 0
 3151 006a 0223     		movs	r3, #2	@ D.7880,
 3152 006c 00F0FDFB 		bl	.L230	@ far jump	@
 3153              	.L229:
1212:src/sim900_800.c **** 			}
1213:src/sim900_800.c **** 
1214:src/sim900_800.c **** 			if (i > 2)
 3154              		.loc 1 1214 0
 3155 0070 1723     		movs	r3, #23	@ tmp218,
 3156 0072 6B44     		add	r3, r3, sp	@ tmp218,
ARM GAS  /tmp/cc4fp2Bh.s 			page 80


 3157 0074 1B78     		ldrb	r3, [r3]	@ tmp219, i
 3158 0076 022B     		cmp	r3, #2	@ tmp219,
 3159 0078 01D8     		bhi	.LCB2417	@
 3160 007a 00F0D1FB 		bl	.L277	@far jump	@
 3161              	.LCB2417:
1215:src/sim900_800.c **** 			{
1216:src/sim900_800.c **** 				//No conectado.
1217:src/sim900_800.c **** 				//Seleccionar Sim.
1218:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
 3162              		.loc 1 1218 0
 3163 007e C64B     		ldr	r3, .L291	@ tmp220,
 3164 0080 0F22     		movs	r2, #15	@ tmp221,
 3165 0082 1A70     		strb	r2, [r3]	@ tmp222, GSMConfigGPRSState
1219:src/sim900_800.c **** 			}
1220:src/sim900_800.c **** 
1221:src/sim900_800.c **** 			break;
 3166              		.loc 1 1221 0
 3167 0084 00F0CCFB 		bl	.L277	@ far jump	@
 3168              	.L213:
1222:src/sim900_800.c **** 		case 2:
1223:src/sim900_800.c **** 
1224:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3169              		.loc 1 1224 0
 3170 0088 1724     		movs	r4, #23	@ tmp223,
 3171 008a 6C44     		add	r4, r4, sp	@ tmp223,
 3172 008c C64B     		ldr	r3, .L291+16	@ tmp224,
 3173 008e C848     		ldr	r0, .L291+24	@ tmp225,
 3174 0090 0022     		movs	r2, #0	@,
 3175 0092 3221     		movs	r1, #50	@,
 3176 0094 FFF7FEFF 		bl	GSMSendCommand	@
 3177 0098 0300     		movs	r3, r0	@ tmp226,
 3178 009a 2370     		strb	r3, [r4]	@ tmp228, i
1225:src/sim900_800.c **** 
1226:src/sim900_800.c **** 			if (i == 2)
 3179              		.loc 1 1226 0
 3180 009c 1723     		movs	r3, #23	@ tmp229,
 3181 009e 6B44     		add	r3, r3, sp	@ tmp229,
 3182 00a0 1B78     		ldrb	r3, [r3]	@ tmp230, i
 3183 00a2 022B     		cmp	r3, #2	@ tmp230,
 3184 00a4 05D1     		bne	.L232	@,
1227:src/sim900_800.c **** 			{
1228:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3185              		.loc 1 1228 0
 3186 00a6 BC4B     		ldr	r3, .L291	@ tmp231,
 3187 00a8 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3188 00aa 0133     		adds	r3, r3, #1	@ tmp232,
 3189 00ac DAB2     		uxtb	r2, r3	@ D.7880, tmp232
 3190 00ae BA4B     		ldr	r3, .L291	@ tmp233,
 3191 00b0 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
 3192              	.L232:
1229:src/sim900_800.c **** 			}
1230:src/sim900_800.c **** 
1231:src/sim900_800.c **** 			if (i > 2)
 3193              		.loc 1 1231 0
 3194 00b2 1723     		movs	r3, #23	@ tmp235,
 3195 00b4 6B44     		add	r3, r3, sp	@ tmp235,
 3196 00b6 1B78     		ldrb	r3, [r3]	@ tmp236, i
ARM GAS  /tmp/cc4fp2Bh.s 			page 81


 3197 00b8 022B     		cmp	r3, #2	@ tmp236,
 3198 00ba 01D8     		bhi	.LCB2451	@
 3199 00bc 00F0B2FB 		bl	.L278	@far jump	@
 3200              	.LCB2451:
1232:src/sim900_800.c **** 			{
1233:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3201              		.loc 1 1233 0
 3202 00c0 B54B     		ldr	r3, .L291	@ tmp237,
 3203 00c2 0022     		movs	r2, #0	@ tmp238,
 3204 00c4 1A70     		strb	r2, [r3]	@ tmp239, GSMConfigGPRSState
1234:src/sim900_800.c **** 				return 3;
 3205              		.loc 1 1234 0
 3206 00c6 0323     		movs	r3, #3	@ D.7880,
 3207 00c8 00F0CFFB 		bl	.L230	@ far jump	@
 3208              	.L214:
1235:src/sim900_800.c **** 			}
1236:src/sim900_800.c **** 			break;
1237:src/sim900_800.c **** 		case 3:
1238:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 3209              		.loc 1 1238 0
 3210 00cc B54B     		ldr	r3, .L291+12	@ tmp240,
 3211 00ce 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSflag
 3212 00d0 022B     		cmp	r3, #2	@ D.7880,
 3213 00d2 01D0     		beq	.LCB2463	@
 3214 00d4 00F0A8FB 		bl	.L279	@far jump	@
 3215              	.LCB2463:
1239:src/sim900_800.c **** 			{
1240:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1241:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 3216              		.loc 1 1241 0
 3217 00d8 B649     		ldr	r1, .L291+28	@ tmp241,
 3218 00da B74B     		ldr	r3, .L291+32	@ tmp242,
 3219 00dc 0A22     		movs	r2, #10	@,
 3220 00de 1800     		movs	r0, r3	@, tmp242
 3221 00e0 FFF7FEFF 		bl	strncmp	@
 3222 00e4 031E     		subs	r3, r0, #0	@ D.7881,,
 3223 00e6 08D1     		bne	.L235	@,
1242:src/sim900_800.c **** 				{
1243:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 3224              		.loc 1 1243 0
 3225 00e8 AB4B     		ldr	r3, .L291	@ tmp243,
 3226 00ea 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3227 00ec 0133     		adds	r3, r3, #1	@ tmp244,
 3228 00ee DAB2     		uxtb	r2, r3	@ D.7880, tmp244
 3229 00f0 A94B     		ldr	r3, .L291	@ tmp245,
 3230 00f2 1A70     		strb	r2, [r3]	@ tmp246, GSMConfigGPRSState
1244:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3231              		.loc 1 1244 0
 3232 00f4 AB4B     		ldr	r3, .L291+12	@ tmp247,
 3233 00f6 0122     		movs	r2, #1	@ tmp248,
 3234 00f8 1A70     		strb	r2, [r3]	@ tmp249, GSMConfigGPRSflag
 3235              	.L235:
1245:src/sim900_800.c **** 				}
1246:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1247:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 3236              		.loc 1 1247 0
 3237 00fa B049     		ldr	r1, .L291+36	@ tmp250,
ARM GAS  /tmp/cc4fp2Bh.s 			page 82


 3238 00fc AE4B     		ldr	r3, .L291+32	@ tmp251,
 3239 00fe 0822     		movs	r2, #8	@,
 3240 0100 1800     		movs	r0, r3	@, tmp251
 3241 0102 FFF7FEFF 		bl	strncmp	@
 3242 0106 031E     		subs	r3, r0, #0	@ D.7881,,
 3243 0108 08D1     		bne	.L236	@,
1248:src/sim900_800.c **** 				{
1249:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 3244              		.loc 1 1249 0
 3245 010a A34B     		ldr	r3, .L291	@ tmp252,
 3246 010c 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3247 010e 0833     		adds	r3, r3, #8	@ tmp253,
 3248 0110 DAB2     		uxtb	r2, r3	@ D.7880, tmp253
 3249 0112 A14B     		ldr	r3, .L291	@ tmp254,
 3250 0114 1A70     		strb	r2, [r3]	@ tmp255, GSMConfigGPRSState
1250:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3251              		.loc 1 1250 0
 3252 0116 A34B     		ldr	r3, .L291+12	@ tmp256,
 3253 0118 0122     		movs	r2, #1	@ tmp257,
 3254 011a 1A70     		strb	r2, [r3]	@ tmp258, GSMConfigGPRSflag
 3255              	.L236:
1251:src/sim900_800.c **** 				}
1252:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
1253:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 3256              		.loc 1 1253 0
 3257 011c A849     		ldr	r1, .L291+40	@ tmp259,
 3258 011e A64B     		ldr	r3, .L291+32	@ tmp260,
 3259 0120 0A22     		movs	r2, #10	@,
 3260 0122 1800     		movs	r0, r3	@, tmp260
 3261 0124 FFF7FEFF 		bl	strncmp	@
 3262 0128 031E     		subs	r3, r0, #0	@ D.7881,,
 3263 012a 08D1     		bne	.L237	@,
1254:src/sim900_800.c **** 				{
1255:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 3264              		.loc 1 1255 0
 3265 012c 9A4B     		ldr	r3, .L291	@ tmp261,
 3266 012e 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3267 0130 0933     		adds	r3, r3, #9	@ tmp262,
 3268 0132 DAB2     		uxtb	r2, r3	@ D.7880, tmp262
 3269 0134 984B     		ldr	r3, .L291	@ tmp263,
 3270 0136 1A70     		strb	r2, [r3]	@ tmp264, GSMConfigGPRSState
1256:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3271              		.loc 1 1256 0
 3272 0138 9A4B     		ldr	r3, .L291+12	@ tmp265,
 3273 013a 0122     		movs	r2, #1	@ tmp266,
 3274 013c 1A70     		strb	r2, [r3]	@ tmp267, GSMConfigGPRSflag
 3275              	.L237:
1257:src/sim900_800.c **** 				}
1258:src/sim900_800.c **** 
1259:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
1260:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 3276              		.loc 1 1260 0
 3277 013e A149     		ldr	r1, .L291+44	@ tmp268,
 3278 0140 9D4B     		ldr	r3, .L291+32	@ tmp269,
 3279 0142 0922     		movs	r2, #9	@,
 3280 0144 1800     		movs	r0, r3	@, tmp269
 3281 0146 FFF7FEFF 		bl	strncmp	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 83


 3282 014a 031E     		subs	r3, r0, #0	@ D.7881,,
 3283 014c 3AD1     		bne	.L238	@,
1261:src/sim900_800.c **** 				{
1262:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3284              		.loc 1 1262 0
 3285 014e 924B     		ldr	r3, .L291	@ tmp270,
 3286 0150 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3287 0152 0A33     		adds	r3, r3, #10	@ tmp271,
 3288 0154 DAB2     		uxtb	r2, r3	@ D.7880, tmp271
 3289 0156 904B     		ldr	r3, .L291	@ tmp272,
 3290 0158 1A70     		strb	r2, [r3]	@ tmp273, GSMConfigGPRSState
1263:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3291              		.loc 1 1263 0
 3292 015a 9B4A     		ldr	r2, .L291+48	@ tmp274,
 3293 015c 9B4B     		ldr	r3, .L291+52	@ tmp275,
 3294 015e 1000     		movs	r0, r2	@ tmp276, tmp274
 3295 0160 1900     		movs	r1, r3	@ tmp277, tmp275
 3296 0162 1423     		movs	r3, #20	@ tmp278,
 3297 0164 1A00     		movs	r2, r3	@, tmp278
 3298 0166 FFF7FEFF 		bl	memcpy	@
1264:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3299              		.loc 1 1264 0
 3300 016a 099A     		ldr	r2, [sp, #36]	@ tmp281, ptrIPremote
 3301 016c 964B     		ldr	r3, .L291+48	@ tmp282,
 3302 016e 1100     		movs	r1, r2	@, tmp281
 3303 0170 1800     		movs	r0, r3	@, tmp282
 3304 0172 FFF7FEFF 		bl	strcat	@
1265:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3305              		.loc 1 1265 0
 3306 0176 944B     		ldr	r3, .L291+48	@ tmp283,
 3307 0178 1800     		movs	r0, r3	@, tmp283
 3308 017a FFF7FEFF 		bl	strlen	@
 3309 017e 0300     		movs	r3, r0	@ tmp284,
 3310 0180 1A00     		movs	r2, r3	@ D.7882, tmp285
 3311 0182 914B     		ldr	r3, .L291+48	@ tmp286,
 3312 0184 D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp286
 3313 0186 924B     		ldr	r3, .L291+56	@ tmp287,
 3314 0188 1000     		movs	r0, r2	@ tmp288, D.7883
 3315 018a 1900     		movs	r1, r3	@ tmp289, tmp287
 3316 018c 0423     		movs	r3, #4	@ tmp290,
 3317 018e 1A00     		movs	r2, r3	@, tmp290
 3318 0190 FFF7FEFF 		bl	memcpy	@
1266:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3319              		.loc 1 1266 0
 3320 0194 0A9A     		ldr	r2, [sp, #40]	@ tmp293, ptrPORTremote
 3321 0196 8C4B     		ldr	r3, .L291+48	@ tmp294,
 3322 0198 1100     		movs	r1, r2	@, tmp293
 3323 019a 1800     		movs	r0, r3	@, tmp294
 3324 019c FFF7FEFF 		bl	strcat	@
1267:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3325              		.loc 1 1267 0
 3326 01a0 894B     		ldr	r3, .L291+48	@ tmp295,
 3327 01a2 1800     		movs	r0, r3	@, tmp295
 3328 01a4 FFF7FEFF 		bl	strlen	@
 3329 01a8 0300     		movs	r3, r0	@ tmp296,
 3330 01aa 1A00     		movs	r2, r3	@ D.7882, tmp297
 3331 01ac 864B     		ldr	r3, .L291+48	@ tmp298,
ARM GAS  /tmp/cc4fp2Bh.s 			page 84


 3332 01ae D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp298
 3333 01b0 884B     		ldr	r3, .L291+60	@ tmp299,
 3334 01b2 1000     		movs	r0, r2	@ tmp300, D.7883
 3335 01b4 1900     		movs	r1, r3	@ tmp301, tmp299
 3336 01b6 0423     		movs	r3, #4	@ tmp302,
 3337 01b8 1A00     		movs	r2, r3	@, tmp302
 3338 01ba FFF7FEFF 		bl	memcpy	@
1268:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3339              		.loc 1 1268 0
 3340 01be 794B     		ldr	r3, .L291+12	@ tmp305,
 3341 01c0 0122     		movs	r2, #1	@ tmp306,
 3342 01c2 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSflag
 3343              	.L238:
1269:src/sim900_800.c **** 				}
1270:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
1271:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 3344              		.loc 1 1271 0
 3345 01c4 8449     		ldr	r1, .L291+64	@ tmp308,
 3346 01c6 7C4B     		ldr	r3, .L291+32	@ tmp309,
 3347 01c8 0E22     		movs	r2, #14	@,
 3348 01ca 1800     		movs	r0, r3	@, tmp309
 3349 01cc FFF7FEFF 		bl	strncmp	@
 3350 01d0 031E     		subs	r3, r0, #0	@ D.7881,,
 3351 01d2 08D1     		bne	.L239	@,
1272:src/sim900_800.c **** 				{
1273:src/sim900_800.c **** 					GSMConfigGPRSState -= 1;
 3352              		.loc 1 1273 0
 3353 01d4 704B     		ldr	r3, .L291	@ tmp310,
 3354 01d6 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3355 01d8 013B     		subs	r3, r3, #1	@ tmp311,
 3356 01da DAB2     		uxtb	r2, r3	@ D.7880, tmp311
 3357 01dc 6E4B     		ldr	r3, .L291	@ tmp312,
 3358 01de 1A70     		strb	r2, [r3]	@ tmp313, GSMConfigGPRSState
1274:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3359              		.loc 1 1274 0
 3360 01e0 704B     		ldr	r3, .L291+12	@ tmp314,
 3361 01e2 0122     		movs	r2, #1	@ tmp315,
 3362 01e4 1A70     		strb	r2, [r3]	@ tmp316, GSMConfigGPRSflag
 3363              	.L239:
1275:src/sim900_800.c **** 				}
1276:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
1277:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 3364              		.loc 1 1277 0
 3365 01e6 7D49     		ldr	r1, .L291+68	@ tmp317,
 3366 01e8 734B     		ldr	r3, .L291+32	@ tmp318,
 3367 01ea 0A22     		movs	r2, #10	@,
 3368 01ec 1800     		movs	r0, r3	@, tmp318
 3369 01ee FFF7FEFF 		bl	strncmp	@
 3370 01f2 031E     		subs	r3, r0, #0	@ D.7881,,
 3371 01f4 04D1     		bne	.L240	@,
1278:src/sim900_800.c **** 				{
1279:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3372              		.loc 1 1279 0
 3373 01f6 684B     		ldr	r3, .L291	@ tmp319,
 3374 01f8 0022     		movs	r2, #0	@ tmp320,
 3375 01fa 1A70     		strb	r2, [r3]	@ tmp321, GSMConfigGPRSState
1280:src/sim900_800.c **** 					return 2;
ARM GAS  /tmp/cc4fp2Bh.s 			page 85


 3376              		.loc 1 1280 0
 3377 01fc 0223     		movs	r3, #2	@ D.7880,
 3378 01fe 34E3     		b	.L230	@
 3379              	.L240:
1281:src/sim900_800.c **** 				}
1282:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
1283:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
1284:src/sim900_800.c **** 				{
1285:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
1286:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
1287:src/sim900_800.c **** 				}
1288:src/sim900_800.c **** */
1289:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
1290:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 3380              		.loc 1 1290 0
 3381 0200 7749     		ldr	r1, .L291+72	@ tmp322,
 3382 0202 6D4B     		ldr	r3, .L291+32	@ tmp323,
 3383 0204 0A22     		movs	r2, #10	@,
 3384 0206 1800     		movs	r0, r3	@, tmp323
 3385 0208 FFF7FEFF 		bl	strncmp	@
 3386 020c 031E     		subs	r3, r0, #0	@ D.7881,,
 3387 020e 3AD1     		bne	.L241	@,
1291:src/sim900_800.c **** 				{
1292:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3388              		.loc 1 1292 0
 3389 0210 614B     		ldr	r3, .L291	@ tmp324,
 3390 0212 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3391 0214 0A33     		adds	r3, r3, #10	@ tmp325,
 3392 0216 DAB2     		uxtb	r2, r3	@ D.7880, tmp325
 3393 0218 5F4B     		ldr	r3, .L291	@ tmp326,
 3394 021a 1A70     		strb	r2, [r3]	@ tmp327, GSMConfigGPRSState
1293:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3395              		.loc 1 1293 0
 3396 021c 6A4A     		ldr	r2, .L291+48	@ tmp328,
 3397 021e 6B4B     		ldr	r3, .L291+52	@ tmp329,
 3398 0220 1000     		movs	r0, r2	@ tmp330, tmp328
 3399 0222 1900     		movs	r1, r3	@ tmp331, tmp329
 3400 0224 1423     		movs	r3, #20	@ tmp332,
 3401 0226 1A00     		movs	r2, r3	@, tmp332
 3402 0228 FFF7FEFF 		bl	memcpy	@
1294:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3403              		.loc 1 1294 0
 3404 022c 099A     		ldr	r2, [sp, #36]	@ tmp335, ptrIPremote
 3405 022e 664B     		ldr	r3, .L291+48	@ tmp336,
 3406 0230 1100     		movs	r1, r2	@, tmp335
 3407 0232 1800     		movs	r0, r3	@, tmp336
 3408 0234 FFF7FEFF 		bl	strcat	@
1295:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3409              		.loc 1 1295 0
 3410 0238 634B     		ldr	r3, .L291+48	@ tmp337,
 3411 023a 1800     		movs	r0, r3	@, tmp337
 3412 023c FFF7FEFF 		bl	strlen	@
 3413 0240 0300     		movs	r3, r0	@ tmp338,
 3414 0242 1A00     		movs	r2, r3	@ D.7882, tmp339
 3415 0244 604B     		ldr	r3, .L291+48	@ tmp340,
 3416 0246 D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp340
 3417 0248 614B     		ldr	r3, .L291+56	@ tmp341,
ARM GAS  /tmp/cc4fp2Bh.s 			page 86


 3418 024a 1000     		movs	r0, r2	@ tmp342, D.7883
 3419 024c 1900     		movs	r1, r3	@ tmp343, tmp341
 3420 024e 0423     		movs	r3, #4	@ tmp344,
 3421 0250 1A00     		movs	r2, r3	@, tmp344
 3422 0252 FFF7FEFF 		bl	memcpy	@
1296:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3423              		.loc 1 1296 0
 3424 0256 0A9A     		ldr	r2, [sp, #40]	@ tmp347, ptrPORTremote
 3425 0258 5B4B     		ldr	r3, .L291+48	@ tmp348,
 3426 025a 1100     		movs	r1, r2	@, tmp347
 3427 025c 1800     		movs	r0, r3	@, tmp348
 3428 025e FFF7FEFF 		bl	strcat	@
1297:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3429              		.loc 1 1297 0
 3430 0262 594B     		ldr	r3, .L291+48	@ tmp349,
 3431 0264 1800     		movs	r0, r3	@, tmp349
 3432 0266 FFF7FEFF 		bl	strlen	@
 3433 026a 0300     		movs	r3, r0	@ tmp350,
 3434 026c 1A00     		movs	r2, r3	@ D.7882, tmp351
 3435 026e 564B     		ldr	r3, .L291+48	@ tmp352,
 3436 0270 D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp352
 3437 0272 584B     		ldr	r3, .L291+60	@ tmp353,
 3438 0274 1000     		movs	r0, r2	@ tmp354, D.7883
 3439 0276 1900     		movs	r1, r3	@ tmp355, tmp353
 3440 0278 0423     		movs	r3, #4	@ tmp356,
 3441 027a 1A00     		movs	r2, r3	@, tmp356
 3442 027c FFF7FEFF 		bl	memcpy	@
1298:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3443              		.loc 1 1298 0
 3444 0280 484B     		ldr	r3, .L291+12	@ tmp359,
 3445 0282 0122     		movs	r2, #1	@ tmp360,
 3446 0284 1A70     		strb	r2, [r3]	@ tmp361, GSMConfigGPRSflag
 3447              	.L241:
1299:src/sim900_800.c **** 				}
1300:src/sim900_800.c **** 
1301:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 3448              		.loc 1 1301 0
 3449 0286 5749     		ldr	r1, .L291+76	@ tmp362,
 3450 0288 4B4B     		ldr	r3, .L291+32	@ tmp363,
 3451 028a 0922     		movs	r2, #9	@,
 3452 028c 1800     		movs	r0, r3	@, tmp363
 3453 028e FFF7FEFF 		bl	strncmp	@
 3454 0292 031E     		subs	r3, r0, #0	@ D.7881,,
 3455 0294 08D1     		bne	.L242	@,
1302:src/sim900_800.c **** 				{
1303:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
 3456              		.loc 1 1303 0
 3457 0296 404B     		ldr	r3, .L291	@ tmp364,
 3458 0298 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3459 029a 0B33     		adds	r3, r3, #11	@ tmp365,
 3460 029c DAB2     		uxtb	r2, r3	@ D.7880, tmp365
 3461 029e 3E4B     		ldr	r3, .L291	@ tmp366,
 3462 02a0 1A70     		strb	r2, [r3]	@ tmp367, GSMConfigGPRSState
1304:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3463              		.loc 1 1304 0
 3464 02a2 404B     		ldr	r3, .L291+12	@ tmp368,
 3465 02a4 0122     		movs	r2, #1	@ tmp369,
ARM GAS  /tmp/cc4fp2Bh.s 			page 87


 3466 02a6 1A70     		strb	r2, [r3]	@ tmp370, GSMConfigGPRSflag
 3467              	.L242:
1305:src/sim900_800.c **** 				}
1306:src/sim900_800.c **** 
1307:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 3468              		.loc 1 1307 0
 3469 02a8 4F49     		ldr	r1, .L291+80	@ tmp371,
 3470 02aa 434B     		ldr	r3, .L291+32	@ tmp372,
 3471 02ac 0922     		movs	r2, #9	@,
 3472 02ae 1800     		movs	r0, r3	@, tmp372
 3473 02b0 FFF7FEFF 		bl	strncmp	@
 3474 02b4 031E     		subs	r3, r0, #0	@ D.7881,,
 3475 02b6 00D0     		beq	.LCB2706	@
 3476 02b8 B6E2     		b	.L279	@long jump	@
 3477              	.LCB2706:
1308:src/sim900_800.c **** 				{
1309:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 3478              		.loc 1 1309 0
 3479 02ba 374B     		ldr	r3, .L291	@ tmp373,
 3480 02bc 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3481 02be 0D33     		adds	r3, r3, #13	@ tmp374,
 3482 02c0 DAB2     		uxtb	r2, r3	@ D.7880, tmp374
 3483 02c2 354B     		ldr	r3, .L291	@ tmp375,
 3484 02c4 1A70     		strb	r2, [r3]	@ tmp376, GSMConfigGPRSState
1310:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3485              		.loc 1 1310 0
 3486 02c6 374B     		ldr	r3, .L291+12	@ tmp377,
 3487 02c8 0122     		movs	r2, #1	@ tmp378,
 3488 02ca 1A70     		strb	r2, [r3]	@ tmp379, GSMConfigGPRSflag
1311:src/sim900_800.c **** 				}
1312:src/sim900_800.c **** 			}
1313:src/sim900_800.c **** 			break;
 3489              		.loc 1 1313 0
 3490 02cc ACE2     		b	.L279	@
 3491              	.L215:
1314:src/sim900_800.c **** 
1315:src/sim900_800.c **** 		case 4:
1316:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3492              		.loc 1 1316 0
 3493 02ce 1724     		movs	r4, #23	@ tmp380,
 3494 02d0 6C44     		add	r4, r4, sp	@ tmp380,
 3495 02d2 354B     		ldr	r3, .L291+16	@ tmp381,
 3496 02d4 4548     		ldr	r0, .L291+84	@ tmp382,
 3497 02d6 0122     		movs	r2, #1	@,
 3498 02d8 3221     		movs	r1, #50	@,
 3499 02da FFF7FEFF 		bl	GSMSendCommand	@
 3500 02de 0300     		movs	r3, r0	@ tmp383,
 3501 02e0 2370     		strb	r3, [r4]	@ tmp385, i
1317:src/sim900_800.c **** 
1318:src/sim900_800.c **** 			if (i == 2)
 3502              		.loc 1 1318 0
 3503 02e2 1723     		movs	r3, #23	@ tmp386,
 3504 02e4 6B44     		add	r3, r3, sp	@ tmp386,
 3505 02e6 1B78     		ldrb	r3, [r3]	@ tmp387, i
 3506 02e8 022B     		cmp	r3, #2	@ tmp387,
 3507 02ea 1BD1     		bne	.L243	@,
1319:src/sim900_800.c **** 			{
ARM GAS  /tmp/cc4fp2Bh.s 			page 88


1320:src/sim900_800.c **** 				if ((!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN:
 3508              		.loc 1 1320 0
 3509 02ec 4049     		ldr	r1, .L291+88	@ tmp388,
 3510 02ee 2E4B     		ldr	r3, .L291+16	@ tmp389,
 3511 02f0 0C22     		movs	r2, #12	@,
 3512 02f2 1800     		movs	r0, r3	@, tmp389
 3513 02f4 FFF7FEFF 		bl	strncmp	@
 3514 02f8 031E     		subs	r3, r0, #0	@ D.7881,,
 3515 02fa 07D0     		beq	.L244	@,
 3516              		.loc 1 1320 0 is_stmt 0 discriminator 1
 3517 02fc 3D49     		ldr	r1, .L291+92	@ tmp390,
 3518 02fe 2A4B     		ldr	r3, .L291+16	@ tmp391,
 3519 0300 0E22     		movs	r2, #14	@,
 3520 0302 1800     		movs	r0, r3	@, tmp391
 3521 0304 FFF7FEFF 		bl	strncmp	@
 3522 0308 031E     		subs	r3, r0, #0	@ D.7881,,
 3523 030a 06D1     		bne	.L245	@,
 3524              	.L244:
1321:src/sim900_800.c **** 				{
1322:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3525              		.loc 1 1322 0 is_stmt 1
 3526 030c 224B     		ldr	r3, .L291	@ tmp392,
 3527 030e 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3528 0310 0133     		adds	r3, r3, #1	@ tmp393,
 3529 0312 DAB2     		uxtb	r2, r3	@ D.7880, tmp393
 3530 0314 204B     		ldr	r3, .L291	@ tmp394,
 3531 0316 1A70     		strb	r2, [r3]	@ tmp395, GSMConfigGPRSState
 3532 0318 04E0     		b	.L243	@
 3533              	.L245:
1323:src/sim900_800.c **** 				}
1324:src/sim900_800.c **** 				else
1325:src/sim900_800.c **** 				{
1326:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3534              		.loc 1 1326 0
 3535 031a 1F4B     		ldr	r3, .L291	@ tmp396,
 3536 031c 0022     		movs	r2, #0	@ tmp397,
 3537 031e 1A70     		strb	r2, [r3]	@ tmp398, GSMConfigGPRSState
1327:src/sim900_800.c **** 					return 3;
 3538              		.loc 1 1327 0
 3539 0320 0323     		movs	r3, #3	@ D.7880,
 3540 0322 A2E2     		b	.L230	@
 3541              	.L243:
1328:src/sim900_800.c **** 				}
1329:src/sim900_800.c **** 			}
1330:src/sim900_800.c **** 
1331:src/sim900_800.c **** 			if (i > 2)
 3542              		.loc 1 1331 0
 3543 0324 1723     		movs	r3, #23	@ tmp399,
 3544 0326 6B44     		add	r3, r3, sp	@ tmp399,
 3545 0328 1B78     		ldrb	r3, [r3]	@ tmp400, i
 3546 032a 022B     		cmp	r3, #2	@ tmp400,
 3547 032c 00D8     		bhi	.LCB2773	@
 3548 032e 7DE2     		b	.L280	@long jump	@
 3549              	.LCB2773:
1332:src/sim900_800.c **** 			{
1333:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3550              		.loc 1 1333 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 89


 3551 0330 194B     		ldr	r3, .L291	@ tmp401,
 3552 0332 0022     		movs	r2, #0	@ tmp402,
 3553 0334 1A70     		strb	r2, [r3]	@ tmp403, GSMConfigGPRSState
1334:src/sim900_800.c **** 				return 3;
 3554              		.loc 1 1334 0
 3555 0336 0323     		movs	r3, #3	@ D.7880,
 3556 0338 97E2     		b	.L230	@
 3557              	.L216:
1335:src/sim900_800.c **** 			}
1336:src/sim900_800.c **** 			break;
1337:src/sim900_800.c **** 
1338:src/sim900_800.c **** 		case 5:
1339:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3558              		.loc 1 1339 0
 3559 033a 1724     		movs	r4, #23	@ tmp404,
 3560 033c 6C44     		add	r4, r4, sp	@ tmp404,
 3561 033e 1A4B     		ldr	r3, .L291+16	@ tmp405,
 3562 0340 2D48     		ldr	r0, .L291+96	@ tmp406,
 3563 0342 0122     		movs	r2, #1	@,
 3564 0344 3221     		movs	r1, #50	@,
 3565 0346 FFF7FEFF 		bl	GSMSendCommand	@
 3566 034a 0300     		movs	r3, r0	@ tmp407,
 3567 034c 2370     		strb	r3, [r4]	@ tmp409, i
1340:src/sim900_800.c **** 
1341:src/sim900_800.c **** 			if (i == 2)
 3568              		.loc 1 1341 0
 3569 034e 1723     		movs	r3, #23	@ tmp410,
 3570 0350 6B44     		add	r3, r3, sp	@ tmp410,
 3571 0352 1B78     		ldrb	r3, [r3]	@ tmp411, i
 3572 0354 022B     		cmp	r3, #2	@ tmp411,
 3573 0356 13D1     		bne	.L247	@,
1342:src/sim900_800.c **** 			{
1343:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 3574              		.loc 1 1343 0
 3575 0358 2849     		ldr	r1, .L291+100	@ tmp412,
 3576 035a 134B     		ldr	r3, .L291+16	@ tmp413,
 3577 035c 0A22     		movs	r2, #10	@,
 3578 035e 1800     		movs	r0, r3	@, tmp413
 3579 0360 FFF7FEFF 		bl	strncmp	@
 3580 0364 031E     		subs	r3, r0, #0	@ D.7881,,
 3581 0366 06D1     		bne	.L248	@,
1344:src/sim900_800.c **** 				{
1345:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3582              		.loc 1 1345 0
 3583 0368 0B4B     		ldr	r3, .L291	@ tmp414,
 3584 036a 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3585 036c 0133     		adds	r3, r3, #1	@ tmp415,
 3586 036e DAB2     		uxtb	r2, r3	@ D.7880, tmp415
 3587 0370 094B     		ldr	r3, .L291	@ tmp416,
 3588 0372 1A70     		strb	r2, [r3]	@ tmp417, GSMConfigGPRSState
 3589 0374 04E0     		b	.L247	@
 3590              	.L248:
1346:src/sim900_800.c **** 				}
1347:src/sim900_800.c **** 				else
1348:src/sim900_800.c **** 				{
1349:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3591              		.loc 1 1349 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 90


 3592 0376 084B     		ldr	r3, .L291	@ tmp418,
 3593 0378 0022     		movs	r2, #0	@ tmp419,
 3594 037a 1A70     		strb	r2, [r3]	@ tmp420, GSMConfigGPRSState
1350:src/sim900_800.c **** 					return 3;
 3595              		.loc 1 1350 0
 3596 037c 0323     		movs	r3, #3	@ D.7880,
 3597 037e 74E2     		b	.L230	@
 3598              	.L247:
1351:src/sim900_800.c **** 				}
1352:src/sim900_800.c **** 			}
1353:src/sim900_800.c **** 
1354:src/sim900_800.c **** 			if (i > 2)
 3599              		.loc 1 1354 0
 3600 0380 1723     		movs	r3, #23	@ tmp421,
 3601 0382 6B44     		add	r3, r3, sp	@ tmp421,
 3602 0384 1B78     		ldrb	r3, [r3]	@ tmp422, i
 3603 0386 022B     		cmp	r3, #2	@ tmp422,
 3604 0388 00D8     		bhi	.LCB2826	@
 3605 038a 51E2     		b	.L281	@long jump	@
 3606              	.LCB2826:
1355:src/sim900_800.c **** 			{
1356:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3607              		.loc 1 1356 0
 3608 038c 024B     		ldr	r3, .L291	@ tmp423,
 3609 038e 0022     		movs	r2, #0	@ tmp424,
 3610 0390 1A70     		strb	r2, [r3]	@ tmp425, GSMConfigGPRSState
1357:src/sim900_800.c **** 				return 3;
 3611              		.loc 1 1357 0
 3612 0392 0323     		movs	r3, #3	@ D.7880,
 3613 0394 69E2     		b	.L230	@
 3614              	.L292:
 3615 0396 C046     		.align	2
 3616              	.L291:
 3617 0398 00000000 		.word	GSMConfigGPRSState
 3618 039c 00000000 		.word	.L211
 3619 03a0 00000000 		.word	GSMConfigGPRSTimeOut
 3620 03a4 00000000 		.word	GSMConfigGPRSflag
 3621 03a8 00000000 		.word	GSMbuffRtaCommand
 3622 03ac E4000000 		.word	.LC104
 3623 03b0 FC000000 		.word	.LC106
 3624 03b4 00000000 		.word	GSM_IPINITIAL
 3625 03b8 00000000 		.word	GSMbuffStatus
 3626 03bc 00000000 		.word	GSM_IPSTART
 3627 03c0 00000000 		.word	GSM_IPGPRSACT
 3628 03c4 00000000 		.word	GSM_IPSTATUS
 3629 03c8 00000000 		.word	GSMbuffGPRSCommand
 3630 03cc 0C010000 		.word	.LC114
 3631 03d0 20010000 		.word	.LC116
 3632 03d4 DC000000 		.word	.LC94
 3633 03d8 00000000 		.word	GSM_IPCONNECTING
 3634 03dc 00000000 		.word	GSM_IPCONNOK
 3635 03e0 00000000 		.word	GSM_IPCONNCLOSE
 3636 03e4 24010000 		.word	.LC122
 3637 03e8 30010000 		.word	.LC124
 3638 03ec 3C010000 		.word	.LC126
 3639 03f0 48010000 		.word	.LC128
 3640 03f4 58010000 		.word	.LC130
ARM GAS  /tmp/cc4fp2Bh.s 			page 91


 3641 03f8 68010000 		.word	.LC132
 3642 03fc 74010000 		.word	.LC134
 3643              	.L217:
1358:src/sim900_800.c **** 			}
1359:src/sim900_800.c **** 			break;
1360:src/sim900_800.c **** 		case 6:
1361:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3644              		.loc 1 1361 0
 3645 0400 1724     		movs	r4, #23	@ tmp426,
 3646 0402 6C44     		add	r4, r4, sp	@ tmp426,
 3647 0404 CF4B     		ldr	r3, .L293	@ tmp427,
 3648 0406 D048     		ldr	r0, .L293+4	@ tmp428,
 3649 0408 0122     		movs	r2, #1	@,
 3650 040a 3221     		movs	r1, #50	@,
 3651 040c FFF7FEFF 		bl	GSMSendCommand	@
 3652 0410 0300     		movs	r3, r0	@ tmp429,
 3653 0412 2370     		strb	r3, [r4]	@ tmp431, i
1362:src/sim900_800.c **** 
1363:src/sim900_800.c **** 			if (i == 2)
 3654              		.loc 1 1363 0
 3655 0414 1723     		movs	r3, #23	@ tmp432,
 3656 0416 6B44     		add	r3, r3, sp	@ tmp432,
 3657 0418 1B78     		ldrb	r3, [r3]	@ tmp433, i
 3658 041a 022B     		cmp	r3, #2	@ tmp433,
 3659 041c 2DD1     		bne	.L250	@,
1364:src/sim900_800.c **** 			{
1365:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 3660              		.loc 1 1365 0
 3661 041e CB49     		ldr	r1, .L293+8	@ tmp434,
 3662 0420 C84B     		ldr	r3, .L293	@ tmp435,
 3663 0422 0522     		movs	r2, #5	@,
 3664 0424 1800     		movs	r0, r3	@, tmp435
 3665 0426 FFF7FEFF 		bl	strncmp	@
 3666 042a 031E     		subs	r3, r0, #0	@ D.7881,,
 3667 042c 20D1     		bne	.L251	@,
1366:src/sim900_800.c **** 				{
1367:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 3668              		.loc 1 1367 0
 3669 042e C54B     		ldr	r3, .L293	@ tmp436,
 3670 0430 9B79     		ldrb	r3, [r3, #6]	@ D.7880,
 3671 0432 303B     		subs	r3, r3, #48	@ D.7881,
 3672 0434 DBB2     		uxtb	r3, r3	@ D.7884, D.7881
 3673 0436 1A1C     		adds	r2, r3, #0	@ tmp438, tmp437
 3674 0438 9200     		lsls	r2, r2, #2	@ tmp439, tmp438,
 3675 043a D318     		adds	r3, r2, r3	@ tmp441, tmp440, tmp437
 3676 043c DB18     		adds	r3, r3, r3	@ tmp443, tmp442, tmp442
 3677 043e DAB2     		uxtb	r2, r3	@ D.7884, tmp441
 3678 0440 C04B     		ldr	r3, .L293	@ tmp444,
 3679 0442 DB79     		ldrb	r3, [r3, #7]	@ D.7880,
 3680 0444 D318     		adds	r3, r2, r3	@ tmp445, D.7884, D.7880
 3681 0446 DBB2     		uxtb	r3, r3	@ D.7884, tmp445
 3682 0448 303B     		subs	r3, r3, #48	@ tmp446,
 3683 044a DAB2     		uxtb	r2, r3	@ D.7884, tmp446
 3684 044c C04B     		ldr	r3, .L293+12	@ tmp447,
 3685 044e 1A70     		strb	r2, [r3]	@ tmp448, GPRSrssi
1368:src/sim900_800.c **** 
1369:src/sim900_800.c **** 						if (GPRSrssi != 99)
ARM GAS  /tmp/cc4fp2Bh.s 			page 92


 3686              		.loc 1 1369 0
 3687 0450 BF4B     		ldr	r3, .L293+12	@ tmp449,
 3688 0452 1B78     		ldrb	r3, [r3]	@ D.7884, GPRSrssi
 3689 0454 632B     		cmp	r3, #99	@ D.7884,
 3690 0456 06D0     		beq	.L252	@,
1370:src/sim900_800.c **** 							GSMConfigGPRSState++;
 3691              		.loc 1 1370 0
 3692 0458 BE4B     		ldr	r3, .L293+16	@ tmp450,
 3693 045a 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3694 045c 0133     		adds	r3, r3, #1	@ tmp451,
 3695 045e DAB2     		uxtb	r2, r3	@ D.7880, tmp451
 3696 0460 BC4B     		ldr	r3, .L293+16	@ tmp452,
 3697 0462 1A70     		strb	r2, [r3]	@ tmp453, GSMConfigGPRSState
 3698 0464 09E0     		b	.L250	@
 3699              	.L252:
1371:src/sim900_800.c **** 						else
1372:src/sim900_800.c **** 						{
1373:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 3700              		.loc 1 1373 0
 3701 0466 BB4B     		ldr	r3, .L293+16	@ tmp454,
 3702 0468 0022     		movs	r2, #0	@ tmp455,
 3703 046a 1A70     		strb	r2, [r3]	@ tmp456, GSMConfigGPRSState
1374:src/sim900_800.c **** 							return 20;
 3704              		.loc 1 1374 0
 3705 046c 1423     		movs	r3, #20	@ D.7880,
 3706 046e FCE1     		b	.L230	@
 3707              	.L251:
1375:src/sim900_800.c **** 						}
1376:src/sim900_800.c **** 				}
1377:src/sim900_800.c **** 				else
1378:src/sim900_800.c **** 				{
1379:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3708              		.loc 1 1379 0
 3709 0470 B84B     		ldr	r3, .L293+16	@ tmp457,
 3710 0472 0022     		movs	r2, #0	@ tmp458,
 3711 0474 1A70     		strb	r2, [r3]	@ tmp459, GSMConfigGPRSState
1380:src/sim900_800.c **** 					return 3;
 3712              		.loc 1 1380 0
 3713 0476 0323     		movs	r3, #3	@ D.7880,
 3714 0478 F7E1     		b	.L230	@
 3715              	.L250:
1381:src/sim900_800.c **** 				}
1382:src/sim900_800.c **** 			}
1383:src/sim900_800.c **** 
1384:src/sim900_800.c **** 			if (i > 2)
 3716              		.loc 1 1384 0
 3717 047a 1723     		movs	r3, #23	@ tmp460,
 3718 047c 6B44     		add	r3, r3, sp	@ tmp460,
 3719 047e 1B78     		ldrb	r3, [r3]	@ tmp461, i
 3720 0480 022B     		cmp	r3, #2	@ tmp461,
 3721 0482 00D8     		bhi	.LCB2939	@
 3722 0484 D6E1     		b	.L282	@long jump	@
 3723              	.LCB2939:
1385:src/sim900_800.c **** 			{
1386:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3724              		.loc 1 1386 0
 3725 0486 B34B     		ldr	r3, .L293+16	@ tmp462,
ARM GAS  /tmp/cc4fp2Bh.s 			page 93


 3726 0488 0022     		movs	r2, #0	@ tmp463,
 3727 048a 1A70     		strb	r2, [r3]	@ tmp464, GSMConfigGPRSState
1387:src/sim900_800.c **** 				return 3;
 3728              		.loc 1 1387 0
 3729 048c 0323     		movs	r3, #3	@ D.7880,
 3730 048e ECE1     		b	.L230	@
 3731              	.L218:
1388:src/sim900_800.c **** 			}
1389:src/sim900_800.c **** 			break;
1390:src/sim900_800.c **** 		case 7:
1391:src/sim900_800.c **** 
1392:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3732              		.loc 1 1392 0
 3733 0490 1724     		movs	r4, #23	@ tmp465,
 3734 0492 6C44     		add	r4, r4, sp	@ tmp465,
 3735 0494 AB4B     		ldr	r3, .L293	@ tmp466,
 3736 0496 B048     		ldr	r0, .L293+20	@ tmp467,
 3737 0498 0022     		movs	r2, #0	@,
 3738 049a 3221     		movs	r1, #50	@,
 3739 049c FFF7FEFF 		bl	GSMSendCommand	@
 3740 04a0 0300     		movs	r3, r0	@ tmp468,
 3741 04a2 2370     		strb	r3, [r4]	@ tmp470, i
1393:src/sim900_800.c **** 
1394:src/sim900_800.c **** 			if (i == 2)
 3742              		.loc 1 1394 0
 3743 04a4 1723     		movs	r3, #23	@ tmp471,
 3744 04a6 6B44     		add	r3, r3, sp	@ tmp471,
 3745 04a8 1B78     		ldrb	r3, [r3]	@ tmp472, i
 3746 04aa 022B     		cmp	r3, #2	@ tmp472,
 3747 04ac 05D1     		bne	.L254	@,
1395:src/sim900_800.c **** 			{
1396:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3748              		.loc 1 1396 0
 3749 04ae A94B     		ldr	r3, .L293+16	@ tmp473,
 3750 04b0 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3751 04b2 0133     		adds	r3, r3, #1	@ tmp474,
 3752 04b4 DAB2     		uxtb	r2, r3	@ D.7880, tmp474
 3753 04b6 A74B     		ldr	r3, .L293+16	@ tmp475,
 3754 04b8 1A70     		strb	r2, [r3]	@ tmp476, GSMConfigGPRSState
 3755              	.L254:
1397:src/sim900_800.c **** 			}
1398:src/sim900_800.c **** 
1399:src/sim900_800.c **** 			if (i > 2)
 3756              		.loc 1 1399 0
 3757 04ba 1723     		movs	r3, #23	@ tmp477,
 3758 04bc 6B44     		add	r3, r3, sp	@ tmp477,
 3759 04be 1B78     		ldrb	r3, [r3]	@ tmp478, i
 3760 04c0 022B     		cmp	r3, #2	@ tmp478,
 3761 04c2 00D8     		bhi	.LCB2974	@
 3762 04c4 B8E1     		b	.L283	@long jump	@
 3763              	.LCB2974:
1400:src/sim900_800.c **** 			{
1401:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3764              		.loc 1 1401 0
 3765 04c6 A34B     		ldr	r3, .L293+16	@ tmp479,
 3766 04c8 0022     		movs	r2, #0	@ tmp480,
 3767 04ca 1A70     		strb	r2, [r3]	@ tmp481, GSMConfigGPRSState
ARM GAS  /tmp/cc4fp2Bh.s 			page 94


1402:src/sim900_800.c **** 				return 3;
 3768              		.loc 1 1402 0
 3769 04cc 0323     		movs	r3, #3	@ D.7880,
 3770 04ce CCE1     		b	.L230	@
 3771              	.L219:
1403:src/sim900_800.c **** 			}
1404:src/sim900_800.c **** 			break;
1405:src/sim900_800.c **** 
1406:src/sim900_800.c **** 		case 8:
1407:src/sim900_800.c **** 
1408:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3772              		.loc 1 1408 0
 3773 04d0 1724     		movs	r4, #23	@ tmp482,
 3774 04d2 6C44     		add	r4, r4, sp	@ tmp482,
 3775 04d4 9B4B     		ldr	r3, .L293	@ tmp483,
 3776 04d6 A148     		ldr	r0, .L293+24	@ tmp484,
 3777 04d8 0122     		movs	r2, #1	@,
 3778 04da 3221     		movs	r1, #50	@,
 3779 04dc FFF7FEFF 		bl	GSMSendCommand	@
 3780 04e0 0300     		movs	r3, r0	@ tmp485,
 3781 04e2 2370     		strb	r3, [r4]	@ tmp487, i
1409:src/sim900_800.c **** 
1410:src/sim900_800.c **** 			if (i == 2)
 3782              		.loc 1 1410 0
 3783 04e4 1723     		movs	r3, #23	@ tmp488,
 3784 04e6 6B44     		add	r3, r3, sp	@ tmp488,
 3785 04e8 1B78     		ldrb	r3, [r3]	@ tmp489, i
 3786 04ea 022B     		cmp	r3, #2	@ tmp489,
 3787 04ec 38D1     		bne	.L256	@,
1411:src/sim900_800.c **** 			{
1412:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 3788              		.loc 1 1412 0
 3789 04ee 9C49     		ldr	r1, .L293+28	@ tmp490,
 3790 04f0 944B     		ldr	r3, .L293	@ tmp491,
 3791 04f2 0722     		movs	r2, #7	@,
 3792 04f4 1800     		movs	r0, r3	@, tmp491
 3793 04f6 FFF7FEFF 		bl	strncmp	@
 3794 04fa 031E     		subs	r3, r0, #0	@ D.7881,,
 3795 04fc 30D1     		bne	.L256	@,
1413:src/sim900_800.c **** 				{
1414:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 3796              		.loc 1 1414 0
 3797 04fe 914B     		ldr	r3, .L293	@ tmp492,
 3798 0500 1B7A     		ldrb	r3, [r3, #8]	@ D.7880,
 3799 0502 312B     		cmp	r3, #49	@ D.7880,
 3800 0504 23D1     		bne	.L257	@,
1415:src/sim900_800.c **** 					{
1416:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 3801              		.loc 1 1416 0
 3802 0506 934B     		ldr	r3, .L293+16	@ tmp493,
 3803 0508 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3804 050a 0133     		adds	r3, r3, #1	@ tmp494,
 3805 050c DAB2     		uxtb	r2, r3	@ D.7880, tmp494
 3806 050e 914B     		ldr	r3, .L293+16	@ tmp495,
 3807 0510 1A70     		strb	r2, [r3]	@ tmp496, GSMConfigGPRSState
1417:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 3808              		.loc 1 1417 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 95


 3809 0512 944A     		ldr	r2, .L293+32	@ tmp497,
 3810 0514 944B     		ldr	r3, .L293+36	@ tmp498,
 3811 0516 1000     		movs	r0, r2	@ tmp499, tmp497
 3812 0518 1900     		movs	r1, r3	@ tmp500, tmp498
 3813 051a 1423     		movs	r3, #20	@ tmp501,
 3814 051c 1A00     		movs	r2, r3	@, tmp501
 3815 051e FFF7FEFF 		bl	memcpy	@
1418:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3816              		.loc 1 1418 0
 3817 0522 029A     		ldr	r2, [sp, #8]	@ tmp504, ptrAPN
 3818 0524 8F4B     		ldr	r3, .L293+32	@ tmp505,
 3819 0526 1100     		movs	r1, r2	@, tmp504
 3820 0528 1800     		movs	r0, r3	@, tmp505
 3821 052a FFF7FEFF 		bl	strcat	@
1419:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3822              		.loc 1 1419 0
 3823 052e 8D4B     		ldr	r3, .L293+32	@ tmp506,
 3824 0530 1800     		movs	r0, r3	@, tmp506
 3825 0532 FFF7FEFF 		bl	strlen	@
 3826 0536 0300     		movs	r3, r0	@ tmp507,
 3827 0538 1A00     		movs	r2, r3	@ D.7882, tmp508
 3828 053a 8A4B     		ldr	r3, .L293+32	@ tmp509,
 3829 053c D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp509
 3830 053e 8B4B     		ldr	r3, .L293+40	@ tmp510,
 3831 0540 1000     		movs	r0, r2	@ tmp511, D.7883
 3832 0542 1900     		movs	r1, r3	@ tmp512, tmp510
 3833 0544 0423     		movs	r3, #4	@ tmp513,
 3834 0546 1A00     		movs	r2, r3	@, tmp513
 3835 0548 FFF7FEFF 		bl	memcpy	@
 3836 054c 08E0     		b	.L256	@
 3837              	.L257:
1420:src/sim900_800.c **** 					}
1421:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 3838              		.loc 1 1421 0
 3839 054e 7D4B     		ldr	r3, .L293	@ tmp516,
 3840 0550 1B7A     		ldrb	r3, [r3, #8]	@ D.7880,
 3841 0552 302B     		cmp	r3, #48	@ D.7880,
 3842 0554 04D1     		bne	.L256	@,
1422:src/sim900_800.c **** 					{
1423:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 3843              		.loc 1 1423 0
 3844 0556 7F4B     		ldr	r3, .L293+16	@ tmp517,
 3845 0558 0022     		movs	r2, #0	@ tmp518,
 3846 055a 1A70     		strb	r2, [r3]	@ tmp519, GSMConfigGPRSState
1424:src/sim900_800.c **** 						return 3;
 3847              		.loc 1 1424 0
 3848 055c 0323     		movs	r3, #3	@ D.7880,
 3849 055e 84E1     		b	.L230	@
 3850              	.L256:
1425:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
1426:src/sim900_800.c **** 					}
1427:src/sim900_800.c **** 				}
1428:src/sim900_800.c **** 			}
1429:src/sim900_800.c **** 
1430:src/sim900_800.c **** 			if (i > 2)
 3851              		.loc 1 1430 0
 3852 0560 1723     		movs	r3, #23	@ tmp520,
ARM GAS  /tmp/cc4fp2Bh.s 			page 96


 3853 0562 6B44     		add	r3, r3, sp	@ tmp520,
 3854 0564 1B78     		ldrb	r3, [r3]	@ tmp521, i
 3855 0566 022B     		cmp	r3, #2	@ tmp521,
 3856 0568 00D8     		bhi	.LCB3060	@
 3857 056a 67E1     		b	.L284	@long jump	@
 3858              	.LCB3060:
1431:src/sim900_800.c **** 			{
1432:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3859              		.loc 1 1432 0
 3860 056c 794B     		ldr	r3, .L293+16	@ tmp522,
 3861 056e 0022     		movs	r2, #0	@ tmp523,
 3862 0570 1A70     		strb	r2, [r3]	@ tmp524, GSMConfigGPRSState
1433:src/sim900_800.c **** 				return 3;
 3863              		.loc 1 1433 0
 3864 0572 0323     		movs	r3, #3	@ D.7880,
 3865 0574 79E1     		b	.L230	@
 3866              	.L220:
1434:src/sim900_800.c **** 			}
1435:src/sim900_800.c **** 
1436:src/sim900_800.c **** 			break;
1437:src/sim900_800.c **** 
1438:src/sim900_800.c **** 		case 9:
1439:src/sim900_800.c **** 
1440:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3867              		.loc 1 1440 0
 3868 0576 1724     		movs	r4, #23	@ tmp525,
 3869 0578 6C44     		add	r4, r4, sp	@ tmp525,
 3870 057a 724B     		ldr	r3, .L293	@ tmp526,
 3871 057c 7948     		ldr	r0, .L293+32	@ tmp527,
 3872 057e 0022     		movs	r2, #0	@,
 3873 0580 3221     		movs	r1, #50	@,
 3874 0582 FFF7FEFF 		bl	GSMSendCommand	@
 3875 0586 0300     		movs	r3, r0	@ tmp528,
 3876 0588 2370     		strb	r3, [r4]	@ tmp530, i
1441:src/sim900_800.c **** 
1442:src/sim900_800.c **** 			if (i == 2)
 3877              		.loc 1 1442 0
 3878 058a 1723     		movs	r3, #23	@ tmp531,
 3879 058c 6B44     		add	r3, r3, sp	@ tmp531,
 3880 058e 1B78     		ldrb	r3, [r3]	@ tmp532, i
 3881 0590 022B     		cmp	r3, #2	@ tmp532,
 3882 0592 4CD1     		bne	.L259	@,
1443:src/sim900_800.c **** 			{
1444:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3883              		.loc 1 1444 0
 3884 0594 6F4B     		ldr	r3, .L293+16	@ tmp533,
 3885 0596 1B78     		ldrb	r3, [r3]	@ D.7880, GSMConfigGPRSState
 3886 0598 0133     		adds	r3, r3, #1	@ tmp534,
 3887 059a DAB2     		uxtb	r2, r3	@ D.7880, tmp534
 3888 059c 6D4B     		ldr	r3, .L293+16	@ tmp535,
 3889 059e 1A70     		strb	r2, [r3]	@ tmp536, GSMConfigGPRSState
1445:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 3890              		.loc 1 1445 0
 3891 05a0 704A     		ldr	r2, .L293+32	@ tmp537,
 3892 05a2 734B     		ldr	r3, .L293+44	@ tmp538,
 3893 05a4 1000     		movs	r0, r2	@ tmp539, tmp537
 3894 05a6 1900     		movs	r1, r3	@ tmp540, tmp538
ARM GAS  /tmp/cc4fp2Bh.s 			page 97


 3895 05a8 0A23     		movs	r3, #10	@ tmp541,
 3896 05aa 1A00     		movs	r2, r3	@, tmp541
 3897 05ac FFF7FEFF 		bl	memcpy	@
1446:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3898              		.loc 1 1446 0
 3899 05b0 029A     		ldr	r2, [sp, #8]	@ tmp544, ptrAPN
 3900 05b2 6C4B     		ldr	r3, .L293+32	@ tmp545,
 3901 05b4 1100     		movs	r1, r2	@, tmp544
 3902 05b6 1800     		movs	r0, r3	@, tmp545
 3903 05b8 FFF7FEFF 		bl	strcat	@
1447:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3904              		.loc 1 1447 0
 3905 05bc 694B     		ldr	r3, .L293+32	@ tmp546,
 3906 05be 1800     		movs	r0, r3	@, tmp546
 3907 05c0 FFF7FEFF 		bl	strlen	@
 3908 05c4 0300     		movs	r3, r0	@ tmp547,
 3909 05c6 1A00     		movs	r2, r3	@ D.7882, tmp548
 3910 05c8 664B     		ldr	r3, .L293+32	@ tmp549,
 3911 05ca D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp549
 3912 05cc 694B     		ldr	r3, .L293+48	@ tmp550,
 3913 05ce 1000     		movs	r0, r2	@ tmp551, D.7883
 3914 05d0 1900     		movs	r1, r3	@ tmp552, tmp550
 3915 05d2 0423     		movs	r3, #4	@ tmp553,
 3916 05d4 1A00     		movs	r2, r3	@, tmp553
 3917 05d6 FFF7FEFF 		bl	memcpy	@
1448:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 3918              		.loc 1 1448 0
 3919 05da 019A     		ldr	r2, [sp, #4]	@ tmp556, ptrUSER
 3920 05dc 614B     		ldr	r3, .L293+32	@ tmp557,
 3921 05de 1100     		movs	r1, r2	@, tmp556
 3922 05e0 1800     		movs	r0, r3	@, tmp557
 3923 05e2 FFF7FEFF 		bl	strcat	@
1449:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3924              		.loc 1 1449 0
 3925 05e6 5F4B     		ldr	r3, .L293+32	@ tmp558,
 3926 05e8 1800     		movs	r0, r3	@, tmp558
 3927 05ea FFF7FEFF 		bl	strlen	@
 3928 05ee 0300     		movs	r3, r0	@ tmp559,
 3929 05f0 1A00     		movs	r2, r3	@ D.7882, tmp560
 3930 05f2 5C4B     		ldr	r3, .L293+32	@ tmp561,
 3931 05f4 D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp561
 3932 05f6 5F4B     		ldr	r3, .L293+48	@ tmp562,
 3933 05f8 1000     		movs	r0, r2	@ tmp563, D.7883
 3934 05fa 1900     		movs	r1, r3	@ tmp564, tmp562
 3935 05fc 0423     		movs	r3, #4	@ tmp565,
 3936 05fe 1A00     		movs	r2, r3	@, tmp565
 3937 0600 FFF7FEFF 		bl	memcpy	@
1450:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 3938              		.loc 1 1450 0
 3939 0604 009A     		ldr	r2, [sp]	@ tmp568, ptrKEY
 3940 0606 574B     		ldr	r3, .L293+32	@ tmp569,
 3941 0608 1100     		movs	r1, r2	@, tmp568
 3942 060a 1800     		movs	r0, r3	@, tmp569
 3943 060c FFF7FEFF 		bl	strcat	@
1451:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3944              		.loc 1 1451 0
 3945 0610 544B     		ldr	r3, .L293+32	@ tmp570,
ARM GAS  /tmp/cc4fp2Bh.s 			page 98


 3946 0612 1800     		movs	r0, r3	@, tmp570
 3947 0614 FFF7FEFF 		bl	strlen	@
 3948 0618 0300     		movs	r3, r0	@ tmp571,
 3949 061a 1A00     		movs	r2, r3	@ D.7882, tmp572
 3950 061c 514B     		ldr	r3, .L293+32	@ tmp573,
 3951 061e D218     		adds	r2, r2, r3	@ D.7883, D.7882, tmp573
 3952 0620 524B     		ldr	r3, .L293+40	@ tmp574,
 3953 0622 1000     		movs	r0, r2	@ tmp575, D.7883
 3954 0624 1900     		movs	r1, r3	@ tmp576, tmp574
 3955 0626 0423     		movs	r3, #4	@ tmp577,
 3956 0628 1A00     		movs	r2, r3	@, tmp577
 3957 062a FFF7FEFF 		bl	memcpy	@
 3958              	.L259:
1452:src/sim900_800.c **** 			}
1453:src/sim900_800.c **** 
1454:src/sim900_800.c **** 			if (i > 2)
 3959              		.loc 1 1454 0
 3960 062e 1723     		movs	r3, #23	@ tmp580,
 3961 0630 6B44     		add	r3, r3, sp	@ tmp580,
 3962 0632 1B78     		ldrb	r3, [r3]	@ tmp581, i
 3963 0634 022B     		cmp	r3, #2	@ tmp581,
 3964 0636 00D8     		bhi	.LCB3156	@
 3965 0638 02E1     		b	.L285	@long jump	@
 3966              	.LCB3156:
1455:src/sim900_800.c **** 			{
1456:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3967              		.loc 1 1456 0
 3968 063a 464B     		ldr	r3, .L293+16	@ tmp582,
 3969 063c 0022     		movs	r2, #0	@ tmp583,
 3970 063e 1A70     		strb	r2, [r3]	@ tmp584, GSMConfigGPRSState
1457:src/sim900_800.c **** 				return 3;
 3971              		.loc 1 1457 0
 3972 0640 0323     		movs	r3, #3	@ D.7880,
 3973 0642 12E1     		b	.L230	@
 3974              	.L221:
1458:src/sim900_800.c **** 			}
1459:src/sim900_800.c **** 			break;
1460:src/sim900_800.c **** 
1461:src/sim900_800.c **** 		case 10:
1462:src/sim900_800.c **** 
1463:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3975              		.loc 1 1463 0
 3976 0644 1724     		movs	r4, #23	@ tmp585,
 3977 0646 6C44     		add	r4, r4, sp	@ tmp585,
 3978 0648 3E4B     		ldr	r3, .L293	@ tmp586,
 3979 064a 4648     		ldr	r0, .L293+32	@ tmp587,
 3980 064c 0022     		movs	r2, #0	@,
 3981 064e 3221     		movs	r1, #50	@,
 3982 0650 FFF7FEFF 		bl	GSMSendCommand	@
 3983 0654 0300     		movs	r3, r0	@ tmp588,
 3984 0656 2370     		strb	r3, [r4]	@ tmp590, i
1464:src/sim900_800.c **** 
1465:src/sim900_800.c **** 			if (i == 2)
 3985              		.loc 1 1465 0
 3986 0658 1723     		movs	r3, #23	@ tmp591,
 3987 065a 6B44     		add	r3, r3, sp	@ tmp591,
 3988 065c 1B78     		ldrb	r3, [r3]	@ tmp592, i
ARM GAS  /tmp/cc4fp2Bh.s 			page 99


 3989 065e 022B     		cmp	r3, #2	@ tmp592,
 3990 0660 02D1     		bne	.L261	@,
1466:src/sim900_800.c **** 			{
1467:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3991              		.loc 1 1467 0
 3992 0662 3C4B     		ldr	r3, .L293+16	@ tmp593,
 3993 0664 0222     		movs	r2, #2	@ tmp594,
 3994 0666 1A70     		strb	r2, [r3]	@ tmp595, GSMConfigGPRSState
 3995              	.L261:
1468:src/sim900_800.c **** 			}
1469:src/sim900_800.c **** 
1470:src/sim900_800.c **** 			if (i > 2)
 3996              		.loc 1 1470 0
 3997 0668 1723     		movs	r3, #23	@ tmp596,
 3998 066a 6B44     		add	r3, r3, sp	@ tmp596,
 3999 066c 1B78     		ldrb	r3, [r3]	@ tmp597, i
 4000 066e 022B     		cmp	r3, #2	@ tmp597,
 4001 0670 00D8     		bhi	.LCB3188	@
 4002 0672 E7E0     		b	.L286	@long jump	@
 4003              	.LCB3188:
1471:src/sim900_800.c **** 			{
1472:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4004              		.loc 1 1472 0
 4005 0674 374B     		ldr	r3, .L293+16	@ tmp598,
 4006 0676 0022     		movs	r2, #0	@ tmp599,
 4007 0678 1A70     		strb	r2, [r3]	@ tmp600, GSMConfigGPRSState
1473:src/sim900_800.c **** 				return 3;
 4008              		.loc 1 1473 0
 4009 067a 0323     		movs	r3, #3	@ D.7880,
 4010 067c F5E0     		b	.L230	@
 4011              	.L222:
1474:src/sim900_800.c **** 			}
1475:src/sim900_800.c **** 			break;
1476:src/sim900_800.c **** 
1477:src/sim900_800.c **** 		case 11:
1478:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 4012              		.loc 1 1478 0
 4013 067e 1724     		movs	r4, #23	@ tmp601,
 4014 0680 6C44     		add	r4, r4, sp	@ tmp601,
 4015 0682 304B     		ldr	r3, .L293	@ tmp602,
 4016 0684 3C48     		ldr	r0, .L293+52	@ tmp603,
 4017 0686 0022     		movs	r2, #0	@,
 4018 0688 C821     		movs	r1, #200	@,
 4019 068a FFF7FEFF 		bl	GSMSendCommand	@
 4020 068e 0300     		movs	r3, r0	@ tmp604,
 4021 0690 2370     		strb	r3, [r4]	@ tmp606, i
1479:src/sim900_800.c **** 
1480:src/sim900_800.c **** 			if (i == 2)
 4022              		.loc 1 1480 0
 4023 0692 1723     		movs	r3, #23	@ tmp607,
 4024 0694 6B44     		add	r3, r3, sp	@ tmp607,
 4025 0696 1B78     		ldrb	r3, [r3]	@ tmp608, i
 4026 0698 022B     		cmp	r3, #2	@ tmp608,
 4027 069a 02D1     		bne	.L263	@,
1481:src/sim900_800.c **** 			{
1482:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 4028              		.loc 1 1482 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 100


 4029 069c 2D4B     		ldr	r3, .L293+16	@ tmp609,
 4030 069e 0222     		movs	r2, #2	@ tmp610,
 4031 06a0 1A70     		strb	r2, [r3]	@ tmp611, GSMConfigGPRSState
 4032              	.L263:
1483:src/sim900_800.c **** 			}
1484:src/sim900_800.c **** 
1485:src/sim900_800.c **** 			if (i > 2)
 4033              		.loc 1 1485 0
 4034 06a2 1723     		movs	r3, #23	@ tmp612,
 4035 06a4 6B44     		add	r3, r3, sp	@ tmp612,
 4036 06a6 1B78     		ldrb	r3, [r3]	@ tmp613, i
 4037 06a8 022B     		cmp	r3, #2	@ tmp613,
 4038 06aa 00D8     		bhi	.LCB3220	@
 4039 06ac CCE0     		b	.L287	@long jump	@
 4040              	.LCB3220:
1486:src/sim900_800.c **** 			{
1487:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4041              		.loc 1 1487 0
 4042 06ae 294B     		ldr	r3, .L293+16	@ tmp614,
 4043 06b0 0022     		movs	r2, #0	@ tmp615,
 4044 06b2 1A70     		strb	r2, [r3]	@ tmp616, GSMConfigGPRSState
1488:src/sim900_800.c **** 				return 3;
 4045              		.loc 1 1488 0
 4046 06b4 0323     		movs	r3, #3	@ D.7880,
 4047 06b6 D8E0     		b	.L230	@
 4048              	.L223:
1489:src/sim900_800.c **** 			}
1490:src/sim900_800.c **** 			break;
1491:src/sim900_800.c **** 
1492:src/sim900_800.c **** 		case 12:
1493:src/sim900_800.c **** 
1494:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 4049              		.loc 1 1494 0
 4050 06b8 304B     		ldr	r3, .L293+56	@ tmp617,
 4051 06ba 0322     		movs	r2, #3	@ tmp618,
 4052 06bc 1A70     		strb	r2, [r3]	@ tmp619, GSMConfigGPRSflag
1495:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4053              		.loc 1 1495 0
 4054 06be 1724     		movs	r4, #23	@ tmp620,
 4055 06c0 6C44     		add	r4, r4, sp	@ tmp620,
 4056 06c2 204B     		ldr	r3, .L293	@ tmp621,
 4057 06c4 2E48     		ldr	r0, .L293+60	@ tmp622,
 4058 06c6 0022     		movs	r2, #0	@,
 4059 06c8 3221     		movs	r1, #50	@,
 4060 06ca FFF7FEFF 		bl	GSMSendCommand	@
 4061 06ce 0300     		movs	r3, r0	@ tmp623,
 4062 06d0 2370     		strb	r3, [r4]	@ tmp625, i
1496:src/sim900_800.c **** 
1497:src/sim900_800.c **** 			if (i == 2)
 4063              		.loc 1 1497 0
 4064 06d2 1723     		movs	r3, #23	@ tmp626,
 4065 06d4 6B44     		add	r3, r3, sp	@ tmp626,
 4066 06d6 1B78     		ldrb	r3, [r3]	@ tmp627, i
 4067 06d8 022B     		cmp	r3, #2	@ tmp627,
 4068 06da 05D1     		bne	.L265	@,
1498:src/sim900_800.c **** 			{
1499:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
ARM GAS  /tmp/cc4fp2Bh.s 			page 101


 4069              		.loc 1 1499 0
 4070 06dc 1D4B     		ldr	r3, .L293+16	@ tmp628,
 4071 06de 0222     		movs	r2, #2	@ tmp629,
 4072 06e0 1A70     		strb	r2, [r3]	@ tmp630, GSMConfigGPRSState
1500:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 4073              		.loc 1 1500 0
 4074 06e2 264B     		ldr	r3, .L293+56	@ tmp631,
 4075 06e4 0122     		movs	r2, #1	@ tmp632,
 4076 06e6 1A70     		strb	r2, [r3]	@ tmp633, GSMConfigGPRSflag
 4077              	.L265:
1501:src/sim900_800.c **** 			}
1502:src/sim900_800.c **** 
1503:src/sim900_800.c **** 			if (i > 2)
 4078              		.loc 1 1503 0
 4079 06e8 1723     		movs	r3, #23	@ tmp634,
 4080 06ea 6B44     		add	r3, r3, sp	@ tmp634,
 4081 06ec 1B78     		ldrb	r3, [r3]	@ tmp635, i
 4082 06ee 022B     		cmp	r3, #2	@ tmp635,
 4083 06f0 00D8     		bhi	.LCB3258	@
 4084 06f2 ABE0     		b	.L288	@long jump	@
 4085              	.LCB3258:
1504:src/sim900_800.c **** 			{
1505:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4086              		.loc 1 1505 0
 4087 06f4 174B     		ldr	r3, .L293+16	@ tmp636,
 4088 06f6 0022     		movs	r2, #0	@ tmp637,
 4089 06f8 1A70     		strb	r2, [r3]	@ tmp638, GSMConfigGPRSState
1506:src/sim900_800.c **** 				return 3;
 4090              		.loc 1 1506 0
 4091 06fa 0323     		movs	r3, #3	@ D.7880,
 4092 06fc B5E0     		b	.L230	@
 4093              	.L224:
1507:src/sim900_800.c **** 			}
1508:src/sim900_800.c **** 			break;
1509:src/sim900_800.c **** 		case 13:
1510:src/sim900_800.c **** 
1511:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 4094              		.loc 1 1511 0
 4095 06fe 1724     		movs	r4, #23	@ tmp639,
 4096 0700 6C44     		add	r4, r4, sp	@ tmp639,
 4097 0702 104B     		ldr	r3, .L293	@ tmp640,
 4098 0704 1748     		ldr	r0, .L293+32	@ tmp641,
 4099 0706 0022     		movs	r2, #0	@,
 4100 0708 3221     		movs	r1, #50	@,
 4101 070a FFF7FEFF 		bl	GSMSendCommand	@
 4102 070e 0300     		movs	r3, r0	@ tmp642,
 4103 0710 2370     		strb	r3, [r4]	@ tmp644, i
1512:src/sim900_800.c **** 
1513:src/sim900_800.c **** 			if (i == 2)
 4104              		.loc 1 1513 0
 4105 0712 1723     		movs	r3, #23	@ tmp645,
 4106 0714 6B44     		add	r3, r3, sp	@ tmp645,
 4107 0716 1B78     		ldrb	r3, [r3]	@ tmp646, i
 4108 0718 022B     		cmp	r3, #2	@ tmp646,
 4109 071a 02D1     		bne	.L267	@,
1514:src/sim900_800.c **** 			{
1515:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
ARM GAS  /tmp/cc4fp2Bh.s 			page 102


 4110              		.loc 1 1515 0
 4111 071c 0D4B     		ldr	r3, .L293+16	@ tmp647,
 4112 071e 0322     		movs	r2, #3	@ tmp648,
 4113 0720 1A70     		strb	r2, [r3]	@ tmp649, GSMConfigGPRSState
 4114              	.L267:
1516:src/sim900_800.c **** 			}
1517:src/sim900_800.c **** 
1518:src/sim900_800.c **** 			if (i > 2)
 4115              		.loc 1 1518 0
 4116 0722 1723     		movs	r3, #23	@ tmp650,
 4117 0724 6B44     		add	r3, r3, sp	@ tmp650,
 4118 0726 1B78     		ldrb	r3, [r3]	@ tmp651, i
 4119 0728 022B     		cmp	r3, #2	@ tmp651,
 4120 072a 00D8     		bhi	.LCB3290	@
 4121 072c 90E0     		b	.L289	@long jump	@
 4122              	.LCB3290:
1519:src/sim900_800.c **** 			{
1520:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4123              		.loc 1 1520 0
 4124 072e 094B     		ldr	r3, .L293+16	@ tmp652,
 4125 0730 0022     		movs	r2, #0	@ tmp653,
 4126 0732 1A70     		strb	r2, [r3]	@ tmp654, GSMConfigGPRSState
1521:src/sim900_800.c **** 				return 3;
 4127              		.loc 1 1521 0
 4128 0734 0323     		movs	r3, #3	@ D.7880,
 4129 0736 98E0     		b	.L230	@
 4130              	.L225:
1522:src/sim900_800.c **** 			}
1523:src/sim900_800.c **** 			break;
1524:src/sim900_800.c **** 
1525:src/sim900_800.c **** 		case 14:
1526:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4131              		.loc 1 1526 0
 4132 0738 064B     		ldr	r3, .L293+16	@ tmp655,
 4133 073a 0022     		movs	r2, #0	@ tmp656,
 4134 073c 1A70     		strb	r2, [r3]	@ tmp657, GSMConfigGPRSState
1527:src/sim900_800.c **** 			return 2;
 4135              		.loc 1 1527 0
 4136 073e 0223     		movs	r3, #2	@ D.7880,
 4137 0740 93E0     		b	.L230	@
 4138              	.L294:
 4139 0742 C046     		.align	2
 4140              	.L293:
 4141 0744 00000000 		.word	GSMbuffRtaCommand
 4142 0748 80010000 		.word	.LC136
 4143 074c 8C010000 		.word	.LC138
 4144 0750 00000000 		.word	GPRSrssi
 4145 0754 00000000 		.word	GSMConfigGPRSState
 4146 0758 94010000 		.word	.LC141
 4147 075c A4010000 		.word	.LC143
 4148 0760 B0010000 		.word	.LC145
 4149 0764 00000000 		.word	GSMbuffGPRSCommand
 4150 0768 B8010000 		.word	.LC147
 4151 076c DC000000 		.word	.LC94
 4152 0770 CC010000 		.word	.LC149
 4153 0774 20010000 		.word	.LC116
 4154 0778 D8010000 		.word	.LC151
ARM GAS  /tmp/cc4fp2Bh.s 			page 103


 4155 077c 00000000 		.word	GSMConfigGPRSflag
 4156 0780 E4010000 		.word	.LC153
 4157              	.L226:
1528:src/sim900_800.c **** 			break;
1529:src/sim900_800.c **** 
1530:src/sim900_800.c **** 		case 15:
1531:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 4158              		.loc 1 1531 0
 4159 0784 0F23     		movs	r3, #15	@ tmp658,
 4160 0786 6B44     		add	r3, r3, sp	@ tmp658,
 4161 0788 1B78     		ldrb	r3, [r3]	@ tmp659, sim
 4162 078a 012B     		cmp	r3, #1	@ tmp659,
 4163 078c 04D0     		beq	.L269	@,
 4164              		.loc 1 1531 0 is_stmt 0 discriminator 1
 4165 078e 0F23     		movs	r3, #15	@ tmp660,
 4166 0790 6B44     		add	r3, r3, sp	@ tmp660,
 4167 0792 1B78     		ldrb	r3, [r3]	@ tmp661, sim
 4168 0794 022B     		cmp	r3, #2	@ tmp661,
 4169 0796 1BD1     		bne	.L270	@,
 4170              	.L269:
1532:src/sim900_800.c **** 			{
1533:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 4171              		.loc 1 1533 0 is_stmt 1
 4172 0798 1724     		movs	r4, #23	@ tmp662,
 4173 079a 6C44     		add	r4, r4, sp	@ tmp662,
 4174 079c 0F23     		movs	r3, #15	@ tmp663,
 4175 079e 6B44     		add	r3, r3, sp	@ tmp663,
 4176 07a0 1B78     		ldrb	r3, [r3]	@ tmp664, sim
 4177 07a2 1800     		movs	r0, r3	@, tmp664
 4178 07a4 FFF7FEFF 		bl	GSM_SetSIM	@
 4179 07a8 0300     		movs	r3, r0	@ tmp665,
 4180 07aa 2370     		strb	r3, [r4]	@ tmp667, i
1534:src/sim900_800.c **** 
1535:src/sim900_800.c **** 				if (i == 2)
 4181              		.loc 1 1535 0
 4182 07ac 1723     		movs	r3, #23	@ tmp668,
 4183 07ae 6B44     		add	r3, r3, sp	@ tmp668,
 4184 07b0 1B78     		ldrb	r3, [r3]	@ tmp669, i
 4185 07b2 022B     		cmp	r3, #2	@ tmp669,
 4186 07b4 02D1     		bne	.L271	@,
1536:src/sim900_800.c **** 				{
1537:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 4187              		.loc 1 1537 0
 4188 07b6 2E4B     		ldr	r3, .L295	@ tmp670,
 4189 07b8 0222     		movs	r2, #2	@ tmp671,
 4190 07ba 1A70     		strb	r2, [r3]	@ tmp672, GSMConfigGPRSState
 4191              	.L271:
1538:src/sim900_800.c **** 				}
1539:src/sim900_800.c **** 
1540:src/sim900_800.c **** 				if (i>2)
 4192              		.loc 1 1540 0
 4193 07bc 1723     		movs	r3, #23	@ tmp673,
 4194 07be 6B44     		add	r3, r3, sp	@ tmp673,
 4195 07c0 1B78     		ldrb	r3, [r3]	@ tmp674, i
 4196 07c2 022B     		cmp	r3, #2	@ tmp674,
 4197 07c4 09D9     		bls	.L273	@,
1541:src/sim900_800.c **** 				{
ARM GAS  /tmp/cc4fp2Bh.s 			page 104


1542:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 4198              		.loc 1 1542 0
 4199 07c6 2A4B     		ldr	r3, .L295	@ tmp675,
 4200 07c8 0022     		movs	r2, #0	@ tmp676,
 4201 07ca 1A70     		strb	r2, [r3]	@ tmp677, GSMConfigGPRSState
1543:src/sim900_800.c **** 					return 3;
 4202              		.loc 1 1543 0
 4203 07cc 0323     		movs	r3, #3	@ D.7880,
 4204 07ce 4CE0     		b	.L230	@
 4205              	.L270:
1544:src/sim900_800.c **** 				}
1545:src/sim900_800.c **** 			}
1546:src/sim900_800.c **** 			else
1547:src/sim900_800.c **** 			{
1548:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4206              		.loc 1 1548 0
 4207 07d0 274B     		ldr	r3, .L295	@ tmp678,
 4208 07d2 0022     		movs	r2, #0	@ tmp679,
 4209 07d4 1A70     		strb	r2, [r3]	@ tmp680, GSMConfigGPRSState
1549:src/sim900_800.c **** 				return 3;
 4210              		.loc 1 1549 0
 4211 07d6 0323     		movs	r3, #3	@ D.7880,
 4212 07d8 47E0     		b	.L230	@
 4213              	.L273:
1550:src/sim900_800.c **** 			}
1551:src/sim900_800.c **** 
1552:src/sim900_800.c **** 			break;
 4214              		.loc 1 1552 0 discriminator 1
 4215 07da 3CE0     		b	.L228	@
 4216              	.L227:
1553:src/sim900_800.c **** 		case 16:
1554:src/sim900_800.c **** 
1555:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4217              		.loc 1 1555 0
 4218 07dc 1724     		movs	r4, #23	@ tmp681,
 4219 07de 6C44     		add	r4, r4, sp	@ tmp681,
 4220 07e0 244B     		ldr	r3, .L295+4	@ tmp682,
 4221 07e2 2548     		ldr	r0, .L295+8	@ tmp683,
 4222 07e4 0022     		movs	r2, #0	@,
 4223 07e6 3221     		movs	r1, #50	@,
 4224 07e8 FFF7FEFF 		bl	GSMSendCommand	@
 4225 07ec 0300     		movs	r3, r0	@ tmp684,
 4226 07ee 2370     		strb	r3, [r4]	@ tmp686, i
1556:src/sim900_800.c **** 
1557:src/sim900_800.c **** 			if (i == 2)
 4227              		.loc 1 1557 0
 4228 07f0 1723     		movs	r3, #23	@ tmp687,
 4229 07f2 6B44     		add	r3, r3, sp	@ tmp687,
 4230 07f4 1B78     		ldrb	r3, [r3]	@ tmp688, i
 4231 07f6 022B     		cmp	r3, #2	@ tmp688,
 4232 07f8 04D1     		bne	.L274	@,
1558:src/sim900_800.c **** 			{
1559:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4233              		.loc 1 1559 0
 4234 07fa 1D4B     		ldr	r3, .L295	@ tmp689,
 4235 07fc 0022     		movs	r2, #0	@ tmp690,
 4236 07fe 1A70     		strb	r2, [r3]	@ tmp691, GSMConfigGPRSState
ARM GAS  /tmp/cc4fp2Bh.s 			page 105


1560:src/sim900_800.c **** 				return 3;
 4237              		.loc 1 1560 0
 4238 0800 0323     		movs	r3, #3	@ D.7880,
 4239 0802 32E0     		b	.L230	@
 4240              	.L274:
1561:src/sim900_800.c **** 			}
1562:src/sim900_800.c **** 
1563:src/sim900_800.c **** 			if (i > 2)
 4241              		.loc 1 1563 0
 4242 0804 1723     		movs	r3, #23	@ tmp692,
 4243 0806 6B44     		add	r3, r3, sp	@ tmp692,
 4244 0808 1B78     		ldrb	r3, [r3]	@ tmp693, i
 4245 080a 022B     		cmp	r3, #2	@ tmp693,
 4246 080c 22D9     		bls	.L290	@,
1564:src/sim900_800.c **** 			{
1565:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4247              		.loc 1 1565 0
 4248 080e 184B     		ldr	r3, .L295	@ tmp694,
 4249 0810 0022     		movs	r2, #0	@ tmp695,
 4250 0812 1A70     		strb	r2, [r3]	@ tmp696, GSMConfigGPRSState
1566:src/sim900_800.c **** 				return 3;
 4251              		.loc 1 1566 0
 4252 0814 0323     		movs	r3, #3	@ D.7880,
 4253 0816 28E0     		b	.L230	@
 4254              	.L209:
1567:src/sim900_800.c **** 			}
1568:src/sim900_800.c **** 			break;
1569:src/sim900_800.c **** 		default:
1570:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4255              		.loc 1 1570 0
 4256 0818 154B     		ldr	r3, .L295	@ tmp697,
 4257 081a 0022     		movs	r2, #0	@ tmp698,
 4258 081c 1A70     		strb	r2, [r3]	@ tmp699, GSMConfigGPRSState
1571:src/sim900_800.c **** 			break;
 4259              		.loc 1 1571 0
 4260 081e 1AE0     		b	.L228	@
 4261              	.L277:
1221:src/sim900_800.c **** 		case 2:
 4262              		.loc 1 1221 0
 4263 0820 C046     		nop
 4264 0822 18E0     		b	.L228	@
 4265              	.L278:
1236:src/sim900_800.c **** 		case 3:
 4266              		.loc 1 1236 0
 4267 0824 C046     		nop
 4268 0826 16E0     		b	.L228	@
 4269              	.L279:
1313:src/sim900_800.c **** 
 4270              		.loc 1 1313 0
 4271 0828 C046     		nop
 4272 082a 14E0     		b	.L228	@
 4273              	.L280:
1336:src/sim900_800.c **** 
 4274              		.loc 1 1336 0
 4275 082c C046     		nop
 4276 082e 12E0     		b	.L228	@
 4277              	.L281:
ARM GAS  /tmp/cc4fp2Bh.s 			page 106


1359:src/sim900_800.c **** 		case 6:
 4278              		.loc 1 1359 0
 4279 0830 C046     		nop
 4280 0832 10E0     		b	.L228	@
 4281              	.L282:
1389:src/sim900_800.c **** 		case 7:
 4282              		.loc 1 1389 0
 4283 0834 C046     		nop
 4284 0836 0EE0     		b	.L228	@
 4285              	.L283:
1404:src/sim900_800.c **** 
 4286              		.loc 1 1404 0
 4287 0838 C046     		nop
 4288 083a 0CE0     		b	.L228	@
 4289              	.L284:
1436:src/sim900_800.c **** 
 4290              		.loc 1 1436 0
 4291 083c C046     		nop
 4292 083e 0AE0     		b	.L228	@
 4293              	.L285:
1459:src/sim900_800.c **** 
 4294              		.loc 1 1459 0
 4295 0840 C046     		nop
 4296 0842 08E0     		b	.L228	@
 4297              	.L286:
1475:src/sim900_800.c **** 
 4298              		.loc 1 1475 0
 4299 0844 C046     		nop
 4300 0846 06E0     		b	.L228	@
 4301              	.L287:
1490:src/sim900_800.c **** 
 4302              		.loc 1 1490 0
 4303 0848 C046     		nop
 4304 084a 04E0     		b	.L228	@
 4305              	.L288:
1508:src/sim900_800.c **** 		case 13:
 4306              		.loc 1 1508 0
 4307 084c C046     		nop
 4308 084e 02E0     		b	.L228	@
 4309              	.L289:
1523:src/sim900_800.c **** 
 4310              		.loc 1 1523 0
 4311 0850 C046     		nop
 4312 0852 00E0     		b	.L228	@
 4313              	.L290:
1568:src/sim900_800.c **** 		default:
 4314              		.loc 1 1568 0
 4315 0854 C046     		nop
 4316              	.L228:
1572:src/sim900_800.c **** 
1573:src/sim900_800.c **** 	}
1574:src/sim900_800.c **** 
1575:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 4317              		.loc 1 1575 0
 4318 0856 094B     		ldr	r3, .L295+12	@ tmp700,
 4319 0858 1B88     		ldrh	r3, [r3]	@ D.7885, GSMConfigGPRSTimeOut
 4320 085a 002B     		cmp	r3, #0	@ D.7885,
ARM GAS  /tmp/cc4fp2Bh.s 			page 107


 4321 085c 04D1     		bne	.L276	@,
1576:src/sim900_800.c **** 	{
1577:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 4322              		.loc 1 1577 0
 4323 085e 044B     		ldr	r3, .L295	@ tmp701,
 4324 0860 0022     		movs	r2, #0	@ tmp702,
 4325 0862 1A70     		strb	r2, [r3]	@ tmp703, GSMConfigGPRSState
1578:src/sim900_800.c **** 		return 4;
 4326              		.loc 1 1578 0
 4327 0864 0423     		movs	r3, #4	@ D.7880,
 4328 0866 00E0     		b	.L230	@
 4329              	.L276:
1579:src/sim900_800.c **** 	}
1580:src/sim900_800.c **** 
1581:src/sim900_800.c **** 	return 1;
 4330              		.loc 1 1581 0
 4331 0868 0123     		movs	r3, #1	@ D.7880,
 4332              	.L230:
1582:src/sim900_800.c **** }
 4333              		.loc 1 1582 0
 4334 086a 1800     		movs	r0, r3	@, <retval>
 4335 086c 06B0     		add	sp, sp, #24	@,,
 4336              		@ sp needed	@
 4337 086e 10BD     		pop	{r4, pc}
 4338              	.L296:
 4339              		.align	2
 4340              	.L295:
 4341 0870 00000000 		.word	GSMConfigGPRSState
 4342 0874 00000000 		.word	GSMbuffRtaCommand
 4343 0878 14000000 		.word	.LC33
 4344 087c 00000000 		.word	GSMConfigGPRSTimeOut
 4345              		.cfi_endproc
 4346              	.LFE31:
 4347              		.size	GSMConfigGPRS, .-GSMConfigGPRS
 4348              		.section	.rodata
 4349 01ef 00       		.align	2
 4350              	.LC157:
 4351 01f0 41542B43 		.ascii	"AT+CDSDS=1\015\012\000"
 4351      44534453 
 4351      3D310D0A 
 4351      00
 4352 01fd 000000   		.align	2
 4353              	.LC159:
 4354 0200 41542B43 		.ascii	"AT+CDSDS=2\015\012\000"
 4354      44534453 
 4354      3D320D0A 
 4354      00
 4355              		.section	.text.GSM_SetSIM,"ax",%progbits
 4356              		.align	2
 4357              		.global	GSM_SetSIM
 4358              		.code	16
 4359              		.thumb_func
 4360              		.type	GSM_SetSIM, %function
 4361              	GSM_SetSIM:
 4362              	.LFB32:
1583:src/sim900_800.c **** 
1584:src/sim900_800.c **** char GSM_SetSIM (unsigned char sim)
ARM GAS  /tmp/cc4fp2Bh.s 			page 108


1585:src/sim900_800.c **** {
 4363              		.loc 1 1585 0
 4364              		.cfi_startproc
 4365 0000 10B5     		push	{r4, lr}	@
 4366              	.LCFI16:
 4367              		.cfi_def_cfa_offset 8
 4368              		.cfi_offset 4, -8
 4369              		.cfi_offset 14, -4
 4370 0002 84B0     		sub	sp, sp, #16	@,,
 4371              	.LCFI17:
 4372              		.cfi_def_cfa_offset 24
 4373 0004 0200     		movs	r2, r0	@ tmp112, sim
 4374 0006 6B46     		mov	r3, sp	@ tmp137,
 4375 0008 0733     		adds	r3, r3, #7	@ tmp113,
 4376 000a 1A70     		strb	r2, [r3]	@ tmp114, sim
1586:src/sim900_800.c **** 
1587:src/sim900_800.c **** 	unsigned char i;
1588:src/sim900_800.c **** 
1589:src/sim900_800.c **** 	if (sim == 1)
 4377              		.loc 1 1589 0
 4378 000c 6B46     		mov	r3, sp	@ tmp138,
 4379 000e 0733     		adds	r3, r3, #7	@ tmp115,
 4380 0010 1B78     		ldrb	r3, [r3]	@ tmp116, sim
 4381 0012 012B     		cmp	r3, #1	@ tmp116,
 4382 0014 0AD1     		bne	.L298	@,
1590:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4383              		.loc 1 1590 0
 4384 0016 0F24     		movs	r4, #15	@ tmp117,
 4385 0018 6C44     		add	r4, r4, sp	@ tmp117,
 4386 001a 174B     		ldr	r3, .L304	@ tmp118,
 4387 001c 1748     		ldr	r0, .L304+4	@ tmp119,
 4388 001e 0022     		movs	r2, #0	@,
 4389 0020 3221     		movs	r1, #50	@,
 4390 0022 FFF7FEFF 		bl	GSMSendCommand	@
 4391 0026 0300     		movs	r3, r0	@ tmp120,
 4392 0028 2370     		strb	r3, [r4]	@ tmp122, i
 4393 002a 11E0     		b	.L299	@
 4394              	.L298:
1591:src/sim900_800.c **** 	else if (sim == 2)
 4395              		.loc 1 1591 0
 4396 002c 6B46     		mov	r3, sp	@ tmp140,
 4397 002e 0733     		adds	r3, r3, #7	@ tmp123,
 4398 0030 1B78     		ldrb	r3, [r3]	@ tmp124, sim
 4399 0032 022B     		cmp	r3, #2	@ tmp124,
 4400 0034 0AD1     		bne	.L300	@,
1592:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=2\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4401              		.loc 1 1592 0
 4402 0036 0F24     		movs	r4, #15	@ tmp125,
 4403 0038 6C44     		add	r4, r4, sp	@ tmp125,
 4404 003a 0F4B     		ldr	r3, .L304	@ tmp126,
 4405 003c 1048     		ldr	r0, .L304+8	@ tmp127,
 4406 003e 0022     		movs	r2, #0	@,
 4407 0040 3221     		movs	r1, #50	@,
 4408 0042 FFF7FEFF 		bl	GSMSendCommand	@
 4409 0046 0300     		movs	r3, r0	@ tmp128,
 4410 0048 2370     		strb	r3, [r4]	@ tmp130, i
 4411 004a 01E0     		b	.L299	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 109


 4412              	.L300:
1593:src/sim900_800.c **** 	else
1594:src/sim900_800.c **** 		return 3;
 4413              		.loc 1 1594 0
 4414 004c 0323     		movs	r3, #3	@ D.7943,
 4415 004e 10E0     		b	.L301	@
 4416              	.L299:
1595:src/sim900_800.c **** 
1596:src/sim900_800.c **** 	if (i == 2)
 4417              		.loc 1 1596 0
 4418 0050 0F23     		movs	r3, #15	@ tmp131,
 4419 0052 6B44     		add	r3, r3, sp	@ tmp131,
 4420 0054 1B78     		ldrb	r3, [r3]	@ tmp132, i
 4421 0056 022B     		cmp	r3, #2	@ tmp132,
 4422 0058 01D1     		bne	.L302	@,
1597:src/sim900_800.c **** 	{
1598:src/sim900_800.c **** 		return 2;
 4423              		.loc 1 1598 0
 4424 005a 0223     		movs	r3, #2	@ D.7943,
 4425 005c 09E0     		b	.L301	@
 4426              	.L302:
1599:src/sim900_800.c **** 	}
1600:src/sim900_800.c **** 	if (i > 2)
 4427              		.loc 1 1600 0
 4428 005e 0F23     		movs	r3, #15	@ tmp133,
 4429 0060 6B44     		add	r3, r3, sp	@ tmp133,
 4430 0062 1B78     		ldrb	r3, [r3]	@ tmp134, i
 4431 0064 022B     		cmp	r3, #2	@ tmp134,
 4432 0066 03D9     		bls	.L303	@,
1601:src/sim900_800.c **** 	{
1602:src/sim900_800.c **** 		return i;
 4433              		.loc 1 1602 0
 4434 0068 0F23     		movs	r3, #15	@ tmp135,
 4435 006a 6B44     		add	r3, r3, sp	@ tmp135,
 4436 006c 1B78     		ldrb	r3, [r3]	@ D.7943, i
 4437 006e 00E0     		b	.L301	@
 4438              	.L303:
1603:src/sim900_800.c **** 	}
1604:src/sim900_800.c **** 
1605:src/sim900_800.c **** 	return 1;
 4439              		.loc 1 1605 0
 4440 0070 0123     		movs	r3, #1	@ D.7943,
 4441              	.L301:
1606:src/sim900_800.c **** }
 4442              		.loc 1 1606 0
 4443 0072 1800     		movs	r0, r3	@, <retval>
 4444 0074 04B0     		add	sp, sp, #16	@,,
 4445              		@ sp needed	@
 4446 0076 10BD     		pop	{r4, pc}
 4447              	.L305:
 4448              		.align	2
 4449              	.L304:
 4450 0078 00000000 		.word	GSMbuffRtaCommand
 4451 007c F0010000 		.word	.LC157
 4452 0080 00020000 		.word	.LC159
 4453              		.cfi_endproc
 4454              	.LFE32:
ARM GAS  /tmp/cc4fp2Bh.s 			page 110


 4455              		.size	GSM_SetSIM, .-GSM_SetSIM
 4456              		.section	.rodata
 4457 020d 000000   		.align	2
 4458              	.LC165:
 4459 0210 41542B43 		.ascii	"AT+CIPSEND\015\012\000"
 4459      49505345 
 4459      4E440D0A 
 4459      00
 4460              		.section	.text.GSMSendIP,"ax",%progbits
 4461              		.align	2
 4462              		.global	GSMSendIP
 4463              		.code	16
 4464              		.thumb_func
 4465              		.type	GSMSendIP, %function
 4466              	GSMSendIP:
 4467              	.LFB33:
1607:src/sim900_800.c **** 
1608:src/sim900_800.c **** char GSMSendIP (char *ptrMSG, unsigned short timeOut)
1609:src/sim900_800.c **** {
 4468              		.loc 1 1609 0
 4469              		.cfi_startproc
 4470 0000 10B5     		push	{r4, lr}	@
 4471              	.LCFI18:
 4472              		.cfi_def_cfa_offset 8
 4473              		.cfi_offset 4, -8
 4474              		.cfi_offset 14, -4
 4475 0002 84B0     		sub	sp, sp, #16	@,,
 4476              	.LCFI19:
 4477              		.cfi_def_cfa_offset 24
 4478 0004 0190     		str	r0, [sp, #4]	@ ptrMSG, ptrMSG
 4479 0006 0A00     		movs	r2, r1	@ tmp121, timeOut
 4480 0008 6B46     		mov	r3, sp	@ tmp192,
 4481 000a 0233     		adds	r3, r3, #2	@ tmp122,
 4482 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
1610:src/sim900_800.c **** 	unsigned char i;
1611:src/sim900_800.c **** 
1612:src/sim900_800.c **** 	switch(GSMSendIPState)
 4483              		.loc 1 1612 0
 4484 000e 404B     		ldr	r3, .L321	@ tmp124,
 4485 0010 1B78     		ldrb	r3, [r3]	@ D.7946, GSMSendIPState
 4486 0012 012B     		cmp	r3, #1	@ D.7947,
 4487 0014 12D0     		beq	.L308	@,
 4488 0016 022B     		cmp	r3, #2	@ D.7947,
 4489 0018 47D0     		beq	.L309	@,
 4490 001a 002B     		cmp	r3, #0	@ D.7947,
 4491 001c 63D1     		bne	.L318	@,
1613:src/sim900_800.c **** 	{
1614:src/sim900_800.c **** 		case 0:
1615:src/sim900_800.c **** 			GSMSendIPFlag = 0;
 4492              		.loc 1 1615 0
 4493 001e 3D4B     		ldr	r3, .L321+4	@ tmp125,
 4494 0020 0022     		movs	r2, #0	@ tmp126,
 4495 0022 1A70     		strb	r2, [r3]	@ tmp127, GSMSendIPFlag
1616:src/sim900_800.c **** 			GSMSendIPTimeOut = timeOut;
 4496              		.loc 1 1616 0
 4497 0024 3C4B     		ldr	r3, .L321+8	@ tmp128,
 4498 0026 6A46     		mov	r2, sp	@ tmp193,
ARM GAS  /tmp/cc4fp2Bh.s 			page 111


 4499 0028 0232     		adds	r2, r2, #2	@ tmp129,
 4500 002a 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 4501 002c 1A80     		strh	r2, [r3]	@ tmp130, GSMSendIPTimeOut
1617:src/sim900_800.c **** 			GSMSendIPState++;
 4502              		.loc 1 1617 0
 4503 002e 384B     		ldr	r3, .L321	@ tmp131,
 4504 0030 1B78     		ldrb	r3, [r3]	@ D.7946, GSMSendIPState
 4505 0032 0133     		adds	r3, r3, #1	@ tmp132,
 4506 0034 DAB2     		uxtb	r2, r3	@ D.7946, tmp132
 4507 0036 364B     		ldr	r3, .L321	@ tmp133,
 4508 0038 1A70     		strb	r2, [r3]	@ tmp134, GSMSendIPState
1618:src/sim900_800.c **** 			break;
 4509              		.loc 1 1618 0
 4510 003a 5BE0     		b	.L311	@
 4511              	.L308:
1619:src/sim900_800.c **** 
1620:src/sim900_800.c **** 		case 1:
1621:src/sim900_800.c **** 
1622:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSEND\r\n", 80, 0, &GSMbuffRtaCommand[0]);
 4512              		.loc 1 1622 0
 4513 003c 0F24     		movs	r4, #15	@ tmp135,
 4514 003e 6C44     		add	r4, r4, sp	@ tmp135,
 4515 0040 364B     		ldr	r3, .L321+12	@ tmp136,
 4516 0042 3748     		ldr	r0, .L321+16	@ tmp137,
 4517 0044 0022     		movs	r2, #0	@,
 4518 0046 5021     		movs	r1, #80	@,
 4519 0048 FFF7FEFF 		bl	GSMSendCommand	@
 4520 004c 0300     		movs	r3, r0	@ tmp138,
 4521 004e 2370     		strb	r3, [r4]	@ tmp140, i
1623:src/sim900_800.c **** 
1624:src/sim900_800.c **** 			if (i == 2)
 4522              		.loc 1 1624 0
 4523 0050 0F23     		movs	r3, #15	@ tmp141,
 4524 0052 6B44     		add	r3, r3, sp	@ tmp141,
 4525 0054 1B78     		ldrb	r3, [r3]	@ tmp142, i
 4526 0056 022B     		cmp	r3, #2	@ tmp142,
 4527 0058 1DD1     		bne	.L312	@,
1625:src/sim900_800.c **** 			{
1626:src/sim900_800.c **** 
1627:src/sim900_800.c **** 				GSMSendIPbuffAux[0] = 0;
 4528              		.loc 1 1627 0
 4529 005a 324B     		ldr	r3, .L321+20	@ tmp143,
 4530 005c 0022     		movs	r2, #0	@ tmp144,
 4531 005e 1A70     		strb	r2, [r3]	@ tmp145, GSMSendIPbuffAux
1628:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], ptrMSG);
 4532              		.loc 1 1628 0
 4533 0060 019A     		ldr	r2, [sp, #4]	@ tmp146, ptrMSG
 4534 0062 304B     		ldr	r3, .L321+20	@ tmp147,
 4535 0064 1100     		movs	r1, r2	@, tmp146
 4536 0066 1800     		movs	r0, r3	@, tmp147
 4537 0068 FFF7FEFF 		bl	strcat	@
1629:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], "\032");
 4538              		.loc 1 1629 0
 4539 006c 2D4B     		ldr	r3, .L321+20	@ tmp148,
 4540 006e 1800     		movs	r0, r3	@, tmp148
 4541 0070 FFF7FEFF 		bl	strlen	@
 4542 0074 0300     		movs	r3, r0	@ tmp149,
ARM GAS  /tmp/cc4fp2Bh.s 			page 112


 4543 0076 1A00     		movs	r2, r3	@ D.7948, tmp150
 4544 0078 2A4B     		ldr	r3, .L321+20	@ tmp151,
 4545 007a D218     		adds	r2, r2, r3	@ D.7949, D.7948, tmp151
 4546 007c 2A4B     		ldr	r3, .L321+24	@ tmp152,
 4547 007e 1000     		movs	r0, r2	@ tmp153, D.7949
 4548 0080 1900     		movs	r1, r3	@ tmp154, tmp152
 4549 0082 0223     		movs	r3, #2	@ tmp155,
 4550 0084 1A00     		movs	r2, r3	@, tmp155
 4551 0086 FFF7FEFF 		bl	memcpy	@
1630:src/sim900_800.c **** 				GSMSendIPState++;
 4552              		.loc 1 1630 0
 4553 008a 214B     		ldr	r3, .L321	@ tmp158,
 4554 008c 1B78     		ldrb	r3, [r3]	@ D.7946, GSMSendIPState
 4555 008e 0133     		adds	r3, r3, #1	@ tmp159,
 4556 0090 DAB2     		uxtb	r2, r3	@ D.7946, tmp159
 4557 0092 1F4B     		ldr	r3, .L321	@ tmp160,
 4558 0094 1A70     		strb	r2, [r3]	@ tmp161, GSMSendIPState
 4559              	.L312:
1631:src/sim900_800.c **** 			}
1632:src/sim900_800.c **** 
1633:src/sim900_800.c **** 			if (i > 2)
 4560              		.loc 1 1633 0
 4561 0096 0F23     		movs	r3, #15	@ tmp162,
 4562 0098 6B44     		add	r3, r3, sp	@ tmp162,
 4563 009a 1B78     		ldrb	r3, [r3]	@ tmp163, i
 4564 009c 022B     		cmp	r3, #2	@ tmp163,
 4565 009e 26D9     		bls	.L319	@,
1634:src/sim900_800.c **** 			{
1635:src/sim900_800.c **** 				GSMSendIPState = 0;
 4566              		.loc 1 1635 0
 4567 00a0 1B4B     		ldr	r3, .L321	@ tmp164,
 4568 00a2 0022     		movs	r2, #0	@ tmp165,
 4569 00a4 1A70     		strb	r2, [r3]	@ tmp166, GSMSendIPState
1636:src/sim900_800.c **** 				return 3;
 4570              		.loc 1 1636 0
 4571 00a6 0323     		movs	r3, #3	@ D.7946,
 4572 00a8 2FE0     		b	.L314	@
 4573              	.L309:
1637:src/sim900_800.c **** 			}
1638:src/sim900_800.c **** 			break;
1639:src/sim900_800.c **** 		case 2:
1640:src/sim900_800.c **** 
1641:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendIPbuffAux[0], 50, 0, &GSMbuffRtaCommand[0]);
 4574              		.loc 1 1641 0
 4575 00aa 0F24     		movs	r4, #15	@ tmp167,
 4576 00ac 6C44     		add	r4, r4, sp	@ tmp167,
 4577 00ae 1B4B     		ldr	r3, .L321+12	@ tmp168,
 4578 00b0 1C48     		ldr	r0, .L321+20	@ tmp169,
 4579 00b2 0022     		movs	r2, #0	@,
 4580 00b4 3221     		movs	r1, #50	@,
 4581 00b6 FFF7FEFF 		bl	GSMSendCommand	@
 4582 00ba 0300     		movs	r3, r0	@ tmp170,
 4583 00bc 2370     		strb	r3, [r4]	@ tmp172, i
1642:src/sim900_800.c **** 
1643:src/sim900_800.c **** 			if (i == 2)
 4584              		.loc 1 1643 0
 4585 00be 0F23     		movs	r3, #15	@ tmp173,
ARM GAS  /tmp/cc4fp2Bh.s 			page 113


 4586 00c0 6B44     		add	r3, r3, sp	@ tmp173,
 4587 00c2 1B78     		ldrb	r3, [r3]	@ tmp174, i
 4588 00c4 022B     		cmp	r3, #2	@ tmp174,
 4589 00c6 04D1     		bne	.L315	@,
1644:src/sim900_800.c **** 			{
1645:src/sim900_800.c **** 				GSMSendIPState = 0;
 4590              		.loc 1 1645 0
 4591 00c8 114B     		ldr	r3, .L321	@ tmp175,
 4592 00ca 0022     		movs	r2, #0	@ tmp176,
 4593 00cc 1A70     		strb	r2, [r3]	@ tmp177, GSMSendIPState
1646:src/sim900_800.c **** 				return 2;
 4594              		.loc 1 1646 0
 4595 00ce 0223     		movs	r3, #2	@ D.7946,
 4596 00d0 1BE0     		b	.L314	@
 4597              	.L315:
1647:src/sim900_800.c **** 			}
1648:src/sim900_800.c **** 
1649:src/sim900_800.c **** 			if (i > 2)
 4598              		.loc 1 1649 0
 4599 00d2 0F23     		movs	r3, #15	@ tmp178,
 4600 00d4 6B44     		add	r3, r3, sp	@ tmp178,
 4601 00d6 1B78     		ldrb	r3, [r3]	@ tmp179, i
 4602 00d8 022B     		cmp	r3, #2	@ tmp179,
 4603 00da 0AD9     		bls	.L320	@,
1650:src/sim900_800.c **** 			{
1651:src/sim900_800.c **** 				GSMSendIPState = 0;
 4604              		.loc 1 1651 0
 4605 00dc 0C4B     		ldr	r3, .L321	@ tmp180,
 4606 00de 0022     		movs	r2, #0	@ tmp181,
 4607 00e0 1A70     		strb	r2, [r3]	@ tmp182, GSMSendIPState
1652:src/sim900_800.c **** 				return 3;
 4608              		.loc 1 1652 0
 4609 00e2 0323     		movs	r3, #3	@ D.7946,
 4610 00e4 11E0     		b	.L314	@
 4611              	.L318:
1653:src/sim900_800.c **** 			}
1654:src/sim900_800.c **** 			break;
1655:src/sim900_800.c **** 
1656:src/sim900_800.c **** 		default:
1657:src/sim900_800.c **** 			GSMSendIPState = 0;
 4612              		.loc 1 1657 0
 4613 00e6 0A4B     		ldr	r3, .L321	@ tmp183,
 4614 00e8 0022     		movs	r2, #0	@ tmp184,
 4615 00ea 1A70     		strb	r2, [r3]	@ tmp185, GSMSendIPState
1658:src/sim900_800.c **** 			break;
 4616              		.loc 1 1658 0
 4617 00ec 02E0     		b	.L311	@
 4618              	.L319:
1638:src/sim900_800.c **** 		case 2:
 4619              		.loc 1 1638 0
 4620 00ee C046     		nop
 4621 00f0 00E0     		b	.L311	@
 4622              	.L320:
1654:src/sim900_800.c **** 
 4623              		.loc 1 1654 0
 4624 00f2 C046     		nop
 4625              	.L311:
ARM GAS  /tmp/cc4fp2Bh.s 			page 114


1659:src/sim900_800.c **** 	}
1660:src/sim900_800.c **** 
1661:src/sim900_800.c **** 	if (GSMSendIPTimeOut == 0)
 4626              		.loc 1 1661 0
 4627 00f4 084B     		ldr	r3, .L321+8	@ tmp186,
 4628 00f6 1B88     		ldrh	r3, [r3]	@ tmp187, GSMSendIPTimeOut
 4629 00f8 9BB2     		uxth	r3, r3	@ D.7950, tmp187
 4630 00fa 002B     		cmp	r3, #0	@ D.7950,
 4631 00fc 04D1     		bne	.L317	@,
1662:src/sim900_800.c **** 	{
1663:src/sim900_800.c **** 		GSMSendIPState = 0;
 4632              		.loc 1 1663 0
 4633 00fe 044B     		ldr	r3, .L321	@ tmp188,
 4634 0100 0022     		movs	r2, #0	@ tmp189,
 4635 0102 1A70     		strb	r2, [r3]	@ tmp190, GSMSendIPState
1664:src/sim900_800.c **** 		return 4;
 4636              		.loc 1 1664 0
 4637 0104 0423     		movs	r3, #4	@ D.7946,
 4638 0106 00E0     		b	.L314	@
 4639              	.L317:
1665:src/sim900_800.c **** 	}
1666:src/sim900_800.c **** 
1667:src/sim900_800.c **** 	return 1;
 4640              		.loc 1 1667 0
 4641 0108 0123     		movs	r3, #1	@ D.7946,
 4642              	.L314:
1668:src/sim900_800.c **** }
 4643              		.loc 1 1668 0
 4644 010a 1800     		movs	r0, r3	@, <retval>
 4645 010c 04B0     		add	sp, sp, #16	@,,
 4646              		@ sp needed	@
 4647 010e 10BD     		pop	{r4, pc}
 4648              	.L322:
 4649              		.align	2
 4650              	.L321:
 4651 0110 00000000 		.word	GSMSendIPState
 4652 0114 00000000 		.word	GSMSendIPFlag
 4653 0118 00000000 		.word	GSMSendIPTimeOut
 4654 011c 00000000 		.word	GSMbuffRtaCommand
 4655 0120 10020000 		.word	.LC165
 4656 0124 00000000 		.word	GSMSendIPbuffAux
 4657 0128 E0000000 		.word	.LC97
 4658              		.cfi_endproc
 4659              	.LFE33:
 4660              		.size	GSMSendIP, .-GSMSendIP
 4661              		.section	.text.GSMTimeoutCounters,"ax",%progbits
 4662              		.align	2
 4663              		.global	GSMTimeoutCounters
 4664              		.code	16
 4665              		.thumb_func
 4666              		.type	GSMTimeoutCounters, %function
 4667              	GSMTimeoutCounters:
 4668              	.LFB34:
1669:src/sim900_800.c **** 
1670:src/sim900_800.c **** 
1671:src/sim900_800.c **** /*
1672:src/sim900_800.c **** void USART2_IRQHandler(void)
ARM GAS  /tmp/cc4fp2Bh.s 			page 115


1673:src/sim900_800.c **** {
1674:src/sim900_800.c **** 	//--- Recepcion ---//
1675:src/sim900_800.c **** 	if(USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)
1676:src/sim900_800.c **** 	{
1677:src/sim900_800.c **** 
1678:src/sim900_800.c **** 		//Lectura del dato recibido.
1679:src/sim900_800.c **** 		*pBuffUARTGSMrxW = USART_ReceiveData(USART2);
1680:src/sim900_800.c **** 
1681:src/sim900_800.c **** 		if (*(pBuffUARTGSMrxW) != 0)
1682:src/sim900_800.c **** 		{
1683:src/sim900_800.c **** 			if ((*(pBuffUARTGSMrxW) == '\n') || (*(pBuffUARTGSMrxW) == '>'))
1684:src/sim900_800.c **** 			{
1685:src/sim900_800.c **** 				*(pBuffUARTGSMrxW+1) = 0;
1686:src/sim900_800.c **** 
1687:src/sim900_800.c **** 				//strncpy((char *)&buffUARTGSMrx2[0], (const char *)&buffUARTGSMrx[0], (counterUARTGSM+1));
1688:src/sim900_800.c **** 				strcpy((char *)&buffUARTGSMrx2[0], (const char *)&buffUARTGSMrx[0]);
1689:src/sim900_800.c **** 
1690:src/sim900_800.c **** 				//PacketReadyUARTGSM = counterUARTGSM;
1691:src/sim900_800.c **** 				PacketReadyUARTGSM = 1;
1692:src/sim900_800.c **** 				pBuffUARTGSMrxW = &buffUARTGSMrx[0];
1693:src/sim900_800.c **** 				*pBuffUARTGSMrxW = 0;
1694:src/sim900_800.c **** 				counterUARTGSM = 0;
1695:src/sim900_800.c **** 			}
1696:src/sim900_800.c **** 			else
1697:src/sim900_800.c **** 			{
1698:src/sim900_800.c **** 				//counterUARTGSM++;
1699:src/sim900_800.c **** 
1700:src/sim900_800.c **** 				//-- Mueve el puntero ---//
1701:src/sim900_800.c **** 				if (pBuffUARTGSMrxW < &buffUARTGSMrx[buffUARTGSMrx_dimension - 2])
1702:src/sim900_800.c **** 					pBuffUARTGSMrxW++;
1703:src/sim900_800.c **** 				else
1704:src/sim900_800.c **** 					pBuffUARTGSMrxW = &buffUARTGSMrx[0];
1705:src/sim900_800.c **** 
1706:src/sim900_800.c **** 				//RN171UART_TimeOut = 10;
1707:src/sim900_800.c **** 			}
1708:src/sim900_800.c **** 		}
1709:src/sim900_800.c **** 		USART2->SR &= ~USART_FLAG_RXNE;
1710:src/sim900_800.c **** 	}
1711:src/sim900_800.c **** 	//--- Transmision ---//
1712:src/sim900_800.c **** 	if(USART_GetITStatus(USART2, USART_IT_TXE) != RESET)
1713:src/sim900_800.c **** 	{
1714:src/sim900_800.c **** 
1715:src/sim900_800.c **** 		//if (*pBuffUARTGSMtxR == '\n')
1716:src/sim900_800.c **** 		if (pBuffUARTGSMtxR == pBuffUARTGSMtxW)
1717:src/sim900_800.c **** 		{
1718:src/sim900_800.c **** 
1719:src/sim900_800.c **** 			pBuffUARTGSMtxR =  buffUARTGSMtx;
1720:src/sim900_800.c **** 			pBuffUARTGSMtxW =  buffUARTGSMtx;
1721:src/sim900_800.c **** 
1722:src/sim900_800.c **** 			USART_ITConfig(USART2, USART_IT_TXE, DISABLE);
1723:src/sim900_800.c **** 		}
1724:src/sim900_800.c **** 		else
1725:src/sim900_800.c **** 		{
1726:src/sim900_800.c **** 			if (*pBuffUARTGSMtxR)
1727:src/sim900_800.c **** 				USART2->DR = (*pBuffUARTGSMtxR & 0xFF);
1728:src/sim900_800.c **** 			else
1729:src/sim900_800.c **** 			{
ARM GAS  /tmp/cc4fp2Bh.s 			page 116


1730:src/sim900_800.c **** 				pBuffUARTGSMtxR = buffUARTGSMtx;
1731:src/sim900_800.c **** 				pBuffUARTGSMtxW = buffUARTGSMtx;
1732:src/sim900_800.c **** 			}
1733:src/sim900_800.c **** 
1734:src/sim900_800.c **** 			if(pBuffUARTGSMtxR != &buffUARTGSMtx[buffUARTGSMrx_dimension - 1])
1735:src/sim900_800.c **** 			{
1736:src/sim900_800.c **** 				pBuffUARTGSMtxR++;
1737:src/sim900_800.c **** 			}
1738:src/sim900_800.c **** 			else
1739:src/sim900_800.c **** 			{
1740:src/sim900_800.c **** 				pBuffUARTGSMtxR = buffUARTGSMtx;
1741:src/sim900_800.c **** 			}
1742:src/sim900_800.c **** 		}
1743:src/sim900_800.c **** 
1744:src/sim900_800.c **** 		USART2->SR &= ~USART_IT_TXE;
1745:src/sim900_800.c **** 	}
1746:src/sim900_800.c **** }
1747:src/sim900_800.c **** */
1748:src/sim900_800.c **** 
1749:src/sim900_800.c **** void GSMTimeoutCounters (void)
1750:src/sim900_800.c **** {
 4669              		.loc 1 1750 0
 4670              		.cfi_startproc
1751:src/sim900_800.c **** 	if (GSMStartTime)
 4671              		.loc 1 1751 0
 4672 0000 344B     		ldr	r3, .L334	@ tmp137,
 4673 0002 1B88     		ldrh	r3, [r3]	@ tmp138, GSMStartTime
 4674 0004 9BB2     		uxth	r3, r3	@ D.7955, tmp138
 4675 0006 002B     		cmp	r3, #0	@ D.7955,
 4676 0008 06D0     		beq	.L324	@,
1752:src/sim900_800.c **** 		GSMStartTime--;
 4677              		.loc 1 1752 0
 4678 000a 324B     		ldr	r3, .L334	@ tmp139,
 4679 000c 1B88     		ldrh	r3, [r3]	@ tmp140, GSMStartTime
 4680 000e 9BB2     		uxth	r3, r3	@ D.7955, tmp140
 4681 0010 013B     		subs	r3, r3, #1	@ tmp141,
 4682 0012 9AB2     		uxth	r2, r3	@ D.7955, tmp141
 4683 0014 2F4B     		ldr	r3, .L334	@ tmp142,
 4684 0016 1A80     		strh	r2, [r3]	@ tmp143, GSMStartTime
 4685              	.L324:
1753:src/sim900_800.c **** 
1754:src/sim900_800.c **** 	if(GSMSendCommandTimeOut)
 4686              		.loc 1 1754 0
 4687 0018 2F4B     		ldr	r3, .L334+4	@ tmp144,
 4688 001a 1B88     		ldrh	r3, [r3]	@ tmp145, GSMSendCommandTimeOut
 4689 001c 9BB2     		uxth	r3, r3	@ D.7955, tmp145
 4690 001e 002B     		cmp	r3, #0	@ D.7955,
 4691 0020 06D0     		beq	.L325	@,
1755:src/sim900_800.c **** 		GSMSendCommandTimeOut--;
 4692              		.loc 1 1755 0
 4693 0022 2D4B     		ldr	r3, .L334+4	@ tmp146,
 4694 0024 1B88     		ldrh	r3, [r3]	@ tmp147, GSMSendCommandTimeOut
 4695 0026 9BB2     		uxth	r3, r3	@ D.7955, tmp147
 4696 0028 013B     		subs	r3, r3, #1	@ tmp148,
 4697 002a 9AB2     		uxth	r2, r3	@ D.7955, tmp148
 4698 002c 2A4B     		ldr	r3, .L334+4	@ tmp149,
 4699 002e 1A80     		strh	r2, [r3]	@ tmp150, GSMSendCommandTimeOut
ARM GAS  /tmp/cc4fp2Bh.s 			page 117


 4700              	.L325:
1756:src/sim900_800.c **** 
1757:src/sim900_800.c **** 	if(GSMConfigTimeOut)
 4701              		.loc 1 1757 0
 4702 0030 2A4B     		ldr	r3, .L334+8	@ tmp151,
 4703 0032 1B88     		ldrh	r3, [r3]	@ tmp152, GSMConfigTimeOut
 4704 0034 9BB2     		uxth	r3, r3	@ D.7955, tmp152
 4705 0036 002B     		cmp	r3, #0	@ D.7955,
 4706 0038 06D0     		beq	.L326	@,
1758:src/sim900_800.c **** 		GSMConfigTimeOut--;
 4707              		.loc 1 1758 0
 4708 003a 284B     		ldr	r3, .L334+8	@ tmp153,
 4709 003c 1B88     		ldrh	r3, [r3]	@ tmp154, GSMConfigTimeOut
 4710 003e 9BB2     		uxth	r3, r3	@ D.7955, tmp154
 4711 0040 013B     		subs	r3, r3, #1	@ tmp155,
 4712 0042 9AB2     		uxth	r2, r3	@ D.7955, tmp155
 4713 0044 254B     		ldr	r3, .L334+8	@ tmp156,
 4714 0046 1A80     		strh	r2, [r3]	@ tmp157, GSMConfigTimeOut
 4715              	.L326:
1759:src/sim900_800.c **** 
1760:src/sim900_800.c **** 	if(GSMConfigTime)
 4716              		.loc 1 1760 0
 4717 0048 254B     		ldr	r3, .L334+12	@ tmp158,
 4718 004a 1B88     		ldrh	r3, [r3]	@ tmp159, GSMConfigTime
 4719 004c 9BB2     		uxth	r3, r3	@ D.7955, tmp159
 4720 004e 002B     		cmp	r3, #0	@ D.7955,
 4721 0050 06D0     		beq	.L327	@,
1761:src/sim900_800.c **** 		GSMConfigTime--;
 4722              		.loc 1 1761 0
 4723 0052 234B     		ldr	r3, .L334+12	@ tmp160,
 4724 0054 1B88     		ldrh	r3, [r3]	@ tmp161, GSMConfigTime
 4725 0056 9BB2     		uxth	r3, r3	@ D.7955, tmp161
 4726 0058 013B     		subs	r3, r3, #1	@ tmp162,
 4727 005a 9AB2     		uxth	r2, r3	@ D.7955, tmp162
 4728 005c 204B     		ldr	r3, .L334+12	@ tmp163,
 4729 005e 1A80     		strh	r2, [r3]	@ tmp164, GSMConfigTime
 4730              	.L327:
1762:src/sim900_800.c **** 
1763:src/sim900_800.c **** 	if(GSMSendSMSTimeOut)
 4731              		.loc 1 1763 0
 4732 0060 204B     		ldr	r3, .L334+16	@ tmp165,
 4733 0062 1B88     		ldrh	r3, [r3]	@ tmp166, GSMSendSMSTimeOut
 4734 0064 9BB2     		uxth	r3, r3	@ D.7955, tmp166
 4735 0066 002B     		cmp	r3, #0	@ D.7955,
 4736 0068 06D0     		beq	.L328	@,
1764:src/sim900_800.c **** 		GSMSendSMSTimeOut--;
 4737              		.loc 1 1764 0
 4738 006a 1E4B     		ldr	r3, .L334+16	@ tmp167,
 4739 006c 1B88     		ldrh	r3, [r3]	@ tmp168, GSMSendSMSTimeOut
 4740 006e 9BB2     		uxth	r3, r3	@ D.7955, tmp168
 4741 0070 013B     		subs	r3, r3, #1	@ tmp169,
 4742 0072 9AB2     		uxth	r2, r3	@ D.7955, tmp169
 4743 0074 1B4B     		ldr	r3, .L334+16	@ tmp170,
 4744 0076 1A80     		strh	r2, [r3]	@ tmp171, GSMSendSMSTimeOut
 4745              	.L328:
1765:src/sim900_800.c **** 
1766:src/sim900_800.c **** 	if(GSMConfigGPRSTimeOut)
ARM GAS  /tmp/cc4fp2Bh.s 			page 118


 4746              		.loc 1 1766 0
 4747 0078 1B4B     		ldr	r3, .L334+20	@ tmp172,
 4748 007a 1B88     		ldrh	r3, [r3]	@ D.7955, GSMConfigGPRSTimeOut
 4749 007c 002B     		cmp	r3, #0	@ D.7955,
 4750 007e 05D0     		beq	.L329	@,
1767:src/sim900_800.c **** 		GSMConfigGPRSTimeOut--;
 4751              		.loc 1 1767 0
 4752 0080 194B     		ldr	r3, .L334+20	@ tmp173,
 4753 0082 1B88     		ldrh	r3, [r3]	@ D.7955, GSMConfigGPRSTimeOut
 4754 0084 013B     		subs	r3, r3, #1	@ tmp174,
 4755 0086 9AB2     		uxth	r2, r3	@ D.7955, tmp174
 4756 0088 174B     		ldr	r3, .L334+20	@ tmp175,
 4757 008a 1A80     		strh	r2, [r3]	@ tmp176, GSMConfigGPRSTimeOut
 4758              	.L329:
1768:src/sim900_800.c **** 
1769:src/sim900_800.c **** 	if(GSMSendIPTimeOut)
 4759              		.loc 1 1769 0
 4760 008c 174B     		ldr	r3, .L334+24	@ tmp177,
 4761 008e 1B88     		ldrh	r3, [r3]	@ tmp178, GSMSendIPTimeOut
 4762 0090 9BB2     		uxth	r3, r3	@ D.7955, tmp178
 4763 0092 002B     		cmp	r3, #0	@ D.7955,
 4764 0094 06D0     		beq	.L330	@,
1770:src/sim900_800.c **** 		GSMSendIPTimeOut--;
 4765              		.loc 1 1770 0
 4766 0096 154B     		ldr	r3, .L334+24	@ tmp179,
 4767 0098 1B88     		ldrh	r3, [r3]	@ tmp180, GSMSendIPTimeOut
 4768 009a 9BB2     		uxth	r3, r3	@ D.7955, tmp180
 4769 009c 013B     		subs	r3, r3, #1	@ tmp181,
 4770 009e 9AB2     		uxth	r2, r3	@ D.7955, tmp181
 4771 00a0 124B     		ldr	r3, .L334+24	@ tmp182,
 4772 00a2 1A80     		strh	r2, [r3]	@ tmp183, GSMSendIPTimeOut
 4773              	.L330:
1771:src/sim900_800.c **** 
1772:src/sim900_800.c **** 	if (prestadorSimTime)
 4774              		.loc 1 1772 0
 4775 00a4 124B     		ldr	r3, .L334+28	@ tmp184,
 4776 00a6 1B78     		ldrb	r3, [r3]	@ D.7956, prestadorSimTime
 4777 00a8 002B     		cmp	r3, #0	@ D.7956,
 4778 00aa 05D0     		beq	.L331	@,
1773:src/sim900_800.c **** 		prestadorSimTime--;
 4779              		.loc 1 1773 0
 4780 00ac 104B     		ldr	r3, .L334+28	@ tmp185,
 4781 00ae 1B78     		ldrb	r3, [r3]	@ D.7956, prestadorSimTime
 4782 00b0 013B     		subs	r3, r3, #1	@ tmp186,
 4783 00b2 DAB2     		uxtb	r2, r3	@ D.7956, tmp186
 4784 00b4 0E4B     		ldr	r3, .L334+28	@ tmp187,
 4785 00b6 1A70     		strb	r2, [r3]	@ tmp188, prestadorSimTime
 4786              	.L331:
1774:src/sim900_800.c **** 
1775:src/sim900_800.c **** 	if(GSMGeneralTimeOut)
 4787              		.loc 1 1775 0
 4788 00b8 0E4B     		ldr	r3, .L334+32	@ tmp189,
 4789 00ba 1B88     		ldrh	r3, [r3]	@ tmp190, GSMGeneralTimeOut
 4790 00bc 9BB2     		uxth	r3, r3	@ D.7955, tmp190
 4791 00be 002B     		cmp	r3, #0	@ D.7955,
 4792 00c0 06D0     		beq	.L333	@,
1776:src/sim900_800.c **** 		GSMGeneralTimeOut--;
ARM GAS  /tmp/cc4fp2Bh.s 			page 119


 4793              		.loc 1 1776 0
 4794 00c2 0C4B     		ldr	r3, .L334+32	@ tmp191,
 4795 00c4 1B88     		ldrh	r3, [r3]	@ tmp192, GSMGeneralTimeOut
 4796 00c6 9BB2     		uxth	r3, r3	@ D.7955, tmp192
 4797 00c8 013B     		subs	r3, r3, #1	@ tmp193,
 4798 00ca 9AB2     		uxth	r2, r3	@ D.7955, tmp193
 4799 00cc 094B     		ldr	r3, .L334+32	@ tmp194,
 4800 00ce 1A80     		strh	r2, [r3]	@ tmp195, GSMGeneralTimeOut
 4801              	.L333:
1777:src/sim900_800.c **** 
1778:src/sim900_800.c **** }
 4802              		.loc 1 1778 0
 4803 00d0 C046     		nop
 4804              		@ sp needed	@
 4805 00d2 7047     		bx	lr
 4806              	.L335:
 4807              		.align	2
 4808              	.L334:
 4809 00d4 00000000 		.word	GSMStartTime
 4810 00d8 00000000 		.word	GSMSendCommandTimeOut
 4811 00dc 00000000 		.word	GSMConfigTimeOut
 4812 00e0 00000000 		.word	GSMConfigTime
 4813 00e4 00000000 		.word	GSMSendSMSTimeOut
 4814 00e8 00000000 		.word	GSMConfigGPRSTimeOut
 4815 00ec 00000000 		.word	GSMSendIPTimeOut
 4816 00f0 00000000 		.word	prestadorSimTime
 4817 00f4 00000000 		.word	GSMGeneralTimeOut
 4818              		.cfi_endproc
 4819              	.LFE34:
 4820              		.size	GSMTimeoutCounters, .-GSMTimeoutCounters
 4821              		.section	.rodata
 4822 021d 000000   		.align	2
 4823              	.LC183:
 4824 0220 41542B43 		.ascii	"AT+CMGR=%d\015\012\000"
 4824      4D47523D 
 4824      25640D0A 
 4824      00
 4825 022d 000000   		.align	2
 4826              	.LC187:
 4827 0230 2B434D47 		.ascii	"+CMGR:\000"
 4827      523A00
 4828 0237 00       		.align	2
 4829              	.LC190:
 4830 0238 3030303A 		.ascii	"000: ARM\000"
 4830      2041524D 
 4830      00
 4831 0241 000000   		.align	2
 4832              	.LC194:
 4833 0244 3030303A 		.ascii	"000: DRM\000"
 4833      2044524D 
 4833      00
 4834 024d 000000   		.align	2
 4835              	.LC196:
 4836 0250 41542B43 		.ascii	"AT+CMGDA=\"DEL READ\"\015\012\000"
 4836      4D474441 
 4836      3D224445 
 4836      4C205245 
ARM GAS  /tmp/cc4fp2Bh.s 			page 120


 4836      4144220D 
 4837              		.section	.text.GSMrxSMS,"ax",%progbits
 4838              		.align	2
 4839              		.global	GSMrxSMS
 4840              		.code	16
 4841              		.thumb_func
 4842              		.type	GSMrxSMS, %function
 4843              	GSMrxSMS:
 4844              	.LFB35:
1779:src/sim900_800.c **** 
1780:src/sim900_800.c **** 
1781:src/sim900_800.c **** //---------------------------------------------------------//
1782:src/sim900_800.c **** //void GSMrxSMS(char * ptrMSG, char *ptrNumTel, char flagSMSin)
1783:src/sim900_800.c **** //---------------------------------------------------------//
1784:src/sim900_800.c **** void GSMrxSMS(unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsign
1785:src/sim900_800.c **** {
 4845              		.loc 1 1785 0
 4846              		.cfi_startproc
 4847 0000 10B5     		push	{r4, lr}	@
 4848              	.LCFI20:
 4849              		.cfi_def_cfa_offset 8
 4850              		.cfi_offset 4, -8
 4851              		.cfi_offset 14, -4
 4852 0002 86B0     		sub	sp, sp, #24	@,,
 4853              	.LCFI21:
 4854              		.cfi_def_cfa_offset 32
 4855 0004 0390     		str	r0, [sp, #12]	@ pAlertasReportar, pAlertasReportar
 4856 0006 0291     		str	r1, [sp, #8]	@ puserCode, puserCode
 4857 0008 0192     		str	r2, [sp, #4]	@ pclaveAct, pclaveAct
 4858 000a 0093     		str	r3, [sp]	@ pActDact, pActDact
1786:src/sim900_800.c **** 	unsigned char i;
1787:src/sim900_800.c **** 	unsigned char flag;
1788:src/sim900_800.c **** 
1789:src/sim900_800.c **** 	if (GSMCantSMS)
 4859              		.loc 1 1789 0
 4860 000c D04B     		ldr	r3, .L395	@ tmp214,
 4861 000e 1B78     		ldrb	r3, [r3]	@ D.7957, GSMCantSMS
 4862 0010 002B     		cmp	r3, #0	@ D.7957,
 4863 0012 00D1     		bne	.LCB3980	@
 4864 0014 5CE1     		b	.L337	@long jump	@
 4865              	.LCB3980:
1790:src/sim900_800.c **** 	{
1791:src/sim900_800.c **** 		switch(GSMrxSMSState)
 4866              		.loc 1 1791 0
 4867 0016 CF4B     		ldr	r3, .L395+4	@ tmp215,
 4868 0018 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 4869 001a 012B     		cmp	r3, #1	@ D.7958,
 4870 001c 0BD0     		beq	.L339	@,
 4871 001e 022B     		cmp	r3, #2	@ D.7958,
 4872 0020 25D0     		beq	.L340	@,
 4873 0022 002B     		cmp	r3, #0	@ D.7958,
 4874 0024 00D0     		beq	.LCB3988	@
 4875 0026 4EE1     		b	.L384	@long jump	@
 4876              	.LCB3988:
1792:src/sim900_800.c **** 		{
1793:src/sim900_800.c **** 
1794:src/sim900_800.c **** 			case 0:
ARM GAS  /tmp/cc4fp2Bh.s 			page 121


1795:src/sim900_800.c **** 				GSMrxSMSState++;
 4877              		.loc 1 1795 0
 4878 0028 CA4B     		ldr	r3, .L395+4	@ tmp216,
 4879 002a 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 4880 002c 0133     		adds	r3, r3, #1	@ tmp217,
 4881 002e DAB2     		uxtb	r2, r3	@ D.7957, tmp217
 4882 0030 C84B     		ldr	r3, .L395+4	@ tmp218,
 4883 0032 1A70     		strb	r2, [r3]	@ tmp219, GSMrxSMSState
1796:src/sim900_800.c **** 				break;
 4884              		.loc 1 1796 0
 4885 0034 DBE2     		b	.L361	@
 4886              	.L339:
1797:src/sim900_800.c **** 			case 1:
1798:src/sim900_800.c **** 				i = GSM_SetSIM (1);
 4887              		.loc 1 1798 0
 4888 0036 1724     		movs	r4, #23	@ tmp220,
 4889 0038 6C44     		add	r4, r4, sp	@ tmp220,
 4890 003a 0120     		movs	r0, #1	@,
 4891 003c FFF7FEFF 		bl	GSM_SetSIM	@
 4892 0040 0300     		movs	r3, r0	@ tmp221,
 4893 0042 2370     		strb	r3, [r4]	@ tmp223, i
1799:src/sim900_800.c **** 
1800:src/sim900_800.c **** 				if (i == 2)
 4894              		.loc 1 1800 0
 4895 0044 1723     		movs	r3, #23	@ tmp224,
 4896 0046 6B44     		add	r3, r3, sp	@ tmp224,
 4897 0048 1B78     		ldrb	r3, [r3]	@ tmp225, i
 4898 004a 022B     		cmp	r3, #2	@ tmp225,
 4899 004c 05D1     		bne	.L343	@,
1801:src/sim900_800.c **** 					GSMrxSMSState++;
 4900              		.loc 1 1801 0
 4901 004e C14B     		ldr	r3, .L395+4	@ tmp226,
 4902 0050 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 4903 0052 0133     		adds	r3, r3, #1	@ tmp227,
 4904 0054 DAB2     		uxtb	r2, r3	@ D.7957, tmp227
 4905 0056 BF4B     		ldr	r3, .L395+4	@ tmp228,
 4906 0058 1A70     		strb	r2, [r3]	@ tmp229, GSMrxSMSState
 4907              	.L343:
1802:src/sim900_800.c **** 				if (i > 2)
 4908              		.loc 1 1802 0
 4909 005a 1723     		movs	r3, #23	@ tmp230,
 4910 005c 6B44     		add	r3, r3, sp	@ tmp230,
 4911 005e 1B78     		ldrb	r3, [r3]	@ tmp231, i
 4912 0060 022B     		cmp	r3, #2	@ tmp231,
 4913 0062 00D8     		bhi	.LCB4022	@
 4914 0064 BCE2     		b	.L388	@long jump	@
 4915              	.LCB4022:
1803:src/sim900_800.c **** 					GSMrxSMSState=0;
 4916              		.loc 1 1803 0
 4917 0066 BB4B     		ldr	r3, .L395+4	@ tmp232,
 4918 0068 0022     		movs	r2, #0	@ tmp233,
 4919 006a 1A70     		strb	r2, [r3]	@ tmp234, GSMrxSMSState
1804:src/sim900_800.c **** 				break;
 4920              		.loc 1 1804 0
 4921 006c B8E2     		b	.L388	@
 4922              	.L340:
1805:src/sim900_800.c **** 
ARM GAS  /tmp/cc4fp2Bh.s 			page 122


1806:src/sim900_800.c **** 			case 2:
1807:src/sim900_800.c **** 					//Verifico que no hayan sido leidos los SMS.
1808:src/sim900_800.c **** 					if (GSMnumSMS <= GSMCantSMS)
 4923              		.loc 1 1808 0
 4924 006e BA4B     		ldr	r3, .L395+8	@ tmp235,
 4925 0070 1A78     		ldrb	r2, [r3]	@ D.7957, GSMnumSMS
 4926 0072 B74B     		ldr	r3, .L395	@ tmp236,
 4927 0074 1B78     		ldrb	r3, [r3]	@ D.7957, GSMCantSMS
 4928 0076 9A42     		cmp	r2, r3	@ D.7957, D.7957
 4929 0078 00D9     		bls	.LCB4035	@
 4930 007a FDE0     		b	.L345	@long jump	@
 4931              	.LCB4035:
1809:src/sim900_800.c **** 					{
1810:src/sim900_800.c **** 						switch(GSMReadSMSState)
 4932              		.loc 1 1810 0
 4933 007c B74B     		ldr	r3, .L395+12	@ tmp237,
 4934 007e 1B78     		ldrb	r3, [r3]	@ D.7959, GSMReadSMSState
 4935 0080 002B     		cmp	r3, #0	@ D.7958,
 4936 0082 02D0     		beq	.L347	@,
 4937 0084 012B     		cmp	r3, #1	@ D.7958,
 4938 0086 12D0     		beq	.L348	@,
 4939 0088 F1E0     		b	.L385	@
 4940              	.L347:
1811:src/sim900_800.c **** 						{
1812:src/sim900_800.c **** 							case 0:
1813:src/sim900_800.c **** 								GSMReadSMSrepIn[0] = 0;
 4941              		.loc 1 1813 0
 4942 008a B54B     		ldr	r3, .L395+16	@ tmp238,
 4943 008c 0022     		movs	r2, #0	@ tmp239,
 4944 008e 1A70     		strb	r2, [r3]	@ tmp240, GSMReadSMSrepIn
1814:src/sim900_800.c **** 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
 4945              		.loc 1 1814 0
 4946 0090 B14B     		ldr	r3, .L395+8	@ tmp241,
 4947 0092 1B78     		ldrb	r3, [r3]	@ D.7957, GSMnumSMS
 4948 0094 1A00     		movs	r2, r3	@ D.7958, D.7957
 4949 0096 B349     		ldr	r1, .L395+20	@ tmp242,
 4950 0098 B34B     		ldr	r3, .L395+24	@ tmp243,
 4951 009a 1800     		movs	r0, r3	@, tmp243
 4952 009c FFF7FEFF 		bl	sprintf	@
1815:src/sim900_800.c **** 								GSMReadSMSState++;
 4953              		.loc 1 1815 0
 4954 00a0 AE4B     		ldr	r3, .L395+12	@ tmp244,
 4955 00a2 1B78     		ldrb	r3, [r3]	@ D.7959, GSMReadSMSState
 4956 00a4 0133     		adds	r3, r3, #1	@ tmp245,
 4957 00a6 DAB2     		uxtb	r2, r3	@ D.7959, tmp245
 4958 00a8 AC4B     		ldr	r3, .L395+12	@ tmp246,
 4959 00aa 1A70     		strb	r2, [r3]	@ tmp247, GSMReadSMSState
1816:src/sim900_800.c **** 								break;
 4960              		.loc 1 1816 0
 4961 00ac 0AE1     		b	.L359	@
 4962              	.L348:
1817:src/sim900_800.c **** 
1818:src/sim900_800.c **** 							case 1:
1819:src/sim900_800.c **** 
1820:src/sim900_800.c **** 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
 4963              		.loc 1 1820 0
 4964 00ae 1724     		movs	r4, #23	@ tmp248,
ARM GAS  /tmp/cc4fp2Bh.s 			page 123


 4965 00b0 6C44     		add	r4, r4, sp	@ tmp248,
 4966 00b2 AE4B     		ldr	r3, .L395+28	@ tmp249,
 4967 00b4 AC48     		ldr	r0, .L395+24	@ tmp250,
 4968 00b6 0122     		movs	r2, #1	@,
 4969 00b8 0F21     		movs	r1, #15	@,
 4970 00ba FFF7FEFF 		bl	GSMSendCommand	@
 4971 00be 0300     		movs	r3, r0	@ tmp251,
 4972 00c0 2370     		strb	r3, [r4]	@ tmp253, i
1821:src/sim900_800.c **** 
1822:src/sim900_800.c **** 								if (i == 2)
 4973              		.loc 1 1822 0
 4974 00c2 1723     		movs	r3, #23	@ tmp254,
 4975 00c4 6B44     		add	r3, r3, sp	@ tmp254,
 4976 00c6 1B78     		ldrb	r3, [r3]	@ tmp255, i
 4977 00c8 022B     		cmp	r3, #2	@ tmp255,
 4978 00ca 00D0     		beq	.LCB4079	@
 4979 00cc C6E0     		b	.L350	@long jump	@
 4980              	.LCB4079:
1823:src/sim900_800.c **** 								{
1824:src/sim900_800.c **** 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 4981              		.loc 1 1824 0
 4982 00ce A849     		ldr	r1, .L395+32	@ tmp256,
 4983 00d0 A64B     		ldr	r3, .L395+28	@ tmp257,
 4984 00d2 0622     		movs	r2, #6	@,
 4985 00d4 1800     		movs	r0, r3	@, tmp257
 4986 00d6 FFF7FEFF 		bl	strncmp	@
 4987 00da 031E     		subs	r3, r0, #0	@ D.7958,,
 4988 00dc 00D0     		beq	.LCB4087	@
 4989 00de BDE0     		b	.L350	@long jump	@
 4990              	.LCB4087:
1825:src/sim900_800.c **** 									{
1826:src/sim900_800.c **** 
1827:src/sim900_800.c **** 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
 4991              		.loc 1 1827 0
 4992 00e0 A449     		ldr	r1, .L395+36	@ tmp258,
 4993 00e2 9F4B     		ldr	r3, .L395+16	@ tmp259,
 4994 00e4 0422     		movs	r2, #4	@,
 4995 00e6 1800     		movs	r0, r3	@, tmp259
 4996 00e8 FFF7FEFF 		bl	strncmp	@
 4997 00ec 031E     		subs	r3, r0, #0	@ D.7958,,
 4998 00ee 00D0     		beq	.LCB4095	@
 4999 00f0 ABE0     		b	.L351	@long jump	@
 5000              	.LCB4095:
1828:src/sim900_800.c **** 										{
1829:src/sim900_800.c **** 											i = 0;
 5001              		.loc 1 1829 0
 5002 00f2 1723     		movs	r3, #23	@ tmp260,
 5003 00f4 6B44     		add	r3, r3, sp	@ tmp260,
 5004 00f6 0022     		movs	r2, #0	@ tmp261,
 5005 00f8 1A70     		strb	r2, [r3]	@ tmp262, i
1830:src/sim900_800.c **** 											flag = 0;
 5006              		.loc 1 1830 0
 5007 00fa 1623     		movs	r3, #22	@ tmp263,
 5008 00fc 6B44     		add	r3, r3, sp	@ tmp263,
 5009 00fe 0022     		movs	r2, #0	@ tmp264,
 5010 0100 1A70     		strb	r2, [r3]	@ tmp265, flag
1831:src/sim900_800.c **** 											while (GSMbuffRtaCommand[i] != 0)
ARM GAS  /tmp/cc4fp2Bh.s 			page 124


 5011              		.loc 1 1831 0
 5012 0102 47E0     		b	.L352	@
 5013              	.L356:
1832:src/sim900_800.c **** 											{
1833:src/sim900_800.c **** 												if ((GSMbuffRtaCommand[i] == ',') && (GSMbuffRtaCommand[i+1] == '"') && (flag == 0))
 5014              		.loc 1 1833 0
 5015 0104 1723     		movs	r3, #23	@ tmp266,
 5016 0106 6B44     		add	r3, r3, sp	@ tmp266,
 5017 0108 1B78     		ldrb	r3, [r3]	@ D.7958, i
 5018 010a 984A     		ldr	r2, .L395+28	@ tmp267,
 5019 010c D35C     		ldrb	r3, [r2, r3]	@ D.7959, GSMbuffRtaCommand
 5020 010e 2C2B     		cmp	r3, #44	@ D.7959,
 5021 0110 39D1     		bne	.L353	@,
 5022              		.loc 1 1833 0 is_stmt 0 discriminator 1
 5023 0112 1723     		movs	r3, #23	@ tmp268,
 5024 0114 6B44     		add	r3, r3, sp	@ tmp268,
 5025 0116 1B78     		ldrb	r3, [r3]	@ D.7958, i
 5026 0118 0133     		adds	r3, r3, #1	@ D.7958,
 5027 011a 944A     		ldr	r2, .L395+28	@ tmp269,
 5028 011c D35C     		ldrb	r3, [r2, r3]	@ D.7959, GSMbuffRtaCommand
 5029 011e 222B     		cmp	r3, #34	@ D.7959,
 5030 0120 31D1     		bne	.L353	@,
 5031              		.loc 1 1833 0 discriminator 2
 5032 0122 1623     		movs	r3, #22	@ tmp270,
 5033 0124 6B44     		add	r3, r3, sp	@ tmp270,
 5034 0126 1B78     		ldrb	r3, [r3]	@ tmp271, flag
 5035 0128 002B     		cmp	r3, #0	@ tmp271,
 5036 012a 2CD1     		bne	.L353	@,
1834:src/sim900_800.c **** 												{
1835:src/sim900_800.c **** 													i += 2;
 5037              		.loc 1 1835 0 is_stmt 1
 5038 012c 1723     		movs	r3, #23	@ tmp272,
 5039 012e 6B44     		add	r3, r3, sp	@ tmp272,
 5040 0130 1722     		movs	r2, #23	@ tmp273,
 5041 0132 6A44     		add	r2, r2, sp	@ tmp273,
 5042 0134 1278     		ldrb	r2, [r2]	@ tmp274, i
 5043 0136 0232     		adds	r2, r2, #2	@ tmp275,
 5044 0138 1A70     		strb	r2, [r3]	@ tmp276, i
1836:src/sim900_800.c **** 													flag = i;
 5045              		.loc 1 1836 0
 5046 013a 1623     		movs	r3, #22	@ tmp277,
 5047 013c 6B44     		add	r3, r3, sp	@ tmp277,
 5048 013e 1722     		movs	r2, #23	@ tmp278,
 5049 0140 6A44     		add	r2, r2, sp	@ tmp278,
 5050 0142 1278     		ldrb	r2, [r2]	@ tmp279, i
 5051 0144 1A70     		strb	r2, [r3]	@ tmp279, flag
1837:src/sim900_800.c **** 													while (GSMbuffRtaCommand[i] != '"')
 5052              		.loc 1 1837 0
 5053 0146 06E0     		b	.L354	@
 5054              	.L355:
1838:src/sim900_800.c **** 													{
1839:src/sim900_800.c **** 														i++;
 5055              		.loc 1 1839 0
 5056 0148 1723     		movs	r3, #23	@ tmp280,
 5057 014a 6B44     		add	r3, r3, sp	@ tmp280,
 5058 014c 1A78     		ldrb	r2, [r3]	@ D.7957, i
 5059 014e 1723     		movs	r3, #23	@ tmp281,
ARM GAS  /tmp/cc4fp2Bh.s 			page 125


 5060 0150 6B44     		add	r3, r3, sp	@ tmp281,
 5061 0152 0132     		adds	r2, r2, #1	@ tmp282,
 5062 0154 1A70     		strb	r2, [r3]	@ tmp283, i
 5063              	.L354:
1837:src/sim900_800.c **** 													while (GSMbuffRtaCommand[i] != '"')
 5064              		.loc 1 1837 0
 5065 0156 1723     		movs	r3, #23	@ tmp284,
 5066 0158 6B44     		add	r3, r3, sp	@ tmp284,
 5067 015a 1B78     		ldrb	r3, [r3]	@ D.7958, i
 5068 015c 834A     		ldr	r2, .L395+28	@ tmp285,
 5069 015e D35C     		ldrb	r3, [r2, r3]	@ D.7959, GSMbuffRtaCommand
 5070 0160 222B     		cmp	r3, #34	@ D.7959,
 5071 0162 F1D1     		bne	.L355	@,
1840:src/sim900_800.c **** 													}
1841:src/sim900_800.c **** 													strncpy(pGSMReadSMStel, &GSMbuffRtaCommand[flag], (i - flag));
 5072              		.loc 1 1841 0
 5073 0164 1623     		movs	r3, #22	@ tmp286,
 5074 0166 6B44     		add	r3, r3, sp	@ tmp286,
 5075 0168 1A78     		ldrb	r2, [r3]	@ D.7958, flag
 5076 016a 804B     		ldr	r3, .L395+28	@ tmp287,
 5077 016c D118     		adds	r1, r2, r3	@ D.7960, D.7958, tmp287
 5078 016e 1723     		movs	r3, #23	@ tmp288,
 5079 0170 6B44     		add	r3, r3, sp	@ tmp288,
 5080 0172 1A78     		ldrb	r2, [r3]	@ D.7958, i
 5081 0174 1623     		movs	r3, #22	@ tmp289,
 5082 0176 6B44     		add	r3, r3, sp	@ tmp289,
 5083 0178 1B78     		ldrb	r3, [r3]	@ D.7958, flag
 5084 017a D31A     		subs	r3, r2, r3	@ D.7958, D.7958, D.7958
 5085 017c 1A00     		movs	r2, r3	@ D.7961, D.7958
 5086 017e 089B     		ldr	r3, [sp, #32]	@ tmp290, pGSMReadSMStel
 5087 0180 1800     		movs	r0, r3	@, tmp290
 5088 0182 FFF7FEFF 		bl	strncpy	@
 5089              	.L353:
1842:src/sim900_800.c **** 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1843:src/sim900_800.c **** 													//UARTDBGSend(pGSMReadSMStel);
1844:src/sim900_800.c **** 													//GSMReadSMStel[0]  = 0;
1845:src/sim900_800.c **** 												}
1846:src/sim900_800.c **** 												i++;
 5090              		.loc 1 1846 0
 5091 0186 1723     		movs	r3, #23	@ tmp291,
 5092 0188 6B44     		add	r3, r3, sp	@ tmp291,
 5093 018a 1A78     		ldrb	r2, [r3]	@ D.7957, i
 5094 018c 1723     		movs	r3, #23	@ tmp292,
 5095 018e 6B44     		add	r3, r3, sp	@ tmp292,
 5096 0190 0132     		adds	r2, r2, #1	@ tmp293,
 5097 0192 1A70     		strb	r2, [r3]	@ tmp294, i
 5098              	.L352:
1831:src/sim900_800.c **** 											{
 5099              		.loc 1 1831 0
 5100 0194 1723     		movs	r3, #23	@ tmp295,
 5101 0196 6B44     		add	r3, r3, sp	@ tmp295,
 5102 0198 1B78     		ldrb	r3, [r3]	@ D.7958, i
 5103 019a 744A     		ldr	r2, .L395+28	@ tmp296,
 5104 019c D35C     		ldrb	r3, [r2, r3]	@ D.7959, GSMbuffRtaCommand
 5105 019e 002B     		cmp	r3, #0	@ D.7959,
 5106 01a0 B0D1     		bne	.L356	@,
1847:src/sim900_800.c **** 											}
ARM GAS  /tmp/cc4fp2Bh.s 			page 126


1848:src/sim900_800.c **** 
1849:src/sim900_800.c **** 											GSMReadSMSrepIn[19] = 0;
 5107              		.loc 1 1849 0
 5108 01a2 6F4B     		ldr	r3, .L395+16	@ tmp297,
 5109 01a4 0022     		movs	r2, #0	@ tmp298,
 5110 01a6 DA74     		strb	r2, [r3, #19]	@ tmp299, GSMReadSMSrepIn
1850:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000: AR
 5111              		.loc 1 1850 0
 5112 01a8 7349     		ldr	r1, .L395+40	@ tmp300,
 5113 01aa 6D4B     		ldr	r3, .L395+16	@ tmp301,
 5114 01ac 0822     		movs	r2, #8	@,
 5115 01ae 1800     		movs	r0, r3	@, tmp301
 5116 01b0 FFF7FEFF 		bl	strncmp	@
 5117 01b4 031E     		subs	r3, r0, #0	@ D.7958,,
 5118 01b6 1FD1     		bne	.L357	@,
1851:src/sim900_800.c **** 											{
1852:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5119              		.loc 1 1852 0
 5120 01b8 029B     		ldr	r3, [sp, #8]	@ tmp302, puserCode
 5121 01ba 1800     		movs	r0, r3	@, tmp302
 5122 01bc FFF7FEFF 		bl	strlen	@
 5123 01c0 0200     		movs	r2, r0	@ D.7961,
 5124 01c2 0299     		ldr	r1, [sp, #8]	@ tmp303, puserCode
 5125 01c4 6D4B     		ldr	r3, .L395+44	@ tmp304,
 5126 01c6 1800     		movs	r0, r3	@, tmp304
 5127 01c8 FFF7FEFF 		bl	strncmp	@
 5128 01cc 031E     		subs	r3, r0, #0	@ D.7958,,
 5129 01ce 13D1     		bne	.L357	@,
1853:src/sim900_800.c **** 												{
1854:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5130              		.loc 1 1854 0
 5131 01d0 6B49     		ldr	r1, .L395+48	@ tmp305,
 5132 01d2 019B     		ldr	r3, [sp, #4]	@ tmp306, pclaveAct
 5133 01d4 0422     		movs	r2, #4	@,
 5134 01d6 1800     		movs	r0, r3	@, tmp306
 5135 01d8 FFF7FEFF 		bl	strncpy	@
1855:src/sim900_800.c **** 
1856:src/sim900_800.c **** 													*pActDact |= 0x40; //Armar
 5136              		.loc 1 1856 0
 5137 01dc 009B     		ldr	r3, [sp]	@ tmp307, pActDact
 5138 01de 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5139 01e0 4022     		movs	r2, #64	@ tmp309,
 5140 01e2 1343     		orrs	r3, r2	@ tmp308, tmp309
 5141 01e4 DAB2     		uxtb	r2, r3	@ D.7957, tmp308
 5142 01e6 009B     		ldr	r3, [sp]	@ tmp310, pActDact
 5143 01e8 1A70     		strb	r2, [r3]	@ tmp311, *pActDact_102(D)
1857:src/sim900_800.c **** 													*pActDact |= 0x01; //SendOK.
 5144              		.loc 1 1857 0
 5145 01ea 009B     		ldr	r3, [sp]	@ tmp312, pActDact
 5146 01ec 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5147 01ee 0122     		movs	r2, #1	@ tmp314,
 5148 01f0 1343     		orrs	r3, r2	@ tmp313, tmp314
 5149 01f2 DAB2     		uxtb	r2, r3	@ D.7957, tmp313
 5150 01f4 009B     		ldr	r3, [sp]	@ tmp315, pActDact
 5151 01f6 1A70     		strb	r2, [r3]	@ tmp316, *pActDact_102(D)
 5152              	.L357:
1858:src/sim900_800.c **** 												}
ARM GAS  /tmp/cc4fp2Bh.s 			page 127


1859:src/sim900_800.c **** 											}
1860:src/sim900_800.c **** 
1861:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000: DR
 5153              		.loc 1 1861 0
 5154 01f8 6249     		ldr	r1, .L395+52	@ tmp317,
 5155 01fa 594B     		ldr	r3, .L395+16	@ tmp318,
 5156 01fc 0822     		movs	r2, #8	@,
 5157 01fe 1800     		movs	r0, r3	@, tmp318
 5158 0200 FFF7FEFF 		bl	strncmp	@
 5159 0204 031E     		subs	r3, r0, #0	@ D.7958,,
 5160 0206 20D1     		bne	.L351	@,
1862:src/sim900_800.c **** 											{
1863:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5161              		.loc 1 1863 0
 5162 0208 029B     		ldr	r3, [sp, #8]	@ tmp319, puserCode
 5163 020a 1800     		movs	r0, r3	@, tmp319
 5164 020c FFF7FEFF 		bl	strlen	@
 5165 0210 0200     		movs	r2, r0	@ D.7961,
 5166 0212 0299     		ldr	r1, [sp, #8]	@ tmp320, puserCode
 5167 0214 594B     		ldr	r3, .L395+44	@ tmp321,
 5168 0216 1800     		movs	r0, r3	@, tmp321
 5169 0218 FFF7FEFF 		bl	strncmp	@
 5170 021c 031E     		subs	r3, r0, #0	@ D.7958,,
 5171 021e 14D1     		bne	.L351	@,
1864:src/sim900_800.c **** 												{
1865:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5172              		.loc 1 1865 0
 5173 0220 5749     		ldr	r1, .L395+48	@ tmp322,
 5174 0222 019B     		ldr	r3, [sp, #4]	@ tmp323, pclaveAct
 5175 0224 0422     		movs	r2, #4	@,
 5176 0226 1800     		movs	r0, r3	@, tmp323
 5177 0228 FFF7FEFF 		bl	strncpy	@
1866:src/sim900_800.c **** 
1867:src/sim900_800.c **** 													*pActDact |= 0x80; //Desrmar
 5178              		.loc 1 1867 0
 5179 022c 009B     		ldr	r3, [sp]	@ tmp324, pActDact
 5180 022e 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5181 0230 8022     		movs	r2, #128	@ tmp544,
 5182 0232 5242     		rsbs	r2, r2, #0	@ tmp326, tmp544
 5183 0234 1343     		orrs	r3, r2	@ tmp325, tmp326
 5184 0236 DAB2     		uxtb	r2, r3	@ D.7957, tmp325
 5185 0238 009B     		ldr	r3, [sp]	@ tmp327, pActDact
 5186 023a 1A70     		strb	r2, [r3]	@ tmp328, *pActDact_102(D)
1868:src/sim900_800.c **** 													*pActDact |= 0x01; //SendOK.
 5187              		.loc 1 1868 0
 5188 023c 009B     		ldr	r3, [sp]	@ tmp329, pActDact
 5189 023e 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5190 0240 0122     		movs	r2, #1	@ tmp331,
 5191 0242 1343     		orrs	r3, r2	@ tmp330, tmp331
 5192 0244 DAB2     		uxtb	r2, r3	@ D.7957, tmp330
 5193 0246 009B     		ldr	r3, [sp]	@ tmp332, pActDact
 5194 0248 1A70     		strb	r2, [r3]	@ tmp333, *pActDact_102(D)
 5195              	.L351:
1869:src/sim900_800.c **** 												}
1870:src/sim900_800.c **** 											}
1871:src/sim900_800.c **** 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1872:src/sim900_800.c **** 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
ARM GAS  /tmp/cc4fp2Bh.s 			page 128


1873:src/sim900_800.c **** 											//Led4Toggle();
1874:src/sim900_800.c **** 										}
1875:src/sim900_800.c **** 
1876:src/sim900_800.c **** 										GSMReadSMSState = 0;
 5196              		.loc 1 1876 0
 5197 024a 444B     		ldr	r3, .L395+12	@ tmp334,
 5198 024c 0022     		movs	r2, #0	@ tmp335,
 5199 024e 1A70     		strb	r2, [r3]	@ tmp336, GSMReadSMSState
1877:src/sim900_800.c **** 										GSMnumSMS++;
 5200              		.loc 1 1877 0
 5201 0250 414B     		ldr	r3, .L395+8	@ tmp337,
 5202 0252 1B78     		ldrb	r3, [r3]	@ D.7957, GSMnumSMS
 5203 0254 0133     		adds	r3, r3, #1	@ tmp338,
 5204 0256 DAB2     		uxtb	r2, r3	@ D.7957, tmp338
 5205 0258 3F4B     		ldr	r3, .L395+8	@ tmp339,
 5206 025a 1A70     		strb	r2, [r3]	@ tmp340, GSMnumSMS
 5207              	.L350:
1878:src/sim900_800.c **** 									}
1879:src/sim900_800.c **** 								}
1880:src/sim900_800.c **** 
1881:src/sim900_800.c **** 								if (i > 2)
 5208              		.loc 1 1881 0
 5209 025c 1723     		movs	r3, #23	@ tmp341,
 5210 025e 6B44     		add	r3, r3, sp	@ tmp341,
 5211 0260 1B78     		ldrb	r3, [r3]	@ tmp342, i
 5212 0262 022B     		cmp	r3, #2	@ tmp342,
 5213 0264 2DD9     		bls	.L389	@,
1882:src/sim900_800.c **** 								{
1883:src/sim900_800.c **** 									GSMReadSMSState = 0;
 5214              		.loc 1 1883 0
 5215 0266 3D4B     		ldr	r3, .L395+12	@ tmp343,
 5216 0268 0022     		movs	r2, #0	@ tmp344,
 5217 026a 1A70     		strb	r2, [r3]	@ tmp345, GSMReadSMSState
1884:src/sim900_800.c **** 								}
1885:src/sim900_800.c **** 							break;
 5218              		.loc 1 1885 0
 5219 026c 29E0     		b	.L389	@
 5220              	.L385:
1886:src/sim900_800.c **** 
1887:src/sim900_800.c **** 						default:
1888:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5221              		.loc 1 1888 0
 5222 026e 3B4B     		ldr	r3, .L395+12	@ tmp346,
 5223 0270 0022     		movs	r2, #0	@ tmp347,
 5224 0272 1A70     		strb	r2, [r3]	@ tmp348, GSMReadSMSState
1889:src/sim900_800.c **** 							break;
 5225              		.loc 1 1889 0
 5226 0274 C046     		nop
 5227 0276 25E0     		b	.L359	@
 5228              	.L345:
1890:src/sim900_800.c **** 						}
1891:src/sim900_800.c **** 			}
1892:src/sim900_800.c **** 			else
1893:src/sim900_800.c **** 			{
1894:src/sim900_800.c **** 
1895:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 5229              		.loc 1 1895 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 129


 5230 0278 1724     		movs	r4, #23	@ tmp349,
 5231 027a 6C44     		add	r4, r4, sp	@ tmp349,
 5232 027c 3B4B     		ldr	r3, .L395+28	@ tmp350,
 5233 027e 4248     		ldr	r0, .L395+56	@ tmp351,
 5234 0280 0022     		movs	r2, #0	@,
 5235 0282 0F21     		movs	r1, #15	@,
 5236 0284 FFF7FEFF 		bl	GSMSendCommand	@
 5237 0288 0300     		movs	r3, r0	@ tmp352,
 5238 028a 2370     		strb	r3, [r4]	@ tmp354, i
1896:src/sim900_800.c **** 
1897:src/sim900_800.c **** 				if (i == 2)
 5239              		.loc 1 1897 0
 5240 028c 1723     		movs	r3, #23	@ tmp355,
 5241 028e 6B44     		add	r3, r3, sp	@ tmp355,
 5242 0290 1B78     		ldrb	r3, [r3]	@ tmp356, i
 5243 0292 022B     		cmp	r3, #2	@ tmp356,
 5244 0294 0BD1     		bne	.L360	@,
1898:src/sim900_800.c **** 				{
1899:src/sim900_800.c **** 					GSMnumSMS = 1;
 5245              		.loc 1 1899 0
 5246 0296 304B     		ldr	r3, .L395+8	@ tmp357,
 5247 0298 0122     		movs	r2, #1	@ tmp358,
 5248 029a 1A70     		strb	r2, [r3]	@ tmp359, GSMnumSMS
1900:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5249              		.loc 1 1900 0
 5250 029c 2D4B     		ldr	r3, .L395+4	@ tmp360,
 5251 029e 0022     		movs	r2, #0	@ tmp361,
 5252 02a0 1A70     		strb	r2, [r3]	@ tmp362, GSMrxSMSState
1901:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5253              		.loc 1 1901 0
 5254 02a2 2E4B     		ldr	r3, .L395+12	@ tmp363,
 5255 02a4 0022     		movs	r2, #0	@ tmp364,
 5256 02a6 1A70     		strb	r2, [r3]	@ tmp365, GSMReadSMSState
1902:src/sim900_800.c **** 					GSMCantSMS = 0;
 5257              		.loc 1 1902 0
 5258 02a8 294B     		ldr	r3, .L395	@ tmp366,
 5259 02aa 0022     		movs	r2, #0	@ tmp367,
 5260 02ac 1A70     		strb	r2, [r3]	@ tmp368, GSMCantSMS
 5261              	.L360:
1903:src/sim900_800.c **** 				}
1904:src/sim900_800.c **** 
1905:src/sim900_800.c **** 				if (i > 2)
 5262              		.loc 1 1905 0
 5263 02ae 1723     		movs	r3, #23	@ tmp369,
 5264 02b0 6B44     		add	r3, r3, sp	@ tmp369,
 5265 02b2 1B78     		ldrb	r3, [r3]	@ tmp370, i
 5266 02b4 022B     		cmp	r3, #2	@ tmp370,
 5267 02b6 00D8     		bhi	.LCB4342	@
 5268 02b8 94E1     		b	.L390	@long jump	@
 5269              	.LCB4342:
1906:src/sim900_800.c **** 				{
1907:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5270              		.loc 1 1907 0
 5271 02ba 284B     		ldr	r3, .L395+12	@ tmp371,
 5272 02bc 0022     		movs	r2, #0	@ tmp372,
 5273 02be 1A70     		strb	r2, [r3]	@ tmp373, GSMReadSMSState
1908:src/sim900_800.c **** 				}
ARM GAS  /tmp/cc4fp2Bh.s 			page 130


1909:src/sim900_800.c **** 			}
1910:src/sim900_800.c **** 			break;
 5274              		.loc 1 1910 0
 5275 02c0 90E1     		b	.L390	@
 5276              	.L389:
1885:src/sim900_800.c **** 
 5277              		.loc 1 1885 0
 5278 02c2 C046     		nop
 5279              	.L359:
 5280              		.loc 1 1910 0 discriminator 3
 5281 02c4 8EE1     		b	.L390	@
 5282              	.L384:
1911:src/sim900_800.c **** 
1912:src/sim900_800.c **** 		default:
1913:src/sim900_800.c **** 			GSMrxSMSState = 0;
 5283              		.loc 1 1913 0
 5284 02c6 234B     		ldr	r3, .L395+4	@ tmp374,
 5285 02c8 0022     		movs	r2, #0	@ tmp375,
 5286 02ca 1A70     		strb	r2, [r3]	@ tmp376, GSMrxSMSState
1914:src/sim900_800.c **** 			break;
 5287              		.loc 1 1914 0
 5288 02cc C046     		nop
 5289 02ce 8EE1     		b	.L361	@
 5290              	.L337:
1915:src/sim900_800.c **** 		}
1916:src/sim900_800.c **** 	}
1917:src/sim900_800.c **** 	else if (GSMCantSMS2)
 5291              		.loc 1 1917 0
 5292 02d0 2E4B     		ldr	r3, .L395+60	@ tmp377,
 5293 02d2 1B78     		ldrb	r3, [r3]	@ D.7957, GSMCantSMS2
 5294 02d4 002B     		cmp	r3, #0	@ D.7957,
 5295 02d6 00D1     		bne	.LCB4368	@
 5296 02d8 89E1     		b	.L391	@long jump	@
 5297              	.LCB4368:
1918:src/sim900_800.c **** 	{
1919:src/sim900_800.c **** 		switch(GSMrxSMSState)
 5298              		.loc 1 1919 0
 5299 02da 1E4B     		ldr	r3, .L395+4	@ tmp378,
 5300 02dc 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 5301 02de 012B     		cmp	r3, #1	@ D.7958,
 5302 02e0 0BD0     		beq	.L363	@,
 5303 02e2 022B     		cmp	r3, #2	@ D.7958,
 5304 02e4 25D0     		beq	.L364	@,
 5305 02e6 002B     		cmp	r3, #0	@ D.7958,
 5306 02e8 00D0     		beq	.LCB4376	@
 5307 02ea 75E1     		b	.L386	@long jump	@
 5308              	.LCB4376:
1920:src/sim900_800.c **** 		{
1921:src/sim900_800.c **** 
1922:src/sim900_800.c **** 			case 0:
1923:src/sim900_800.c **** 				GSMrxSMSState++;
 5309              		.loc 1 1923 0
 5310 02ec 194B     		ldr	r3, .L395+4	@ tmp379,
 5311 02ee 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 5312 02f0 0133     		adds	r3, r3, #1	@ tmp380,
 5313 02f2 DAB2     		uxtb	r2, r3	@ D.7957, tmp380
 5314 02f4 174B     		ldr	r3, .L395+4	@ tmp381,
ARM GAS  /tmp/cc4fp2Bh.s 			page 131


 5315 02f6 1A70     		strb	r2, [r3]	@ tmp382, GSMrxSMSState
1924:src/sim900_800.c **** 				break;
 5316              		.loc 1 1924 0
 5317 02f8 79E1     		b	.L361	@
 5318              	.L363:
1925:src/sim900_800.c **** 			case 1:
1926:src/sim900_800.c **** 				i = GSM_SetSIM (2);
 5319              		.loc 1 1926 0
 5320 02fa 1724     		movs	r4, #23	@ tmp383,
 5321 02fc 6C44     		add	r4, r4, sp	@ tmp383,
 5322 02fe 0220     		movs	r0, #2	@,
 5323 0300 FFF7FEFF 		bl	GSM_SetSIM	@
 5324 0304 0300     		movs	r3, r0	@ tmp384,
 5325 0306 2370     		strb	r3, [r4]	@ tmp386, i
1927:src/sim900_800.c **** 
1928:src/sim900_800.c **** 				if (i == 2)
 5326              		.loc 1 1928 0
 5327 0308 1723     		movs	r3, #23	@ tmp387,
 5328 030a 6B44     		add	r3, r3, sp	@ tmp387,
 5329 030c 1B78     		ldrb	r3, [r3]	@ tmp388, i
 5330 030e 022B     		cmp	r3, #2	@ tmp388,
 5331 0310 05D1     		bne	.L366	@,
1929:src/sim900_800.c **** 					GSMrxSMSState++;
 5332              		.loc 1 1929 0
 5333 0312 104B     		ldr	r3, .L395+4	@ tmp389,
 5334 0314 1B78     		ldrb	r3, [r3]	@ D.7957, GSMrxSMSState
 5335 0316 0133     		adds	r3, r3, #1	@ tmp390,
 5336 0318 DAB2     		uxtb	r2, r3	@ D.7957, tmp390
 5337 031a 0E4B     		ldr	r3, .L395+4	@ tmp391,
 5338 031c 1A70     		strb	r2, [r3]	@ tmp392, GSMrxSMSState
 5339              	.L366:
1930:src/sim900_800.c **** 				if (i > 2)
 5340              		.loc 1 1930 0
 5341 031e 1723     		movs	r3, #23	@ tmp393,
 5342 0320 6B44     		add	r3, r3, sp	@ tmp393,
 5343 0322 1B78     		ldrb	r3, [r3]	@ tmp394, i
 5344 0324 022B     		cmp	r3, #2	@ tmp394,
 5345 0326 00D8     		bhi	.LCB4410	@
 5346 0328 5EE1     		b	.L392	@long jump	@
 5347              	.LCB4410:
1931:src/sim900_800.c **** 					GSMrxSMSState=0;
 5348              		.loc 1 1931 0
 5349 032a 0A4B     		ldr	r3, .L395+4	@ tmp395,
 5350 032c 0022     		movs	r2, #0	@ tmp396,
 5351 032e 1A70     		strb	r2, [r3]	@ tmp397, GSMrxSMSState
1932:src/sim900_800.c **** 				break;
 5352              		.loc 1 1932 0
 5353 0330 5AE1     		b	.L392	@
 5354              	.L364:
1933:src/sim900_800.c **** 
1934:src/sim900_800.c **** 			case 2:
1935:src/sim900_800.c **** 					//Verifico que no hayan sido leidos los SMS.
1936:src/sim900_800.c **** 					if (GSMnumSMS <= GSMCantSMS2)
 5355              		.loc 1 1936 0
 5356 0332 094B     		ldr	r3, .L395+8	@ tmp398,
 5357 0334 1A78     		ldrb	r2, [r3]	@ D.7957, GSMnumSMS
 5358 0336 154B     		ldr	r3, .L395+60	@ tmp399,
ARM GAS  /tmp/cc4fp2Bh.s 			page 132


 5359 0338 1B78     		ldrb	r3, [r3]	@ D.7957, GSMCantSMS2
 5360 033a 9A42     		cmp	r2, r3	@ D.7957, D.7957
 5361 033c 00D9     		bls	.LCB4423	@
 5362 033e 22E1     		b	.L368	@long jump	@
 5363              	.LCB4423:
1937:src/sim900_800.c **** 					{
1938:src/sim900_800.c **** 						switch(GSMReadSMSState)
 5364              		.loc 1 1938 0
 5365 0340 064B     		ldr	r3, .L395+12	@ tmp400,
 5366 0342 1B78     		ldrb	r3, [r3]	@ D.7959, GSMReadSMSState
 5367 0344 002B     		cmp	r3, #0	@ D.7958,
 5368 0346 23D0     		beq	.L370	@,
 5369 0348 012B     		cmp	r3, #1	@ D.7958,
 5370 034a 33D0     		beq	.L371	@,
 5371 034c 16E1     		b	.L387	@
 5372              	.L396:
 5373 034e C046     		.align	2
 5374              	.L395:
 5375 0350 00000000 		.word	GSMCantSMS
 5376 0354 00000000 		.word	GSMrxSMSState
 5377 0358 00000000 		.word	GSMnumSMS
 5378 035c 00000000 		.word	GSMReadSMSState
 5379 0360 00000000 		.word	GSMReadSMSrepIn
 5380 0364 20020000 		.word	.LC183
 5381 0368 00000000 		.word	GSMReadSMScommand
 5382 036c 00000000 		.word	GSMbuffRtaCommand
 5383 0370 30020000 		.word	.LC187
 5384 0374 54000000 		.word	.LC54
 5385 0378 38020000 		.word	.LC190
 5386 037c 09000000 		.word	GSMReadSMSrepIn+9
 5387 0380 10000000 		.word	buffUARTGSMrx2+16
 5388 0384 44020000 		.word	.LC194
 5389 0388 50020000 		.word	.LC196
 5390 038c 00000000 		.word	GSMCantSMS2
 5391              	.L370:
1939:src/sim900_800.c **** 						{
1940:src/sim900_800.c **** 							case 0:
1941:src/sim900_800.c **** 								GSMReadSMSrepIn[0] = 0;
 5392              		.loc 1 1941 0
 5393 0390 984B     		ldr	r3, .L397	@ tmp401,
 5394 0392 0022     		movs	r2, #0	@ tmp402,
 5395 0394 1A70     		strb	r2, [r3]	@ tmp403, GSMReadSMSrepIn
1942:src/sim900_800.c **** 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
 5396              		.loc 1 1942 0
 5397 0396 984B     		ldr	r3, .L397+4	@ tmp404,
 5398 0398 1B78     		ldrb	r3, [r3]	@ D.7957, GSMnumSMS
 5399 039a 1A00     		movs	r2, r3	@ D.7958, D.7957
 5400 039c 9749     		ldr	r1, .L397+8	@ tmp405,
 5401 039e 984B     		ldr	r3, .L397+12	@ tmp406,
 5402 03a0 1800     		movs	r0, r3	@, tmp406
 5403 03a2 FFF7FEFF 		bl	sprintf	@
1943:src/sim900_800.c **** 								GSMReadSMSState++;
 5404              		.loc 1 1943 0
 5405 03a6 974B     		ldr	r3, .L397+16	@ tmp407,
 5406 03a8 1B78     		ldrb	r3, [r3]	@ D.7959, GSMReadSMSState
 5407 03aa 0133     		adds	r3, r3, #1	@ tmp408,
 5408 03ac DAB2     		uxtb	r2, r3	@ D.7959, tmp408
ARM GAS  /tmp/cc4fp2Bh.s 			page 133


 5409 03ae 954B     		ldr	r3, .L397+16	@ tmp409,
 5410 03b0 1A70     		strb	r2, [r3]	@ tmp410, GSMReadSMSState
1944:src/sim900_800.c **** 								break;
 5411              		.loc 1 1944 0
 5412 03b2 10E1     		b	.L382	@
 5413              	.L371:
1945:src/sim900_800.c **** 
1946:src/sim900_800.c **** 							case 1:
1947:src/sim900_800.c **** 
1948:src/sim900_800.c **** 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
 5414              		.loc 1 1948 0
 5415 03b4 1724     		movs	r4, #23	@ tmp411,
 5416 03b6 6C44     		add	r4, r4, sp	@ tmp411,
 5417 03b8 934B     		ldr	r3, .L397+20	@ tmp412,
 5418 03ba 9148     		ldr	r0, .L397+12	@ tmp413,
 5419 03bc 0122     		movs	r2, #1	@,
 5420 03be 0F21     		movs	r1, #15	@,
 5421 03c0 FFF7FEFF 		bl	GSMSendCommand	@
 5422 03c4 0300     		movs	r3, r0	@ tmp414,
 5423 03c6 2370     		strb	r3, [r4]	@ tmp416, i
1949:src/sim900_800.c **** 
1950:src/sim900_800.c **** 								if (i == 2)
 5424              		.loc 1 1950 0
 5425 03c8 1723     		movs	r3, #23	@ tmp417,
 5426 03ca 6B44     		add	r3, r3, sp	@ tmp417,
 5427 03cc 1B78     		ldrb	r3, [r3]	@ tmp418, i
 5428 03ce 022B     		cmp	r3, #2	@ tmp418,
 5429 03d0 00D0     		beq	.LCB4488	@
 5430 03d2 CAE0     		b	.L373	@long jump	@
 5431              	.LCB4488:
1951:src/sim900_800.c **** 								{
1952:src/sim900_800.c **** 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 5432              		.loc 1 1952 0
 5433 03d4 8D49     		ldr	r1, .L397+24	@ tmp419,
 5434 03d6 8C4B     		ldr	r3, .L397+20	@ tmp420,
 5435 03d8 0622     		movs	r2, #6	@,
 5436 03da 1800     		movs	r0, r3	@, tmp420
 5437 03dc FFF7FEFF 		bl	strncmp	@
 5438 03e0 031E     		subs	r3, r0, #0	@ D.7958,,
 5439 03e2 00D0     		beq	.LCB4496	@
 5440 03e4 C1E0     		b	.L373	@long jump	@
 5441              	.LCB4496:
1953:src/sim900_800.c **** 									{
1954:src/sim900_800.c **** 
1955:src/sim900_800.c **** 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
 5442              		.loc 1 1955 0
 5443 03e6 8A49     		ldr	r1, .L397+28	@ tmp421,
 5444 03e8 824B     		ldr	r3, .L397	@ tmp422,
 5445 03ea 0422     		movs	r2, #4	@,
 5446 03ec 1800     		movs	r0, r3	@, tmp422
 5447 03ee FFF7FEFF 		bl	strncmp	@
 5448 03f2 031E     		subs	r3, r0, #0	@ D.7958,,
 5449 03f4 00D0     		beq	.LCB4504	@
 5450 03f6 AFE0     		b	.L374	@long jump	@
 5451              	.LCB4504:
1956:src/sim900_800.c **** 										{
1957:src/sim900_800.c **** 											i = 0;
ARM GAS  /tmp/cc4fp2Bh.s 			page 134


 5452              		.loc 1 1957 0
 5453 03f8 1723     		movs	r3, #23	@ tmp423,
 5454 03fa 6B44     		add	r3, r3, sp	@ tmp423,
 5455 03fc 0022     		movs	r2, #0	@ tmp424,
 5456 03fe 1A70     		strb	r2, [r3]	@ tmp425, i
1958:src/sim900_800.c **** 											flag = 0;
 5457              		.loc 1 1958 0
 5458 0400 1623     		movs	r3, #22	@ tmp426,
 5459 0402 6B44     		add	r3, r3, sp	@ tmp426,
 5460 0404 0022     		movs	r2, #0	@ tmp427,
 5461 0406 1A70     		strb	r2, [r3]	@ tmp428, flag
1959:src/sim900_800.c **** 											while (*(GSMbuffRtaCommand+i) != 0)
 5462              		.loc 1 1959 0
 5463 0408 4AE0     		b	.L375	@
 5464              	.L379:
1960:src/sim900_800.c **** 											{
1961:src/sim900_800.c **** 												if ((*(GSMbuffRtaCommand+i) == ',') && (*(GSMbuffRtaCommand+i+1) == '"') && (flag == 0)
 5465              		.loc 1 1961 0
 5466 040a 1723     		movs	r3, #23	@ tmp429,
 5467 040c 6B44     		add	r3, r3, sp	@ tmp429,
 5468 040e 1A78     		ldrb	r2, [r3]	@ D.7962, i
 5469 0410 7D4B     		ldr	r3, .L397+20	@ tmp430,
 5470 0412 D318     		adds	r3, r2, r3	@ D.7960, D.7962, tmp430
 5471 0414 1B78     		ldrb	r3, [r3]	@ D.7959, *_170
 5472 0416 2C2B     		cmp	r3, #44	@ D.7959,
 5473 0418 3BD1     		bne	.L376	@,
 5474              		.loc 1 1961 0 is_stmt 0 discriminator 1
 5475 041a 1723     		movs	r3, #23	@ tmp431,
 5476 041c 6B44     		add	r3, r3, sp	@ tmp431,
 5477 041e 1B78     		ldrb	r3, [r3]	@ D.7962, i
 5478 0420 5A1C     		adds	r2, r3, #1	@ D.7962, D.7962,
 5479 0422 794B     		ldr	r3, .L397+20	@ tmp432,
 5480 0424 D318     		adds	r3, r2, r3	@ D.7960, D.7962, tmp432
 5481 0426 1B78     		ldrb	r3, [r3]	@ D.7959, *_174
 5482 0428 222B     		cmp	r3, #34	@ D.7959,
 5483 042a 32D1     		bne	.L376	@,
 5484              		.loc 1 1961 0 discriminator 2
 5485 042c 1623     		movs	r3, #22	@ tmp433,
 5486 042e 6B44     		add	r3, r3, sp	@ tmp433,
 5487 0430 1B78     		ldrb	r3, [r3]	@ tmp434, flag
 5488 0432 002B     		cmp	r3, #0	@ tmp434,
 5489 0434 2DD1     		bne	.L376	@,
1962:src/sim900_800.c **** 												{
1963:src/sim900_800.c **** 													i += 2;
 5490              		.loc 1 1963 0 is_stmt 1
 5491 0436 1723     		movs	r3, #23	@ tmp435,
 5492 0438 6B44     		add	r3, r3, sp	@ tmp435,
 5493 043a 1722     		movs	r2, #23	@ tmp436,
 5494 043c 6A44     		add	r2, r2, sp	@ tmp436,
 5495 043e 1278     		ldrb	r2, [r2]	@ tmp437, i
 5496 0440 0232     		adds	r2, r2, #2	@ tmp438,
 5497 0442 1A70     		strb	r2, [r3]	@ tmp439, i
1964:src/sim900_800.c **** 													flag = i;
 5498              		.loc 1 1964 0
 5499 0444 1623     		movs	r3, #22	@ tmp440,
 5500 0446 6B44     		add	r3, r3, sp	@ tmp440,
 5501 0448 1722     		movs	r2, #23	@ tmp441,
ARM GAS  /tmp/cc4fp2Bh.s 			page 135


 5502 044a 6A44     		add	r2, r2, sp	@ tmp441,
 5503 044c 1278     		ldrb	r2, [r2]	@ tmp442, i
 5504 044e 1A70     		strb	r2, [r3]	@ tmp442, flag
1965:src/sim900_800.c **** 													while (*(GSMbuffRtaCommand+i) != '"')
 5505              		.loc 1 1965 0
 5506 0450 06E0     		b	.L377	@
 5507              	.L378:
1966:src/sim900_800.c **** 													{
1967:src/sim900_800.c **** 														i++;
 5508              		.loc 1 1967 0
 5509 0452 1723     		movs	r3, #23	@ tmp443,
 5510 0454 6B44     		add	r3, r3, sp	@ tmp443,
 5511 0456 1A78     		ldrb	r2, [r3]	@ D.7957, i
 5512 0458 1723     		movs	r3, #23	@ tmp444,
 5513 045a 6B44     		add	r3, r3, sp	@ tmp444,
 5514 045c 0132     		adds	r2, r2, #1	@ tmp445,
 5515 045e 1A70     		strb	r2, [r3]	@ tmp446, i
 5516              	.L377:
1965:src/sim900_800.c **** 													while (*(GSMbuffRtaCommand+i) != '"')
 5517              		.loc 1 1965 0
 5518 0460 1723     		movs	r3, #23	@ tmp447,
 5519 0462 6B44     		add	r3, r3, sp	@ tmp447,
 5520 0464 1A78     		ldrb	r2, [r3]	@ D.7962, i
 5521 0466 684B     		ldr	r3, .L397+20	@ tmp448,
 5522 0468 D318     		adds	r3, r2, r3	@ D.7960, D.7962, tmp448
 5523 046a 1B78     		ldrb	r3, [r3]	@ D.7959, *_179
 5524 046c 222B     		cmp	r3, #34	@ D.7959,
 5525 046e F0D1     		bne	.L378	@,
1968:src/sim900_800.c **** 													}
1969:src/sim900_800.c **** 													strncpy((char *)pGSMReadSMStel, (const char *)&GSMbuffRtaCommand[flag], (i - flag));
 5526              		.loc 1 1969 0
 5527 0470 1623     		movs	r3, #22	@ tmp449,
 5528 0472 6B44     		add	r3, r3, sp	@ tmp449,
 5529 0474 1A78     		ldrb	r2, [r3]	@ D.7958, flag
 5530 0476 644B     		ldr	r3, .L397+20	@ tmp450,
 5531 0478 D118     		adds	r1, r2, r3	@ D.7960, D.7958, tmp450
 5532 047a 1723     		movs	r3, #23	@ tmp451,
 5533 047c 6B44     		add	r3, r3, sp	@ tmp451,
 5534 047e 1A78     		ldrb	r2, [r3]	@ D.7958, i
 5535 0480 1623     		movs	r3, #22	@ tmp452,
 5536 0482 6B44     		add	r3, r3, sp	@ tmp452,
 5537 0484 1B78     		ldrb	r3, [r3]	@ D.7958, flag
 5538 0486 D31A     		subs	r3, r2, r3	@ D.7958, D.7958, D.7958
 5539 0488 1A00     		movs	r2, r3	@ D.7961, D.7958
 5540 048a 089B     		ldr	r3, [sp, #32]	@ tmp453, pGSMReadSMStel
 5541 048c 1800     		movs	r0, r3	@, tmp453
 5542 048e FFF7FEFF 		bl	strncpy	@
 5543              	.L376:
1970:src/sim900_800.c **** 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1971:src/sim900_800.c **** 													//UARTDBGSend(pGSMReadSMStel);
1972:src/sim900_800.c **** 													//*pGSMReadSMStel  = 0;
1973:src/sim900_800.c **** 												}
1974:src/sim900_800.c **** 												i++;
 5544              		.loc 1 1974 0
 5545 0492 1723     		movs	r3, #23	@ tmp454,
 5546 0494 6B44     		add	r3, r3, sp	@ tmp454,
 5547 0496 1A78     		ldrb	r2, [r3]	@ D.7957, i
ARM GAS  /tmp/cc4fp2Bh.s 			page 136


 5548 0498 1723     		movs	r3, #23	@ tmp455,
 5549 049a 6B44     		add	r3, r3, sp	@ tmp455,
 5550 049c 0132     		adds	r2, r2, #1	@ tmp456,
 5551 049e 1A70     		strb	r2, [r3]	@ tmp457, i
 5552              	.L375:
1959:src/sim900_800.c **** 											{
 5553              		.loc 1 1959 0
 5554 04a0 1723     		movs	r3, #23	@ tmp458,
 5555 04a2 6B44     		add	r3, r3, sp	@ tmp458,
 5556 04a4 1A78     		ldrb	r2, [r3]	@ D.7962, i
 5557 04a6 584B     		ldr	r3, .L397+20	@ tmp459,
 5558 04a8 D318     		adds	r3, r2, r3	@ D.7960, D.7962, tmp459
 5559 04aa 1B78     		ldrb	r3, [r3]	@ D.7959, *_167
 5560 04ac 002B     		cmp	r3, #0	@ D.7959,
 5561 04ae ACD1     		bne	.L379	@,
1975:src/sim900_800.c **** 											}
1976:src/sim900_800.c **** 
1977:src/sim900_800.c **** 											GSMReadSMSrepIn[19] = 0;
 5562              		.loc 1 1977 0
 5563 04b0 504B     		ldr	r3, .L397	@ tmp460,
 5564 04b2 0022     		movs	r2, #0	@ tmp461,
 5565 04b4 DA74     		strb	r2, [r3, #19]	@ tmp462, GSMReadSMSrepIn
1978:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000: AR
 5566              		.loc 1 1978 0
 5567 04b6 5749     		ldr	r1, .L397+32	@ tmp463,
 5568 04b8 4E4B     		ldr	r3, .L397	@ tmp464,
 5569 04ba 0822     		movs	r2, #8	@,
 5570 04bc 1800     		movs	r0, r3	@, tmp464
 5571 04be FFF7FEFF 		bl	strncmp	@
 5572 04c2 031E     		subs	r3, r0, #0	@ D.7958,,
 5573 04c4 1FD1     		bne	.L380	@,
1979:src/sim900_800.c **** 											{
1980:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5574              		.loc 1 1980 0
 5575 04c6 029B     		ldr	r3, [sp, #8]	@ tmp465, puserCode
 5576 04c8 1800     		movs	r0, r3	@, tmp465
 5577 04ca FFF7FEFF 		bl	strlen	@
 5578 04ce 0200     		movs	r2, r0	@ D.7961,
 5579 04d0 0299     		ldr	r1, [sp, #8]	@ tmp466, puserCode
 5580 04d2 514B     		ldr	r3, .L397+36	@ tmp467,
 5581 04d4 1800     		movs	r0, r3	@, tmp467
 5582 04d6 FFF7FEFF 		bl	strncmp	@
 5583 04da 031E     		subs	r3, r0, #0	@ D.7958,,
 5584 04dc 13D1     		bne	.L380	@,
1981:src/sim900_800.c **** 												{
1982:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5585              		.loc 1 1982 0
 5586 04de 4F49     		ldr	r1, .L397+40	@ tmp468,
 5587 04e0 019B     		ldr	r3, [sp, #4]	@ tmp469, pclaveAct
 5588 04e2 0422     		movs	r2, #4	@,
 5589 04e4 1800     		movs	r0, r3	@, tmp469
 5590 04e6 FFF7FEFF 		bl	strncpy	@
1983:src/sim900_800.c **** 
1984:src/sim900_800.c **** 													*pActDact |= 0x40; //Armar
 5591              		.loc 1 1984 0
 5592 04ea 009B     		ldr	r3, [sp]	@ tmp470, pActDact
 5593 04ec 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
ARM GAS  /tmp/cc4fp2Bh.s 			page 137


 5594 04ee 4022     		movs	r2, #64	@ tmp472,
 5595 04f0 1343     		orrs	r3, r2	@ tmp471, tmp472
 5596 04f2 DAB2     		uxtb	r2, r3	@ D.7957, tmp471
 5597 04f4 009B     		ldr	r3, [sp]	@ tmp473, pActDact
 5598 04f6 1A70     		strb	r2, [r3]	@ tmp474, *pActDact_102(D)
1985:src/sim900_800.c **** 													*pActDact |= 0x02; //SendOK.
 5599              		.loc 1 1985 0
 5600 04f8 009B     		ldr	r3, [sp]	@ tmp475, pActDact
 5601 04fa 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5602 04fc 0222     		movs	r2, #2	@ tmp477,
 5603 04fe 1343     		orrs	r3, r2	@ tmp476, tmp477
 5604 0500 DAB2     		uxtb	r2, r3	@ D.7957, tmp476
 5605 0502 009B     		ldr	r3, [sp]	@ tmp478, pActDact
 5606 0504 1A70     		strb	r2, [r3]	@ tmp479, *pActDact_102(D)
 5607              	.L380:
1986:src/sim900_800.c **** 												}
1987:src/sim900_800.c **** 											}
1988:src/sim900_800.c **** 
1989:src/sim900_800.c **** 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000: DR
 5608              		.loc 1 1989 0
 5609 0506 4649     		ldr	r1, .L397+44	@ tmp480,
 5610 0508 3A4B     		ldr	r3, .L397	@ tmp481,
 5611 050a 0822     		movs	r2, #8	@,
 5612 050c 1800     		movs	r0, r3	@, tmp481
 5613 050e FFF7FEFF 		bl	strncmp	@
 5614 0512 031E     		subs	r3, r0, #0	@ D.7958,,
 5615 0514 20D1     		bne	.L374	@,
1990:src/sim900_800.c **** 											{
1991:src/sim900_800.c **** 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((const 
 5616              		.loc 1 1991 0
 5617 0516 029B     		ldr	r3, [sp, #8]	@ tmp482, puserCode
 5618 0518 1800     		movs	r0, r3	@, tmp482
 5619 051a FFF7FEFF 		bl	strlen	@
 5620 051e 0200     		movs	r2, r0	@ D.7961,
 5621 0520 0299     		ldr	r1, [sp, #8]	@ tmp483, puserCode
 5622 0522 3D4B     		ldr	r3, .L397+36	@ tmp484,
 5623 0524 1800     		movs	r0, r3	@, tmp484
 5624 0526 FFF7FEFF 		bl	strncmp	@
 5625 052a 031E     		subs	r3, r0, #0	@ D.7958,,
 5626 052c 14D1     		bne	.L374	@,
1992:src/sim900_800.c **** 												{
1993:src/sim900_800.c **** 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
 5627              		.loc 1 1993 0
 5628 052e 3B49     		ldr	r1, .L397+40	@ tmp485,
 5629 0530 019B     		ldr	r3, [sp, #4]	@ tmp486, pclaveAct
 5630 0532 0422     		movs	r2, #4	@,
 5631 0534 1800     		movs	r0, r3	@, tmp486
 5632 0536 FFF7FEFF 		bl	strncpy	@
1994:src/sim900_800.c **** 
1995:src/sim900_800.c **** 													*pActDact |= 0x80; //Desrmar
 5633              		.loc 1 1995 0
 5634 053a 009B     		ldr	r3, [sp]	@ tmp487, pActDact
 5635 053c 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5636 053e 8022     		movs	r2, #128	@ tmp543,
 5637 0540 5242     		rsbs	r2, r2, #0	@ tmp489, tmp543
 5638 0542 1343     		orrs	r3, r2	@ tmp488, tmp489
 5639 0544 DAB2     		uxtb	r2, r3	@ D.7957, tmp488
ARM GAS  /tmp/cc4fp2Bh.s 			page 138


 5640 0546 009B     		ldr	r3, [sp]	@ tmp490, pActDact
 5641 0548 1A70     		strb	r2, [r3]	@ tmp491, *pActDact_102(D)
1996:src/sim900_800.c **** 													*pActDact |= 0x02; //SendOK.
 5642              		.loc 1 1996 0
 5643 054a 009B     		ldr	r3, [sp]	@ tmp492, pActDact
 5644 054c 1B78     		ldrb	r3, [r3]	@ D.7957, *pActDact_102(D)
 5645 054e 0222     		movs	r2, #2	@ tmp494,
 5646 0550 1343     		orrs	r3, r2	@ tmp493, tmp494
 5647 0552 DAB2     		uxtb	r2, r3	@ D.7957, tmp493
 5648 0554 009B     		ldr	r3, [sp]	@ tmp495, pActDact
 5649 0556 1A70     		strb	r2, [r3]	@ tmp496, *pActDact_102(D)
 5650              	.L374:
1997:src/sim900_800.c **** 												}
1998:src/sim900_800.c **** 											}
1999:src/sim900_800.c **** 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
2000:src/sim900_800.c **** 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
2001:src/sim900_800.c **** 											//Led4Toggle();
2002:src/sim900_800.c **** 										}
2003:src/sim900_800.c **** 
2004:src/sim900_800.c **** 										GSMReadSMSState = 0;
 5651              		.loc 1 2004 0
 5652 0558 2A4B     		ldr	r3, .L397+16	@ tmp497,
 5653 055a 0022     		movs	r2, #0	@ tmp498,
 5654 055c 1A70     		strb	r2, [r3]	@ tmp499, GSMReadSMSState
2005:src/sim900_800.c **** 										GSMnumSMS++;
 5655              		.loc 1 2005 0
 5656 055e 264B     		ldr	r3, .L397+4	@ tmp500,
 5657 0560 1B78     		ldrb	r3, [r3]	@ D.7957, GSMnumSMS
 5658 0562 0133     		adds	r3, r3, #1	@ tmp501,
 5659 0564 DAB2     		uxtb	r2, r3	@ D.7957, tmp501
 5660 0566 244B     		ldr	r3, .L397+4	@ tmp502,
 5661 0568 1A70     		strb	r2, [r3]	@ tmp503, GSMnumSMS
 5662              	.L373:
2006:src/sim900_800.c **** 									}
2007:src/sim900_800.c **** 								}
2008:src/sim900_800.c **** 
2009:src/sim900_800.c **** 								if (i > 2)
 5663              		.loc 1 2009 0
 5664 056a 1723     		movs	r3, #23	@ tmp504,
 5665 056c 6B44     		add	r3, r3, sp	@ tmp504,
 5666 056e 1B78     		ldrb	r3, [r3]	@ tmp505, i
 5667 0570 022B     		cmp	r3, #2	@ tmp505,
 5668 0572 2FD9     		bls	.L393	@,
2010:src/sim900_800.c **** 								{
2011:src/sim900_800.c **** 									GSMReadSMSState = 0;
 5669              		.loc 1 2011 0
 5670 0574 234B     		ldr	r3, .L397+16	@ tmp506,
 5671 0576 0022     		movs	r2, #0	@ tmp507,
 5672 0578 1A70     		strb	r2, [r3]	@ tmp508, GSMReadSMSState
2012:src/sim900_800.c **** 									//GSMrxSMSState = 0;
2013:src/sim900_800.c **** 								}
2014:src/sim900_800.c **** 							break;
 5673              		.loc 1 2014 0
 5674 057a 2BE0     		b	.L393	@
 5675              	.L387:
2015:src/sim900_800.c **** 
2016:src/sim900_800.c **** 						default:
ARM GAS  /tmp/cc4fp2Bh.s 			page 139


2017:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5676              		.loc 1 2017 0
 5677 057c 214B     		ldr	r3, .L397+16	@ tmp509,
 5678 057e 0022     		movs	r2, #0	@ tmp510,
 5679 0580 1A70     		strb	r2, [r3]	@ tmp511, GSMReadSMSState
2018:src/sim900_800.c **** 							break;
 5680              		.loc 1 2018 0
 5681 0582 C046     		nop
 5682 0584 27E0     		b	.L382	@
 5683              	.L368:
2019:src/sim900_800.c **** 						}
2020:src/sim900_800.c **** 			}
2021:src/sim900_800.c **** 			else
2022:src/sim900_800.c **** 			{
2023:src/sim900_800.c **** 
2024:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 5684              		.loc 1 2024 0
 5685 0586 1724     		movs	r4, #23	@ tmp512,
 5686 0588 6C44     		add	r4, r4, sp	@ tmp512,
 5687 058a 1F4B     		ldr	r3, .L397+20	@ tmp513,
 5688 058c 2548     		ldr	r0, .L397+48	@ tmp514,
 5689 058e 0022     		movs	r2, #0	@,
 5690 0590 0F21     		movs	r1, #15	@,
 5691 0592 FFF7FEFF 		bl	GSMSendCommand	@
 5692 0596 0300     		movs	r3, r0	@ tmp515,
 5693 0598 2370     		strb	r3, [r4]	@ tmp517, i
2025:src/sim900_800.c **** 
2026:src/sim900_800.c **** 				if (i == 2)
 5694              		.loc 1 2026 0
 5695 059a 1723     		movs	r3, #23	@ tmp518,
 5696 059c 6B44     		add	r3, r3, sp	@ tmp518,
 5697 059e 1B78     		ldrb	r3, [r3]	@ tmp519, i
 5698 05a0 022B     		cmp	r3, #2	@ tmp519,
 5699 05a2 0BD1     		bne	.L383	@,
2027:src/sim900_800.c **** 				{
2028:src/sim900_800.c **** 					GSMnumSMS = 1;
 5700              		.loc 1 2028 0
 5701 05a4 144B     		ldr	r3, .L397+4	@ tmp520,
 5702 05a6 0122     		movs	r2, #1	@ tmp521,
 5703 05a8 1A70     		strb	r2, [r3]	@ tmp522, GSMnumSMS
2029:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5704              		.loc 1 2029 0
 5705 05aa 164B     		ldr	r3, .L397+16	@ tmp523,
 5706 05ac 0022     		movs	r2, #0	@ tmp524,
 5707 05ae 1A70     		strb	r2, [r3]	@ tmp525, GSMReadSMSState
2030:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5708              		.loc 1 2030 0
 5709 05b0 1D4B     		ldr	r3, .L397+52	@ tmp526,
 5710 05b2 0022     		movs	r2, #0	@ tmp527,
 5711 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMrxSMSState
2031:src/sim900_800.c **** 					GSMCantSMS2 = 0;
 5712              		.loc 1 2031 0
 5713 05b6 1D4B     		ldr	r3, .L397+56	@ tmp529,
 5714 05b8 0022     		movs	r2, #0	@ tmp530,
 5715 05ba 1A70     		strb	r2, [r3]	@ tmp531, GSMCantSMS2
 5716              	.L383:
2032:src/sim900_800.c **** 				}
ARM GAS  /tmp/cc4fp2Bh.s 			page 140


2033:src/sim900_800.c **** 
2034:src/sim900_800.c **** 				if (i > 2)
 5717              		.loc 1 2034 0
 5718 05bc 1723     		movs	r3, #23	@ tmp532,
 5719 05be 6B44     		add	r3, r3, sp	@ tmp532,
 5720 05c0 1B78     		ldrb	r3, [r3]	@ tmp533, i
 5721 05c2 022B     		cmp	r3, #2	@ tmp533,
 5722 05c4 12D9     		bls	.L394	@,
2035:src/sim900_800.c **** 				{
2036:src/sim900_800.c **** 					GSMrxSMSState = 0;
 5723              		.loc 1 2036 0
 5724 05c6 184B     		ldr	r3, .L397+52	@ tmp534,
 5725 05c8 0022     		movs	r2, #0	@ tmp535,
 5726 05ca 1A70     		strb	r2, [r3]	@ tmp536, GSMrxSMSState
2037:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5727              		.loc 1 2037 0
 5728 05cc 0D4B     		ldr	r3, .L397+16	@ tmp537,
 5729 05ce 0022     		movs	r2, #0	@ tmp538,
 5730 05d0 1A70     		strb	r2, [r3]	@ tmp539, GSMReadSMSState
2038:src/sim900_800.c **** 				}
2039:src/sim900_800.c **** 			}
2040:src/sim900_800.c **** 			break;
 5731              		.loc 1 2040 0
 5732 05d2 0BE0     		b	.L394	@
 5733              	.L393:
2014:src/sim900_800.c **** 
 5734              		.loc 1 2014 0
 5735 05d4 C046     		nop
 5736              	.L382:
 5737              		.loc 1 2040 0 discriminator 6
 5738 05d6 09E0     		b	.L394	@
 5739              	.L386:
2041:src/sim900_800.c **** 		default:
2042:src/sim900_800.c **** 			GSMrxSMSState = 0;
 5740              		.loc 1 2042 0
 5741 05d8 134B     		ldr	r3, .L397+52	@ tmp540,
 5742 05da 0022     		movs	r2, #0	@ tmp541,
 5743 05dc 1A70     		strb	r2, [r3]	@ tmp542, GSMrxSMSState
2043:src/sim900_800.c **** 			break;
 5744              		.loc 1 2043 0
 5745 05de 06E0     		b	.L361	@
 5746              	.L388:
1804:src/sim900_800.c **** 
 5747              		.loc 1 1804 0
 5748 05e0 C046     		nop
 5749 05e2 04E0     		b	.L391	@
 5750              	.L390:
1910:src/sim900_800.c **** 
 5751              		.loc 1 1910 0
 5752 05e4 C046     		nop
 5753 05e6 02E0     		b	.L391	@
 5754              	.L392:
1932:src/sim900_800.c **** 
 5755              		.loc 1 1932 0
 5756 05e8 C046     		nop
 5757 05ea 00E0     		b	.L391	@
 5758              	.L394:
ARM GAS  /tmp/cc4fp2Bh.s 			page 141


2040:src/sim900_800.c **** 		default:
 5759              		.loc 1 2040 0
 5760 05ec C046     		nop
 5761              	.L361:
 5762              	.L391:
2044:src/sim900_800.c **** 		}
2045:src/sim900_800.c **** 	}
2046:src/sim900_800.c **** }
 5763              		.loc 1 2046 0
 5764 05ee C046     		nop
 5765 05f0 06B0     		add	sp, sp, #24	@,,
 5766              		@ sp needed	@
 5767 05f2 10BD     		pop	{r4, pc}
 5768              	.L398:
 5769              		.align	2
 5770              	.L397:
 5771 05f4 00000000 		.word	GSMReadSMSrepIn
 5772 05f8 00000000 		.word	GSMnumSMS
 5773 05fc 20020000 		.word	.LC183
 5774 0600 00000000 		.word	GSMReadSMScommand
 5775 0604 00000000 		.word	GSMReadSMSState
 5776 0608 00000000 		.word	GSMbuffRtaCommand
 5777 060c 30020000 		.word	.LC187
 5778 0610 54000000 		.word	.LC54
 5779 0614 38020000 		.word	.LC190
 5780 0618 09000000 		.word	GSMReadSMSrepIn+9
 5781 061c 10000000 		.word	buffUARTGSMrx2+16
 5782 0620 44020000 		.word	.LC194
 5783 0624 50020000 		.word	.LC196
 5784 0628 00000000 		.word	GSMrxSMSState
 5785 062c 00000000 		.word	GSMCantSMS2
 5786              		.cfi_endproc
 5787              	.LFE35:
 5788              		.size	GSMrxSMS, .-GSMrxSMS
 5789              		.section	.text.GSMConfigPDPGPRS,"ax",%progbits
 5790              		.align	2
 5791              		.global	GSMConfigPDPGPRS
 5792              		.code	16
 5793              		.thumb_func
 5794              		.type	GSMConfigPDPGPRS, %function
 5795              	GSMConfigPDPGPRS:
 5796              	.LFB36:
2047:src/sim900_800.c **** 
2048:src/sim900_800.c **** char GSMConfigPDPGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *
2049:src/sim900_800.c **** {
 5797              		.loc 1 2049 0
 5798              		.cfi_startproc
 5799 0000 10B5     		push	{r4, lr}	@
 5800              	.LCFI22:
 5801              		.cfi_def_cfa_offset 8
 5802              		.cfi_offset 4, -8
 5803              		.cfi_offset 14, -4
 5804 0002 86B0     		sub	sp, sp, #24	@,,
 5805              	.LCFI23:
 5806              		.cfi_def_cfa_offset 32
 5807 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 5808 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
ARM GAS  /tmp/cc4fp2Bh.s 			page 142


 5809 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 5810 000a 0F23     		movs	r3, #15	@ tmp173,
 5811 000c 6B44     		add	r3, r3, sp	@ tmp173,
 5812 000e 021C     		adds	r2, r0, #0	@ tmp174, tmp172
 5813 0010 1A70     		strb	r2, [r3]	@ tmp174, sim
2050:src/sim900_800.c **** 	unsigned char i;
2051:src/sim900_800.c **** 
2052:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 5814              		.loc 1 2052 0
 5815 0012 C64B     		ldr	r3, .L475	@ tmp175,
 5816 0014 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5817 0016 102B     		cmp	r3, #16	@ D.7969,
 5818 0018 00D9     		bls	.LCB4851	@
 5819 001a 21E3     		b	.L400	@long jump	@
 5820              	.LCB4851:
 5821 001c 9A00     		lsls	r2, r3, #2	@ tmp176, D.7969,
 5822 001e C44B     		ldr	r3, .L475+4	@ tmp178,
 5823 0020 D318     		adds	r3, r2, r3	@ tmp177, tmp176, tmp178
 5824 0022 1B68     		ldr	r3, [r3]	@ tmp179,
 5825 0024 9F46     		mov	pc, r3	@ tmp179
 5826              		.section	.rodata.GSMConfigPDPGPRS,"a",%progbits
 5827              		.align	2
 5828              	.L402:
 5829 0000 26000000 		.word	.L401
 5830 0004 42000000 		.word	.L403
 5831 0008 4A000000 		.word	.L404
 5832 000c 8A000000 		.word	.L405
 5833 0010 A2010000 		.word	.L406
 5834 0014 FE010000 		.word	.L407
 5835 0018 5A020000 		.word	.L408
 5836 001c EA020000 		.word	.L409
 5837 0020 8C030000 		.word	.L410
 5838 0024 32040000 		.word	.L411
 5839 0028 00050000 		.word	.L412
 5840 002c 3A050000 		.word	.L413
 5841 0030 74050000 		.word	.L414
 5842 0034 BA050000 		.word	.L415
 5843 0038 C2050000 		.word	.L416
 5844 003c CC050000 		.word	.L417
 5845 0040 24060000 		.word	.L418
 5846              		.section	.text.GSMConfigPDPGPRS
 5847              	.L401:
2053:src/sim900_800.c **** 	{
2054:src/sim900_800.c **** 
2055:src/sim900_800.c **** 		case 0:
2056:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 5848              		.loc 1 2056 0
 5849 0026 C34B     		ldr	r3, .L475+8	@ tmp180,
 5850 0028 0BAA     		add	r2, sp, #44	@ tmp181,,
 5851 002a 1288     		ldrh	r2, [r2]	@ tmp182, timeOut
 5852 002c 1A80     		strh	r2, [r3]	@ tmp182, GSMConfigGPRSTimeOut
2057:src/sim900_800.c **** 			GSMConfigGPRSState++;
 5853              		.loc 1 2057 0
 5854 002e BF4B     		ldr	r3, .L475	@ tmp183,
 5855 0030 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5856 0032 0133     		adds	r3, r3, #1	@ tmp184,
 5857 0034 DAB2     		uxtb	r2, r3	@ D.7968, tmp184
ARM GAS  /tmp/cc4fp2Bh.s 			page 143


 5858 0036 BD4B     		ldr	r3, .L475	@ tmp185,
 5859 0038 1A70     		strb	r2, [r3]	@ tmp186, GSMConfigGPRSState
2058:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 5860              		.loc 1 2058 0
 5861 003a BF4B     		ldr	r3, .L475+12	@ tmp187,
 5862 003c 0122     		movs	r2, #1	@ tmp188,
 5863 003e 1A70     		strb	r2, [r3]	@ tmp189, GSMConfigGPRSflag
2059:src/sim900_800.c **** 			break;
 5864              		.loc 1 2059 0
 5865 0040 29E3     		b	.L419	@
 5866              	.L403:
2060:src/sim900_800.c **** 
2061:src/sim900_800.c **** 		case 1:
2062:src/sim900_800.c **** 			GSMConfigGPRSState = 15;
 5867              		.loc 1 2062 0
 5868 0042 BA4B     		ldr	r3, .L475	@ tmp190,
 5869 0044 0F22     		movs	r2, #15	@ tmp191,
 5870 0046 1A70     		strb	r2, [r3]	@ tmp192, GSMConfigGPRSState
2063:src/sim900_800.c **** /*
2064:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 50, 0, &GSMbuffRtaCommand[0]);
2065:src/sim900_800.c **** 
2066:src/sim900_800.c **** 			if (i == 2)
2067:src/sim900_800.c **** 			{
2068:src/sim900_800.c **** 				//Respondio ACK.
2069:src/sim900_800.c **** 				//Conectado.
2070:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2071:src/sim900_800.c **** 				return 2;
2072:src/sim900_800.c **** 			}
2073:src/sim900_800.c **** 
2074:src/sim900_800.c **** 			if (i > 2)
2075:src/sim900_800.c **** 			{
2076:src/sim900_800.c **** 				//No conectado.
2077:src/sim900_800.c **** 				//Seleccionar Sim.
2078:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
2079:src/sim900_800.c **** 			}
2080:src/sim900_800.c **** */
2081:src/sim900_800.c **** 			break;
 5871              		.loc 1 2081 0
 5872 0048 25E3     		b	.L419	@
 5873              	.L404:
2082:src/sim900_800.c **** 		case 2:
2083:src/sim900_800.c **** 
2084:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 5874              		.loc 1 2084 0
 5875 004a 1724     		movs	r4, #23	@ tmp193,
 5876 004c 6C44     		add	r4, r4, sp	@ tmp193,
 5877 004e BB4B     		ldr	r3, .L475+16	@ tmp194,
 5878 0050 BB48     		ldr	r0, .L475+20	@ tmp195,
 5879 0052 0022     		movs	r2, #0	@,
 5880 0054 3221     		movs	r1, #50	@,
 5881 0056 FFF7FEFF 		bl	GSMSendCommand	@
 5882 005a 0300     		movs	r3, r0	@ tmp196,
 5883 005c 2370     		strb	r3, [r4]	@ tmp198, i
2085:src/sim900_800.c **** 
2086:src/sim900_800.c **** 			if (i == 2)
 5884              		.loc 1 2086 0
 5885 005e 1723     		movs	r3, #23	@ tmp199,
ARM GAS  /tmp/cc4fp2Bh.s 			page 144


 5886 0060 6B44     		add	r3, r3, sp	@ tmp199,
 5887 0062 1B78     		ldrb	r3, [r3]	@ tmp200, i
 5888 0064 022B     		cmp	r3, #2	@ tmp200,
 5889 0066 05D1     		bne	.L420	@,
2087:src/sim900_800.c **** 			{
2088:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5890              		.loc 1 2088 0
 5891 0068 B04B     		ldr	r3, .L475	@ tmp201,
 5892 006a 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5893 006c 0133     		adds	r3, r3, #1	@ tmp202,
 5894 006e DAB2     		uxtb	r2, r3	@ D.7968, tmp202
 5895 0070 AE4B     		ldr	r3, .L475	@ tmp203,
 5896 0072 1A70     		strb	r2, [r3]	@ tmp204, GSMConfigGPRSState
 5897              	.L420:
2089:src/sim900_800.c **** 			}
2090:src/sim900_800.c **** 
2091:src/sim900_800.c **** 			if (i > 2)
 5898              		.loc 1 2091 0
 5899 0074 1723     		movs	r3, #23	@ tmp205,
 5900 0076 6B44     		add	r3, r3, sp	@ tmp205,
 5901 0078 1B78     		ldrb	r3, [r3]	@ tmp206, i
 5902 007a 022B     		cmp	r3, #2	@ tmp206,
 5903 007c 00D8     		bhi	.LCB4913	@
 5904 007e F3E2     		b	.L463	@long jump	@
 5905              	.LCB4913:
2092:src/sim900_800.c **** 			{
2093:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5906              		.loc 1 2093 0
 5907 0080 AA4B     		ldr	r3, .L475	@ tmp207,
 5908 0082 0022     		movs	r2, #0	@ tmp208,
 5909 0084 1A70     		strb	r2, [r3]	@ tmp209, GSMConfigGPRSState
2094:src/sim900_800.c **** 				return 3;
 5910              		.loc 1 2094 0
 5911 0086 0323     		movs	r3, #3	@ D.7968,
 5912 0088 0FE3     		b	.L422	@
 5913              	.L405:
2095:src/sim900_800.c **** 			}
2096:src/sim900_800.c **** 			break;
2097:src/sim900_800.c **** 		case 3:
2098:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 5914              		.loc 1 2098 0
 5915 008a AB4B     		ldr	r3, .L475+12	@ tmp210,
 5916 008c 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSflag
 5917 008e 022B     		cmp	r3, #2	@ D.7968,
 5918 0090 00D0     		beq	.LCB4925	@
 5919 0092 EBE2     		b	.L464	@long jump	@
 5920              	.LCB4925:
2099:src/sim900_800.c **** 			{
2100:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
2101:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 5921              		.loc 1 2101 0
 5922 0094 AB49     		ldr	r1, .L475+24	@ tmp211,
 5923 0096 AC4B     		ldr	r3, .L475+28	@ tmp212,
 5924 0098 0A22     		movs	r2, #10	@,
 5925 009a 1800     		movs	r0, r3	@, tmp212
 5926 009c FFF7FEFF 		bl	strncmp	@
 5927 00a0 031E     		subs	r3, r0, #0	@ D.7969,,
ARM GAS  /tmp/cc4fp2Bh.s 			page 145


 5928 00a2 08D1     		bne	.L424	@,
2102:src/sim900_800.c **** 				{
2103:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 5929              		.loc 1 2103 0
 5930 00a4 A14B     		ldr	r3, .L475	@ tmp213,
 5931 00a6 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5932 00a8 0133     		adds	r3, r3, #1	@ tmp214,
 5933 00aa DAB2     		uxtb	r2, r3	@ D.7968, tmp214
 5934 00ac 9F4B     		ldr	r3, .L475	@ tmp215,
 5935 00ae 1A70     		strb	r2, [r3]	@ tmp216, GSMConfigGPRSState
2104:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5936              		.loc 1 2104 0
 5937 00b0 A14B     		ldr	r3, .L475+12	@ tmp217,
 5938 00b2 0122     		movs	r2, #1	@ tmp218,
 5939 00b4 1A70     		strb	r2, [r3]	@ tmp219, GSMConfigGPRSflag
 5940              	.L424:
2105:src/sim900_800.c **** 				}
2106:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
2107:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 5941              		.loc 1 2107 0
 5942 00b6 A549     		ldr	r1, .L475+32	@ tmp220,
 5943 00b8 A34B     		ldr	r3, .L475+28	@ tmp221,
 5944 00ba 0822     		movs	r2, #8	@,
 5945 00bc 1800     		movs	r0, r3	@, tmp221
 5946 00be FFF7FEFF 		bl	strncmp	@
 5947 00c2 031E     		subs	r3, r0, #0	@ D.7969,,
 5948 00c4 08D1     		bne	.L425	@,
2108:src/sim900_800.c **** 				{
2109:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 5949              		.loc 1 2109 0
 5950 00c6 994B     		ldr	r3, .L475	@ tmp222,
 5951 00c8 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5952 00ca 0833     		adds	r3, r3, #8	@ tmp223,
 5953 00cc DAB2     		uxtb	r2, r3	@ D.7968, tmp223
 5954 00ce 974B     		ldr	r3, .L475	@ tmp224,
 5955 00d0 1A70     		strb	r2, [r3]	@ tmp225, GSMConfigGPRSState
2110:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5956              		.loc 1 2110 0
 5957 00d2 994B     		ldr	r3, .L475+12	@ tmp226,
 5958 00d4 0122     		movs	r2, #1	@ tmp227,
 5959 00d6 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigGPRSflag
 5960              	.L425:
2111:src/sim900_800.c **** 				}
2112:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
2113:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 5961              		.loc 1 2113 0
 5962 00d8 9D49     		ldr	r1, .L475+36	@ tmp229,
 5963 00da 9B4B     		ldr	r3, .L475+28	@ tmp230,
 5964 00dc 0A22     		movs	r2, #10	@,
 5965 00de 1800     		movs	r0, r3	@, tmp230
 5966 00e0 FFF7FEFF 		bl	strncmp	@
 5967 00e4 031E     		subs	r3, r0, #0	@ D.7969,,
 5968 00e6 08D1     		bne	.L426	@,
2114:src/sim900_800.c **** 				{
2115:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 5969              		.loc 1 2115 0
 5970 00e8 904B     		ldr	r3, .L475	@ tmp231,
ARM GAS  /tmp/cc4fp2Bh.s 			page 146


 5971 00ea 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 5972 00ec 0933     		adds	r3, r3, #9	@ tmp232,
 5973 00ee DAB2     		uxtb	r2, r3	@ D.7968, tmp232
 5974 00f0 8E4B     		ldr	r3, .L475	@ tmp233,
 5975 00f2 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
2116:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5976              		.loc 1 2116 0
 5977 00f4 904B     		ldr	r3, .L475+12	@ tmp235,
 5978 00f6 0122     		movs	r2, #1	@ tmp236,
 5979 00f8 1A70     		strb	r2, [r3]	@ tmp237, GSMConfigGPRSflag
 5980              	.L426:
2117:src/sim900_800.c **** 				}
2118:src/sim900_800.c **** 
2119:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
2120:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 5981              		.loc 1 2120 0
 5982 00fa 9649     		ldr	r1, .L475+40	@ tmp238,
 5983 00fc 924B     		ldr	r3, .L475+28	@ tmp239,
 5984 00fe 0922     		movs	r2, #9	@,
 5985 0100 1800     		movs	r0, r3	@, tmp239
 5986 0102 FFF7FEFF 		bl	strncmp	@
 5987 0106 031E     		subs	r3, r0, #0	@ D.7969,,
 5988 0108 04D1     		bne	.L427	@,
2121:src/sim900_800.c **** 				{
2122:src/sim900_800.c **** /*					GSMConfigGPRSState += 10;
2123:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2124:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2125:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2126:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2127:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2128:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2129:src/sim900_800.c **** */
2130:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5989              		.loc 1 2130 0
 5990 010a 884B     		ldr	r3, .L475	@ tmp240,
 5991 010c 0022     		movs	r2, #0	@ tmp241,
 5992 010e 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigGPRSState
2131:src/sim900_800.c **** 					return 2;
 5993              		.loc 1 2131 0
 5994 0110 0223     		movs	r3, #2	@ D.7968,
 5995 0112 CAE2     		b	.L422	@
 5996              	.L427:
2132:src/sim900_800.c **** 				}
2133:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
2134:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 5997              		.loc 1 2134 0
 5998 0114 9049     		ldr	r1, .L475+44	@ tmp243,
 5999 0116 8C4B     		ldr	r3, .L475+28	@ tmp244,
 6000 0118 0E22     		movs	r2, #14	@,
 6001 011a 1800     		movs	r0, r3	@, tmp244
 6002 011c FFF7FEFF 		bl	strncmp	@
 6003 0120 031E     		subs	r3, r0, #0	@ D.7969,,
 6004 0122 04D1     		bne	.L428	@,
2135:src/sim900_800.c **** 				{
2136:src/sim900_800.c **** 					//GSMConfigGPRSState -= 1;
2137:src/sim900_800.c **** 					//GSMConfigGPRSflag = 1;
2138:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
ARM GAS  /tmp/cc4fp2Bh.s 			page 147


 6005              		.loc 1 2138 0
 6006 0124 814B     		ldr	r3, .L475	@ tmp245,
 6007 0126 0022     		movs	r2, #0	@ tmp246,
 6008 0128 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigGPRSState
2139:src/sim900_800.c **** 					return 2;
 6009              		.loc 1 2139 0
 6010 012a 0223     		movs	r3, #2	@ D.7968,
 6011 012c BDE2     		b	.L422	@
 6012              	.L428:
2140:src/sim900_800.c **** 				}
2141:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
2142:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 6013              		.loc 1 2142 0
 6014 012e 8B49     		ldr	r1, .L475+48	@ tmp248,
 6015 0130 854B     		ldr	r3, .L475+28	@ tmp249,
 6016 0132 0A22     		movs	r2, #10	@,
 6017 0134 1800     		movs	r0, r3	@, tmp249
 6018 0136 FFF7FEFF 		bl	strncmp	@
 6019 013a 031E     		subs	r3, r0, #0	@ D.7969,,
 6020 013c 04D1     		bne	.L429	@,
2143:src/sim900_800.c **** 				{
2144:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6021              		.loc 1 2144 0
 6022 013e 7B4B     		ldr	r3, .L475	@ tmp250,
 6023 0140 0022     		movs	r2, #0	@ tmp251,
 6024 0142 1A70     		strb	r2, [r3]	@ tmp252, GSMConfigGPRSState
2145:src/sim900_800.c **** 					return 2;
 6025              		.loc 1 2145 0
 6026 0144 0223     		movs	r3, #2	@ D.7968,
 6027 0146 B0E2     		b	.L422	@
 6028              	.L429:
2146:src/sim900_800.c **** 				}
2147:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
2148:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
2149:src/sim900_800.c **** 				{
2150:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
2151:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2152:src/sim900_800.c **** 				}
2153:src/sim900_800.c **** */
2154:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
2155:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 6029              		.loc 1 2155 0
 6030 0148 8549     		ldr	r1, .L475+52	@ tmp253,
 6031 014a 7F4B     		ldr	r3, .L475+28	@ tmp254,
 6032 014c 0A22     		movs	r2, #10	@,
 6033 014e 1800     		movs	r0, r3	@, tmp254
 6034 0150 FFF7FEFF 		bl	strncmp	@
 6035 0154 031E     		subs	r3, r0, #0	@ D.7969,,
 6036 0156 04D1     		bne	.L430	@,
2156:src/sim900_800.c **** 				{
2157:src/sim900_800.c **** 					/*	GSMConfigGPRSState += 10;
2158:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2159:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2160:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2161:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2162:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2163:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
ARM GAS  /tmp/cc4fp2Bh.s 			page 148


2164:src/sim900_800.c **** 					*/
2165:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6037              		.loc 1 2165 0
 6038 0158 744B     		ldr	r3, .L475	@ tmp255,
 6039 015a 0022     		movs	r2, #0	@ tmp256,
 6040 015c 1A70     		strb	r2, [r3]	@ tmp257, GSMConfigGPRSState
2166:src/sim900_800.c **** 					return 2;
 6041              		.loc 1 2166 0
 6042 015e 0223     		movs	r3, #2	@ D.7968,
 6043 0160 A3E2     		b	.L422	@
 6044              	.L430:
2167:src/sim900_800.c **** 				}
2168:src/sim900_800.c **** 
2169:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 6045              		.loc 1 2169 0
 6046 0162 8049     		ldr	r1, .L475+56	@ tmp258,
 6047 0164 784B     		ldr	r3, .L475+28	@ tmp259,
 6048 0166 0922     		movs	r2, #9	@,
 6049 0168 1800     		movs	r0, r3	@, tmp259
 6050 016a FFF7FEFF 		bl	strncmp	@
 6051 016e 031E     		subs	r3, r0, #0	@ D.7969,,
 6052 0170 04D1     		bne	.L431	@,
2170:src/sim900_800.c **** 				{
2171:src/sim900_800.c **** 					/*GSMConfigGPRSState += 11;
2172:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2173:src/sim900_800.c **** 					*/
2174:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6053              		.loc 1 2174 0
 6054 0172 6E4B     		ldr	r3, .L475	@ tmp260,
 6055 0174 0022     		movs	r2, #0	@ tmp261,
 6056 0176 1A70     		strb	r2, [r3]	@ tmp262, GSMConfigGPRSState
2175:src/sim900_800.c **** 					return 2;
 6057              		.loc 1 2175 0
 6058 0178 0223     		movs	r3, #2	@ D.7968,
 6059 017a 96E2     		b	.L422	@
 6060              	.L431:
2176:src/sim900_800.c **** 				}
2177:src/sim900_800.c **** 
2178:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 6061              		.loc 1 2178 0
 6062 017c 7A49     		ldr	r1, .L475+60	@ tmp263,
 6063 017e 724B     		ldr	r3, .L475+28	@ tmp264,
 6064 0180 0922     		movs	r2, #9	@,
 6065 0182 1800     		movs	r0, r3	@, tmp264
 6066 0184 FFF7FEFF 		bl	strncmp	@
 6067 0188 031E     		subs	r3, r0, #0	@ D.7969,,
 6068 018a 00D0     		beq	.LCB5070	@
 6069 018c 6EE2     		b	.L464	@long jump	@
 6070              	.LCB5070:
2179:src/sim900_800.c **** 				{
2180:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 6071              		.loc 1 2180 0
 6072 018e 674B     		ldr	r3, .L475	@ tmp265,
 6073 0190 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6074 0192 0D33     		adds	r3, r3, #13	@ tmp266,
 6075 0194 DAB2     		uxtb	r2, r3	@ D.7968, tmp266
 6076 0196 654B     		ldr	r3, .L475	@ tmp267,
ARM GAS  /tmp/cc4fp2Bh.s 			page 149


 6077 0198 1A70     		strb	r2, [r3]	@ tmp268, GSMConfigGPRSState
2181:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 6078              		.loc 1 2181 0
 6079 019a 674B     		ldr	r3, .L475+12	@ tmp269,
 6080 019c 0122     		movs	r2, #1	@ tmp270,
 6081 019e 1A70     		strb	r2, [r3]	@ tmp271, GSMConfigGPRSflag
2182:src/sim900_800.c **** 				}
2183:src/sim900_800.c **** 			}
2184:src/sim900_800.c **** 			break;
 6082              		.loc 1 2184 0
 6083 01a0 64E2     		b	.L464	@
 6084              	.L406:
2185:src/sim900_800.c **** 
2186:src/sim900_800.c **** 		case 4:
2187:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6085              		.loc 1 2187 0
 6086 01a2 1724     		movs	r4, #23	@ tmp272,
 6087 01a4 6C44     		add	r4, r4, sp	@ tmp272,
 6088 01a6 654B     		ldr	r3, .L475+16	@ tmp273,
 6089 01a8 7048     		ldr	r0, .L475+64	@ tmp274,
 6090 01aa 0122     		movs	r2, #1	@,
 6091 01ac 3221     		movs	r1, #50	@,
 6092 01ae FFF7FEFF 		bl	GSMSendCommand	@
 6093 01b2 0300     		movs	r3, r0	@ tmp275,
 6094 01b4 2370     		strb	r3, [r4]	@ tmp277, i
2188:src/sim900_800.c **** 
2189:src/sim900_800.c **** 			if (i == 2)
 6095              		.loc 1 2189 0
 6096 01b6 1723     		movs	r3, #23	@ tmp278,
 6097 01b8 6B44     		add	r3, r3, sp	@ tmp278,
 6098 01ba 1B78     		ldrb	r3, [r3]	@ tmp279, i
 6099 01bc 022B     		cmp	r3, #2	@ tmp279,
 6100 01be 13D1     		bne	.L432	@,
2190:src/sim900_800.c **** 			{
2191:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN: 
 6101              		.loc 1 2191 0
 6102 01c0 6B49     		ldr	r1, .L475+68	@ tmp280,
 6103 01c2 5E4B     		ldr	r3, .L475+16	@ tmp281,
 6104 01c4 0C22     		movs	r2, #12	@,
 6105 01c6 1800     		movs	r0, r3	@, tmp281
 6106 01c8 FFF7FEFF 		bl	strncmp	@
 6107 01cc 031E     		subs	r3, r0, #0	@ D.7969,,
 6108 01ce 06D1     		bne	.L433	@,
2192:src/sim900_800.c **** 				{
2193:src/sim900_800.c **** 					GSMConfigGPRSState++;
 6109              		.loc 1 2193 0
 6110 01d0 564B     		ldr	r3, .L475	@ tmp282,
 6111 01d2 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6112 01d4 0133     		adds	r3, r3, #1	@ tmp283,
 6113 01d6 DAB2     		uxtb	r2, r3	@ D.7968, tmp283
 6114 01d8 544B     		ldr	r3, .L475	@ tmp284,
 6115 01da 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigGPRSState
 6116 01dc 04E0     		b	.L432	@
 6117              	.L433:
2194:src/sim900_800.c **** 				}
2195:src/sim900_800.c **** 				else
2196:src/sim900_800.c **** 				{
ARM GAS  /tmp/cc4fp2Bh.s 			page 150


2197:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6118              		.loc 1 2197 0
 6119 01de 534B     		ldr	r3, .L475	@ tmp286,
 6120 01e0 0022     		movs	r2, #0	@ tmp287,
 6121 01e2 1A70     		strb	r2, [r3]	@ tmp288, GSMConfigGPRSState
2198:src/sim900_800.c **** 					return 3;
 6122              		.loc 1 2198 0
 6123 01e4 0323     		movs	r3, #3	@ D.7968,
 6124 01e6 60E2     		b	.L422	@
 6125              	.L432:
2199:src/sim900_800.c **** 				}
2200:src/sim900_800.c **** 			}
2201:src/sim900_800.c **** 
2202:src/sim900_800.c **** 			if (i > 2)
 6126              		.loc 1 2202 0
 6127 01e8 1723     		movs	r3, #23	@ tmp289,
 6128 01ea 6B44     		add	r3, r3, sp	@ tmp289,
 6129 01ec 1B78     		ldrb	r3, [r3]	@ tmp290, i
 6130 01ee 022B     		cmp	r3, #2	@ tmp290,
 6131 01f0 00D8     		bhi	.LCB5128	@
 6132 01f2 3DE2     		b	.L465	@long jump	@
 6133              	.LCB5128:
2203:src/sim900_800.c **** 			{
2204:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6134              		.loc 1 2204 0
 6135 01f4 4D4B     		ldr	r3, .L475	@ tmp291,
 6136 01f6 0022     		movs	r2, #0	@ tmp292,
 6137 01f8 1A70     		strb	r2, [r3]	@ tmp293, GSMConfigGPRSState
2205:src/sim900_800.c **** 				return 3;
 6138              		.loc 1 2205 0
 6139 01fa 0323     		movs	r3, #3	@ D.7968,
 6140 01fc 55E2     		b	.L422	@
 6141              	.L407:
2206:src/sim900_800.c **** 			}
2207:src/sim900_800.c **** 			break;
2208:src/sim900_800.c **** 
2209:src/sim900_800.c **** 		case 5:
2210:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6142              		.loc 1 2210 0
 6143 01fe 1724     		movs	r4, #23	@ tmp294,
 6144 0200 6C44     		add	r4, r4, sp	@ tmp294,
 6145 0202 4E4B     		ldr	r3, .L475+16	@ tmp295,
 6146 0204 5B48     		ldr	r0, .L475+72	@ tmp296,
 6147 0206 0122     		movs	r2, #1	@,
 6148 0208 3221     		movs	r1, #50	@,
 6149 020a FFF7FEFF 		bl	GSMSendCommand	@
 6150 020e 0300     		movs	r3, r0	@ tmp297,
 6151 0210 2370     		strb	r3, [r4]	@ tmp299, i
2211:src/sim900_800.c **** 
2212:src/sim900_800.c **** 			if (i == 2)
 6152              		.loc 1 2212 0
 6153 0212 1723     		movs	r3, #23	@ tmp300,
 6154 0214 6B44     		add	r3, r3, sp	@ tmp300,
 6155 0216 1B78     		ldrb	r3, [r3]	@ tmp301, i
 6156 0218 022B     		cmp	r3, #2	@ tmp301,
 6157 021a 13D1     		bne	.L435	@,
2213:src/sim900_800.c **** 			{
ARM GAS  /tmp/cc4fp2Bh.s 			page 151


2214:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 6158              		.loc 1 2214 0
 6159 021c 5649     		ldr	r1, .L475+76	@ tmp302,
 6160 021e 474B     		ldr	r3, .L475+16	@ tmp303,
 6161 0220 0A22     		movs	r2, #10	@,
 6162 0222 1800     		movs	r0, r3	@, tmp303
 6163 0224 FFF7FEFF 		bl	strncmp	@
 6164 0228 031E     		subs	r3, r0, #0	@ D.7969,,
 6165 022a 06D1     		bne	.L436	@,
2215:src/sim900_800.c **** 				{
2216:src/sim900_800.c **** 					GSMConfigGPRSState++;
 6166              		.loc 1 2216 0
 6167 022c 3F4B     		ldr	r3, .L475	@ tmp304,
 6168 022e 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6169 0230 0133     		adds	r3, r3, #1	@ tmp305,
 6170 0232 DAB2     		uxtb	r2, r3	@ D.7968, tmp305
 6171 0234 3D4B     		ldr	r3, .L475	@ tmp306,
 6172 0236 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSState
 6173 0238 04E0     		b	.L435	@
 6174              	.L436:
2217:src/sim900_800.c **** 				}
2218:src/sim900_800.c **** 				else
2219:src/sim900_800.c **** 				{
2220:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6175              		.loc 1 2220 0
 6176 023a 3C4B     		ldr	r3, .L475	@ tmp308,
 6177 023c 0022     		movs	r2, #0	@ tmp309,
 6178 023e 1A70     		strb	r2, [r3]	@ tmp310, GSMConfigGPRSState
2221:src/sim900_800.c **** 					return 3;
 6179              		.loc 1 2221 0
 6180 0240 0323     		movs	r3, #3	@ D.7968,
 6181 0242 32E2     		b	.L422	@
 6182              	.L435:
2222:src/sim900_800.c **** 				}
2223:src/sim900_800.c **** 			}
2224:src/sim900_800.c **** 
2225:src/sim900_800.c **** 			if (i > 2)
 6183              		.loc 1 2225 0
 6184 0244 1723     		movs	r3, #23	@ tmp311,
 6185 0246 6B44     		add	r3, r3, sp	@ tmp311,
 6186 0248 1B78     		ldrb	r3, [r3]	@ tmp312, i
 6187 024a 022B     		cmp	r3, #2	@ tmp312,
 6188 024c 00D8     		bhi	.LCB5181	@
 6189 024e 11E2     		b	.L466	@long jump	@
 6190              	.LCB5181:
2226:src/sim900_800.c **** 			{
2227:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6191              		.loc 1 2227 0
 6192 0250 364B     		ldr	r3, .L475	@ tmp313,
 6193 0252 0022     		movs	r2, #0	@ tmp314,
 6194 0254 1A70     		strb	r2, [r3]	@ tmp315, GSMConfigGPRSState
2228:src/sim900_800.c **** 				return 3;
 6195              		.loc 1 2228 0
 6196 0256 0323     		movs	r3, #3	@ D.7968,
 6197 0258 27E2     		b	.L422	@
 6198              	.L408:
2229:src/sim900_800.c **** 			}
ARM GAS  /tmp/cc4fp2Bh.s 			page 152


2230:src/sim900_800.c **** 			break;
2231:src/sim900_800.c **** 		case 6:
2232:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6199              		.loc 1 2232 0
 6200 025a 1724     		movs	r4, #23	@ tmp316,
 6201 025c 6C44     		add	r4, r4, sp	@ tmp316,
 6202 025e 374B     		ldr	r3, .L475+16	@ tmp317,
 6203 0260 4648     		ldr	r0, .L475+80	@ tmp318,
 6204 0262 0122     		movs	r2, #1	@,
 6205 0264 3221     		movs	r1, #50	@,
 6206 0266 FFF7FEFF 		bl	GSMSendCommand	@
 6207 026a 0300     		movs	r3, r0	@ tmp319,
 6208 026c 2370     		strb	r3, [r4]	@ tmp321, i
2233:src/sim900_800.c **** 
2234:src/sim900_800.c **** 			if (i == 2)
 6209              		.loc 1 2234 0
 6210 026e 1723     		movs	r3, #23	@ tmp322,
 6211 0270 6B44     		add	r3, r3, sp	@ tmp322,
 6212 0272 1B78     		ldrb	r3, [r3]	@ tmp323, i
 6213 0274 022B     		cmp	r3, #2	@ tmp323,
 6214 0276 2DD1     		bne	.L438	@,
2235:src/sim900_800.c **** 			{
2236:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 6215              		.loc 1 2236 0
 6216 0278 4149     		ldr	r1, .L475+84	@ tmp324,
 6217 027a 304B     		ldr	r3, .L475+16	@ tmp325,
 6218 027c 0522     		movs	r2, #5	@,
 6219 027e 1800     		movs	r0, r3	@, tmp325
 6220 0280 FFF7FEFF 		bl	strncmp	@
 6221 0284 031E     		subs	r3, r0, #0	@ D.7969,,
 6222 0286 20D1     		bne	.L439	@,
2237:src/sim900_800.c **** 				{
2238:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 6223              		.loc 1 2238 0
 6224 0288 2C4B     		ldr	r3, .L475+16	@ tmp326,
 6225 028a 9B79     		ldrb	r3, [r3, #6]	@ D.7968,
 6226 028c 303B     		subs	r3, r3, #48	@ D.7969,
 6227 028e DBB2     		uxtb	r3, r3	@ D.7970, D.7969
 6228 0290 1A1C     		adds	r2, r3, #0	@ tmp328, tmp327
 6229 0292 9200     		lsls	r2, r2, #2	@ tmp329, tmp328,
 6230 0294 D318     		adds	r3, r2, r3	@ tmp331, tmp330, tmp327
 6231 0296 DB18     		adds	r3, r3, r3	@ tmp333, tmp332, tmp332
 6232 0298 DAB2     		uxtb	r2, r3	@ D.7970, tmp331
 6233 029a 284B     		ldr	r3, .L475+16	@ tmp334,
 6234 029c DB79     		ldrb	r3, [r3, #7]	@ D.7968,
 6235 029e D318     		adds	r3, r2, r3	@ tmp335, D.7970, D.7968
 6236 02a0 DBB2     		uxtb	r3, r3	@ D.7970, tmp335
 6237 02a2 303B     		subs	r3, r3, #48	@ tmp336,
 6238 02a4 DAB2     		uxtb	r2, r3	@ D.7970, tmp336
 6239 02a6 374B     		ldr	r3, .L475+88	@ tmp337,
 6240 02a8 1A70     		strb	r2, [r3]	@ tmp338, GPRSrssi
2239:src/sim900_800.c **** 
2240:src/sim900_800.c **** 						if (GPRSrssi != 99)
 6241              		.loc 1 2240 0
 6242 02aa 364B     		ldr	r3, .L475+88	@ tmp339,
 6243 02ac 1B78     		ldrb	r3, [r3]	@ D.7970, GPRSrssi
 6244 02ae 632B     		cmp	r3, #99	@ D.7970,
ARM GAS  /tmp/cc4fp2Bh.s 			page 153


 6245 02b0 06D0     		beq	.L440	@,
2241:src/sim900_800.c **** 							GSMConfigGPRSState++;
 6246              		.loc 1 2241 0
 6247 02b2 1E4B     		ldr	r3, .L475	@ tmp340,
 6248 02b4 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6249 02b6 0133     		adds	r3, r3, #1	@ tmp341,
 6250 02b8 DAB2     		uxtb	r2, r3	@ D.7968, tmp341
 6251 02ba 1C4B     		ldr	r3, .L475	@ tmp342,
 6252 02bc 1A70     		strb	r2, [r3]	@ tmp343, GSMConfigGPRSState
 6253 02be 09E0     		b	.L438	@
 6254              	.L440:
2242:src/sim900_800.c **** 						else
2243:src/sim900_800.c **** 						{
2244:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 6255              		.loc 1 2244 0
 6256 02c0 1A4B     		ldr	r3, .L475	@ tmp344,
 6257 02c2 0022     		movs	r2, #0	@ tmp345,
 6258 02c4 1A70     		strb	r2, [r3]	@ tmp346, GSMConfigGPRSState
2245:src/sim900_800.c **** 							return 20;
 6259              		.loc 1 2245 0
 6260 02c6 1423     		movs	r3, #20	@ D.7968,
 6261 02c8 EFE1     		b	.L422	@
 6262              	.L439:
2246:src/sim900_800.c **** 						}
2247:src/sim900_800.c **** 				}
2248:src/sim900_800.c **** 				else
2249:src/sim900_800.c **** 				{
2250:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6263              		.loc 1 2250 0
 6264 02ca 184B     		ldr	r3, .L475	@ tmp347,
 6265 02cc 0022     		movs	r2, #0	@ tmp348,
 6266 02ce 1A70     		strb	r2, [r3]	@ tmp349, GSMConfigGPRSState
2251:src/sim900_800.c **** 					return 3;
 6267              		.loc 1 2251 0
 6268 02d0 0323     		movs	r3, #3	@ D.7968,
 6269 02d2 EAE1     		b	.L422	@
 6270              	.L438:
2252:src/sim900_800.c **** 				}
2253:src/sim900_800.c **** 			}
2254:src/sim900_800.c **** 
2255:src/sim900_800.c **** 			if (i > 2)
 6271              		.loc 1 2255 0
 6272 02d4 1723     		movs	r3, #23	@ tmp350,
 6273 02d6 6B44     		add	r3, r3, sp	@ tmp350,
 6274 02d8 1B78     		ldrb	r3, [r3]	@ tmp351, i
 6275 02da 022B     		cmp	r3, #2	@ tmp351,
 6276 02dc 00D8     		bhi	.LCB5263	@
 6277 02de CBE1     		b	.L467	@long jump	@
 6278              	.LCB5263:
2256:src/sim900_800.c **** 			{
2257:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6279              		.loc 1 2257 0
 6280 02e0 124B     		ldr	r3, .L475	@ tmp352,
 6281 02e2 0022     		movs	r2, #0	@ tmp353,
 6282 02e4 1A70     		strb	r2, [r3]	@ tmp354, GSMConfigGPRSState
2258:src/sim900_800.c **** 				return 3;
 6283              		.loc 1 2258 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 154


 6284 02e6 0323     		movs	r3, #3	@ D.7968,
 6285 02e8 DFE1     		b	.L422	@
 6286              	.L409:
2259:src/sim900_800.c **** 			}
2260:src/sim900_800.c **** 			break;
2261:src/sim900_800.c **** 		case 7:
2262:src/sim900_800.c **** 
2263:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6287              		.loc 1 2263 0
 6288 02ea 1724     		movs	r4, #23	@ tmp355,
 6289 02ec 6C44     		add	r4, r4, sp	@ tmp355,
 6290 02ee 134B     		ldr	r3, .L475+16	@ tmp356,
 6291 02f0 2548     		ldr	r0, .L475+92	@ tmp357,
 6292 02f2 0022     		movs	r2, #0	@,
 6293 02f4 3221     		movs	r1, #50	@,
 6294 02f6 FFF7FEFF 		bl	GSMSendCommand	@
 6295 02fa 0300     		movs	r3, r0	@ tmp358,
 6296 02fc 2370     		strb	r3, [r4]	@ tmp360, i
2264:src/sim900_800.c **** 
2265:src/sim900_800.c **** 			if (i == 2)
 6297              		.loc 1 2265 0
 6298 02fe 1723     		movs	r3, #23	@ tmp361,
 6299 0300 6B44     		add	r3, r3, sp	@ tmp361,
 6300 0302 1B78     		ldrb	r3, [r3]	@ tmp362, i
 6301 0304 022B     		cmp	r3, #2	@ tmp362,
 6302 0306 05D1     		bne	.L442	@,
2266:src/sim900_800.c **** 			{
2267:src/sim900_800.c **** 				GSMConfigGPRSState++;
 6303              		.loc 1 2267 0
 6304 0308 084B     		ldr	r3, .L475	@ tmp363,
 6305 030a 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6306 030c 0133     		adds	r3, r3, #1	@ tmp364,
 6307 030e DAB2     		uxtb	r2, r3	@ D.7968, tmp364
 6308 0310 064B     		ldr	r3, .L475	@ tmp365,
 6309 0312 1A70     		strb	r2, [r3]	@ tmp366, GSMConfigGPRSState
 6310              	.L442:
2268:src/sim900_800.c **** 			}
2269:src/sim900_800.c **** 
2270:src/sim900_800.c **** 			if (i > 2)
 6311              		.loc 1 2270 0
 6312 0314 1723     		movs	r3, #23	@ tmp367,
 6313 0316 6B44     		add	r3, r3, sp	@ tmp367,
 6314 0318 1B78     		ldrb	r3, [r3]	@ tmp368, i
 6315 031a 022B     		cmp	r3, #2	@ tmp368,
 6316 031c 00D8     		bhi	.LCB5298	@
 6317 031e ADE1     		b	.L468	@long jump	@
 6318              	.LCB5298:
2271:src/sim900_800.c **** 			{
2272:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6319              		.loc 1 2272 0
 6320 0320 024B     		ldr	r3, .L475	@ tmp369,
 6321 0322 0022     		movs	r2, #0	@ tmp370,
 6322 0324 1A70     		strb	r2, [r3]	@ tmp371, GSMConfigGPRSState
2273:src/sim900_800.c **** 				return 3;
 6323              		.loc 1 2273 0
 6324 0326 0323     		movs	r3, #3	@ D.7968,
 6325 0328 BFE1     		b	.L422	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 155


 6326              	.L476:
 6327 032a C046     		.align	2
 6328              	.L475:
 6329 032c 00000000 		.word	GSMConfigGPRSState
 6330 0330 00000000 		.word	.L402
 6331 0334 00000000 		.word	GSMConfigGPRSTimeOut
 6332 0338 00000000 		.word	GSMConfigGPRSflag
 6333 033c 00000000 		.word	GSMbuffRtaCommand
 6334 0340 FC000000 		.word	.LC106
 6335 0344 00000000 		.word	GSM_IPINITIAL
 6336 0348 00000000 		.word	GSMbuffStatus
 6337 034c 00000000 		.word	GSM_IPSTART
 6338 0350 00000000 		.word	GSM_IPGPRSACT
 6339 0354 00000000 		.word	GSM_IPSTATUS
 6340 0358 00000000 		.word	GSM_IPCONNECTING
 6341 035c 00000000 		.word	GSM_IPCONNOK
 6342 0360 00000000 		.word	GSM_IPCONNCLOSE
 6343 0364 24010000 		.word	.LC122
 6344 0368 30010000 		.word	.LC124
 6345 036c 3C010000 		.word	.LC126
 6346 0370 48010000 		.word	.LC128
 6347 0374 68010000 		.word	.LC132
 6348 0378 74010000 		.word	.LC134
 6349 037c 80010000 		.word	.LC136
 6350 0380 8C010000 		.word	.LC138
 6351 0384 00000000 		.word	GPRSrssi
 6352 0388 94010000 		.word	.LC141
 6353              	.L410:
2274:src/sim900_800.c **** 			}
2275:src/sim900_800.c **** 			break;
2276:src/sim900_800.c **** 
2277:src/sim900_800.c **** 		case 8:
2278:src/sim900_800.c **** 
2279:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 6354              		.loc 1 2279 0
 6355 038c 1724     		movs	r4, #23	@ tmp372,
 6356 038e 6C44     		add	r4, r4, sp	@ tmp372,
 6357 0390 C74B     		ldr	r3, .L477	@ tmp373,
 6358 0392 C848     		ldr	r0, .L477+4	@ tmp374,
 6359 0394 0122     		movs	r2, #1	@,
 6360 0396 3221     		movs	r1, #50	@,
 6361 0398 FFF7FEFF 		bl	GSMSendCommand	@
 6362 039c 0300     		movs	r3, r0	@ tmp375,
 6363 039e 2370     		strb	r3, [r4]	@ tmp377, i
2280:src/sim900_800.c **** 
2281:src/sim900_800.c **** 			if (i == 2)
 6364              		.loc 1 2281 0
 6365 03a0 1723     		movs	r3, #23	@ tmp378,
 6366 03a2 6B44     		add	r3, r3, sp	@ tmp378,
 6367 03a4 1B78     		ldrb	r3, [r3]	@ tmp379, i
 6368 03a6 022B     		cmp	r3, #2	@ tmp379,
 6369 03a8 38D1     		bne	.L444	@,
2282:src/sim900_800.c **** 			{
2283:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 6370              		.loc 1 2283 0
 6371 03aa C349     		ldr	r1, .L477+8	@ tmp380,
 6372 03ac C04B     		ldr	r3, .L477	@ tmp381,
ARM GAS  /tmp/cc4fp2Bh.s 			page 156


 6373 03ae 0722     		movs	r2, #7	@,
 6374 03b0 1800     		movs	r0, r3	@, tmp381
 6375 03b2 FFF7FEFF 		bl	strncmp	@
 6376 03b6 031E     		subs	r3, r0, #0	@ D.7969,,
 6377 03b8 30D1     		bne	.L444	@,
2284:src/sim900_800.c **** 				{
2285:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 6378              		.loc 1 2285 0
 6379 03ba BD4B     		ldr	r3, .L477	@ tmp382,
 6380 03bc 1B7A     		ldrb	r3, [r3, #8]	@ D.7968,
 6381 03be 312B     		cmp	r3, #49	@ D.7968,
 6382 03c0 23D1     		bne	.L445	@,
2286:src/sim900_800.c **** 					{
2287:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 6383              		.loc 1 2287 0
 6384 03c2 BE4B     		ldr	r3, .L477+12	@ tmp383,
 6385 03c4 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6386 03c6 0133     		adds	r3, r3, #1	@ tmp384,
 6387 03c8 DAB2     		uxtb	r2, r3	@ D.7968, tmp384
 6388 03ca BC4B     		ldr	r3, .L477+12	@ tmp385,
 6389 03cc 1A70     		strb	r2, [r3]	@ tmp386, GSMConfigGPRSState
2288:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 6390              		.loc 1 2288 0
 6391 03ce BC4A     		ldr	r2, .L477+16	@ tmp387,
 6392 03d0 BC4B     		ldr	r3, .L477+20	@ tmp388,
 6393 03d2 1000     		movs	r0, r2	@ tmp389, tmp387
 6394 03d4 1900     		movs	r1, r3	@ tmp390, tmp388
 6395 03d6 1423     		movs	r3, #20	@ tmp391,
 6396 03d8 1A00     		movs	r2, r3	@, tmp391
 6397 03da FFF7FEFF 		bl	memcpy	@
2289:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 6398              		.loc 1 2289 0
 6399 03de 029A     		ldr	r2, [sp, #8]	@ tmp394, ptrAPN
 6400 03e0 B74B     		ldr	r3, .L477+16	@ tmp395,
 6401 03e2 1100     		movs	r1, r2	@, tmp394
 6402 03e4 1800     		movs	r0, r3	@, tmp395
 6403 03e6 FFF7FEFF 		bl	strcat	@
2290:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 6404              		.loc 1 2290 0
 6405 03ea B54B     		ldr	r3, .L477+16	@ tmp396,
 6406 03ec 1800     		movs	r0, r3	@, tmp396
 6407 03ee FFF7FEFF 		bl	strlen	@
 6408 03f2 0300     		movs	r3, r0	@ tmp397,
 6409 03f4 1A00     		movs	r2, r3	@ D.7971, tmp398
 6410 03f6 B24B     		ldr	r3, .L477+16	@ tmp399,
 6411 03f8 D218     		adds	r2, r2, r3	@ D.7972, D.7971, tmp399
 6412 03fa B34B     		ldr	r3, .L477+24	@ tmp400,
 6413 03fc 1000     		movs	r0, r2	@ tmp401, D.7972
 6414 03fe 1900     		movs	r1, r3	@ tmp402, tmp400
 6415 0400 0423     		movs	r3, #4	@ tmp403,
 6416 0402 1A00     		movs	r2, r3	@, tmp403
 6417 0404 FFF7FEFF 		bl	memcpy	@
 6418 0408 08E0     		b	.L444	@
 6419              	.L445:
2291:src/sim900_800.c **** 					}
2292:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 6420              		.loc 1 2292 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 157


 6421 040a A94B     		ldr	r3, .L477	@ tmp406,
 6422 040c 1B7A     		ldrb	r3, [r3, #8]	@ D.7968,
 6423 040e 302B     		cmp	r3, #48	@ D.7968,
 6424 0410 04D1     		bne	.L444	@,
2293:src/sim900_800.c **** 					{
2294:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 6425              		.loc 1 2294 0
 6426 0412 AA4B     		ldr	r3, .L477+12	@ tmp407,
 6427 0414 0022     		movs	r2, #0	@ tmp408,
 6428 0416 1A70     		strb	r2, [r3]	@ tmp409, GSMConfigGPRSState
2295:src/sim900_800.c **** 						return 3;
 6429              		.loc 1 2295 0
 6430 0418 0323     		movs	r3, #3	@ D.7968,
 6431 041a 46E1     		b	.L422	@
 6432              	.L444:
2296:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
2297:src/sim900_800.c **** 					}
2298:src/sim900_800.c **** 				}
2299:src/sim900_800.c **** 			}
2300:src/sim900_800.c **** 
2301:src/sim900_800.c **** 			if (i > 2)
 6433              		.loc 1 2301 0
 6434 041c 1723     		movs	r3, #23	@ tmp410,
 6435 041e 6B44     		add	r3, r3, sp	@ tmp410,
 6436 0420 1B78     		ldrb	r3, [r3]	@ tmp411, i
 6437 0422 022B     		cmp	r3, #2	@ tmp411,
 6438 0424 00D8     		bhi	.LCB5413	@
 6439 0426 2BE1     		b	.L469	@long jump	@
 6440              	.LCB5413:
2302:src/sim900_800.c **** 			{
2303:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6441              		.loc 1 2303 0
 6442 0428 A44B     		ldr	r3, .L477+12	@ tmp412,
 6443 042a 0022     		movs	r2, #0	@ tmp413,
 6444 042c 1A70     		strb	r2, [r3]	@ tmp414, GSMConfigGPRSState
2304:src/sim900_800.c **** 				return 3;
 6445              		.loc 1 2304 0
 6446 042e 0323     		movs	r3, #3	@ D.7968,
 6447 0430 3BE1     		b	.L422	@
 6448              	.L411:
2305:src/sim900_800.c **** 			}
2306:src/sim900_800.c **** 
2307:src/sim900_800.c **** 			break;
2308:src/sim900_800.c **** 
2309:src/sim900_800.c **** 		case 9:
2310:src/sim900_800.c **** 
2311:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 6449              		.loc 1 2311 0
 6450 0432 1724     		movs	r4, #23	@ tmp415,
 6451 0434 6C44     		add	r4, r4, sp	@ tmp415,
 6452 0436 9E4B     		ldr	r3, .L477	@ tmp416,
 6453 0438 A148     		ldr	r0, .L477+16	@ tmp417,
 6454 043a 0022     		movs	r2, #0	@,
 6455 043c 3221     		movs	r1, #50	@,
 6456 043e FFF7FEFF 		bl	GSMSendCommand	@
 6457 0442 0300     		movs	r3, r0	@ tmp418,
 6458 0444 2370     		strb	r3, [r4]	@ tmp420, i
ARM GAS  /tmp/cc4fp2Bh.s 			page 158


2312:src/sim900_800.c **** 
2313:src/sim900_800.c **** 			if (i == 2)
 6459              		.loc 1 2313 0
 6460 0446 1723     		movs	r3, #23	@ tmp421,
 6461 0448 6B44     		add	r3, r3, sp	@ tmp421,
 6462 044a 1B78     		ldrb	r3, [r3]	@ tmp422, i
 6463 044c 022B     		cmp	r3, #2	@ tmp422,
 6464 044e 4CD1     		bne	.L447	@,
2314:src/sim900_800.c **** 			{
2315:src/sim900_800.c **** 				GSMConfigGPRSState++;
 6465              		.loc 1 2315 0
 6466 0450 9A4B     		ldr	r3, .L477+12	@ tmp423,
 6467 0452 1B78     		ldrb	r3, [r3]	@ D.7968, GSMConfigGPRSState
 6468 0454 0133     		adds	r3, r3, #1	@ tmp424,
 6469 0456 DAB2     		uxtb	r2, r3	@ D.7968, tmp424
 6470 0458 984B     		ldr	r3, .L477+12	@ tmp425,
 6471 045a 1A70     		strb	r2, [r3]	@ tmp426, GSMConfigGPRSState
2316:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 6472              		.loc 1 2316 0
 6473 045c 984A     		ldr	r2, .L477+16	@ tmp427,
 6474 045e 9B4B     		ldr	r3, .L477+28	@ tmp428,
 6475 0460 1000     		movs	r0, r2	@ tmp429, tmp427
 6476 0462 1900     		movs	r1, r3	@ tmp430, tmp428
 6477 0464 0A23     		movs	r3, #10	@ tmp431,
 6478 0466 1A00     		movs	r2, r3	@, tmp431
 6479 0468 FFF7FEFF 		bl	memcpy	@
2317:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 6480              		.loc 1 2317 0
 6481 046c 029A     		ldr	r2, [sp, #8]	@ tmp434, ptrAPN
 6482 046e 944B     		ldr	r3, .L477+16	@ tmp435,
 6483 0470 1100     		movs	r1, r2	@, tmp434
 6484 0472 1800     		movs	r0, r3	@, tmp435
 6485 0474 FFF7FEFF 		bl	strcat	@
2318:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 6486              		.loc 1 2318 0
 6487 0478 914B     		ldr	r3, .L477+16	@ tmp436,
 6488 047a 1800     		movs	r0, r3	@, tmp436
 6489 047c FFF7FEFF 		bl	strlen	@
 6490 0480 0300     		movs	r3, r0	@ tmp437,
 6491 0482 1A00     		movs	r2, r3	@ D.7971, tmp438
 6492 0484 8E4B     		ldr	r3, .L477+16	@ tmp439,
 6493 0486 D218     		adds	r2, r2, r3	@ D.7972, D.7971, tmp439
 6494 0488 914B     		ldr	r3, .L477+32	@ tmp440,
 6495 048a 1000     		movs	r0, r2	@ tmp441, D.7972
 6496 048c 1900     		movs	r1, r3	@ tmp442, tmp440
 6497 048e 0423     		movs	r3, #4	@ tmp443,
 6498 0490 1A00     		movs	r2, r3	@, tmp443
 6499 0492 FFF7FEFF 		bl	memcpy	@
2319:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 6500              		.loc 1 2319 0
 6501 0496 019A     		ldr	r2, [sp, #4]	@ tmp446, ptrUSER
 6502 0498 894B     		ldr	r3, .L477+16	@ tmp447,
 6503 049a 1100     		movs	r1, r2	@, tmp446
 6504 049c 1800     		movs	r0, r3	@, tmp447
 6505 049e FFF7FEFF 		bl	strcat	@
2320:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 6506              		.loc 1 2320 0
ARM GAS  /tmp/cc4fp2Bh.s 			page 159


 6507 04a2 874B     		ldr	r3, .L477+16	@ tmp448,
 6508 04a4 1800     		movs	r0, r3	@, tmp448
 6509 04a6 FFF7FEFF 		bl	strlen	@
 6510 04aa 0300     		movs	r3, r0	@ tmp449,
 6511 04ac 1A00     		movs	r2, r3	@ D.7971, tmp450
 6512 04ae 844B     		ldr	r3, .L477+16	@ tmp451,
 6513 04b0 D218     		adds	r2, r2, r3	@ D.7972, D.7971, tmp451
 6514 04b2 874B     		ldr	r3, .L477+32	@ tmp452,
 6515 04b4 1000     		movs	r0, r2	@ tmp453, D.7972
 6516 04b6 1900     		movs	r1, r3	@ tmp454, tmp452
 6517 04b8 0423     		movs	r3, #4	@ tmp455,
 6518 04ba 1A00     		movs	r2, r3	@, tmp455
 6519 04bc FFF7FEFF 		bl	memcpy	@
2321:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 6520              		.loc 1 2321 0
 6521 04c0 009A     		ldr	r2, [sp]	@ tmp458, ptrKEY
 6522 04c2 7F4B     		ldr	r3, .L477+16	@ tmp459,
 6523 04c4 1100     		movs	r1, r2	@, tmp458
 6524 04c6 1800     		movs	r0, r3	@, tmp459
 6525 04c8 FFF7FEFF 		bl	strcat	@
2322:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 6526              		.loc 1 2322 0
 6527 04cc 7C4B     		ldr	r3, .L477+16	@ tmp460,
 6528 04ce 1800     		movs	r0, r3	@, tmp460
 6529 04d0 FFF7FEFF 		bl	strlen	@
 6530 04d4 0300     		movs	r3, r0	@ tmp461,
 6531 04d6 1A00     		movs	r2, r3	@ D.7971, tmp462
 6532 04d8 794B     		ldr	r3, .L477+16	@ tmp463,
 6533 04da D218     		adds	r2, r2, r3	@ D.7972, D.7971, tmp463
 6534 04dc 7A4B     		ldr	r3, .L477+24	@ tmp464,
 6535 04de 1000     		movs	r0, r2	@ tmp465, D.7972
 6536 04e0 1900     		movs	r1, r3	@ tmp466, tmp464
 6537 04e2 0423     		movs	r3, #4	@ tmp467,
 6538 04e4 1A00     		movs	r2, r3	@, tmp467
 6539 04e6 FFF7FEFF 		bl	memcpy	@
 6540              	.L447:
2323:src/sim900_800.c **** 			}
2324:src/sim900_800.c **** 
2325:src/sim900_800.c **** 			if (i > 2)
 6541              		.loc 1 2325 0
 6542 04ea 1723     		movs	r3, #23	@ tmp470,
 6543 04ec 6B44     		add	r3, r3, sp	@ tmp470,
 6544 04ee 1B78     		ldrb	r3, [r3]	@ tmp471, i
 6545 04f0 022B     		cmp	r3, #2	@ tmp471,
 6546 04f2 00D8     		bhi	.LCB5509	@
 6547 04f4 C6E0     		b	.L470	@long jump	@
 6548              	.LCB5509:
2326:src/sim900_800.c **** 			{
2327:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6549              		.loc 1 2327 0
 6550 04f6 714B     		ldr	r3, .L477+12	@ tmp472,
 6551 04f8 0022     		movs	r2, #0	@ tmp473,
 6552 04fa 1A70     		strb	r2, [r3]	@ tmp474, GSMConfigGPRSState
2328:src/sim900_800.c **** 				return 3;
 6553              		.loc 1 2328 0
 6554 04fc 0323     		movs	r3, #3	@ D.7968,
 6555 04fe D4E0     		b	.L422	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 160


 6556              	.L412:
2329:src/sim900_800.c **** 			}
2330:src/sim900_800.c **** 			break;
2331:src/sim900_800.c **** 
2332:src/sim900_800.c **** 		case 10:
2333:src/sim900_800.c **** 
2334:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 6557              		.loc 1 2334 0
 6558 0500 1724     		movs	r4, #23	@ tmp475,
 6559 0502 6C44     		add	r4, r4, sp	@ tmp475,
 6560 0504 6A4B     		ldr	r3, .L477	@ tmp476,
 6561 0506 6E48     		ldr	r0, .L477+16	@ tmp477,
 6562 0508 0022     		movs	r2, #0	@,
 6563 050a 3221     		movs	r1, #50	@,
 6564 050c FFF7FEFF 		bl	GSMSendCommand	@
 6565 0510 0300     		movs	r3, r0	@ tmp478,
 6566 0512 2370     		strb	r3, [r4]	@ tmp480, i
2335:src/sim900_800.c **** 
2336:src/sim900_800.c **** 			if (i == 2)
 6567              		.loc 1 2336 0
 6568 0514 1723     		movs	r3, #23	@ tmp481,
 6569 0516 6B44     		add	r3, r3, sp	@ tmp481,
 6570 0518 1B78     		ldrb	r3, [r3]	@ tmp482, i
 6571 051a 022B     		cmp	r3, #2	@ tmp482,
 6572 051c 02D1     		bne	.L449	@,
2337:src/sim900_800.c **** 			{
2338:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6573              		.loc 1 2338 0
 6574 051e 674B     		ldr	r3, .L477+12	@ tmp483,
 6575 0520 0222     		movs	r2, #2	@ tmp484,
 6576 0522 1A70     		strb	r2, [r3]	@ tmp485, GSMConfigGPRSState
 6577              	.L449:
2339:src/sim900_800.c **** 			}
2340:src/sim900_800.c **** 
2341:src/sim900_800.c **** 			if (i > 2)
 6578              		.loc 1 2341 0
 6579 0524 1723     		movs	r3, #23	@ tmp486,
 6580 0526 6B44     		add	r3, r3, sp	@ tmp486,
 6581 0528 1B78     		ldrb	r3, [r3]	@ tmp487, i
 6582 052a 022B     		cmp	r3, #2	@ tmp487,
 6583 052c 00D8     		bhi	.LCB5541	@
 6584 052e ABE0     		b	.L471	@long jump	@
 6585              	.LCB5541:
2342:src/sim900_800.c **** 			{
2343:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6586              		.loc 1 2343 0
 6587 0530 624B     		ldr	r3, .L477+12	@ tmp488,
 6588 0532 0022     		movs	r2, #0	@ tmp489,
 6589 0534 1A70     		strb	r2, [r3]	@ tmp490, GSMConfigGPRSState
2344:src/sim900_800.c **** 				return 3;
 6590              		.loc 1 2344 0
 6591 0536 0323     		movs	r3, #3	@ D.7968,
 6592 0538 B7E0     		b	.L422	@
 6593              	.L413:
2345:src/sim900_800.c **** 			}
2346:src/sim900_800.c **** 			break;
2347:src/sim900_800.c **** 
ARM GAS  /tmp/cc4fp2Bh.s 			page 161


2348:src/sim900_800.c **** 		case 11:
2349:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 6594              		.loc 1 2349 0
 6595 053a 1724     		movs	r4, #23	@ tmp491,
 6596 053c 6C44     		add	r4, r4, sp	@ tmp491,
 6597 053e 5C4B     		ldr	r3, .L477	@ tmp492,
 6598 0540 6448     		ldr	r0, .L477+36	@ tmp493,
 6599 0542 0022     		movs	r2, #0	@,
 6600 0544 C821     		movs	r1, #200	@,
 6601 0546 FFF7FEFF 		bl	GSMSendCommand	@
 6602 054a 0300     		movs	r3, r0	@ tmp494,
 6603 054c 2370     		strb	r3, [r4]	@ tmp496, i
2350:src/sim900_800.c **** 
2351:src/sim900_800.c **** 			if (i == 2)
 6604              		.loc 1 2351 0
 6605 054e 1723     		movs	r3, #23	@ tmp497,
 6606 0550 6B44     		add	r3, r3, sp	@ tmp497,
 6607 0552 1B78     		ldrb	r3, [r3]	@ tmp498, i
 6608 0554 022B     		cmp	r3, #2	@ tmp498,
 6609 0556 02D1     		bne	.L451	@,
2352:src/sim900_800.c **** 			{
2353:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6610              		.loc 1 2353 0
 6611 0558 584B     		ldr	r3, .L477+12	@ tmp499,
 6612 055a 0222     		movs	r2, #2	@ tmp500,
 6613 055c 1A70     		strb	r2, [r3]	@ tmp501, GSMConfigGPRSState
 6614              	.L451:
2354:src/sim900_800.c **** 			}
2355:src/sim900_800.c **** 
2356:src/sim900_800.c **** 			if (i > 2)
 6615              		.loc 1 2356 0
 6616 055e 1723     		movs	r3, #23	@ tmp502,
 6617 0560 6B44     		add	r3, r3, sp	@ tmp502,
 6618 0562 1B78     		ldrb	r3, [r3]	@ tmp503, i
 6619 0564 022B     		cmp	r3, #2	@ tmp503,
 6620 0566 00D8     		bhi	.LCB5573	@
 6621 0568 90E0     		b	.L472	@long jump	@
 6622              	.LCB5573:
2357:src/sim900_800.c **** 			{
2358:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6623              		.loc 1 2358 0
 6624 056a 544B     		ldr	r3, .L477+12	@ tmp504,
 6625 056c 0022     		movs	r2, #0	@ tmp505,
 6626 056e 1A70     		strb	r2, [r3]	@ tmp506, GSMConfigGPRSState
2359:src/sim900_800.c **** 				return 3;
 6627              		.loc 1 2359 0
 6628 0570 0323     		movs	r3, #3	@ D.7968,
 6629 0572 9AE0     		b	.L422	@
 6630              	.L414:
2360:src/sim900_800.c **** 			}
2361:src/sim900_800.c **** 			break;
2362:src/sim900_800.c **** 
2363:src/sim900_800.c **** 		case 12:
2364:src/sim900_800.c **** 
2365:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 6631              		.loc 1 2365 0
 6632 0574 584B     		ldr	r3, .L477+40	@ tmp507,
ARM GAS  /tmp/cc4fp2Bh.s 			page 162


 6633 0576 0322     		movs	r2, #3	@ tmp508,
 6634 0578 1A70     		strb	r2, [r3]	@ tmp509, GSMConfigGPRSflag
2366:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6635              		.loc 1 2366 0
 6636 057a 1724     		movs	r4, #23	@ tmp510,
 6637 057c 6C44     		add	r4, r4, sp	@ tmp510,
 6638 057e 4C4B     		ldr	r3, .L477	@ tmp511,
 6639 0580 5648     		ldr	r0, .L477+44	@ tmp512,
 6640 0582 0022     		movs	r2, #0	@,
 6641 0584 3221     		movs	r1, #50	@,
 6642 0586 FFF7FEFF 		bl	GSMSendCommand	@
 6643 058a 0300     		movs	r3, r0	@ tmp513,
 6644 058c 2370     		strb	r3, [r4]	@ tmp515, i
2367:src/sim900_800.c **** 
2368:src/sim900_800.c **** 			if (i == 2)
 6645              		.loc 1 2368 0
 6646 058e 1723     		movs	r3, #23	@ tmp516,
 6647 0590 6B44     		add	r3, r3, sp	@ tmp516,
 6648 0592 1B78     		ldrb	r3, [r3]	@ tmp517, i
 6649 0594 022B     		cmp	r3, #2	@ tmp517,
 6650 0596 05D1     		bne	.L453	@,
2369:src/sim900_800.c **** 			{
2370:src/sim900_800.c **** 				GSMConfigGPRSState = 14;
 6651              		.loc 1 2370 0
 6652 0598 484B     		ldr	r3, .L477+12	@ tmp518,
 6653 059a 0E22     		movs	r2, #14	@ tmp519,
 6654 059c 1A70     		strb	r2, [r3]	@ tmp520, GSMConfigGPRSState
2371:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 6655              		.loc 1 2371 0
 6656 059e 4E4B     		ldr	r3, .L477+40	@ tmp521,
 6657 05a0 0122     		movs	r2, #1	@ tmp522,
 6658 05a2 1A70     		strb	r2, [r3]	@ tmp523, GSMConfigGPRSflag
 6659              	.L453:
2372:src/sim900_800.c **** 			}
2373:src/sim900_800.c **** 
2374:src/sim900_800.c **** 			if (i > 2)
 6660              		.loc 1 2374 0
 6661 05a4 1723     		movs	r3, #23	@ tmp524,
 6662 05a6 6B44     		add	r3, r3, sp	@ tmp524,
 6663 05a8 1B78     		ldrb	r3, [r3]	@ tmp525, i
 6664 05aa 022B     		cmp	r3, #2	@ tmp525,
 6665 05ac 00D8     		bhi	.LCB5611	@
 6666 05ae 6FE0     		b	.L473	@long jump	@
 6667              	.LCB5611:
2375:src/sim900_800.c **** 			{
2376:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6668              		.loc 1 2376 0
 6669 05b0 424B     		ldr	r3, .L477+12	@ tmp526,
 6670 05b2 0022     		movs	r2, #0	@ tmp527,
 6671 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMConfigGPRSState
2377:src/sim900_800.c **** 				return 3;
 6672              		.loc 1 2377 0
 6673 05b6 0323     		movs	r3, #3	@ D.7968,
 6674 05b8 77E0     		b	.L422	@
 6675              	.L415:
2378:src/sim900_800.c **** 			}
2379:src/sim900_800.c **** 			break;
ARM GAS  /tmp/cc4fp2Bh.s 			page 163


2380:src/sim900_800.c **** 		case 13:
2381:src/sim900_800.c **** 			GSMConfigGPRSState = 2;
 6676              		.loc 1 2381 0
 6677 05ba 404B     		ldr	r3, .L477+12	@ tmp529,
 6678 05bc 0222     		movs	r2, #2	@ tmp530,
 6679 05be 1A70     		strb	r2, [r3]	@ tmp531, GSMConfigGPRSState
2382:src/sim900_800.c **** /*
2383:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
2384:src/sim900_800.c **** 
2385:src/sim900_800.c **** 			if (i == 2)
2386:src/sim900_800.c **** 			{
2387:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
2388:src/sim900_800.c **** 			}
2389:src/sim900_800.c **** 
2390:src/sim900_800.c **** 			if (i > 2)
2391:src/sim900_800.c **** 			{
2392:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2393:src/sim900_800.c **** 				return 3;
2394:src/sim900_800.c **** 			}
2395:src/sim900_800.c **** */
2396:src/sim900_800.c **** 			break;
 6680              		.loc 1 2396 0
 6681 05c0 69E0     		b	.L419	@
 6682              	.L416:
2397:src/sim900_800.c **** 
2398:src/sim900_800.c **** 		case 14:
2399:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6683              		.loc 1 2399 0
 6684 05c2 3E4B     		ldr	r3, .L477+12	@ tmp532,
 6685 05c4 0022     		movs	r2, #0	@ tmp533,
 6686 05c6 1A70     		strb	r2, [r3]	@ tmp534, GSMConfigGPRSState
2400:src/sim900_800.c **** 			return 2;
 6687              		.loc 1 2400 0
 6688 05c8 0223     		movs	r3, #2	@ D.7968,
 6689 05ca 6EE0     		b	.L422	@
 6690              	.L417:
2401:src/sim900_800.c **** 			break;
2402:src/sim900_800.c **** 
2403:src/sim900_800.c **** 		case 15:
2404:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 6691              		.loc 1 2404 0
 6692 05cc 0F23     		movs	r3, #15	@ tmp535,
 6693 05ce 6B44     		add	r3, r3, sp	@ tmp535,
 6694 05d0 1B78     		ldrb	r3, [r3]	@ tmp536, sim
 6695 05d2 012B     		cmp	r3, #1	@ tmp536,
 6696 05d4 04D0     		beq	.L455	@,
 6697              		.loc 1 2404 0 is_stmt 0 discriminator 1
 6698 05d6 0F23     		movs	r3, #15	@ tmp537,
 6699 05d8 6B44     		add	r3, r3, sp	@ tmp537,
 6700 05da 1B78     		ldrb	r3, [r3]	@ tmp538, sim
 6701 05dc 022B     		cmp	r3, #2	@ tmp538,
 6702 05de 1BD1     		bne	.L456	@,
 6703              	.L455:
2405:src/sim900_800.c **** 			{
2406:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 6704              		.loc 1 2406 0 is_stmt 1
 6705 05e0 1724     		movs	r4, #23	@ tmp539,
ARM GAS  /tmp/cc4fp2Bh.s 			page 164


 6706 05e2 6C44     		add	r4, r4, sp	@ tmp539,
 6707 05e4 0F23     		movs	r3, #15	@ tmp540,
 6708 05e6 6B44     		add	r3, r3, sp	@ tmp540,
 6709 05e8 1B78     		ldrb	r3, [r3]	@ tmp541, sim
 6710 05ea 1800     		movs	r0, r3	@, tmp541
 6711 05ec FFF7FEFF 		bl	GSM_SetSIM	@
 6712 05f0 0300     		movs	r3, r0	@ tmp542,
 6713 05f2 2370     		strb	r3, [r4]	@ tmp544, i
2407:src/sim900_800.c **** 
2408:src/sim900_800.c **** 				if (i == 2)
 6714              		.loc 1 2408 0
 6715 05f4 1723     		movs	r3, #23	@ tmp545,
 6716 05f6 6B44     		add	r3, r3, sp	@ tmp545,
 6717 05f8 1B78     		ldrb	r3, [r3]	@ tmp546, i
 6718 05fa 022B     		cmp	r3, #2	@ tmp546,
 6719 05fc 02D1     		bne	.L457	@,
2409:src/sim900_800.c **** 				{
2410:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 6720              		.loc 1 2410 0
 6721 05fe 2F4B     		ldr	r3, .L477+12	@ tmp547,
 6722 0600 0222     		movs	r2, #2	@ tmp548,
 6723 0602 1A70     		strb	r2, [r3]	@ tmp549, GSMConfigGPRSState
 6724              	.L457:
2411:src/sim900_800.c **** 				}
2412:src/sim900_800.c **** 
2413:src/sim900_800.c **** 				if (i>2)
 6725              		.loc 1 2413 0
 6726 0604 1723     		movs	r3, #23	@ tmp550,
 6727 0606 6B44     		add	r3, r3, sp	@ tmp550,
 6728 0608 1B78     		ldrb	r3, [r3]	@ tmp551, i
 6729 060a 022B     		cmp	r3, #2	@ tmp551,
 6730 060c 09D9     		bls	.L459	@,
2414:src/sim900_800.c **** 				{
2415:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6731              		.loc 1 2415 0
 6732 060e 2B4B     		ldr	r3, .L477+12	@ tmp552,
 6733 0610 0022     		movs	r2, #0	@ tmp553,
 6734 0612 1A70     		strb	r2, [r3]	@ tmp554, GSMConfigGPRSState
2416:src/sim900_800.c **** 					return 3;
 6735              		.loc 1 2416 0
 6736 0614 0323     		movs	r3, #3	@ D.7968,
 6737 0616 48E0     		b	.L422	@
 6738              	.L456:
2417:src/sim900_800.c **** 				}
2418:src/sim900_800.c **** 			}
2419:src/sim900_800.c **** 			else
2420:src/sim900_800.c **** 			{
2421:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6739              		.loc 1 2421 0
 6740 0618 284B     		ldr	r3, .L477+12	@ tmp555,
 6741 061a 0022     		movs	r2, #0	@ tmp556,
 6742 061c 1A70     		strb	r2, [r3]	@ tmp557, GSMConfigGPRSState
2422:src/sim900_800.c **** 				return 3;
 6743              		.loc 1 2422 0
 6744 061e 0323     		movs	r3, #3	@ D.7968,
 6745 0620 43E0     		b	.L422	@
 6746              	.L459:
ARM GAS  /tmp/cc4fp2Bh.s 			page 165


2423:src/sim900_800.c **** 			}
2424:src/sim900_800.c **** 
2425:src/sim900_800.c **** 			break;
 6747              		.loc 1 2425 0 discriminator 1
 6748 0622 38E0     		b	.L419	@
 6749              	.L418:
2426:src/sim900_800.c **** 		case 16:
2427:src/sim900_800.c **** 
2428:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6750              		.loc 1 2428 0
 6751 0624 1724     		movs	r4, #23	@ tmp558,
 6752 0626 6C44     		add	r4, r4, sp	@ tmp558,
 6753 0628 214B     		ldr	r3, .L477	@ tmp559,
 6754 062a 2D48     		ldr	r0, .L477+48	@ tmp560,
 6755 062c 0022     		movs	r2, #0	@,
 6756 062e 3221     		movs	r1, #50	@,
 6757 0630 FFF7FEFF 		bl	GSMSendCommand	@
 6758 0634 0300     		movs	r3, r0	@ tmp561,
 6759 0636 2370     		strb	r3, [r4]	@ tmp563, i
2429:src/sim900_800.c **** 
2430:src/sim900_800.c **** 			if (i == 2)
 6760              		.loc 1 2430 0
 6761 0638 1723     		movs	r3, #23	@ tmp564,
 6762 063a 6B44     		add	r3, r3, sp	@ tmp564,
 6763 063c 1B78     		ldrb	r3, [r3]	@ tmp565, i
 6764 063e 022B     		cmp	r3, #2	@ tmp565,
 6765 0640 04D1     		bne	.L460	@,
2431:src/sim900_800.c **** 			{
2432:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6766              		.loc 1 2432 0
 6767 0642 1E4B     		ldr	r3, .L477+12	@ tmp566,
 6768 0644 0022     		movs	r2, #0	@ tmp567,
 6769 0646 1A70     		strb	r2, [r3]	@ tmp568, GSMConfigGPRSState
2433:src/sim900_800.c **** 				return 3;
 6770              		.loc 1 2433 0
 6771 0648 0323     		movs	r3, #3	@ D.7968,
 6772 064a 2EE0     		b	.L422	@
 6773              	.L460:
2434:src/sim900_800.c **** 			}
2435:src/sim900_800.c **** 
2436:src/sim900_800.c **** 			if (i > 2)
 6774              		.loc 1 2436 0
 6775 064c 1723     		movs	r3, #23	@ tmp569,
 6776 064e 6B44     		add	r3, r3, sp	@ tmp569,
 6777 0650 1B78     		ldrb	r3, [r3]	@ tmp570, i
 6778 0652 022B     		cmp	r3, #2	@ tmp570,
 6779 0654 1ED9     		bls	.L474	@,
2437:src/sim900_800.c **** 			{
2438:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6780              		.loc 1 2438 0
 6781 0656 194B     		ldr	r3, .L477+12	@ tmp571,
 6782 0658 0022     		movs	r2, #0	@ tmp572,
 6783 065a 1A70     		strb	r2, [r3]	@ tmp573, GSMConfigGPRSState
2439:src/sim900_800.c **** 				return 3;
 6784              		.loc 1 2439 0
 6785 065c 0323     		movs	r3, #3	@ D.7968,
 6786 065e 24E0     		b	.L422	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 166


 6787              	.L400:
2440:src/sim900_800.c **** 			}
2441:src/sim900_800.c **** 			break;
2442:src/sim900_800.c **** 		default:
2443:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6788              		.loc 1 2443 0
 6789 0660 164B     		ldr	r3, .L477+12	@ tmp574,
 6790 0662 0022     		movs	r2, #0	@ tmp575,
 6791 0664 1A70     		strb	r2, [r3]	@ tmp576, GSMConfigGPRSState
2444:src/sim900_800.c **** 			break;
 6792              		.loc 1 2444 0
 6793 0666 16E0     		b	.L419	@
 6794              	.L463:
2096:src/sim900_800.c **** 		case 3:
 6795              		.loc 1 2096 0
 6796 0668 C046     		nop
 6797 066a 14E0     		b	.L419	@
 6798              	.L464:
2184:src/sim900_800.c **** 
 6799              		.loc 1 2184 0
 6800 066c C046     		nop
 6801 066e 12E0     		b	.L419	@
 6802              	.L465:
2207:src/sim900_800.c **** 
 6803              		.loc 1 2207 0
 6804 0670 C046     		nop
 6805 0672 10E0     		b	.L419	@
 6806              	.L466:
2230:src/sim900_800.c **** 		case 6:
 6807              		.loc 1 2230 0
 6808 0674 C046     		nop
 6809 0676 0EE0     		b	.L419	@
 6810              	.L467:
2260:src/sim900_800.c **** 		case 7:
 6811              		.loc 1 2260 0
 6812 0678 C046     		nop
 6813 067a 0CE0     		b	.L419	@
 6814              	.L468:
2275:src/sim900_800.c **** 
 6815              		.loc 1 2275 0
 6816 067c C046     		nop
 6817 067e 0AE0     		b	.L419	@
 6818              	.L469:
2307:src/sim900_800.c **** 
 6819              		.loc 1 2307 0
 6820 0680 C046     		nop
 6821 0682 08E0     		b	.L419	@
 6822              	.L470:
2330:src/sim900_800.c **** 
 6823              		.loc 1 2330 0
 6824 0684 C046     		nop
 6825 0686 06E0     		b	.L419	@
 6826              	.L471:
2346:src/sim900_800.c **** 
 6827              		.loc 1 2346 0
 6828 0688 C046     		nop
 6829 068a 04E0     		b	.L419	@
ARM GAS  /tmp/cc4fp2Bh.s 			page 167


 6830              	.L472:
2361:src/sim900_800.c **** 
 6831              		.loc 1 2361 0
 6832 068c C046     		nop
 6833 068e 02E0     		b	.L419	@
 6834              	.L473:
2379:src/sim900_800.c **** 		case 13:
 6835              		.loc 1 2379 0
 6836 0690 C046     		nop
 6837 0692 00E0     		b	.L419	@
 6838              	.L474:
2441:src/sim900_800.c **** 		default:
 6839              		.loc 1 2441 0
 6840 0694 C046     		nop
 6841              	.L419:
2445:src/sim900_800.c **** 
2446:src/sim900_800.c **** 	}
2447:src/sim900_800.c **** 
2448:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 6842              		.loc 1 2448 0
 6843 0696 134B     		ldr	r3, .L477+52	@ tmp577,
 6844 0698 1B88     		ldrh	r3, [r3]	@ D.7973, GSMConfigGPRSTimeOut
 6845 069a 002B     		cmp	r3, #0	@ D.7973,
 6846 069c 04D1     		bne	.L462	@,
2449:src/sim900_800.c **** 	{
2450:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 6847              		.loc 1 2450 0
 6848 069e 074B     		ldr	r3, .L477+12	@ tmp578,
 6849 06a0 0022     		movs	r2, #0	@ tmp579,
 6850 06a2 1A70     		strb	r2, [r3]	@ tmp580, GSMConfigGPRSState
2451:src/sim900_800.c **** 		return 4;
 6851              		.loc 1 2451 0
 6852 06a4 0423     		movs	r3, #4	@ D.7968,
 6853 06a6 00E0     		b	.L422	@
 6854              	.L462:
2452:src/sim900_800.c **** 	}
2453:src/sim900_800.c **** 
2454:src/sim900_800.c **** 	return 1;
 6855              		.loc 1 2454 0
 6856 06a8 0123     		movs	r3, #1	@ D.7968,
 6857              	.L422:
2455:src/sim900_800.c **** }
 6858              		.loc 1 2455 0
 6859 06aa 1800     		movs	r0, r3	@, <retval>
 6860 06ac 06B0     		add	sp, sp, #24	@,,
 6861              		@ sp needed	@
 6862 06ae 10BD     		pop	{r4, pc}
 6863              	.L478:
 6864              		.align	2
 6865              	.L477:
 6866 06b0 00000000 		.word	GSMbuffRtaCommand
 6867 06b4 A4010000 		.word	.LC143
 6868 06b8 B0010000 		.word	.LC145
 6869 06bc 00000000 		.word	GSMConfigGPRSState
 6870 06c0 00000000 		.word	GSMbuffGPRSCommand
 6871 06c4 B8010000 		.word	.LC147
 6872 06c8 DC000000 		.word	.LC94
ARM GAS  /tmp/cc4fp2Bh.s 			page 168


 6873 06cc CC010000 		.word	.LC149
 6874 06d0 20010000 		.word	.LC116
 6875 06d4 D8010000 		.word	.LC151
 6876 06d8 00000000 		.word	GSMConfigGPRSflag
 6877 06dc E4010000 		.word	.LC153
 6878 06e0 14000000 		.word	.LC33
 6879 06e4 00000000 		.word	GSMConfigGPRSTimeOut
 6880              		.cfi_endproc
 6881              	.LFE36:
 6882              		.size	GSMConfigPDPGPRS, .-GSMConfigPDPGPRS
 6883              		.text
 6884              	.Letext0:
 6885              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 6886              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6887              		.file 4 "./cmsis_boot/stm32f0xx.h"
 6888              		.section	.debug_info,"",%progbits
 6889              	.Ldebug_info0:
 6890 0000 5B0D0000 		.4byte	0xd5b
 6891 0004 0200     		.2byte	0x2
 6892 0006 00000000 		.4byte	.Ldebug_abbrev0
 6893 000a 04       		.byte	0x4
 6894 000b 01       		.uleb128 0x1
 6895 000c AA070000 		.4byte	.LASF148
 6896 0010 0C       		.byte	0xc
 6897 0011 05060000 		.4byte	.LASF149
 6898 0015 16060000 		.4byte	.LASF150
 6899 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6900 001d 00000000 		.4byte	0
 6901 0021 00000000 		.4byte	0
 6902 0025 00000000 		.4byte	.Ldebug_line0
 6903 0029 02       		.uleb128 0x2
 6904 002a 01       		.byte	0x1
 6905 002b 08       		.byte	0x8
 6906 002c 8A060000 		.4byte	.LASF0
 6907 0030 02       		.uleb128 0x2
 6908 0031 01       		.byte	0x1
 6909 0032 06       		.byte	0x6
 6910 0033 66070000 		.4byte	.LASF1
 6911 0037 02       		.uleb128 0x2
 6912 0038 02       		.byte	0x2
 6913 0039 05       		.byte	0x5
 6914 003a DF040000 		.4byte	.LASF2
 6915 003e 03       		.uleb128 0x3
 6916 003f 6D020000 		.4byte	.LASF5
 6917 0043 02       		.byte	0x2
 6918 0044 2B       		.byte	0x2b
 6919 0045 49000000 		.4byte	0x49
 6920 0049 02       		.uleb128 0x2
 6921 004a 02       		.byte	0x2
 6922 004b 07       		.byte	0x7
 6923 004c 97070000 		.4byte	.LASF3
 6924 0050 02       		.uleb128 0x2
 6925 0051 04       		.byte	0x4
 6926 0052 05       		.byte	0x5
 6927 0053 FF040000 		.4byte	.LASF4
 6928 0057 03       		.uleb128 0x3
 6929 0058 98060000 		.4byte	.LASF6
ARM GAS  /tmp/cc4fp2Bh.s 			page 169


 6930 005c 02       		.byte	0x2
 6931 005d 41       		.byte	0x41
 6932 005e 62000000 		.4byte	0x62
 6933 0062 02       		.uleb128 0x2
 6934 0063 04       		.byte	0x4
 6935 0064 07       		.byte	0x7
 6936 0065 F3050000 		.4byte	.LASF7
 6937 0069 02       		.uleb128 0x2
 6938 006a 08       		.byte	0x8
 6939 006b 05       		.byte	0x5
 6940 006c F6030000 		.4byte	.LASF8
 6941 0070 02       		.uleb128 0x2
 6942 0071 08       		.byte	0x8
 6943 0072 07       		.byte	0x7
 6944 0073 1A020000 		.4byte	.LASF9
 6945 0077 04       		.uleb128 0x4
 6946 0078 04       		.byte	0x4
 6947 0079 05       		.byte	0x5
 6948 007a 696E7400 		.ascii	"int\000"
 6949 007e 02       		.uleb128 0x2
 6950 007f 04       		.byte	0x4
 6951 0080 07       		.byte	0x7
 6952 0081 BF000000 		.4byte	.LASF10
 6953 0085 03       		.uleb128 0x3
 6954 0086 79040000 		.4byte	.LASF11
 6955 008a 03       		.byte	0x3
 6956 008b 1A       		.byte	0x1a
 6957 008c 3E000000 		.4byte	0x3e
 6958 0090 03       		.uleb128 0x3
 6959 0091 3A010000 		.4byte	.LASF12
 6960 0095 03       		.byte	0x3
 6961 0096 20       		.byte	0x20
 6962 0097 57000000 		.4byte	0x57
 6963 009b 02       		.uleb128 0x2
 6964 009c 04       		.byte	0x4
 6965 009d 07       		.byte	0x7
 6966 009e EA050000 		.4byte	.LASF13
 6967 00a2 05       		.uleb128 0x5
 6968 00a3 90000000 		.4byte	0x90
 6969 00a7 06       		.uleb128 0x6
 6970 00a8 90000000 		.4byte	0x90
 6971 00ac B7000000 		.4byte	0xb7
 6972 00b0 07       		.uleb128 0x7
 6973 00b1 9B000000 		.4byte	0x9b
 6974 00b5 01       		.byte	0x1
 6975 00b6 00       		.byte	0
 6976 00b7 05       		.uleb128 0x5
 6977 00b8 85000000 		.4byte	0x85
 6978 00bc 08       		.uleb128 0x8
 6979 00bd 2C       		.byte	0x2c
 6980 00be 04       		.byte	0x4
 6981 00bf 6902     		.2byte	0x269
 6982 00c1 98010000 		.4byte	0x198
 6983 00c5 09       		.uleb128 0x9
 6984 00c6 78020000 		.4byte	.LASF14
 6985 00ca 04       		.byte	0x4
 6986 00cb 6B02     		.2byte	0x26b
ARM GAS  /tmp/cc4fp2Bh.s 			page 170


 6987 00cd A2000000 		.4byte	0xa2
 6988 00d1 02       		.byte	0x2
 6989 00d2 23       		.byte	0x23
 6990 00d3 00       		.uleb128 0
 6991 00d4 09       		.uleb128 0x9
 6992 00d5 3C050000 		.4byte	.LASF15
 6993 00d9 04       		.byte	0x4
 6994 00da 6C02     		.2byte	0x26c
 6995 00dc B7000000 		.4byte	0xb7
 6996 00e0 02       		.byte	0x2
 6997 00e1 23       		.byte	0x23
 6998 00e2 04       		.uleb128 0x4
 6999 00e3 09       		.uleb128 0x9
 7000 00e4 B7040000 		.4byte	.LASF16
 7001 00e8 04       		.byte	0x4
 7002 00e9 6D02     		.2byte	0x26d
 7003 00eb 85000000 		.4byte	0x85
 7004 00ef 02       		.byte	0x2
 7005 00f0 23       		.byte	0x23
 7006 00f1 06       		.uleb128 0x6
 7007 00f2 09       		.uleb128 0x9
 7008 00f3 65040000 		.4byte	.LASF17
 7009 00f7 04       		.byte	0x4
 7010 00f8 6E02     		.2byte	0x26e
 7011 00fa A2000000 		.4byte	0xa2
 7012 00fe 02       		.byte	0x2
 7013 00ff 23       		.byte	0x23
 7014 0100 08       		.uleb128 0x8
 7015 0101 09       		.uleb128 0x9
 7016 0102 07030000 		.4byte	.LASF18
 7017 0106 04       		.byte	0x4
 7018 0107 6F02     		.2byte	0x26f
 7019 0109 A2000000 		.4byte	0xa2
 7020 010d 02       		.byte	0x2
 7021 010e 23       		.byte	0x23
 7022 010f 0C       		.uleb128 0xc
 7023 0110 0A       		.uleb128 0xa
 7024 0111 49445200 		.ascii	"IDR\000"
 7025 0115 04       		.byte	0x4
 7026 0116 7002     		.2byte	0x270
 7027 0118 B7000000 		.4byte	0xb7
 7028 011c 02       		.byte	0x2
 7029 011d 23       		.byte	0x23
 7030 011e 10       		.uleb128 0x10
 7031 011f 09       		.uleb128 0x9
 7032 0120 C1040000 		.4byte	.LASF19
 7033 0124 04       		.byte	0x4
 7034 0125 7102     		.2byte	0x271
 7035 0127 85000000 		.4byte	0x85
 7036 012b 02       		.byte	0x2
 7037 012c 23       		.byte	0x23
 7038 012d 12       		.uleb128 0x12
 7039 012e 0A       		.uleb128 0xa
 7040 012f 4F445200 		.ascii	"ODR\000"
 7041 0133 04       		.byte	0x4
 7042 0134 7202     		.2byte	0x272
 7043 0136 B7000000 		.4byte	0xb7
ARM GAS  /tmp/cc4fp2Bh.s 			page 171


 7044 013a 02       		.byte	0x2
 7045 013b 23       		.byte	0x23
 7046 013c 14       		.uleb128 0x14
 7047 013d 09       		.uleb128 0x9
 7048 013e CB040000 		.4byte	.LASF20
 7049 0142 04       		.byte	0x4
 7050 0143 7302     		.2byte	0x273
 7051 0145 85000000 		.4byte	0x85
 7052 0149 02       		.byte	0x2
 7053 014a 23       		.byte	0x23
 7054 014b 16       		.uleb128 0x16
 7055 014c 09       		.uleb128 0x9
 7056 014d 52000000 		.4byte	.LASF21
 7057 0151 04       		.byte	0x4
 7058 0152 7402     		.2byte	0x274
 7059 0154 A2000000 		.4byte	0xa2
 7060 0158 02       		.byte	0x2
 7061 0159 23       		.byte	0x23
 7062 015a 18       		.uleb128 0x18
 7063 015b 09       		.uleb128 0x9
 7064 015c 09090000 		.4byte	.LASF22
 7065 0160 04       		.byte	0x4
 7066 0161 7502     		.2byte	0x275
 7067 0163 A2000000 		.4byte	0xa2
 7068 0167 02       		.byte	0x2
 7069 0168 23       		.byte	0x23
 7070 0169 1C       		.uleb128 0x1c
 7071 016a 0A       		.uleb128 0xa
 7072 016b 41465200 		.ascii	"AFR\000"
 7073 016f 04       		.byte	0x4
 7074 0170 7602     		.2byte	0x276
 7075 0172 98010000 		.4byte	0x198
 7076 0176 02       		.byte	0x2
 7077 0177 23       		.byte	0x23
 7078 0178 20       		.uleb128 0x20
 7079 0179 0A       		.uleb128 0xa
 7080 017a 42525200 		.ascii	"BRR\000"
 7081 017e 04       		.byte	0x4
 7082 017f 7702     		.2byte	0x277
 7083 0181 B7000000 		.4byte	0xb7
 7084 0185 02       		.byte	0x2
 7085 0186 23       		.byte	0x23
 7086 0187 28       		.uleb128 0x28
 7087 0188 09       		.uleb128 0x9
 7088 0189 D5040000 		.4byte	.LASF23
 7089 018d 04       		.byte	0x4
 7090 018e 7802     		.2byte	0x278
 7091 0190 85000000 		.4byte	0x85
 7092 0194 02       		.byte	0x2
 7093 0195 23       		.byte	0x23
 7094 0196 2A       		.uleb128 0x2a
 7095 0197 00       		.byte	0
 7096 0198 05       		.uleb128 0x5
 7097 0199 A7000000 		.4byte	0xa7
 7098 019d 0B       		.uleb128 0xb
 7099 019e BF050000 		.4byte	.LASF24
 7100 01a2 04       		.byte	0x4
ARM GAS  /tmp/cc4fp2Bh.s 			page 172


 7101 01a3 7902     		.2byte	0x279
 7102 01a5 BC000000 		.4byte	0xbc
 7103 01a9 02       		.uleb128 0x2
 7104 01aa 08       		.byte	0x8
 7105 01ab 04       		.byte	0x4
 7106 01ac 6D040000 		.4byte	.LASF25
 7107 01b0 0C       		.uleb128 0xc
 7108 01b1 04       		.byte	0x4
 7109 01b2 29000000 		.4byte	0x29
 7110 01b6 0C       		.uleb128 0xc
 7111 01b7 04       		.byte	0x4
 7112 01b8 BC010000 		.4byte	0x1bc
 7113 01bc 02       		.uleb128 0x2
 7114 01bd 01       		.byte	0x1
 7115 01be 08       		.byte	0x8
 7116 01bf 3B030000 		.4byte	.LASF26
 7117 01c3 0D       		.uleb128 0xd
 7118 01c4 BC010000 		.4byte	0x1bc
 7119 01c8 06       		.uleb128 0x6
 7120 01c9 BC010000 		.4byte	0x1bc
 7121 01cd D8010000 		.4byte	0x1d8
 7122 01d1 07       		.uleb128 0x7
 7123 01d2 9B000000 		.4byte	0x9b
 7124 01d6 07       		.byte	0x7
 7125 01d7 00       		.byte	0
 7126 01d8 0E       		.uleb128 0xe
 7127 01d9 01       		.byte	0x1
 7128 01da E9040000 		.4byte	.LASF27
 7129 01de 01       		.byte	0x1
 7130 01df D7       		.byte	0xd7
 7131 01e0 01       		.byte	0x1
 7132 01e1 00000000 		.4byte	.LFB20
 7133 01e5 5C000000 		.4byte	.LFE20
 7134 01e9 00000000 		.4byte	.LLST0
 7135 01ed 01       		.byte	0x1
 7136 01ee 0F       		.uleb128 0xf
 7137 01ef 01       		.byte	0x1
 7138 01f0 B5000000 		.4byte	.LASF151
 7139 01f4 01       		.byte	0x1
 7140 01f5 3301     		.2byte	0x133
 7141 01f7 01       		.byte	0x1
 7142 01f8 29000000 		.4byte	0x29
 7143 01fc 00000000 		.4byte	.LFB21
 7144 0200 FC000000 		.4byte	.LFE21
 7145 0204 02       		.byte	0x2
 7146 0205 7D       		.byte	0x7d
 7147 0206 00       		.sleb128 0
 7148 0207 01       		.byte	0x1
 7149 0208 10       		.uleb128 0x10
 7150 0209 01       		.byte	0x1
 7151 020a D1020000 		.4byte	.LASF28
 7152 020e 01       		.byte	0x1
 7153 020f 6A01     		.2byte	0x16a
 7154 0211 01       		.byte	0x1
 7155 0212 00000000 		.4byte	.LFB22
 7156 0216 10000000 		.4byte	.LFE22
 7157 021a 02       		.byte	0x2
ARM GAS  /tmp/cc4fp2Bh.s 			page 173


 7158 021b 7D       		.byte	0x7d
 7159 021c 00       		.sleb128 0
 7160 021d 01       		.byte	0x1
 7161 021e 11       		.uleb128 0x11
 7162 021f 01       		.byte	0x1
 7163 0220 C8020000 		.4byte	.LASF29
 7164 0224 01       		.byte	0x1
 7165 0225 7401     		.2byte	0x174
 7166 0227 01       		.byte	0x1
 7167 0228 29000000 		.4byte	0x29
 7168 022c 00000000 		.4byte	.LFB23
 7169 0230 BC000000 		.4byte	.LFE23
 7170 0234 20000000 		.4byte	.LLST1
 7171 0238 01       		.byte	0x1
 7172 0239 4D020000 		.4byte	0x24d
 7173 023d 12       		.uleb128 0x12
 7174 023e B3080000 		.4byte	.LASF31
 7175 0242 01       		.byte	0x1
 7176 0243 7601     		.2byte	0x176
 7177 0245 29000000 		.4byte	0x29
 7178 0249 02       		.byte	0x2
 7179 024a 91       		.byte	0x91
 7180 024b 7F       		.sleb128 -1
 7181 024c 00       		.byte	0
 7182 024d 11       		.uleb128 0x11
 7183 024e 01       		.byte	0x1
 7184 024f 38070000 		.4byte	.LASF30
 7185 0253 01       		.byte	0x1
 7186 0254 9C01     		.2byte	0x19c
 7187 0256 01       		.byte	0x1
 7188 0257 29000000 		.4byte	0x29
 7189 025b 00000000 		.4byte	.LFB24
 7190 025f 70000000 		.4byte	.LFE24
 7191 0263 40000000 		.4byte	.LLST2
 7192 0267 01       		.byte	0x1
 7193 0268 8B020000 		.4byte	0x28b
 7194 026c 13       		.uleb128 0x13
 7195 026d 74696D00 		.ascii	"tim\000"
 7196 0271 01       		.byte	0x1
 7197 0272 9C01     		.2byte	0x19c
 7198 0274 49000000 		.4byte	0x49
 7199 0278 02       		.byte	0x2
 7200 0279 91       		.byte	0x91
 7201 027a 76       		.sleb128 -10
 7202 027b 12       		.uleb128 0x12
 7203 027c B3080000 		.4byte	.LASF31
 7204 0280 01       		.byte	0x1
 7205 0281 9E01     		.2byte	0x19e
 7206 0283 29000000 		.4byte	0x29
 7207 0287 02       		.byte	0x2
 7208 0288 91       		.byte	0x91
 7209 0289 7F       		.sleb128 -1
 7210 028a 00       		.byte	0
 7211 028b 14       		.uleb128 0x14
 7212 028c 01       		.byte	0x1
 7213 028d C3060000 		.4byte	.LASF65
 7214 0291 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 174


 7215 0292 B701     		.2byte	0x1b7
 7216 0294 01       		.byte	0x1
 7217 0295 00000000 		.4byte	.LFB25
 7218 0299 CC030000 		.4byte	.LFE25
 7219 029d 60000000 		.4byte	.LLST3
 7220 02a1 01       		.byte	0x1
 7221 02a2 77030000 		.4byte	0x377
 7222 02a6 15       		.uleb128 0x15
 7223 02a7 91040000 		.4byte	.LASF32
 7224 02ab 01       		.byte	0x1
 7225 02ac B701     		.2byte	0x1b7
 7226 02ae B0010000 		.4byte	0x1b0
 7227 02b2 02       		.byte	0x2
 7228 02b3 91       		.byte	0x91
 7229 02b4 6C       		.sleb128 -20
 7230 02b5 15       		.uleb128 0x15
 7231 02b6 0B070000 		.4byte	.LASF33
 7232 02ba 01       		.byte	0x1
 7233 02bb B701     		.2byte	0x1b7
 7234 02bd B0010000 		.4byte	0x1b0
 7235 02c1 02       		.byte	0x2
 7236 02c2 91       		.byte	0x91
 7237 02c3 68       		.sleb128 -24
 7238 02c4 15       		.uleb128 0x15
 7239 02c5 19070000 		.4byte	.LASF34
 7240 02c9 01       		.byte	0x1
 7241 02ca B701     		.2byte	0x1b7
 7242 02cc B0010000 		.4byte	0x1b0
 7243 02d0 02       		.byte	0x2
 7244 02d1 91       		.byte	0x91
 7245 02d2 64       		.sleb128 -28
 7246 02d3 15       		.uleb128 0x15
 7247 02d4 91050000 		.4byte	.LASF35
 7248 02d8 01       		.byte	0x1
 7249 02d9 B701     		.2byte	0x1b7
 7250 02db B6010000 		.4byte	0x1b6
 7251 02df 02       		.byte	0x2
 7252 02e0 91       		.byte	0x91
 7253 02e1 60       		.sleb128 -32
 7254 02e2 15       		.uleb128 0x15
 7255 02e3 43010000 		.4byte	.LASF36
 7256 02e7 01       		.byte	0x1
 7257 02e8 B701     		.2byte	0x1b7
 7258 02ea B6010000 		.4byte	0x1b6
 7259 02ee 02       		.byte	0x2
 7260 02ef 91       		.byte	0x91
 7261 02f0 00       		.sleb128 0
 7262 02f1 15       		.uleb128 0x15
 7263 02f2 89010000 		.4byte	.LASF37
 7264 02f6 01       		.byte	0x1
 7265 02f7 B701     		.2byte	0x1b7
 7266 02f9 B6010000 		.4byte	0x1b6
 7267 02fd 02       		.byte	0x2
 7268 02fe 91       		.byte	0x91
 7269 02ff 04       		.sleb128 4
 7270 0300 15       		.uleb128 0x15
 7271 0301 62080000 		.4byte	.LASF38
ARM GAS  /tmp/cc4fp2Bh.s 			page 175


 7272 0305 01       		.byte	0x1
 7273 0306 B701     		.2byte	0x1b7
 7274 0308 B6010000 		.4byte	0x1b6
 7275 030c 02       		.byte	0x2
 7276 030d 91       		.byte	0x91
 7277 030e 08       		.sleb128 8
 7278 030f 15       		.uleb128 0x15
 7279 0310 A8050000 		.4byte	.LASF39
 7280 0314 01       		.byte	0x1
 7281 0315 B701     		.2byte	0x1b7
 7282 0317 B6010000 		.4byte	0x1b6
 7283 031b 02       		.byte	0x2
 7284 031c 91       		.byte	0x91
 7285 031d 0C       		.sleb128 12
 7286 031e 15       		.uleb128 0x15
 7287 031f 5E010000 		.4byte	.LASF40
 7288 0323 01       		.byte	0x1
 7289 0324 B701     		.2byte	0x1b7
 7290 0326 B6010000 		.4byte	0x1b6
 7291 032a 02       		.byte	0x2
 7292 032b 91       		.byte	0x91
 7293 032c 10       		.sleb128 16
 7294 032d 15       		.uleb128 0x15
 7295 032e A2010000 		.4byte	.LASF41
 7296 0332 01       		.byte	0x1
 7297 0333 B701     		.2byte	0x1b7
 7298 0335 B6010000 		.4byte	0x1b6
 7299 0339 02       		.byte	0x2
 7300 033a 91       		.byte	0x91
 7301 033b 14       		.sleb128 20
 7302 033c 15       		.uleb128 0x15
 7303 033d 7F080000 		.4byte	.LASF42
 7304 0341 01       		.byte	0x1
 7305 0342 B701     		.2byte	0x1b7
 7306 0344 B6010000 		.4byte	0x1b6
 7307 0348 02       		.byte	0x2
 7308 0349 91       		.byte	0x91
 7309 034a 18       		.sleb128 24
 7310 034b 15       		.uleb128 0x15
 7311 034c 3A040000 		.4byte	.LASF43
 7312 0350 01       		.byte	0x1
 7313 0351 B701     		.2byte	0x1b7
 7314 0353 B6010000 		.4byte	0x1b6
 7315 0357 02       		.byte	0x2
 7316 0358 91       		.byte	0x91
 7317 0359 1C       		.sleb128 28
 7318 035a 15       		.uleb128 0x15
 7319 035b D4080000 		.4byte	.LASF44
 7320 035f 01       		.byte	0x1
 7321 0360 B701     		.2byte	0x1b7
 7322 0362 B6010000 		.4byte	0x1b6
 7323 0366 02       		.byte	0x2
 7324 0367 91       		.byte	0x91
 7325 0368 20       		.sleb128 32
 7326 0369 16       		.uleb128 0x16
 7327 036a 6900     		.ascii	"i\000"
 7328 036c 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 176


 7329 036d B901     		.2byte	0x1b9
 7330 036f 29000000 		.4byte	0x29
 7331 0373 02       		.byte	0x2
 7332 0374 91       		.byte	0x91
 7333 0375 77       		.sleb128 -9
 7334 0376 00       		.byte	0
 7335 0377 17       		.uleb128 0x17
 7336 0378 01       		.byte	0x1
 7337 0379 31020000 		.4byte	.LASF45
 7338 037d 01       		.byte	0x1
 7339 037e 8502     		.2byte	0x285
 7340 0380 01       		.byte	0x1
 7341 0381 BC010000 		.4byte	0x1bc
 7342 0385 00000000 		.4byte	.LFB26
 7343 0389 70000000 		.4byte	.LFE26
 7344 038d 8C000000 		.4byte	.LLST4
 7345 0391 01       		.byte	0x1
 7346 0392 A4030000 		.4byte	0x3a4
 7347 0396 16       		.uleb128 0x16
 7348 0397 6900     		.ascii	"i\000"
 7349 0399 01       		.byte	0x1
 7350 039a 8702     		.2byte	0x287
 7351 039c 29000000 		.4byte	0x29
 7352 03a0 02       		.byte	0x2
 7353 03a1 91       		.byte	0x91
 7354 03a2 77       		.sleb128 -9
 7355 03a3 00       		.byte	0
 7356 03a4 18       		.uleb128 0x18
 7357 03a5 01       		.byte	0x1
 7358 03a6 6F000000 		.4byte	.LASF46
 7359 03aa 01       		.byte	0x1
 7360 03ab A202     		.2byte	0x2a2
 7361 03ad 01       		.byte	0x1
 7362 03ae 00000000 		.4byte	.LFB27
 7363 03b2 98020000 		.4byte	.LFE27
 7364 03b6 B8000000 		.4byte	.LLST5
 7365 03ba 01       		.byte	0x1
 7366 03bb 17       		.uleb128 0x17
 7367 03bc 01       		.byte	0x1
 7368 03bd A3060000 		.4byte	.LASF47
 7369 03c1 01       		.byte	0x1
 7370 03c2 4A03     		.2byte	0x34a
 7371 03c4 01       		.byte	0x1
 7372 03c5 BC010000 		.4byte	0x1bc
 7373 03c9 00000000 		.4byte	.LFB28
 7374 03cd 50010000 		.4byte	.LFE28
 7375 03d1 D8000000 		.4byte	.LLST6
 7376 03d5 01       		.byte	0x1
 7377 03d6 17040000 		.4byte	0x417
 7378 03da 15       		.uleb128 0x15
 7379 03db 69050000 		.4byte	.LASF48
 7380 03df 01       		.byte	0x1
 7381 03e0 4A03     		.2byte	0x34a
 7382 03e2 B6010000 		.4byte	0x1b6
 7383 03e6 02       		.byte	0x2
 7384 03e7 91       		.byte	0x91
 7385 03e8 74       		.sleb128 -12
ARM GAS  /tmp/cc4fp2Bh.s 			page 177


 7386 03e9 15       		.uleb128 0x15
 7387 03ea 05010000 		.4byte	.LASF49
 7388 03ee 01       		.byte	0x1
 7389 03ef 4A03     		.2byte	0x34a
 7390 03f1 49000000 		.4byte	0x49
 7391 03f5 02       		.byte	0x2
 7392 03f6 91       		.byte	0x91
 7393 03f7 72       		.sleb128 -14
 7394 03f8 13       		.uleb128 0x13
 7395 03f9 72746100 		.ascii	"rta\000"
 7396 03fd 01       		.byte	0x1
 7397 03fe 4A03     		.2byte	0x34a
 7398 0400 29000000 		.4byte	0x29
 7399 0404 02       		.byte	0x2
 7400 0405 91       		.byte	0x91
 7401 0406 71       		.sleb128 -15
 7402 0407 15       		.uleb128 0x15
 7403 0408 F2060000 		.4byte	.LASF50
 7404 040c 01       		.byte	0x1
 7405 040d 4A03     		.2byte	0x34a
 7406 040f B6010000 		.4byte	0x1b6
 7407 0413 02       		.byte	0x2
 7408 0414 91       		.byte	0x91
 7409 0415 6C       		.sleb128 -20
 7410 0416 00       		.byte	0
 7411 0417 17       		.uleb128 0x17
 7412 0418 01       		.byte	0x1
 7413 0419 F4040000 		.4byte	.LASF51
 7414 041d 01       		.byte	0x1
 7415 041e A103     		.2byte	0x3a1
 7416 0420 01       		.byte	0x1
 7417 0421 BC010000 		.4byte	0x1bc
 7418 0425 00000000 		.4byte	.LFB29
 7419 0429 F4020000 		.4byte	.LFE29
 7420 042d 04010000 		.4byte	.LLST7
 7421 0431 01       		.byte	0x1
 7422 0432 53040000 		.4byte	0x453
 7423 0436 15       		.uleb128 0x15
 7424 0437 05010000 		.4byte	.LASF49
 7425 043b 01       		.byte	0x1
 7426 043c A103     		.2byte	0x3a1
 7427 043e 49000000 		.4byte	0x49
 7428 0442 02       		.byte	0x2
 7429 0443 91       		.byte	0x91
 7430 0444 6E       		.sleb128 -18
 7431 0445 16       		.uleb128 0x16
 7432 0446 6900     		.ascii	"i\000"
 7433 0448 01       		.byte	0x1
 7434 0449 A303     		.2byte	0x3a3
 7435 044b 29000000 		.4byte	0x29
 7436 044f 02       		.byte	0x2
 7437 0450 91       		.byte	0x91
 7438 0451 77       		.sleb128 -9
 7439 0452 00       		.byte	0
 7440 0453 17       		.uleb128 0x17
 7441 0454 01       		.byte	0x1
 7442 0455 74050000 		.4byte	.LASF52
ARM GAS  /tmp/cc4fp2Bh.s 			page 178


 7443 0459 01       		.byte	0x1
 7444 045a 5604     		.2byte	0x456
 7445 045c 01       		.byte	0x1
 7446 045d BC010000 		.4byte	0x1bc
 7447 0461 00000000 		.4byte	.LFB30
 7448 0465 70010000 		.4byte	.LFE30
 7449 0469 30010000 		.4byte	.LLST8
 7450 046d 01       		.byte	0x1
 7451 046e AD040000 		.4byte	0x4ad
 7452 0472 15       		.uleb128 0x15
 7453 0473 35050000 		.4byte	.LASF53
 7454 0477 01       		.byte	0x1
 7455 0478 5604     		.2byte	0x456
 7456 047a B6010000 		.4byte	0x1b6
 7457 047e 02       		.byte	0x2
 7458 047f 91       		.byte	0x91
 7459 0480 6C       		.sleb128 -20
 7460 0481 15       		.uleb128 0x15
 7461 0482 13020000 		.4byte	.LASF54
 7462 0486 01       		.byte	0x1
 7463 0487 5604     		.2byte	0x456
 7464 0489 B6010000 		.4byte	0x1b6
 7465 048d 02       		.byte	0x2
 7466 048e 91       		.byte	0x91
 7467 048f 68       		.sleb128 -24
 7468 0490 15       		.uleb128 0x15
 7469 0491 05010000 		.4byte	.LASF49
 7470 0495 01       		.byte	0x1
 7471 0496 5604     		.2byte	0x456
 7472 0498 49000000 		.4byte	0x49
 7473 049c 02       		.byte	0x2
 7474 049d 91       		.byte	0x91
 7475 049e 66       		.sleb128 -26
 7476 049f 16       		.uleb128 0x16
 7477 04a0 6900     		.ascii	"i\000"
 7478 04a2 01       		.byte	0x1
 7479 04a3 5804     		.2byte	0x458
 7480 04a5 29000000 		.4byte	0x29
 7481 04a9 02       		.byte	0x2
 7482 04aa 91       		.byte	0x91
 7483 04ab 77       		.sleb128 -9
 7484 04ac 00       		.byte	0
 7485 04ad 17       		.uleb128 0x17
 7486 04ae 01       		.byte	0x1
 7487 04af 27050000 		.4byte	.LASF55
 7488 04b3 01       		.byte	0x1
 7489 04b4 A604     		.2byte	0x4a6
 7490 04b6 01       		.byte	0x1
 7491 04b7 BC010000 		.4byte	0x1bc
 7492 04bb 00000000 		.4byte	.LFB31
 7493 04bf 80080000 		.4byte	.LFE31
 7494 04c3 5C010000 		.4byte	.LLST9
 7495 04c7 01       		.byte	0x1
 7496 04c8 52050000 		.4byte	0x552
 7497 04cc 13       		.uleb128 0x13
 7498 04cd 73696D00 		.ascii	"sim\000"
 7499 04d1 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 179


 7500 04d2 A604     		.2byte	0x4a6
 7501 04d4 BC010000 		.4byte	0x1bc
 7502 04d8 02       		.byte	0x2
 7503 04d9 91       		.byte	0x91
 7504 04da 6F       		.sleb128 -17
 7505 04db 15       		.uleb128 0x15
 7506 04dc D0060000 		.4byte	.LASF56
 7507 04e0 01       		.byte	0x1
 7508 04e1 A604     		.2byte	0x4a6
 7509 04e3 B6010000 		.4byte	0x1b6
 7510 04e7 02       		.byte	0x2
 7511 04e8 91       		.byte	0x91
 7512 04e9 68       		.sleb128 -24
 7513 04ea 15       		.uleb128 0x15
 7514 04eb 67000000 		.4byte	.LASF57
 7515 04ef 01       		.byte	0x1
 7516 04f0 A604     		.2byte	0x4a6
 7517 04f2 B6010000 		.4byte	0x1b6
 7518 04f6 02       		.byte	0x2
 7519 04f7 91       		.byte	0x91
 7520 04f8 64       		.sleb128 -28
 7521 04f9 15       		.uleb128 0x15
 7522 04fa 09000000 		.4byte	.LASF58
 7523 04fe 01       		.byte	0x1
 7524 04ff A604     		.2byte	0x4a6
 7525 0501 B6010000 		.4byte	0x1b6
 7526 0505 02       		.byte	0x2
 7527 0506 91       		.byte	0x91
 7528 0507 60       		.sleb128 -32
 7529 0508 15       		.uleb128 0x15
 7530 0509 CB080000 		.4byte	.LASF59
 7531 050d 01       		.byte	0x1
 7532 050e A604     		.2byte	0x4a6
 7533 0510 B6010000 		.4byte	0x1b6
 7534 0514 02       		.byte	0x2
 7535 0515 91       		.byte	0x91
 7536 0516 00       		.sleb128 0
 7537 0517 15       		.uleb128 0x15
 7538 0518 07020000 		.4byte	.LASF60
 7539 051c 01       		.byte	0x1
 7540 051d A604     		.2byte	0x4a6
 7541 051f B6010000 		.4byte	0x1b6
 7542 0523 02       		.byte	0x2
 7543 0524 91       		.byte	0x91
 7544 0525 04       		.sleb128 4
 7545 0526 15       		.uleb128 0x15
 7546 0527 2D030000 		.4byte	.LASF61
 7547 052b 01       		.byte	0x1
 7548 052c A604     		.2byte	0x4a6
 7549 052e B6010000 		.4byte	0x1b6
 7550 0532 02       		.byte	0x2
 7551 0533 91       		.byte	0x91
 7552 0534 08       		.sleb128 8
 7553 0535 15       		.uleb128 0x15
 7554 0536 05010000 		.4byte	.LASF49
 7555 053a 01       		.byte	0x1
 7556 053b A604     		.2byte	0x4a6
ARM GAS  /tmp/cc4fp2Bh.s 			page 180


 7557 053d 49000000 		.4byte	0x49
 7558 0541 02       		.byte	0x2
 7559 0542 91       		.byte	0x91
 7560 0543 0C       		.sleb128 12
 7561 0544 16       		.uleb128 0x16
 7562 0545 6900     		.ascii	"i\000"
 7563 0547 01       		.byte	0x1
 7564 0548 A804     		.2byte	0x4a8
 7565 054a 29000000 		.4byte	0x29
 7566 054e 02       		.byte	0x2
 7567 054f 91       		.byte	0x91
 7568 0550 77       		.sleb128 -9
 7569 0551 00       		.byte	0
 7570 0552 17       		.uleb128 0x17
 7571 0553 01       		.byte	0x1
 7572 0554 9E040000 		.4byte	.LASF62
 7573 0558 01       		.byte	0x1
 7574 0559 3006     		.2byte	0x630
 7575 055b 01       		.byte	0x1
 7576 055c BC010000 		.4byte	0x1bc
 7577 0560 00000000 		.4byte	.LFB32
 7578 0564 84000000 		.4byte	.LFE32
 7579 0568 88010000 		.4byte	.LLST10
 7580 056c 01       		.byte	0x1
 7581 056d 8E050000 		.4byte	0x58e
 7582 0571 13       		.uleb128 0x13
 7583 0572 73696D00 		.ascii	"sim\000"
 7584 0576 01       		.byte	0x1
 7585 0577 3006     		.2byte	0x630
 7586 0579 29000000 		.4byte	0x29
 7587 057d 02       		.byte	0x2
 7588 057e 91       		.byte	0x91
 7589 057f 6F       		.sleb128 -17
 7590 0580 16       		.uleb128 0x16
 7591 0581 6900     		.ascii	"i\000"
 7592 0583 01       		.byte	0x1
 7593 0584 3306     		.2byte	0x633
 7594 0586 29000000 		.4byte	0x29
 7595 058a 02       		.byte	0x2
 7596 058b 91       		.byte	0x91
 7597 058c 77       		.sleb128 -9
 7598 058d 00       		.byte	0
 7599 058e 17       		.uleb128 0x17
 7600 058f 01       		.byte	0x1
 7601 0590 30040000 		.4byte	.LASF63
 7602 0594 01       		.byte	0x1
 7603 0595 4806     		.2byte	0x648
 7604 0597 01       		.byte	0x1
 7605 0598 BC010000 		.4byte	0x1bc
 7606 059c 00000000 		.4byte	.LFB33
 7607 05a0 2C010000 		.4byte	.LFE33
 7608 05a4 B4010000 		.4byte	.LLST11
 7609 05a8 01       		.byte	0x1
 7610 05a9 D9050000 		.4byte	0x5d9
 7611 05ad 15       		.uleb128 0x15
 7612 05ae 35050000 		.4byte	.LASF53
 7613 05b2 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 181


 7614 05b3 4806     		.2byte	0x648
 7615 05b5 B6010000 		.4byte	0x1b6
 7616 05b9 02       		.byte	0x2
 7617 05ba 91       		.byte	0x91
 7618 05bb 6C       		.sleb128 -20
 7619 05bc 15       		.uleb128 0x15
 7620 05bd 05010000 		.4byte	.LASF49
 7621 05c1 01       		.byte	0x1
 7622 05c2 4806     		.2byte	0x648
 7623 05c4 49000000 		.4byte	0x49
 7624 05c8 02       		.byte	0x2
 7625 05c9 91       		.byte	0x91
 7626 05ca 6A       		.sleb128 -22
 7627 05cb 16       		.uleb128 0x16
 7628 05cc 6900     		.ascii	"i\000"
 7629 05ce 01       		.byte	0x1
 7630 05cf 4A06     		.2byte	0x64a
 7631 05d1 29000000 		.4byte	0x29
 7632 05d5 02       		.byte	0x2
 7633 05d6 91       		.byte	0x91
 7634 05d7 77       		.sleb128 -9
 7635 05d8 00       		.byte	0
 7636 05d9 10       		.uleb128 0x10
 7637 05da 01       		.byte	0x1
 7638 05db AE030000 		.4byte	.LASF64
 7639 05df 01       		.byte	0x1
 7640 05e0 D506     		.2byte	0x6d5
 7641 05e2 01       		.byte	0x1
 7642 05e3 00000000 		.4byte	.LFB34
 7643 05e7 F8000000 		.4byte	.LFE34
 7644 05eb 02       		.byte	0x2
 7645 05ec 7D       		.byte	0x7d
 7646 05ed 00       		.sleb128 0
 7647 05ee 01       		.byte	0x1
 7648 05ef 14       		.uleb128 0x14
 7649 05f0 01       		.byte	0x1
 7650 05f1 96030000 		.4byte	.LASF66
 7651 05f5 01       		.byte	0x1
 7652 05f6 F806     		.2byte	0x6f8
 7653 05f8 01       		.byte	0x1
 7654 05f9 00000000 		.4byte	.LFB35
 7655 05fd 30060000 		.4byte	.LFE35
 7656 0601 E0010000 		.4byte	.LLST12
 7657 0605 01       		.byte	0x1
 7658 0606 72060000 		.4byte	0x672
 7659 060a 15       		.uleb128 0x15
 7660 060b C5010000 		.4byte	.LASF67
 7661 060f 01       		.byte	0x1
 7662 0610 F806     		.2byte	0x6f8
 7663 0612 B0010000 		.4byte	0x1b0
 7664 0616 02       		.byte	0x2
 7665 0617 91       		.byte	0x91
 7666 0618 6C       		.sleb128 -20
 7667 0619 15       		.uleb128 0x15
 7668 061a 67030000 		.4byte	.LASF68
 7669 061e 01       		.byte	0x1
 7670 061f F806     		.2byte	0x6f8
ARM GAS  /tmp/cc4fp2Bh.s 			page 182


 7671 0621 B6010000 		.4byte	0x1b6
 7672 0625 02       		.byte	0x2
 7673 0626 91       		.byte	0x91
 7674 0627 68       		.sleb128 -24
 7675 0628 15       		.uleb128 0x15
 7676 0629 26040000 		.4byte	.LASF69
 7677 062d 01       		.byte	0x1
 7678 062e F806     		.2byte	0x6f8
 7679 0630 B0010000 		.4byte	0x1b0
 7680 0634 02       		.byte	0x2
 7681 0635 91       		.byte	0x91
 7682 0636 64       		.sleb128 -28
 7683 0637 15       		.uleb128 0x15
 7684 0638 22010000 		.4byte	.LASF70
 7685 063c 01       		.byte	0x1
 7686 063d F806     		.2byte	0x6f8
 7687 063f B0010000 		.4byte	0x1b0
 7688 0643 02       		.byte	0x2
 7689 0644 91       		.byte	0x91
 7690 0645 60       		.sleb128 -32
 7691 0646 15       		.uleb128 0x15
 7692 0647 7B060000 		.4byte	.LASF71
 7693 064b 01       		.byte	0x1
 7694 064c F806     		.2byte	0x6f8
 7695 064e B6010000 		.4byte	0x1b6
 7696 0652 02       		.byte	0x2
 7697 0653 91       		.byte	0x91
 7698 0654 00       		.sleb128 0
 7699 0655 16       		.uleb128 0x16
 7700 0656 6900     		.ascii	"i\000"
 7701 0658 01       		.byte	0x1
 7702 0659 FA06     		.2byte	0x6fa
 7703 065b 29000000 		.4byte	0x29
 7704 065f 02       		.byte	0x2
 7705 0660 91       		.byte	0x91
 7706 0661 77       		.sleb128 -9
 7707 0662 12       		.uleb128 0x12
 7708 0663 43050000 		.4byte	.LASF72
 7709 0667 01       		.byte	0x1
 7710 0668 FB06     		.2byte	0x6fb
 7711 066a 29000000 		.4byte	0x29
 7712 066e 02       		.byte	0x2
 7713 066f 91       		.byte	0x91
 7714 0670 76       		.sleb128 -10
 7715 0671 00       		.byte	0
 7716 0672 17       		.uleb128 0x17
 7717 0673 01       		.byte	0x1
 7718 0674 4A020000 		.4byte	.LASF73
 7719 0678 01       		.byte	0x1
 7720 0679 0008     		.2byte	0x800
 7721 067b 01       		.byte	0x1
 7722 067c BC010000 		.4byte	0x1bc
 7723 0680 00000000 		.4byte	.LFB36
 7724 0684 E8060000 		.4byte	.LFE36
 7725 0688 0C020000 		.4byte	.LLST13
 7726 068c 01       		.byte	0x1
 7727 068d 17070000 		.4byte	0x717
ARM GAS  /tmp/cc4fp2Bh.s 			page 183


 7728 0691 13       		.uleb128 0x13
 7729 0692 73696D00 		.ascii	"sim\000"
 7730 0696 01       		.byte	0x1
 7731 0697 0008     		.2byte	0x800
 7732 0699 BC010000 		.4byte	0x1bc
 7733 069d 02       		.byte	0x2
 7734 069e 91       		.byte	0x91
 7735 069f 6F       		.sleb128 -17
 7736 06a0 15       		.uleb128 0x15
 7737 06a1 D0060000 		.4byte	.LASF56
 7738 06a5 01       		.byte	0x1
 7739 06a6 0008     		.2byte	0x800
 7740 06a8 B6010000 		.4byte	0x1b6
 7741 06ac 02       		.byte	0x2
 7742 06ad 91       		.byte	0x91
 7743 06ae 68       		.sleb128 -24
 7744 06af 15       		.uleb128 0x15
 7745 06b0 67000000 		.4byte	.LASF57
 7746 06b4 01       		.byte	0x1
 7747 06b5 0008     		.2byte	0x800
 7748 06b7 B6010000 		.4byte	0x1b6
 7749 06bb 02       		.byte	0x2
 7750 06bc 91       		.byte	0x91
 7751 06bd 64       		.sleb128 -28
 7752 06be 15       		.uleb128 0x15
 7753 06bf 09000000 		.4byte	.LASF58
 7754 06c3 01       		.byte	0x1
 7755 06c4 0008     		.2byte	0x800
 7756 06c6 B6010000 		.4byte	0x1b6
 7757 06ca 02       		.byte	0x2
 7758 06cb 91       		.byte	0x91
 7759 06cc 60       		.sleb128 -32
 7760 06cd 15       		.uleb128 0x15
 7761 06ce CB080000 		.4byte	.LASF59
 7762 06d2 01       		.byte	0x1
 7763 06d3 0008     		.2byte	0x800
 7764 06d5 B6010000 		.4byte	0x1b6
 7765 06d9 02       		.byte	0x2
 7766 06da 91       		.byte	0x91
 7767 06db 00       		.sleb128 0
 7768 06dc 15       		.uleb128 0x15
 7769 06dd 07020000 		.4byte	.LASF60
 7770 06e1 01       		.byte	0x1
 7771 06e2 0008     		.2byte	0x800
 7772 06e4 B6010000 		.4byte	0x1b6
 7773 06e8 02       		.byte	0x2
 7774 06e9 91       		.byte	0x91
 7775 06ea 04       		.sleb128 4
 7776 06eb 15       		.uleb128 0x15
 7777 06ec 2D030000 		.4byte	.LASF61
 7778 06f0 01       		.byte	0x1
 7779 06f1 0008     		.2byte	0x800
 7780 06f3 B6010000 		.4byte	0x1b6
 7781 06f7 02       		.byte	0x2
 7782 06f8 91       		.byte	0x91
 7783 06f9 08       		.sleb128 8
 7784 06fa 15       		.uleb128 0x15
ARM GAS  /tmp/cc4fp2Bh.s 			page 184


 7785 06fb 05010000 		.4byte	.LASF49
 7786 06ff 01       		.byte	0x1
 7787 0700 0008     		.2byte	0x800
 7788 0702 49000000 		.4byte	0x49
 7789 0706 02       		.byte	0x2
 7790 0707 91       		.byte	0x91
 7791 0708 0C       		.sleb128 12
 7792 0709 16       		.uleb128 0x16
 7793 070a 6900     		.ascii	"i\000"
 7794 070c 01       		.byte	0x1
 7795 070d 0208     		.2byte	0x802
 7796 070f 29000000 		.4byte	0x29
 7797 0713 02       		.byte	0x2
 7798 0714 91       		.byte	0x91
 7799 0715 77       		.sleb128 -9
 7800 0716 00       		.byte	0
 7801 0717 06       		.uleb128 0x6
 7802 0718 BC010000 		.4byte	0x1bc
 7803 071c 27070000 		.4byte	0x727
 7804 0720 07       		.uleb128 0x7
 7805 0721 9B000000 		.4byte	0x9b
 7806 0725 FF       		.byte	0xff
 7807 0726 00       		.byte	0
 7808 0727 19       		.uleb128 0x19
 7809 0728 3C020000 		.4byte	.LASF74
 7810 072c 01       		.byte	0x1
 7811 072d 0D       		.byte	0xd
 7812 072e 39070000 		.4byte	0x739
 7813 0732 01       		.byte	0x1
 7814 0733 05       		.byte	0x5
 7815 0734 03       		.byte	0x3
 7816 0735 00000000 		.4byte	buffUARTGSMrx
 7817 0739 05       		.uleb128 0x5
 7818 073a 17070000 		.4byte	0x717
 7819 073e 19       		.uleb128 0x19
 7820 073f 82040000 		.4byte	.LASF75
 7821 0743 01       		.byte	0x1
 7822 0744 0E       		.byte	0xe
 7823 0745 50070000 		.4byte	0x750
 7824 0749 01       		.byte	0x1
 7825 074a 05       		.byte	0x5
 7826 074b 03       		.byte	0x3
 7827 074c 00000000 		.4byte	buffUARTGSMrx2
 7828 0750 05       		.uleb128 0x5
 7829 0751 17070000 		.4byte	0x717
 7830 0755 19       		.uleb128 0x19
 7831 0756 E6010000 		.4byte	.LASF76
 7832 075a 01       		.byte	0x1
 7833 075b 0F       		.byte	0xf
 7834 075c 67070000 		.4byte	0x767
 7835 0760 01       		.byte	0x1
 7836 0761 05       		.byte	0x5
 7837 0762 03       		.byte	0x3
 7838 0763 00000000 		.4byte	pBuffUARTGSMrxW
 7839 0767 0C       		.uleb128 0xc
 7840 0768 04       		.byte	0x4
 7841 0769 6D070000 		.4byte	0x76d
ARM GAS  /tmp/cc4fp2Bh.s 			page 185


 7842 076d 05       		.uleb128 0x5
 7843 076e BC010000 		.4byte	0x1bc
 7844 0772 19       		.uleb128 0x19
 7845 0773 D6010000 		.4byte	.LASF77
 7846 0777 01       		.byte	0x1
 7847 0778 10       		.byte	0x10
 7848 0779 67070000 		.4byte	0x767
 7849 077d 01       		.byte	0x1
 7850 077e 05       		.byte	0x5
 7851 077f 03       		.byte	0x3
 7852 0780 00000000 		.4byte	pBuffUARTGSMrxR
 7853 0784 19       		.uleb128 0x19
 7854 0785 C1030000 		.4byte	.LASF78
 7855 0789 01       		.byte	0x1
 7856 078a 11       		.byte	0x11
 7857 078b 6D070000 		.4byte	0x76d
 7858 078f 01       		.byte	0x1
 7859 0790 05       		.byte	0x5
 7860 0791 03       		.byte	0x3
 7861 0792 00000000 		.4byte	PacketReadyUARTGSM
 7862 0796 19       		.uleb128 0x19
 7863 0797 F9020000 		.4byte	.LASF79
 7864 079b 01       		.byte	0x1
 7865 079c 13       		.byte	0x13
 7866 079d A8070000 		.4byte	0x7a8
 7867 07a1 01       		.byte	0x1
 7868 07a2 05       		.byte	0x5
 7869 07a3 03       		.byte	0x3
 7870 07a4 00000000 		.4byte	buffUARTGSMtx
 7871 07a8 05       		.uleb128 0x5
 7872 07a9 17070000 		.4byte	0x717
 7873 07ad 19       		.uleb128 0x19
 7874 07ae 42000000 		.4byte	.LASF80
 7875 07b2 01       		.byte	0x1
 7876 07b3 14       		.byte	0x14
 7877 07b4 67070000 		.4byte	0x767
 7878 07b8 01       		.byte	0x1
 7879 07b9 05       		.byte	0x5
 7880 07ba 03       		.byte	0x3
 7881 07bb 00000000 		.4byte	pBuffUARTGSMtxR
 7882 07bf 19       		.uleb128 0x19
 7883 07c0 57000000 		.4byte	.LASF81
 7884 07c4 01       		.byte	0x1
 7885 07c5 15       		.byte	0x15
 7886 07c6 67070000 		.4byte	0x767
 7887 07ca 01       		.byte	0x1
 7888 07cb 05       		.byte	0x5
 7889 07cc 03       		.byte	0x3
 7890 07cd 00000000 		.4byte	pBuffUARTGSMtxW
 7891 07d1 19       		.uleb128 0x19
 7892 07d2 18040000 		.4byte	.LASF82
 7893 07d6 01       		.byte	0x1
 7894 07d7 18       		.byte	0x18
 7895 07d8 29000000 		.4byte	0x29
 7896 07dc 01       		.byte	0x1
 7897 07dd 05       		.byte	0x5
 7898 07de 03       		.byte	0x3
ARM GAS  /tmp/cc4fp2Bh.s 			page 186


 7899 07df 00000000 		.4byte	GSMStartState
 7900 07e3 19       		.uleb128 0x19
 7901 07e4 55080000 		.4byte	.LASF83
 7902 07e8 01       		.byte	0x1
 7903 07e9 19       		.byte	0x19
 7904 07ea F5070000 		.4byte	0x7f5
 7905 07ee 01       		.byte	0x1
 7906 07ef 05       		.byte	0x5
 7907 07f0 03       		.byte	0x3
 7908 07f1 00000000 		.4byte	GSMStartTime
 7909 07f5 05       		.uleb128 0x5
 7910 07f6 49000000 		.4byte	0x49
 7911 07fa 19       		.uleb128 0x19
 7912 07fb F3000000 		.4byte	.LASF84
 7913 07ff 01       		.byte	0x1
 7914 0800 1A       		.byte	0x1a
 7915 0801 F5070000 		.4byte	0x7f5
 7916 0805 01       		.byte	0x1
 7917 0806 05       		.byte	0x5
 7918 0807 03       		.byte	0x3
 7919 0808 00000000 		.4byte	GSMGeneralTimeOut
 7920 080c 19       		.uleb128 0x19
 7921 080d 4B060000 		.4byte	.LASF85
 7922 0811 01       		.byte	0x1
 7923 0812 1D       		.byte	0x1d
 7924 0813 BC010000 		.4byte	0x1bc
 7925 0817 01       		.byte	0x1
 7926 0818 05       		.byte	0x5
 7927 0819 03       		.byte	0x3
 7928 081a 00000000 		.4byte	GSMSendCommandState
 7929 081e 19       		.uleb128 0x19
 7930 081f 48050000 		.4byte	.LASF86
 7931 0823 01       		.byte	0x1
 7932 0824 1E       		.byte	0x1e
 7933 0825 BC010000 		.4byte	0x1bc
 7934 0829 01       		.byte	0x1
 7935 082a 05       		.byte	0x5
 7936 082b 03       		.byte	0x3
 7937 082c 00000000 		.4byte	GSMSendCommandFlag
 7938 0830 19       		.uleb128 0x19
 7939 0831 DD000000 		.4byte	.LASF87
 7940 0835 01       		.byte	0x1
 7941 0836 1F       		.byte	0x1f
 7942 0837 F5070000 		.4byte	0x7f5
 7943 083b 01       		.byte	0x1
 7944 083c 05       		.byte	0x5
 7945 083d 03       		.byte	0x3
 7946 083e 00000000 		.4byte	GSMSendCommandTimeOut
 7947 0842 19       		.uleb128 0x19
 7948 0843 42070000 		.4byte	.LASF88
 7949 0847 01       		.byte	0x1
 7950 0848 20       		.byte	0x20
 7951 0849 BC010000 		.4byte	0x1bc
 7952 084d 01       		.byte	0x1
 7953 084e 05       		.byte	0x5
 7954 084f 03       		.byte	0x3
 7955 0850 00000000 		.4byte	GSMSendCommandIntento
ARM GAS  /tmp/cc4fp2Bh.s 			page 187


 7956 0854 19       		.uleb128 0x19
 7957 0855 79010000 		.4byte	.LASF89
 7958 0859 01       		.byte	0x1
 7959 085a 23       		.byte	0x23
 7960 085b BC010000 		.4byte	0x1bc
 7961 085f 01       		.byte	0x1
 7962 0860 05       		.byte	0x5
 7963 0861 03       		.byte	0x3
 7964 0862 00000000 		.4byte	GSMSendSMSState
 7965 0866 19       		.uleb128 0x19
 7966 0867 2B010000 		.4byte	.LASF90
 7967 086b 01       		.byte	0x1
 7968 086c 24       		.byte	0x24
 7969 086d BC010000 		.4byte	0x1bc
 7970 0871 01       		.byte	0x1
 7971 0872 05       		.byte	0x5
 7972 0873 03       		.byte	0x3
 7973 0874 00000000 		.4byte	GSMSendSMSFlag
 7974 0878 19       		.uleb128 0x19
 7975 0879 D8050000 		.4byte	.LASF91
 7976 087d 01       		.byte	0x1
 7977 087e 25       		.byte	0x25
 7978 087f F5070000 		.4byte	0x7f5
 7979 0883 01       		.byte	0x1
 7980 0884 05       		.byte	0x5
 7981 0885 03       		.byte	0x3
 7982 0886 00000000 		.4byte	GSMSendSMSTimeOut
 7983 088a 06       		.uleb128 0x6
 7984 088b BC010000 		.4byte	0x1bc
 7985 088f 9A080000 		.4byte	0x89a
 7986 0893 07       		.uleb128 0x7
 7987 0894 9B000000 		.4byte	0x9b
 7988 0898 1F       		.byte	0x1f
 7989 0899 00       		.byte	0
 7990 089a 19       		.uleb128 0x19
 7991 089b D4030000 		.4byte	.LASF92
 7992 089f 01       		.byte	0x1
 7993 08a0 26       		.byte	0x26
 7994 08a1 8A080000 		.4byte	0x88a
 7995 08a5 01       		.byte	0x1
 7996 08a6 05       		.byte	0x5
 7997 08a7 03       		.byte	0x3
 7998 08a8 00000000 		.4byte	GSMSendSMSbuffAux
 7999 08ac 19       		.uleb128 0x19
 8000 08ad 9F030000 		.4byte	.LASF93
 8001 08b1 01       		.byte	0x1
 8002 08b2 29       		.byte	0x29
 8003 08b3 BC010000 		.4byte	0x1bc
 8004 08b7 01       		.byte	0x1
 8005 08b8 05       		.byte	0x5
 8006 08b9 03       		.byte	0x3
 8007 08ba 00000000 		.4byte	GSMConfigState
 8008 08be 19       		.uleb128 0x19
 8009 08bf 0E090000 		.4byte	.LASF94
 8010 08c3 01       		.byte	0x1
 8011 08c4 2A       		.byte	0x2a
 8012 08c5 F5070000 		.4byte	0x7f5
ARM GAS  /tmp/cc4fp2Bh.s 			page 188


 8013 08c9 01       		.byte	0x1
 8014 08ca 05       		.byte	0x5
 8015 08cb 03       		.byte	0x3
 8016 08cc 00000000 		.4byte	GSMConfigTimeOut
 8017 08d0 19       		.uleb128 0x19
 8018 08d1 58070000 		.4byte	.LASF95
 8019 08d5 01       		.byte	0x1
 8020 08d6 2B       		.byte	0x2b
 8021 08d7 F5070000 		.4byte	0x7f5
 8022 08db 01       		.byte	0x1
 8023 08dc 05       		.byte	0x5
 8024 08dd 03       		.byte	0x3
 8025 08de 00000000 		.4byte	GSMConfigTime
 8026 08e2 19       		.uleb128 0x19
 8027 08e3 52030000 		.4byte	.LASF96
 8028 08e7 01       		.byte	0x1
 8029 08e8 2E       		.byte	0x2e
 8030 08e9 49000000 		.4byte	0x49
 8031 08ed 01       		.byte	0x1
 8032 08ee 05       		.byte	0x5
 8033 08ef 03       		.byte	0x3
 8034 08f0 00000000 		.4byte	GSMConfigGPRSTimeOut
 8035 08f4 19       		.uleb128 0x19
 8036 08f5 B8080000 		.4byte	.LASF97
 8037 08f9 01       		.byte	0x1
 8038 08fa 2F       		.byte	0x2f
 8039 08fb BC010000 		.4byte	0x1bc
 8040 08ff 01       		.byte	0x1
 8041 0900 05       		.byte	0x5
 8042 0901 03       		.byte	0x3
 8043 0902 00000000 		.4byte	GSMConfigGPRSState
 8044 0906 19       		.uleb128 0x19
 8045 0907 7F050000 		.4byte	.LASF98
 8046 090b 01       		.byte	0x1
 8047 090c 30       		.byte	0x30
 8048 090d BC010000 		.4byte	0x1bc
 8049 0911 01       		.byte	0x1
 8050 0912 05       		.byte	0x5
 8051 0913 03       		.byte	0x3
 8052 0914 00000000 		.4byte	GSMConfigGPRSflag
 8053 0918 19       		.uleb128 0x19
 8054 0919 A9040000 		.4byte	.LASF99
 8055 091d 01       		.byte	0x1
 8056 091e 31       		.byte	0x31
 8057 091f 8A080000 		.4byte	0x88a
 8058 0923 01       		.byte	0x1
 8059 0924 05       		.byte	0x5
 8060 0925 03       		.byte	0x3
 8061 0926 00000000 		.4byte	GSMbuffStatus
 8062 092a 06       		.uleb128 0x6
 8063 092b BC010000 		.4byte	0x1bc
 8064 092f 3A090000 		.4byte	0x93a
 8065 0933 07       		.uleb128 0x7
 8066 0934 9B000000 		.4byte	0x9b
 8067 0938 3F       		.byte	0x3f
 8068 0939 00       		.byte	0
 8069 093a 19       		.uleb128 0x19
ARM GAS  /tmp/cc4fp2Bh.s 			page 189


 8070 093b 72070000 		.4byte	.LASF100
 8071 093f 01       		.byte	0x1
 8072 0940 32       		.byte	0x32
 8073 0941 2A090000 		.4byte	0x92a
 8074 0945 01       		.byte	0x1
 8075 0946 05       		.byte	0x5
 8076 0947 03       		.byte	0x3
 8077 0948 00000000 		.4byte	GSMbuffGPRSCommand
 8078 094c 06       		.uleb128 0x6
 8079 094d BC010000 		.4byte	0x1bc
 8080 0951 5C090000 		.4byte	0x95c
 8081 0955 07       		.uleb128 0x7
 8082 0956 9B000000 		.4byte	0x9b
 8083 095a 0F       		.byte	0xf
 8084 095b 00       		.byte	0
 8085 095c 19       		.uleb128 0x19
 8086 095d 7A000000 		.4byte	.LASF101
 8087 0961 01       		.byte	0x1
 8088 0962 33       		.byte	0x33
 8089 0963 4C090000 		.4byte	0x94c
 8090 0967 01       		.byte	0x1
 8091 0968 05       		.byte	0x5
 8092 0969 03       		.byte	0x3
 8093 096a 00000000 		.4byte	GSMIPadd
 8094 096e 19       		.uleb128 0x19
 8095 096f 51040000 		.4byte	.LASF102
 8096 0973 01       		.byte	0x1
 8097 0974 34       		.byte	0x34
 8098 0975 29000000 		.4byte	0x29
 8099 0979 01       		.byte	0x1
 8100 097a 05       		.byte	0x5
 8101 097b 03       		.byte	0x3
 8102 097c 00000000 		.4byte	GPRSrssi
 8103 0980 19       		.uleb128 0x19
 8104 0981 E3060000 		.4byte	.LASF103
 8105 0985 01       		.byte	0x1
 8106 0986 37       		.byte	0x37
 8107 0987 BC010000 		.4byte	0x1bc
 8108 098b 01       		.byte	0x1
 8109 098c 05       		.byte	0x5
 8110 098d 03       		.byte	0x3
 8111 098e 00000000 		.4byte	GSMSendIPState
 8112 0992 19       		.uleb128 0x19
 8113 0993 5B050000 		.4byte	.LASF104
 8114 0997 01       		.byte	0x1
 8115 0998 38       		.byte	0x38
 8116 0999 BC010000 		.4byte	0x1bc
 8117 099d 01       		.byte	0x1
 8118 099e 05       		.byte	0x5
 8119 099f 03       		.byte	0x3
 8120 09a0 00000000 		.4byte	GSMSendIPFlag
 8121 09a4 19       		.uleb128 0x19
 8122 09a5 0D030000 		.4byte	.LASF105
 8123 09a9 01       		.byte	0x1
 8124 09aa 39       		.byte	0x39
 8125 09ab F5070000 		.4byte	0x7f5
 8126 09af 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 190


 8127 09b0 05       		.byte	0x5
 8128 09b1 03       		.byte	0x3
 8129 09b2 00000000 		.4byte	GSMSendIPTimeOut
 8130 09b6 19       		.uleb128 0x19
 8131 09b7 27070000 		.4byte	.LASF106
 8132 09bb 01       		.byte	0x1
 8133 09bc 3A       		.byte	0x3a
 8134 09bd 8A080000 		.4byte	0x88a
 8135 09c1 01       		.byte	0x1
 8136 09c2 05       		.byte	0x5
 8137 09c3 03       		.byte	0x3
 8138 09c4 00000000 		.4byte	GSMSendIPbuffAux
 8139 09c8 19       		.uleb128 0x19
 8140 09c9 F9060000 		.4byte	.LASF107
 8141 09cd 01       		.byte	0x1
 8142 09ce 3C       		.byte	0x3c
 8143 09cf 17070000 		.4byte	0x717
 8144 09d3 01       		.byte	0x1
 8145 09d4 05       		.byte	0x5
 8146 09d5 03       		.byte	0x3
 8147 09d6 00000000 		.4byte	GSMbuffRtaCommand
 8148 09da 19       		.uleb128 0x19
 8149 09db AB020000 		.4byte	.LASF108
 8150 09df 01       		.byte	0x1
 8151 09e0 3F       		.byte	0x3f
 8152 09e1 BC010000 		.4byte	0x1bc
 8153 09e5 01       		.byte	0x1
 8154 09e6 05       		.byte	0x5
 8155 09e7 03       		.byte	0x3
 8156 09e8 00000000 		.4byte	DB300flagConnGPRS
 8157 09ec 06       		.uleb128 0x6
 8158 09ed BC010000 		.4byte	0x1bc
 8159 09f1 FC090000 		.4byte	0x9fc
 8160 09f5 07       		.uleb128 0x7
 8161 09f6 9B000000 		.4byte	0x9b
 8162 09fa 02       		.byte	0x2
 8163 09fb 00       		.byte	0
 8164 09fc 19       		.uleb128 0x19
 8165 09fd AC080000 		.4byte	.LASF109
 8166 0a01 01       		.byte	0x1
 8167 0a02 41       		.byte	0x41
 8168 0a03 0E0A0000 		.4byte	0xa0e
 8169 0a07 01       		.byte	0x1
 8170 0a08 05       		.byte	0x5
 8171 0a09 03       		.byte	0x3
 8172 0a0a 00000000 		.4byte	GSM_OK
 8173 0a0e 0D       		.uleb128 0xd
 8174 0a0f EC090000 		.4byte	0x9ec
 8175 0a13 06       		.uleb128 0x6
 8176 0a14 BC010000 		.4byte	0x1bc
 8177 0a18 230A0000 		.4byte	0xa23
 8178 0a1c 07       		.uleb128 0x7
 8179 0a1d 9B000000 		.4byte	0x9b
 8180 0a21 05       		.byte	0x5
 8181 0a22 00       		.byte	0
 8182 0a23 19       		.uleb128 0x19
 8183 0a24 1A010000 		.4byte	.LASF110
ARM GAS  /tmp/cc4fp2Bh.s 			page 191


 8184 0a28 01       		.byte	0x1
 8185 0a29 42       		.byte	0x42
 8186 0a2a 350A0000 		.4byte	0xa35
 8187 0a2e 01       		.byte	0x1
 8188 0a2f 05       		.byte	0x5
 8189 0a30 03       		.byte	0x3
 8190 0a31 00000000 		.4byte	GSM_ERR
 8191 0a35 0D       		.uleb128 0xd
 8192 0a36 130A0000 		.4byte	0xa13
 8193 0a3a 19       		.uleb128 0x19
 8194 0a3b 71030000 		.4byte	.LASF111
 8195 0a3f 01       		.byte	0x1
 8196 0a40 44       		.byte	0x44
 8197 0a41 C3010000 		.4byte	0x1c3
 8198 0a45 01       		.byte	0x1
 8199 0a46 05       		.byte	0x5
 8200 0a47 03       		.byte	0x3
 8201 0a48 00000000 		.4byte	GSM_RTA
 8202 0a4c 06       		.uleb128 0x6
 8203 0a4d BC010000 		.4byte	0x1bc
 8204 0a51 5C0A0000 		.4byte	0xa5c
 8205 0a55 07       		.uleb128 0x7
 8206 0a56 9B000000 		.4byte	0x9b
 8207 0a5a 06       		.byte	0x6
 8208 0a5b 00       		.byte	0
 8209 0a5c 19       		.uleb128 0x19
 8210 0a5d 00000000 		.4byte	.LASF112
 8211 0a61 01       		.byte	0x1
 8212 0a62 46       		.byte	0x46
 8213 0a63 6E0A0000 		.4byte	0xa6e
 8214 0a67 01       		.byte	0x1
 8215 0a68 05       		.byte	0x5
 8216 0a69 03       		.byte	0x3
 8217 0a6a 00000000 		.4byte	GSM_CMGF
 8218 0a6e 0D       		.uleb128 0xd
 8219 0a6f 4C0A0000 		.4byte	0xa4c
 8220 0a73 19       		.uleb128 0x19
 8221 0a74 D7060000 		.4byte	.LASF113
 8222 0a78 01       		.byte	0x1
 8223 0a79 47       		.byte	0x47
 8224 0a7a 850A0000 		.4byte	0xa85
 8225 0a7e 01       		.byte	0x1
 8226 0a7f 05       		.byte	0x5
 8227 0a80 03       		.byte	0x3
 8228 0a81 00000000 		.4byte	GSM_IPSTATE
 8229 0a85 0D       		.uleb128 0xd
 8230 0a86 4C0A0000 		.4byte	0xa4c
 8231 0a8a 06       		.uleb128 0x6
 8232 0a8b BC010000 		.4byte	0x1bc
 8233 0a8f 9A0A0000 		.4byte	0xa9a
 8234 0a93 07       		.uleb128 0x7
 8235 0a94 9B000000 		.4byte	0x9b
 8236 0a98 0A       		.byte	0xa
 8237 0a99 00       		.byte	0
 8238 0a9a 19       		.uleb128 0x19
 8239 0a9b A7000000 		.4byte	.LASF114
 8240 0a9f 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 192


 8241 0aa0 4A       		.byte	0x4a
 8242 0aa1 AC0A0000 		.4byte	0xaac
 8243 0aa5 01       		.byte	0x1
 8244 0aa6 05       		.byte	0x5
 8245 0aa7 03       		.byte	0x3
 8246 0aa8 00000000 		.4byte	GSM_IPINITIAL
 8247 0aac 0D       		.uleb128 0xd
 8248 0aad 8A0A0000 		.4byte	0xa8a
 8249 0ab1 06       		.uleb128 0x6
 8250 0ab2 BC010000 		.4byte	0x1bc
 8251 0ab6 C10A0000 		.4byte	0xac1
 8252 0aba 07       		.uleb128 0x7
 8253 0abb 9B000000 		.4byte	0x9b
 8254 0abf 08       		.byte	0x8
 8255 0ac0 00       		.byte	0
 8256 0ac1 19       		.uleb128 0x19
 8257 0ac2 CC050000 		.4byte	.LASF115
 8258 0ac6 01       		.byte	0x1
 8259 0ac7 4B       		.byte	0x4b
 8260 0ac8 D30A0000 		.4byte	0xad3
 8261 0acc 01       		.byte	0x1
 8262 0acd 05       		.byte	0x5
 8263 0ace 03       		.byte	0x3
 8264 0acf 00000000 		.4byte	GSM_IPSTART
 8265 0ad3 0D       		.uleb128 0xd
 8266 0ad4 B10A0000 		.4byte	0xab1
 8267 0ad8 19       		.uleb128 0x19
 8268 0ad9 88030000 		.4byte	.LASF116
 8269 0add 01       		.byte	0x1
 8270 0ade 4C       		.byte	0x4c
 8271 0adf EA0A0000 		.4byte	0xaea
 8272 0ae3 01       		.byte	0x1
 8273 0ae4 05       		.byte	0x5
 8274 0ae5 03       		.byte	0x3
 8275 0ae6 00000000 		.4byte	GSM_IPGPRSACT
 8276 0aea 0D       		.uleb128 0xd
 8277 0aeb 8A0A0000 		.4byte	0xa8a
 8278 0aef 06       		.uleb128 0x6
 8279 0af0 BC010000 		.4byte	0x1bc
 8280 0af4 FF0A0000 		.4byte	0xaff
 8281 0af8 07       		.uleb128 0x7
 8282 0af9 9B000000 		.4byte	0x9b
 8283 0afd 09       		.byte	0x9
 8284 0afe 00       		.byte	0
 8285 0aff 19       		.uleb128 0x19
 8286 0b00 0D010000 		.4byte	.LASF117
 8287 0b04 01       		.byte	0x1
 8288 0b05 4D       		.byte	0x4d
 8289 0b06 110B0000 		.4byte	0xb11
 8290 0b0a 01       		.byte	0x1
 8291 0b0b 05       		.byte	0x5
 8292 0b0c 03       		.byte	0x3
 8293 0b0d 00000000 		.4byte	GSM_IPSTATUS
 8294 0b11 0D       		.uleb128 0xd
 8295 0b12 EF0A0000 		.4byte	0xaef
 8296 0b16 06       		.uleb128 0x6
 8297 0b17 BC010000 		.4byte	0x1bc
ARM GAS  /tmp/cc4fp2Bh.s 			page 193


 8298 0b1b 260B0000 		.4byte	0xb26
 8299 0b1f 07       		.uleb128 0x7
 8300 0b20 9B000000 		.4byte	0x9b
 8301 0b24 0E       		.byte	0xe
 8302 0b25 00       		.byte	0
 8303 0b26 19       		.uleb128 0x19
 8304 0b27 B2060000 		.4byte	.LASF118
 8305 0b2b 01       		.byte	0x1
 8306 0b2c 4E       		.byte	0x4e
 8307 0b2d 380B0000 		.4byte	0xb38
 8308 0b31 01       		.byte	0x1
 8309 0b32 05       		.byte	0x5
 8310 0b33 03       		.byte	0x3
 8311 0b34 00000000 		.4byte	GSM_IPCONNECTING
 8312 0b38 0D       		.uleb128 0xd
 8313 0b39 160B0000 		.4byte	0xb16
 8314 0b3d 19       		.uleb128 0x19
 8315 0b3e 1A050000 		.4byte	.LASF119
 8316 0b42 01       		.byte	0x1
 8317 0b43 4F       		.byte	0x4f
 8318 0b44 4F0B0000 		.4byte	0xb4f
 8319 0b48 01       		.byte	0x1
 8320 0b49 05       		.byte	0x5
 8321 0b4a 03       		.byte	0x3
 8322 0b4b 00000000 		.4byte	GSM_IPCONNOK
 8323 0b4f 0D       		.uleb128 0xd
 8324 0b50 8A0A0000 		.4byte	0xa8a
 8325 0b54 06       		.uleb128 0x6
 8326 0b55 BC010000 		.4byte	0x1bc
 8327 0b59 640B0000 		.4byte	0xb64
 8328 0b5d 07       		.uleb128 0x7
 8329 0b5e 9B000000 		.4byte	0x9b
 8330 0b62 0C       		.byte	0xc
 8331 0b63 00       		.byte	0
 8332 0b64 19       		.uleb128 0x19
 8333 0b65 1E030000 		.4byte	.LASF120
 8334 0b69 01       		.byte	0x1
 8335 0b6a 50       		.byte	0x50
 8336 0b6b 760B0000 		.4byte	0xb76
 8337 0b6f 01       		.byte	0x1
 8338 0b70 05       		.byte	0x5
 8339 0b71 03       		.byte	0x3
 8340 0b72 00000000 		.4byte	GSM_IPCONNFAIL
 8341 0b76 0D       		.uleb128 0xd
 8342 0b77 540B0000 		.4byte	0xb54
 8343 0b7b 19       		.uleb128 0x19
 8344 0b7c 10000000 		.4byte	.LASF121
 8345 0b80 01       		.byte	0x1
 8346 0b81 51       		.byte	0x51
 8347 0b82 8D0B0000 		.4byte	0xb8d
 8348 0b86 01       		.byte	0x1
 8349 0b87 05       		.byte	0x5
 8350 0b88 03       		.byte	0x3
 8351 0b89 00000000 		.4byte	GSM_IPCONNCLOSE
 8352 0b8d 0D       		.uleb128 0xd
 8353 0b8e 8A0A0000 		.4byte	0xa8a
 8354 0b92 06       		.uleb128 0x6
ARM GAS  /tmp/cc4fp2Bh.s 			page 194


 8355 0b93 BC010000 		.4byte	0x1bc
 8356 0b97 A20B0000 		.4byte	0xba2
 8357 0b9b 07       		.uleb128 0x7
 8358 0b9c 9B000000 		.4byte	0x9b
 8359 0ba0 04       		.byte	0x4
 8360 0ba1 00       		.byte	0
 8361 0ba2 19       		.uleb128 0x19
 8362 0ba3 20000000 		.4byte	.LASF122
 8363 0ba7 01       		.byte	0x1
 8364 0ba8 53       		.byte	0x53
 8365 0ba9 B40B0000 		.4byte	0xbb4
 8366 0bad 01       		.byte	0x1
 8367 0bae 05       		.byte	0x5
 8368 0baf 03       		.byte	0x3
 8369 0bb0 00000000 		.4byte	GSM_SIM1
 8370 0bb4 0D       		.uleb128 0xd
 8371 0bb5 920B0000 		.4byte	0xb92
 8372 0bb9 19       		.uleb128 0x19
 8373 0bba 29000000 		.4byte	.LASF123
 8374 0bbe 01       		.byte	0x1
 8375 0bbf 54       		.byte	0x54
 8376 0bc0 CB0B0000 		.4byte	0xbcb
 8377 0bc4 01       		.byte	0x1
 8378 0bc5 05       		.byte	0x5
 8379 0bc6 03       		.byte	0x3
 8380 0bc7 00000000 		.4byte	GSM_SIM2
 8381 0bcb 0D       		.uleb128 0xd
 8382 0bcc 920B0000 		.4byte	0xb92
 8383 0bd0 19       		.uleb128 0x19
 8384 0bd1 BD020000 		.4byte	.LASF124
 8385 0bd5 01       		.byte	0x1
 8386 0bd6 55       		.byte	0x55
 8387 0bd7 E20B0000 		.4byte	0xbe2
 8388 0bdb 01       		.byte	0x1
 8389 0bdc 05       		.byte	0x5
 8390 0bdd 03       		.byte	0x3
 8391 0bde 00000000 		.4byte	GSM_SENDOK
 8392 0be2 0D       		.uleb128 0xd
 8393 0be3 C8010000 		.4byte	0x1c8
 8394 0be7 19       		.uleb128 0x19
 8395 0be8 85070000 		.4byte	.LASF125
 8396 0bec 01       		.byte	0x1
 8397 0bed 57       		.byte	0x57
 8398 0bee 29000000 		.4byte	0x29
 8399 0bf2 01       		.byte	0x1
 8400 0bf3 05       		.byte	0x5
 8401 0bf4 03       		.byte	0x3
 8402 0bf5 00000000 		.4byte	prestadorSimState
 8403 0bf9 19       		.uleb128 0x19
 8404 0bfa CC000000 		.4byte	.LASF126
 8405 0bfe 01       		.byte	0x1
 8406 0bff 58       		.byte	0x58
 8407 0c00 29000000 		.4byte	0x29
 8408 0c04 01       		.byte	0x1
 8409 0c05 05       		.byte	0x5
 8410 0c06 03       		.byte	0x3
 8411 0c07 00000000 		.4byte	prestadorSimTime
ARM GAS  /tmp/cc4fp2Bh.s 			page 195


 8412 0c0b 19       		.uleb128 0x19
 8413 0c0c 5A040000 		.4byte	.LASF127
 8414 0c10 01       		.byte	0x1
 8415 0c11 5C       		.byte	0x5c
 8416 0c12 29000000 		.4byte	0x29
 8417 0c16 01       		.byte	0x1
 8418 0c17 05       		.byte	0x5
 8419 0c18 03       		.byte	0x3
 8420 0c19 00000000 		.4byte	GSMCantSMS
 8421 0c1d 19       		.uleb128 0x19
 8422 0c1e 6F060000 		.4byte	.LASF128
 8423 0c22 01       		.byte	0x1
 8424 0c23 5D       		.byte	0x5d
 8425 0c24 29000000 		.4byte	0x29
 8426 0c28 01       		.byte	0x1
 8427 0c29 05       		.byte	0x5
 8428 0c2a 03       		.byte	0x3
 8429 0c2b 00000000 		.4byte	GSMCantSMS2
 8430 0c2f 19       		.uleb128 0x19
 8431 0c30 BB010000 		.4byte	.LASF129
 8432 0c34 01       		.byte	0x1
 8433 0c35 5E       		.byte	0x5e
 8434 0c36 29000000 		.4byte	0x29
 8435 0c3a 01       		.byte	0x1
 8436 0c3b 05       		.byte	0x5
 8437 0c3c 03       		.byte	0x3
 8438 0c3d 00000000 		.4byte	GSMnumSMS
 8439 0c41 19       		.uleb128 0x19
 8440 0c42 5F060000 		.4byte	.LASF130
 8441 0c46 01       		.byte	0x1
 8442 0c47 5F       		.byte	0x5f
 8443 0c48 BC010000 		.4byte	0x1bc
 8444 0c4c 01       		.byte	0x1
 8445 0c4d 05       		.byte	0x5
 8446 0c4e 03       		.byte	0x3
 8447 0c4f 00000000 		.4byte	GSMReadSMSState
 8448 0c53 19       		.uleb128 0x19
 8449 0c54 08050000 		.4byte	.LASF131
 8450 0c58 01       		.byte	0x1
 8451 0c59 60       		.byte	0x60
 8452 0c5a 8A080000 		.4byte	0x88a
 8453 0c5e 01       		.byte	0x1
 8454 0c5f 05       		.byte	0x5
 8455 0c60 03       		.byte	0x3
 8456 0c61 00000000 		.4byte	GSMReadSMScommand
 8457 0c65 19       		.uleb128 0x19
 8458 0c66 E6030000 		.4byte	.LASF132
 8459 0c6a 01       		.byte	0x1
 8460 0c6b 61       		.byte	0x61
 8461 0c6c 8A080000 		.4byte	0x88a
 8462 0c70 01       		.byte	0x1
 8463 0c71 05       		.byte	0x5
 8464 0c72 03       		.byte	0x3
 8465 0c73 00000000 		.4byte	GSMReadSMSrepIn
 8466 0c77 19       		.uleb128 0x19
 8467 0c78 91020000 		.4byte	.LASF133
 8468 0c7c 01       		.byte	0x1
ARM GAS  /tmp/cc4fp2Bh.s 			page 196


 8469 0c7d 62       		.byte	0x62
 8470 0c7e 29000000 		.4byte	0x29
 8471 0c82 01       		.byte	0x1
 8472 0c83 05       		.byte	0x5
 8473 0c84 03       		.byte	0x3
 8474 0c85 00000000 		.4byte	GSMrxSMSState
 8475 0c89 19       		.uleb128 0x19
 8476 0c8a 7E020000 		.4byte	.LASF134
 8477 0c8e 01       		.byte	0x1
 8478 0c8f 63       		.byte	0x63
 8479 0c90 29000000 		.4byte	0x29
 8480 0c94 01       		.byte	0x1
 8481 0c95 05       		.byte	0x5
 8482 0c96 03       		.byte	0x3
 8483 0c97 00000000 		.4byte	prestadorSimSelect
 8484 0c9b 19       		.uleb128 0x19
 8485 0c9c 9F020000 		.4byte	.LASF135
 8486 0ca0 01       		.byte	0x1
 8487 0ca1 64       		.byte	0x64
 8488 0ca2 29000000 		.4byte	0x29
 8489 0ca6 01       		.byte	0x1
 8490 0ca7 05       		.byte	0x5
 8491 0ca8 03       		.byte	0x3
 8492 0ca9 00000000 		.4byte	flagCloseIP
 8493 0cad 1A       		.uleb128 0x1a
 8494 0cae ED080000 		.4byte	.LASF136
 8495 0cb2 01       		.byte	0x1
 8496 0cb3 67       		.byte	0x67
 8497 0cb4 2A090000 		.4byte	0x92a
 8498 0cb8 01       		.byte	0x1
 8499 0cb9 01       		.byte	0x1
 8500 0cba 06       		.uleb128 0x6
 8501 0cbb BC010000 		.4byte	0x1bc
 8502 0cbf CA0C0000 		.4byte	0xcca
 8503 0cc3 07       		.uleb128 0x7
 8504 0cc4 9B000000 		.4byte	0x9b
 8505 0cc8 13       		.byte	0x13
 8506 0cc9 00       		.byte	0
 8507 0cca 1A       		.uleb128 0x1a
 8508 0ccb 83000000 		.4byte	.LASF137
 8509 0ccf 01       		.byte	0x1
 8510 0cd0 68       		.byte	0x68
 8511 0cd1 BA0C0000 		.4byte	0xcba
 8512 0cd5 01       		.byte	0x1
 8513 0cd6 01       		.byte	0x1
 8514 0cd7 1A       		.uleb128 0x1a
 8515 0cd8 9C080000 		.4byte	.LASF138
 8516 0cdc 01       		.byte	0x1
 8517 0cdd 69       		.byte	0x69
 8518 0cde BA0C0000 		.4byte	0xcba
 8519 0ce2 01       		.byte	0x1
 8520 0ce3 01       		.byte	0x1
 8521 0ce4 1A       		.uleb128 0x1a
 8522 0ce5 FB080000 		.4byte	.LASF139
 8523 0ce9 01       		.byte	0x1
 8524 0cea 6B       		.byte	0x6b
 8525 0ceb 2A090000 		.4byte	0x92a
ARM GAS  /tmp/cc4fp2Bh.s 			page 197


 8526 0cef 01       		.byte	0x1
 8527 0cf0 01       		.byte	0x1
 8528 0cf1 1A       		.uleb128 0x1a
 8529 0cf2 95000000 		.4byte	.LASF140
 8530 0cf6 01       		.byte	0x1
 8531 0cf7 6C       		.byte	0x6c
 8532 0cf8 BA0C0000 		.4byte	0xcba
 8533 0cfc 01       		.byte	0x1
 8534 0cfd 01       		.byte	0x1
 8535 0cfe 1A       		.uleb128 0x1a
 8536 0cff 32000000 		.4byte	.LASF141
 8537 0d03 01       		.byte	0x1
 8538 0d04 6D       		.byte	0x6d
 8539 0d05 BA0C0000 		.4byte	0xcba
 8540 0d09 01       		.byte	0x1
 8541 0d0a 01       		.byte	0x1
 8542 0d0b 1A       		.uleb128 0x1a
 8543 0d0c 79030000 		.4byte	.LASF142
 8544 0d10 01       		.byte	0x1
 8545 0d11 6E       		.byte	0x6e
 8546 0d12 BA0C0000 		.4byte	0xcba
 8547 0d16 01       		.byte	0x1
 8548 0d17 01       		.byte	0x1
 8549 0d18 1A       		.uleb128 0x1a
 8550 0d19 F6010000 		.4byte	.LASF143
 8551 0d1d 01       		.byte	0x1
 8552 0d1e 6F       		.byte	0x6f
 8553 0d1f BA0C0000 		.4byte	0xcba
 8554 0d23 01       		.byte	0x1
 8555 0d24 01       		.byte	0x1
 8556 0d25 1A       		.uleb128 0x1a
 8557 0d26 04040000 		.4byte	.LASF144
 8558 0d2a 01       		.byte	0x1
 8559 0d2b 72       		.byte	0x72
 8560 0d2c 320D0000 		.4byte	0xd32
 8561 0d30 01       		.byte	0x1
 8562 0d31 01       		.byte	0x1
 8563 0d32 05       		.uleb128 0x5
 8564 0d33 29000000 		.4byte	0x29
 8565 0d37 1A       		.uleb128 0x1a
 8566 0d38 40030000 		.4byte	.LASF145
 8567 0d3c 01       		.byte	0x1
 8568 0d3d 73       		.byte	0x73
 8569 0d3e 320D0000 		.4byte	0xd32
 8570 0d42 01       		.byte	0x1
 8571 0d43 01       		.byte	0x1
 8572 0d44 1A       		.uleb128 0x1a
 8573 0d45 E8020000 		.4byte	.LASF146
 8574 0d49 01       		.byte	0x1
 8575 0d4a 74       		.byte	0x74
 8576 0d4b 320D0000 		.4byte	0xd32
 8577 0d4f 01       		.byte	0x1
 8578 0d50 01       		.byte	0x1
 8579 0d51 1A       		.uleb128 0x1a
 8580 0d52 5B020000 		.4byte	.LASF147
 8581 0d56 01       		.byte	0x1
 8582 0d57 75       		.byte	0x75
ARM GAS  /tmp/cc4fp2Bh.s 			page 198


 8583 0d58 29000000 		.4byte	0x29
 8584 0d5c 01       		.byte	0x1
 8585 0d5d 01       		.byte	0x1
 8586 0d5e 00       		.byte	0
 8587              		.section	.debug_abbrev,"",%progbits
 8588              	.Ldebug_abbrev0:
 8589 0000 01       		.uleb128 0x1
 8590 0001 11       		.uleb128 0x11
 8591 0002 01       		.byte	0x1
 8592 0003 25       		.uleb128 0x25
 8593 0004 0E       		.uleb128 0xe
 8594 0005 13       		.uleb128 0x13
 8595 0006 0B       		.uleb128 0xb
 8596 0007 03       		.uleb128 0x3
 8597 0008 0E       		.uleb128 0xe
 8598 0009 1B       		.uleb128 0x1b
 8599 000a 0E       		.uleb128 0xe
 8600 000b 55       		.uleb128 0x55
 8601 000c 06       		.uleb128 0x6
 8602 000d 11       		.uleb128 0x11
 8603 000e 01       		.uleb128 0x1
 8604 000f 52       		.uleb128 0x52
 8605 0010 01       		.uleb128 0x1
 8606 0011 10       		.uleb128 0x10
 8607 0012 06       		.uleb128 0x6
 8608 0013 00       		.byte	0
 8609 0014 00       		.byte	0
 8610 0015 02       		.uleb128 0x2
 8611 0016 24       		.uleb128 0x24
 8612 0017 00       		.byte	0
 8613 0018 0B       		.uleb128 0xb
 8614 0019 0B       		.uleb128 0xb
 8615 001a 3E       		.uleb128 0x3e
 8616 001b 0B       		.uleb128 0xb
 8617 001c 03       		.uleb128 0x3
 8618 001d 0E       		.uleb128 0xe
 8619 001e 00       		.byte	0
 8620 001f 00       		.byte	0
 8621 0020 03       		.uleb128 0x3
 8622 0021 16       		.uleb128 0x16
 8623 0022 00       		.byte	0
 8624 0023 03       		.uleb128 0x3
 8625 0024 0E       		.uleb128 0xe
 8626 0025 3A       		.uleb128 0x3a
 8627 0026 0B       		.uleb128 0xb
 8628 0027 3B       		.uleb128 0x3b
 8629 0028 0B       		.uleb128 0xb
 8630 0029 49       		.uleb128 0x49
 8631 002a 13       		.uleb128 0x13
 8632 002b 00       		.byte	0
 8633 002c 00       		.byte	0
 8634 002d 04       		.uleb128 0x4
 8635 002e 24       		.uleb128 0x24
 8636 002f 00       		.byte	0
 8637 0030 0B       		.uleb128 0xb
 8638 0031 0B       		.uleb128 0xb
 8639 0032 3E       		.uleb128 0x3e
ARM GAS  /tmp/cc4fp2Bh.s 			page 199


 8640 0033 0B       		.uleb128 0xb
 8641 0034 03       		.uleb128 0x3
 8642 0035 08       		.uleb128 0x8
 8643 0036 00       		.byte	0
 8644 0037 00       		.byte	0
 8645 0038 05       		.uleb128 0x5
 8646 0039 35       		.uleb128 0x35
 8647 003a 00       		.byte	0
 8648 003b 49       		.uleb128 0x49
 8649 003c 13       		.uleb128 0x13
 8650 003d 00       		.byte	0
 8651 003e 00       		.byte	0
 8652 003f 06       		.uleb128 0x6
 8653 0040 01       		.uleb128 0x1
 8654 0041 01       		.byte	0x1
 8655 0042 49       		.uleb128 0x49
 8656 0043 13       		.uleb128 0x13
 8657 0044 01       		.uleb128 0x1
 8658 0045 13       		.uleb128 0x13
 8659 0046 00       		.byte	0
 8660 0047 00       		.byte	0
 8661 0048 07       		.uleb128 0x7
 8662 0049 21       		.uleb128 0x21
 8663 004a 00       		.byte	0
 8664 004b 49       		.uleb128 0x49
 8665 004c 13       		.uleb128 0x13
 8666 004d 2F       		.uleb128 0x2f
 8667 004e 0B       		.uleb128 0xb
 8668 004f 00       		.byte	0
 8669 0050 00       		.byte	0
 8670 0051 08       		.uleb128 0x8
 8671 0052 13       		.uleb128 0x13
 8672 0053 01       		.byte	0x1
 8673 0054 0B       		.uleb128 0xb
 8674 0055 0B       		.uleb128 0xb
 8675 0056 3A       		.uleb128 0x3a
 8676 0057 0B       		.uleb128 0xb
 8677 0058 3B       		.uleb128 0x3b
 8678 0059 05       		.uleb128 0x5
 8679 005a 01       		.uleb128 0x1
 8680 005b 13       		.uleb128 0x13
 8681 005c 00       		.byte	0
 8682 005d 00       		.byte	0
 8683 005e 09       		.uleb128 0x9
 8684 005f 0D       		.uleb128 0xd
 8685 0060 00       		.byte	0
 8686 0061 03       		.uleb128 0x3
 8687 0062 0E       		.uleb128 0xe
 8688 0063 3A       		.uleb128 0x3a
 8689 0064 0B       		.uleb128 0xb
 8690 0065 3B       		.uleb128 0x3b
 8691 0066 05       		.uleb128 0x5
 8692 0067 49       		.uleb128 0x49
 8693 0068 13       		.uleb128 0x13
 8694 0069 38       		.uleb128 0x38
 8695 006a 0A       		.uleb128 0xa
 8696 006b 00       		.byte	0
ARM GAS  /tmp/cc4fp2Bh.s 			page 200


 8697 006c 00       		.byte	0
 8698 006d 0A       		.uleb128 0xa
 8699 006e 0D       		.uleb128 0xd
 8700 006f 00       		.byte	0
 8701 0070 03       		.uleb128 0x3
 8702 0071 08       		.uleb128 0x8
 8703 0072 3A       		.uleb128 0x3a
 8704 0073 0B       		.uleb128 0xb
 8705 0074 3B       		.uleb128 0x3b
 8706 0075 05       		.uleb128 0x5
 8707 0076 49       		.uleb128 0x49
 8708 0077 13       		.uleb128 0x13
 8709 0078 38       		.uleb128 0x38
 8710 0079 0A       		.uleb128 0xa
 8711 007a 00       		.byte	0
 8712 007b 00       		.byte	0
 8713 007c 0B       		.uleb128 0xb
 8714 007d 16       		.uleb128 0x16
 8715 007e 00       		.byte	0
 8716 007f 03       		.uleb128 0x3
 8717 0080 0E       		.uleb128 0xe
 8718 0081 3A       		.uleb128 0x3a
 8719 0082 0B       		.uleb128 0xb
 8720 0083 3B       		.uleb128 0x3b
 8721 0084 05       		.uleb128 0x5
 8722 0085 49       		.uleb128 0x49
 8723 0086 13       		.uleb128 0x13
 8724 0087 00       		.byte	0
 8725 0088 00       		.byte	0
 8726 0089 0C       		.uleb128 0xc
 8727 008a 0F       		.uleb128 0xf
 8728 008b 00       		.byte	0
 8729 008c 0B       		.uleb128 0xb
 8730 008d 0B       		.uleb128 0xb
 8731 008e 49       		.uleb128 0x49
 8732 008f 13       		.uleb128 0x13
 8733 0090 00       		.byte	0
 8734 0091 00       		.byte	0
 8735 0092 0D       		.uleb128 0xd
 8736 0093 26       		.uleb128 0x26
 8737 0094 00       		.byte	0
 8738 0095 49       		.uleb128 0x49
 8739 0096 13       		.uleb128 0x13
 8740 0097 00       		.byte	0
 8741 0098 00       		.byte	0
 8742 0099 0E       		.uleb128 0xe
 8743 009a 2E       		.uleb128 0x2e
 8744 009b 00       		.byte	0
 8745 009c 3F       		.uleb128 0x3f
 8746 009d 0C       		.uleb128 0xc
 8747 009e 03       		.uleb128 0x3
 8748 009f 0E       		.uleb128 0xe
 8749 00a0 3A       		.uleb128 0x3a
 8750 00a1 0B       		.uleb128 0xb
 8751 00a2 3B       		.uleb128 0x3b
 8752 00a3 0B       		.uleb128 0xb
 8753 00a4 27       		.uleb128 0x27
ARM GAS  /tmp/cc4fp2Bh.s 			page 201


 8754 00a5 0C       		.uleb128 0xc
 8755 00a6 11       		.uleb128 0x11
 8756 00a7 01       		.uleb128 0x1
 8757 00a8 12       		.uleb128 0x12
 8758 00a9 01       		.uleb128 0x1
 8759 00aa 40       		.uleb128 0x40
 8760 00ab 06       		.uleb128 0x6
 8761 00ac 9642     		.uleb128 0x2116
 8762 00ae 0C       		.uleb128 0xc
 8763 00af 00       		.byte	0
 8764 00b0 00       		.byte	0
 8765 00b1 0F       		.uleb128 0xf
 8766 00b2 2E       		.uleb128 0x2e
 8767 00b3 00       		.byte	0
 8768 00b4 3F       		.uleb128 0x3f
 8769 00b5 0C       		.uleb128 0xc
 8770 00b6 03       		.uleb128 0x3
 8771 00b7 0E       		.uleb128 0xe
 8772 00b8 3A       		.uleb128 0x3a
 8773 00b9 0B       		.uleb128 0xb
 8774 00ba 3B       		.uleb128 0x3b
 8775 00bb 05       		.uleb128 0x5
 8776 00bc 27       		.uleb128 0x27
 8777 00bd 0C       		.uleb128 0xc
 8778 00be 49       		.uleb128 0x49
 8779 00bf 13       		.uleb128 0x13
 8780 00c0 11       		.uleb128 0x11
 8781 00c1 01       		.uleb128 0x1
 8782 00c2 12       		.uleb128 0x12
 8783 00c3 01       		.uleb128 0x1
 8784 00c4 40       		.uleb128 0x40
 8785 00c5 0A       		.uleb128 0xa
 8786 00c6 9742     		.uleb128 0x2117
 8787 00c8 0C       		.uleb128 0xc
 8788 00c9 00       		.byte	0
 8789 00ca 00       		.byte	0
 8790 00cb 10       		.uleb128 0x10
 8791 00cc 2E       		.uleb128 0x2e
 8792 00cd 00       		.byte	0
 8793 00ce 3F       		.uleb128 0x3f
 8794 00cf 0C       		.uleb128 0xc
 8795 00d0 03       		.uleb128 0x3
 8796 00d1 0E       		.uleb128 0xe
 8797 00d2 3A       		.uleb128 0x3a
 8798 00d3 0B       		.uleb128 0xb
 8799 00d4 3B       		.uleb128 0x3b
 8800 00d5 05       		.uleb128 0x5
 8801 00d6 27       		.uleb128 0x27
 8802 00d7 0C       		.uleb128 0xc
 8803 00d8 11       		.uleb128 0x11
 8804 00d9 01       		.uleb128 0x1
 8805 00da 12       		.uleb128 0x12
 8806 00db 01       		.uleb128 0x1
 8807 00dc 40       		.uleb128 0x40
 8808 00dd 0A       		.uleb128 0xa
 8809 00de 9742     		.uleb128 0x2117
 8810 00e0 0C       		.uleb128 0xc
ARM GAS  /tmp/cc4fp2Bh.s 			page 202


 8811 00e1 00       		.byte	0
 8812 00e2 00       		.byte	0
 8813 00e3 11       		.uleb128 0x11
 8814 00e4 2E       		.uleb128 0x2e
 8815 00e5 01       		.byte	0x1
 8816 00e6 3F       		.uleb128 0x3f
 8817 00e7 0C       		.uleb128 0xc
 8818 00e8 03       		.uleb128 0x3
 8819 00e9 0E       		.uleb128 0xe
 8820 00ea 3A       		.uleb128 0x3a
 8821 00eb 0B       		.uleb128 0xb
 8822 00ec 3B       		.uleb128 0x3b
 8823 00ed 05       		.uleb128 0x5
 8824 00ee 27       		.uleb128 0x27
 8825 00ef 0C       		.uleb128 0xc
 8826 00f0 49       		.uleb128 0x49
 8827 00f1 13       		.uleb128 0x13
 8828 00f2 11       		.uleb128 0x11
 8829 00f3 01       		.uleb128 0x1
 8830 00f4 12       		.uleb128 0x12
 8831 00f5 01       		.uleb128 0x1
 8832 00f6 40       		.uleb128 0x40
 8833 00f7 06       		.uleb128 0x6
 8834 00f8 9742     		.uleb128 0x2117
 8835 00fa 0C       		.uleb128 0xc
 8836 00fb 01       		.uleb128 0x1
 8837 00fc 13       		.uleb128 0x13
 8838 00fd 00       		.byte	0
 8839 00fe 00       		.byte	0
 8840 00ff 12       		.uleb128 0x12
 8841 0100 34       		.uleb128 0x34
 8842 0101 00       		.byte	0
 8843 0102 03       		.uleb128 0x3
 8844 0103 0E       		.uleb128 0xe
 8845 0104 3A       		.uleb128 0x3a
 8846 0105 0B       		.uleb128 0xb
 8847 0106 3B       		.uleb128 0x3b
 8848 0107 05       		.uleb128 0x5
 8849 0108 49       		.uleb128 0x49
 8850 0109 13       		.uleb128 0x13
 8851 010a 02       		.uleb128 0x2
 8852 010b 0A       		.uleb128 0xa
 8853 010c 00       		.byte	0
 8854 010d 00       		.byte	0
 8855 010e 13       		.uleb128 0x13
 8856 010f 05       		.uleb128 0x5
 8857 0110 00       		.byte	0
 8858 0111 03       		.uleb128 0x3
 8859 0112 08       		.uleb128 0x8
 8860 0113 3A       		.uleb128 0x3a
 8861 0114 0B       		.uleb128 0xb
 8862 0115 3B       		.uleb128 0x3b
 8863 0116 05       		.uleb128 0x5
 8864 0117 49       		.uleb128 0x49
 8865 0118 13       		.uleb128 0x13
 8866 0119 02       		.uleb128 0x2
 8867 011a 0A       		.uleb128 0xa
ARM GAS  /tmp/cc4fp2Bh.s 			page 203


 8868 011b 00       		.byte	0
 8869 011c 00       		.byte	0
 8870 011d 14       		.uleb128 0x14
 8871 011e 2E       		.uleb128 0x2e
 8872 011f 01       		.byte	0x1
 8873 0120 3F       		.uleb128 0x3f
 8874 0121 0C       		.uleb128 0xc
 8875 0122 03       		.uleb128 0x3
 8876 0123 0E       		.uleb128 0xe
 8877 0124 3A       		.uleb128 0x3a
 8878 0125 0B       		.uleb128 0xb
 8879 0126 3B       		.uleb128 0x3b
 8880 0127 05       		.uleb128 0x5
 8881 0128 27       		.uleb128 0x27
 8882 0129 0C       		.uleb128 0xc
 8883 012a 11       		.uleb128 0x11
 8884 012b 01       		.uleb128 0x1
 8885 012c 12       		.uleb128 0x12
 8886 012d 01       		.uleb128 0x1
 8887 012e 40       		.uleb128 0x40
 8888 012f 06       		.uleb128 0x6
 8889 0130 9642     		.uleb128 0x2116
 8890 0132 0C       		.uleb128 0xc
 8891 0133 01       		.uleb128 0x1
 8892 0134 13       		.uleb128 0x13
 8893 0135 00       		.byte	0
 8894 0136 00       		.byte	0
 8895 0137 15       		.uleb128 0x15
 8896 0138 05       		.uleb128 0x5
 8897 0139 00       		.byte	0
 8898 013a 03       		.uleb128 0x3
 8899 013b 0E       		.uleb128 0xe
 8900 013c 3A       		.uleb128 0x3a
 8901 013d 0B       		.uleb128 0xb
 8902 013e 3B       		.uleb128 0x3b
 8903 013f 05       		.uleb128 0x5
 8904 0140 49       		.uleb128 0x49
 8905 0141 13       		.uleb128 0x13
 8906 0142 02       		.uleb128 0x2
 8907 0143 0A       		.uleb128 0xa
 8908 0144 00       		.byte	0
 8909 0145 00       		.byte	0
 8910 0146 16       		.uleb128 0x16
 8911 0147 34       		.uleb128 0x34
 8912 0148 00       		.byte	0
 8913 0149 03       		.uleb128 0x3
 8914 014a 08       		.uleb128 0x8
 8915 014b 3A       		.uleb128 0x3a
 8916 014c 0B       		.uleb128 0xb
 8917 014d 3B       		.uleb128 0x3b
 8918 014e 05       		.uleb128 0x5
 8919 014f 49       		.uleb128 0x49
 8920 0150 13       		.uleb128 0x13
 8921 0151 02       		.uleb128 0x2
 8922 0152 0A       		.uleb128 0xa
 8923 0153 00       		.byte	0
 8924 0154 00       		.byte	0
ARM GAS  /tmp/cc4fp2Bh.s 			page 204


 8925 0155 17       		.uleb128 0x17
 8926 0156 2E       		.uleb128 0x2e
 8927 0157 01       		.byte	0x1
 8928 0158 3F       		.uleb128 0x3f
 8929 0159 0C       		.uleb128 0xc
 8930 015a 03       		.uleb128 0x3
 8931 015b 0E       		.uleb128 0xe
 8932 015c 3A       		.uleb128 0x3a
 8933 015d 0B       		.uleb128 0xb
 8934 015e 3B       		.uleb128 0x3b
 8935 015f 05       		.uleb128 0x5
 8936 0160 27       		.uleb128 0x27
 8937 0161 0C       		.uleb128 0xc
 8938 0162 49       		.uleb128 0x49
 8939 0163 13       		.uleb128 0x13
 8940 0164 11       		.uleb128 0x11
 8941 0165 01       		.uleb128 0x1
 8942 0166 12       		.uleb128 0x12
 8943 0167 01       		.uleb128 0x1
 8944 0168 40       		.uleb128 0x40
 8945 0169 06       		.uleb128 0x6
 8946 016a 9642     		.uleb128 0x2116
 8947 016c 0C       		.uleb128 0xc
 8948 016d 01       		.uleb128 0x1
 8949 016e 13       		.uleb128 0x13
 8950 016f 00       		.byte	0
 8951 0170 00       		.byte	0
 8952 0171 18       		.uleb128 0x18
 8953 0172 2E       		.uleb128 0x2e
 8954 0173 00       		.byte	0
 8955 0174 3F       		.uleb128 0x3f
 8956 0175 0C       		.uleb128 0xc
 8957 0176 03       		.uleb128 0x3
 8958 0177 0E       		.uleb128 0xe
 8959 0178 3A       		.uleb128 0x3a
 8960 0179 0B       		.uleb128 0xb
 8961 017a 3B       		.uleb128 0x3b
 8962 017b 05       		.uleb128 0x5
 8963 017c 27       		.uleb128 0x27
 8964 017d 0C       		.uleb128 0xc
 8965 017e 11       		.uleb128 0x11
 8966 017f 01       		.uleb128 0x1
 8967 0180 12       		.uleb128 0x12
 8968 0181 01       		.uleb128 0x1
 8969 0182 40       		.uleb128 0x40
 8970 0183 06       		.uleb128 0x6
 8971 0184 9642     		.uleb128 0x2116
 8972 0186 0C       		.uleb128 0xc
 8973 0187 00       		.byte	0
 8974 0188 00       		.byte	0
 8975 0189 19       		.uleb128 0x19
 8976 018a 34       		.uleb128 0x34
 8977 018b 00       		.byte	0
 8978 018c 03       		.uleb128 0x3
 8979 018d 0E       		.uleb128 0xe
 8980 018e 3A       		.uleb128 0x3a
 8981 018f 0B       		.uleb128 0xb
ARM GAS  /tmp/cc4fp2Bh.s 			page 205


 8982 0190 3B       		.uleb128 0x3b
 8983 0191 0B       		.uleb128 0xb
 8984 0192 49       		.uleb128 0x49
 8985 0193 13       		.uleb128 0x13
 8986 0194 3F       		.uleb128 0x3f
 8987 0195 0C       		.uleb128 0xc
 8988 0196 02       		.uleb128 0x2
 8989 0197 0A       		.uleb128 0xa
 8990 0198 00       		.byte	0
 8991 0199 00       		.byte	0
 8992 019a 1A       		.uleb128 0x1a
 8993 019b 34       		.uleb128 0x34
 8994 019c 00       		.byte	0
 8995 019d 03       		.uleb128 0x3
 8996 019e 0E       		.uleb128 0xe
 8997 019f 3A       		.uleb128 0x3a
 8998 01a0 0B       		.uleb128 0xb
 8999 01a1 3B       		.uleb128 0x3b
 9000 01a2 0B       		.uleb128 0xb
 9001 01a3 49       		.uleb128 0x49
 9002 01a4 13       		.uleb128 0x13
 9003 01a5 3F       		.uleb128 0x3f
 9004 01a6 0C       		.uleb128 0xc
 9005 01a7 3C       		.uleb128 0x3c
 9006 01a8 0C       		.uleb128 0xc
 9007 01a9 00       		.byte	0
 9008 01aa 00       		.byte	0
 9009 01ab 00       		.byte	0
 9010              		.section	.debug_loc,"",%progbits
 9011              	.Ldebug_loc0:
 9012              	.LLST0:
 9013 0000 00000000 		.4byte	.LFB20
 9014 0004 02000000 		.4byte	.LCFI0
 9015 0008 0200     		.2byte	0x2
 9016 000a 7D       		.byte	0x7d
 9017 000b 00       		.sleb128 0
 9018 000c 02000000 		.4byte	.LCFI0
 9019 0010 5C000000 		.4byte	.LFE20
 9020 0014 0200     		.2byte	0x2
 9021 0016 7D       		.byte	0x7d
 9022 0017 08       		.sleb128 8
 9023 0018 00000000 		.4byte	0
 9024 001c 00000000 		.4byte	0
 9025              	.LLST1:
 9026 0020 00000000 		.4byte	.LFB23
 9027 0024 02000000 		.4byte	.LCFI1
 9028 0028 0200     		.2byte	0x2
 9029 002a 7D       		.byte	0x7d
 9030 002b 00       		.sleb128 0
 9031 002c 02000000 		.4byte	.LCFI1
 9032 0030 BC000000 		.4byte	.LFE23
 9033 0034 0200     		.2byte	0x2
 9034 0036 7D       		.byte	0x7d
 9035 0037 08       		.sleb128 8
 9036 0038 00000000 		.4byte	0
 9037 003c 00000000 		.4byte	0
 9038              	.LLST2:
ARM GAS  /tmp/cc4fp2Bh.s 			page 206


 9039 0040 00000000 		.4byte	.LFB24
 9040 0044 02000000 		.4byte	.LCFI2
 9041 0048 0200     		.2byte	0x2
 9042 004a 7D       		.byte	0x7d
 9043 004b 00       		.sleb128 0
 9044 004c 02000000 		.4byte	.LCFI2
 9045 0050 70000000 		.4byte	.LFE24
 9046 0054 0200     		.2byte	0x2
 9047 0056 7D       		.byte	0x7d
 9048 0057 10       		.sleb128 16
 9049 0058 00000000 		.4byte	0
 9050 005c 00000000 		.4byte	0
 9051              	.LLST3:
 9052 0060 00000000 		.4byte	.LFB25
 9053 0064 02000000 		.4byte	.LCFI3
 9054 0068 0200     		.2byte	0x2
 9055 006a 7D       		.byte	0x7d
 9056 006b 00       		.sleb128 0
 9057 006c 02000000 		.4byte	.LCFI3
 9058 0070 04000000 		.4byte	.LCFI4
 9059 0074 0200     		.2byte	0x2
 9060 0076 7D       		.byte	0x7d
 9061 0077 08       		.sleb128 8
 9062 0078 04000000 		.4byte	.LCFI4
 9063 007c CC030000 		.4byte	.LFE25
 9064 0080 0200     		.2byte	0x2
 9065 0082 7D       		.byte	0x7d
 9066 0083 20       		.sleb128 32
 9067 0084 00000000 		.4byte	0
 9068 0088 00000000 		.4byte	0
 9069              	.LLST4:
 9070 008c 00000000 		.4byte	.LFB26
 9071 0090 02000000 		.4byte	.LCFI5
 9072 0094 0200     		.2byte	0x2
 9073 0096 7D       		.byte	0x7d
 9074 0097 00       		.sleb128 0
 9075 0098 02000000 		.4byte	.LCFI5
 9076 009c 04000000 		.4byte	.LCFI6
 9077 00a0 0200     		.2byte	0x2
 9078 00a2 7D       		.byte	0x7d
 9079 00a3 08       		.sleb128 8
 9080 00a4 04000000 		.4byte	.LCFI6
 9081 00a8 70000000 		.4byte	.LFE26
 9082 00ac 0200     		.2byte	0x2
 9083 00ae 7D       		.byte	0x7d
 9084 00af 10       		.sleb128 16
 9085 00b0 00000000 		.4byte	0
 9086 00b4 00000000 		.4byte	0
 9087              	.LLST5:
 9088 00b8 00000000 		.4byte	.LFB27
 9089 00bc 02000000 		.4byte	.LCFI7
 9090 00c0 0200     		.2byte	0x2
 9091 00c2 7D       		.byte	0x7d
 9092 00c3 00       		.sleb128 0
 9093 00c4 02000000 		.4byte	.LCFI7
 9094 00c8 98020000 		.4byte	.LFE27
 9095 00cc 0200     		.2byte	0x2
ARM GAS  /tmp/cc4fp2Bh.s 			page 207


 9096 00ce 7D       		.byte	0x7d
 9097 00cf 08       		.sleb128 8
 9098 00d0 00000000 		.4byte	0
 9099 00d4 00000000 		.4byte	0
 9100              	.LLST6:
 9101 00d8 00000000 		.4byte	.LFB28
 9102 00dc 02000000 		.4byte	.LCFI8
 9103 00e0 0200     		.2byte	0x2
 9104 00e2 7D       		.byte	0x7d
 9105 00e3 00       		.sleb128 0
 9106 00e4 02000000 		.4byte	.LCFI8
 9107 00e8 04000000 		.4byte	.LCFI9
 9108 00ec 0200     		.2byte	0x2
 9109 00ee 7D       		.byte	0x7d
 9110 00ef 04       		.sleb128 4
 9111 00f0 04000000 		.4byte	.LCFI9
 9112 00f4 50010000 		.4byte	.LFE28
 9113 00f8 0200     		.2byte	0x2
 9114 00fa 7D       		.byte	0x7d
 9115 00fb 18       		.sleb128 24
 9116 00fc 00000000 		.4byte	0
 9117 0100 00000000 		.4byte	0
 9118              	.LLST7:
 9119 0104 00000000 		.4byte	.LFB29
 9120 0108 02000000 		.4byte	.LCFI10
 9121 010c 0200     		.2byte	0x2
 9122 010e 7D       		.byte	0x7d
 9123 010f 00       		.sleb128 0
 9124 0110 02000000 		.4byte	.LCFI10
 9125 0114 04000000 		.4byte	.LCFI11
 9126 0118 0200     		.2byte	0x2
 9127 011a 7D       		.byte	0x7d
 9128 011b 08       		.sleb128 8
 9129 011c 04000000 		.4byte	.LCFI11
 9130 0120 F4020000 		.4byte	.LFE29
 9131 0124 0200     		.2byte	0x2
 9132 0126 7D       		.byte	0x7d
 9133 0127 18       		.sleb128 24
 9134 0128 00000000 		.4byte	0
 9135 012c 00000000 		.4byte	0
 9136              	.LLST8:
 9137 0130 00000000 		.4byte	.LFB30
 9138 0134 02000000 		.4byte	.LCFI12
 9139 0138 0200     		.2byte	0x2
 9140 013a 7D       		.byte	0x7d
 9141 013b 00       		.sleb128 0
 9142 013c 02000000 		.4byte	.LCFI12
 9143 0140 04000000 		.4byte	.LCFI13
 9144 0144 0200     		.2byte	0x2
 9145 0146 7D       		.byte	0x7d
 9146 0147 08       		.sleb128 8
 9147 0148 04000000 		.4byte	.LCFI13
 9148 014c 70010000 		.4byte	.LFE30
 9149 0150 0200     		.2byte	0x2
 9150 0152 7D       		.byte	0x7d
 9151 0153 20       		.sleb128 32
 9152 0154 00000000 		.4byte	0
ARM GAS  /tmp/cc4fp2Bh.s 			page 208


 9153 0158 00000000 		.4byte	0
 9154              	.LLST9:
 9155 015c 00000000 		.4byte	.LFB31
 9156 0160 02000000 		.4byte	.LCFI14
 9157 0164 0200     		.2byte	0x2
 9158 0166 7D       		.byte	0x7d
 9159 0167 00       		.sleb128 0
 9160 0168 02000000 		.4byte	.LCFI14
 9161 016c 04000000 		.4byte	.LCFI15
 9162 0170 0200     		.2byte	0x2
 9163 0172 7D       		.byte	0x7d
 9164 0173 08       		.sleb128 8
 9165 0174 04000000 		.4byte	.LCFI15
 9166 0178 80080000 		.4byte	.LFE31
 9167 017c 0200     		.2byte	0x2
 9168 017e 7D       		.byte	0x7d
 9169 017f 20       		.sleb128 32
 9170 0180 00000000 		.4byte	0
 9171 0184 00000000 		.4byte	0
 9172              	.LLST10:
 9173 0188 00000000 		.4byte	.LFB32
 9174 018c 02000000 		.4byte	.LCFI16
 9175 0190 0200     		.2byte	0x2
 9176 0192 7D       		.byte	0x7d
 9177 0193 00       		.sleb128 0
 9178 0194 02000000 		.4byte	.LCFI16
 9179 0198 04000000 		.4byte	.LCFI17
 9180 019c 0200     		.2byte	0x2
 9181 019e 7D       		.byte	0x7d
 9182 019f 08       		.sleb128 8
 9183 01a0 04000000 		.4byte	.LCFI17
 9184 01a4 84000000 		.4byte	.LFE32
 9185 01a8 0200     		.2byte	0x2
 9186 01aa 7D       		.byte	0x7d
 9187 01ab 18       		.sleb128 24
 9188 01ac 00000000 		.4byte	0
 9189 01b0 00000000 		.4byte	0
 9190              	.LLST11:
 9191 01b4 00000000 		.4byte	.LFB33
 9192 01b8 02000000 		.4byte	.LCFI18
 9193 01bc 0200     		.2byte	0x2
 9194 01be 7D       		.byte	0x7d
 9195 01bf 00       		.sleb128 0
 9196 01c0 02000000 		.4byte	.LCFI18
 9197 01c4 04000000 		.4byte	.LCFI19
 9198 01c8 0200     		.2byte	0x2
 9199 01ca 7D       		.byte	0x7d
 9200 01cb 08       		.sleb128 8
 9201 01cc 04000000 		.4byte	.LCFI19
 9202 01d0 2C010000 		.4byte	.LFE33
 9203 01d4 0200     		.2byte	0x2
 9204 01d6 7D       		.byte	0x7d
 9205 01d7 18       		.sleb128 24
 9206 01d8 00000000 		.4byte	0
 9207 01dc 00000000 		.4byte	0
 9208              	.LLST12:
 9209 01e0 00000000 		.4byte	.LFB35
ARM GAS  /tmp/cc4fp2Bh.s 			page 209


 9210 01e4 02000000 		.4byte	.LCFI20
 9211 01e8 0200     		.2byte	0x2
 9212 01ea 7D       		.byte	0x7d
 9213 01eb 00       		.sleb128 0
 9214 01ec 02000000 		.4byte	.LCFI20
 9215 01f0 04000000 		.4byte	.LCFI21
 9216 01f4 0200     		.2byte	0x2
 9217 01f6 7D       		.byte	0x7d
 9218 01f7 08       		.sleb128 8
 9219 01f8 04000000 		.4byte	.LCFI21
 9220 01fc 30060000 		.4byte	.LFE35
 9221 0200 0200     		.2byte	0x2
 9222 0202 7D       		.byte	0x7d
 9223 0203 20       		.sleb128 32
 9224 0204 00000000 		.4byte	0
 9225 0208 00000000 		.4byte	0
 9226              	.LLST13:
 9227 020c 00000000 		.4byte	.LFB36
 9228 0210 02000000 		.4byte	.LCFI22
 9229 0214 0200     		.2byte	0x2
 9230 0216 7D       		.byte	0x7d
 9231 0217 00       		.sleb128 0
 9232 0218 02000000 		.4byte	.LCFI22
 9233 021c 04000000 		.4byte	.LCFI23
 9234 0220 0200     		.2byte	0x2
 9235 0222 7D       		.byte	0x7d
 9236 0223 08       		.sleb128 8
 9237 0224 04000000 		.4byte	.LCFI23
 9238 0228 E8060000 		.4byte	.LFE36
 9239 022c 0200     		.2byte	0x2
 9240 022e 7D       		.byte	0x7d
 9241 022f 20       		.sleb128 32
 9242 0230 00000000 		.4byte	0
 9243 0234 00000000 		.4byte	0
 9244              		.section	.debug_aranges,"",%progbits
 9245 0000 9C000000 		.4byte	0x9c
 9246 0004 0200     		.2byte	0x2
 9247 0006 00000000 		.4byte	.Ldebug_info0
 9248 000a 04       		.byte	0x4
 9249 000b 00       		.byte	0
 9250 000c 0000     		.2byte	0
 9251 000e 0000     		.2byte	0
 9252 0010 00000000 		.4byte	.LFB20
 9253 0014 5C000000 		.4byte	.LFE20-.LFB20
 9254 0018 00000000 		.4byte	.LFB21
 9255 001c FC000000 		.4byte	.LFE21-.LFB21
 9256 0020 00000000 		.4byte	.LFB22
 9257 0024 10000000 		.4byte	.LFE22-.LFB22
 9258 0028 00000000 		.4byte	.LFB23
 9259 002c BC000000 		.4byte	.LFE23-.LFB23
 9260 0030 00000000 		.4byte	.LFB24
 9261 0034 70000000 		.4byte	.LFE24-.LFB24
 9262 0038 00000000 		.4byte	.LFB25
 9263 003c CC030000 		.4byte	.LFE25-.LFB25
 9264 0040 00000000 		.4byte	.LFB26
 9265 0044 70000000 		.4byte	.LFE26-.LFB26
 9266 0048 00000000 		.4byte	.LFB27
ARM GAS  /tmp/cc4fp2Bh.s 			page 210


 9267 004c 98020000 		.4byte	.LFE27-.LFB27
 9268 0050 00000000 		.4byte	.LFB28
 9269 0054 50010000 		.4byte	.LFE28-.LFB28
 9270 0058 00000000 		.4byte	.LFB29
 9271 005c F4020000 		.4byte	.LFE29-.LFB29
 9272 0060 00000000 		.4byte	.LFB30
 9273 0064 70010000 		.4byte	.LFE30-.LFB30
 9274 0068 00000000 		.4byte	.LFB31
 9275 006c 80080000 		.4byte	.LFE31-.LFB31
 9276 0070 00000000 		.4byte	.LFB32
 9277 0074 84000000 		.4byte	.LFE32-.LFB32
 9278 0078 00000000 		.4byte	.LFB33
 9279 007c 2C010000 		.4byte	.LFE33-.LFB33
 9280 0080 00000000 		.4byte	.LFB34
 9281 0084 F8000000 		.4byte	.LFE34-.LFB34
 9282 0088 00000000 		.4byte	.LFB35
 9283 008c 30060000 		.4byte	.LFE35-.LFB35
 9284 0090 00000000 		.4byte	.LFB36
 9285 0094 E8060000 		.4byte	.LFE36-.LFB36
 9286 0098 00000000 		.4byte	0
 9287 009c 00000000 		.4byte	0
 9288              		.section	.debug_ranges,"",%progbits
 9289              	.Ldebug_ranges0:
 9290 0000 00000000 		.4byte	.LFB20
 9291 0004 5C000000 		.4byte	.LFE20
 9292 0008 00000000 		.4byte	.LFB21
 9293 000c FC000000 		.4byte	.LFE21
 9294 0010 00000000 		.4byte	.LFB22
 9295 0014 10000000 		.4byte	.LFE22
 9296 0018 00000000 		.4byte	.LFB23
 9297 001c BC000000 		.4byte	.LFE23
 9298 0020 00000000 		.4byte	.LFB24
 9299 0024 70000000 		.4byte	.LFE24
 9300 0028 00000000 		.4byte	.LFB25
 9301 002c CC030000 		.4byte	.LFE25
 9302 0030 00000000 		.4byte	.LFB26
 9303 0034 70000000 		.4byte	.LFE26
 9304 0038 00000000 		.4byte	.LFB27
 9305 003c 98020000 		.4byte	.LFE27
 9306 0040 00000000 		.4byte	.LFB28
 9307 0044 50010000 		.4byte	.LFE28
 9308 0048 00000000 		.4byte	.LFB29
 9309 004c F4020000 		.4byte	.LFE29
 9310 0050 00000000 		.4byte	.LFB30
 9311 0054 70010000 		.4byte	.LFE30
 9312 0058 00000000 		.4byte	.LFB31
 9313 005c 80080000 		.4byte	.LFE31
 9314 0060 00000000 		.4byte	.LFB32
 9315 0064 84000000 		.4byte	.LFE32
 9316 0068 00000000 		.4byte	.LFB33
 9317 006c 2C010000 		.4byte	.LFE33
 9318 0070 00000000 		.4byte	.LFB34
 9319 0074 F8000000 		.4byte	.LFE34
 9320 0078 00000000 		.4byte	.LFB35
 9321 007c 30060000 		.4byte	.LFE35
 9322 0080 00000000 		.4byte	.LFB36
 9323 0084 E8060000 		.4byte	.LFE36
ARM GAS  /tmp/cc4fp2Bh.s 			page 211


 9324 0088 00000000 		.4byte	0
 9325 008c 00000000 		.4byte	0
 9326              		.section	.debug_line,"",%progbits
 9327              	.Ldebug_line0:
 9328 0000 EC060000 		.section	.debug_str,"MS",%progbits,1
 9328      0200F600 
 9328      00000201 
 9328      FB0E0D00 
 9328      01010101 
 9329              	.LASF112:
 9330 0000 47534D5F 		.ascii	"GSM_CMGF\000"
 9330      434D4746 
 9330      00
 9331              	.LASF58:
 9332 0009 7074724B 		.ascii	"ptrKEY\000"
 9332      455900
 9333              	.LASF121:
 9334 0010 47534D5F 		.ascii	"GSM_IPCONNCLOSE\000"
 9334      4950434F 
 9334      4E4E434C 
 9334      4F534500 
 9335              	.LASF122:
 9336 0020 47534D5F 		.ascii	"GSM_SIM1\000"
 9336      53494D31 
 9336      00
 9337              	.LASF123:
 9338 0029 47534D5F 		.ascii	"GSM_SIM2\000"
 9338      53494D32 
 9338      00
 9339              	.LASF141:
 9340 0032 53494D39 		.ascii	"SIM900CLAVESIM2\000"
 9340      3030434C 
 9340      41564553 
 9340      494D3200 
 9341              	.LASF80:
 9342 0042 70427566 		.ascii	"pBuffUARTGSMtxR\000"
 9342      66554152 
 9342      5447534D 
 9342      74785200 
 9343              	.LASF21:
 9344 0052 42535252 		.ascii	"BSRR\000"
 9344      00
 9345              	.LASF81:
 9346 0057 70427566 		.ascii	"pBuffUARTGSMtxW\000"
 9346      66554152 
 9346      5447534D 
 9346      74785700 
 9347              	.LASF57:
 9348 0067 70747255 		.ascii	"ptrUSER\000"
 9348      53455200 
 9349              	.LASF46:
 9350 006f 47534D52 		.ascii	"GSMReceive\000"
 9350      65636569 
 9350      766500
 9351              	.LASF101:
 9352 007a 47534D49 		.ascii	"GSMIPadd\000"
 9352      50616464 
ARM GAS  /tmp/cc4fp2Bh.s 			page 212


 9352      00
 9353              	.LASF137:
 9354 0083 53494D39 		.ascii	"SIM900USUARIOSIM1\000"
 9354      30305553 
 9354      55415249 
 9354      4F53494D 
 9354      3100
 9355              	.LASF140:
 9356 0095 53494D39 		.ascii	"SIM900USUARIOSIM2\000"
 9356      30305553 
 9356      55415249 
 9356      4F53494D 
 9356      3200
 9357              	.LASF114:
 9358 00a7 47534D5F 		.ascii	"GSM_IPINITIAL\000"
 9358      4950494E 
 9358      49544941 
 9358      4C00
 9359              	.LASF151:
 9360 00b5 47534D5F 		.ascii	"GSM_Start\000"
 9360      53746172 
 9360      7400
 9361              	.LASF10:
 9362 00bf 756E7369 		.ascii	"unsigned int\000"
 9362      676E6564 
 9362      20696E74 
 9362      00
 9363              	.LASF126:
 9364 00cc 70726573 		.ascii	"prestadorSimTime\000"
 9364      7461646F 
 9364      7253696D 
 9364      54696D65 
 9364      00
 9365              	.LASF87:
 9366 00dd 47534D53 		.ascii	"GSMSendCommandTimeOut\000"
 9366      656E6443 
 9366      6F6D6D61 
 9366      6E645469 
 9366      6D654F75 
 9367              	.LASF84:
 9368 00f3 47534D47 		.ascii	"GSMGeneralTimeOut\000"
 9368      656E6572 
 9368      616C5469 
 9368      6D654F75 
 9368      7400
 9369              	.LASF49:
 9370 0105 74696D65 		.ascii	"timeOut\000"
 9370      4F757400 
 9371              	.LASF117:
 9372 010d 47534D5F 		.ascii	"GSM_IPSTATUS\000"
 9372      49505354 
 9372      41545553 
 9372      00
 9373              	.LASF110:
 9374 011a 47534D5F 		.ascii	"GSM_ERR\000"
 9374      45525200 
 9375              	.LASF70:
ARM GAS  /tmp/cc4fp2Bh.s 			page 213


 9376 0122 70416374 		.ascii	"pActDact\000"
 9376      44616374 
 9376      00
 9377              	.LASF90:
 9378 012b 47534D53 		.ascii	"GSMSendSMSFlag\000"
 9378      656E6453 
 9378      4D53466C 
 9378      616700
 9379              	.LASF12:
 9380 013a 75696E74 		.ascii	"uint32_t\000"
 9380      33325F74 
 9380      00
 9381              	.LASF36:
 9382 0143 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario1\000"
 9382      46494755 
 9382      52414349 
 9382      4F4E6770 
 9382      72735573 
 9383              	.LASF40:
 9384 015e 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario2\000"
 9384      46494755 
 9384      52414349 
 9384      4F4E6770 
 9384      72735573 
 9385              	.LASF89:
 9386 0179 47534D53 		.ascii	"GSMSendSMSState\000"
 9386      656E6453 
 9386      4D535374 
 9386      61746500 
 9387              	.LASF37:
 9388 0189 70434F4E 		.ascii	"pCONFIGURACIONgprsClave1\000"
 9388      46494755 
 9388      52414349 
 9388      4F4E6770 
 9388      7273436C 
 9389              	.LASF41:
 9390 01a2 70434F4E 		.ascii	"pCONFIGURACIONgprsClave2\000"
 9390      46494755 
 9390      52414349 
 9390      4F4E6770 
 9390      7273436C 
 9391              	.LASF129:
 9392 01bb 47534D6E 		.ascii	"GSMnumSMS\000"
 9392      756D534D 
 9392      5300
 9393              	.LASF67:
 9394 01c5 70416C65 		.ascii	"pAlertasReportar\000"
 9394      72746173 
 9394      5265706F 
 9394      72746172 
 9394      00
 9395              	.LASF77:
 9396 01d6 70427566 		.ascii	"pBuffUARTGSMrxR\000"
 9396      66554152 
 9396      5447534D 
 9396      72785200 
 9397              	.LASF76:
ARM GAS  /tmp/cc4fp2Bh.s 			page 214


 9398 01e6 70427566 		.ascii	"pBuffUARTGSMrxW\000"
 9398      66554152 
 9398      5447534D 
 9398      72785700 
 9399              	.LASF143:
 9400 01f6 53494D39 		.ascii	"SIM900PORTREMOTE\000"
 9400      3030504F 
 9400      52545245 
 9400      4D4F5445 
 9400      00
 9401              	.LASF60:
 9402 0207 70747249 		.ascii	"ptrIPremote\000"
 9402      5072656D 
 9402      6F746500 
 9403              	.LASF54:
 9404 0213 7074724E 		.ascii	"ptrNUM\000"
 9404      554D00
 9405              	.LASF9:
 9406 021a 6C6F6E67 		.ascii	"long long unsigned int\000"
 9406      206C6F6E 
 9406      6720756E 
 9406      7369676E 
 9406      65642069 
 9407              	.LASF45:
 9408 0231 47534D43 		.ascii	"GSMCloseIP\000"
 9408      6C6F7365 
 9408      495000
 9409              	.LASF74:
 9410 023c 62756666 		.ascii	"buffUARTGSMrx\000"
 9410      55415254 
 9410      47534D72 
 9410      7800
 9411              	.LASF73:
 9412 024a 47534D43 		.ascii	"GSMConfigPDPGPRS\000"
 9412      6F6E6669 
 9412      67504450 
 9412      47505253 
 9412      00
 9413              	.LASF147:
 9414 025b 75736172 		.ascii	"usart1_pckt_bytes\000"
 9414      74315F70 
 9414      636B745F 
 9414      62797465 
 9414      7300
 9415              	.LASF5:
 9416 026d 5F5F7569 		.ascii	"__uint16_t\000"
 9416      6E743136 
 9416      5F7400
 9417              	.LASF14:
 9418 0278 4D4F4445 		.ascii	"MODER\000"
 9418      5200
 9419              	.LASF134:
 9420 027e 70726573 		.ascii	"prestadorSimSelect\000"
 9420      7461646F 
 9420      7253696D 
 9420      53656C65 
 9420      637400
ARM GAS  /tmp/cc4fp2Bh.s 			page 215


 9421              	.LASF133:
 9422 0291 47534D72 		.ascii	"GSMrxSMSState\000"
 9422      78534D53 
 9422      53746174 
 9422      6500
 9423              	.LASF135:
 9424 029f 666C6167 		.ascii	"flagCloseIP\000"
 9424      436C6F73 
 9424      65495000 
 9425              	.LASF108:
 9426 02ab 44423330 		.ascii	"DB300flagConnGPRS\000"
 9426      30666C61 
 9426      67436F6E 
 9426      6E475052 
 9426      5300
 9427              	.LASF124:
 9428 02bd 47534D5F 		.ascii	"GSM_SENDOK\000"
 9428      53454E44 
 9428      4F4B00
 9429              	.LASF29:
 9430 02c8 47534D5F 		.ascii	"GSM_Stop\000"
 9430      53746F70 
 9430      00
 9431              	.LASF28:
 9432 02d1 47534D5F 		.ascii	"GSM_Start_Stop_ResetSM\000"
 9432      53746172 
 9432      745F5374 
 9432      6F705F52 
 9432      65736574 
 9433              	.LASF146:
 9434 02e8 75736172 		.ascii	"usart1_have_data\000"
 9434      74315F68 
 9434      6176655F 
 9434      64617461 
 9434      00
 9435              	.LASF79:
 9436 02f9 62756666 		.ascii	"buffUARTGSMtx\000"
 9436      55415254 
 9436      47534D74 
 9436      7800
 9437              	.LASF18:
 9438 0307 50555044 		.ascii	"PUPDR\000"
 9438      5200
 9439              	.LASF105:
 9440 030d 47534D53 		.ascii	"GSMSendIPTimeOut\000"
 9440      656E6449 
 9440      5054696D 
 9440      654F7574 
 9440      00
 9441              	.LASF120:
 9442 031e 47534D5F 		.ascii	"GSM_IPCONNFAIL\000"
 9442      4950434F 
 9442      4E4E4641 
 9442      494C00
 9443              	.LASF61:
 9444 032d 70747250 		.ascii	"ptrPORTremote\000"
 9444      4F525472 
ARM GAS  /tmp/cc4fp2Bh.s 			page 216


 9444      656D6F74 
 9444      6500
 9445              	.LASF26:
 9446 033b 63686172 		.ascii	"char\000"
 9446      00
 9447              	.LASF145:
 9448 0340 75736172 		.ascii	"usart1_pckt_ready\000"
 9448      74315F70 
 9448      636B745F 
 9448      72656164 
 9448      7900
 9449              	.LASF96:
 9450 0352 47534D43 		.ascii	"GSMConfigGPRSTimeOut\000"
 9450      6F6E6669 
 9450      67475052 
 9450      5354696D 
 9450      654F7574 
 9451              	.LASF68:
 9452 0367 70757365 		.ascii	"puserCode\000"
 9452      72436F64 
 9452      6500
 9453              	.LASF111:
 9454 0371 47534D5F 		.ascii	"GSM_RTA\000"
 9454      52544100 
 9455              	.LASF142:
 9456 0379 53494D39 		.ascii	"SIM900IPREMOTE\000"
 9456      30304950 
 9456      52454D4F 
 9456      544500
 9457              	.LASF116:
 9458 0388 47534D5F 		.ascii	"GSM_IPGPRSACT\000"
 9458      49504750 
 9458      52534143 
 9458      5400
 9459              	.LASF66:
 9460 0396 47534D72 		.ascii	"GSMrxSMS\000"
 9460      78534D53 
 9460      00
 9461              	.LASF93:
 9462 039f 47534D43 		.ascii	"GSMConfigState\000"
 9462      6F6E6669 
 9462      67537461 
 9462      746500
 9463              	.LASF64:
 9464 03ae 47534D54 		.ascii	"GSMTimeoutCounters\000"
 9464      696D656F 
 9464      7574436F 
 9464      756E7465 
 9464      727300
 9465              	.LASF78:
 9466 03c1 5061636B 		.ascii	"PacketReadyUARTGSM\000"
 9466      65745265 
 9466      61647955 
 9466      41525447 
 9466      534D00
 9467              	.LASF92:
 9468 03d4 47534D53 		.ascii	"GSMSendSMSbuffAux\000"
ARM GAS  /tmp/cc4fp2Bh.s 			page 217


 9468      656E6453 
 9468      4D536275 
 9468      66664175 
 9468      7800
 9469              	.LASF132:
 9470 03e6 47534D52 		.ascii	"GSMReadSMSrepIn\000"
 9470      65616453 
 9470      4D537265 
 9470      70496E00 
 9471              	.LASF8:
 9472 03f6 6C6F6E67 		.ascii	"long long int\000"
 9472      206C6F6E 
 9472      6720696E 
 9472      7400
 9473              	.LASF144:
 9474 0404 75736172 		.ascii	"usart1_mini_timeout\000"
 9474      74315F6D 
 9474      696E695F 
 9474      74696D65 
 9474      6F757400 
 9475              	.LASF82:
 9476 0418 47534D53 		.ascii	"GSMStartState\000"
 9476      74617274 
 9476      53746174 
 9476      6500
 9477              	.LASF69:
 9478 0426 70636C61 		.ascii	"pclaveAct\000"
 9478      76654163 
 9478      7400
 9479              	.LASF63:
 9480 0430 47534D53 		.ascii	"GSMSendIP\000"
 9480      656E6449 
 9480      5000
 9481              	.LASF43:
 9482 043a 70434F4E 		.ascii	"pCONFIGURACIONIPREMOTE\000"
 9482      46494755 
 9482      52414349 
 9482      4F4E4950 
 9482      52454D4F 
 9483              	.LASF102:
 9484 0451 47505253 		.ascii	"GPRSrssi\000"
 9484      72737369 
 9484      00
 9485              	.LASF127:
 9486 045a 47534D43 		.ascii	"GSMCantSMS\000"
 9486      616E7453 
 9486      4D5300
 9487              	.LASF17:
 9488 0465 4F535045 		.ascii	"OSPEEDR\000"
 9488      45445200 
 9489              	.LASF25:
 9490 046d 6C6F6E67 		.ascii	"long double\000"
 9490      20646F75 
 9490      626C6500 
 9491              	.LASF11:
 9492 0479 75696E74 		.ascii	"uint16_t\000"
 9492      31365F74 
ARM GAS  /tmp/cc4fp2Bh.s 			page 218


 9492      00
 9493              	.LASF75:
 9494 0482 62756666 		.ascii	"buffUARTGSMrx2\000"
 9494      55415254 
 9494      47534D72 
 9494      783200
 9495              	.LASF32:
 9496 0491 7047534D 		.ascii	"pGSMHWstatus\000"
 9496      48577374 
 9496      61747573 
 9496      00
 9497              	.LASF62:
 9498 049e 47534D5F 		.ascii	"GSM_SetSIM\000"
 9498      53657453 
 9498      494D00
 9499              	.LASF99:
 9500 04a9 47534D62 		.ascii	"GSMbuffStatus\000"
 9500      75666653 
 9500      74617475 
 9500      7300
 9501              	.LASF16:
 9502 04b7 52455345 		.ascii	"RESERVED0\000"
 9502      52564544 
 9502      3000
 9503              	.LASF19:
 9504 04c1 52455345 		.ascii	"RESERVED1\000"
 9504      52564544 
 9504      3100
 9505              	.LASF20:
 9506 04cb 52455345 		.ascii	"RESERVED2\000"
 9506      52564544 
 9506      3200
 9507              	.LASF23:
 9508 04d5 52455345 		.ascii	"RESERVED3\000"
 9508      52564544 
 9508      3300
 9509              	.LASF2:
 9510 04df 73686F72 		.ascii	"short int\000"
 9510      7420696E 
 9510      7400
 9511              	.LASF27:
 9512 04e9 47534D50 		.ascii	"GSMProcess\000"
 9512      726F6365 
 9512      737300
 9513              	.LASF51:
 9514 04f4 47534D5F 		.ascii	"GSM_Config\000"
 9514      436F6E66 
 9514      696700
 9515              	.LASF4:
 9516 04ff 6C6F6E67 		.ascii	"long int\000"
 9516      20696E74 
 9516      00
 9517              	.LASF131:
 9518 0508 47534D52 		.ascii	"GSMReadSMScommand\000"
 9518      65616453 
 9518      4D53636F 
 9518      6D6D616E 
ARM GAS  /tmp/cc4fp2Bh.s 			page 219


 9518      6400
 9519              	.LASF119:
 9520 051a 47534D5F 		.ascii	"GSM_IPCONNOK\000"
 9520      4950434F 
 9520      4E4E4F4B 
 9520      00
 9521              	.LASF55:
 9522 0527 47534D43 		.ascii	"GSMConfigGPRS\000"
 9522      6F6E6669 
 9522      67475052 
 9522      5300
 9523              	.LASF53:
 9524 0535 7074724D 		.ascii	"ptrMSG\000"
 9524      534700
 9525              	.LASF15:
 9526 053c 4F545950 		.ascii	"OTYPER\000"
 9526      455200
 9527              	.LASF72:
 9528 0543 666C6167 		.ascii	"flag\000"
 9528      00
 9529              	.LASF86:
 9530 0548 47534D53 		.ascii	"GSMSendCommandFlag\000"
 9530      656E6443 
 9530      6F6D6D61 
 9530      6E64466C 
 9530      616700
 9531              	.LASF104:
 9532 055b 47534D53 		.ascii	"GSMSendIPFlag\000"
 9532      656E6449 
 9532      50466C61 
 9532      6700
 9533              	.LASF48:
 9534 0569 70747243 		.ascii	"ptrCommand\000"
 9534      6F6D6D61 
 9534      6E6400
 9535              	.LASF52:
 9536 0574 47534D53 		.ascii	"GSMSendSMS\000"
 9536      656E6453 
 9536      4D5300
 9537              	.LASF98:
 9538 057f 47534D43 		.ascii	"GSMConfigGPRSflag\000"
 9538      6F6E6669 
 9538      67475052 
 9538      53666C61 
 9538      6700
 9539              	.LASF35:
 9540 0591 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN1\000"
 9540      46494755 
 9540      52414349 
 9540      4F4E6770 
 9540      72734150 
 9541              	.LASF39:
 9542 05a8 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN2\000"
 9542      46494755 
 9542      52414349 
 9542      4F4E6770 
 9542      72734150 
ARM GAS  /tmp/cc4fp2Bh.s 			page 220


 9543              	.LASF24:
 9544 05bf 4750494F 		.ascii	"GPIO_TypeDef\000"
 9544      5F547970 
 9544      65446566 
 9544      00
 9545              	.LASF115:
 9546 05cc 47534D5F 		.ascii	"GSM_IPSTART\000"
 9546      49505354 
 9546      41525400 
 9547              	.LASF91:
 9548 05d8 47534D53 		.ascii	"GSMSendSMSTimeOut\000"
 9548      656E6453 
 9548      4D535469 
 9548      6D654F75 
 9548      7400
 9549              	.LASF13:
 9550 05ea 73697A65 		.ascii	"sizetype\000"
 9550      74797065 
 9550      00
 9551              	.LASF7:
 9552 05f3 6C6F6E67 		.ascii	"long unsigned int\000"
 9552      20756E73 
 9552      69676E65 
 9552      6420696E 
 9552      7400
 9553              	.LASF149:
 9554 0605 7372632F 		.ascii	"src/sim900_800.c\000"
 9554      73696D39 
 9554      30305F38 
 9554      30302E63 
 9554      00
 9555              	.LASF150:
 9556 0616 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 9556      652F6D65 
 9556      642F446F 
 9556      63756D65 
 9556      6E74732F 
 9557 0649 6100     		.ascii	"a\000"
 9558              	.LASF85:
 9559 064b 47534D53 		.ascii	"GSMSendCommandState\000"
 9559      656E6443 
 9559      6F6D6D61 
 9559      6E645374 
 9559      61746500 
 9560              	.LASF130:
 9561 065f 47534D52 		.ascii	"GSMReadSMSState\000"
 9561      65616453 
 9561      4D535374 
 9561      61746500 
 9562              	.LASF128:
 9563 066f 47534D43 		.ascii	"GSMCantSMS2\000"
 9563      616E7453 
 9563      4D533200 
 9564              	.LASF71:
 9565 067b 7047534D 		.ascii	"pGSMReadSMStel\000"
 9565      52656164 
 9565      534D5374 
ARM GAS  /tmp/cc4fp2Bh.s 			page 221


 9565      656C00
 9566              	.LASF0:
 9567 068a 756E7369 		.ascii	"unsigned char\000"
 9567      676E6564 
 9567      20636861 
 9567      7200
 9568              	.LASF6:
 9569 0698 5F5F7569 		.ascii	"__uint32_t\000"
 9569      6E743332 
 9569      5F7400
 9570              	.LASF47:
 9571 06a3 47534D53 		.ascii	"GSMSendCommand\000"
 9571      656E6443 
 9571      6F6D6D61 
 9571      6E6400
 9572              	.LASF118:
 9573 06b2 47534D5F 		.ascii	"GSM_IPCONNECTING\000"
 9573      4950434F 
 9573      4E4E4543 
 9573      54494E47 
 9573      00
 9574              	.LASF65:
 9575 06c3 47534D50 		.ascii	"GSMPrestador\000"
 9575      72657374 
 9575      61646F72 
 9575      00
 9576              	.LASF56:
 9577 06d0 70747241 		.ascii	"ptrAPN\000"
 9577      504E00
 9578              	.LASF113:
 9579 06d7 47534D5F 		.ascii	"GSM_IPSTATE\000"
 9579      49505354 
 9579      41544500 
 9580              	.LASF103:
 9581 06e3 47534D53 		.ascii	"GSMSendIPState\000"
 9581      656E6449 
 9581      50537461 
 9581      746500
 9582              	.LASF50:
 9583 06f2 70747252 		.ascii	"ptrRta\000"
 9583      746100
 9584              	.LASF107:
 9585 06f9 47534D62 		.ascii	"GSMbuffRtaCommand\000"
 9585      75666652 
 9585      7461436F 
 9585      6D6D616E 
 9585      6400
 9586              	.LASF33:
 9587 070b 70726573 		.ascii	"prestadorSim1\000"
 9587      7461646F 
 9587      7253696D 
 9587      3100
 9588              	.LASF34:
 9589 0719 70726573 		.ascii	"prestadorSim2\000"
 9589      7461646F 
 9589      7253696D 
 9589      3200
ARM GAS  /tmp/cc4fp2Bh.s 			page 222


 9590              	.LASF106:
 9591 0727 47534D53 		.ascii	"GSMSendIPbuffAux\000"
 9591      656E6449 
 9591      50627566 
 9591      66417578 
 9591      00
 9592              	.LASF30:
 9593 0738 47534D5F 		.ascii	"GSM_Delay\000"
 9593      44656C61 
 9593      7900
 9594              	.LASF88:
 9595 0742 47534D53 		.ascii	"GSMSendCommandIntento\000"
 9595      656E6443 
 9595      6F6D6D61 
 9595      6E64496E 
 9595      74656E74 
 9596              	.LASF95:
 9597 0758 47534D43 		.ascii	"GSMConfigTime\000"
 9597      6F6E6669 
 9597      6754696D 
 9597      6500
 9598              	.LASF1:
 9599 0766 7369676E 		.ascii	"signed char\000"
 9599      65642063 
 9599      68617200 
 9600              	.LASF100:
 9601 0772 47534D62 		.ascii	"GSMbuffGPRSCommand\000"
 9601      75666647 
 9601      50525343 
 9601      6F6D6D61 
 9601      6E6400
 9602              	.LASF125:
 9603 0785 70726573 		.ascii	"prestadorSimState\000"
 9603      7461646F 
 9603      7253696D 
 9603      53746174 
 9603      6500
 9604              	.LASF3:
 9605 0797 73686F72 		.ascii	"short unsigned int\000"
 9605      7420756E 
 9605      7369676E 
 9605      65642069 
 9605      6E7400
 9606              	.LASF148:
 9607 07aa 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 9607      43313120 
 9607      352E322E 
 9607      31203230 
 9607      31353132 
 9608 07dd 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 9608      20726576 
 9608      6973696F 
 9608      6E203233 
 9608      31383438 
 9609 0810 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 9609      662D3220 
 9609      2D4F3020 
ARM GAS  /tmp/cc4fp2Bh.s 			page 223


 9609      2D666F6D 
 9609      69742D66 
 9610 0843 66756E63 		.ascii	"function-sections\000"
 9610      74696F6E 
 9610      2D736563 
 9610      74696F6E 
 9610      7300
 9611              	.LASF83:
 9612 0855 47534D53 		.ascii	"GSMStartTime\000"
 9612      74617274 
 9612      54696D65 
 9612      00
 9613              	.LASF38:
 9614 0862 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor1\000"
 9614      46494755 
 9614      52414349 
 9614      4F4E6770 
 9614      72735072 
 9615              	.LASF42:
 9616 087f 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor2\000"
 9616      46494755 
 9616      52414349 
 9616      4F4E6770 
 9616      72735072 
 9617              	.LASF138:
 9618 089c 53494D39 		.ascii	"SIM900CLAVESIM1\000"
 9618      3030434C 
 9618      41564553 
 9618      494D3100 
 9619              	.LASF109:
 9620 08ac 47534D5F 		.ascii	"GSM_OK\000"
 9620      4F4B00
 9621              	.LASF31:
 9622 08b3 72657370 		.ascii	"resp\000"
 9622      00
 9623              	.LASF97:
 9624 08b8 47534D43 		.ascii	"GSMConfigGPRSState\000"
 9624      6F6E6669 
 9624      67475052 
 9624      53537461 
 9624      746500
 9625              	.LASF59:
 9626 08cb 70747249 		.ascii	"ptrIPAdd\000"
 9626      50416464 
 9626      00
 9627              	.LASF44:
 9628 08d4 70434F4E 		.ascii	"pCONFIGURACIONPORTREMOTE\000"
 9628      46494755 
 9628      52414349 
 9628      4F4E504F 
 9628      52545245 
 9629              	.LASF136:
 9630 08ed 53494D39 		.ascii	"SIM900APNSIM1\000"
 9630      30304150 
 9630      4E53494D 
 9630      3100
 9631              	.LASF139:
ARM GAS  /tmp/cc4fp2Bh.s 			page 224


 9632 08fb 53494D39 		.ascii	"SIM900APNSIM2\000"
 9632      30304150 
 9632      4E53494D 
 9632      3200
 9633              	.LASF22:
 9634 0909 4C434B52 		.ascii	"LCKR\000"
 9634      00
 9635              	.LASF94:
 9636 090e 47534D43 		.ascii	"GSMConfigTimeOut\000"
 9636      6F6E6669 
 9636      6754696D 
 9636      654F7574 
 9636      00
 9637              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc4fp2Bh.s 			page 225


DEFINED SYMBOLS
                            *ABS*:00000000 sim900_800.c
                            *COM*:00000100 buffUARTGSMrx
                            *COM*:00000100 buffUARTGSMrx2
                            *COM*:00000004 pBuffUARTGSMrxW
                            *COM*:00000004 pBuffUARTGSMrxR
                            *COM*:00000001 PacketReadyUARTGSM
                            *COM*:00000100 buffUARTGSMtx
                            *COM*:00000004 pBuffUARTGSMtxR
                            *COM*:00000004 pBuffUARTGSMtxW
     /tmp/cc4fp2Bh.s:66     .bss.GSMStartState:00000000 GSMStartState
     /tmp/cc4fp2Bh.s:67     .bss.GSMStartState:00000000 $d
                            *COM*:00000002 GSMStartTime
                            *COM*:00000002 GSMGeneralTimeOut
     /tmp/cc4fp2Bh.s:74     .bss.GSMSendCommandState:00000000 GSMSendCommandState
     /tmp/cc4fp2Bh.s:75     .bss.GSMSendCommandState:00000000 $d
     /tmp/cc4fp2Bh.s:80     .bss.GSMSendCommandFlag:00000000 GSMSendCommandFlag
     /tmp/cc4fp2Bh.s:81     .bss.GSMSendCommandFlag:00000000 $d
                            *COM*:00000002 GSMSendCommandTimeOut
     /tmp/cc4fp2Bh.s:87     .bss.GSMSendCommandIntento:00000000 GSMSendCommandIntento
     /tmp/cc4fp2Bh.s:88     .bss.GSMSendCommandIntento:00000000 $d
     /tmp/cc4fp2Bh.s:93     .bss.GSMSendSMSState:00000000 GSMSendSMSState
     /tmp/cc4fp2Bh.s:94     .bss.GSMSendSMSState:00000000 $d
     /tmp/cc4fp2Bh.s:99     .bss.GSMSendSMSFlag:00000000 GSMSendSMSFlag
     /tmp/cc4fp2Bh.s:100    .bss.GSMSendSMSFlag:00000000 $d
                            *COM*:00000002 GSMSendSMSTimeOut
                            *COM*:00000020 GSMSendSMSbuffAux
     /tmp/cc4fp2Bh.s:107    .bss.GSMConfigState:00000000 GSMConfigState
     /tmp/cc4fp2Bh.s:108    .bss.GSMConfigState:00000000 $d
                            *COM*:00000002 GSMConfigTimeOut
                            *COM*:00000002 GSMConfigTime
                            *COM*:00000002 GSMConfigGPRSTimeOut
     /tmp/cc4fp2Bh.s:116    .bss.GSMConfigGPRSState:00000000 GSMConfigGPRSState
     /tmp/cc4fp2Bh.s:117    .bss.GSMConfigGPRSState:00000000 $d
     /tmp/cc4fp2Bh.s:122    .bss.GSMConfigGPRSflag:00000000 GSMConfigGPRSflag
     /tmp/cc4fp2Bh.s:123    .bss.GSMConfigGPRSflag:00000000 $d
                            *COM*:00000020 GSMbuffStatus
                            *COM*:00000040 GSMbuffGPRSCommand
                            *COM*:00000010 GSMIPadd
     /tmp/cc4fp2Bh.s:131    .data.GPRSrssi:00000000 GPRSrssi
     /tmp/cc4fp2Bh.s:137    .bss.GSMSendIPState:00000000 GSMSendIPState
     /tmp/cc4fp2Bh.s:138    .bss.GSMSendIPState:00000000 $d
     /tmp/cc4fp2Bh.s:143    .bss.GSMSendIPFlag:00000000 GSMSendIPFlag
     /tmp/cc4fp2Bh.s:144    .bss.GSMSendIPFlag:00000000 $d
                            *COM*:00000002 GSMSendIPTimeOut
                            *COM*:00000020 GSMSendIPbuffAux
                            *COM*:00000100 GSMbuffRtaCommand
                            *COM*:00000001 DB300flagConnGPRS
     /tmp/cc4fp2Bh.s:154    .rodata.GSM_OK:00000000 GSM_OK
     /tmp/cc4fp2Bh.s:151    .rodata.GSM_OK:00000000 $d
     /tmp/cc4fp2Bh.s:161    .rodata.GSM_ERR:00000000 GSM_ERR
     /tmp/cc4fp2Bh.s:158    .rodata.GSM_ERR:00000000 $d
     /tmp/cc4fp2Bh.s:167    .rodata.GSM_RTA:00000000 GSM_RTA
     /tmp/cc4fp2Bh.s:174    .rodata.GSM_CMGF:00000000 GSM_CMGF
     /tmp/cc4fp2Bh.s:171    .rodata.GSM_CMGF:00000000 $d
     /tmp/cc4fp2Bh.s:181    .rodata.GSM_IPSTATE:00000000 GSM_IPSTATE
     /tmp/cc4fp2Bh.s:178    .rodata.GSM_IPSTATE:00000000 $d
ARM GAS  /tmp/cc4fp2Bh.s 			page 226


     /tmp/cc4fp2Bh.s:188    .rodata.GSM_IPINITIAL:00000000 GSM_IPINITIAL
     /tmp/cc4fp2Bh.s:185    .rodata.GSM_IPINITIAL:00000000 $d
     /tmp/cc4fp2Bh.s:195    .rodata.GSM_IPSTART:00000000 GSM_IPSTART
     /tmp/cc4fp2Bh.s:192    .rodata.GSM_IPSTART:00000000 $d
     /tmp/cc4fp2Bh.s:202    .rodata.GSM_IPGPRSACT:00000000 GSM_IPGPRSACT
     /tmp/cc4fp2Bh.s:199    .rodata.GSM_IPGPRSACT:00000000 $d
     /tmp/cc4fp2Bh.s:209    .rodata.GSM_IPSTATUS:00000000 GSM_IPSTATUS
     /tmp/cc4fp2Bh.s:206    .rodata.GSM_IPSTATUS:00000000 $d
     /tmp/cc4fp2Bh.s:216    .rodata.GSM_IPCONNECTING:00000000 GSM_IPCONNECTING
     /tmp/cc4fp2Bh.s:213    .rodata.GSM_IPCONNECTING:00000000 $d
     /tmp/cc4fp2Bh.s:223    .rodata.GSM_IPCONNOK:00000000 GSM_IPCONNOK
     /tmp/cc4fp2Bh.s:220    .rodata.GSM_IPCONNOK:00000000 $d
     /tmp/cc4fp2Bh.s:230    .rodata.GSM_IPCONNFAIL:00000000 GSM_IPCONNFAIL
     /tmp/cc4fp2Bh.s:227    .rodata.GSM_IPCONNFAIL:00000000 $d
     /tmp/cc4fp2Bh.s:237    .rodata.GSM_IPCONNCLOSE:00000000 GSM_IPCONNCLOSE
     /tmp/cc4fp2Bh.s:234    .rodata.GSM_IPCONNCLOSE:00000000 $d
     /tmp/cc4fp2Bh.s:244    .rodata.GSM_SIM1:00000000 GSM_SIM1
     /tmp/cc4fp2Bh.s:241    .rodata.GSM_SIM1:00000000 $d
     /tmp/cc4fp2Bh.s:251    .rodata.GSM_SIM2:00000000 GSM_SIM2
     /tmp/cc4fp2Bh.s:248    .rodata.GSM_SIM2:00000000 $d
     /tmp/cc4fp2Bh.s:258    .rodata.GSM_SENDOK:00000000 GSM_SENDOK
     /tmp/cc4fp2Bh.s:255    .rodata.GSM_SENDOK:00000000 $d
     /tmp/cc4fp2Bh.s:264    .bss.prestadorSimState:00000000 prestadorSimState
     /tmp/cc4fp2Bh.s:265    .bss.prestadorSimState:00000000 $d
     /tmp/cc4fp2Bh.s:270    .data.prestadorSimTime:00000000 prestadorSimTime
     /tmp/cc4fp2Bh.s:276    .bss.GSMCantSMS:00000000 GSMCantSMS
     /tmp/cc4fp2Bh.s:277    .bss.GSMCantSMS:00000000 $d
     /tmp/cc4fp2Bh.s:282    .bss.GSMCantSMS2:00000000 GSMCantSMS2
     /tmp/cc4fp2Bh.s:283    .bss.GSMCantSMS2:00000000 $d
     /tmp/cc4fp2Bh.s:288    .data.GSMnumSMS:00000000 GSMnumSMS
     /tmp/cc4fp2Bh.s:294    .bss.GSMReadSMSState:00000000 GSMReadSMSState
     /tmp/cc4fp2Bh.s:295    .bss.GSMReadSMSState:00000000 $d
                            *COM*:00000020 GSMReadSMScommand
                            *COM*:00000020 GSMReadSMSrepIn
     /tmp/cc4fp2Bh.s:302    .bss.GSMrxSMSState:00000000 GSMrxSMSState
     /tmp/cc4fp2Bh.s:303    .bss.GSMrxSMSState:00000000 $d
     /tmp/cc4fp2Bh.s:308    .bss.prestadorSimSelect:00000000 prestadorSimSelect
     /tmp/cc4fp2Bh.s:309    .bss.prestadorSimSelect:00000000 $d
     /tmp/cc4fp2Bh.s:314    .bss.flagCloseIP:00000000 flagCloseIP
     /tmp/cc4fp2Bh.s:315    .bss.flagCloseIP:00000000 $d
     /tmp/cc4fp2Bh.s:317    .text.GSMProcess:00000000 $t
     /tmp/cc4fp2Bh.s:322    .text.GSMProcess:00000000 GSMProcess
     /tmp/cc4fp2Bh.s:375    .text.GSMProcess:00000044 $d
     /tmp/cc4fp2Bh.s:385    .text.GSM_Start:00000000 $t
     /tmp/cc4fp2Bh.s:390    .text.GSM_Start:00000000 GSM_Start
     /tmp/cc4fp2Bh.s:564    .text.GSM_Start:000000f4 $d
     /tmp/cc4fp2Bh.s:570    .text.GSM_Start_Stop_ResetSM:00000000 $t
     /tmp/cc4fp2Bh.s:575    .text.GSM_Start_Stop_ResetSM:00000000 GSM_Start_Stop_ResetSM
     /tmp/cc4fp2Bh.s:590    .text.GSM_Start_Stop_ResetSM:0000000c $d
     /tmp/cc4fp2Bh.s:595    .text.GSM_Stop:00000000 $t
     /tmp/cc4fp2Bh.s:600    .text.GSM_Stop:00000000 GSM_Stop
     /tmp/cc4fp2Bh.s:726    .text.GSM_Stop:000000b0 $d
     /tmp/cc4fp2Bh.s:733    .text.GSM_Delay:00000000 $t
     /tmp/cc4fp2Bh.s:738    .text.GSM_Delay:00000000 GSM_Delay
     /tmp/cc4fp2Bh.s:819    .text.GSM_Delay:00000068 $d
     /tmp/cc4fp2Bh.s:825    .rodata:00000000 $d
     /tmp/cc4fp2Bh.s:832    .text.GSMPrestador:00000000 $t
ARM GAS  /tmp/cc4fp2Bh.s 			page 227


     /tmp/cc4fp2Bh.s:837    .text.GSMPrestador:00000000 GSMPrestador
     /tmp/cc4fp2Bh.s:4361   .text.GSM_SetSIM:00000000 GSM_SetSIM
     /tmp/cc4fp2Bh.s:1946   .text.GSMSendCommand:00000000 GSMSendCommand
     /tmp/cc4fp2Bh.s:1388   .text.GSMPrestador:00000378 $d
     /tmp/cc4fp2Bh.s:1405   .text.GSMPrestador:000003b4 $t
     /tmp/cc4fp2Bh.s:1427   .text.GSMPrestador:000003c8 $d
     /tmp/cc4fp2Bh.s:1436   .text.GSMCloseIP:00000000 $t
     /tmp/cc4fp2Bh.s:1441   .text.GSMCloseIP:00000000 GSMCloseIP
     /tmp/cc4fp2Bh.s:1520   .text.GSMCloseIP:00000064 $d
     /tmp/cc4fp2Bh.s:1555   .text.GSMReceive:00000000 $t
     /tmp/cc4fp2Bh.s:1560   .text.GSMReceive:00000000 GSMReceive
     /tmp/cc4fp2Bh.s:1915   .text.GSMReceive:00000240 $d
     /tmp/cc4fp2Bh.s:1941   .text.GSMSendCommand:00000000 $t
     /tmp/cc4fp2Bh.s:2168   .text.GSMSendCommand:0000013c $d
     /tmp/cc4fp2Bh.s:2196   .text.GSM_Config:00000000 $t
     /tmp/cc4fp2Bh.s:2201   .text.GSM_Config:00000000 GSM_Config
     /tmp/cc4fp2Bh.s:2230   .rodata.GSM_Config:00000000 $d
     /tmp/cc4fp2Bh.s:2734   .text.GSM_Config:000002c8 $d
     /tmp/cc4fp2Bh.s:2759   .text.GSMSendSMS:00000000 $t
     /tmp/cc4fp2Bh.s:2764   .text.GSMSendSMS:00000000 GSMSendSMS
     /tmp/cc4fp2Bh.s:2980   .text.GSMSendSMS:00000150 $d
     /tmp/cc4fp2Bh.s:3053   .text.GSMConfigGPRS:00000000 $t
     /tmp/cc4fp2Bh.s:3058   .text.GSMConfigGPRS:00000000 GSMConfigGPRS
     /tmp/cc4fp2Bh.s:3090   .rodata.GSMConfigGPRS:00000000 $d
     /tmp/cc4fp2Bh.s:3617   .text.GSMConfigGPRS:00000398 $d
     /tmp/cc4fp2Bh.s:3645   .text.GSMConfigGPRS:00000400 $t
     /tmp/cc4fp2Bh.s:4141   .text.GSMConfigGPRS:00000744 $d
     /tmp/cc4fp2Bh.s:4159   .text.GSMConfigGPRS:00000784 $t
     /tmp/cc4fp2Bh.s:4341   .text.GSMConfigGPRS:00000870 $d
     /tmp/cc4fp2Bh.s:4356   .text.GSM_SetSIM:00000000 $t
     /tmp/cc4fp2Bh.s:4450   .text.GSM_SetSIM:00000078 $d
     /tmp/cc4fp2Bh.s:4461   .text.GSMSendIP:00000000 $t
     /tmp/cc4fp2Bh.s:4466   .text.GSMSendIP:00000000 GSMSendIP
     /tmp/cc4fp2Bh.s:4651   .text.GSMSendIP:00000110 $d
     /tmp/cc4fp2Bh.s:4662   .text.GSMTimeoutCounters:00000000 $t
     /tmp/cc4fp2Bh.s:4667   .text.GSMTimeoutCounters:00000000 GSMTimeoutCounters
     /tmp/cc4fp2Bh.s:4809   .text.GSMTimeoutCounters:000000d4 $d
     /tmp/cc4fp2Bh.s:4838   .text.GSMrxSMS:00000000 $t
     /tmp/cc4fp2Bh.s:4843   .text.GSMrxSMS:00000000 GSMrxSMS
     /tmp/cc4fp2Bh.s:5375   .text.GSMrxSMS:00000350 $d
     /tmp/cc4fp2Bh.s:5393   .text.GSMrxSMS:00000390 $t
     /tmp/cc4fp2Bh.s:5771   .text.GSMrxSMS:000005f4 $d
     /tmp/cc4fp2Bh.s:5790   .text.GSMConfigPDPGPRS:00000000 $t
     /tmp/cc4fp2Bh.s:5795   .text.GSMConfigPDPGPRS:00000000 GSMConfigPDPGPRS
     /tmp/cc4fp2Bh.s:5827   .rodata.GSMConfigPDPGPRS:00000000 $d
     /tmp/cc4fp2Bh.s:6329   .text.GSMConfigPDPGPRS:0000032c $d
     /tmp/cc4fp2Bh.s:6355   .text.GSMConfigPDPGPRS:0000038c $t
     /tmp/cc4fp2Bh.s:6866   .text.GSMConfigPDPGPRS:000006b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ReadUsart1Buffer
usart1_have_data
usart1_mini_timeout
usart1_pckt_ready
usart1_pckt_bytes
strncmp
ARM GAS  /tmp/cc4fp2Bh.s 			page 228


strcpy
SIM900APNSIM1
SIM900USUARIOSIM1
SIM900CLAVESIM1
SIM900IPREMOTE
SIM900PORTREMOTE
SIM900APNSIM2
SIM900USUARIOSIM2
SIM900CLAVESIM2
Usart2Send
strncpy
Usart1Send
memcpy
strcat
strlen
sprintf
