ARM GAS  /tmp/cc16P66I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"sim900_800.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ src/sim900_800.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip src/sim900_800.o -g -gdwarf-2 -O0 -Wall
  24              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.comm	buffUARTGSMrx2,256,4
  55              		.comm	PacketReadyUARTGSM,1,1
  56              		.global	GSMStartState
  57              		.section	.bss.GSMStartState,"aw",%nobits
ARM GAS  /tmp/cc16P66I.s 			page 2


  58              		.type	GSMStartState, %object
  59              		.size	GSMStartState, 1
  60              	GSMStartState:
  61 0000 00       		.space	1
  62              		.comm	GSMStartTime,2,2
  63              		.comm	GSMGeneralTimeOut,2,2
  64              		.global	GSMSendCommandState
  65              		.section	.bss.GSMSendCommandState,"aw",%nobits
  66              		.type	GSMSendCommandState, %object
  67              		.size	GSMSendCommandState, 1
  68              	GSMSendCommandState:
  69 0000 00       		.space	1
  70              		.global	GSMSendCommandFlag
  71              		.section	.bss.GSMSendCommandFlag,"aw",%nobits
  72              		.type	GSMSendCommandFlag, %object
  73              		.size	GSMSendCommandFlag, 1
  74              	GSMSendCommandFlag:
  75 0000 00       		.space	1
  76              		.comm	GSMSendCommandTimeOut,2,2
  77              		.global	GSMSendSMSState
  78              		.section	.bss.GSMSendSMSState,"aw",%nobits
  79              		.type	GSMSendSMSState, %object
  80              		.size	GSMSendSMSState, 1
  81              	GSMSendSMSState:
  82 0000 00       		.space	1
  83              		.global	GSMSendSMSFlag
  84              		.section	.bss.GSMSendSMSFlag,"aw",%nobits
  85              		.type	GSMSendSMSFlag, %object
  86              		.size	GSMSendSMSFlag, 1
  87              	GSMSendSMSFlag:
  88 0000 00       		.space	1
  89              		.comm	GSMSendSMSTimeOut,2,2
  90              		.comm	GSMSendSMSbuffAux,32,4
  91              		.global	GSMConfigState
  92              		.section	.bss.GSMConfigState,"aw",%nobits
  93              		.type	GSMConfigState, %object
  94              		.size	GSMConfigState, 1
  95              	GSMConfigState:
  96 0000 00       		.space	1
  97              		.comm	GSMConfigTimeOut,2,2
  98              		.comm	GSMConfigTime,2,2
  99              		.comm	GSMConfigGPRSTimeOut,2,2
 100              		.global	GSMConfigGPRSState
 101              		.section	.bss.GSMConfigGPRSState,"aw",%nobits
 102              		.type	GSMConfigGPRSState, %object
 103              		.size	GSMConfigGPRSState, 1
 104              	GSMConfigGPRSState:
 105 0000 00       		.space	1
 106              		.global	GSMConfigGPRSflag
 107              		.section	.bss.GSMConfigGPRSflag,"aw",%nobits
 108              		.type	GSMConfigGPRSflag, %object
 109              		.size	GSMConfigGPRSflag, 1
 110              	GSMConfigGPRSflag:
 111 0000 00       		.space	1
 112              		.comm	GSMbuffStatus,32,4
 113              		.comm	GSMbuffGPRSCommand,64,4
 114              		.comm	GSMIPadd,16,4
ARM GAS  /tmp/cc16P66I.s 			page 3


 115              		.global	GPRSrssi
 116              		.section	.data.GPRSrssi,"aw",%progbits
 117              		.type	GPRSrssi, %object
 118              		.size	GPRSrssi, 1
 119              	GPRSrssi:
 120 0000 63       		.byte	99
 121              		.global	GSMSendIPState
 122              		.section	.bss.GSMSendIPState,"aw",%nobits
 123              		.type	GSMSendIPState, %object
 124              		.size	GSMSendIPState, 1
 125              	GSMSendIPState:
 126 0000 00       		.space	1
 127              		.global	GSMSendIPFlag
 128              		.section	.bss.GSMSendIPFlag,"aw",%nobits
 129              		.type	GSMSendIPFlag, %object
 130              		.size	GSMSendIPFlag, 1
 131              	GSMSendIPFlag:
 132 0000 00       		.space	1
 133              		.comm	GSMSendIPTimeOut,2,2
 134              		.comm	GSMSendIPbuffAux,32,4
 135              		.comm	GSMbuffRtaCommand,256,4
 136              		.global	GSM_OK
 137              		.section	.rodata.GSM_OK,"a",%progbits
 138              		.align	2
 139              		.type	GSM_OK, %object
 140              		.size	GSM_OK, 3
 141              	GSM_OK:
 142 0000 4F4B00   		.ascii	"OK\000"
 143              		.global	GSM_ERR
 144              		.section	.rodata.GSM_ERR,"a",%progbits
 145              		.align	2
 146              		.type	GSM_ERR, %object
 147              		.size	GSM_ERR, 6
 148              	GSM_ERR:
 149 0000 4552524F 		.ascii	"ERROR\000"
 149      5200
 150              		.global	GSM_CMGF
 151              		.section	.rodata.GSM_CMGF,"a",%progbits
 152              		.align	2
 153              		.type	GSM_CMGF, %object
 154              		.size	GSM_CMGF, 7
 155              	GSM_CMGF:
 156 0000 2B434D47 		.ascii	"+CMGF:\000"
 156      463A00
 157              		.global	GSM_IPSTATE
 158              		.section	.rodata.GSM_IPSTATE,"a",%progbits
 159              		.align	2
 160              		.type	GSM_IPSTATE, %object
 161              		.size	GSM_IPSTATE, 7
 162              	GSM_IPSTATE:
 163 0000 53544154 		.ascii	"STATE:\000"
 163      453A00
 164              		.global	GSM_IPINITIAL
 165              		.section	.rodata.GSM_IPINITIAL,"a",%progbits
 166              		.align	2
 167              		.type	GSM_IPINITIAL, %object
 168              		.size	GSM_IPINITIAL, 11
ARM GAS  /tmp/cc16P66I.s 			page 4


 169              	GSM_IPINITIAL:
 170 0000 49502049 		.ascii	"IP INITIAL\000"
 170      4E495449 
 170      414C00
 171              		.global	GSM_IPSTART
 172              		.section	.rodata.GSM_IPSTART,"a",%progbits
 173              		.align	2
 174              		.type	GSM_IPSTART, %object
 175              		.size	GSM_IPSTART, 9
 176              	GSM_IPSTART:
 177 0000 49502053 		.ascii	"IP START\000"
 177      54415254 
 177      00
 178              		.global	GSM_IPGPRSACT
 179              		.section	.rodata.GSM_IPGPRSACT,"a",%progbits
 180              		.align	2
 181              		.type	GSM_IPGPRSACT, %object
 182              		.size	GSM_IPGPRSACT, 11
 183              	GSM_IPGPRSACT:
 184 0000 49502047 		.ascii	"IP GPRSACT\000"
 184      50525341 
 184      435400
 185              		.global	GSM_IPSTATUS
 186              		.section	.rodata.GSM_IPSTATUS,"a",%progbits
 187              		.align	2
 188              		.type	GSM_IPSTATUS, %object
 189              		.size	GSM_IPSTATUS, 10
 190              	GSM_IPSTATUS:
 191 0000 49502053 		.ascii	"IP STATUS\000"
 191      54415455 
 191      5300
 192              		.global	GSM_IPCONNECTING
 193              		.section	.rodata.GSM_IPCONNECTING,"a",%progbits
 194              		.align	2
 195              		.type	GSM_IPCONNECTING, %object
 196              		.size	GSM_IPCONNECTING, 15
 197              	GSM_IPCONNECTING:
 198 0000 54435020 		.ascii	"TCP CONNECTING\000"
 198      434F4E4E 
 198      45435449 
 198      4E4700
 199              		.global	GSM_IPCONNOK
 200              		.section	.rodata.GSM_IPCONNOK,"a",%progbits
 201              		.align	2
 202              		.type	GSM_IPCONNOK, %object
 203              		.size	GSM_IPCONNOK, 11
 204              	GSM_IPCONNOK:
 205 0000 434F4E4E 		.ascii	"CONNECT OK\000"
 205      45435420 
 205      4F4B00
 206              		.global	GSM_IPCONNFAIL
 207              		.section	.rodata.GSM_IPCONNFAIL,"a",%progbits
 208              		.align	2
 209              		.type	GSM_IPCONNFAIL, %object
 210              		.size	GSM_IPCONNFAIL, 13
 211              	GSM_IPCONNFAIL:
 212 0000 434F4E4E 		.ascii	"CONNECT FAIL\000"
ARM GAS  /tmp/cc16P66I.s 			page 5


 212      45435420 
 212      4641494C 
 212      00
 213              		.global	GSM_IPCONNCLOSE
 214              		.section	.rodata.GSM_IPCONNCLOSE,"a",%progbits
 215              		.align	2
 216              		.type	GSM_IPCONNCLOSE, %object
 217              		.size	GSM_IPCONNCLOSE, 11
 218              	GSM_IPCONNCLOSE:
 219 0000 54435020 		.ascii	"TCP CLOSED\000"
 219      434C4F53 
 219      454400
 220              		.global	GSM_SIM1
 221              		.section	.rodata.GSM_SIM1,"a",%progbits
 222              		.align	2
 223              		.type	GSM_SIM1, %object
 224              		.size	GSM_SIM1, 5
 225              	GSM_SIM1:
 226 0000 53494D31 		.ascii	"SIM1\000"
 226      00
 227              		.global	GSM_SIM2
 228              		.section	.rodata.GSM_SIM2,"a",%progbits
 229              		.align	2
 230              		.type	GSM_SIM2, %object
 231              		.size	GSM_SIM2, 5
 232              	GSM_SIM2:
 233 0000 53494D32 		.ascii	"SIM2\000"
 233      00
 234              		.global	GSM_SENDOK
 235              		.section	.rodata.GSM_SENDOK,"a",%progbits
 236              		.align	2
 237              		.type	GSM_SENDOK, %object
 238              		.size	GSM_SENDOK, 8
 239              	GSM_SENDOK:
 240 0000 53454E44 		.ascii	"SEND OK\000"
 240      204F4B00 
 241              		.global	prestadorSimState
 242              		.section	.bss.prestadorSimState,"aw",%nobits
 243              		.type	prestadorSimState, %object
 244              		.size	prestadorSimState, 1
 245              	prestadorSimState:
 246 0000 00       		.space	1
 247              		.global	prestadorSimTime
 248              		.section	.data.prestadorSimTime,"aw",%progbits
 249              		.type	prestadorSimTime, %object
 250              		.size	prestadorSimTime, 1
 251              	prestadorSimTime:
 252 0000 FA       		.byte	-6
 253              		.global	GSMCantSMS
 254              		.section	.bss.GSMCantSMS,"aw",%nobits
 255              		.type	GSMCantSMS, %object
 256              		.size	GSMCantSMS, 1
 257              	GSMCantSMS:
 258 0000 00       		.space	1
 259              		.global	GSMCantSMS2
 260              		.section	.bss.GSMCantSMS2,"aw",%nobits
 261              		.type	GSMCantSMS2, %object
ARM GAS  /tmp/cc16P66I.s 			page 6


 262              		.size	GSMCantSMS2, 1
 263              	GSMCantSMS2:
 264 0000 00       		.space	1
 265              		.global	GSMnumSMS
 266              		.section	.data.GSMnumSMS,"aw",%progbits
 267              		.type	GSMnumSMS, %object
 268              		.size	GSMnumSMS, 1
 269              	GSMnumSMS:
 270 0000 01       		.byte	1
 271              		.global	GSMReadSMSState
 272              		.section	.bss.GSMReadSMSState,"aw",%nobits
 273              		.type	GSMReadSMSState, %object
 274              		.size	GSMReadSMSState, 1
 275              	GSMReadSMSState:
 276 0000 00       		.space	1
 277              		.comm	GSMReadSMScommand,32,4
 278              		.comm	GSMReadSMSrepIn,32,4
 279              		.global	prestadorSimSelect
 280              		.section	.bss.prestadorSimSelect,"aw",%nobits
 281              		.type	prestadorSimSelect, %object
 282              		.size	prestadorSimSelect, 1
 283              	prestadorSimSelect:
 284 0000 00       		.space	1
 285              		.global	flagCloseIP
 286              		.section	.bss.flagCloseIP,"aw",%nobits
 287              		.type	flagCloseIP, %object
 288              		.size	flagCloseIP, 1
 289              	flagCloseIP:
 290 0000 00       		.space	1
 291              		.section	.text.GSMProcess,"ax",%progbits
 292              		.align	2
 293              		.global	GSMProcess
 294              		.code	16
 295              		.thumb_func
 296              		.type	GSMProcess, %function
 297              	GSMProcess:
 298              	.LFB20:
 299              		.file 1 "src/sim900_800.c"
   1:src/sim900_800.c **** 
   2:src/sim900_800.c **** #include "sim900_800.h"
   3:src/sim900_800.c **** #include "uart.h"
   4:src/sim900_800.c **** #include "tim.h"
   5:src/sim900_800.c **** #include "ESP8266.h"
   6:src/sim900_800.c **** #include "funcs_gsm.h"		//para string flags
   7:src/sim900_800.c **** #include "flash_program.h"
   8:src/sim900_800.c **** 
   9:src/sim900_800.c **** #include <stdlib.h>
  10:src/sim900_800.c **** #include <stdio.h>
  11:src/sim900_800.c **** #include <string.h>
  12:src/sim900_800.c **** 
  13:src/sim900_800.c **** 
  14:src/sim900_800.c **** //PARAMETROS
  15:src/sim900_800.c **** extern parameters_typedef param_struct;
  16:src/sim900_800.c **** #define num_tel_rep		param_struct.num_reportar
  17:src/sim900_800.c **** #define timer_rep			param_struct.timer_reportar
  18:src/sim900_800.c **** // #define send_energy		param_struct.send_energy_flag
  19:src/sim900_800.c **** extern unsigned char send_energy;
ARM GAS  /tmp/cc16P66I.s 			page 7


  20:src/sim900_800.c **** 
  21:src/sim900_800.c **** 
  22:src/sim900_800.c **** //UART GSM.
  23:src/sim900_800.c **** //RX.
  24:src/sim900_800.c **** volatile char buffUARTGSMrx2[buffUARTGSMrx_dimension];
  25:src/sim900_800.c **** volatile char PacketReadyUARTGSM;
  26:src/sim900_800.c **** //TX.
  27:src/sim900_800.c **** 
  28:src/sim900_800.c **** //GSM Start.
  29:src/sim900_800.c **** unsigned char GSMStartState = 0;
  30:src/sim900_800.c **** volatile unsigned short GSMStartTime;
  31:src/sim900_800.c **** volatile unsigned short GSMGeneralTimeOut;
  32:src/sim900_800.c **** 
  33:src/sim900_800.c **** //GSM SendCommand.
  34:src/sim900_800.c **** char GSMSendCommandState = 0;
  35:src/sim900_800.c **** char GSMSendCommandFlag = 0;
  36:src/sim900_800.c **** volatile unsigned short GSMSendCommandTimeOut;
  37:src/sim900_800.c **** 
  38:src/sim900_800.c **** 
  39:src/sim900_800.c **** //GSM SendSMS
  40:src/sim900_800.c **** char GSMSendSMSState = 0;
  41:src/sim900_800.c **** char GSMSendSMSFlag = 0;
  42:src/sim900_800.c **** volatile unsigned short GSMSendSMSTimeOut;
  43:src/sim900_800.c **** char GSMSendSMSbuffAux[32];
  44:src/sim900_800.c **** 
  45:src/sim900_800.c **** //GSM Config.
  46:src/sim900_800.c **** char GSMConfigState = 0;
  47:src/sim900_800.c **** volatile unsigned short GSMConfigTimeOut;
  48:src/sim900_800.c **** volatile unsigned short GSMConfigTime;
  49:src/sim900_800.c **** 
  50:src/sim900_800.c **** //GPRS Config.
  51:src/sim900_800.c **** unsigned short GSMConfigGPRSTimeOut;
  52:src/sim900_800.c **** char GSMConfigGPRSState = 0;
  53:src/sim900_800.c **** char GSMConfigGPRSflag = 0;
  54:src/sim900_800.c **** char GSMbuffStatus[32];
  55:src/sim900_800.c **** char GSMbuffGPRSCommand[64];
  56:src/sim900_800.c **** char GSMIPadd[16];
  57:src/sim900_800.c **** unsigned char GPRSrssi = 99;
  58:src/sim900_800.c **** 
  59:src/sim900_800.c **** //GSM SendIP
  60:src/sim900_800.c **** char GSMSendIPState = 0;
  61:src/sim900_800.c **** char GSMSendIPFlag = 0;
  62:src/sim900_800.c **** volatile unsigned short GSMSendIPTimeOut;
  63:src/sim900_800.c **** char GSMSendIPbuffAux[32];
  64:src/sim900_800.c **** 
  65:src/sim900_800.c **** char GSMbuffRtaCommand[buffUARTGSMrx_dimension];
  66:src/sim900_800.c **** 
  67:src/sim900_800.c **** 
  68:src/sim900_800.c **** const char GSM_OK[] 	= "OK";
  69:src/sim900_800.c **** const char GSM_ERR[] 	= "ERROR";
  70:src/sim900_800.c **** 
  71:src/sim900_800.c **** const char GSM_CMGF[] = "+CMGF:";
  72:src/sim900_800.c **** const char GSM_IPSTATE[] = "STATE:";
  73:src/sim900_800.c **** 
  74:src/sim900_800.c **** //Estados GPRS.
  75:src/sim900_800.c **** const char GSM_IPINITIAL[] 		= "IP INITIAL";
  76:src/sim900_800.c **** const char GSM_IPSTART[] 		= "IP START";
ARM GAS  /tmp/cc16P66I.s 			page 8


  77:src/sim900_800.c **** const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
  78:src/sim900_800.c **** const char GSM_IPSTATUS[] 		= "IP STATUS";
  79:src/sim900_800.c **** const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
  80:src/sim900_800.c **** const char GSM_IPCONNOK[] 		= "CONNECT OK";
  81:src/sim900_800.c **** const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
  82:src/sim900_800.c **** const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
  83:src/sim900_800.c **** 
  84:src/sim900_800.c **** const char GSM_SIM1[] = "SIM1";
  85:src/sim900_800.c **** const char GSM_SIM2[] = "SIM2";
  86:src/sim900_800.c **** const char GSM_SENDOK[] = "SEND OK";
  87:src/sim900_800.c **** // const char GSM_SENDOK[] = "000: ACK";
  88:src/sim900_800.c **** unsigned char prestadorSimState = 0;
  89:src/sim900_800.c **** unsigned char prestadorSimTime = 250;
  90:src/sim900_800.c **** 
  91:src/sim900_800.c **** 
  92:src/sim900_800.c **** //Recepcion de SMS.
  93:src/sim900_800.c **** unsigned char GSMCantSMS = 0;
  94:src/sim900_800.c **** unsigned char GSMCantSMS2 = 0;
  95:src/sim900_800.c **** unsigned char GSMnumSMS = 1;
  96:src/sim900_800.c **** char GSMReadSMSState = 0;
  97:src/sim900_800.c **** char GSMReadSMScommand[32];
  98:src/sim900_800.c **** char GSMReadSMSrepIn[32];
  99:src/sim900_800.c **** // unsigned char GSMrxSMSState = 0;
 100:src/sim900_800.c **** unsigned char prestadorSimSelect = 0;
 101:src/sim900_800.c **** unsigned char flagCloseIP = 0;
 102:src/sim900_800.c **** 
 103:src/sim900_800.c **** //Config SIM900.
 104:src/sim900_800.c **** extern char SIM900APNSIM1[64];
 105:src/sim900_800.c **** extern char SIM900USUARIOSIM1[20];
 106:src/sim900_800.c **** extern char SIM900CLAVESIM1[20];
 107:src/sim900_800.c **** 
 108:src/sim900_800.c **** extern char SIM900APNSIM2[64];
 109:src/sim900_800.c **** extern char SIM900USUARIOSIM2[20];
 110:src/sim900_800.c **** extern char SIM900CLAVESIM2[20];
 111:src/sim900_800.c **** extern char SIM900IPREMOTE[20];
 112:src/sim900_800.c **** extern char SIM900PORTREMOTE[20];
 113:src/sim900_800.c **** 
 114:src/sim900_800.c **** 
 115:src/sim900_800.c **** extern volatile unsigned char usart1_mini_timeout;
 116:src/sim900_800.c **** extern volatile unsigned char usart1_pckt_ready;
 117:src/sim900_800.c **** extern volatile unsigned char usart1_have_data;
 118:src/sim900_800.c **** extern unsigned char usart1_pckt_bytes;
 119:src/sim900_800.c **** 
 120:src/sim900_800.c **** #define gsm_mini_timeout	usart1_mini_timeout
 121:src/sim900_800.c **** #define gsm_pckt_ready		usart1_pckt_ready
 122:src/sim900_800.c **** #define gsm_have_data		usart1_have_data
 123:src/sim900_800.c **** #define gsm_pckt_bytes		usart1_pckt_bytes
 124:src/sim900_800.c **** 
 125:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 126:src/sim900_800.c **** extern volatile unsigned char usart2_mini_timeout;
 127:src/sim900_800.c **** extern volatile unsigned char usart2_pckt_ready;
 128:src/sim900_800.c **** extern volatile unsigned char usart2_have_data;
 129:src/sim900_800.c **** extern unsigned char usart2_pckt_bytes;
 130:src/sim900_800.c **** #endif
 131:src/sim900_800.c **** 
 132:src/sim900_800.c **** //Procesa respuestas del modulo GSM esperando el final de linea por timeout
 133:src/sim900_800.c **** //carga el buffer buffUARTGSMrx2 y avisa con el flag PacketReadyUARTGSM
ARM GAS  /tmp/cc16P66I.s 			page 9


 134:src/sim900_800.c **** void GSMProcess (void)
 135:src/sim900_800.c **** {
 300              		.loc 1 135 0
 301              		.cfi_startproc
 302 0000 10B5     		push	{r4, lr}	@
 303              	.LCFI0:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 136:src/sim900_800.c **** 	if ((gsm_have_data) && (!gsm_mini_timeout))
 307              		.loc 1 136 0
 308 0002 104B     		ldr	r3, .L4	@ tmp113,
 309 0004 1B78     		ldrb	r3, [r3]	@ tmp114, usart1_have_data
 310 0006 DBB2     		uxtb	r3, r3	@ D.7876, tmp114
 311 0008 002B     		cmp	r3, #0	@ D.7876,
 312 000a 18D0     		beq	.L3	@,
 313              		.loc 1 136 0 is_stmt 0 discriminator 1
 314 000c 0E4B     		ldr	r3, .L4+4	@ tmp115,
 315 000e 1B78     		ldrb	r3, [r3]	@ tmp116, usart1_mini_timeout
 316 0010 DBB2     		uxtb	r3, r3	@ D.7876, tmp116
 317 0012 002B     		cmp	r3, #0	@ D.7876,
 318 0014 13D1     		bne	.L3	@,
 137:src/sim900_800.c **** 	{
 138:src/sim900_800.c **** 		gsm_have_data = 0;
 319              		.loc 1 138 0 is_stmt 1
 320 0016 0B4B     		ldr	r3, .L4	@ tmp117,
 321 0018 0022     		movs	r2, #0	@ tmp118,
 322 001a 1A70     		strb	r2, [r3]	@ tmp119, usart1_have_data
 139:src/sim900_800.c **** 		gsm_pckt_ready = 1;
 323              		.loc 1 139 0
 324 001c 0B4B     		ldr	r3, .L4+8	@ tmp120,
 325 001e 0122     		movs	r2, #1	@ tmp121,
 326 0020 1A70     		strb	r2, [r3]	@ tmp122, usart1_pckt_ready
 140:src/sim900_800.c **** 		gsm_pckt_bytes = ReadUsart1Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 327              		.loc 1 140 0
 328 0022 8023     		movs	r3, #128	@ tmp132,
 329 0024 5A00     		lsls	r2, r3, #1	@ tmp123, tmp132,
 330 0026 0A4B     		ldr	r3, .L4+12	@ tmp124,
 331 0028 1100     		movs	r1, r2	@, tmp123
 332 002a 1800     		movs	r0, r3	@, tmp124
 333 002c FFF7FEFF 		bl	ReadUsart1Buffer	@
 334 0030 0300     		movs	r3, r0	@ tmp125,
 335 0032 1A00     		movs	r2, r3	@ D.7876, tmp126
 336 0034 074B     		ldr	r3, .L4+16	@ tmp127,
 337 0036 1A70     		strb	r2, [r3]	@ tmp128, usart1_pckt_bytes
 141:src/sim900_800.c **** 		PacketReadyUARTGSM = 1;
 338              		.loc 1 141 0
 339 0038 074B     		ldr	r3, .L4+20	@ tmp129,
 340 003a 0122     		movs	r2, #1	@ tmp130,
 341 003c 1A70     		strb	r2, [r3]	@ tmp131, PacketReadyUARTGSM
 342              	.L3:
 142:src/sim900_800.c **** //		GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, unsi
 143:src/sim900_800.c **** 	}
 144:src/sim900_800.c **** 
 145:src/sim900_800.c **** #ifdef USE_GSM_GATEWAY
 146:src/sim900_800.c **** 	if ((usart2_have_data) && (!usart2_mini_timeout))
 147:src/sim900_800.c **** 	{
ARM GAS  /tmp/cc16P66I.s 			page 10


 148:src/sim900_800.c **** 		usart2_have_data = 0;
 149:src/sim900_800.c **** 		usart2_pckt_ready = 1;
 150:src/sim900_800.c **** 		usart2_pckt_bytes = ReadUsart2Buffer((unsigned char *) buffUARTGSMrx2, sizeof(buffUARTGSMrx2));
 151:src/sim900_800.c **** 	}
 152:src/sim900_800.c **** #endif
 153:src/sim900_800.c **** }
 343              		.loc 1 153 0
 344 003e C046     		nop
 345              		@ sp needed	@
 346 0040 10BD     		pop	{r4, pc}
 347              	.L5:
 348 0042 C046     		.align	2
 349              	.L4:
 350 0044 00000000 		.word	usart1_have_data
 351 0048 00000000 		.word	usart1_mini_timeout
 352 004c 00000000 		.word	usart1_pckt_ready
 353 0050 00000000 		.word	buffUARTGSMrx2
 354 0054 00000000 		.word	usart1_pckt_bytes
 355 0058 00000000 		.word	PacketReadyUARTGSM
 356              		.cfi_endproc
 357              	.LFE20:
 358              		.size	GSMProcess, .-GSMProcess
 359              		.section	.text.GSM_Start,"ax",%progbits
 360              		.align	2
 361              		.global	GSM_Start
 362              		.code	16
 363              		.thumb_func
 364              		.type	GSM_Start, %function
 365              	GSM_Start:
 366              	.LFB21:
 154:src/sim900_800.c **** 
 155:src/sim900_800.c **** 
 156:src/sim900_800.c **** //------------------------------------//
 157:src/sim900_800.c **** //
 158:src/sim900_800.c **** //Wait: 1
 159:src/sim900_800.c **** //OK: 	2
 160:src/sim900_800.c **** //ERR:	3
 161:src/sim900_800.c **** //TO:	4
 162:src/sim900_800.c **** //------------------------------------//
 163:src/sim900_800.c **** /*
 164:src/sim900_800.c **** unsigned char GSM_Start(void)
 165:src/sim900_800.c **** {
 166:src/sim900_800.c **** 
 167:src/sim900_800.c **** 	if (!GSM_STATUS || (GSMStartState > 1))
 168:src/sim900_800.c **** 	{
 169:src/sim900_800.c **** 		switch(GSMStartState)
 170:src/sim900_800.c **** 		{
 171:src/sim900_800.c **** 			case 0:
 172:src/sim900_800.c **** 				GSMStartTime = 40;
 173:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 174:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 175:src/sim900_800.c **** 				GSMStartState++;
 176:src/sim900_800.c **** 				break;
 177:src/sim900_800.c **** 			case 1:
 178:src/sim900_800.c **** 				if(GSMStartTime == 0) //Espera 4 segugundos.
 179:src/sim900_800.c **** 				{
 180:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
ARM GAS  /tmp/cc16P66I.s 			page 11


 181:src/sim900_800.c **** 					GSM_PWRKEY_OFF;
 182:src/sim900_800.c **** 					GSMStartTime = 100; //10 segundos.
 183:src/sim900_800.c **** 					GSMStartState++;
 184:src/sim900_800.c **** 				}
 185:src/sim900_800.c **** 				break;
 186:src/sim900_800.c **** 			case 2:
 187:src/sim900_800.c **** 				if(GSM_STATUS)
 188:src/sim900_800.c **** 				{
 189:src/sim900_800.c **** 					//Encendio.
 190:src/sim900_800.c **** 					LED_NETLIGHT_ON;
 191:src/sim900_800.c **** 					GSMStartState++;
 192:src/sim900_800.c **** 					GSMStartTime = 30;
 193:src/sim900_800.c **** 				}
 194:src/sim900_800.c **** 				if(GSMStartTime == 0)
 195:src/sim900_800.c **** 				{
 196:src/sim900_800.c **** 					//Se agoto el tiempo de espera.
 197:src/sim900_800.c **** 					GSMStartState = 0;
 198:src/sim900_800.c **** 					return 4;
 199:src/sim900_800.c **** 				}
 200:src/sim900_800.c **** 				break;
 201:src/sim900_800.c **** 			case 3:
 202:src/sim900_800.c **** 				if(GSMStartTime == 0)
 203:src/sim900_800.c **** 				{
 204:src/sim900_800.c **** 					//1 segundo mas.
 205:src/sim900_800.c **** 					LED_NETLIGHT_OFF;
 206:src/sim900_800.c **** 					GSM_PWRKEY_ON;
 207:src/sim900_800.c **** 					GSMStartState = 0;
 208:src/sim900_800.c **** 					return 2;
 209:src/sim900_800.c **** 				}
 210:src/sim900_800.c **** 				break;
 211:src/sim900_800.c **** 		}
 212:src/sim900_800.c **** 	}
 213:src/sim900_800.c **** 	if (GSM_STATUS || (GSMStartState == 0))
 214:src/sim900_800.c **** 	{
 215:src/sim900_800.c **** 		return 2;
 216:src/sim900_800.c **** 	}
 217:src/sim900_800.c **** 	return 1;
 218:src/sim900_800.c **** }
 219:src/sim900_800.c **** */
 220:src/sim900_800.c **** 
 221:src/sim900_800.c **** //GSM_Start() contesta:
 222:src/sim900_800.c **** //0 trabajando
 223:src/sim900_800.c **** //1 terminado OK
 224:src/sim900_800.c **** //2 ERROR
 225:src/sim900_800.c **** //3 Timeout
 226:src/sim900_800.c **** unsigned char GSM_Start (void)
 227:src/sim900_800.c **** {
 367              		.loc 1 227 0
 368              		.cfi_startproc
 228:src/sim900_800.c **** 	switch(GSMStartState)
 369              		.loc 1 228 0
 370 0000 3C4B     		ldr	r3, .L23	@ tmp137,
 371 0002 1B78     		ldrb	r3, [r3]	@ D.7877, GSMStartState
 372 0004 012B     		cmp	r3, #1	@ D.7878,
 373 0006 1BD0     		beq	.L8	@,
 374 0008 02DC     		bgt	.L9	@,
 375 000a 002B     		cmp	r3, #0	@ D.7878,
ARM GAS  /tmp/cc16P66I.s 			page 12


 376 000c 05D0     		beq	.L10	@,
 377 000e 65E0     		b	.L7	@
 378              	.L9:
 379 0010 022B     		cmp	r3, #2	@ D.7878,
 380 0012 2FD0     		beq	.L11	@,
 381 0014 032B     		cmp	r3, #3	@ D.7878,
 382 0016 50D0     		beq	.L12	@,
 383 0018 60E0     		b	.L7	@
 384              	.L10:
 229:src/sim900_800.c **** 	{
 230:src/sim900_800.c **** 		case 0:
 231:src/sim900_800.c **** 			//Levanto PWRKEY
 232:src/sim900_800.c **** 			LED_NETLIGHT_ON;
 385              		.loc 1 232 0
 386 001a 9023     		movs	r3, #144	@ tmp192,
 387 001c DB05     		lsls	r3, r3, #23	@ D.7879, tmp192,
 388 001e 8022     		movs	r2, #128	@ tmp193,
 389 0020 5201     		lsls	r2, r2, #5	@ tmp138, tmp193,
 390 0022 9A61     		str	r2, [r3, #24]	@ tmp138, _31->BSRR
 233:src/sim900_800.c **** 			GSMStartTime = 100;
 391              		.loc 1 233 0
 392 0024 344B     		ldr	r3, .L23+4	@ tmp139,
 393 0026 6422     		movs	r2, #100	@ tmp140,
 394 0028 1A80     		strh	r2, [r3]	@ tmp141, GSMStartTime
 234:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 395              		.loc 1 234 0
 396 002a 9023     		movs	r3, #144	@ tmp194,
 397 002c DB05     		lsls	r3, r3, #23	@ D.7879, tmp194,
 398 002e 8022     		movs	r2, #128	@ tmp142,
 399 0030 9A61     		str	r2, [r3, #24]	@ tmp142, _34->BSRR
 235:src/sim900_800.c **** 			GSMStartState++;
 400              		.loc 1 235 0
 401 0032 304B     		ldr	r3, .L23	@ tmp143,
 402 0034 1B78     		ldrb	r3, [r3]	@ D.7877, GSMStartState
 403 0036 0133     		adds	r3, r3, #1	@ tmp144,
 404 0038 DAB2     		uxtb	r2, r3	@ D.7877, tmp144
 405 003a 2E4B     		ldr	r3, .L23	@ tmp145,
 406 003c 1A70     		strb	r2, [r3]	@ tmp146, GSMStartState
 236:src/sim900_800.c **** 			break;
 407              		.loc 1 236 0
 408 003e 56E0     		b	.L13	@
 409              	.L8:
 237:src/sim900_800.c **** 
 238:src/sim900_800.c **** 		case 1:
 239:src/sim900_800.c **** 			//Bajo PWRKEY
 240:src/sim900_800.c **** 			if(GSMStartTime == 0) //Espera 100 mseg
 410              		.loc 1 240 0
 411 0040 2D4B     		ldr	r3, .L23+4	@ tmp147,
 412 0042 1B88     		ldrh	r3, [r3]	@ tmp148, GSMStartTime
 413 0044 9BB2     		uxth	r3, r3	@ D.7880, tmp148
 414 0046 002B     		cmp	r3, #0	@ D.7880,
 415 0048 4CD1     		bne	.L20	@,
 241:src/sim900_800.c **** 			{
 242:src/sim900_800.c **** 				LED_NETLIGHT_OFF;
 416              		.loc 1 242 0
 417 004a 9023     		movs	r3, #144	@ tmp187,
 418 004c DB05     		lsls	r3, r3, #23	@ D.7879, tmp187,
ARM GAS  /tmp/cc16P66I.s 			page 13


 419 004e 8022     		movs	r2, #128	@ tmp188,
 420 0050 5205     		lsls	r2, r2, #21	@ tmp149, tmp188,
 421 0052 9A61     		str	r2, [r3, #24]	@ tmp149, _41->BSRR
 243:src/sim900_800.c **** 				GSM_PWRKEY_OFF;
 422              		.loc 1 243 0
 423 0054 9023     		movs	r3, #144	@ tmp189,
 424 0056 DB05     		lsls	r3, r3, #23	@ D.7879, tmp189,
 425 0058 8022     		movs	r2, #128	@ tmp190,
 426 005a 1204     		lsls	r2, r2, #16	@ tmp150, tmp190,
 427 005c 9A61     		str	r2, [r3, #24]	@ tmp150, _43->BSRR
 244:src/sim900_800.c **** 				GSMStartTime = 4000; //hasta 4 segundos.
 428              		.loc 1 244 0
 429 005e 264B     		ldr	r3, .L23+4	@ tmp151,
 430 0060 FA22     		movs	r2, #250	@ tmp191,
 431 0062 1201     		lsls	r2, r2, #4	@ tmp152, tmp191,
 432 0064 1A80     		strh	r2, [r3]	@ tmp153, GSMStartTime
 245:src/sim900_800.c **** 				GSMStartState++;
 433              		.loc 1 245 0
 434 0066 234B     		ldr	r3, .L23	@ tmp154,
 435 0068 1B78     		ldrb	r3, [r3]	@ D.7877, GSMStartState
 436 006a 0133     		adds	r3, r3, #1	@ tmp155,
 437 006c DAB2     		uxtb	r2, r3	@ D.7877, tmp155
 438 006e 214B     		ldr	r3, .L23	@ tmp156,
 439 0070 1A70     		strb	r2, [r3]	@ tmp157, GSMStartState
 246:src/sim900_800.c **** 			}
 247:src/sim900_800.c **** 			break;
 440              		.loc 1 247 0
 441 0072 37E0     		b	.L20	@
 442              	.L11:
 248:src/sim900_800.c **** 
 249:src/sim900_800.c **** 		case 2:
 250:src/sim900_800.c **** 			//Levanto PWRKEY
 251:src/sim900_800.c **** 			if (GSM_STATUS)
 443              		.loc 1 251 0
 444 0074 9023     		movs	r3, #144	@ tmp186,
 445 0076 DB05     		lsls	r3, r3, #23	@ D.7879, tmp186,
 446 0078 1B8A     		ldrh	r3, [r3, #16]	@ tmp159,
 447 007a 9BB2     		uxth	r3, r3	@ D.7880, tmp159
 448 007c 1A00     		movs	r2, r3	@ D.7878, D.7880
 449 007e 2023     		movs	r3, #32	@ tmp160,
 450 0080 1340     		ands	r3, r2	@ D.7878, D.7878
 451 0082 13D0     		beq	.L15	@,
 252:src/sim900_800.c **** 			{
 253:src/sim900_800.c **** 				GSMStartTime = 1000;
 452              		.loc 1 253 0
 453 0084 1C4B     		ldr	r3, .L23+4	@ tmp161,
 454 0086 FA22     		movs	r2, #250	@ tmp182,
 455 0088 9200     		lsls	r2, r2, #2	@ tmp162, tmp182,
 456 008a 1A80     		strh	r2, [r3]	@ tmp163, GSMStartTime
 254:src/sim900_800.c **** 				GSMStartState++;
 457              		.loc 1 254 0
 458 008c 194B     		ldr	r3, .L23	@ tmp164,
 459 008e 1B78     		ldrb	r3, [r3]	@ D.7877, GSMStartState
 460 0090 0133     		adds	r3, r3, #1	@ tmp165,
 461 0092 DAB2     		uxtb	r2, r3	@ D.7877, tmp165
 462 0094 174B     		ldr	r3, .L23	@ tmp166,
 463 0096 1A70     		strb	r2, [r3]	@ tmp167, GSMStartState
ARM GAS  /tmp/cc16P66I.s 			page 14


 255:src/sim900_800.c **** 				LED_NETLIGHT_ON;
 464              		.loc 1 255 0
 465 0098 9023     		movs	r3, #144	@ tmp183,
 466 009a DB05     		lsls	r3, r3, #23	@ D.7879, tmp183,
 467 009c 8022     		movs	r2, #128	@ tmp184,
 468 009e 5201     		lsls	r2, r2, #5	@ tmp168, tmp184,
 469 00a0 9A61     		str	r2, [r3, #24]	@ tmp168, _20->BSRR
 256:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 470              		.loc 1 256 0
 471 00a2 9023     		movs	r3, #144	@ tmp185,
 472 00a4 DB05     		lsls	r3, r3, #23	@ D.7879, tmp185,
 473 00a6 8022     		movs	r2, #128	@ tmp169,
 474 00a8 9A61     		str	r2, [r3, #24]	@ tmp169, _22->BSRR
 257:src/sim900_800.c **** 			}
 258:src/sim900_800.c **** 			else if(GSMStartTime == 0) //Espera hasta 4 segs
 259:src/sim900_800.c **** 			{
 260:src/sim900_800.c **** 				return 3;		//TimeOut
 261:src/sim900_800.c **** 			}
 262:src/sim900_800.c **** 			break;
 475              		.loc 1 262 0
 476 00aa 1DE0     		b	.L21	@
 477              	.L15:
 258:src/sim900_800.c **** 			{
 478              		.loc 1 258 0
 479 00ac 124B     		ldr	r3, .L23+4	@ tmp170,
 480 00ae 1B88     		ldrh	r3, [r3]	@ tmp171, GSMStartTime
 481 00b0 9BB2     		uxth	r3, r3	@ D.7880, tmp171
 482 00b2 002B     		cmp	r3, #0	@ D.7880,
 483 00b4 18D1     		bne	.L21	@,
 260:src/sim900_800.c **** 			}
 484              		.loc 1 260 0
 485 00b6 0323     		movs	r3, #3	@ D.7877,
 486 00b8 1AE0     		b	.L17	@
 487              	.L12:
 263:src/sim900_800.c **** 
 264:src/sim900_800.c **** 		case 3:
 265:src/sim900_800.c **** 			if(GSMStartTime == 0)	//Espero 1 segundo mas y reviso GSM_STATUS
 488              		.loc 1 265 0
 489 00ba 0F4B     		ldr	r3, .L23+4	@ tmp172,
 490 00bc 1B88     		ldrh	r3, [r3]	@ tmp173, GSMStartTime
 491 00be 9BB2     		uxth	r3, r3	@ D.7880, tmp173
 492 00c0 002B     		cmp	r3, #0	@ D.7880,
 493 00c2 13D1     		bne	.L22	@,
 266:src/sim900_800.c **** 			{
 267:src/sim900_800.c **** 				if (GSM_STATUS)
 494              		.loc 1 267 0
 495 00c4 9023     		movs	r3, #144	@ tmp181,
 496 00c6 DB05     		lsls	r3, r3, #23	@ D.7879, tmp181,
 497 00c8 1B8A     		ldrh	r3, [r3, #16]	@ tmp175,
 498 00ca 9BB2     		uxth	r3, r3	@ D.7880, tmp175
 499 00cc 1A00     		movs	r2, r3	@ D.7878, D.7880
 500 00ce 2023     		movs	r3, #32	@ tmp176,
 501 00d0 1340     		ands	r3, r2	@ D.7878, D.7878
 502 00d2 01D0     		beq	.L19	@,
 268:src/sim900_800.c **** 					return 1;		//OK
 503              		.loc 1 268 0
 504 00d4 0123     		movs	r3, #1	@ D.7877,
ARM GAS  /tmp/cc16P66I.s 			page 15


 505 00d6 0BE0     		b	.L17	@
 506              	.L19:
 269:src/sim900_800.c **** 				else
 270:src/sim900_800.c **** 					return 2;		//Error
 507              		.loc 1 270 0
 508 00d8 0223     		movs	r3, #2	@ D.7877,
 509 00da 09E0     		b	.L17	@
 510              	.L7:
 271:src/sim900_800.c **** 			}
 272:src/sim900_800.c **** 			break;
 273:src/sim900_800.c **** 
 274:src/sim900_800.c **** 		default:
 275:src/sim900_800.c **** 			GSMStartState = 0;
 511              		.loc 1 275 0
 512 00dc 054B     		ldr	r3, .L23	@ tmp177,
 513 00de 0022     		movs	r2, #0	@ tmp178,
 514 00e0 1A70     		strb	r2, [r3]	@ tmp179, GSMStartState
 276:src/sim900_800.c **** 			break;
 515              		.loc 1 276 0
 516 00e2 04E0     		b	.L13	@
 517              	.L20:
 247:src/sim900_800.c **** 
 518              		.loc 1 247 0
 519 00e4 C046     		nop
 520 00e6 02E0     		b	.L13	@
 521              	.L21:
 262:src/sim900_800.c **** 
 522              		.loc 1 262 0
 523 00e8 C046     		nop
 524 00ea 00E0     		b	.L13	@
 525              	.L22:
 272:src/sim900_800.c **** 
 526              		.loc 1 272 0
 527 00ec C046     		nop
 528              	.L13:
 277:src/sim900_800.c **** 	}
 278:src/sim900_800.c **** 	return 0;						//trabajando
 529              		.loc 1 278 0
 530 00ee 0023     		movs	r3, #0	@ D.7877,
 531              	.L17:
 279:src/sim900_800.c **** }
 532              		.loc 1 279 0
 533 00f0 1800     		movs	r0, r3	@, <retval>
 534              		@ sp needed	@
 535 00f2 7047     		bx	lr
 536              	.L24:
 537              		.align	2
 538              	.L23:
 539 00f4 00000000 		.word	GSMStartState
 540 00f8 00000000 		.word	GSMStartTime
 541              		.cfi_endproc
 542              	.LFE21:
 543              		.size	GSM_Start, .-GSM_Start
 544              		.section	.text.GSM_Start_Stop_ResetSM,"ax",%progbits
 545              		.align	2
 546              		.global	GSM_Start_Stop_ResetSM
 547              		.code	16
ARM GAS  /tmp/cc16P66I.s 			page 16


 548              		.thumb_func
 549              		.type	GSM_Start_Stop_ResetSM, %function
 550              	GSM_Start_Stop_ResetSM:
 551              	.LFB22:
 280:src/sim900_800.c **** 
 281:src/sim900_800.c **** void GSM_Start_Stop_ResetSM (void)
 282:src/sim900_800.c **** {
 552              		.loc 1 282 0
 553              		.cfi_startproc
 283:src/sim900_800.c **** 	GSMStartState = 0;
 554              		.loc 1 283 0
 555 0000 024B     		ldr	r3, .L26	@ tmp110,
 556 0002 0022     		movs	r2, #0	@ tmp111,
 557 0004 1A70     		strb	r2, [r3]	@ tmp112, GSMStartState
 284:src/sim900_800.c **** }
 558              		.loc 1 284 0
 559 0006 C046     		nop
 560              		@ sp needed	@
 561 0008 7047     		bx	lr
 562              	.L27:
 563 000a C046     		.align	2
 564              	.L26:
 565 000c 00000000 		.word	GSMStartState
 566              		.cfi_endproc
 567              	.LFE22:
 568              		.size	GSM_Start_Stop_ResetSM, .-GSM_Start_Stop_ResetSM
 569              		.section	.text.GSM_Stop,"ax",%progbits
 570              		.align	2
 571              		.global	GSM_Stop
 572              		.code	16
 573              		.thumb_func
 574              		.type	GSM_Stop, %function
 575              	GSM_Stop:
 576              	.LFB23:
 285:src/sim900_800.c **** 
 286:src/sim900_800.c **** //GSM_Stop() contesta:
 287:src/sim900_800.c **** //0 trabajando
 288:src/sim900_800.c **** //1 terminado OK
 289:src/sim900_800.c **** //2 ERROR
 290:src/sim900_800.c **** //3 Timeout
 291:src/sim900_800.c **** unsigned char GSM_Stop(void)
 292:src/sim900_800.c **** {
 577              		.loc 1 292 0
 578              		.cfi_startproc
 579 0000 82B0     		sub	sp, sp, #8	@,,
 580              	.LCFI1:
 581              		.cfi_def_cfa_offset 8
 293:src/sim900_800.c **** 	unsigned char resp = 0;
 582              		.loc 1 293 0
 583 0002 6B46     		mov	r3, sp	@ tmp173,
 584 0004 0733     		adds	r3, r3, #7	@ tmp127,
 585 0006 0022     		movs	r2, #0	@ tmp128,
 586 0008 1A70     		strb	r2, [r3]	@ tmp129, resp
 294:src/sim900_800.c **** 
 295:src/sim900_800.c **** 	switch(GSMStartState)
 587              		.loc 1 295 0
 588 000a 294B     		ldr	r3, .L39	@ tmp130,
ARM GAS  /tmp/cc16P66I.s 			page 17


 589 000c 1B78     		ldrb	r3, [r3]	@ D.7882, GSMStartState
 590 000e 012B     		cmp	r3, #1	@ D.7883,
 591 0010 16D0     		beq	.L30	@,
 592 0012 022B     		cmp	r3, #2	@ D.7883,
 593 0014 2CD0     		beq	.L31	@,
 594 0016 002B     		cmp	r3, #0	@ D.7883,
 595 0018 3BD1     		bne	.L29	@,
 296:src/sim900_800.c **** 	{
 297:src/sim900_800.c **** 		case 0:
 298:src/sim900_800.c **** 			//Levanto PWRKEY
 299:src/sim900_800.c **** 			GSM_PWRKEY_OFF;
 596              		.loc 1 299 0
 597 001a 9023     		movs	r3, #144	@ tmp170,
 598 001c DB05     		lsls	r3, r3, #23	@ D.7884, tmp170,
 599 001e 8022     		movs	r2, #128	@ tmp171,
 600 0020 1204     		lsls	r2, r2, #16	@ tmp131, tmp171,
 601 0022 9A61     		str	r2, [r3, #24]	@ tmp131, _11->BSRR
 300:src/sim900_800.c **** 			GSMStartTime = 250;	//espero 250ms
 602              		.loc 1 300 0
 603 0024 234B     		ldr	r3, .L39+4	@ tmp132,
 604 0026 FA22     		movs	r2, #250	@ tmp133,
 605 0028 1A80     		strh	r2, [r3]	@ tmp134, GSMStartTime
 301:src/sim900_800.c **** 			GSMGeneralTimeOut = 4000;	//timeout de 4 segs
 606              		.loc 1 301 0
 607 002a 234B     		ldr	r3, .L39+8	@ tmp135,
 608 002c FA22     		movs	r2, #250	@ tmp172,
 609 002e 1201     		lsls	r2, r2, #4	@ tmp136, tmp172,
 610 0030 1A80     		strh	r2, [r3]	@ tmp137, GSMGeneralTimeOut
 302:src/sim900_800.c **** 			GSMStartState++;
 611              		.loc 1 302 0
 612 0032 1F4B     		ldr	r3, .L39	@ tmp138,
 613 0034 1B78     		ldrb	r3, [r3]	@ D.7882, GSMStartState
 614 0036 0133     		adds	r3, r3, #1	@ tmp139,
 615 0038 DAB2     		uxtb	r2, r3	@ D.7882, tmp139
 616 003a 1D4B     		ldr	r3, .L39	@ tmp140,
 617 003c 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 303:src/sim900_800.c **** 			break;
 618              		.loc 1 303 0
 619 003e 28E0     		b	.L29	@
 620              	.L30:
 304:src/sim900_800.c **** 
 305:src/sim900_800.c **** 		case 1:
 306:src/sim900_800.c **** 			if ((!GSMStartTime) && (!GSM_STATUS))
 621              		.loc 1 306 0
 622 0040 1C4B     		ldr	r3, .L39+4	@ tmp142,
 623 0042 1B88     		ldrh	r3, [r3]	@ tmp143, GSMStartTime
 624 0044 9BB2     		uxth	r3, r3	@ D.7885, tmp143
 625 0046 002B     		cmp	r3, #0	@ D.7885,
 626 0048 20D1     		bne	.L37	@,
 627              		.loc 1 306 0 is_stmt 0 discriminator 1
 628 004a 9023     		movs	r3, #144	@ tmp169,
 629 004c DB05     		lsls	r3, r3, #23	@ D.7884, tmp169,
 630 004e 1B8A     		ldrh	r3, [r3, #16]	@ tmp145,
 631 0050 9BB2     		uxth	r3, r3	@ D.7885, tmp145
 632 0052 1A00     		movs	r2, r3	@ D.7883, D.7885
 633 0054 2023     		movs	r3, #32	@ tmp146,
 634 0056 1340     		ands	r3, r2	@ D.7883, D.7883
ARM GAS  /tmp/cc16P66I.s 			page 18


 635 0058 18D1     		bne	.L37	@,
 307:src/sim900_800.c **** 			{
 308:src/sim900_800.c **** 				GSMStartTime = 1000;	//espero 1seg
 636              		.loc 1 308 0 is_stmt 1
 637 005a 164B     		ldr	r3, .L39+4	@ tmp147,
 638 005c FA22     		movs	r2, #250	@ tmp168,
 639 005e 9200     		lsls	r2, r2, #2	@ tmp148, tmp168,
 640 0060 1A80     		strh	r2, [r3]	@ tmp149, GSMStartTime
 309:src/sim900_800.c **** 				GSMStartState++;
 641              		.loc 1 309 0
 642 0062 134B     		ldr	r3, .L39	@ tmp150,
 643 0064 1B78     		ldrb	r3, [r3]	@ D.7882, GSMStartState
 644 0066 0133     		adds	r3, r3, #1	@ tmp151,
 645 0068 DAB2     		uxtb	r2, r3	@ D.7882, tmp151
 646 006a 114B     		ldr	r3, .L39	@ tmp152,
 647 006c 1A70     		strb	r2, [r3]	@ tmp153, GSMStartState
 310:src/sim900_800.c **** 			}
 311:src/sim900_800.c **** 			break;
 648              		.loc 1 311 0
 649 006e 0DE0     		b	.L37	@
 650              	.L31:
 312:src/sim900_800.c **** 
 313:src/sim900_800.c **** 		case 2:
 314:src/sim900_800.c **** 			if (!GSMStartTime)
 651              		.loc 1 314 0
 652 0070 104B     		ldr	r3, .L39+4	@ tmp154,
 653 0072 1B88     		ldrh	r3, [r3]	@ tmp155, GSMStartTime
 654 0074 9BB2     		uxth	r3, r3	@ D.7885, tmp155
 655 0076 002B     		cmp	r3, #0	@ D.7885,
 656 0078 0AD1     		bne	.L38	@,
 315:src/sim900_800.c **** 			{
 316:src/sim900_800.c **** 				GSM_PWRKEY_ON;
 657              		.loc 1 316 0
 658 007a 9023     		movs	r3, #144	@ tmp167,
 659 007c DB05     		lsls	r3, r3, #23	@ D.7884, tmp167,
 660 007e 8022     		movs	r2, #128	@ tmp156,
 661 0080 9A61     		str	r2, [r3, #24]	@ tmp156, _30->BSRR
 317:src/sim900_800.c **** 				resp = 1;
 662              		.loc 1 317 0
 663 0082 6B46     		mov	r3, sp	@ tmp174,
 664 0084 0733     		adds	r3, r3, #7	@ tmp157,
 665 0086 0122     		movs	r2, #1	@ tmp158,
 666 0088 1A70     		strb	r2, [r3]	@ tmp159, resp
 318:src/sim900_800.c **** 			}
 319:src/sim900_800.c **** 			break;
 667              		.loc 1 319 0
 668 008a 01E0     		b	.L38	@
 669              	.L37:
 311:src/sim900_800.c **** 
 670              		.loc 1 311 0
 671 008c C046     		nop
 672 008e 00E0     		b	.L29	@
 673              	.L38:
 674              		.loc 1 319 0
 675 0090 C046     		nop
 676              	.L29:
 320:src/sim900_800.c **** 	}
ARM GAS  /tmp/cc16P66I.s 			page 19


 321:src/sim900_800.c **** 
 322:src/sim900_800.c **** 	if (!GSMGeneralTimeOut)
 677              		.loc 1 322 0
 678 0092 094B     		ldr	r3, .L39+8	@ tmp160,
 679 0094 1B88     		ldrh	r3, [r3]	@ tmp161, GSMGeneralTimeOut
 680 0096 9BB2     		uxth	r3, r3	@ D.7885, tmp161
 681 0098 002B     		cmp	r3, #0	@ D.7885,
 682 009a 03D1     		bne	.L35	@,
 323:src/sim900_800.c **** 		resp = 3;				//timeout
 683              		.loc 1 323 0
 684 009c 6B46     		mov	r3, sp	@ tmp175,
 685 009e 0733     		adds	r3, r3, #7	@ tmp162,
 686 00a0 0322     		movs	r2, #3	@ tmp163,
 687 00a2 1A70     		strb	r2, [r3]	@ tmp164, resp
 688              	.L35:
 324:src/sim900_800.c **** 
 325:src/sim900_800.c **** 	return resp;
 689              		.loc 1 325 0
 690 00a4 6B46     		mov	r3, sp	@ tmp176,
 691 00a6 0733     		adds	r3, r3, #7	@ tmp165,
 692 00a8 1B78     		ldrb	r3, [r3]	@ D.7882, resp
 326:src/sim900_800.c **** }
 693              		.loc 1 326 0
 694 00aa 1800     		movs	r0, r3	@, <retval>
 695 00ac 02B0     		add	sp, sp, #8	@,,
 696              		@ sp needed	@
 697 00ae 7047     		bx	lr
 698              	.L40:
 699              		.align	2
 700              	.L39:
 701 00b0 00000000 		.word	GSMStartState
 702 00b4 00000000 		.word	GSMStartTime
 703 00b8 00000000 		.word	GSMGeneralTimeOut
 704              		.cfi_endproc
 705              	.LFE23:
 706              		.size	GSM_Stop, .-GSM_Stop
 707              		.section	.text.GSM_Delay,"ax",%progbits
 708              		.align	2
 709              		.global	GSM_Delay
 710              		.code	16
 711              		.thumb_func
 712              		.type	GSM_Delay, %function
 713              	GSM_Delay:
 714              	.LFB24:
 327:src/sim900_800.c **** 
 328:src/sim900_800.c **** //TODO: OJO utiliza GSMStartState
 329:src/sim900_800.c **** //in: delay en ms
 330:src/sim900_800.c **** //out: 0 working; 1 finish
 331:src/sim900_800.c **** unsigned char GSM_Delay (unsigned short tim)
 332:src/sim900_800.c **** {
 715              		.loc 1 332 0
 716              		.cfi_startproc
 717 0000 84B0     		sub	sp, sp, #16	@,,
 718              	.LCFI2:
 719              		.cfi_def_cfa_offset 16
 720 0002 0200     		movs	r2, r0	@ tmp117, tim
 721 0004 6B46     		mov	r3, sp	@ tmp144,
ARM GAS  /tmp/cc16P66I.s 			page 20


 722 0006 0633     		adds	r3, r3, #6	@ tmp118,
 723 0008 1A80     		strh	r2, [r3]	@ tmp119, tim
 333:src/sim900_800.c **** 	unsigned char resp = 0;
 724              		.loc 1 333 0
 725 000a 0F23     		movs	r3, #15	@ tmp120,
 726 000c 6B44     		add	r3, r3, sp	@ tmp120,
 727 000e 0022     		movs	r2, #0	@ tmp121,
 728 0010 1A70     		strb	r2, [r3]	@ tmp122, resp
 334:src/sim900_800.c **** 
 335:src/sim900_800.c **** 	switch(GSMStartState)
 729              		.loc 1 335 0
 730 0012 154B     		ldr	r3, .L50	@ tmp123,
 731 0014 1B78     		ldrb	r3, [r3]	@ D.7886, GSMStartState
 732 0016 002B     		cmp	r3, #0	@ D.7887,
 733 0018 02D0     		beq	.L43	@,
 734 001a 012B     		cmp	r3, #1	@ D.7887,
 735 001c 0CD0     		beq	.L44	@,
 736 001e 18E0     		b	.L48	@
 737              	.L43:
 336:src/sim900_800.c **** 	{
 337:src/sim900_800.c **** 		case 0:
 338:src/sim900_800.c **** 			GSMGeneralTimeOut = tim;
 738              		.loc 1 338 0
 739 0020 124B     		ldr	r3, .L50+4	@ tmp124,
 740 0022 6A46     		mov	r2, sp	@ tmp146,
 741 0024 0632     		adds	r2, r2, #6	@ tmp125,
 742 0026 1288     		ldrh	r2, [r2]	@ tmp126, tim
 743 0028 1A80     		strh	r2, [r3]	@ tmp126, GSMGeneralTimeOut
 339:src/sim900_800.c **** 			GSMStartState++;
 744              		.loc 1 339 0
 745 002a 0F4B     		ldr	r3, .L50	@ tmp127,
 746 002c 1B78     		ldrb	r3, [r3]	@ D.7886, GSMStartState
 747 002e 0133     		adds	r3, r3, #1	@ tmp128,
 748 0030 DAB2     		uxtb	r2, r3	@ D.7886, tmp128
 749 0032 0D4B     		ldr	r3, .L50	@ tmp129,
 750 0034 1A70     		strb	r2, [r3]	@ tmp130, GSMStartState
 340:src/sim900_800.c **** 			break;
 751              		.loc 1 340 0
 752 0036 11E0     		b	.L45	@
 753              	.L44:
 341:src/sim900_800.c **** 
 342:src/sim900_800.c **** 		case 1:
 343:src/sim900_800.c **** 			if (!GSMGeneralTimeOut)
 754              		.loc 1 343 0
 755 0038 0C4B     		ldr	r3, .L50+4	@ tmp131,
 756 003a 1B88     		ldrh	r3, [r3]	@ tmp132, GSMGeneralTimeOut
 757 003c 9BB2     		uxth	r3, r3	@ D.7888, tmp132
 758 003e 002B     		cmp	r3, #0	@ D.7888,
 759 0040 0BD1     		bne	.L49	@,
 344:src/sim900_800.c **** 			{
 345:src/sim900_800.c **** 				GSMStartState = 0;
 760              		.loc 1 345 0
 761 0042 094B     		ldr	r3, .L50	@ tmp133,
 762 0044 0022     		movs	r2, #0	@ tmp134,
 763 0046 1A70     		strb	r2, [r3]	@ tmp135, GSMStartState
 346:src/sim900_800.c **** 				resp = 1;
 764              		.loc 1 346 0
ARM GAS  /tmp/cc16P66I.s 			page 21


 765 0048 0F23     		movs	r3, #15	@ tmp136,
 766 004a 6B44     		add	r3, r3, sp	@ tmp136,
 767 004c 0122     		movs	r2, #1	@ tmp137,
 768 004e 1A70     		strb	r2, [r3]	@ tmp138, resp
 347:src/sim900_800.c **** 			}
 348:src/sim900_800.c **** 			break;
 769              		.loc 1 348 0
 770 0050 03E0     		b	.L49	@
 771              	.L48:
 349:src/sim900_800.c **** 
 350:src/sim900_800.c **** 		default:
 351:src/sim900_800.c **** 			GSMStartState = 0;
 772              		.loc 1 351 0
 773 0052 054B     		ldr	r3, .L50	@ tmp139,
 774 0054 0022     		movs	r2, #0	@ tmp140,
 775 0056 1A70     		strb	r2, [r3]	@ tmp141, GSMStartState
 352:src/sim900_800.c **** 			break;
 776              		.loc 1 352 0
 777 0058 00E0     		b	.L45	@
 778              	.L49:
 348:src/sim900_800.c **** 
 779              		.loc 1 348 0
 780 005a C046     		nop
 781              	.L45:
 353:src/sim900_800.c **** 	}
 354:src/sim900_800.c **** 	return resp;
 782              		.loc 1 354 0
 783 005c 0F23     		movs	r3, #15	@ tmp142,
 784 005e 6B44     		add	r3, r3, sp	@ tmp142,
 785 0060 1B78     		ldrb	r3, [r3]	@ D.7886, resp
 355:src/sim900_800.c **** }
 786              		.loc 1 355 0
 787 0062 1800     		movs	r0, r3	@, <retval>
 788 0064 04B0     		add	sp, sp, #16	@,,
 789              		@ sp needed	@
 790 0066 7047     		bx	lr
 791              	.L51:
 792              		.align	2
 793              	.L50:
 794 0068 00000000 		.word	GSMStartState
 795 006c 00000000 		.word	GSMGeneralTimeOut
 796              		.cfi_endproc
 797              	.LFE24:
 798              		.size	GSM_Delay, .-GSM_Delay
 799              		.section	.rodata
 800              		.align	2
 801              	.LC18:
 802 0000 41542B43 		.ascii	"AT+CSPN?\015\012\000"
 802      53504E3F 
 802      0D0A00
 803 000b 00       		.align	2
 804              	.LC20:
 805 000c 2B435350 		.ascii	"+CSPN\000"
 805      4E00
 806              		.section	.text.GSMPrestador,"ax",%progbits
 807              		.align	2
 808              		.global	GSMPrestador
ARM GAS  /tmp/cc16P66I.s 			page 22


 809              		.code	16
 810              		.thumb_func
 811              		.type	GSMPrestador, %function
 812              	GSMPrestador:
 813              	.LFB25:
 356:src/sim900_800.c **** 
 357:src/sim900_800.c **** //GSMPrestador(&PrestadorSim1, &PrestadorSim2, &CONFIGURACIONgprsAPN1[0], &CONFIGURACIONgprsUsuario
 358:src/sim900_800.c **** void GSMPrestador(unsigned char * pGSMHWstatus, unsigned char * prestadorSim1, unsigned char * pres
 359:src/sim900_800.c **** {
 814              		.loc 1 359 0
 815              		.cfi_startproc
 816 0000 10B5     		push	{r4, lr}	@
 817              	.LCFI3:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 4, -8
 820              		.cfi_offset 14, -4
 821 0002 86B0     		sub	sp, sp, #24	@,,
 822              	.LCFI4:
 823              		.cfi_def_cfa_offset 32
 824 0004 0390     		str	r0, [sp, #12]	@ pGSMHWstatus, pGSMHWstatus
 825 0006 0291     		str	r1, [sp, #8]	@ prestadorSim1, prestadorSim1
 826 0008 0192     		str	r2, [sp, #4]	@ prestadorSim2, prestadorSim2
 827 000a 0093     		str	r3, [sp]	@ pCONFIGURACIONgprsAPN1, pCONFIGURACIONgprsAPN1
 360:src/sim900_800.c **** 	unsigned char i;
 361:src/sim900_800.c **** 
 362:src/sim900_800.c **** 	if (prestadorSimTime == 0)
 828              		.loc 1 362 0
 829 000c DA4B     		ldr	r3, .L94	@ tmp151,
 830 000e 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimTime
 831 0010 002B     		cmp	r3, #0	@ D.7889,
 832 0012 00D0     		beq	.LCB487	@
 833 0014 D5E1     		b	.L87	@long jump	@
 834              	.LCB487:
 363:src/sim900_800.c **** 	{
 364:src/sim900_800.c **** 		switch(prestadorSimSelect)
 835              		.loc 1 364 0
 836 0016 D94B     		ldr	r3, .L94+4	@ tmp152,
 837 0018 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 838 001a 012B     		cmp	r3, #1	@ D.7890,
 839 001c 13D0     		beq	.L55	@,
 840 001e 022B     		cmp	r3, #2	@ D.7890,
 841 0020 00D1     		bne	.LCB493	@
 842 0022 E8E0     		b	.L56	@long jump	@
 843              	.LCB493:
 844 0024 002B     		cmp	r3, #0	@ D.7890,
 845 0026 00D0     		beq	.LCB495	@
 846 0028 C4E1     		b	.L84	@long jump	@
 847              	.LCB495:
 365:src/sim900_800.c **** 		{
 366:src/sim900_800.c **** 			case 0:
 367:src/sim900_800.c **** 				if (*pGSMHWstatus & 0x01)
 848              		.loc 1 367 0
 849 002a 039B     		ldr	r3, [sp, #12]	@ tmp153, pGSMHWstatus
 850 002c 1B78     		ldrb	r3, [r3]	@ D.7889, *pGSMHWstatus_25(D)
 851 002e 1A00     		movs	r2, r3	@ D.7890, D.7889
 852 0030 0123     		movs	r3, #1	@ tmp154,
 853 0032 1340     		ands	r3, r2	@ D.7890, D.7890
ARM GAS  /tmp/cc16P66I.s 			page 23


 854 0034 00D1     		bne	.LCB502	@
 855 0036 C1E1     		b	.L88	@long jump	@
 856              	.LCB502:
 368:src/sim900_800.c **** 					prestadorSimSelect++;
 857              		.loc 1 368 0
 858 0038 D04B     		ldr	r3, .L94+4	@ tmp155,
 859 003a 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 860 003c 0133     		adds	r3, r3, #1	@ tmp156,
 861 003e DAB2     		uxtb	r2, r3	@ D.7889, tmp156
 862 0040 CE4B     		ldr	r3, .L94+4	@ tmp157,
 863 0042 1A70     		strb	r2, [r3]	@ tmp158, prestadorSimSelect
 369:src/sim900_800.c **** 				break;
 864              		.loc 1 369 0
 865 0044 BAE1     		b	.L88	@
 866              	.L55:
 370:src/sim900_800.c **** 			case 1:
 371:src/sim900_800.c **** 				if (*prestadorSim1 == 0)
 867              		.loc 1 371 0
 868 0046 029B     		ldr	r3, [sp, #8]	@ tmp159, prestadorSim1
 869 0048 1B78     		ldrb	r3, [r3]	@ D.7889, *prestadorSim1_33(D)
 870 004a 002B     		cmp	r3, #0	@ D.7889,
 871 004c 00D0     		beq	.LCB516	@
 872 004e D2E0     		b	.L56	@long jump	@
 873              	.LCB516:
 372:src/sim900_800.c **** 				{
 373:src/sim900_800.c **** 					switch(prestadorSimState)
 874              		.loc 1 373 0
 875 0050 CB4B     		ldr	r3, .L94+8	@ tmp160,
 876 0052 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 877 0054 012B     		cmp	r3, #1	@ D.7890,
 878 0056 0BD0     		beq	.L60	@,
 879 0058 022B     		cmp	r3, #2	@ D.7890,
 880 005a 44D0     		beq	.L61	@,
 881 005c 002B     		cmp	r3, #0	@ D.7890,
 882 005e 00D0     		beq	.LCB524	@
 883 0060 C2E0     		b	.L85	@long jump	@
 884              	.LCB524:
 374:src/sim900_800.c **** 					{
 375:src/sim900_800.c **** 					case 0:
 376:src/sim900_800.c **** 						prestadorSimState++;
 885              		.loc 1 376 0
 886 0062 C74B     		ldr	r3, .L94+8	@ tmp161,
 887 0064 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 888 0066 0133     		adds	r3, r3, #1	@ tmp162,
 889 0068 DAB2     		uxtb	r2, r3	@ D.7889, tmp162
 890 006a C54B     		ldr	r3, .L94+8	@ tmp163,
 891 006c 1A70     		strb	r2, [r3]	@ tmp164, prestadorSimState
 377:src/sim900_800.c **** 						break;
 892              		.loc 1 377 0
 893 006e C2E0     		b	.L56	@
 894              	.L60:
 378:src/sim900_800.c **** 					case 1:
 379:src/sim900_800.c **** 
 380:src/sim900_800.c **** 						i = GSM_SetSIM (1);
 895              		.loc 1 380 0
 896 0070 1724     		movs	r4, #23	@ tmp165,
 897 0072 6C44     		add	r4, r4, sp	@ tmp165,
ARM GAS  /tmp/cc16P66I.s 			page 24


 898 0074 0120     		movs	r0, #1	@,
 899 0076 FFF7FEFF 		bl	GSM_SetSIM	@
 900 007a 0300     		movs	r3, r0	@ tmp166,
 901 007c 2370     		strb	r3, [r4]	@ tmp168, i
 381:src/sim900_800.c **** 						if (i == 2)
 902              		.loc 1 381 0
 903 007e 1723     		movs	r3, #23	@ tmp169,
 904 0080 6B44     		add	r3, r3, sp	@ tmp169,
 905 0082 1B78     		ldrb	r3, [r3]	@ tmp170, i
 906 0084 022B     		cmp	r3, #2	@ tmp170,
 907 0086 05D1     		bne	.L63	@,
 382:src/sim900_800.c **** 							prestadorSimState++;
 908              		.loc 1 382 0
 909 0088 BD4B     		ldr	r3, .L94+8	@ tmp171,
 910 008a 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 911 008c 0133     		adds	r3, r3, #1	@ tmp172,
 912 008e DAB2     		uxtb	r2, r3	@ D.7889, tmp172
 913 0090 BB4B     		ldr	r3, .L94+8	@ tmp173,
 914 0092 1A70     		strb	r2, [r3]	@ tmp174, prestadorSimState
 915              	.L63:
 383:src/sim900_800.c **** 						if (i > 2)
 916              		.loc 1 383 0
 917 0094 1723     		movs	r3, #23	@ tmp175,
 918 0096 6B44     		add	r3, r3, sp	@ tmp175,
 919 0098 1B78     		ldrb	r3, [r3]	@ tmp176, i
 920 009a 022B     		cmp	r3, #2	@ tmp176,
 921 009c 08D9     		bls	.L64	@,
 384:src/sim900_800.c **** 						{
 385:src/sim900_800.c **** 							prestadorSimState = 0;
 922              		.loc 1 385 0
 923 009e B84B     		ldr	r3, .L94+8	@ tmp177,
 924 00a0 0022     		movs	r2, #0	@ tmp178,
 925 00a2 1A70     		strb	r2, [r3]	@ tmp179, prestadorSimState
 386:src/sim900_800.c **** 							//prestadorSimTime = 150;
 387:src/sim900_800.c **** 							prestadorSimSelect++;
 926              		.loc 1 387 0
 927 00a4 B54B     		ldr	r3, .L94+4	@ tmp180,
 928 00a6 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 929 00a8 0133     		adds	r3, r3, #1	@ tmp181,
 930 00aa DAB2     		uxtb	r2, r3	@ D.7889, tmp181
 931 00ac B34B     		ldr	r3, .L94+4	@ tmp182,
 932 00ae 1A70     		strb	r2, [r3]	@ tmp183, prestadorSimSelect
 933              	.L64:
 388:src/sim900_800.c **** 						}
 389:src/sim900_800.c **** 
 390:src/sim900_800.c **** 						if (i == 2)
 934              		.loc 1 390 0
 935 00b0 1723     		movs	r3, #23	@ tmp184,
 936 00b2 6B44     		add	r3, r3, sp	@ tmp184,
 937 00b4 1B78     		ldrb	r3, [r3]	@ tmp185, i
 938 00b6 022B     		cmp	r3, #2	@ tmp185,
 939 00b8 05D1     		bne	.L65	@,
 391:src/sim900_800.c **** 							prestadorSimState++;
 940              		.loc 1 391 0
 941 00ba B14B     		ldr	r3, .L94+8	@ tmp186,
 942 00bc 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 943 00be 0133     		adds	r3, r3, #1	@ tmp187,
ARM GAS  /tmp/cc16P66I.s 			page 25


 944 00c0 DAB2     		uxtb	r2, r3	@ D.7889, tmp187
 945 00c2 AF4B     		ldr	r3, .L94+8	@ tmp188,
 946 00c4 1A70     		strb	r2, [r3]	@ tmp189, prestadorSimState
 947              	.L65:
 392:src/sim900_800.c **** 						if (i > 2)
 948              		.loc 1 392 0
 949 00c6 1723     		movs	r3, #23	@ tmp190,
 950 00c8 6B44     		add	r3, r3, sp	@ tmp190,
 951 00ca 1B78     		ldrb	r3, [r3]	@ tmp191, i
 952 00cc 022B     		cmp	r3, #2	@ tmp191,
 953 00ce 00D8     		bhi	.LCB587	@
 954 00d0 8EE0     		b	.L89	@long jump	@
 955              	.LCB587:
 393:src/sim900_800.c **** 						{
 394:src/sim900_800.c **** 							prestadorSimState = 0;
 956              		.loc 1 394 0
 957 00d2 AB4B     		ldr	r3, .L94+8	@ tmp192,
 958 00d4 0022     		movs	r2, #0	@ tmp193,
 959 00d6 1A70     		strb	r2, [r3]	@ tmp194, prestadorSimState
 395:src/sim900_800.c **** 							//prestadorSimTime = 150;
 396:src/sim900_800.c **** 							prestadorSimSelect++;
 960              		.loc 1 396 0
 961 00d8 A84B     		ldr	r3, .L94+4	@ tmp195,
 962 00da 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 963 00dc 0133     		adds	r3, r3, #1	@ tmp196,
 964 00de DAB2     		uxtb	r2, r3	@ D.7889, tmp196
 965 00e0 A64B     		ldr	r3, .L94+4	@ tmp197,
 966 00e2 1A70     		strb	r2, [r3]	@ tmp198, prestadorSimSelect
 397:src/sim900_800.c **** 						}
 398:src/sim900_800.c **** 
 399:src/sim900_800.c **** 						break;
 967              		.loc 1 399 0
 968 00e4 84E0     		b	.L89	@
 969              	.L61:
 400:src/sim900_800.c **** 					case 2:
 401:src/sim900_800.c **** 						i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 970              		.loc 1 401 0
 971 00e6 1724     		movs	r4, #23	@ tmp199,
 972 00e8 6C44     		add	r4, r4, sp	@ tmp199,
 973 00ea A64B     		ldr	r3, .L94+12	@ tmp200,
 974 00ec A648     		ldr	r0, .L94+16	@ tmp201,
 975 00ee 0122     		movs	r2, #1	@,
 976 00f0 0F21     		movs	r1, #15	@,
 977 00f2 FFF7FEFF 		bl	GSMSendCommand	@
 978 00f6 0300     		movs	r3, r0	@ tmp202,
 979 00f8 2370     		strb	r3, [r4]	@ tmp204, i
 402:src/sim900_800.c **** 
 403:src/sim900_800.c **** 						if (i == 2)
 980              		.loc 1 403 0
 981 00fa 1723     		movs	r3, #23	@ tmp205,
 982 00fc 6B44     		add	r3, r3, sp	@ tmp205,
 983 00fe 1B78     		ldrb	r3, [r3]	@ tmp206, i
 984 0100 022B     		cmp	r3, #2	@ tmp206,
 985 0102 62D1     		bne	.L67	@,
 404:src/sim900_800.c **** 						{
 405:src/sim900_800.c **** 							if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") - 
 986              		.loc 1 405 0
ARM GAS  /tmp/cc16P66I.s 			page 26


 987 0104 A149     		ldr	r1, .L94+20	@ tmp207,
 988 0106 9F4B     		ldr	r3, .L94+12	@ tmp208,
 989 0108 0522     		movs	r2, #5	@,
 990 010a 1800     		movs	r0, r3	@, tmp208
 991 010c FFF7FEFF 		bl	strncmp	@
 992 0110 031E     		subs	r3, r0, #0	@ D.7890,,
 993 0112 54D1     		bne	.L68	@,
 406:src/sim900_800.c **** 							{
 407:src/sim900_800.c **** 
 408:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProveed
 994              		.loc 1 408 0
 995 0114 0A99     		ldr	r1, [sp, #40]	@ tmp209, pCONFIGURACIONgprsProveedor1
 996 0116 9E4B     		ldr	r3, .L94+24	@ tmp210,
 997 0118 0322     		movs	r2, #3	@,
 998 011a 1800     		movs	r0, r3	@, tmp210
 999 011c FFF7FEFF 		bl	strncmp	@
 1000 0120 031E     		subs	r3, r0, #0	@ D.7890,,
 1001 0122 20D1     		bne	.L69	@,
 409:src/sim900_800.c **** 								{
 410:src/sim900_800.c **** 									*prestadorSim1 = 1;
 1002              		.loc 1 410 0
 1003 0124 029B     		ldr	r3, [sp, #8]	@ tmp211, prestadorSim1
 1004 0126 0122     		movs	r2, #1	@ tmp212,
 1005 0128 1A70     		strb	r2, [r3]	@ tmp213, *prestadorSim1_33(D)
 411:src/sim900_800.c **** 
 412:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN1);
 1006              		.loc 1 412 0
 1007 012a 009A     		ldr	r2, [sp]	@ tmp214, pCONFIGURACIONgprsAPN1
 1008 012c 994B     		ldr	r3, .L94+28	@ tmp215,
 1009 012e 1100     		movs	r1, r2	@, tmp214
 1010 0130 1800     		movs	r0, r3	@, tmp215
 1011 0132 FFF7FEFF 		bl	strcpy	@
 413:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1012              		.loc 1 413 0
 1013 0136 089A     		ldr	r2, [sp, #32]	@ tmp216, pCONFIGURACIONgprsUsuario1
 1014 0138 974B     		ldr	r3, .L94+32	@ tmp217,
 1015 013a 1100     		movs	r1, r2	@, tmp216
 1016 013c 1800     		movs	r0, r3	@, tmp217
 1017 013e FFF7FEFF 		bl	strcpy	@
 414:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave1);
 1018              		.loc 1 414 0
 1019 0142 099A     		ldr	r2, [sp, #36]	@ tmp218, pCONFIGURACIONgprsClave1
 1020 0144 954B     		ldr	r3, .L94+36	@ tmp219,
 1021 0146 1100     		movs	r1, r2	@, tmp218
 1022 0148 1800     		movs	r0, r3	@, tmp219
 1023 014a FFF7FEFF 		bl	strcpy	@
 415:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1024              		.loc 1 415 0
 1025 014e 0F9A     		ldr	r2, [sp, #60]	@ tmp220, pCONFIGURACIONIPREMOTE
 1026 0150 934B     		ldr	r3, .L94+40	@ tmp221,
 1027 0152 1100     		movs	r1, r2	@, tmp220
 1028 0154 1800     		movs	r0, r3	@, tmp221
 1029 0156 FFF7FEFF 		bl	strcpy	@
 416:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1030              		.loc 1 416 0
 1031 015a 109A     		ldr	r2, [sp, #64]	@ tmp222, pCONFIGURACIONPORTREMOTE
 1032 015c 914B     		ldr	r3, .L94+44	@ tmp223,
ARM GAS  /tmp/cc16P66I.s 			page 27


 1033 015e 1100     		movs	r1, r2	@, tmp222
 1034 0160 1800     		movs	r0, r3	@, tmp223
 1035 0162 FFF7FEFF 		bl	strcpy	@
 1036              	.L69:
 417:src/sim900_800.c **** 								}
 418:src/sim900_800.c **** 
 419:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) &pCONFIGURACIONgprsProvee
 1037              		.loc 1 419 0
 1038 0166 0E99     		ldr	r1, [sp, #56]	@ tmp224, pCONFIGURACIONgprsProveedor2
 1039 0168 894B     		ldr	r3, .L94+24	@ tmp225,
 1040 016a 0322     		movs	r2, #3	@,
 1041 016c 1800     		movs	r0, r3	@, tmp225
 1042 016e FFF7FEFF 		bl	strncmp	@
 1043 0172 031E     		subs	r3, r0, #0	@ D.7890,,
 1044 0174 20D1     		bne	.L70	@,
 420:src/sim900_800.c **** 								{
 421:src/sim900_800.c **** 									*prestadorSim1 = 2;
 1045              		.loc 1 421 0
 1046 0176 029B     		ldr	r3, [sp, #8]	@ tmp226, prestadorSim1
 1047 0178 0222     		movs	r2, #2	@ tmp227,
 1048 017a 1A70     		strb	r2, [r3]	@ tmp228, *prestadorSim1_33(D)
 422:src/sim900_800.c **** 
 423:src/sim900_800.c **** 									strcpy((char *)SIM900APNSIM1, 		(const char *)pCONFIGURACIONgprsAPN2);
 1049              		.loc 1 423 0
 1050 017c 0B9A     		ldr	r2, [sp, #44]	@ tmp229, pCONFIGURACIONgprsAPN2
 1051 017e 854B     		ldr	r3, .L94+28	@ tmp230,
 1052 0180 1100     		movs	r1, r2	@, tmp229
 1053 0182 1800     		movs	r0, r3	@, tmp230
 1054 0184 FFF7FEFF 		bl	strcpy	@
 424:src/sim900_800.c **** 									strcpy((char *)SIM900USUARIOSIM1, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1055              		.loc 1 424 0
 1056 0188 0C9A     		ldr	r2, [sp, #48]	@ tmp231, pCONFIGURACIONgprsUsuario2
 1057 018a 834B     		ldr	r3, .L94+32	@ tmp232,
 1058 018c 1100     		movs	r1, r2	@, tmp231
 1059 018e 1800     		movs	r0, r3	@, tmp232
 1060 0190 FFF7FEFF 		bl	strcpy	@
 425:src/sim900_800.c **** 									strcpy((char *)SIM900CLAVESIM1, 	(const char *)pCONFIGURACIONgprsClave2);
 1061              		.loc 1 425 0
 1062 0194 0D9A     		ldr	r2, [sp, #52]	@ tmp233, pCONFIGURACIONgprsClave2
 1063 0196 814B     		ldr	r3, .L94+36	@ tmp234,
 1064 0198 1100     		movs	r1, r2	@, tmp233
 1065 019a 1800     		movs	r0, r3	@, tmp234
 1066 019c FFF7FEFF 		bl	strcpy	@
 426:src/sim900_800.c **** 									strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1067              		.loc 1 426 0
 1068 01a0 0F9A     		ldr	r2, [sp, #60]	@ tmp235, pCONFIGURACIONIPREMOTE
 1069 01a2 7F4B     		ldr	r3, .L94+40	@ tmp236,
 1070 01a4 1100     		movs	r1, r2	@, tmp235
 1071 01a6 1800     		movs	r0, r3	@, tmp236
 1072 01a8 FFF7FEFF 		bl	strcpy	@
 427:src/sim900_800.c **** 									strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1073              		.loc 1 427 0
 1074 01ac 109A     		ldr	r2, [sp, #64]	@ tmp237, pCONFIGURACIONPORTREMOTE
 1075 01ae 7D4B     		ldr	r3, .L94+44	@ tmp238,
 1076 01b0 1100     		movs	r1, r2	@, tmp237
 1077 01b2 1800     		movs	r0, r3	@, tmp238
 1078 01b4 FFF7FEFF 		bl	strcpy	@
ARM GAS  /tmp/cc16P66I.s 			page 28


 1079              	.L70:
 428:src/sim900_800.c **** 								}
 429:src/sim900_800.c **** 
 430:src/sim900_800.c **** /*								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Per
 431:src/sim900_800.c **** 								{
 432:src/sim900_800.c **** 									*prestadorSim1 = 1;
 433:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Personal    ");
 434:src/sim900_800.c **** 								}
 435:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movis
 436:src/sim900_800.c **** 								{
 437:src/sim900_800.c **** 									*prestadorSim1 = 2;
 438:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n    Movistar    ");
 439:src/sim900_800.c **** 								}
 440:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro") 
 441:src/sim900_800.c **** 								{
 442:src/sim900_800.c **** 									*prestadorSim1 = 3;
 443:src/sim900_800.c **** 									LCDTransmitSMStr("\r      SIM 1     \n      Claro     ");
 444:src/sim900_800.c **** 								}
 445:src/sim900_800.c **** */
 446:src/sim900_800.c **** 								prestadorSimState = 0;
 1080              		.loc 1 446 0
 1081 01b8 714B     		ldr	r3, .L94+8	@ tmp239,
 1082 01ba 0022     		movs	r2, #0	@ tmp240,
 1083 01bc 1A70     		strb	r2, [r3]	@ tmp241, prestadorSimState
 1084              	.L68:
 447:src/sim900_800.c **** 							}
 448:src/sim900_800.c **** 							//prestadorSimTime = 150;
 449:src/sim900_800.c **** 							prestadorSimSelect++;
 1085              		.loc 1 449 0
 1086 01be 6F4B     		ldr	r3, .L94+4	@ tmp242,
 1087 01c0 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 1088 01c2 0133     		adds	r3, r3, #1	@ tmp243,
 1089 01c4 DAB2     		uxtb	r2, r3	@ D.7889, tmp243
 1090 01c6 6D4B     		ldr	r3, .L94+4	@ tmp244,
 1091 01c8 1A70     		strb	r2, [r3]	@ tmp245, prestadorSimSelect
 1092              	.L67:
 450:src/sim900_800.c **** 						}
 451:src/sim900_800.c **** 						if (i > 2)
 1093              		.loc 1 451 0
 1094 01ca 1723     		movs	r3, #23	@ tmp246,
 1095 01cc 6B44     		add	r3, r3, sp	@ tmp246,
 1096 01ce 1B78     		ldrb	r3, [r3]	@ tmp247, i
 1097 01d0 022B     		cmp	r3, #2	@ tmp247,
 1098 01d2 0FD9     		bls	.L90	@,
 452:src/sim900_800.c **** 						{
 453:src/sim900_800.c **** 							prestadorSimState = 0;
 1099              		.loc 1 453 0
 1100 01d4 6A4B     		ldr	r3, .L94+8	@ tmp248,
 1101 01d6 0022     		movs	r2, #0	@ tmp249,
 1102 01d8 1A70     		strb	r2, [r3]	@ tmp250, prestadorSimState
 454:src/sim900_800.c **** 							//prestadorSimTime = 150;
 455:src/sim900_800.c **** 							prestadorSimSelect++;
 1103              		.loc 1 455 0
 1104 01da 684B     		ldr	r3, .L94+4	@ tmp251,
 1105 01dc 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimSelect
 1106 01de 0133     		adds	r3, r3, #1	@ tmp252,
 1107 01e0 DAB2     		uxtb	r2, r3	@ D.7889, tmp252
ARM GAS  /tmp/cc16P66I.s 			page 29


 1108 01e2 664B     		ldr	r3, .L94+4	@ tmp253,
 1109 01e4 1A70     		strb	r2, [r3]	@ tmp254, prestadorSimSelect
 456:src/sim900_800.c **** 
 457:src/sim900_800.c **** 						}
 458:src/sim900_800.c **** 						break;
 1110              		.loc 1 458 0
 1111 01e6 05E0     		b	.L90	@
 1112              	.L85:
 459:src/sim900_800.c **** 
 460:src/sim900_800.c **** 					default:
 461:src/sim900_800.c **** 						prestadorSimState = 0;
 1113              		.loc 1 461 0
 1114 01e8 654B     		ldr	r3, .L94+8	@ tmp255,
 1115 01ea 0022     		movs	r2, #0	@ tmp256,
 1116 01ec 1A70     		strb	r2, [r3]	@ tmp257, prestadorSimState
 462:src/sim900_800.c **** 						break;
 1117              		.loc 1 462 0
 1118 01ee 02E0     		b	.L56	@
 1119              	.L89:
 399:src/sim900_800.c **** 					case 2:
 1120              		.loc 1 399 0
 1121 01f0 C046     		nop
 1122 01f2 00E0     		b	.L56	@
 1123              	.L90:
 458:src/sim900_800.c **** 
 1124              		.loc 1 458 0
 1125 01f4 C046     		nop
 1126              	.L56:
 463:src/sim900_800.c **** 					}
 464:src/sim900_800.c **** 				}
 465:src/sim900_800.c **** 			case 2:
 466:src/sim900_800.c **** 				if (*prestadorSim2 == 0)
 1127              		.loc 1 466 0
 1128 01f6 019B     		ldr	r3, [sp, #4]	@ tmp258, prestadorSim2
 1129 01f8 1B78     		ldrb	r3, [r3]	@ D.7889, *prestadorSim2_99(D)
 1130 01fa 002B     		cmp	r3, #0	@ D.7889,
 1131 01fc 00D0     		beq	.LCB748	@
 1132 01fe DFE0     		b	.L91	@long jump	@
 1133              	.LCB748:
 467:src/sim900_800.c **** 				{
 468:src/sim900_800.c **** 					switch(prestadorSimState)
 1134              		.loc 1 468 0
 1135 0200 5F4B     		ldr	r3, .L94+8	@ tmp259,
 1136 0202 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 1137 0204 012B     		cmp	r3, #1	@ D.7890,
 1138 0206 0BD0     		beq	.L74	@,
 1139 0208 022B     		cmp	r3, #2	@ D.7890,
 1140 020a 2BD0     		beq	.L75	@,
 1141 020c 002B     		cmp	r3, #0	@ D.7890,
 1142 020e 00D0     		beq	.LCB756	@
 1143 0210 A9E0     		b	.L86	@long jump	@
 1144              	.LCB756:
 469:src/sim900_800.c **** 					{
 470:src/sim900_800.c **** 						case 0:
 471:src/sim900_800.c **** 							if (*pGSMHWstatus & 0x02);
 472:src/sim900_800.c **** 								prestadorSimState++;
 1145              		.loc 1 472 0
ARM GAS  /tmp/cc16P66I.s 			page 30


 1146 0212 5B4B     		ldr	r3, .L94+8	@ tmp262,
 1147 0214 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 1148 0216 0133     		adds	r3, r3, #1	@ tmp263,
 1149 0218 DAB2     		uxtb	r2, r3	@ D.7889, tmp263
 1150 021a 594B     		ldr	r3, .L94+8	@ tmp264,
 1151 021c 1A70     		strb	r2, [r3]	@ tmp265, prestadorSimState
 473:src/sim900_800.c **** 							break;
 1152              		.loc 1 473 0
 1153 021e A9E0     		b	.L72	@
 1154              	.L74:
 474:src/sim900_800.c **** 						case 1:
 475:src/sim900_800.c **** 							i = GSM_SetSIM (2);
 1155              		.loc 1 475 0
 1156 0220 1724     		movs	r4, #23	@ tmp266,
 1157 0222 6C44     		add	r4, r4, sp	@ tmp266,
 1158 0224 0220     		movs	r0, #2	@,
 1159 0226 FFF7FEFF 		bl	GSM_SetSIM	@
 1160 022a 0300     		movs	r3, r0	@ tmp267,
 1161 022c 2370     		strb	r3, [r4]	@ tmp269, i
 476:src/sim900_800.c **** 
 477:src/sim900_800.c **** 							if (i == 2)
 1162              		.loc 1 477 0
 1163 022e 1723     		movs	r3, #23	@ tmp270,
 1164 0230 6B44     		add	r3, r3, sp	@ tmp270,
 1165 0232 1B78     		ldrb	r3, [r3]	@ tmp271, i
 1166 0234 022B     		cmp	r3, #2	@ tmp271,
 1167 0236 05D1     		bne	.L77	@,
 478:src/sim900_800.c **** 								prestadorSimState++;
 1168              		.loc 1 478 0
 1169 0238 514B     		ldr	r3, .L94+8	@ tmp272,
 1170 023a 1B78     		ldrb	r3, [r3]	@ D.7889, prestadorSimState
 1171 023c 0133     		adds	r3, r3, #1	@ tmp273,
 1172 023e DAB2     		uxtb	r2, r3	@ D.7889, tmp273
 1173 0240 4F4B     		ldr	r3, .L94+8	@ tmp274,
 1174 0242 1A70     		strb	r2, [r3]	@ tmp275, prestadorSimState
 1175              	.L77:
 479:src/sim900_800.c **** 							if (i > 2)
 1176              		.loc 1 479 0
 1177 0244 1723     		movs	r3, #23	@ tmp276,
 1178 0246 6B44     		add	r3, r3, sp	@ tmp276,
 1179 0248 1B78     		ldrb	r3, [r3]	@ tmp277, i
 1180 024a 022B     		cmp	r3, #2	@ tmp277,
 1181 024c 00D8     		bhi	.LCB790	@
 1182 024e 8EE0     		b	.L92	@long jump	@
 1183              	.LCB790:
 480:src/sim900_800.c **** 							{
 481:src/sim900_800.c **** 								prestadorSimState = 0;
 1184              		.loc 1 481 0
 1185 0250 4B4B     		ldr	r3, .L94+8	@ tmp278,
 1186 0252 0022     		movs	r2, #0	@ tmp279,
 1187 0254 1A70     		strb	r2, [r3]	@ tmp280, prestadorSimState
 482:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1188              		.loc 1 482 0
 1189 0256 494B     		ldr	r3, .L94+4	@ tmp281,
 1190 0258 0022     		movs	r2, #0	@ tmp282,
 1191 025a 1A70     		strb	r2, [r3]	@ tmp283, prestadorSimSelect
 483:src/sim900_800.c **** 								prestadorSimTime = 150;
ARM GAS  /tmp/cc16P66I.s 			page 31


 1192              		.loc 1 483 0
 1193 025c 464B     		ldr	r3, .L94	@ tmp284,
 1194 025e 9622     		movs	r2, #150	@ tmp285,
 1195 0260 1A70     		strb	r2, [r3]	@ tmp286, prestadorSimTime
 484:src/sim900_800.c **** 							}
 485:src/sim900_800.c **** 
 486:src/sim900_800.c **** 							break;
 1196              		.loc 1 486 0
 1197 0262 84E0     		b	.L92	@
 1198              	.L75:
 487:src/sim900_800.c **** 						case 2:
 488:src/sim900_800.c **** 							i = GSMSendCommand ("AT+CSPN?\r\n", 15, 1, &GSMbuffRtaCommand[0]);
 1199              		.loc 1 488 0
 1200 0264 1724     		movs	r4, #23	@ tmp287,
 1201 0266 6C44     		add	r4, r4, sp	@ tmp287,
 1202 0268 464B     		ldr	r3, .L94+12	@ tmp288,
 1203 026a 4748     		ldr	r0, .L94+16	@ tmp289,
 1204 026c 0122     		movs	r2, #1	@,
 1205 026e 0F21     		movs	r1, #15	@,
 1206 0270 FFF7FEFF 		bl	GSMSendCommand	@
 1207 0274 0300     		movs	r3, r0	@ tmp290,
 1208 0276 2370     		strb	r3, [r4]	@ tmp292, i
 489:src/sim900_800.c **** 
 490:src/sim900_800.c **** 							if (i == 2)
 1209              		.loc 1 490 0
 1210 0278 1723     		movs	r3, #23	@ tmp293,
 1211 027a 6B44     		add	r3, r3, sp	@ tmp293,
 1212 027c 1B78     		ldrb	r3, [r3]	@ tmp294, i
 1213 027e 022B     		cmp	r3, #2	@ tmp294,
 1214 0280 62D1     		bne	.L79	@,
 491:src/sim900_800.c **** 							{
 492:src/sim900_800.c **** 								if (!strncmp ((const char *)&GSMbuffRtaCommand[0],(const char *) "+CSPN", sizeof("+CSPN") -
 1215              		.loc 1 492 0
 1216 0282 4249     		ldr	r1, .L94+20	@ tmp295,
 1217 0284 3F4B     		ldr	r3, .L94+12	@ tmp296,
 1218 0286 0522     		movs	r2, #5	@,
 1219 0288 1800     		movs	r0, r3	@, tmp296
 1220 028a FFF7FEFF 		bl	strncmp	@
 1221 028e 031E     		subs	r3, r0, #0	@ D.7890,,
 1222 0290 54D1     		bne	.L80	@,
 493:src/sim900_800.c **** 								{
 494:src/sim900_800.c **** 
 495:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1223              		.loc 1 495 0
 1224 0292 0A99     		ldr	r1, [sp, #40]	@ tmp297, pCONFIGURACIONgprsProveedor1
 1225 0294 3E4B     		ldr	r3, .L94+24	@ tmp298,
 1226 0296 0322     		movs	r2, #3	@,
 1227 0298 1800     		movs	r0, r3	@, tmp298
 1228 029a FFF7FEFF 		bl	strncmp	@
 1229 029e 031E     		subs	r3, r0, #0	@ D.7890,,
 1230 02a0 20D1     		bne	.L81	@,
 496:src/sim900_800.c **** 									{
 497:src/sim900_800.c **** 										*prestadorSim2 = 1;
 1231              		.loc 1 497 0
 1232 02a2 019B     		ldr	r3, [sp, #4]	@ tmp299, prestadorSim2
 1233 02a4 0122     		movs	r2, #1	@ tmp300,
 1234 02a6 1A70     		strb	r2, [r3]	@ tmp301, *prestadorSim2_99(D)
ARM GAS  /tmp/cc16P66I.s 			page 32


 498:src/sim900_800.c **** 
 499:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN1);
 1235              		.loc 1 499 0
 1236 02a8 009A     		ldr	r2, [sp]	@ tmp302, pCONFIGURACIONgprsAPN1
 1237 02aa 3F4B     		ldr	r3, .L94+48	@ tmp303,
 1238 02ac 1100     		movs	r1, r2	@, tmp302
 1239 02ae 1800     		movs	r0, r3	@, tmp303
 1240 02b0 FFF7FEFF 		bl	strcpy	@
 500:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario1);
 1241              		.loc 1 500 0
 1242 02b4 089A     		ldr	r2, [sp, #32]	@ tmp304, pCONFIGURACIONgprsUsuario1
 1243 02b6 3D4B     		ldr	r3, .L94+52	@ tmp305,
 1244 02b8 1100     		movs	r1, r2	@, tmp304
 1245 02ba 1800     		movs	r0, r3	@, tmp305
 1246 02bc FFF7FEFF 		bl	strcpy	@
 501:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave1);
 1247              		.loc 1 501 0
 1248 02c0 099A     		ldr	r2, [sp, #36]	@ tmp306, pCONFIGURACIONgprsClave1
 1249 02c2 3B4B     		ldr	r3, .L94+56	@ tmp307,
 1250 02c4 1100     		movs	r1, r2	@, tmp306
 1251 02c6 1800     		movs	r0, r3	@, tmp307
 1252 02c8 FFF7FEFF 		bl	strcpy	@
 502:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1253              		.loc 1 502 0
 1254 02cc 0F9A     		ldr	r2, [sp, #60]	@ tmp308, pCONFIGURACIONIPREMOTE
 1255 02ce 344B     		ldr	r3, .L94+40	@ tmp309,
 1256 02d0 1100     		movs	r1, r2	@, tmp308
 1257 02d2 1800     		movs	r0, r3	@, tmp309
 1258 02d4 FFF7FEFF 		bl	strcpy	@
 503:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1259              		.loc 1 503 0
 1260 02d8 109A     		ldr	r2, [sp, #64]	@ tmp310, pCONFIGURACIONPORTREMOTE
 1261 02da 324B     		ldr	r3, .L94+44	@ tmp311,
 1262 02dc 1100     		movs	r1, r2	@, tmp310
 1263 02de 1800     		movs	r0, r3	@, tmp311
 1264 02e0 FFF7FEFF 		bl	strcpy	@
 1265              	.L81:
 504:src/sim900_800.c **** 									}
 505:src/sim900_800.c **** 
 506:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) pCONFIGURACIONgprsProvee
 1266              		.loc 1 506 0
 1267 02e4 0E99     		ldr	r1, [sp, #56]	@ tmp312, pCONFIGURACIONgprsProveedor2
 1268 02e6 2A4B     		ldr	r3, .L94+24	@ tmp313,
 1269 02e8 0322     		movs	r2, #3	@,
 1270 02ea 1800     		movs	r0, r3	@, tmp313
 1271 02ec FFF7FEFF 		bl	strncmp	@
 1272 02f0 031E     		subs	r3, r0, #0	@ D.7890,,
 1273 02f2 20D1     		bne	.L82	@,
 507:src/sim900_800.c **** 									{
 508:src/sim900_800.c **** 										*prestadorSim2 = 2;
 1274              		.loc 1 508 0
 1275 02f4 019B     		ldr	r3, [sp, #4]	@ tmp314, prestadorSim2
 1276 02f6 0222     		movs	r2, #2	@ tmp315,
 1277 02f8 1A70     		strb	r2, [r3]	@ tmp316, *prestadorSim2_99(D)
 509:src/sim900_800.c **** 
 510:src/sim900_800.c **** 										strcpy((char *)SIM900APNSIM2, 		(const char *)pCONFIGURACIONgprsAPN2);
 1278              		.loc 1 510 0
ARM GAS  /tmp/cc16P66I.s 			page 33


 1279 02fa 0B9A     		ldr	r2, [sp, #44]	@ tmp317, pCONFIGURACIONgprsAPN2
 1280 02fc 2A4B     		ldr	r3, .L94+48	@ tmp318,
 1281 02fe 1100     		movs	r1, r2	@, tmp317
 1282 0300 1800     		movs	r0, r3	@, tmp318
 1283 0302 FFF7FEFF 		bl	strcpy	@
 511:src/sim900_800.c **** 										strcpy((char *)SIM900USUARIOSIM2, 	(const char *)pCONFIGURACIONgprsUsuario2);
 1284              		.loc 1 511 0
 1285 0306 0C9A     		ldr	r2, [sp, #48]	@ tmp319, pCONFIGURACIONgprsUsuario2
 1286 0308 284B     		ldr	r3, .L94+52	@ tmp320,
 1287 030a 1100     		movs	r1, r2	@, tmp319
 1288 030c 1800     		movs	r0, r3	@, tmp320
 1289 030e FFF7FEFF 		bl	strcpy	@
 512:src/sim900_800.c **** 										strcpy((char *)SIM900CLAVESIM2, 	(const char *)pCONFIGURACIONgprsClave2);
 1290              		.loc 1 512 0
 1291 0312 0D9A     		ldr	r2, [sp, #52]	@ tmp321, pCONFIGURACIONgprsClave2
 1292 0314 264B     		ldr	r3, .L94+56	@ tmp322,
 1293 0316 1100     		movs	r1, r2	@, tmp321
 1294 0318 1800     		movs	r0, r3	@, tmp322
 1295 031a FFF7FEFF 		bl	strcpy	@
 513:src/sim900_800.c **** 										strcpy((char *)SIM900IPREMOTE, 		(const char *)pCONFIGURACIONIPREMOTE);
 1296              		.loc 1 513 0
 1297 031e 0F9A     		ldr	r2, [sp, #60]	@ tmp323, pCONFIGURACIONIPREMOTE
 1298 0320 1F4B     		ldr	r3, .L94+40	@ tmp324,
 1299 0322 1100     		movs	r1, r2	@, tmp323
 1300 0324 1800     		movs	r0, r3	@, tmp324
 1301 0326 FFF7FEFF 		bl	strcpy	@
 514:src/sim900_800.c **** 										strcpy((char *)SIM900PORTREMOTE, 	(const char *)pCONFIGURACIONPORTREMOTE);
 1302              		.loc 1 514 0
 1303 032a 109A     		ldr	r2, [sp, #64]	@ tmp325, pCONFIGURACIONPORTREMOTE
 1304 032c 1D4B     		ldr	r3, .L94+44	@ tmp326,
 1305 032e 1100     		movs	r1, r2	@, tmp325
 1306 0330 1800     		movs	r0, r3	@, tmp326
 1307 0332 FFF7FEFF 		bl	strcpy	@
 1308              	.L82:
 515:src/sim900_800.c **** 									}
 516:src/sim900_800.c **** 
 517:src/sim900_800.c **** /*									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Personal", sizeof("Pe
 518:src/sim900_800.c **** 									{
 519:src/sim900_800.c **** 										*prestadorSim2 = 1;
 520:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Personal    ");
 521:src/sim900_800.c **** 									}
 522:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Movistar", sizeof("Movi
 523:src/sim900_800.c **** 									{
 524:src/sim900_800.c **** 										*prestadorSim2 = 2;
 525:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n    Movistar    ");
 526:src/sim900_800.c **** 									}
 527:src/sim900_800.c **** 									if (!strncmp ((const char *)&GSMbuffRtaCommand[8], (const char *) "Claro", sizeof("Claro")
 528:src/sim900_800.c **** 									{
 529:src/sim900_800.c **** 										*prestadorSim2 = 3;
 530:src/sim900_800.c **** 										LCDTransmitSMStr("\r      SIM 2     \n      Claro     ");
 531:src/sim900_800.c **** 									}
 532:src/sim900_800.c **** */
 533:src/sim900_800.c **** 									prestadorSimState = 0;
 1309              		.loc 1 533 0
 1310 0336 124B     		ldr	r3, .L94+8	@ tmp327,
 1311 0338 0022     		movs	r2, #0	@ tmp328,
 1312 033a 1A70     		strb	r2, [r3]	@ tmp329, prestadorSimState
ARM GAS  /tmp/cc16P66I.s 			page 34


 1313              	.L80:
 534:src/sim900_800.c **** 
 535:src/sim900_800.c **** 								}
 536:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1314              		.loc 1 536 0
 1315 033c 0F4B     		ldr	r3, .L94+4	@ tmp330,
 1316 033e 0022     		movs	r2, #0	@ tmp331,
 1317 0340 1A70     		strb	r2, [r3]	@ tmp332, prestadorSimSelect
 537:src/sim900_800.c **** 								prestadorSimTime = 150;
 1318              		.loc 1 537 0
 1319 0342 0D4B     		ldr	r3, .L94	@ tmp333,
 1320 0344 9622     		movs	r2, #150	@ tmp334,
 1321 0346 1A70     		strb	r2, [r3]	@ tmp335, prestadorSimTime
 1322              	.L79:
 538:src/sim900_800.c **** 							}
 539:src/sim900_800.c **** 							if (i > 2)
 1323              		.loc 1 539 0
 1324 0348 1723     		movs	r3, #23	@ tmp336,
 1325 034a 6B44     		add	r3, r3, sp	@ tmp336,
 1326 034c 1B78     		ldrb	r3, [r3]	@ tmp337, i
 1327 034e 022B     		cmp	r3, #2	@ tmp337,
 1328 0350 0FD9     		bls	.L93	@,
 540:src/sim900_800.c **** 							{
 541:src/sim900_800.c **** 								prestadorSimState = 0;
 1329              		.loc 1 541 0
 1330 0352 0B4B     		ldr	r3, .L94+8	@ tmp338,
 1331 0354 0022     		movs	r2, #0	@ tmp339,
 1332 0356 1A70     		strb	r2, [r3]	@ tmp340, prestadorSimState
 542:src/sim900_800.c **** 								prestadorSimSelect = 0;
 1333              		.loc 1 542 0
 1334 0358 084B     		ldr	r3, .L94+4	@ tmp341,
 1335 035a 0022     		movs	r2, #0	@ tmp342,
 1336 035c 1A70     		strb	r2, [r3]	@ tmp343, prestadorSimSelect
 543:src/sim900_800.c **** 								prestadorSimTime = 150;
 1337              		.loc 1 543 0
 1338 035e 064B     		ldr	r3, .L94	@ tmp344,
 1339 0360 9622     		movs	r2, #150	@ tmp345,
 1340 0362 1A70     		strb	r2, [r3]	@ tmp346, prestadorSimTime
 544:src/sim900_800.c **** 							}
 545:src/sim900_800.c **** 							break;
 1341              		.loc 1 545 0
 1342 0364 05E0     		b	.L93	@
 1343              	.L86:
 546:src/sim900_800.c **** 
 547:src/sim900_800.c **** 						default:
 548:src/sim900_800.c **** 							prestadorSimState = 0;
 1344              		.loc 1 548 0
 1345 0366 064B     		ldr	r3, .L94+8	@ tmp347,
 1346 0368 0022     		movs	r2, #0	@ tmp348,
 1347 036a 1A70     		strb	r2, [r3]	@ tmp349, prestadorSimState
 549:src/sim900_800.c **** 							break;
 1348              		.loc 1 549 0
 1349 036c 02E0     		b	.L72	@
 1350              	.L92:
 486:src/sim900_800.c **** 						case 2:
 1351              		.loc 1 486 0
 1352 036e C046     		nop
ARM GAS  /tmp/cc16P66I.s 			page 35


 1353 0370 26E0     		b	.L91	@
 1354              	.L93:
 545:src/sim900_800.c **** 
 1355              		.loc 1 545 0
 1356 0372 C046     		nop
 1357              	.L72:
 550:src/sim900_800.c **** 					}
 551:src/sim900_800.c **** 				}
 552:src/sim900_800.c **** 				break;
 1358              		.loc 1 552 0 discriminator 1
 1359 0374 24E0     		b	.L91	@
 1360              	.L95:
 1361 0376 C046     		.align	2
 1362              	.L94:
 1363 0378 00000000 		.word	prestadorSimTime
 1364 037c 00000000 		.word	prestadorSimSelect
 1365 0380 00000000 		.word	prestadorSimState
 1366 0384 00000000 		.word	GSMbuffRtaCommand
 1367 0388 00000000 		.word	.LC18
 1368 038c 0C000000 		.word	.LC20
 1369 0390 08000000 		.word	GSMbuffRtaCommand+8
 1370 0394 00000000 		.word	SIM900APNSIM1
 1371 0398 00000000 		.word	SIM900USUARIOSIM1
 1372 039c 00000000 		.word	SIM900CLAVESIM1
 1373 03a0 00000000 		.word	SIM900IPREMOTE
 1374 03a4 00000000 		.word	SIM900PORTREMOTE
 1375 03a8 00000000 		.word	SIM900APNSIM2
 1376 03ac 00000000 		.word	SIM900USUARIOSIM2
 1377 03b0 00000000 		.word	SIM900CLAVESIM2
 1378              	.L84:
 553:src/sim900_800.c **** 
 554:src/sim900_800.c **** 			default:
 555:src/sim900_800.c **** 				prestadorSimSelect = 0;
 1379              		.loc 1 555 0
 1380 03b4 044B     		ldr	r3, .L96	@ tmp350,
 1381 03b6 0022     		movs	r2, #0	@ tmp351,
 1382 03b8 1A70     		strb	r2, [r3]	@ tmp352, prestadorSimSelect
 556:src/sim900_800.c **** 				break;
 1383              		.loc 1 556 0
 1384 03ba 02E0     		b	.L53	@
 1385              	.L88:
 369:src/sim900_800.c **** 			case 1:
 1386              		.loc 1 369 0
 1387 03bc C046     		nop
 1388 03be 00E0     		b	.L87	@
 1389              	.L91:
 552:src/sim900_800.c **** 
 1390              		.loc 1 552 0
 1391 03c0 C046     		nop
 1392              	.L53:
 1393              	.L87:
 557:src/sim900_800.c **** 
 558:src/sim900_800.c **** 
 559:src/sim900_800.c **** 		}
 560:src/sim900_800.c **** 
 561:src/sim900_800.c **** 	}
 562:src/sim900_800.c **** }
ARM GAS  /tmp/cc16P66I.s 			page 36


 1394              		.loc 1 562 0
 1395 03c2 C046     		nop
 1396 03c4 06B0     		add	sp, sp, #24	@,,
 1397              		@ sp needed	@
 1398 03c6 10BD     		pop	{r4, pc}
 1399              	.L97:
 1400              		.align	2
 1401              	.L96:
 1402 03c8 00000000 		.word	prestadorSimSelect
 1403              		.cfi_endproc
 1404              	.LFE25:
 1405              		.size	GSMPrestador, .-GSMPrestador
 1406              		.section	.rodata
 1407 0012 0000     		.align	2
 1408              	.LC33:
 1409 0014 41542B43 		.ascii	"AT+CIPSHUT\015\012\000"
 1409      49505348 
 1409      55540D0A 
 1409      00
 1410              		.section	.text.GSMCloseIP,"ax",%progbits
 1411              		.align	2
 1412              		.global	GSMCloseIP
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	GSMCloseIP, %function
 1416              	GSMCloseIP:
 1417              	.LFB26:
 563:src/sim900_800.c **** 
 564:src/sim900_800.c **** char GSMCloseIP(void)
 565:src/sim900_800.c **** {
 1418              		.loc 1 565 0
 1419              		.cfi_startproc
 1420 0000 10B5     		push	{r4, lr}	@
 1421              	.LCFI5:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 4, -8
 1424              		.cfi_offset 14, -4
 1425 0002 82B0     		sub	sp, sp, #8	@,,
 1426              	.LCFI6:
 1427              		.cfi_def_cfa_offset 16
 566:src/sim900_800.c **** 	unsigned char i = 0;
 1428              		.loc 1 566 0
 1429 0004 6B46     		mov	r3, sp	@ tmp136,
 1430 0006 0733     		adds	r3, r3, #7	@ tmp113,
 1431 0008 0022     		movs	r2, #0	@ tmp114,
 1432 000a 1A70     		strb	r2, [r3]	@ tmp115, i
 567:src/sim900_800.c **** 
 568:src/sim900_800.c **** 	if (flagCloseIP == 1)
 1433              		.loc 1 568 0
 1434 000c 154B     		ldr	r3, .L103	@ tmp116,
 1435 000e 1B78     		ldrb	r3, [r3]	@ D.7894, flagCloseIP
 1436 0010 012B     		cmp	r3, #1	@ D.7894,
 1437 0012 23D1     		bne	.L99	@,
 569:src/sim900_800.c **** 	{
 570:src/sim900_800.c **** 		i = GSMSendCommand ("AT+CIPSHUT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 1438              		.loc 1 570 0
 1439 0014 6B46     		mov	r3, sp	@ tmp137,
ARM GAS  /tmp/cc16P66I.s 			page 37


 1440 0016 DC1D     		adds	r4, r3, #7	@ tmp117, tmp137,
 1441 0018 134B     		ldr	r3, .L103+4	@ tmp118,
 1442 001a 1448     		ldr	r0, .L103+8	@ tmp119,
 1443 001c 0022     		movs	r2, #0	@,
 1444 001e 0F21     		movs	r1, #15	@,
 1445 0020 FFF7FEFF 		bl	GSMSendCommand	@
 1446 0024 0300     		movs	r3, r0	@ tmp120,
 1447 0026 2370     		strb	r3, [r4]	@ tmp122, i
 571:src/sim900_800.c **** 
 572:src/sim900_800.c **** 		if (i == 2)
 1448              		.loc 1 572 0
 1449 0028 6B46     		mov	r3, sp	@ tmp138,
 1450 002a 0733     		adds	r3, r3, #7	@ tmp123,
 1451 002c 1B78     		ldrb	r3, [r3]	@ tmp124, i
 1452 002e 022B     		cmp	r3, #2	@ tmp124,
 1453 0030 06D1     		bne	.L100	@,
 573:src/sim900_800.c **** 		{
 574:src/sim900_800.c **** 			flagCloseIP = 0;
 1454              		.loc 1 574 0
 1455 0032 0C4B     		ldr	r3, .L103	@ tmp125,
 1456 0034 0022     		movs	r2, #0	@ tmp126,
 1457 0036 1A70     		strb	r2, [r3]	@ tmp127, flagCloseIP
 575:src/sim900_800.c **** 			return i;
 1458              		.loc 1 575 0
 1459 0038 6B46     		mov	r3, sp	@ tmp139,
 1460 003a 0733     		adds	r3, r3, #7	@ tmp128,
 1461 003c 1B78     		ldrb	r3, [r3]	@ D.7893, i
 1462 003e 0EE0     		b	.L101	@
 1463              	.L100:
 576:src/sim900_800.c **** 		}
 577:src/sim900_800.c **** 		if (i > 2)
 1464              		.loc 1 577 0
 1465 0040 6B46     		mov	r3, sp	@ tmp140,
 1466 0042 0733     		adds	r3, r3, #7	@ tmp129,
 1467 0044 1B78     		ldrb	r3, [r3]	@ tmp130, i
 1468 0046 022B     		cmp	r3, #2	@ tmp130,
 1469 0048 06D9     		bls	.L102	@,
 578:src/sim900_800.c **** 		{
 579:src/sim900_800.c **** 			flagCloseIP = 0;
 1470              		.loc 1 579 0
 1471 004a 064B     		ldr	r3, .L103	@ tmp131,
 1472 004c 0022     		movs	r2, #0	@ tmp132,
 1473 004e 1A70     		strb	r2, [r3]	@ tmp133, flagCloseIP
 580:src/sim900_800.c **** 			return i;
 1474              		.loc 1 580 0
 1475 0050 6B46     		mov	r3, sp	@ tmp141,
 1476 0052 0733     		adds	r3, r3, #7	@ tmp134,
 1477 0054 1B78     		ldrb	r3, [r3]	@ D.7893, i
 1478 0056 02E0     		b	.L101	@
 1479              	.L102:
 581:src/sim900_800.c **** 		}
 582:src/sim900_800.c **** 
 583:src/sim900_800.c **** 		return 1;
 1480              		.loc 1 583 0
 1481 0058 0123     		movs	r3, #1	@ D.7893,
 1482 005a 00E0     		b	.L101	@
 1483              	.L99:
ARM GAS  /tmp/cc16P66I.s 			page 38


 584:src/sim900_800.c **** 	}
 585:src/sim900_800.c **** 
 586:src/sim900_800.c **** 	return 0;
 1484              		.loc 1 586 0
 1485 005c 0023     		movs	r3, #0	@ D.7893,
 1486              	.L101:
 587:src/sim900_800.c **** }
 1487              		.loc 1 587 0
 1488 005e 1800     		movs	r0, r3	@, <retval>
 1489 0060 02B0     		add	sp, sp, #8	@,,
 1490              		@ sp needed	@
 1491 0062 10BD     		pop	{r4, pc}
 1492              	.L104:
 1493              		.align	2
 1494              	.L103:
 1495 0064 00000000 		.word	flagCloseIP
 1496 0068 00000000 		.word	GSMbuffRtaCommand
 1497 006c 14000000 		.word	.LC33
 1498              		.cfi_endproc
 1499              	.LFE26:
 1500              		.size	GSMCloseIP, .-GSMCloseIP
 1501              		.section	.rodata
 1502 0021 000000   		.align	2
 1503              	.LC39:
 1504 0024 3E2000   		.ascii	"> \000"
 1505 0027 00       		.align	2
 1506              	.LC41:
 1507 0028 41544F4B 		.ascii	"ATOK\000"
 1507      00
 1508 002d 000000   		.align	2
 1509              	.LC43:
 1510 0030 41544530 		.ascii	"ATE0OK\000"
 1510      4F4B00
 1511 0037 00       		.align	2
 1512              	.LC45:
 1513 0038 4F4B00   		.ascii	"OK\000"
 1514 003b 00       		.align	2
 1515              	.LC47:
 1516 003c 4552524F 		.ascii	"ERROR\000"
 1516      5200
 1517 0042 0000     		.align	2
 1518              	.LC54:
 1519 0044 2B435049 		.ascii	"+CPIN: \000"
 1519      4E3A2000 
 1520              		.align	2
 1521              	.LC56:
 1522 004c 43616C6C 		.ascii	"Call Ready\000"
 1522      20526561 
 1522      647900
 1523 0057 00       		.align	2
 1524              	.LC58:
 1525 0058 534D5320 		.ascii	"SMS Ready\000"
 1525      52656164 
 1525      7900
 1526 0062 0000     		.align	2
 1527              	.LC60:
 1528 0064 4E4F524D 		.ascii	"NORMAL POWER DOWN\000"
ARM GAS  /tmp/cc16P66I.s 			page 39


 1528      414C2050 
 1528      4F574552 
 1528      20444F57 
 1528      4E00
 1529 0076 0000     		.align	2
 1530              	.LC62:
 1531 0078 2B434D54 		.ascii	"+CMTI: \"SM\",\000"
 1531      493A2022 
 1531      534D222C 
 1531      00
 1532 0085 000000   		.align	2
 1533              	.LC65:
 1534 0088 434C4F53 		.ascii	"CLOSED\000"
 1534      454400
 1535              		.section	.text.GSMReceive,"ax",%progbits
 1536              		.align	2
 1537              		.global	GSMReceive
 1538              		.code	16
 1539              		.thumb_func
 1540              		.type	GSMReceive, %function
 1541              	GSMReceive:
 1542              	.LFB27:
 588:src/sim900_800.c **** 
 589:src/sim900_800.c **** //Procesa respuestas del modulo GSM ubicadas en el buffer buffUARTGSMrx2 con flag PacketReadyUARTGS
 590:src/sim900_800.c **** //revisa los flag de estados GSMConfigGPRSflag GSMSendCommandFlag y revisa respuestas no esperadas
 591:src/sim900_800.c **** //para respuestas no esperadas revisa SMS y avisa la cantidad con GSMCantSMS
 592:src/sim900_800.c **** //void GSMReceive (unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, u
 593:src/sim900_800.c **** void GSMReceive (void)
 594:src/sim900_800.c **** {
 1543              		.loc 1 594 0
 1544              		.cfi_startproc
 1545 0000 10B5     		push	{r4, lr}	@
 1546              	.LCFI7:
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 4, -8
 1549              		.cfi_offset 14, -4
 595:src/sim900_800.c **** 	//---- Comunicacion con modulo GSM ----//
 596:src/sim900_800.c **** 	if (PacketReadyUARTGSM)
 1550              		.loc 1 596 0
 1551 0002 9A4B     		ldr	r3, .L125	@ tmp146,
 1552 0004 1B78     		ldrb	r3, [r3]	@ tmp147, PacketReadyUARTGSM
 1553 0006 DBB2     		uxtb	r3, r3	@ D.7896, tmp147
 1554 0008 002B     		cmp	r3, #0	@ D.7896,
 1555 000a 00D1     		bne	.LCB1102	@
 1556 000c 2BE1     		b	.L124	@long jump	@
 1557              	.LCB1102:
 597:src/sim900_800.c **** 	{
 598:src/sim900_800.c **** 		ESPPreParser2(buffUARTGSMrx2, buffUARTGSMrx2);
 1558              		.loc 1 598 0
 1559 000e 984A     		ldr	r2, .L125+4	@ tmp148,
 1560 0010 974B     		ldr	r3, .L125+4	@ tmp149,
 1561 0012 1100     		movs	r1, r2	@, tmp148
 1562 0014 1800     		movs	r0, r3	@, tmp149
 1563 0016 FFF7FEFF 		bl	ESPPreParser2	@
 599:src/sim900_800.c **** #ifdef DEBUG_ON
 600:src/sim900_800.c **** 		Usart2Send(buffUARTGSMrx2);
 601:src/sim900_800.c **** 		Usart2Send("\r\n");
ARM GAS  /tmp/cc16P66I.s 			page 40


 602:src/sim900_800.c **** #endif
 603:src/sim900_800.c **** 
 604:src/sim900_800.c **** 		if (GSMSendCommandFlag)
 1564              		.loc 1 604 0
 1565 001a 964B     		ldr	r3, .L125+8	@ tmp150,
 1566 001c 1B78     		ldrb	r3, [r3]	@ D.7896, GSMSendCommandFlag
 1567 001e 002B     		cmp	r3, #0	@ D.7896,
 1568 0020 4CD0     		beq	.L107	@,
 605:src/sim900_800.c **** 		{
 606:src/sim900_800.c **** 			if (GSMSendCommandFlag == 3)	//no espera respuesta
 1569              		.loc 1 606 0
 1570 0022 944B     		ldr	r3, .L125+8	@ tmp151,
 1571 0024 1B78     		ldrb	r3, [r3]	@ D.7896, GSMSendCommandFlag
 1572 0026 032B     		cmp	r3, #3	@ D.7896,
 1573 0028 36D1     		bne	.L108	@,
 607:src/sim900_800.c **** 			{
 608:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_SENDOK[0], strlen((const char 
 1574              		.loc 1 608 0
 1575 002a 9349     		ldr	r1, .L125+12	@ tmp152,
 1576 002c 904B     		ldr	r3, .L125+4	@ tmp153,
 1577 002e 0722     		movs	r2, #7	@,
 1578 0030 1800     		movs	r0, r3	@, tmp153
 1579 0032 FFF7FEFF 		bl	strncmp	@
 1580 0036 031E     		subs	r3, r0, #0	@ D.7897,,
 1581 0038 02D1     		bne	.L109	@,
 609:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1582              		.loc 1 609 0
 1583 003a 8E4B     		ldr	r3, .L125+8	@ tmp154,
 1584 003c 0422     		movs	r2, #4	@ tmp155,
 1585 003e 1A70     		strb	r2, [r3]	@ tmp156, GSMSendCommandFlag
 1586              	.L109:
 610:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"> ", (sizeof("> ") - 1)))
 1587              		.loc 1 610 0
 1588 0040 8E49     		ldr	r1, .L125+16	@ tmp157,
 1589 0042 8B4B     		ldr	r3, .L125+4	@ tmp158,
 1590 0044 0222     		movs	r2, #2	@,
 1591 0046 1800     		movs	r0, r3	@, tmp158
 1592 0048 FFF7FEFF 		bl	strncmp	@
 1593 004c 031E     		subs	r3, r0, #0	@ D.7897,,
 1594 004e 02D1     		bne	.L110	@,
 611:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1595              		.loc 1 611 0
 1596 0050 884B     		ldr	r3, .L125+8	@ tmp159,
 1597 0052 0422     		movs	r2, #4	@ tmp160,
 1598 0054 1A70     		strb	r2, [r3]	@ tmp161, GSMSendCommandFlag
 1599              	.L110:
 612:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"ATOK", (sizeof("ATOK") - 1)))
 1600              		.loc 1 612 0
 1601 0056 8A49     		ldr	r1, .L125+20	@ tmp162,
 1602 0058 854B     		ldr	r3, .L125+4	@ tmp163,
 1603 005a 0422     		movs	r2, #4	@,
 1604 005c 1800     		movs	r0, r3	@, tmp163
 1605 005e FFF7FEFF 		bl	strncmp	@
 1606 0062 031E     		subs	r3, r0, #0	@ D.7897,,
 1607 0064 02D1     		bne	.L111	@,
 613:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1608              		.loc 1 613 0
ARM GAS  /tmp/cc16P66I.s 			page 41


 1609 0066 834B     		ldr	r3, .L125+8	@ tmp164,
 1610 0068 0422     		movs	r2, #4	@ tmp165,
 1611 006a 1A70     		strb	r2, [r3]	@ tmp166, GSMSendCommandFlag
 1612              	.L111:
 614:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"ATE0OK", (sizeof("ATE0OK") - 1)))
 1613              		.loc 1 614 0
 1614 006c 8549     		ldr	r1, .L125+24	@ tmp167,
 1615 006e 804B     		ldr	r3, .L125+4	@ tmp168,
 1616 0070 0622     		movs	r2, #6	@,
 1617 0072 1800     		movs	r0, r3	@, tmp168
 1618 0074 FFF7FEFF 		bl	strncmp	@
 1619 0078 031E     		subs	r3, r0, #0	@ D.7897,,
 1620 007a 02D1     		bne	.L112	@,
 615:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1621              		.loc 1 615 0
 1622 007c 7D4B     		ldr	r3, .L125+8	@ tmp169,
 1623 007e 0422     		movs	r2, #4	@ tmp170,
 1624 0080 1A70     		strb	r2, [r3]	@ tmp171, GSMSendCommandFlag
 1625              	.L112:
 616:src/sim900_800.c **** 				if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"OK", (sizeof("OK") - 1)))
 1626              		.loc 1 616 0
 1627 0082 8149     		ldr	r1, .L125+28	@ tmp172,
 1628 0084 7A4B     		ldr	r3, .L125+4	@ tmp173,
 1629 0086 0222     		movs	r2, #2	@,
 1630 0088 1800     		movs	r0, r3	@, tmp173
 1631 008a FFF7FEFF 		bl	strncmp	@
 1632 008e 031E     		subs	r3, r0, #0	@ D.7897,,
 1633 0090 02D1     		bne	.L108	@,
 617:src/sim900_800.c **** 					GSMSendCommandFlag = 4;
 1634              		.loc 1 617 0
 1635 0092 784B     		ldr	r3, .L125+8	@ tmp174,
 1636 0094 0422     		movs	r2, #4	@ tmp175,
 1637 0096 1A70     		strb	r2, [r3]	@ tmp176, GSMSendCommandFlag
 1638              	.L108:
 618:src/sim900_800.c **** 			}
 619:src/sim900_800.c **** 
 620:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *) "ERROR", (sizeof("ERROR") - 1)))
 1639              		.loc 1 620 0
 1640 0098 7C49     		ldr	r1, .L125+32	@ tmp177,
 1641 009a 754B     		ldr	r3, .L125+4	@ tmp178,
 1642 009c 0522     		movs	r2, #5	@,
 1643 009e 1800     		movs	r0, r3	@, tmp178
 1644 00a0 FFF7FEFF 		bl	strncmp	@
 1645 00a4 031E     		subs	r3, r0, #0	@ D.7897,,
 1646 00a6 02D1     		bne	.L113	@,
 621:src/sim900_800.c **** 				GSMSendCommandFlag = 5;
 1647              		.loc 1 621 0
 1648 00a8 724B     		ldr	r3, .L125+8	@ tmp179,
 1649 00aa 0522     		movs	r2, #5	@ tmp180,
 1650 00ac 1A70     		strb	r2, [r3]	@ tmp181, GSMSendCommandFlag
 1651              	.L113:
 622:src/sim900_800.c **** 
 623:src/sim900_800.c **** 			if (GSMSendCommandFlag == 1)	//espera respuestas
 1652              		.loc 1 623 0
 1653 00ae 714B     		ldr	r3, .L125+8	@ tmp182,
 1654 00b0 1B78     		ldrb	r3, [r3]	@ D.7896, GSMSendCommandFlag
 1655 00b2 012B     		cmp	r3, #1	@ D.7896,
ARM GAS  /tmp/cc16P66I.s 			page 42


 1656 00b4 02D1     		bne	.L107	@,
 624:src/sim900_800.c **** 			{
 625:src/sim900_800.c **** 				//autorizo la copia siempre
 626:src/sim900_800.c **** 				// if(buffUARTGSMrx2[0] == '+')		//lo que sigue es la respuesta al comando
 627:src/sim900_800.c **** 					GSMSendCommandFlag = 2;
 1657              		.loc 1 627 0
 1658 00b6 6F4B     		ldr	r3, .L125+8	@ tmp183,
 1659 00b8 0222     		movs	r2, #2	@ tmp184,
 1660 00ba 1A70     		strb	r2, [r3]	@ tmp185, GSMSendCommandFlag
 1661              	.L107:
 628:src/sim900_800.c **** 			}
 629:src/sim900_800.c **** 		}
 630:src/sim900_800.c **** 
 631:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 1)
 1662              		.loc 1 631 0
 1663 00bc 744B     		ldr	r3, .L125+36	@ tmp186,
 1664 00be 1B78     		ldrb	r3, [r3]	@ D.7896, GSMConfigGPRSflag
 1665 00c0 012B     		cmp	r3, #1	@ D.7896,
 1666 00c2 10D1     		bne	.L114	@,
 632:src/sim900_800.c **** 		{
 633:src/sim900_800.c **** 			if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)&GSM_IPSTATE[0], strlen((const char 
 1667              		.loc 1 633 0
 1668 00c4 7349     		ldr	r1, .L125+40	@ tmp187,
 1669 00c6 6A4B     		ldr	r3, .L125+4	@ tmp188,
 1670 00c8 0622     		movs	r2, #6	@,
 1671 00ca 1800     		movs	r0, r3	@, tmp188
 1672 00cc FFF7FEFF 		bl	strncmp	@
 1673 00d0 031E     		subs	r3, r0, #0	@ D.7897,,
 1674 00d2 08D1     		bne	.L114	@,
 634:src/sim900_800.c **** 			{
 635:src/sim900_800.c **** 				strcpy((char *)&GSMbuffStatus[0],(const char *)&buffUARTGSMrx2[sizeof(GSM_IPSTATE)]);
 1675              		.loc 1 635 0
 1676 00d4 704A     		ldr	r2, .L125+44	@ tmp189,
 1677 00d6 714B     		ldr	r3, .L125+48	@ tmp190,
 1678 00d8 1100     		movs	r1, r2	@, tmp189
 1679 00da 1800     		movs	r0, r3	@, tmp190
 1680 00dc FFF7FEFF 		bl	strcpy	@
 636:src/sim900_800.c **** 				GSMConfigGPRSflag = 2;
 1681              		.loc 1 636 0
 1682 00e0 6B4B     		ldr	r3, .L125+36	@ tmp191,
 1683 00e2 0222     		movs	r2, #2	@ tmp192,
 1684 00e4 1A70     		strb	r2, [r3]	@ tmp193, GSMConfigGPRSflag
 1685              	.L114:
 637:src/sim900_800.c **** 			}
 638:src/sim900_800.c **** 		}
 639:src/sim900_800.c **** 
 640:src/sim900_800.c **** 		if(GSMConfigGPRSflag == 3)
 1686              		.loc 1 640 0
 1687 00e6 6A4B     		ldr	r3, .L125+36	@ tmp194,
 1688 00e8 1B78     		ldrb	r3, [r3]	@ D.7896, GSMConfigGPRSflag
 1689 00ea 032B     		cmp	r3, #3	@ D.7896,
 1690 00ec 00D0     		beq	.LCB1228	@
 1691 00ee 65E0     		b	.L115	@long jump	@
 1692              	.LCB1228:
 641:src/sim900_800.c **** 		{
 642:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
 1693              		.loc 1 642 0
ARM GAS  /tmp/cc16P66I.s 			page 43


 1694 00f0 5F4B     		ldr	r3, .L125+4	@ tmp195,
 1695 00f2 1B78     		ldrb	r3, [r3]	@ tmp196, buffUARTGSMrx2
 1696 00f4 DBB2     		uxtb	r3, r3	@ D.7896, tmp196
 1697 00f6 2F2B     		cmp	r3, #47	@ D.7896,
 1698 00f8 26D9     		bls	.L116	@,
 1699              		.loc 1 642 0 is_stmt 0 discriminator 1
 1700 00fa 5D4B     		ldr	r3, .L125+4	@ tmp197,
 1701 00fc 1B78     		ldrb	r3, [r3]	@ tmp198, buffUARTGSMrx2
 1702 00fe DBB2     		uxtb	r3, r3	@ D.7896, tmp198
 1703 0100 3A2B     		cmp	r3, #58	@ D.7896,
 1704 0102 21D8     		bhi	.L116	@,
 1705              		.loc 1 642 0 discriminator 2
 1706 0104 5A4B     		ldr	r3, .L125+4	@ tmp199,
 1707 0106 5B78     		ldrb	r3, [r3, #1]	@ tmp201,
 1708 0108 DBB2     		uxtb	r3, r3	@ D.7896, tmp201
 1709 010a 2F2B     		cmp	r3, #47	@ D.7896,
 1710 010c 1CD9     		bls	.L116	@,
 1711              		.loc 1 642 0 discriminator 3
 1712 010e 584B     		ldr	r3, .L125+4	@ tmp202,
 1713 0110 5B78     		ldrb	r3, [r3, #1]	@ tmp204,
 1714 0112 DBB2     		uxtb	r3, r3	@ D.7896, tmp204
 1715 0114 3A2B     		cmp	r3, #58	@ D.7896,
 1716 0116 17D8     		bhi	.L116	@,
 1717              		.loc 1 642 0 discriminator 4
 1718 0118 554B     		ldr	r3, .L125+4	@ tmp205,
 1719 011a 9B78     		ldrb	r3, [r3, #2]	@ tmp207,
 1720 011c DBB2     		uxtb	r3, r3	@ D.7896, tmp207
 1721 011e 2F2B     		cmp	r3, #47	@ D.7896,
 1722 0120 12D9     		bls	.L116	@,
 1723              		.loc 1 642 0 discriminator 5
 1724 0122 534B     		ldr	r3, .L125+4	@ tmp208,
 1725 0124 9B78     		ldrb	r3, [r3, #2]	@ tmp210,
 1726 0126 DBB2     		uxtb	r3, r3	@ D.7896, tmp210
 1727 0128 3A2B     		cmp	r3, #58	@ D.7896,
 1728 012a 0DD8     		bhi	.L116	@,
 1729              		.loc 1 642 0 discriminator 6
 1730 012c 504B     		ldr	r3, .L125+4	@ tmp211,
 1731 012e DB78     		ldrb	r3, [r3, #3]	@ tmp213,
 1732 0130 DBB2     		uxtb	r3, r3	@ D.7896, tmp213
 1733 0132 2E2B     		cmp	r3, #46	@ D.7896,
 1734 0134 08D1     		bne	.L116	@,
 643:src/sim900_800.c **** 			{
 644:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1735              		.loc 1 644 0 is_stmt 1
 1736 0136 4E49     		ldr	r1, .L125+4	@ tmp214,
 1737 0138 594B     		ldr	r3, .L125+52	@ tmp215,
 1738 013a 1022     		movs	r2, #16	@,
 1739 013c 1800     		movs	r0, r3	@, tmp215
 1740 013e FFF7FEFF 		bl	strncpy	@
 645:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1741              		.loc 1 645 0
 1742 0142 4C4B     		ldr	r3, .L125+8	@ tmp216,
 1743 0144 0422     		movs	r2, #4	@ tmp217,
 1744 0146 1A70     		strb	r2, [r3]	@ tmp218, GSMSendCommandFlag
 1745              	.L116:
 646:src/sim900_800.c **** 			}
 647:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && (buffUARTGSMrx2[1] > 47) && (buffUAR
ARM GAS  /tmp/cc16P66I.s 			page 44


 1746              		.loc 1 647 0
 1747 0148 494B     		ldr	r3, .L125+4	@ tmp219,
 1748 014a 1B78     		ldrb	r3, [r3]	@ tmp220, buffUARTGSMrx2
 1749 014c DBB2     		uxtb	r3, r3	@ D.7896, tmp220
 1750 014e 2F2B     		cmp	r3, #47	@ D.7896,
 1751 0150 1CD9     		bls	.L117	@,
 1752              		.loc 1 647 0 is_stmt 0 discriminator 1
 1753 0152 474B     		ldr	r3, .L125+4	@ tmp221,
 1754 0154 1B78     		ldrb	r3, [r3]	@ tmp222, buffUARTGSMrx2
 1755 0156 DBB2     		uxtb	r3, r3	@ D.7896, tmp222
 1756 0158 3A2B     		cmp	r3, #58	@ D.7896,
 1757 015a 17D8     		bhi	.L117	@,
 1758              		.loc 1 647 0 discriminator 2
 1759 015c 444B     		ldr	r3, .L125+4	@ tmp223,
 1760 015e 5B78     		ldrb	r3, [r3, #1]	@ tmp225,
 1761 0160 DBB2     		uxtb	r3, r3	@ D.7896, tmp225
 1762 0162 2F2B     		cmp	r3, #47	@ D.7896,
 1763 0164 12D9     		bls	.L117	@,
 1764              		.loc 1 647 0 discriminator 3
 1765 0166 424B     		ldr	r3, .L125+4	@ tmp226,
 1766 0168 5B78     		ldrb	r3, [r3, #1]	@ tmp228,
 1767 016a DBB2     		uxtb	r3, r3	@ D.7896, tmp228
 1768 016c 3A2B     		cmp	r3, #58	@ D.7896,
 1769 016e 0DD8     		bhi	.L117	@,
 1770              		.loc 1 647 0 discriminator 4
 1771 0170 3F4B     		ldr	r3, .L125+4	@ tmp229,
 1772 0172 9B78     		ldrb	r3, [r3, #2]	@ tmp231,
 1773 0174 DBB2     		uxtb	r3, r3	@ D.7896, tmp231
 1774 0176 2E2B     		cmp	r3, #46	@ D.7896,
 1775 0178 08D1     		bne	.L117	@,
 648:src/sim900_800.c **** 			{
 649:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1776              		.loc 1 649 0 is_stmt 1
 1777 017a 3D49     		ldr	r1, .L125+4	@ tmp232,
 1778 017c 484B     		ldr	r3, .L125+52	@ tmp233,
 1779 017e 1022     		movs	r2, #16	@,
 1780 0180 1800     		movs	r0, r3	@, tmp233
 1781 0182 FFF7FEFF 		bl	strncpy	@
 650:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1782              		.loc 1 650 0
 1783 0186 3B4B     		ldr	r3, .L125+8	@ tmp234,
 1784 0188 0422     		movs	r2, #4	@ tmp235,
 1785 018a 1A70     		strb	r2, [r3]	@ tmp236, GSMSendCommandFlag
 1786              	.L117:
 651:src/sim900_800.c **** 			}
 652:src/sim900_800.c **** 			if ((buffUARTGSMrx2[0] > 47) && (buffUARTGSMrx2[0] < 59) && buffUARTGSMrx2[1] == '.')
 1787              		.loc 1 652 0
 1788 018c 384B     		ldr	r3, .L125+4	@ tmp237,
 1789 018e 1B78     		ldrb	r3, [r3]	@ tmp238, buffUARTGSMrx2
 1790 0190 DBB2     		uxtb	r3, r3	@ D.7896, tmp238
 1791 0192 2F2B     		cmp	r3, #47	@ D.7896,
 1792 0194 12D9     		bls	.L115	@,
 1793              		.loc 1 652 0 is_stmt 0 discriminator 1
 1794 0196 364B     		ldr	r3, .L125+4	@ tmp239,
 1795 0198 1B78     		ldrb	r3, [r3]	@ tmp240, buffUARTGSMrx2
 1796 019a DBB2     		uxtb	r3, r3	@ D.7896, tmp240
 1797 019c 3A2B     		cmp	r3, #58	@ D.7896,
ARM GAS  /tmp/cc16P66I.s 			page 45


 1798 019e 0DD8     		bhi	.L115	@,
 1799              		.loc 1 652 0 discriminator 2
 1800 01a0 334B     		ldr	r3, .L125+4	@ tmp241,
 1801 01a2 5B78     		ldrb	r3, [r3, #1]	@ tmp243,
 1802 01a4 DBB2     		uxtb	r3, r3	@ D.7896, tmp243
 1803 01a6 2E2B     		cmp	r3, #46	@ D.7896,
 1804 01a8 08D1     		bne	.L115	@,
 653:src/sim900_800.c **** 			{
 654:src/sim900_800.c **** 				strncpy((char *)&GSMIPadd[0],(const char *)&buffUARTGSMrx2[0], 16);
 1805              		.loc 1 654 0 is_stmt 1
 1806 01aa 3149     		ldr	r1, .L125+4	@ tmp244,
 1807 01ac 3C4B     		ldr	r3, .L125+52	@ tmp245,
 1808 01ae 1022     		movs	r2, #16	@,
 1809 01b0 1800     		movs	r0, r3	@, tmp245
 1810 01b2 FFF7FEFF 		bl	strncpy	@
 655:src/sim900_800.c **** 				GSMSendCommandFlag = 4;
 1811              		.loc 1 655 0
 1812 01b6 2F4B     		ldr	r3, .L125+8	@ tmp246,
 1813 01b8 0422     		movs	r2, #4	@ tmp247,
 1814 01ba 1A70     		strb	r2, [r3]	@ tmp248, GSMSendCommandFlag
 1815              	.L115:
 656:src/sim900_800.c **** 			}
 657:src/sim900_800.c **** 		}
 658:src/sim900_800.c **** 
 659:src/sim900_800.c **** 		//respuestas no esperadas
 660:src/sim900_800.c **** 		//primero reviso flags
 661:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"+CPIN: ", (sizeof("+CPIN: ") - 1)))
 1816              		.loc 1 661 0
 1817 01bc 3949     		ldr	r1, .L125+56	@ tmp249,
 1818 01be 2C4B     		ldr	r3, .L125+4	@ tmp250,
 1819 01c0 0722     		movs	r2, #7	@,
 1820 01c2 1800     		movs	r0, r3	@, tmp250
 1821 01c4 FFF7FEFF 		bl	strncmp	@
 1822 01c8 031E     		subs	r3, r0, #0	@ D.7897,,
 1823 01ca 07D1     		bne	.L118	@,
 662:src/sim900_800.c **** 		{
 663:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_RESET_FLAG);
 1824              		.loc 1 663 0
 1825 01cc 8023     		movs	r3, #128	@ tmp278,
 1826 01ce 1B02     		lsls	r3, r3, #8	@ tmp251, tmp278,
 1827 01d0 1800     		movs	r0, r3	@, tmp251
 1828 01d2 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 664:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_CPIN);
 1829              		.loc 1 664 0
 1830 01d6 0420     		movs	r0, #4	@,
 1831 01d8 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1832              	.L118:
 665:src/sim900_800.c **** 		}
 666:src/sim900_800.c **** 
 667:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"Call Ready", (sizeof("Call Ready") -
 1833              		.loc 1 667 0
 1834 01dc 3249     		ldr	r1, .L125+60	@ tmp252,
 1835 01de 244B     		ldr	r3, .L125+4	@ tmp253,
 1836 01e0 0A22     		movs	r2, #10	@,
 1837 01e2 1800     		movs	r0, r3	@, tmp253
 1838 01e4 FFF7FEFF 		bl	strncmp	@
 1839 01e8 031E     		subs	r3, r0, #0	@ D.7897,,
ARM GAS  /tmp/cc16P66I.s 			page 46


 1840 01ea 02D1     		bne	.L119	@,
 668:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_CALL);
 1841              		.loc 1 668 0
 1842 01ec 0120     		movs	r0, #1	@,
 1843 01ee FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1844              	.L119:
 669:src/sim900_800.c **** 
 670:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"SMS Ready", (sizeof("SMS Ready") - 1
 1845              		.loc 1 670 0
 1846 01f2 2E49     		ldr	r1, .L125+64	@ tmp254,
 1847 01f4 1E4B     		ldr	r3, .L125+4	@ tmp255,
 1848 01f6 0922     		movs	r2, #9	@,
 1849 01f8 1800     		movs	r0, r3	@, tmp255
 1850 01fa FFF7FEFF 		bl	strncmp	@
 1851 01fe 031E     		subs	r3, r0, #0	@ D.7897,,
 1852 0200 02D1     		bne	.L120	@,
 671:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_SMS);
 1853              		.loc 1 671 0
 1854 0202 0220     		movs	r0, #2	@,
 1855 0204 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1856              	.L120:
 672:src/sim900_800.c **** 
 673:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"NORMAL POWER DOWN", (sizeof("NORMAL 
 1857              		.loc 1 673 0
 1858 0208 2949     		ldr	r1, .L125+68	@ tmp256,
 1859 020a 194B     		ldr	r3, .L125+4	@ tmp257,
 1860 020c 1122     		movs	r2, #17	@,
 1861 020e 1800     		movs	r0, r3	@, tmp257
 1862 0210 FFF7FEFF 		bl	strncmp	@
 1863 0214 031E     		subs	r3, r0, #0	@ D.7897,,
 1864 0216 09D1     		bne	.L121	@,
 674:src/sim900_800.c **** 		{
 675:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_RESET_FLAG);
 1865              		.loc 1 675 0
 1866 0218 8023     		movs	r3, #128	@ tmp276,
 1867 021a 1B02     		lsls	r3, r3, #8	@ tmp258, tmp276,
 1868 021c 1800     		movs	r0, r3	@, tmp258
 1869 021e FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 676:src/sim900_800.c **** 			FuncsGSMMessageFlags (GSM_SET_POWER_DOWN);
 1870              		.loc 1 676 0
 1871 0222 8023     		movs	r3, #128	@ tmp277,
 1872 0224 DB01     		lsls	r3, r3, #7	@ tmp259, tmp277,
 1873 0226 1800     		movs	r0, r3	@, tmp259
 1874 0228 FFF7FEFF 		bl	FuncsGSMMessageFlags	@
 1875              	.L121:
 677:src/sim900_800.c **** 		}
 678:src/sim900_800.c **** 
 679:src/sim900_800.c **** 		// if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTIDS: \"SM\",", sizeof ("+CMTIDS: \
 680:src/sim900_800.c **** 		// {
 681:src/sim900_800.c **** 		// 	GSMCantSMS2 = buffUARTGSMrx2[14] - 48;
 682:src/sim900_800.c **** 		// }
 683:src/sim900_800.c **** 		if (!strncmp((char *)&buffUARTGSMrx2[0], (const char *)"+CMTI: \"SM\",", sizeof ("+CMTI: \"SM\","
 1876              		.loc 1 683 0
 1877 022c 2149     		ldr	r1, .L125+72	@ tmp260,
 1878 022e 104B     		ldr	r3, .L125+4	@ tmp261,
 1879 0230 0C22     		movs	r2, #12	@,
 1880 0232 1800     		movs	r0, r3	@, tmp261
ARM GAS  /tmp/cc16P66I.s 			page 47


 1881 0234 FFF7FEFF 		bl	strncmp	@
 1882 0238 031E     		subs	r3, r0, #0	@ D.7897,,
 1883 023a 06D1     		bne	.L122	@,
 684:src/sim900_800.c **** 		{
 685:src/sim900_800.c **** 			//TODO: modificar a dos bytes
 686:src/sim900_800.c **** 			GSMCantSMS = buffUARTGSMrx2[12] - 48;
 1884              		.loc 1 686 0
 1885 023c 0C4B     		ldr	r3, .L125+4	@ tmp262,
 1886 023e 1B7B     		ldrb	r3, [r3, #12]	@ tmp264,
 1887 0240 DBB2     		uxtb	r3, r3	@ D.7896, tmp264
 1888 0242 303B     		subs	r3, r3, #48	@ tmp265,
 1889 0244 DAB2     		uxtb	r2, r3	@ D.7898, tmp265
 1890 0246 1C4B     		ldr	r3, .L125+76	@ tmp266,
 1891 0248 1A70     		strb	r2, [r3]	@ tmp267, GSMCantSMS
 1892              	.L122:
 687:src/sim900_800.c **** 		}
 688:src/sim900_800.c **** 
 689:src/sim900_800.c **** 		if(!strncmp((const char *)&buffUARTGSMrx2[0], (const char *)"CLOSED", strlen((const char *)"CLOSE
 1893              		.loc 1 689 0
 1894 024a 1C49     		ldr	r1, .L125+80	@ tmp268,
 1895 024c 084B     		ldr	r3, .L125+4	@ tmp269,
 1896 024e 0622     		movs	r2, #6	@,
 1897 0250 1800     		movs	r0, r3	@, tmp269
 1898 0252 FFF7FEFF 		bl	strncmp	@
 1899 0256 031E     		subs	r3, r0, #0	@ D.7897,,
 1900 0258 02D1     		bne	.L123	@,
 690:src/sim900_800.c **** 		{
 691:src/sim900_800.c **** 			flagCloseIP = 1;
 1901              		.loc 1 691 0
 1902 025a 194B     		ldr	r3, .L125+84	@ tmp270,
 1903 025c 0122     		movs	r2, #1	@ tmp271,
 1904 025e 1A70     		strb	r2, [r3]	@ tmp272, flagCloseIP
 1905              	.L123:
 692:src/sim900_800.c **** 		}
 693:src/sim900_800.c **** 
 694:src/sim900_800.c **** 		PacketReadyUARTGSM = 0;
 1906              		.loc 1 694 0
 1907 0260 024B     		ldr	r3, .L125	@ tmp273,
 1908 0262 0022     		movs	r2, #0	@ tmp274,
 1909 0264 1A70     		strb	r2, [r3]	@ tmp275, PacketReadyUARTGSM
 1910              	.L124:
 695:src/sim900_800.c **** 	}
 696:src/sim900_800.c **** }
 1911              		.loc 1 696 0
 1912 0266 C046     		nop
 1913              		@ sp needed	@
 1914 0268 10BD     		pop	{r4, pc}
 1915              	.L126:
 1916 026a C046     		.align	2
 1917              	.L125:
 1918 026c 00000000 		.word	PacketReadyUARTGSM
 1919 0270 00000000 		.word	buffUARTGSMrx2
 1920 0274 00000000 		.word	GSMSendCommandFlag
 1921 0278 00000000 		.word	GSM_SENDOK
 1922 027c 24000000 		.word	.LC39
 1923 0280 28000000 		.word	.LC41
 1924 0284 30000000 		.word	.LC43
ARM GAS  /tmp/cc16P66I.s 			page 48


 1925 0288 38000000 		.word	.LC45
 1926 028c 3C000000 		.word	.LC47
 1927 0290 00000000 		.word	GSMConfigGPRSflag
 1928 0294 00000000 		.word	GSM_IPSTATE
 1929 0298 07000000 		.word	buffUARTGSMrx2+7
 1930 029c 00000000 		.word	GSMbuffStatus
 1931 02a0 00000000 		.word	GSMIPadd
 1932 02a4 44000000 		.word	.LC54
 1933 02a8 4C000000 		.word	.LC56
 1934 02ac 58000000 		.word	.LC58
 1935 02b0 64000000 		.word	.LC60
 1936 02b4 78000000 		.word	.LC62
 1937 02b8 00000000 		.word	GSMCantSMS
 1938 02bc 88000000 		.word	.LC65
 1939 02c0 00000000 		.word	flagCloseIP
 1940              		.cfi_endproc
 1941              	.LFE27:
 1942              		.size	GSMReceive, .-GSMReceive
 1943              		.section	.text.GSMSendCommand,"ax",%progbits
 1944              		.align	2
 1945              		.global	GSMSendCommand
 1946              		.code	16
 1947              		.thumb_func
 1948              		.type	GSMSendCommand, %function
 1949              	GSMSendCommand:
 1950              	.LFB28:
 697:src/sim900_800.c **** 
 698:src/sim900_800.c **** //-----------------------------------------------------//
 699:src/sim900_800.c **** //char GSMSendCommand (char *ptrCommand, unsigned char timeOut, unsigned char rta, char *ptrRta)
 700:src/sim900_800.c **** //----------------------------------------------------//
 701:src/sim900_800.c **** //ptrCommand: Comando a enviar.
 702:src/sim900_800.c **** //ptrRta: Respuesta al comando desde sim900.
 703:src/sim900_800.c **** //rta: 0: No espera rta. 1: Espera respuesta antes de OK.
 704:src/sim900_800.c **** //TO: time out. en ms
 705:src/sim900_800.c **** //----------------------------------------------------//
 706:src/sim900_800.c **** //Wait: 	1
 707:src/sim900_800.c **** //OK: 		2
 708:src/sim900_800.c **** //ERR:		3
 709:src/sim900_800.c **** //TO:
 710:src/sim900_800.c **** //NO OK:	4
 711:src/sim900_800.c **** //NO RTA: 	5
 712:src/sim900_800.c **** //----------------------------------------------------//
 713:src/sim900_800.c **** char GSMSendCommand (char *ptrCommand, unsigned short timeOut, unsigned char rta, char *ptrRta)
 714:src/sim900_800.c **** {
 1951              		.loc 1 714 0
 1952              		.cfi_startproc
 1953 0000 00B5     		push	{lr}	@
 1954              	.LCFI8:
 1955              		.cfi_def_cfa_offset 4
 1956              		.cfi_offset 14, -4
 1957 0002 85B0     		sub	sp, sp, #20	@,,
 1958              	.LCFI9:
 1959              		.cfi_def_cfa_offset 24
 1960 0004 0390     		str	r0, [sp, #12]	@ ptrCommand, ptrCommand
 1961 0006 0800     		movs	r0, r1	@ tmp120, timeOut
 1962 0008 1100     		movs	r1, r2	@ tmp123, rta
 1963 000a 0193     		str	r3, [sp, #4]	@ ptrRta, ptrRta
ARM GAS  /tmp/cc16P66I.s 			page 49


 1964 000c 0A23     		movs	r3, #10	@ tmp121,
 1965 000e 6B44     		add	r3, r3, sp	@ tmp121,
 1966 0010 021C     		adds	r2, r0, #0	@ tmp122, tmp120
 1967 0012 1A80     		strh	r2, [r3]	@ tmp122, timeOut
 1968 0014 0923     		movs	r3, #9	@ tmp124,
 1969 0016 6B44     		add	r3, r3, sp	@ tmp124,
 1970 0018 0A1C     		adds	r2, r1, #0	@ tmp125, tmp123
 1971 001a 1A70     		strb	r2, [r3]	@ tmp125, rta
 715:src/sim900_800.c **** 	switch(GSMSendCommandState)
 1972              		.loc 1 715 0
 1973 001c 374B     		ldr	r3, .L144	@ tmp126,
 1974 001e 1B78     		ldrb	r3, [r3]	@ D.7910, GSMSendCommandState
 1975 0020 012B     		cmp	r3, #1	@ D.7911,
 1976 0022 17D0     		beq	.L129	@,
 1977 0024 02DC     		bgt	.L130	@,
 1978 0026 002B     		cmp	r3, #0	@ D.7911,
 1979 0028 05D0     		beq	.L131	@,
 1980 002a 48E0     		b	.L128	@
 1981              	.L130:
 1982 002c 022B     		cmp	r3, #2	@ D.7911,
 1983 002e 28D0     		beq	.L132	@,
 1984 0030 032B     		cmp	r3, #3	@ D.7911,
 1985 0032 38D0     		beq	.L133	@,
 1986 0034 43E0     		b	.L128	@
 1987              	.L131:
 716:src/sim900_800.c **** 	{
 717:src/sim900_800.c **** 		case 0:
 718:src/sim900_800.c **** 			GSMSendCommandFlag = 0;
 1988              		.loc 1 718 0
 1989 0036 324B     		ldr	r3, .L144+4	@ tmp127,
 1990 0038 0022     		movs	r2, #0	@ tmp128,
 1991 003a 1A70     		strb	r2, [r3]	@ tmp129, GSMSendCommandFlag
 719:src/sim900_800.c **** 			GSMSendCommandTimeOut = timeOut;
 1992              		.loc 1 719 0
 1993 003c 314B     		ldr	r3, .L144+8	@ tmp130,
 1994 003e 0A22     		movs	r2, #10	@ tmp131,
 1995 0040 6A44     		add	r2, r2, sp	@ tmp131,
 1996 0042 1288     		ldrh	r2, [r2]	@ tmp132, timeOut
 1997 0044 1A80     		strh	r2, [r3]	@ tmp132, GSMSendCommandTimeOut
 720:src/sim900_800.c **** 			GSMSendCommandState++;
 1998              		.loc 1 720 0
 1999 0046 2D4B     		ldr	r3, .L144	@ tmp133,
 2000 0048 1B78     		ldrb	r3, [r3]	@ D.7910, GSMSendCommandState
 2001 004a 0133     		adds	r3, r3, #1	@ tmp134,
 2002 004c DAB2     		uxtb	r2, r3	@ D.7910, tmp134
 2003 004e 2B4B     		ldr	r3, .L144	@ tmp135,
 2004 0050 1A70     		strb	r2, [r3]	@ tmp136, GSMSendCommandState
 721:src/sim900_800.c **** 			break;
 2005              		.loc 1 721 0
 2006 0052 3BE0     		b	.L134	@
 2007              	.L129:
 722:src/sim900_800.c **** 
 723:src/sim900_800.c **** 		case 1:
 724:src/sim900_800.c **** 			UARTGSMSend(&ptrCommand[0]);
 2008              		.loc 1 724 0
 2009 0054 039B     		ldr	r3, [sp, #12]	@ tmp137, ptrCommand
 2010 0056 1800     		movs	r0, r3	@, tmp137
ARM GAS  /tmp/cc16P66I.s 			page 50


 2011 0058 FFF7FEFF 		bl	Usart1Send	@
 725:src/sim900_800.c **** 
 726:src/sim900_800.c **** 			if (rta)
 2012              		.loc 1 726 0
 2013 005c 0923     		movs	r3, #9	@ tmp138,
 2014 005e 6B44     		add	r3, r3, sp	@ tmp138,
 2015 0060 1B78     		ldrb	r3, [r3]	@ tmp139, rta
 2016 0062 002B     		cmp	r3, #0	@ tmp139,
 2017 0064 06D0     		beq	.L135	@,
 727:src/sim900_800.c **** 			{
 728:src/sim900_800.c **** 				GSMSendCommandState = 2;
 2018              		.loc 1 728 0
 2019 0066 254B     		ldr	r3, .L144	@ tmp140,
 2020 0068 0222     		movs	r2, #2	@ tmp141,
 2021 006a 1A70     		strb	r2, [r3]	@ tmp142, GSMSendCommandState
 729:src/sim900_800.c **** 				GSMSendCommandFlag = 1;
 2022              		.loc 1 729 0
 2023 006c 244B     		ldr	r3, .L144+4	@ tmp143,
 2024 006e 0122     		movs	r2, #1	@ tmp144,
 2025 0070 1A70     		strb	r2, [r3]	@ tmp145, GSMSendCommandFlag
 730:src/sim900_800.c **** 			}
 731:src/sim900_800.c **** 			else
 732:src/sim900_800.c **** 			{
 733:src/sim900_800.c **** 				GSMSendCommandState = 3;
 734:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 735:src/sim900_800.c **** 			}
 736:src/sim900_800.c **** 			break;
 2026              		.loc 1 736 0
 2027 0072 2BE0     		b	.L134	@
 2028              	.L135:
 733:src/sim900_800.c **** 				GSMSendCommandFlag = 3;
 2029              		.loc 1 733 0
 2030 0074 214B     		ldr	r3, .L144	@ tmp146,
 2031 0076 0322     		movs	r2, #3	@ tmp147,
 2032 0078 1A70     		strb	r2, [r3]	@ tmp148, GSMSendCommandState
 734:src/sim900_800.c **** 			}
 2033              		.loc 1 734 0
 2034 007a 214B     		ldr	r3, .L144+4	@ tmp149,
 2035 007c 0322     		movs	r2, #3	@ tmp150,
 2036 007e 1A70     		strb	r2, [r3]	@ tmp151, GSMSendCommandFlag
 2037              		.loc 1 736 0
 2038 0080 24E0     		b	.L134	@
 2039              	.L132:
 737:src/sim900_800.c **** 
 738:src/sim900_800.c **** 		case 2:
 739:src/sim900_800.c **** 			//Espera rta.
 740:src/sim900_800.c **** 			if (GSMSendCommandFlag == 2)
 2040              		.loc 1 740 0
 2041 0082 1F4B     		ldr	r3, .L144+4	@ tmp152,
 2042 0084 1B78     		ldrb	r3, [r3]	@ D.7910, GSMSendCommandFlag
 2043 0086 022B     		cmp	r3, #2	@ D.7910,
 2044 0088 1DD1     		bne	.L142	@,
 741:src/sim900_800.c **** 			{
 742:src/sim900_800.c **** 				//Rta obtenida.
 743:src/sim900_800.c **** 				strcpy((char *)ptrRta, (const char *)&buffUARTGSMrx2[0]);
 2045              		.loc 1 743 0
 2046 008a 1F4A     		ldr	r2, .L144+12	@ tmp153,
ARM GAS  /tmp/cc16P66I.s 			page 51


 2047 008c 019B     		ldr	r3, [sp, #4]	@ tmp154, ptrRta
 2048 008e 1100     		movs	r1, r2	@, tmp153
 2049 0090 1800     		movs	r0, r3	@, tmp154
 2050 0092 FFF7FEFF 		bl	strcpy	@
 744:src/sim900_800.c **** 				//OK pegado
 745:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 2051              		.loc 1 745 0
 2052 0096 1A4B     		ldr	r3, .L144+4	@ tmp155,
 2053 0098 0022     		movs	r2, #0	@ tmp156,
 2054 009a 1A70     		strb	r2, [r3]	@ tmp157, GSMSendCommandFlag
 746:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2055              		.loc 1 746 0
 2056 009c 174B     		ldr	r3, .L144	@ tmp158,
 2057 009e 0022     		movs	r2, #0	@ tmp159,
 2058 00a0 1A70     		strb	r2, [r3]	@ tmp160, GSMSendCommandState
 747:src/sim900_800.c **** 				return 2;
 2059              		.loc 1 747 0
 2060 00a2 0223     		movs	r3, #2	@ D.7910,
 2061 00a4 26E0     		b	.L138	@
 2062              	.L133:
 748:src/sim900_800.c **** 			}
 749:src/sim900_800.c **** 			break;
 750:src/sim900_800.c **** 
 751:src/sim900_800.c **** 		case 3:
 752:src/sim900_800.c **** 			//Espera OK.
 753:src/sim900_800.c **** 			if (GSMSendCommandFlag == 4)
 2063              		.loc 1 753 0
 2064 00a6 164B     		ldr	r3, .L144+4	@ tmp161,
 2065 00a8 1B78     		ldrb	r3, [r3]	@ D.7910, GSMSendCommandFlag
 2066 00aa 042B     		cmp	r3, #4	@ D.7910,
 2067 00ac 0DD1     		bne	.L143	@,
 754:src/sim900_800.c **** 			{
 755:src/sim900_800.c **** 				//OK recibido.
 756:src/sim900_800.c **** 				GSMSendCommandFlag = 0;
 2068              		.loc 1 756 0
 2069 00ae 144B     		ldr	r3, .L144+4	@ tmp162,
 2070 00b0 0022     		movs	r2, #0	@ tmp163,
 2071 00b2 1A70     		strb	r2, [r3]	@ tmp164, GSMSendCommandFlag
 757:src/sim900_800.c **** 				GSMSendCommandState = 0;
 2072              		.loc 1 757 0
 2073 00b4 114B     		ldr	r3, .L144	@ tmp165,
 2074 00b6 0022     		movs	r2, #0	@ tmp166,
 2075 00b8 1A70     		strb	r2, [r3]	@ tmp167, GSMSendCommandState
 758:src/sim900_800.c **** 				return 2;
 2076              		.loc 1 758 0
 2077 00ba 0223     		movs	r3, #2	@ D.7910,
 2078 00bc 1AE0     		b	.L138	@
 2079              	.L128:
 759:src/sim900_800.c **** 			}
 760:src/sim900_800.c **** 			break;
 761:src/sim900_800.c **** 
 762:src/sim900_800.c **** 		default:
 763:src/sim900_800.c **** 			GSMSendCommandState = 0;
 2080              		.loc 1 763 0
 2081 00be 0F4B     		ldr	r3, .L144	@ tmp168,
 2082 00c0 0022     		movs	r2, #0	@ tmp169,
 2083 00c2 1A70     		strb	r2, [r3]	@ tmp170, GSMSendCommandState
ARM GAS  /tmp/cc16P66I.s 			page 52


 764:src/sim900_800.c **** 			break;
 2084              		.loc 1 764 0
 2085 00c4 02E0     		b	.L134	@
 2086              	.L142:
 749:src/sim900_800.c **** 
 2087              		.loc 1 749 0
 2088 00c6 C046     		nop
 2089 00c8 00E0     		b	.L134	@
 2090              	.L143:
 760:src/sim900_800.c **** 
 2091              		.loc 1 760 0
 2092 00ca C046     		nop
 2093              	.L134:
 765:src/sim900_800.c **** 	}
 766:src/sim900_800.c **** 
 767:src/sim900_800.c **** 	if (GSMSendCommandFlag == 5)	//"ERROR"
 2094              		.loc 1 767 0
 2095 00cc 0C4B     		ldr	r3, .L144+4	@ tmp171,
 2096 00ce 1B78     		ldrb	r3, [r3]	@ D.7910, GSMSendCommandFlag
 2097 00d0 052B     		cmp	r3, #5	@ D.7910,
 2098 00d2 04D1     		bne	.L140	@,
 768:src/sim900_800.c **** 	{
 769:src/sim900_800.c **** 		GSMSendCommandState = 0;
 2099              		.loc 1 769 0
 2100 00d4 094B     		ldr	r3, .L144	@ tmp172,
 2101 00d6 0022     		movs	r2, #0	@ tmp173,
 2102 00d8 1A70     		strb	r2, [r3]	@ tmp174, GSMSendCommandState
 770:src/sim900_800.c **** 		return 3;
 2103              		.loc 1 770 0
 2104 00da 0323     		movs	r3, #3	@ D.7910,
 2105 00dc 0AE0     		b	.L138	@
 2106              	.L140:
 771:src/sim900_800.c **** 	}
 772:src/sim900_800.c **** 
 773:src/sim900_800.c **** 	if (!GSMSendCommandTimeOut)
 2107              		.loc 1 773 0
 2108 00de 094B     		ldr	r3, .L144+8	@ tmp175,
 2109 00e0 1B88     		ldrh	r3, [r3]	@ tmp176, GSMSendCommandTimeOut
 2110 00e2 9BB2     		uxth	r3, r3	@ D.7912, tmp176
 2111 00e4 002B     		cmp	r3, #0	@ D.7912,
 2112 00e6 04D1     		bne	.L141	@,
 774:src/sim900_800.c **** 	{
 775:src/sim900_800.c **** 		GSMSendCommandState = 0;
 2113              		.loc 1 775 0
 2114 00e8 044B     		ldr	r3, .L144	@ tmp177,
 2115 00ea 0022     		movs	r2, #0	@ tmp178,
 2116 00ec 1A70     		strb	r2, [r3]	@ tmp179, GSMSendCommandState
 776:src/sim900_800.c **** 		return 4;
 2117              		.loc 1 776 0
 2118 00ee 0423     		movs	r3, #4	@ D.7910,
 2119 00f0 00E0     		b	.L138	@
 2120              	.L141:
 777:src/sim900_800.c **** 	}
 778:src/sim900_800.c **** 
 779:src/sim900_800.c **** 	return 1;
 2121              		.loc 1 779 0
 2122 00f2 0123     		movs	r3, #1	@ D.7910,
ARM GAS  /tmp/cc16P66I.s 			page 53


 2123              	.L138:
 780:src/sim900_800.c **** }
 2124              		.loc 1 780 0
 2125 00f4 1800     		movs	r0, r3	@, <retval>
 2126 00f6 05B0     		add	sp, sp, #20	@,,
 2127              		@ sp needed	@
 2128 00f8 00BD     		pop	{pc}
 2129              	.L145:
 2130 00fa C046     		.align	2
 2131              	.L144:
 2132 00fc 00000000 		.word	GSMSendCommandState
 2133 0100 00000000 		.word	GSMSendCommandFlag
 2134 0104 00000000 		.word	GSMSendCommandTimeOut
 2135 0108 00000000 		.word	buffUARTGSMrx2
 2136              		.cfi_endproc
 2137              	.LFE28:
 2138              		.size	GSMSendCommand, .-GSMSendCommand
 2139              		.section	.rodata
 2140 008f 00       		.align	2
 2141              	.LC77:
 2142 0090 41540D0A 		.ascii	"AT\015\012\000"
 2142      00
 2143 0095 000000   		.align	2
 2144              	.LC79:
 2145 0098 41544530 		.ascii	"ATE0\015\012\000"
 2145      0D0A00
 2146 009f 00       		.align	2
 2147              	.LC81:
 2148 00a0 41542B43 		.ascii	"AT+CMGF=1\015\012\000"
 2148      4D47463D 
 2148      310D0A00 
 2149              		.align	2
 2150              	.LC83:
 2151 00ac 41542B43 		.ascii	"AT+CSCS=\"GSM\"\015\012\000"
 2151      5343533D 
 2151      2247534D 
 2151      220D0A00 
 2152              		.align	2
 2153              	.LC85:
 2154 00bc 41542B43 		.ascii	"AT+CSMP=49,255,0,241\015\012\000"
 2154      534D503D 
 2154      34392C32 
 2154      35352C30 
 2154      2C323431 
 2155 00d3 00       		.align	2
 2156              	.LC87:
 2157 00d4 41542657 		.ascii	"AT&W\015\012\000"
 2157      0D0A00
 2158              		.section	.text.GSM_Config,"ax",%progbits
 2159              		.align	2
 2160              		.global	GSM_Config
 2161              		.code	16
 2162              		.thumb_func
 2163              		.type	GSM_Config, %function
 2164              	GSM_Config:
 2165              	.LFB29:
 781:src/sim900_800.c **** 
ARM GAS  /tmp/cc16P66I.s 			page 54


 782:src/sim900_800.c **** //---------------------------------------------------------------//
 783:src/sim900_800.c **** //Configuracion del modulo GSM.
 784:src/sim900_800.c **** //---------------------------------------------------------------//
 785:src/sim900_800.c **** //
 786:src/sim900_800.c **** //Wait: 	0
 787:src/sim900_800.c **** //OK:		1
 788:src/sim900_800.c **** //ERR:	2
 789:src/sim900_800.c **** //TO:		3
 790:src/sim900_800.c **** //---------------------------------------------------------------//
 791:src/sim900_800.c **** char GSM_Config(unsigned short timeOut)
 792:src/sim900_800.c **** {
 2166              		.loc 1 792 0
 2167              		.cfi_startproc
 2168 0000 10B5     		push	{r4, lr}	@
 2169              	.LCFI10:
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 4, -8
 2172              		.cfi_offset 14, -4
 2173 0002 84B0     		sub	sp, sp, #16	@,,
 2174              	.LCFI11:
 2175              		.cfi_def_cfa_offset 24
 2176 0004 0200     		movs	r2, r0	@ tmp151, timeOut
 2177 0006 6B46     		mov	r3, sp	@ tmp335,
 2178 0008 0633     		adds	r3, r3, #6	@ tmp152,
 2179 000a 1A80     		strh	r2, [r3]	@ tmp153, timeOut
 793:src/sim900_800.c **** 	unsigned char i;
 794:src/sim900_800.c **** 
 795:src/sim900_800.c **** 	switch(GSMConfigState)
 2180              		.loc 1 795 0
 2181 000c AE4B     		ldr	r3, .L190	@ tmp154,
 2182 000e 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2183 0010 092B     		cmp	r3, #9	@ D.7915,
 2184 0012 00D9     		bls	.LCB1664	@
 2185 0014 34E1     		b	.L147	@long jump	@
 2186              	.LCB1664:
 2187 0016 9A00     		lsls	r2, r3, #2	@ tmp155, D.7915,
 2188 0018 AC4B     		ldr	r3, .L190+4	@ tmp157,
 2189 001a D318     		adds	r3, r2, r3	@ tmp156, tmp155, tmp157
 2190 001c 1B68     		ldr	r3, [r3]	@ tmp158,
 2191 001e 9F46     		mov	pc, r3	@ tmp158
 2192              		.section	.rodata.GSM_Config,"a",%progbits
 2193              		.align	2
 2194              	.L149:
 2195 0000 20000000 		.word	.L148
 2196 0004 48000000 		.word	.L150
 2197 0008 BE000000 		.word	.L151
 2198 000c E2000000 		.word	.L152
 2199 0010 20010000 		.word	.L153
 2200 0014 34010000 		.word	.L154
 2201 0018 78010000 		.word	.L155
 2202 001c BC010000 		.word	.L156
 2203 0020 FE010000 		.word	.L157
 2204 0024 40020000 		.word	.L158
 2205              		.section	.text.GSM_Config
 2206              	.L148:
 796:src/sim900_800.c **** 	{
 797:src/sim900_800.c **** 		case 0:
ARM GAS  /tmp/cc16P66I.s 			page 55


 798:src/sim900_800.c **** 			GSM_NRESET_ON;
 2207              		.loc 1 798 0
 2208              		.syntax divided
 2209              	@ 798 "src/sim900_800.c" 1
 2210 0020 C046     		nop 
 2211              		
 2212              	@ 0 "" 2
 799:src/sim900_800.c **** 			GSM_PWRKEY_ON;
 2213              		.loc 1 799 0
 2214              		.thumb
 2215              		.syntax unified
 2216 0022 9023     		movs	r3, #144	@ tmp334,
 2217 0024 DB05     		lsls	r3, r3, #23	@ D.7917, tmp334,
 2218 0026 8022     		movs	r2, #128	@ tmp159,
 2219 0028 9A61     		str	r2, [r3, #24]	@ tmp159, _69->BSRR
 800:src/sim900_800.c **** 			GSMConfigTime = 0;
 2220              		.loc 1 800 0
 2221 002a A94B     		ldr	r3, .L190+8	@ tmp160,
 2222 002c 0022     		movs	r2, #0	@ tmp161,
 2223 002e 1A80     		strh	r2, [r3]	@ tmp162, GSMConfigTime
 801:src/sim900_800.c **** 			GSMConfigTimeOut = timeOut;
 2224              		.loc 1 801 0
 2225 0030 A84B     		ldr	r3, .L190+12	@ tmp163,
 2226 0032 6A46     		mov	r2, sp	@ tmp336,
 2227 0034 0632     		adds	r2, r2, #6	@ tmp164,
 2228 0036 1288     		ldrh	r2, [r2]	@ tmp165, timeOut
 2229 0038 1A80     		strh	r2, [r3]	@ tmp165, GSMConfigTimeOut
 802:src/sim900_800.c **** 			GSMConfigState++;
 2230              		.loc 1 802 0
 2231 003a A34B     		ldr	r3, .L190	@ tmp166,
 2232 003c 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2233 003e 0133     		adds	r3, r3, #1	@ tmp167,
 2234 0040 DAB2     		uxtb	r2, r3	@ D.7914, tmp167
 2235 0042 A14B     		ldr	r3, .L190	@ tmp168,
 2236 0044 1A70     		strb	r2, [r3]	@ tmp169, GSMConfigState
 803:src/sim900_800.c **** 			break;
 2237              		.loc 1 803 0
 2238 0046 30E1     		b	.L159	@
 2239              	.L150:
 804:src/sim900_800.c **** 
 805:src/sim900_800.c **** 		case 1:
 806:src/sim900_800.c **** 
 807:src/sim900_800.c **** 			if (GSM_STATUS)
 2240              		.loc 1 807 0
 2241 0048 9023     		movs	r3, #144	@ tmp333,
 2242 004a DB05     		lsls	r3, r3, #23	@ D.7917, tmp333,
 2243 004c 1B8A     		ldrh	r3, [r3, #16]	@ tmp171,
 2244 004e 9BB2     		uxth	r3, r3	@ D.7916, tmp171
 2245 0050 1A00     		movs	r2, r3	@ D.7915, D.7916
 2246 0052 2023     		movs	r3, #32	@ tmp172,
 2247 0054 1340     		ands	r3, r2	@ D.7915, D.7915
 2248 0056 2AD0     		beq	.L160	@,
 808:src/sim900_800.c **** 			{
 809:src/sim900_800.c **** 				//i = GSMSendCommand ("AT\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 810:src/sim900_800.c **** 				i = GSMSendCommand ("AT\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2249              		.loc 1 810 0
 2250 0058 9E4B     		ldr	r3, .L190+12	@ tmp173,
ARM GAS  /tmp/cc16P66I.s 			page 56


 2251 005a 1B88     		ldrh	r3, [r3]	@ tmp174, GSMConfigTimeOut
 2252 005c 99B2     		uxth	r1, r3	@ D.7916, tmp174
 2253 005e 0F24     		movs	r4, #15	@ tmp175,
 2254 0060 6C44     		add	r4, r4, sp	@ tmp175,
 2255 0062 9D4B     		ldr	r3, .L190+16	@ tmp176,
 2256 0064 9D48     		ldr	r0, .L190+20	@ tmp177,
 2257 0066 0022     		movs	r2, #0	@,
 2258 0068 FFF7FEFF 		bl	GSMSendCommand	@
 2259 006c 0300     		movs	r3, r0	@ tmp178,
 2260 006e 2370     		strb	r3, [r4]	@ tmp180, i
 811:src/sim900_800.c **** 
 812:src/sim900_800.c **** 				if ((i == 2) || (i == 3))
 2261              		.loc 1 812 0
 2262 0070 0F23     		movs	r3, #15	@ tmp181,
 2263 0072 6B44     		add	r3, r3, sp	@ tmp181,
 2264 0074 1B78     		ldrb	r3, [r3]	@ tmp182, i
 2265 0076 022B     		cmp	r3, #2	@ tmp182,
 2266 0078 04D0     		beq	.L161	@,
 2267              		.loc 1 812 0 is_stmt 0 discriminator 1
 2268 007a 0F23     		movs	r3, #15	@ tmp183,
 2269 007c 6B44     		add	r3, r3, sp	@ tmp183,
 2270 007e 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2271 0080 032B     		cmp	r3, #3	@ tmp184,
 2272 0082 06D1     		bne	.L162	@,
 2273              	.L161:
 813:src/sim900_800.c **** 				{
 814:src/sim900_800.c **** 					GSMConfigState += 4;
 2274              		.loc 1 814 0 is_stmt 1
 2275 0084 904B     		ldr	r3, .L190	@ tmp185,
 2276 0086 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2277 0088 0433     		adds	r3, r3, #4	@ tmp186,
 2278 008a DAB2     		uxtb	r2, r3	@ D.7914, tmp186
 2279 008c 8E4B     		ldr	r3, .L190	@ tmp187,
 2280 008e 1A70     		strb	r2, [r3]	@ tmp188, GSMConfigState
 815:src/sim900_800.c **** 					GSM_NRESET_ON;
 2281              		.loc 1 815 0
 2282              		.syntax divided
 2283              	@ 815 "src/sim900_800.c" 1
 2284 0090 C046     		nop 
 2285              		
 2286              	@ 0 "" 2
 2287              		.thumb
 2288              		.syntax unified
 2289              	.L162:
 816:src/sim900_800.c **** 				}
 817:src/sim900_800.c **** 
 818:src/sim900_800.c **** 				if (i == 4)
 2290              		.loc 1 818 0
 2291 0092 0F23     		movs	r3, #15	@ tmp189,
 2292 0094 6B44     		add	r3, r3, sp	@ tmp189,
 2293 0096 1B78     		ldrb	r3, [r3]	@ tmp190, i
 2294 0098 042B     		cmp	r3, #4	@ tmp190,
 2295 009a 00D0     		beq	.LCB1743	@
 2296 009c F4E0     		b	.L181	@long jump	@
 2297              	.LCB1743:
 819:src/sim900_800.c **** 				{
 820:src/sim900_800.c **** 					GSMConfigState += 1;
ARM GAS  /tmp/cc16P66I.s 			page 57


 2298              		.loc 1 820 0
 2299 009e 8A4B     		ldr	r3, .L190	@ tmp191,
 2300 00a0 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2301 00a2 0133     		adds	r3, r3, #1	@ tmp192,
 2302 00a4 DAB2     		uxtb	r2, r3	@ D.7914, tmp192
 2303 00a6 884B     		ldr	r3, .L190	@ tmp193,
 2304 00a8 1A70     		strb	r2, [r3]	@ tmp194, GSMConfigState
 821:src/sim900_800.c **** 					GSM_NRESET_ON;
 2305              		.loc 1 821 0
 2306              		.syntax divided
 2307              	@ 821 "src/sim900_800.c" 1
 2308 00aa C046     		nop 
 2309              		
 2310              	@ 0 "" 2
 822:src/sim900_800.c **** 				}
 823:src/sim900_800.c **** 
 824:src/sim900_800.c **** 			}
 825:src/sim900_800.c **** 			else
 826:src/sim900_800.c **** 			{
 827:src/sim900_800.c **** 				GSMConfigState += 2;
 828:src/sim900_800.c **** 				GSM_NRESET_ON;
 829:src/sim900_800.c **** 			}
 830:src/sim900_800.c **** 			break;
 2311              		.loc 1 830 0
 2312              		.thumb
 2313              		.syntax unified
 2314 00ac ECE0     		b	.L181	@
 2315              	.L160:
 827:src/sim900_800.c **** 				GSM_NRESET_ON;
 2316              		.loc 1 827 0
 2317 00ae 864B     		ldr	r3, .L190	@ tmp195,
 2318 00b0 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2319 00b2 0233     		adds	r3, r3, #2	@ tmp196,
 2320 00b4 DAB2     		uxtb	r2, r3	@ D.7914, tmp196
 2321 00b6 844B     		ldr	r3, .L190	@ tmp197,
 2322 00b8 1A70     		strb	r2, [r3]	@ tmp198, GSMConfigState
 828:src/sim900_800.c **** 			}
 2323              		.loc 1 828 0
 2324              		.syntax divided
 2325              	@ 828 "src/sim900_800.c" 1
 2326 00ba C046     		nop 
 2327              		
 2328              	@ 0 "" 2
 2329              		.loc 1 830 0
 2330              		.thumb
 2331              		.syntax unified
 2332 00bc E4E0     		b	.L181	@
 2333              	.L151:
 831:src/sim900_800.c **** 
 832:src/sim900_800.c **** 		case 2:
 833:src/sim900_800.c **** 			//Reinicio del modulo.
 834:src/sim900_800.c **** 			GSM_NRESET_OFF;
 2334              		.loc 1 834 0
 2335              		.syntax divided
 2336              	@ 834 "src/sim900_800.c" 1
 2337 00be C046     		nop 
 2338              		
ARM GAS  /tmp/cc16P66I.s 			page 58


 2339              	@ 0 "" 2
 835:src/sim900_800.c **** 			if(!GSM_STATUS)
 2340              		.loc 1 835 0
 2341              		.thumb
 2342              		.syntax unified
 2343 00c0 9023     		movs	r3, #144	@ tmp332,
 2344 00c2 DB05     		lsls	r3, r3, #23	@ D.7917, tmp332,
 2345 00c4 1B8A     		ldrh	r3, [r3, #16]	@ tmp200,
 2346 00c6 9BB2     		uxth	r3, r3	@ D.7916, tmp200
 2347 00c8 1A00     		movs	r2, r3	@ D.7915, D.7916
 2348 00ca 2023     		movs	r3, #32	@ tmp201,
 2349 00cc 1340     		ands	r3, r2	@ D.7915, D.7915
 2350 00ce 00D0     		beq	.LCB1775	@
 2351 00d0 DCE0     		b	.L182	@long jump	@
 2352              	.LCB1775:
 836:src/sim900_800.c **** 			{
 837:src/sim900_800.c **** 				GSMConfigState++;
 2353              		.loc 1 837 0
 2354 00d2 7D4B     		ldr	r3, .L190	@ tmp202,
 2355 00d4 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2356 00d6 0133     		adds	r3, r3, #1	@ tmp203,
 2357 00d8 DAB2     		uxtb	r2, r3	@ D.7914, tmp203
 2358 00da 7B4B     		ldr	r3, .L190	@ tmp204,
 2359 00dc 1A70     		strb	r2, [r3]	@ tmp205, GSMConfigState
 838:src/sim900_800.c **** 				GSM_NRESET_ON;
 2360              		.loc 1 838 0
 2361              		.syntax divided
 2362              	@ 838 "src/sim900_800.c" 1
 2363 00de C046     		nop 
 2364              		
 2365              	@ 0 "" 2
 839:src/sim900_800.c **** 			}
 840:src/sim900_800.c **** 			break;
 2366              		.loc 1 840 0
 2367              		.thumb
 2368              		.syntax unified
 2369 00e0 D4E0     		b	.L182	@
 2370              	.L152:
 841:src/sim900_800.c **** 
 842:src/sim900_800.c **** 		case 3:
 843:src/sim900_800.c **** 
 844:src/sim900_800.c **** 			//Encendido del modulo.
 845:src/sim900_800.c **** 			i = GSM_Start();
 2371              		.loc 1 845 0
 2372 00e2 0F24     		movs	r4, #15	@ tmp206,
 2373 00e4 6C44     		add	r4, r4, sp	@ tmp206,
 2374 00e6 FFF7FEFF 		bl	GSM_Start	@
 2375 00ea 0300     		movs	r3, r0	@ tmp207,
 2376 00ec 2370     		strb	r3, [r4]	@ tmp209, i
 846:src/sim900_800.c **** 
 847:src/sim900_800.c **** 			if (i == 2)
 2377              		.loc 1 847 0
 2378 00ee 0F23     		movs	r3, #15	@ tmp210,
 2379 00f0 6B44     		add	r3, r3, sp	@ tmp210,
 2380 00f2 1B78     		ldrb	r3, [r3]	@ tmp211, i
 2381 00f4 022B     		cmp	r3, #2	@ tmp211,
 2382 00f6 08D1     		bne	.L166	@,
ARM GAS  /tmp/cc16P66I.s 			page 59


 848:src/sim900_800.c **** 			{
 849:src/sim900_800.c **** 				GSMConfigState++;
 2383              		.loc 1 849 0
 2384 00f8 734B     		ldr	r3, .L190	@ tmp212,
 2385 00fa 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2386 00fc 0133     		adds	r3, r3, #1	@ tmp213,
 2387 00fe DAB2     		uxtb	r2, r3	@ D.7914, tmp213
 2388 0100 714B     		ldr	r3, .L190	@ tmp214,
 2389 0102 1A70     		strb	r2, [r3]	@ tmp215, GSMConfigState
 850:src/sim900_800.c **** 				GSMConfigTime = 20;
 2390              		.loc 1 850 0
 2391 0104 724B     		ldr	r3, .L190+8	@ tmp216,
 2392 0106 1422     		movs	r2, #20	@ tmp217,
 2393 0108 1A80     		strh	r2, [r3]	@ tmp218, GSMConfigTime
 2394              	.L166:
 851:src/sim900_800.c **** 			}
 852:src/sim900_800.c **** 
 853:src/sim900_800.c **** 			if (i == 4)
 2395              		.loc 1 853 0
 2396 010a 0F23     		movs	r3, #15	@ tmp219,
 2397 010c 6B44     		add	r3, r3, sp	@ tmp219,
 2398 010e 1B78     		ldrb	r3, [r3]	@ tmp220, i
 2399 0110 042B     		cmp	r3, #4	@ tmp220,
 2400 0112 00D0     		beq	.LCB1812	@
 2401 0114 BCE0     		b	.L183	@long jump	@
 2402              	.LCB1812:
 854:src/sim900_800.c **** 			{
 855:src/sim900_800.c **** 				GSMConfigState = 1;
 2403              		.loc 1 855 0
 2404 0116 6C4B     		ldr	r3, .L190	@ tmp221,
 2405 0118 0122     		movs	r2, #1	@ tmp222,
 2406 011a 1A70     		strb	r2, [r3]	@ tmp223, GSMConfigState
 856:src/sim900_800.c **** 				return 2;
 2407              		.loc 1 856 0
 2408 011c 0223     		movs	r3, #2	@ D.7914,
 2409 011e CFE0     		b	.L168	@
 2410              	.L153:
 857:src/sim900_800.c **** 			}
 858:src/sim900_800.c **** 			break;
 859:src/sim900_800.c **** 
 860:src/sim900_800.c **** 		case 4:
 861:src/sim900_800.c **** 
 862:src/sim900_800.c **** 			if (GSMConfigTime == 0)
 2411              		.loc 1 862 0
 2412 0120 6B4B     		ldr	r3, .L190+8	@ tmp224,
 2413 0122 1B88     		ldrh	r3, [r3]	@ tmp225, GSMConfigTime
 2414 0124 9BB2     		uxth	r3, r3	@ D.7916, tmp225
 2415 0126 002B     		cmp	r3, #0	@ D.7916,
 2416 0128 00D0     		beq	.LCB1825	@
 2417 012a B3E0     		b	.L184	@long jump	@
 2418              	.LCB1825:
 863:src/sim900_800.c **** 				GSMConfigState = 1;
 2419              		.loc 1 863 0
 2420 012c 664B     		ldr	r3, .L190	@ tmp226,
 2421 012e 0122     		movs	r2, #1	@ tmp227,
 2422 0130 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigState
 864:src/sim900_800.c **** 			break;
ARM GAS  /tmp/cc16P66I.s 			page 60


 2423              		.loc 1 864 0
 2424 0132 AFE0     		b	.L184	@
 2425              	.L154:
 865:src/sim900_800.c **** 
 866:src/sim900_800.c **** 		case 5:
 867:src/sim900_800.c **** 
 868:src/sim900_800.c **** 			//Comandos para configurar.
 869:src/sim900_800.c **** 			//ATE0.
 870:src/sim900_800.c **** 			//i = GSMSendCommand ("ATE0\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 871:src/sim900_800.c **** 			i = GSMSendCommand ("ATE0\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2426              		.loc 1 871 0
 2427 0134 674B     		ldr	r3, .L190+12	@ tmp229,
 2428 0136 1B88     		ldrh	r3, [r3]	@ tmp230, GSMConfigTimeOut
 2429 0138 99B2     		uxth	r1, r3	@ D.7916, tmp230
 2430 013a 0F24     		movs	r4, #15	@ tmp231,
 2431 013c 6C44     		add	r4, r4, sp	@ tmp231,
 2432 013e 664B     		ldr	r3, .L190+16	@ tmp232,
 2433 0140 6748     		ldr	r0, .L190+24	@ tmp233,
 2434 0142 0022     		movs	r2, #0	@,
 2435 0144 FFF7FEFF 		bl	GSMSendCommand	@
 2436 0148 0300     		movs	r3, r0	@ tmp234,
 2437 014a 2370     		strb	r3, [r4]	@ tmp236, i
 872:src/sim900_800.c **** 
 873:src/sim900_800.c **** 			if (i == 2)
 2438              		.loc 1 873 0
 2439 014c 0F23     		movs	r3, #15	@ tmp237,
 2440 014e 6B44     		add	r3, r3, sp	@ tmp237,
 2441 0150 1B78     		ldrb	r3, [r3]	@ tmp238, i
 2442 0152 022B     		cmp	r3, #2	@ tmp238,
 2443 0154 05D1     		bne	.L170	@,
 874:src/sim900_800.c **** 			{
 875:src/sim900_800.c **** 				GSMConfigState++;
 2444              		.loc 1 875 0
 2445 0156 5C4B     		ldr	r3, .L190	@ tmp239,
 2446 0158 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2447 015a 0133     		adds	r3, r3, #1	@ tmp240,
 2448 015c DAB2     		uxtb	r2, r3	@ D.7914, tmp240
 2449 015e 5A4B     		ldr	r3, .L190	@ tmp241,
 2450 0160 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigState
 2451              	.L170:
 876:src/sim900_800.c **** 			}
 877:src/sim900_800.c **** 			if (i > 2)
 2452              		.loc 1 877 0
 2453 0162 0F23     		movs	r3, #15	@ tmp243,
 2454 0164 6B44     		add	r3, r3, sp	@ tmp243,
 2455 0166 1B78     		ldrb	r3, [r3]	@ tmp244, i
 2456 0168 022B     		cmp	r3, #2	@ tmp244,
 2457 016a 00D8     		bhi	.LCB1861	@
 2458 016c 94E0     		b	.L185	@long jump	@
 2459              	.LCB1861:
 878:src/sim900_800.c **** 			{
 879:src/sim900_800.c **** 				GSMConfigState = 1;
 2460              		.loc 1 879 0
 2461 016e 564B     		ldr	r3, .L190	@ tmp245,
 2462 0170 0122     		movs	r2, #1	@ tmp246,
 2463 0172 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigState
 880:src/sim900_800.c **** 				return 2;
ARM GAS  /tmp/cc16P66I.s 			page 61


 2464              		.loc 1 880 0
 2465 0174 0223     		movs	r3, #2	@ D.7914,
 2466 0176 A3E0     		b	.L168	@
 2467              	.L155:
 881:src/sim900_800.c **** 			}
 882:src/sim900_800.c **** 
 883:src/sim900_800.c **** 			break;
 884:src/sim900_800.c **** 
 885:src/sim900_800.c **** 		case 6:
 886:src/sim900_800.c **** 			//AT+CMGF=1
 887:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CMGF=1\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 888:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CMGF=1\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2468              		.loc 1 888 0
 2469 0178 564B     		ldr	r3, .L190+12	@ tmp248,
 2470 017a 1B88     		ldrh	r3, [r3]	@ tmp249, GSMConfigTimeOut
 2471 017c 99B2     		uxth	r1, r3	@ D.7916, tmp249
 2472 017e 0F24     		movs	r4, #15	@ tmp250,
 2473 0180 6C44     		add	r4, r4, sp	@ tmp250,
 2474 0182 554B     		ldr	r3, .L190+16	@ tmp251,
 2475 0184 5748     		ldr	r0, .L190+28	@ tmp252,
 2476 0186 0022     		movs	r2, #0	@,
 2477 0188 FFF7FEFF 		bl	GSMSendCommand	@
 2478 018c 0300     		movs	r3, r0	@ tmp253,
 2479 018e 2370     		strb	r3, [r4]	@ tmp255, i
 889:src/sim900_800.c **** 
 890:src/sim900_800.c **** 			if (i == 2)
 2480              		.loc 1 890 0
 2481 0190 0F23     		movs	r3, #15	@ tmp256,
 2482 0192 6B44     		add	r3, r3, sp	@ tmp256,
 2483 0194 1B78     		ldrb	r3, [r3]	@ tmp257, i
 2484 0196 022B     		cmp	r3, #2	@ tmp257,
 2485 0198 05D1     		bne	.L172	@,
 891:src/sim900_800.c **** 			{
 892:src/sim900_800.c **** 				GSMConfigState++;
 2486              		.loc 1 892 0
 2487 019a 4B4B     		ldr	r3, .L190	@ tmp258,
 2488 019c 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2489 019e 0133     		adds	r3, r3, #1	@ tmp259,
 2490 01a0 DAB2     		uxtb	r2, r3	@ D.7914, tmp259
 2491 01a2 494B     		ldr	r3, .L190	@ tmp260,
 2492 01a4 1A70     		strb	r2, [r3]	@ tmp261, GSMConfigState
 2493              	.L172:
 893:src/sim900_800.c **** 			}
 894:src/sim900_800.c **** 			if (i > 2)
 2494              		.loc 1 894 0
 2495 01a6 0F23     		movs	r3, #15	@ tmp262,
 2496 01a8 6B44     		add	r3, r3, sp	@ tmp262,
 2497 01aa 1B78     		ldrb	r3, [r3]	@ tmp263, i
 2498 01ac 022B     		cmp	r3, #2	@ tmp263,
 2499 01ae 00D8     		bhi	.LCB1898	@
 2500 01b0 74E0     		b	.L186	@long jump	@
 2501              	.LCB1898:
 895:src/sim900_800.c **** 			{
 896:src/sim900_800.c **** 				GSMConfigState = 1;
 2502              		.loc 1 896 0
 2503 01b2 454B     		ldr	r3, .L190	@ tmp264,
 2504 01b4 0122     		movs	r2, #1	@ tmp265,
ARM GAS  /tmp/cc16P66I.s 			page 62


 2505 01b6 1A70     		strb	r2, [r3]	@ tmp266, GSMConfigState
 897:src/sim900_800.c **** 				return 2;
 2506              		.loc 1 897 0
 2507 01b8 0223     		movs	r3, #2	@ D.7914,
 2508 01ba 81E0     		b	.L168	@
 2509              	.L156:
 898:src/sim900_800.c **** 			}
 899:src/sim900_800.c **** 			break;
 900:src/sim900_800.c **** 		case 7:
 901:src/sim900_800.c **** 			//AT+CSCS="GSM"
 902:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 903:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSCS=\"GSM\"\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2510              		.loc 1 903 0
 2511 01bc 454B     		ldr	r3, .L190+12	@ tmp267,
 2512 01be 1B88     		ldrh	r3, [r3]	@ tmp268, GSMConfigTimeOut
 2513 01c0 99B2     		uxth	r1, r3	@ D.7916, tmp268
 2514 01c2 0F24     		movs	r4, #15	@ tmp269,
 2515 01c4 6C44     		add	r4, r4, sp	@ tmp269,
 2516 01c6 444B     		ldr	r3, .L190+16	@ tmp270,
 2517 01c8 4748     		ldr	r0, .L190+32	@ tmp271,
 2518 01ca 0022     		movs	r2, #0	@,
 2519 01cc FFF7FEFF 		bl	GSMSendCommand	@
 2520 01d0 0300     		movs	r3, r0	@ tmp272,
 2521 01d2 2370     		strb	r3, [r4]	@ tmp274, i
 904:src/sim900_800.c **** 
 905:src/sim900_800.c **** 			if (i == 2)
 2522              		.loc 1 905 0
 2523 01d4 0F23     		movs	r3, #15	@ tmp275,
 2524 01d6 6B44     		add	r3, r3, sp	@ tmp275,
 2525 01d8 1B78     		ldrb	r3, [r3]	@ tmp276, i
 2526 01da 022B     		cmp	r3, #2	@ tmp276,
 2527 01dc 05D1     		bne	.L174	@,
 906:src/sim900_800.c **** 			{
 907:src/sim900_800.c **** 				GSMConfigState++;
 2528              		.loc 1 907 0
 2529 01de 3A4B     		ldr	r3, .L190	@ tmp277,
 2530 01e0 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2531 01e2 0133     		adds	r3, r3, #1	@ tmp278,
 2532 01e4 DAB2     		uxtb	r2, r3	@ D.7914, tmp278
 2533 01e6 384B     		ldr	r3, .L190	@ tmp279,
 2534 01e8 1A70     		strb	r2, [r3]	@ tmp280, GSMConfigState
 2535              	.L174:
 908:src/sim900_800.c **** 			}
 909:src/sim900_800.c **** 			if (i > 2)
 2536              		.loc 1 909 0
 2537 01ea 0F23     		movs	r3, #15	@ tmp281,
 2538 01ec 6B44     		add	r3, r3, sp	@ tmp281,
 2539 01ee 1B78     		ldrb	r3, [r3]	@ tmp282, i
 2540 01f0 022B     		cmp	r3, #2	@ tmp282,
 2541 01f2 55D9     		bls	.L187	@,
 910:src/sim900_800.c **** 			{
 911:src/sim900_800.c **** 				GSMConfigState = 1;
 2542              		.loc 1 911 0
 2543 01f4 344B     		ldr	r3, .L190	@ tmp283,
 2544 01f6 0122     		movs	r2, #1	@ tmp284,
 2545 01f8 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigState
 912:src/sim900_800.c **** 				return 2;
ARM GAS  /tmp/cc16P66I.s 			page 63


 2546              		.loc 1 912 0
 2547 01fa 0223     		movs	r3, #2	@ D.7914,
 2548 01fc 60E0     		b	.L168	@
 2549              	.L157:
 913:src/sim900_800.c **** 			}
 914:src/sim900_800.c **** 			break;
 915:src/sim900_800.c **** 		case 8:
 916:src/sim900_800.c **** 			//AT+CSMP=49,255,0,241
 917:src/sim900_800.c **** 			//i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 918:src/sim900_800.c **** 			i = GSMSendCommand ("AT+CSMP=49,255,0,241\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2550              		.loc 1 918 0
 2551 01fe 354B     		ldr	r3, .L190+12	@ tmp286,
 2552 0200 1B88     		ldrh	r3, [r3]	@ tmp287, GSMConfigTimeOut
 2553 0202 99B2     		uxth	r1, r3	@ D.7916, tmp287
 2554 0204 0F24     		movs	r4, #15	@ tmp288,
 2555 0206 6C44     		add	r4, r4, sp	@ tmp288,
 2556 0208 334B     		ldr	r3, .L190+16	@ tmp289,
 2557 020a 3848     		ldr	r0, .L190+36	@ tmp290,
 2558 020c 0022     		movs	r2, #0	@,
 2559 020e FFF7FEFF 		bl	GSMSendCommand	@
 2560 0212 0300     		movs	r3, r0	@ tmp291,
 2561 0214 2370     		strb	r3, [r4]	@ tmp293, i
 919:src/sim900_800.c **** 
 920:src/sim900_800.c **** 			if (i == 2)
 2562              		.loc 1 920 0
 2563 0216 0F23     		movs	r3, #15	@ tmp294,
 2564 0218 6B44     		add	r3, r3, sp	@ tmp294,
 2565 021a 1B78     		ldrb	r3, [r3]	@ tmp295, i
 2566 021c 022B     		cmp	r3, #2	@ tmp295,
 2567 021e 05D1     		bne	.L176	@,
 921:src/sim900_800.c **** 			{
 922:src/sim900_800.c **** 				GSMConfigState++;
 2568              		.loc 1 922 0
 2569 0220 294B     		ldr	r3, .L190	@ tmp296,
 2570 0222 1B78     		ldrb	r3, [r3]	@ D.7914, GSMConfigState
 2571 0224 0133     		adds	r3, r3, #1	@ tmp297,
 2572 0226 DAB2     		uxtb	r2, r3	@ D.7914, tmp297
 2573 0228 274B     		ldr	r3, .L190	@ tmp298,
 2574 022a 1A70     		strb	r2, [r3]	@ tmp299, GSMConfigState
 2575              	.L176:
 923:src/sim900_800.c **** 			}
 924:src/sim900_800.c **** 			if (i > 2)
 2576              		.loc 1 924 0
 2577 022c 0F23     		movs	r3, #15	@ tmp300,
 2578 022e 6B44     		add	r3, r3, sp	@ tmp300,
 2579 0230 1B78     		ldrb	r3, [r3]	@ tmp301, i
 2580 0232 022B     		cmp	r3, #2	@ tmp301,
 2581 0234 36D9     		bls	.L188	@,
 925:src/sim900_800.c **** 			{
 926:src/sim900_800.c **** 				GSMConfigState = 1;
 2582              		.loc 1 926 0
 2583 0236 244B     		ldr	r3, .L190	@ tmp302,
 2584 0238 0122     		movs	r2, #1	@ tmp303,
 2585 023a 1A70     		strb	r2, [r3]	@ tmp304, GSMConfigState
 927:src/sim900_800.c **** 				return 2;
 2586              		.loc 1 927 0
 2587 023c 0223     		movs	r3, #2	@ D.7914,
ARM GAS  /tmp/cc16P66I.s 			page 64


 2588 023e 3FE0     		b	.L168	@
 2589              	.L158:
 928:src/sim900_800.c **** 			}
 929:src/sim900_800.c **** 			break;
 930:src/sim900_800.c **** 		case 9:
 931:src/sim900_800.c **** 			//AT&W
 932:src/sim900_800.c **** 			//i = GSMSendCommand ("AT&W\r\n", 15, 0, &GSMbuffRtaCommand[0]);
 933:src/sim900_800.c **** 			i = GSMSendCommand ("AT&W\r\n", GSMConfigTimeOut, 0, &GSMbuffRtaCommand[0]);
 2590              		.loc 1 933 0
 2591 0240 244B     		ldr	r3, .L190+12	@ tmp305,
 2592 0242 1B88     		ldrh	r3, [r3]	@ tmp306, GSMConfigTimeOut
 2593 0244 99B2     		uxth	r1, r3	@ D.7916, tmp306
 2594 0246 0F24     		movs	r4, #15	@ tmp307,
 2595 0248 6C44     		add	r4, r4, sp	@ tmp307,
 2596 024a 234B     		ldr	r3, .L190+16	@ tmp308,
 2597 024c 2848     		ldr	r0, .L190+40	@ tmp309,
 2598 024e 0022     		movs	r2, #0	@,
 2599 0250 FFF7FEFF 		bl	GSMSendCommand	@
 2600 0254 0300     		movs	r3, r0	@ tmp310,
 2601 0256 2370     		strb	r3, [r4]	@ tmp312, i
 934:src/sim900_800.c **** 
 935:src/sim900_800.c **** 			if (i == 2)
 2602              		.loc 1 935 0
 2603 0258 0F23     		movs	r3, #15	@ tmp313,
 2604 025a 6B44     		add	r3, r3, sp	@ tmp313,
 2605 025c 1B78     		ldrb	r3, [r3]	@ tmp314, i
 2606 025e 022B     		cmp	r3, #2	@ tmp314,
 2607 0260 04D1     		bne	.L178	@,
 936:src/sim900_800.c **** 			{
 937:src/sim900_800.c **** 				GSMConfigState = 1;
 2608              		.loc 1 937 0
 2609 0262 194B     		ldr	r3, .L190	@ tmp315,
 2610 0264 0122     		movs	r2, #1	@ tmp316,
 2611 0266 1A70     		strb	r2, [r3]	@ tmp317, GSMConfigState
 938:src/sim900_800.c **** 				return 1;
 2612              		.loc 1 938 0
 2613 0268 0123     		movs	r3, #1	@ D.7914,
 2614 026a 29E0     		b	.L168	@
 2615              	.L178:
 939:src/sim900_800.c **** 			}
 940:src/sim900_800.c **** 			if (i > 2)
 2616              		.loc 1 940 0
 2617 026c 0F23     		movs	r3, #15	@ tmp318,
 2618 026e 6B44     		add	r3, r3, sp	@ tmp318,
 2619 0270 1B78     		ldrb	r3, [r3]	@ tmp319, i
 2620 0272 022B     		cmp	r3, #2	@ tmp319,
 2621 0274 18D9     		bls	.L189	@,
 941:src/sim900_800.c **** 			{
 942:src/sim900_800.c **** 				GSMConfigState = 1;
 2622              		.loc 1 942 0
 2623 0276 144B     		ldr	r3, .L190	@ tmp320,
 2624 0278 0122     		movs	r2, #1	@ tmp321,
 2625 027a 1A70     		strb	r2, [r3]	@ tmp322, GSMConfigState
 943:src/sim900_800.c **** 				return 2;
 2626              		.loc 1 943 0
 2627 027c 0223     		movs	r3, #2	@ D.7914,
 2628 027e 1FE0     		b	.L168	@
ARM GAS  /tmp/cc16P66I.s 			page 65


 2629              	.L147:
 944:src/sim900_800.c **** 			}
 945:src/sim900_800.c **** 			break;
 946:src/sim900_800.c **** 		default:
 947:src/sim900_800.c **** 			GSMConfigState = 0;
 2630              		.loc 1 947 0
 2631 0280 114B     		ldr	r3, .L190	@ tmp323,
 2632 0282 0022     		movs	r2, #0	@ tmp324,
 2633 0284 1A70     		strb	r2, [r3]	@ tmp325, GSMConfigState
 948:src/sim900_800.c **** 			break;
 2634              		.loc 1 948 0
 2635 0286 10E0     		b	.L159	@
 2636              	.L181:
 830:src/sim900_800.c **** 
 2637              		.loc 1 830 0
 2638 0288 C046     		nop
 2639 028a 0EE0     		b	.L159	@
 2640              	.L182:
 840:src/sim900_800.c **** 
 2641              		.loc 1 840 0
 2642 028c C046     		nop
 2643 028e 0CE0     		b	.L159	@
 2644              	.L183:
 858:src/sim900_800.c **** 
 2645              		.loc 1 858 0
 2646 0290 C046     		nop
 2647 0292 0AE0     		b	.L159	@
 2648              	.L184:
 864:src/sim900_800.c **** 
 2649              		.loc 1 864 0
 2650 0294 C046     		nop
 2651 0296 08E0     		b	.L159	@
 2652              	.L185:
 883:src/sim900_800.c **** 
 2653              		.loc 1 883 0
 2654 0298 C046     		nop
 2655 029a 06E0     		b	.L159	@
 2656              	.L186:
 899:src/sim900_800.c **** 		case 7:
 2657              		.loc 1 899 0
 2658 029c C046     		nop
 2659 029e 04E0     		b	.L159	@
 2660              	.L187:
 914:src/sim900_800.c **** 		case 8:
 2661              		.loc 1 914 0
 2662 02a0 C046     		nop
 2663 02a2 02E0     		b	.L159	@
 2664              	.L188:
 929:src/sim900_800.c **** 		case 9:
 2665              		.loc 1 929 0
 2666 02a4 C046     		nop
 2667 02a6 00E0     		b	.L159	@
 2668              	.L189:
 945:src/sim900_800.c **** 		default:
 2669              		.loc 1 945 0
 2670 02a8 C046     		nop
 2671              	.L159:
ARM GAS  /tmp/cc16P66I.s 			page 66


 949:src/sim900_800.c **** 
 950:src/sim900_800.c **** 	}
 951:src/sim900_800.c **** 
 952:src/sim900_800.c **** 	if (GSMConfigTimeOut == 0)
 2672              		.loc 1 952 0
 2673 02aa 0A4B     		ldr	r3, .L190+12	@ tmp326,
 2674 02ac 1B88     		ldrh	r3, [r3]	@ tmp327, GSMConfigTimeOut
 2675 02ae 9BB2     		uxth	r3, r3	@ D.7916, tmp327
 2676 02b0 002B     		cmp	r3, #0	@ D.7916,
 2677 02b2 04D1     		bne	.L180	@,
 953:src/sim900_800.c **** 	{
 954:src/sim900_800.c **** 		GSMConfigState = 0;
 2678              		.loc 1 954 0
 2679 02b4 044B     		ldr	r3, .L190	@ tmp328,
 2680 02b6 0022     		movs	r2, #0	@ tmp329,
 2681 02b8 1A70     		strb	r2, [r3]	@ tmp330, GSMConfigState
 955:src/sim900_800.c **** 		return 3;
 2682              		.loc 1 955 0
 2683 02ba 0323     		movs	r3, #3	@ D.7914,
 2684 02bc 00E0     		b	.L168	@
 2685              	.L180:
 956:src/sim900_800.c **** 	}
 957:src/sim900_800.c **** 
 958:src/sim900_800.c **** 	return 0;
 2686              		.loc 1 958 0
 2687 02be 0023     		movs	r3, #0	@ D.7914,
 2688              	.L168:
 959:src/sim900_800.c **** }
 2689              		.loc 1 959 0
 2690 02c0 1800     		movs	r0, r3	@, <retval>
 2691 02c2 04B0     		add	sp, sp, #16	@,,
 2692              		@ sp needed	@
 2693 02c4 10BD     		pop	{r4, pc}
 2694              	.L191:
 2695 02c6 C046     		.align	2
 2696              	.L190:
 2697 02c8 00000000 		.word	GSMConfigState
 2698 02cc 00000000 		.word	.L149
 2699 02d0 00000000 		.word	GSMConfigTime
 2700 02d4 00000000 		.word	GSMConfigTimeOut
 2701 02d8 00000000 		.word	GSMbuffRtaCommand
 2702 02dc 90000000 		.word	.LC77
 2703 02e0 98000000 		.word	.LC79
 2704 02e4 A0000000 		.word	.LC81
 2705 02e8 AC000000 		.word	.LC83
 2706 02ec BC000000 		.word	.LC85
 2707 02f0 D4000000 		.word	.LC87
 2708              		.cfi_endproc
 2709              	.LFE29:
 2710              		.size	GSM_Config, .-GSM_Config
 2711              		.section	.rodata
 2712 00db 00       		.align	2
 2713              	.LC93:
 2714 00dc 41542B43 		.ascii	"AT+CMGS=\"\000"
 2714      4D47533D 
 2714      2200
 2715 00e6 0000     		.align	2
ARM GAS  /tmp/cc16P66I.s 			page 67


 2716              	.LC95:
 2717 00e8 220D0A00 		.ascii	"\"\015\012\000"
 2718              		.align	2
 2719              	.LC98:
 2720 00ec 1A00     		.ascii	"\032\000"
 2721 00ee 0000     		.align	2
 2722              	.LC100:
 2723 00f0 2B434D47 		.ascii	"+CMGS: \000"
 2723      533A2000 
 2724              		.section	.text.GSMSendSMS,"ax",%progbits
 2725              		.align	2
 2726              		.global	GSMSendSMS
 2727              		.code	16
 2728              		.thumb_func
 2729              		.type	GSMSendSMS, %function
 2730              	GSMSendSMS:
 2731              	.LFB30:
 960:src/sim900_800.c **** 
 961:src/sim900_800.c **** //-----------------------------------------------------------------------//
 962:src/sim900_800.c **** //char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned char timeOut)
 963:src/sim900_800.c **** //-----------------------------------------------------------------------//
 964:src/sim900_800.c **** //String de mensaje: 	"..."
 965:src/sim900_800.c **** //timeOut en mS
 966:src/sim900_800.c **** //String Numero: 		"----------"
 967:src/sim900_800.c **** //Wait: 	0
 968:src/sim900_800.c **** //OK:		1
 969:src/sim900_800.c **** //ERR:	2
 970:src/sim900_800.c **** //TO:		3
 971:src/sim900_800.c **** //-----------------------------------------------------------------------//
 972:src/sim900_800.c **** char GSMSendSMS (char *ptrMSG, char *ptrNUM, unsigned short timeOut)
 973:src/sim900_800.c **** {
 2732              		.loc 1 973 0
 2733              		.cfi_startproc
 2734 0000 10B5     		push	{r4, lr}	@
 2735              	.LCFI12:
 2736              		.cfi_def_cfa_offset 8
 2737              		.cfi_offset 4, -8
 2738              		.cfi_offset 14, -4
 2739 0002 86B0     		sub	sp, sp, #24	@,,
 2740              	.LCFI13:
 2741              		.cfi_def_cfa_offset 32
 2742 0004 0390     		str	r0, [sp, #12]	@ ptrMSG, ptrMSG
 2743 0006 0291     		str	r1, [sp, #8]	@ ptrNUM, ptrNUM
 2744 0008 6B46     		mov	r3, sp	@ tmp217,
 2745 000a 0633     		adds	r3, r3, #6	@ tmp123,
 2746 000c 1A80     		strh	r2, [r3]	@ tmp124, timeOut
 974:src/sim900_800.c **** 	unsigned char i;
 975:src/sim900_800.c **** 
 976:src/sim900_800.c **** 	switch(GSMSendSMSState)
 2747              		.loc 1 976 0
 2748 000e 564B     		ldr	r3, .L208	@ tmp125,
 2749 0010 1B78     		ldrb	r3, [r3]	@ D.7925, GSMSendSMSState
 2750 0012 012B     		cmp	r3, #1	@ D.7926,
 2751 0014 2DD0     		beq	.L194	@,
 2752 0016 022B     		cmp	r3, #2	@ D.7926,
 2753 0018 65D0     		beq	.L195	@,
 2754 001a 002B     		cmp	r3, #0	@ D.7926,
ARM GAS  /tmp/cc16P66I.s 			page 68


 2755 001c 00D0     		beq	.LCB2134	@
 2756 001e 8DE0     		b	.L205	@long jump	@
 2757              	.LCB2134:
 977:src/sim900_800.c **** 	{
 978:src/sim900_800.c **** 		case 0:
 979:src/sim900_800.c **** 			GSMSendSMSFlag = 0;
 2758              		.loc 1 979 0
 2759 0020 524B     		ldr	r3, .L208+4	@ tmp126,
 2760 0022 0022     		movs	r2, #0	@ tmp127,
 2761 0024 1A70     		strb	r2, [r3]	@ tmp128, GSMSendSMSFlag
 980:src/sim900_800.c **** 			GSMSendSMSTimeOut = timeOut;
 2762              		.loc 1 980 0
 2763 0026 524B     		ldr	r3, .L208+8	@ tmp129,
 2764 0028 6A46     		mov	r2, sp	@ tmp218,
 2765 002a 0632     		adds	r2, r2, #6	@ tmp130,
 2766 002c 1288     		ldrh	r2, [r2]	@ tmp131, timeOut
 2767 002e 1A80     		strh	r2, [r3]	@ tmp131, GSMSendSMSTimeOut
 981:src/sim900_800.c **** 			sprintf(&GSMSendSMSbuffAux[0], "AT+CMGS=\"");
 2768              		.loc 1 981 0
 2769 0030 504A     		ldr	r2, .L208+12	@ tmp132,
 2770 0032 514B     		ldr	r3, .L208+16	@ tmp133,
 2771 0034 1000     		movs	r0, r2	@ tmp134, tmp132
 2772 0036 1900     		movs	r1, r3	@ tmp135, tmp133
 2773 0038 0A23     		movs	r3, #10	@ tmp136,
 2774 003a 1A00     		movs	r2, r3	@, tmp136
 2775 003c FFF7FEFF 		bl	memcpy	@
 982:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], ptrNUM);
 2776              		.loc 1 982 0
 2777 0040 029A     		ldr	r2, [sp, #8]	@ tmp139, ptrNUM
 2778 0042 4C4B     		ldr	r3, .L208+12	@ tmp140,
 2779 0044 1100     		movs	r1, r2	@, tmp139
 2780 0046 1800     		movs	r0, r3	@, tmp140
 2781 0048 FFF7FEFF 		bl	strcat	@
 983:src/sim900_800.c **** 			strcat(&GSMSendSMSbuffAux[0], "\"\r\n");
 2782              		.loc 1 983 0
 2783 004c 494B     		ldr	r3, .L208+12	@ tmp141,
 2784 004e 1800     		movs	r0, r3	@, tmp141
 2785 0050 FFF7FEFF 		bl	strlen	@
 2786 0054 0300     		movs	r3, r0	@ tmp142,
 2787 0056 1A00     		movs	r2, r3	@ D.7927, tmp143
 2788 0058 464B     		ldr	r3, .L208+12	@ tmp144,
 2789 005a D218     		adds	r2, r2, r3	@ D.7928, D.7927, tmp144
 2790 005c 474B     		ldr	r3, .L208+20	@ tmp145,
 2791 005e 1000     		movs	r0, r2	@ tmp146, D.7928
 2792 0060 1900     		movs	r1, r3	@ tmp147, tmp145
 2793 0062 0423     		movs	r3, #4	@ tmp148,
 2794 0064 1A00     		movs	r2, r3	@, tmp148
 2795 0066 FFF7FEFF 		bl	memcpy	@
 984:src/sim900_800.c **** 			GSMSendSMSState = 1;
 2796              		.loc 1 984 0
 2797 006a 3F4B     		ldr	r3, .L208	@ tmp151,
 2798 006c 0122     		movs	r2, #1	@ tmp152,
 2799 006e 1A70     		strb	r2, [r3]	@ tmp153, GSMSendSMSState
 985:src/sim900_800.c **** 			break;
 2800              		.loc 1 985 0
 2801 0070 6BE0     		b	.L197	@
 2802              	.L194:
ARM GAS  /tmp/cc16P66I.s 			page 69


 986:src/sim900_800.c **** 
 987:src/sim900_800.c **** 		case 1:
 988:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], timeOut, 0, &GSMbuffRtaCommand[0]);
 2803              		.loc 1 988 0
 2804 0072 1724     		movs	r4, #23	@ tmp154,
 2805 0074 6C44     		add	r4, r4, sp	@ tmp154,
 2806 0076 424A     		ldr	r2, .L208+24	@ tmp155,
 2807 0078 6B46     		mov	r3, sp	@ tmp220,
 2808 007a 0633     		adds	r3, r3, #6	@ tmp156,
 2809 007c 1988     		ldrh	r1, [r3]	@ tmp157, timeOut
 2810 007e 3D48     		ldr	r0, .L208+12	@ tmp158,
 2811 0080 1300     		movs	r3, r2	@, tmp155
 2812 0082 0022     		movs	r2, #0	@,
 2813 0084 FFF7FEFF 		bl	GSMSendCommand	@
 2814 0088 0300     		movs	r3, r0	@ tmp159,
 2815 008a 2370     		strb	r3, [r4]	@ tmp161, i
 989:src/sim900_800.c **** 
 990:src/sim900_800.c **** 			if (i == 2)
 2816              		.loc 1 990 0
 2817 008c 1723     		movs	r3, #23	@ tmp162,
 2818 008e 6B44     		add	r3, r3, sp	@ tmp162,
 2819 0090 1B78     		ldrb	r3, [r3]	@ tmp163, i
 2820 0092 022B     		cmp	r3, #2	@ tmp163,
 2821 0094 1DD1     		bne	.L198	@,
 991:src/sim900_800.c **** 			{
 992:src/sim900_800.c **** 				GSMSendSMSbuffAux[0] = 0;
 2822              		.loc 1 992 0
 2823 0096 374B     		ldr	r3, .L208+12	@ tmp164,
 2824 0098 0022     		movs	r2, #0	@ tmp165,
 2825 009a 1A70     		strb	r2, [r3]	@ tmp166, GSMSendSMSbuffAux
 993:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], ptrMSG);
 2826              		.loc 1 993 0
 2827 009c 039A     		ldr	r2, [sp, #12]	@ tmp167, ptrMSG
 2828 009e 354B     		ldr	r3, .L208+12	@ tmp168,
 2829 00a0 1100     		movs	r1, r2	@, tmp167
 2830 00a2 1800     		movs	r0, r3	@, tmp168
 2831 00a4 FFF7FEFF 		bl	strcat	@
 994:src/sim900_800.c **** 				strcat(&GSMSendSMSbuffAux[0], "\032");
 2832              		.loc 1 994 0
 2833 00a8 324B     		ldr	r3, .L208+12	@ tmp169,
 2834 00aa 1800     		movs	r0, r3	@, tmp169
 2835 00ac FFF7FEFF 		bl	strlen	@
 2836 00b0 0300     		movs	r3, r0	@ tmp170,
 2837 00b2 1A00     		movs	r2, r3	@ D.7927, tmp171
 2838 00b4 2F4B     		ldr	r3, .L208+12	@ tmp172,
 2839 00b6 D218     		adds	r2, r2, r3	@ D.7928, D.7927, tmp172
 2840 00b8 324B     		ldr	r3, .L208+28	@ tmp173,
 2841 00ba 1000     		movs	r0, r2	@ tmp174, D.7928
 2842 00bc 1900     		movs	r1, r3	@ tmp175, tmp173
 2843 00be 0223     		movs	r3, #2	@ tmp176,
 2844 00c0 1A00     		movs	r2, r3	@, tmp176
 2845 00c2 FFF7FEFF 		bl	memcpy	@
 995:src/sim900_800.c **** 				GSMSendSMSState++;
 2846              		.loc 1 995 0
 2847 00c6 284B     		ldr	r3, .L208	@ tmp179,
 2848 00c8 1B78     		ldrb	r3, [r3]	@ D.7925, GSMSendSMSState
 2849 00ca 0133     		adds	r3, r3, #1	@ tmp180,
ARM GAS  /tmp/cc16P66I.s 			page 70


 2850 00cc DAB2     		uxtb	r2, r3	@ D.7925, tmp180
 2851 00ce 264B     		ldr	r3, .L208	@ tmp181,
 2852 00d0 1A70     		strb	r2, [r3]	@ tmp182, GSMSendSMSState
 2853              	.L198:
 996:src/sim900_800.c **** 			}
 997:src/sim900_800.c **** 
 998:src/sim900_800.c **** 			if (i > 2)
 2854              		.loc 1 998 0
 2855 00d2 1723     		movs	r3, #23	@ tmp183,
 2856 00d4 6B44     		add	r3, r3, sp	@ tmp183,
 2857 00d6 1B78     		ldrb	r3, [r3]	@ tmp184, i
 2858 00d8 022B     		cmp	r3, #2	@ tmp184,
 2859 00da 33D9     		bls	.L206	@,
 999:src/sim900_800.c **** 			{
1000:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2860              		.loc 1 1000 0
 2861 00dc 224B     		ldr	r3, .L208	@ tmp185,
 2862 00de 0022     		movs	r2, #0	@ tmp186,
 2863 00e0 1A70     		strb	r2, [r3]	@ tmp187, GSMSendSMSState
1001:src/sim900_800.c **** 				return 2;
 2864              		.loc 1 1001 0
 2865 00e2 0223     		movs	r3, #2	@ D.7925,
 2866 00e4 3CE0     		b	.L200	@
 2867              	.L195:
1002:src/sim900_800.c **** 			}
1003:src/sim900_800.c **** 			break;
1004:src/sim900_800.c **** 
1005:src/sim900_800.c **** 		case 2:
1006:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendSMSbuffAux[0], timeOut, 1, &GSMbuffRtaCommand[0]);
 2868              		.loc 1 1006 0
 2869 00e6 1724     		movs	r4, #23	@ tmp188,
 2870 00e8 6C44     		add	r4, r4, sp	@ tmp188,
 2871 00ea 254A     		ldr	r2, .L208+24	@ tmp189,
 2872 00ec 6B46     		mov	r3, sp	@ tmp224,
 2873 00ee 0633     		adds	r3, r3, #6	@ tmp190,
 2874 00f0 1988     		ldrh	r1, [r3]	@ tmp191, timeOut
 2875 00f2 2048     		ldr	r0, .L208+12	@ tmp192,
 2876 00f4 1300     		movs	r3, r2	@, tmp189
 2877 00f6 0122     		movs	r2, #1	@,
 2878 00f8 FFF7FEFF 		bl	GSMSendCommand	@
 2879 00fc 0300     		movs	r3, r0	@ tmp193,
 2880 00fe 2370     		strb	r3, [r4]	@ tmp195, i
1007:src/sim900_800.c **** 
1008:src/sim900_800.c **** 			if (i == 2)
 2881              		.loc 1 1008 0
 2882 0100 1723     		movs	r3, #23	@ tmp196,
 2883 0102 6B44     		add	r3, r3, sp	@ tmp196,
 2884 0104 1B78     		ldrb	r3, [r3]	@ tmp197, i
 2885 0106 022B     		cmp	r3, #2	@ tmp197,
 2886 0108 0ED1     		bne	.L201	@,
1009:src/sim900_800.c **** 			{
1010:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2887              		.loc 1 1010 0
 2888 010a 174B     		ldr	r3, .L208	@ tmp198,
 2889 010c 0022     		movs	r2, #0	@ tmp199,
 2890 010e 1A70     		strb	r2, [r3]	@ tmp200, GSMSendSMSState
1011:src/sim900_800.c **** 
ARM GAS  /tmp/cc16P66I.s 			page 71


1012:src/sim900_800.c **** 				if (!strncmp(GSMbuffRtaCommand, "+CMGS: ", sizeof("+CMGS: ") - 1))
 2891              		.loc 1 1012 0
 2892 0110 1D49     		ldr	r1, .L208+32	@ tmp201,
 2893 0112 1B4B     		ldr	r3, .L208+24	@ tmp202,
 2894 0114 0722     		movs	r2, #7	@,
 2895 0116 1800     		movs	r0, r3	@, tmp202
 2896 0118 FFF7FEFF 		bl	strncmp	@
 2897 011c 031E     		subs	r3, r0, #0	@ D.7926,,
 2898 011e 01D1     		bne	.L202	@,
1013:src/sim900_800.c **** 					return 1;
 2899              		.loc 1 1013 0
 2900 0120 0123     		movs	r3, #1	@ D.7925,
 2901 0122 1DE0     		b	.L200	@
 2902              	.L202:
1014:src/sim900_800.c **** 				else
1015:src/sim900_800.c **** 					return 2;
 2903              		.loc 1 1015 0
 2904 0124 0223     		movs	r3, #2	@ D.7925,
 2905 0126 1BE0     		b	.L200	@
 2906              	.L201:
1016:src/sim900_800.c **** 			}
1017:src/sim900_800.c **** 
1018:src/sim900_800.c **** 			if (i > 2)
 2907              		.loc 1 1018 0
 2908 0128 1723     		movs	r3, #23	@ tmp203,
 2909 012a 6B44     		add	r3, r3, sp	@ tmp203,
 2910 012c 1B78     		ldrb	r3, [r3]	@ tmp204, i
 2911 012e 022B     		cmp	r3, #2	@ tmp204,
 2912 0130 0AD9     		bls	.L207	@,
1019:src/sim900_800.c **** 			{
1020:src/sim900_800.c **** 				GSMSendSMSState = 0;
 2913              		.loc 1 1020 0
 2914 0132 0D4B     		ldr	r3, .L208	@ tmp205,
 2915 0134 0022     		movs	r2, #0	@ tmp206,
 2916 0136 1A70     		strb	r2, [r3]	@ tmp207, GSMSendSMSState
1021:src/sim900_800.c **** 				return 2;
 2917              		.loc 1 1021 0
 2918 0138 0223     		movs	r3, #2	@ D.7925,
 2919 013a 11E0     		b	.L200	@
 2920              	.L205:
1022:src/sim900_800.c **** 			}
1023:src/sim900_800.c **** 			break;
1024:src/sim900_800.c **** 
1025:src/sim900_800.c **** 		default:
1026:src/sim900_800.c **** 			GSMSendSMSState = 0;
 2921              		.loc 1 1026 0
 2922 013c 0A4B     		ldr	r3, .L208	@ tmp208,
 2923 013e 0022     		movs	r2, #0	@ tmp209,
 2924 0140 1A70     		strb	r2, [r3]	@ tmp210, GSMSendSMSState
1027:src/sim900_800.c **** 			break;
 2925              		.loc 1 1027 0
 2926 0142 02E0     		b	.L197	@
 2927              	.L206:
1003:src/sim900_800.c **** 
 2928              		.loc 1 1003 0
 2929 0144 C046     		nop
 2930 0146 00E0     		b	.L197	@
ARM GAS  /tmp/cc16P66I.s 			page 72


 2931              	.L207:
1023:src/sim900_800.c **** 
 2932              		.loc 1 1023 0
 2933 0148 C046     		nop
 2934              	.L197:
1028:src/sim900_800.c **** 	}
1029:src/sim900_800.c **** 
1030:src/sim900_800.c **** 	if (GSMSendSMSTimeOut == 0)
 2935              		.loc 1 1030 0
 2936 014a 094B     		ldr	r3, .L208+8	@ tmp211,
 2937 014c 1B88     		ldrh	r3, [r3]	@ tmp212, GSMSendSMSTimeOut
 2938 014e 9BB2     		uxth	r3, r3	@ D.7929, tmp212
 2939 0150 002B     		cmp	r3, #0	@ D.7929,
 2940 0152 04D1     		bne	.L204	@,
1031:src/sim900_800.c **** 	{
1032:src/sim900_800.c **** 		GSMSendSMSState = 0;
 2941              		.loc 1 1032 0
 2942 0154 044B     		ldr	r3, .L208	@ tmp213,
 2943 0156 0022     		movs	r2, #0	@ tmp214,
 2944 0158 1A70     		strb	r2, [r3]	@ tmp215, GSMSendSMSState
1033:src/sim900_800.c **** 		return 3;
 2945              		.loc 1 1033 0
 2946 015a 0323     		movs	r3, #3	@ D.7925,
 2947 015c 00E0     		b	.L200	@
 2948              	.L204:
1034:src/sim900_800.c **** 	}
1035:src/sim900_800.c **** 
1036:src/sim900_800.c **** 	return 0;
 2949              		.loc 1 1036 0
 2950 015e 0023     		movs	r3, #0	@ D.7925,
 2951              	.L200:
1037:src/sim900_800.c **** }
 2952              		.loc 1 1037 0
 2953 0160 1800     		movs	r0, r3	@, <retval>
 2954 0162 06B0     		add	sp, sp, #24	@,,
 2955              		@ sp needed	@
 2956 0164 10BD     		pop	{r4, pc}
 2957              	.L209:
 2958 0166 C046     		.align	2
 2959              	.L208:
 2960 0168 00000000 		.word	GSMSendSMSState
 2961 016c 00000000 		.word	GSMSendSMSFlag
 2962 0170 00000000 		.word	GSMSendSMSTimeOut
 2963 0174 00000000 		.word	GSMSendSMSbuffAux
 2964 0178 DC000000 		.word	.LC93
 2965 017c E8000000 		.word	.LC95
 2966 0180 00000000 		.word	GSMbuffRtaCommand
 2967 0184 EC000000 		.word	.LC98
 2968 0188 F0000000 		.word	.LC100
 2969              		.cfi_endproc
 2970              	.LFE30:
 2971              		.size	GSMSendSMS, .-GSMSendSMS
 2972              		.section	.rodata
 2973              		.align	2
 2974              	.LC107:
 2975 00f8 3030303A 		.ascii	"000: KAL,123456,100\015\012\000"
 2975      204B414C 
ARM GAS  /tmp/cc16P66I.s 			page 73


 2975      2C313233 
 2975      3435362C 
 2975      3130300D 
 2976 010e 0000     		.align	2
 2977              	.LC109:
 2978 0110 41542B43 		.ascii	"AT+CIPSTATUS\015\012\000"
 2978      49505354 
 2978      41545553 
 2978      0D0A00
 2979 011f 00       		.align	2
 2980              	.LC117:
 2981 0120 41542B43 		.ascii	"AT+CIPSTART=\"TCP\",\"\000"
 2981      49505354 
 2981      4152543D 
 2981      22544350 
 2981      222C2200 
 2982              		.align	2
 2983              	.LC119:
 2984 0134 222C2200 		.ascii	"\",\"\000"
 2985              		.align	2
 2986              	.LC125:
 2987 0138 434F4E4E 		.ascii	"CONNECTED\000"
 2987      45435445 
 2987      4400
 2988 0142 0000     		.align	2
 2989              	.LC127:
 2990 0144 50445020 		.ascii	"PDP DEACT\000"
 2990      44454143 
 2990      5400
 2991 014e 0000     		.align	2
 2992              	.LC129:
 2993 0150 41542B43 		.ascii	"AT+CPIN?\015\012\000"
 2993      50494E3F 
 2993      0D0A00
 2994 015b 00       		.align	2
 2995              	.LC131:
 2996 015c 2B435049 		.ascii	"+CPIN: READY\000"
 2996      4E3A2052 
 2996      45414459 
 2996      00
 2997 0169 000000   		.align	2
 2998              	.LC133:
 2999 016c 2B435049 		.ascii	"+CPINDS: READY\000"
 2999      4E44533A 
 2999      20524541 
 2999      445900
 3000 017b 00       		.align	2
 3001              	.LC135:
 3002 017c 41542B43 		.ascii	"AT+CREG?\015\012\000"
 3002      5245473F 
 3002      0D0A00
 3003 0187 00       		.align	2
 3004              	.LC137:
 3005 0188 2B435245 		.ascii	"+CREG: 0,1\000"
 3005      473A2030 
 3005      2C3100
 3006 0193 00       		.align	2
ARM GAS  /tmp/cc16P66I.s 			page 74


 3007              	.LC139:
 3008 0194 41542B43 		.ascii	"AT+CSQ\015\012\000"
 3008      53510D0A 
 3008      00
 3009 019d 000000   		.align	2
 3010              	.LC141:
 3011 01a0 2B435351 		.ascii	"+CSQ:\000"
 3011      3A00
 3012 01a6 0000     		.align	2
 3013              	.LC144:
 3014 01a8 41542B43 		.ascii	"AT+CIPMODE=1\015\012\000"
 3014      49504D4F 
 3014      44453D31 
 3014      0D0A00
 3015 01b7 00       		.align	2
 3016              	.LC146:
 3017 01b8 41542B43 		.ascii	"AT+CGATT?\015\012\000"
 3017      47415454 
 3017      3F0D0A00 
 3018              		.align	2
 3019              	.LC148:
 3020 01c4 2B434741 		.ascii	"+CGATT:\000"
 3020      54543A00 
 3021              		.align	2
 3022              	.LC150:
 3023 01cc 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"\000"
 3023      4744434F 
 3023      4E543D31 
 3023      2C224950 
 3023      222C2200 
 3024              		.align	2
 3025              	.LC152:
 3026 01e0 41542B43 		.ascii	"AT+CSTT=\"\000"
 3026      5354543D 
 3026      2200
 3027 01ea 0000     		.align	2
 3028              	.LC154:
 3029 01ec 41542B43 		.ascii	"AT+CIICR\015\012\000"
 3029      49494352 
 3029      0D0A00
 3030 01f7 00       		.align	2
 3031              	.LC156:
 3032 01f8 41542B43 		.ascii	"AT+CIFSR\015\012\000"
 3032      49465352 
 3032      0D0A00
 3033              		.section	.text.GSMConfigGPRS,"ax",%progbits
 3034              		.align	2
 3035              		.global	GSMConfigGPRS
 3036              		.code	16
 3037              		.thumb_func
 3038              		.type	GSMConfigGPRS, %function
 3039              	GSMConfigGPRS:
 3040              	.LFB31:
1038:src/sim900_800.c **** 
1039:src/sim900_800.c **** //-----------------------------------------------------------------------//
1040:src/sim900_800.c **** //char GSMConfigGPRS (char *ptrAPN, char *ptrUSER, char *ptrKEY , unsigned char timeOut)
1041:src/sim900_800.c **** //-----------------------------------------------------------------------//
ARM GAS  /tmp/cc16P66I.s 			page 75


1042:src/sim900_800.c **** //char *ptrAPN "gprs.personal.com"
1043:src/sim900_800.c **** //char *ptrUSER ""
1044:src/sim900_800.c **** //char *ptrKEY  ""
1045:src/sim900_800.c **** //char *ptrIPAdd Para devolver la ip asignada.
1046:src/sim900_800.c **** //unsigned char timeOut x100mS
1047:src/sim900_800.c **** //char sim
1048:src/sim900_800.c **** //-----------------------------------------------------------------------//
1049:src/sim900_800.c **** //Wait:			1
1050:src/sim900_800.c **** //OK:			2
1051:src/sim900_800.c **** //ERR:			3
1052:src/sim900_800.c **** //TO:			4
1053:src/sim900_800.c **** //NO SIGNAL:	20
1054:src/sim900_800.c **** //-----------------------------------------------------------------------//
1055:src/sim900_800.c **** char GSMConfigGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *ptr
1056:src/sim900_800.c **** {
 3041              		.loc 1 1056 0
 3042              		.cfi_startproc
 3043 0000 10B5     		push	{r4, lr}	@
 3044              	.LCFI14:
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 4, -8
 3047              		.cfi_offset 14, -4
 3048 0002 86B0     		sub	sp, sp, #24	@,,
 3049              	.LCFI15:
 3050              		.cfi_def_cfa_offset 32
 3051 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 3052 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 3053 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 3054 000a 0F23     		movs	r3, #15	@ tmp190,
 3055 000c 6B44     		add	r3, r3, sp	@ tmp190,
 3056 000e 021C     		adds	r2, r0, #0	@ tmp191, tmp189
 3057 0010 1A70     		strb	r2, [r3]	@ tmp191, sim
1057:src/sim900_800.c **** 	unsigned char i;
1058:src/sim900_800.c **** 
1059:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 3058              		.loc 1 1059 0
 3059 0012 E14B     		ldr	r3, .L293	@ tmp192,
 3060 0014 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3061 0016 102B     		cmp	r3, #16	@ D.7945,
 3062 0018 01D9     		bls	.LCB2362	@
 3063 001a 00F0FDFB 		bl	.L211	@far jump	@
 3064              	.LCB2362:
 3065 001e 9A00     		lsls	r2, r3, #2	@ tmp193, D.7945,
 3066 0020 DE4B     		ldr	r3, .L293+4	@ tmp195,
 3067 0022 D318     		adds	r3, r2, r3	@ tmp194, tmp193, tmp195
 3068 0024 1B68     		ldr	r3, [r3]	@ tmp196,
 3069 0026 9F46     		mov	pc, r3	@ tmp196
 3070              		.section	.rodata.GSMConfigGPRS,"a",%progbits
 3071              		.align	2
 3072              	.L213:
 3073 0000 28000000 		.word	.L212
 3074 0004 46000000 		.word	.L214
 3075 0008 88000000 		.word	.L215
 3076 000c CC000000 		.word	.L216
 3077 0010 CE020000 		.word	.L217
 3078 0014 3A030000 		.word	.L218
 3079 0018 00040000 		.word	.L219
ARM GAS  /tmp/cc16P66I.s 			page 76


 3080 001c 90040000 		.word	.L220
 3081 0020 D0040000 		.word	.L221
 3082 0024 76050000 		.word	.L222
 3083 0028 44060000 		.word	.L223
 3084 002c 7E060000 		.word	.L224
 3085 0030 B8060000 		.word	.L225
 3086 0034 FE060000 		.word	.L226
 3087 0038 38070000 		.word	.L227
 3088 003c 84070000 		.word	.L228
 3089 0040 DC070000 		.word	.L229
 3090              		.section	.text.GSMConfigGPRS
 3091              	.L212:
1060:src/sim900_800.c **** 	{
1061:src/sim900_800.c **** 
1062:src/sim900_800.c **** 		case 0:
1063:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 3092              		.loc 1 1063 0
 3093 0028 DD4B     		ldr	r3, .L293+8	@ tmp197,
 3094 002a 0BAA     		add	r2, sp, #44	@ tmp198,,
 3095 002c 1288     		ldrh	r2, [r2]	@ tmp199, timeOut
 3096 002e 1A80     		strh	r2, [r3]	@ tmp199, GSMConfigGPRSTimeOut
1064:src/sim900_800.c **** 			GSMConfigGPRSState++;
 3097              		.loc 1 1064 0
 3098 0030 D94B     		ldr	r3, .L293	@ tmp200,
 3099 0032 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3100 0034 0133     		adds	r3, r3, #1	@ tmp201,
 3101 0036 DAB2     		uxtb	r2, r3	@ D.7944, tmp201
 3102 0038 D74B     		ldr	r3, .L293	@ tmp202,
 3103 003a 1A70     		strb	r2, [r3]	@ tmp203, GSMConfigGPRSState
1065:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 3104              		.loc 1 1065 0
 3105 003c D94B     		ldr	r3, .L293+12	@ tmp204,
 3106 003e 0122     		movs	r2, #1	@ tmp205,
 3107 0040 1A70     		strb	r2, [r3]	@ tmp206, GSMConfigGPRSflag
1066:src/sim900_800.c **** 			break;
 3108              		.loc 1 1066 0
 3109 0042 00F008FC 		bl	.L230	@ far jump	@
 3110              	.L214:
1067:src/sim900_800.c **** 
1068:src/sim900_800.c **** 		case 1:
1069:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 20, 0, &GSMbuffRtaCommand[0]);
 3111              		.loc 1 1069 0
 3112 0046 1724     		movs	r4, #23	@ tmp207,
 3113 0048 6C44     		add	r4, r4, sp	@ tmp207,
 3114 004a D74B     		ldr	r3, .L293+16	@ tmp208,
 3115 004c D748     		ldr	r0, .L293+20	@ tmp209,
 3116 004e 0022     		movs	r2, #0	@,
 3117 0050 1421     		movs	r1, #20	@,
 3118 0052 FFF7FEFF 		bl	GSMSendCommand	@
 3119 0056 0300     		movs	r3, r0	@ tmp210,
 3120 0058 2370     		strb	r3, [r4]	@ tmp212, i
1070:src/sim900_800.c **** 
1071:src/sim900_800.c **** 			if (i == 2)
 3121              		.loc 1 1071 0
 3122 005a 1723     		movs	r3, #23	@ tmp213,
 3123 005c 6B44     		add	r3, r3, sp	@ tmp213,
 3124 005e 1B78     		ldrb	r3, [r3]	@ tmp214, i
ARM GAS  /tmp/cc16P66I.s 			page 77


 3125 0060 022B     		cmp	r3, #2	@ tmp214,
 3126 0062 05D1     		bne	.L231	@,
1072:src/sim900_800.c **** 			{
1073:src/sim900_800.c **** 				//Respondio ACK.
1074:src/sim900_800.c **** 				//Conectado.
1075:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3127              		.loc 1 1075 0
 3128 0064 CC4B     		ldr	r3, .L293	@ tmp215,
 3129 0066 0022     		movs	r2, #0	@ tmp216,
 3130 0068 1A70     		strb	r2, [r3]	@ tmp217, GSMConfigGPRSState
1076:src/sim900_800.c **** 				return 2;
 3131              		.loc 1 1076 0
 3132 006a 0223     		movs	r3, #2	@ D.7944,
 3133 006c 00F0FDFB 		bl	.L232	@ far jump	@
 3134              	.L231:
1077:src/sim900_800.c **** 			}
1078:src/sim900_800.c **** 
1079:src/sim900_800.c **** 			if (i > 2)
 3135              		.loc 1 1079 0
 3136 0070 1723     		movs	r3, #23	@ tmp218,
 3137 0072 6B44     		add	r3, r3, sp	@ tmp218,
 3138 0074 1B78     		ldrb	r3, [r3]	@ tmp219, i
 3139 0076 022B     		cmp	r3, #2	@ tmp219,
 3140 0078 01D8     		bhi	.LCB2417	@
 3141 007a 00F0D1FB 		bl	.L279	@far jump	@
 3142              	.LCB2417:
1080:src/sim900_800.c **** 			{
1081:src/sim900_800.c **** 				//No conectado.
1082:src/sim900_800.c **** 				//Seleccionar Sim.
1083:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
 3143              		.loc 1 1083 0
 3144 007e C64B     		ldr	r3, .L293	@ tmp220,
 3145 0080 0F22     		movs	r2, #15	@ tmp221,
 3146 0082 1A70     		strb	r2, [r3]	@ tmp222, GSMConfigGPRSState
1084:src/sim900_800.c **** 			}
1085:src/sim900_800.c **** 
1086:src/sim900_800.c **** 			break;
 3147              		.loc 1 1086 0
 3148 0084 00F0CCFB 		bl	.L279	@ far jump	@
 3149              	.L215:
1087:src/sim900_800.c **** 		case 2:
1088:src/sim900_800.c **** 
1089:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3150              		.loc 1 1089 0
 3151 0088 1724     		movs	r4, #23	@ tmp223,
 3152 008a 6C44     		add	r4, r4, sp	@ tmp223,
 3153 008c C64B     		ldr	r3, .L293+16	@ tmp224,
 3154 008e C848     		ldr	r0, .L293+24	@ tmp225,
 3155 0090 0022     		movs	r2, #0	@,
 3156 0092 3221     		movs	r1, #50	@,
 3157 0094 FFF7FEFF 		bl	GSMSendCommand	@
 3158 0098 0300     		movs	r3, r0	@ tmp226,
 3159 009a 2370     		strb	r3, [r4]	@ tmp228, i
1090:src/sim900_800.c **** 
1091:src/sim900_800.c **** 			if (i == 2)
 3160              		.loc 1 1091 0
 3161 009c 1723     		movs	r3, #23	@ tmp229,
ARM GAS  /tmp/cc16P66I.s 			page 78


 3162 009e 6B44     		add	r3, r3, sp	@ tmp229,
 3163 00a0 1B78     		ldrb	r3, [r3]	@ tmp230, i
 3164 00a2 022B     		cmp	r3, #2	@ tmp230,
 3165 00a4 05D1     		bne	.L234	@,
1092:src/sim900_800.c **** 			{
1093:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3166              		.loc 1 1093 0
 3167 00a6 BC4B     		ldr	r3, .L293	@ tmp231,
 3168 00a8 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3169 00aa 0133     		adds	r3, r3, #1	@ tmp232,
 3170 00ac DAB2     		uxtb	r2, r3	@ D.7944, tmp232
 3171 00ae BA4B     		ldr	r3, .L293	@ tmp233,
 3172 00b0 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
 3173              	.L234:
1094:src/sim900_800.c **** 			}
1095:src/sim900_800.c **** 
1096:src/sim900_800.c **** 			if (i > 2)
 3174              		.loc 1 1096 0
 3175 00b2 1723     		movs	r3, #23	@ tmp235,
 3176 00b4 6B44     		add	r3, r3, sp	@ tmp235,
 3177 00b6 1B78     		ldrb	r3, [r3]	@ tmp236, i
 3178 00b8 022B     		cmp	r3, #2	@ tmp236,
 3179 00ba 01D8     		bhi	.LCB2451	@
 3180 00bc 00F0B2FB 		bl	.L280	@far jump	@
 3181              	.LCB2451:
1097:src/sim900_800.c **** 			{
1098:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3182              		.loc 1 1098 0
 3183 00c0 B54B     		ldr	r3, .L293	@ tmp237,
 3184 00c2 0022     		movs	r2, #0	@ tmp238,
 3185 00c4 1A70     		strb	r2, [r3]	@ tmp239, GSMConfigGPRSState
1099:src/sim900_800.c **** 				return 3;
 3186              		.loc 1 1099 0
 3187 00c6 0323     		movs	r3, #3	@ D.7944,
 3188 00c8 00F0CFFB 		bl	.L232	@ far jump	@
 3189              	.L216:
1100:src/sim900_800.c **** 			}
1101:src/sim900_800.c **** 			break;
1102:src/sim900_800.c **** 		case 3:
1103:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 3190              		.loc 1 1103 0
 3191 00cc B54B     		ldr	r3, .L293+12	@ tmp240,
 3192 00ce 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSflag
 3193 00d0 022B     		cmp	r3, #2	@ D.7944,
 3194 00d2 01D0     		beq	.LCB2463	@
 3195 00d4 00F0A8FB 		bl	.L281	@far jump	@
 3196              	.LCB2463:
1104:src/sim900_800.c **** 			{
1105:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1106:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 3197              		.loc 1 1106 0
 3198 00d8 B649     		ldr	r1, .L293+28	@ tmp241,
 3199 00da B74B     		ldr	r3, .L293+32	@ tmp242,
 3200 00dc 0A22     		movs	r2, #10	@,
 3201 00de 1800     		movs	r0, r3	@, tmp242
 3202 00e0 FFF7FEFF 		bl	strncmp	@
 3203 00e4 031E     		subs	r3, r0, #0	@ D.7945,,
ARM GAS  /tmp/cc16P66I.s 			page 79


 3204 00e6 08D1     		bne	.L237	@,
1107:src/sim900_800.c **** 				{
1108:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 3205              		.loc 1 1108 0
 3206 00e8 AB4B     		ldr	r3, .L293	@ tmp243,
 3207 00ea 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3208 00ec 0133     		adds	r3, r3, #1	@ tmp244,
 3209 00ee DAB2     		uxtb	r2, r3	@ D.7944, tmp244
 3210 00f0 A94B     		ldr	r3, .L293	@ tmp245,
 3211 00f2 1A70     		strb	r2, [r3]	@ tmp246, GSMConfigGPRSState
1109:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3212              		.loc 1 1109 0
 3213 00f4 AB4B     		ldr	r3, .L293+12	@ tmp247,
 3214 00f6 0122     		movs	r2, #1	@ tmp248,
 3215 00f8 1A70     		strb	r2, [r3]	@ tmp249, GSMConfigGPRSflag
 3216              	.L237:
1110:src/sim900_800.c **** 				}
1111:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1112:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 3217              		.loc 1 1112 0
 3218 00fa B049     		ldr	r1, .L293+36	@ tmp250,
 3219 00fc AE4B     		ldr	r3, .L293+32	@ tmp251,
 3220 00fe 0822     		movs	r2, #8	@,
 3221 0100 1800     		movs	r0, r3	@, tmp251
 3222 0102 FFF7FEFF 		bl	strncmp	@
 3223 0106 031E     		subs	r3, r0, #0	@ D.7945,,
 3224 0108 08D1     		bne	.L238	@,
1113:src/sim900_800.c **** 				{
1114:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 3225              		.loc 1 1114 0
 3226 010a A34B     		ldr	r3, .L293	@ tmp252,
 3227 010c 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3228 010e 0833     		adds	r3, r3, #8	@ tmp253,
 3229 0110 DAB2     		uxtb	r2, r3	@ D.7944, tmp253
 3230 0112 A14B     		ldr	r3, .L293	@ tmp254,
 3231 0114 1A70     		strb	r2, [r3]	@ tmp255, GSMConfigGPRSState
1115:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3232              		.loc 1 1115 0
 3233 0116 A34B     		ldr	r3, .L293+12	@ tmp256,
 3234 0118 0122     		movs	r2, #1	@ tmp257,
 3235 011a 1A70     		strb	r2, [r3]	@ tmp258, GSMConfigGPRSflag
 3236              	.L238:
1116:src/sim900_800.c **** 				}
1117:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
1118:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 3237              		.loc 1 1118 0
 3238 011c A849     		ldr	r1, .L293+40	@ tmp259,
 3239 011e A64B     		ldr	r3, .L293+32	@ tmp260,
 3240 0120 0A22     		movs	r2, #10	@,
 3241 0122 1800     		movs	r0, r3	@, tmp260
 3242 0124 FFF7FEFF 		bl	strncmp	@
 3243 0128 031E     		subs	r3, r0, #0	@ D.7945,,
 3244 012a 08D1     		bne	.L239	@,
1119:src/sim900_800.c **** 				{
1120:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 3245              		.loc 1 1120 0
 3246 012c 9A4B     		ldr	r3, .L293	@ tmp261,
ARM GAS  /tmp/cc16P66I.s 			page 80


 3247 012e 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3248 0130 0933     		adds	r3, r3, #9	@ tmp262,
 3249 0132 DAB2     		uxtb	r2, r3	@ D.7944, tmp262
 3250 0134 984B     		ldr	r3, .L293	@ tmp263,
 3251 0136 1A70     		strb	r2, [r3]	@ tmp264, GSMConfigGPRSState
1121:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3252              		.loc 1 1121 0
 3253 0138 9A4B     		ldr	r3, .L293+12	@ tmp265,
 3254 013a 0122     		movs	r2, #1	@ tmp266,
 3255 013c 1A70     		strb	r2, [r3]	@ tmp267, GSMConfigGPRSflag
 3256              	.L239:
1122:src/sim900_800.c **** 				}
1123:src/sim900_800.c **** 
1124:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
1125:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 3257              		.loc 1 1125 0
 3258 013e A149     		ldr	r1, .L293+44	@ tmp268,
 3259 0140 9D4B     		ldr	r3, .L293+32	@ tmp269,
 3260 0142 0922     		movs	r2, #9	@,
 3261 0144 1800     		movs	r0, r3	@, tmp269
 3262 0146 FFF7FEFF 		bl	strncmp	@
 3263 014a 031E     		subs	r3, r0, #0	@ D.7945,,
 3264 014c 3AD1     		bne	.L240	@,
1126:src/sim900_800.c **** 				{
1127:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3265              		.loc 1 1127 0
 3266 014e 924B     		ldr	r3, .L293	@ tmp270,
 3267 0150 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3268 0152 0A33     		adds	r3, r3, #10	@ tmp271,
 3269 0154 DAB2     		uxtb	r2, r3	@ D.7944, tmp271
 3270 0156 904B     		ldr	r3, .L293	@ tmp272,
 3271 0158 1A70     		strb	r2, [r3]	@ tmp273, GSMConfigGPRSState
1128:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3272              		.loc 1 1128 0
 3273 015a 9B4A     		ldr	r2, .L293+48	@ tmp274,
 3274 015c 9B4B     		ldr	r3, .L293+52	@ tmp275,
 3275 015e 1000     		movs	r0, r2	@ tmp276, tmp274
 3276 0160 1900     		movs	r1, r3	@ tmp277, tmp275
 3277 0162 1423     		movs	r3, #20	@ tmp278,
 3278 0164 1A00     		movs	r2, r3	@, tmp278
 3279 0166 FFF7FEFF 		bl	memcpy	@
1129:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3280              		.loc 1 1129 0
 3281 016a 099A     		ldr	r2, [sp, #36]	@ tmp281, ptrIPremote
 3282 016c 964B     		ldr	r3, .L293+48	@ tmp282,
 3283 016e 1100     		movs	r1, r2	@, tmp281
 3284 0170 1800     		movs	r0, r3	@, tmp282
 3285 0172 FFF7FEFF 		bl	strcat	@
1130:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3286              		.loc 1 1130 0
 3287 0176 944B     		ldr	r3, .L293+48	@ tmp283,
 3288 0178 1800     		movs	r0, r3	@, tmp283
 3289 017a FFF7FEFF 		bl	strlen	@
 3290 017e 0300     		movs	r3, r0	@ tmp284,
 3291 0180 1A00     		movs	r2, r3	@ D.7946, tmp285
 3292 0182 914B     		ldr	r3, .L293+48	@ tmp286,
 3293 0184 D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp286
ARM GAS  /tmp/cc16P66I.s 			page 81


 3294 0186 924B     		ldr	r3, .L293+56	@ tmp287,
 3295 0188 1000     		movs	r0, r2	@ tmp288, D.7947
 3296 018a 1900     		movs	r1, r3	@ tmp289, tmp287
 3297 018c 0423     		movs	r3, #4	@ tmp290,
 3298 018e 1A00     		movs	r2, r3	@, tmp290
 3299 0190 FFF7FEFF 		bl	memcpy	@
1131:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3300              		.loc 1 1131 0
 3301 0194 0A9A     		ldr	r2, [sp, #40]	@ tmp293, ptrPORTremote
 3302 0196 8C4B     		ldr	r3, .L293+48	@ tmp294,
 3303 0198 1100     		movs	r1, r2	@, tmp293
 3304 019a 1800     		movs	r0, r3	@, tmp294
 3305 019c FFF7FEFF 		bl	strcat	@
1132:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3306              		.loc 1 1132 0
 3307 01a0 894B     		ldr	r3, .L293+48	@ tmp295,
 3308 01a2 1800     		movs	r0, r3	@, tmp295
 3309 01a4 FFF7FEFF 		bl	strlen	@
 3310 01a8 0300     		movs	r3, r0	@ tmp296,
 3311 01aa 1A00     		movs	r2, r3	@ D.7946, tmp297
 3312 01ac 864B     		ldr	r3, .L293+48	@ tmp298,
 3313 01ae D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp298
 3314 01b0 884B     		ldr	r3, .L293+60	@ tmp299,
 3315 01b2 1000     		movs	r0, r2	@ tmp300, D.7947
 3316 01b4 1900     		movs	r1, r3	@ tmp301, tmp299
 3317 01b6 0423     		movs	r3, #4	@ tmp302,
 3318 01b8 1A00     		movs	r2, r3	@, tmp302
 3319 01ba FFF7FEFF 		bl	memcpy	@
1133:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3320              		.loc 1 1133 0
 3321 01be 794B     		ldr	r3, .L293+12	@ tmp305,
 3322 01c0 0122     		movs	r2, #1	@ tmp306,
 3323 01c2 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSflag
 3324              	.L240:
1134:src/sim900_800.c **** 				}
1135:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
1136:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 3325              		.loc 1 1136 0
 3326 01c4 8449     		ldr	r1, .L293+64	@ tmp308,
 3327 01c6 7C4B     		ldr	r3, .L293+32	@ tmp309,
 3328 01c8 0E22     		movs	r2, #14	@,
 3329 01ca 1800     		movs	r0, r3	@, tmp309
 3330 01cc FFF7FEFF 		bl	strncmp	@
 3331 01d0 031E     		subs	r3, r0, #0	@ D.7945,,
 3332 01d2 08D1     		bne	.L241	@,
1137:src/sim900_800.c **** 				{
1138:src/sim900_800.c **** 					GSMConfigGPRSState -= 1;
 3333              		.loc 1 1138 0
 3334 01d4 704B     		ldr	r3, .L293	@ tmp310,
 3335 01d6 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3336 01d8 013B     		subs	r3, r3, #1	@ tmp311,
 3337 01da DAB2     		uxtb	r2, r3	@ D.7944, tmp311
 3338 01dc 6E4B     		ldr	r3, .L293	@ tmp312,
 3339 01de 1A70     		strb	r2, [r3]	@ tmp313, GSMConfigGPRSState
1139:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3340              		.loc 1 1139 0
 3341 01e0 704B     		ldr	r3, .L293+12	@ tmp314,
ARM GAS  /tmp/cc16P66I.s 			page 82


 3342 01e2 0122     		movs	r2, #1	@ tmp315,
 3343 01e4 1A70     		strb	r2, [r3]	@ tmp316, GSMConfigGPRSflag
 3344              	.L241:
1140:src/sim900_800.c **** 				}
1141:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
1142:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 3345              		.loc 1 1142 0
 3346 01e6 7D49     		ldr	r1, .L293+68	@ tmp317,
 3347 01e8 734B     		ldr	r3, .L293+32	@ tmp318,
 3348 01ea 0A22     		movs	r2, #10	@,
 3349 01ec 1800     		movs	r0, r3	@, tmp318
 3350 01ee FFF7FEFF 		bl	strncmp	@
 3351 01f2 031E     		subs	r3, r0, #0	@ D.7945,,
 3352 01f4 04D1     		bne	.L242	@,
1143:src/sim900_800.c **** 				{
1144:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3353              		.loc 1 1144 0
 3354 01f6 684B     		ldr	r3, .L293	@ tmp319,
 3355 01f8 0022     		movs	r2, #0	@ tmp320,
 3356 01fa 1A70     		strb	r2, [r3]	@ tmp321, GSMConfigGPRSState
1145:src/sim900_800.c **** 					return 2;
 3357              		.loc 1 1145 0
 3358 01fc 0223     		movs	r3, #2	@ D.7944,
 3359 01fe 34E3     		b	.L232	@
 3360              	.L242:
1146:src/sim900_800.c **** 				}
1147:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
1148:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
1149:src/sim900_800.c **** 				{
1150:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
1151:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
1152:src/sim900_800.c **** 				}
1153:src/sim900_800.c **** */
1154:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
1155:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 3361              		.loc 1 1155 0
 3362 0200 7749     		ldr	r1, .L293+72	@ tmp322,
 3363 0202 6D4B     		ldr	r3, .L293+32	@ tmp323,
 3364 0204 0A22     		movs	r2, #10	@,
 3365 0206 1800     		movs	r0, r3	@, tmp323
 3366 0208 FFF7FEFF 		bl	strncmp	@
 3367 020c 031E     		subs	r3, r0, #0	@ D.7945,,
 3368 020e 3AD1     		bne	.L243	@,
1156:src/sim900_800.c **** 				{
1157:src/sim900_800.c **** 					GSMConfigGPRSState += 10;
 3369              		.loc 1 1157 0
 3370 0210 614B     		ldr	r3, .L293	@ tmp324,
 3371 0212 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3372 0214 0A33     		adds	r3, r3, #10	@ tmp325,
 3373 0216 DAB2     		uxtb	r2, r3	@ D.7944, tmp325
 3374 0218 5F4B     		ldr	r3, .L293	@ tmp326,
 3375 021a 1A70     		strb	r2, [r3]	@ tmp327, GSMConfigGPRSState
1158:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
 3376              		.loc 1 1158 0
 3377 021c 6A4A     		ldr	r2, .L293+48	@ tmp328,
 3378 021e 6B4B     		ldr	r3, .L293+52	@ tmp329,
 3379 0220 1000     		movs	r0, r2	@ tmp330, tmp328
ARM GAS  /tmp/cc16P66I.s 			page 83


 3380 0222 1900     		movs	r1, r3	@ tmp331, tmp329
 3381 0224 1423     		movs	r3, #20	@ tmp332,
 3382 0226 1A00     		movs	r2, r3	@, tmp332
 3383 0228 FFF7FEFF 		bl	memcpy	@
1159:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
 3384              		.loc 1 1159 0
 3385 022c 099A     		ldr	r2, [sp, #36]	@ tmp335, ptrIPremote
 3386 022e 664B     		ldr	r3, .L293+48	@ tmp336,
 3387 0230 1100     		movs	r1, r2	@, tmp335
 3388 0232 1800     		movs	r0, r3	@, tmp336
 3389 0234 FFF7FEFF 		bl	strcat	@
1160:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3390              		.loc 1 1160 0
 3391 0238 634B     		ldr	r3, .L293+48	@ tmp337,
 3392 023a 1800     		movs	r0, r3	@, tmp337
 3393 023c FFF7FEFF 		bl	strlen	@
 3394 0240 0300     		movs	r3, r0	@ tmp338,
 3395 0242 1A00     		movs	r2, r3	@ D.7946, tmp339
 3396 0244 604B     		ldr	r3, .L293+48	@ tmp340,
 3397 0246 D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp340
 3398 0248 614B     		ldr	r3, .L293+56	@ tmp341,
 3399 024a 1000     		movs	r0, r2	@ tmp342, D.7947
 3400 024c 1900     		movs	r1, r3	@ tmp343, tmp341
 3401 024e 0423     		movs	r3, #4	@ tmp344,
 3402 0250 1A00     		movs	r2, r3	@, tmp344
 3403 0252 FFF7FEFF 		bl	memcpy	@
1161:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
 3404              		.loc 1 1161 0
 3405 0256 0A9A     		ldr	r2, [sp, #40]	@ tmp347, ptrPORTremote
 3406 0258 5B4B     		ldr	r3, .L293+48	@ tmp348,
 3407 025a 1100     		movs	r1, r2	@, tmp347
 3408 025c 1800     		movs	r0, r3	@, tmp348
 3409 025e FFF7FEFF 		bl	strcat	@
1162:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3410              		.loc 1 1162 0
 3411 0262 594B     		ldr	r3, .L293+48	@ tmp349,
 3412 0264 1800     		movs	r0, r3	@, tmp349
 3413 0266 FFF7FEFF 		bl	strlen	@
 3414 026a 0300     		movs	r3, r0	@ tmp350,
 3415 026c 1A00     		movs	r2, r3	@ D.7946, tmp351
 3416 026e 564B     		ldr	r3, .L293+48	@ tmp352,
 3417 0270 D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp352
 3418 0272 584B     		ldr	r3, .L293+60	@ tmp353,
 3419 0274 1000     		movs	r0, r2	@ tmp354, D.7947
 3420 0276 1900     		movs	r1, r3	@ tmp355, tmp353
 3421 0278 0423     		movs	r3, #4	@ tmp356,
 3422 027a 1A00     		movs	r2, r3	@, tmp356
 3423 027c FFF7FEFF 		bl	memcpy	@
1163:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3424              		.loc 1 1163 0
 3425 0280 484B     		ldr	r3, .L293+12	@ tmp359,
 3426 0282 0122     		movs	r2, #1	@ tmp360,
 3427 0284 1A70     		strb	r2, [r3]	@ tmp361, GSMConfigGPRSflag
 3428              	.L243:
1164:src/sim900_800.c **** 				}
1165:src/sim900_800.c **** 
1166:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
ARM GAS  /tmp/cc16P66I.s 			page 84


 3429              		.loc 1 1166 0
 3430 0286 5749     		ldr	r1, .L293+76	@ tmp362,
 3431 0288 4B4B     		ldr	r3, .L293+32	@ tmp363,
 3432 028a 0922     		movs	r2, #9	@,
 3433 028c 1800     		movs	r0, r3	@, tmp363
 3434 028e FFF7FEFF 		bl	strncmp	@
 3435 0292 031E     		subs	r3, r0, #0	@ D.7945,,
 3436 0294 08D1     		bne	.L244	@,
1167:src/sim900_800.c **** 				{
1168:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
 3437              		.loc 1 1168 0
 3438 0296 404B     		ldr	r3, .L293	@ tmp364,
 3439 0298 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3440 029a 0B33     		adds	r3, r3, #11	@ tmp365,
 3441 029c DAB2     		uxtb	r2, r3	@ D.7944, tmp365
 3442 029e 3E4B     		ldr	r3, .L293	@ tmp366,
 3443 02a0 1A70     		strb	r2, [r3]	@ tmp367, GSMConfigGPRSState
1169:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3444              		.loc 1 1169 0
 3445 02a2 404B     		ldr	r3, .L293+12	@ tmp368,
 3446 02a4 0122     		movs	r2, #1	@ tmp369,
 3447 02a6 1A70     		strb	r2, [r3]	@ tmp370, GSMConfigGPRSflag
 3448              	.L244:
1170:src/sim900_800.c **** 				}
1171:src/sim900_800.c **** 
1172:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 3449              		.loc 1 1172 0
 3450 02a8 4F49     		ldr	r1, .L293+80	@ tmp371,
 3451 02aa 434B     		ldr	r3, .L293+32	@ tmp372,
 3452 02ac 0922     		movs	r2, #9	@,
 3453 02ae 1800     		movs	r0, r3	@, tmp372
 3454 02b0 FFF7FEFF 		bl	strncmp	@
 3455 02b4 031E     		subs	r3, r0, #0	@ D.7945,,
 3456 02b6 00D0     		beq	.LCB2706	@
 3457 02b8 B6E2     		b	.L281	@long jump	@
 3458              	.LCB2706:
1173:src/sim900_800.c **** 				{
1174:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 3459              		.loc 1 1174 0
 3460 02ba 374B     		ldr	r3, .L293	@ tmp373,
 3461 02bc 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3462 02be 0D33     		adds	r3, r3, #13	@ tmp374,
 3463 02c0 DAB2     		uxtb	r2, r3	@ D.7944, tmp374
 3464 02c2 354B     		ldr	r3, .L293	@ tmp375,
 3465 02c4 1A70     		strb	r2, [r3]	@ tmp376, GSMConfigGPRSState
1175:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 3466              		.loc 1 1175 0
 3467 02c6 374B     		ldr	r3, .L293+12	@ tmp377,
 3468 02c8 0122     		movs	r2, #1	@ tmp378,
 3469 02ca 1A70     		strb	r2, [r3]	@ tmp379, GSMConfigGPRSflag
1176:src/sim900_800.c **** 				}
1177:src/sim900_800.c **** 			}
1178:src/sim900_800.c **** 			break;
 3470              		.loc 1 1178 0
 3471 02cc ACE2     		b	.L281	@
 3472              	.L217:
1179:src/sim900_800.c **** 
ARM GAS  /tmp/cc16P66I.s 			page 85


1180:src/sim900_800.c **** 		case 4:
1181:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3473              		.loc 1 1181 0
 3474 02ce 1724     		movs	r4, #23	@ tmp380,
 3475 02d0 6C44     		add	r4, r4, sp	@ tmp380,
 3476 02d2 354B     		ldr	r3, .L293+16	@ tmp381,
 3477 02d4 4548     		ldr	r0, .L293+84	@ tmp382,
 3478 02d6 0122     		movs	r2, #1	@,
 3479 02d8 3221     		movs	r1, #50	@,
 3480 02da FFF7FEFF 		bl	GSMSendCommand	@
 3481 02de 0300     		movs	r3, r0	@ tmp383,
 3482 02e0 2370     		strb	r3, [r4]	@ tmp385, i
1182:src/sim900_800.c **** 
1183:src/sim900_800.c **** 			if (i == 2)
 3483              		.loc 1 1183 0
 3484 02e2 1723     		movs	r3, #23	@ tmp386,
 3485 02e4 6B44     		add	r3, r3, sp	@ tmp386,
 3486 02e6 1B78     		ldrb	r3, [r3]	@ tmp387, i
 3487 02e8 022B     		cmp	r3, #2	@ tmp387,
 3488 02ea 1BD1     		bne	.L245	@,
1184:src/sim900_800.c **** 			{
1185:src/sim900_800.c **** 				if ((!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN:
 3489              		.loc 1 1185 0
 3490 02ec 4049     		ldr	r1, .L293+88	@ tmp388,
 3491 02ee 2E4B     		ldr	r3, .L293+16	@ tmp389,
 3492 02f0 0C22     		movs	r2, #12	@,
 3493 02f2 1800     		movs	r0, r3	@, tmp389
 3494 02f4 FFF7FEFF 		bl	strncmp	@
 3495 02f8 031E     		subs	r3, r0, #0	@ D.7945,,
 3496 02fa 07D0     		beq	.L246	@,
 3497              		.loc 1 1185 0 is_stmt 0 discriminator 1
 3498 02fc 3D49     		ldr	r1, .L293+92	@ tmp390,
 3499 02fe 2A4B     		ldr	r3, .L293+16	@ tmp391,
 3500 0300 0E22     		movs	r2, #14	@,
 3501 0302 1800     		movs	r0, r3	@, tmp391
 3502 0304 FFF7FEFF 		bl	strncmp	@
 3503 0308 031E     		subs	r3, r0, #0	@ D.7945,,
 3504 030a 06D1     		bne	.L247	@,
 3505              	.L246:
1186:src/sim900_800.c **** 				{
1187:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3506              		.loc 1 1187 0 is_stmt 1
 3507 030c 224B     		ldr	r3, .L293	@ tmp392,
 3508 030e 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3509 0310 0133     		adds	r3, r3, #1	@ tmp393,
 3510 0312 DAB2     		uxtb	r2, r3	@ D.7944, tmp393
 3511 0314 204B     		ldr	r3, .L293	@ tmp394,
 3512 0316 1A70     		strb	r2, [r3]	@ tmp395, GSMConfigGPRSState
 3513 0318 04E0     		b	.L245	@
 3514              	.L247:
1188:src/sim900_800.c **** 				}
1189:src/sim900_800.c **** 				else
1190:src/sim900_800.c **** 				{
1191:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3515              		.loc 1 1191 0
 3516 031a 1F4B     		ldr	r3, .L293	@ tmp396,
 3517 031c 0022     		movs	r2, #0	@ tmp397,
ARM GAS  /tmp/cc16P66I.s 			page 86


 3518 031e 1A70     		strb	r2, [r3]	@ tmp398, GSMConfigGPRSState
1192:src/sim900_800.c **** 					return 3;
 3519              		.loc 1 1192 0
 3520 0320 0323     		movs	r3, #3	@ D.7944,
 3521 0322 A2E2     		b	.L232	@
 3522              	.L245:
1193:src/sim900_800.c **** 				}
1194:src/sim900_800.c **** 			}
1195:src/sim900_800.c **** 
1196:src/sim900_800.c **** 			if (i > 2)
 3523              		.loc 1 1196 0
 3524 0324 1723     		movs	r3, #23	@ tmp399,
 3525 0326 6B44     		add	r3, r3, sp	@ tmp399,
 3526 0328 1B78     		ldrb	r3, [r3]	@ tmp400, i
 3527 032a 022B     		cmp	r3, #2	@ tmp400,
 3528 032c 00D8     		bhi	.LCB2773	@
 3529 032e 7DE2     		b	.L282	@long jump	@
 3530              	.LCB2773:
1197:src/sim900_800.c **** 			{
1198:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3531              		.loc 1 1198 0
 3532 0330 194B     		ldr	r3, .L293	@ tmp401,
 3533 0332 0022     		movs	r2, #0	@ tmp402,
 3534 0334 1A70     		strb	r2, [r3]	@ tmp403, GSMConfigGPRSState
1199:src/sim900_800.c **** 				return 3;
 3535              		.loc 1 1199 0
 3536 0336 0323     		movs	r3, #3	@ D.7944,
 3537 0338 97E2     		b	.L232	@
 3538              	.L218:
1200:src/sim900_800.c **** 			}
1201:src/sim900_800.c **** 			break;
1202:src/sim900_800.c **** 
1203:src/sim900_800.c **** 		case 5:
1204:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3539              		.loc 1 1204 0
 3540 033a 1724     		movs	r4, #23	@ tmp404,
 3541 033c 6C44     		add	r4, r4, sp	@ tmp404,
 3542 033e 1A4B     		ldr	r3, .L293+16	@ tmp405,
 3543 0340 2D48     		ldr	r0, .L293+96	@ tmp406,
 3544 0342 0122     		movs	r2, #1	@,
 3545 0344 3221     		movs	r1, #50	@,
 3546 0346 FFF7FEFF 		bl	GSMSendCommand	@
 3547 034a 0300     		movs	r3, r0	@ tmp407,
 3548 034c 2370     		strb	r3, [r4]	@ tmp409, i
1205:src/sim900_800.c **** 
1206:src/sim900_800.c **** 			if (i == 2)
 3549              		.loc 1 1206 0
 3550 034e 1723     		movs	r3, #23	@ tmp410,
 3551 0350 6B44     		add	r3, r3, sp	@ tmp410,
 3552 0352 1B78     		ldrb	r3, [r3]	@ tmp411, i
 3553 0354 022B     		cmp	r3, #2	@ tmp411,
 3554 0356 13D1     		bne	.L249	@,
1207:src/sim900_800.c **** 			{
1208:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 3555              		.loc 1 1208 0
 3556 0358 2849     		ldr	r1, .L293+100	@ tmp412,
 3557 035a 134B     		ldr	r3, .L293+16	@ tmp413,
ARM GAS  /tmp/cc16P66I.s 			page 87


 3558 035c 0A22     		movs	r2, #10	@,
 3559 035e 1800     		movs	r0, r3	@, tmp413
 3560 0360 FFF7FEFF 		bl	strncmp	@
 3561 0364 031E     		subs	r3, r0, #0	@ D.7945,,
 3562 0366 06D1     		bne	.L250	@,
1209:src/sim900_800.c **** 				{
1210:src/sim900_800.c **** 					GSMConfigGPRSState++;
 3563              		.loc 1 1210 0
 3564 0368 0B4B     		ldr	r3, .L293	@ tmp414,
 3565 036a 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3566 036c 0133     		adds	r3, r3, #1	@ tmp415,
 3567 036e DAB2     		uxtb	r2, r3	@ D.7944, tmp415
 3568 0370 094B     		ldr	r3, .L293	@ tmp416,
 3569 0372 1A70     		strb	r2, [r3]	@ tmp417, GSMConfigGPRSState
 3570 0374 04E0     		b	.L249	@
 3571              	.L250:
1211:src/sim900_800.c **** 				}
1212:src/sim900_800.c **** 				else
1213:src/sim900_800.c **** 				{
1214:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3572              		.loc 1 1214 0
 3573 0376 084B     		ldr	r3, .L293	@ tmp418,
 3574 0378 0022     		movs	r2, #0	@ tmp419,
 3575 037a 1A70     		strb	r2, [r3]	@ tmp420, GSMConfigGPRSState
1215:src/sim900_800.c **** 					return 3;
 3576              		.loc 1 1215 0
 3577 037c 0323     		movs	r3, #3	@ D.7944,
 3578 037e 74E2     		b	.L232	@
 3579              	.L249:
1216:src/sim900_800.c **** 				}
1217:src/sim900_800.c **** 			}
1218:src/sim900_800.c **** 
1219:src/sim900_800.c **** 			if (i > 2)
 3580              		.loc 1 1219 0
 3581 0380 1723     		movs	r3, #23	@ tmp421,
 3582 0382 6B44     		add	r3, r3, sp	@ tmp421,
 3583 0384 1B78     		ldrb	r3, [r3]	@ tmp422, i
 3584 0386 022B     		cmp	r3, #2	@ tmp422,
 3585 0388 00D8     		bhi	.LCB2826	@
 3586 038a 51E2     		b	.L283	@long jump	@
 3587              	.LCB2826:
1220:src/sim900_800.c **** 			{
1221:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3588              		.loc 1 1221 0
 3589 038c 024B     		ldr	r3, .L293	@ tmp423,
 3590 038e 0022     		movs	r2, #0	@ tmp424,
 3591 0390 1A70     		strb	r2, [r3]	@ tmp425, GSMConfigGPRSState
1222:src/sim900_800.c **** 				return 3;
 3592              		.loc 1 1222 0
 3593 0392 0323     		movs	r3, #3	@ D.7944,
 3594 0394 69E2     		b	.L232	@
 3595              	.L294:
 3596 0396 C046     		.align	2
 3597              	.L293:
 3598 0398 00000000 		.word	GSMConfigGPRSState
 3599 039c 00000000 		.word	.L213
 3600 03a0 00000000 		.word	GSMConfigGPRSTimeOut
ARM GAS  /tmp/cc16P66I.s 			page 88


 3601 03a4 00000000 		.word	GSMConfigGPRSflag
 3602 03a8 00000000 		.word	GSMbuffRtaCommand
 3603 03ac F8000000 		.word	.LC107
 3604 03b0 10010000 		.word	.LC109
 3605 03b4 00000000 		.word	GSM_IPINITIAL
 3606 03b8 00000000 		.word	GSMbuffStatus
 3607 03bc 00000000 		.word	GSM_IPSTART
 3608 03c0 00000000 		.word	GSM_IPGPRSACT
 3609 03c4 00000000 		.word	GSM_IPSTATUS
 3610 03c8 00000000 		.word	GSMbuffGPRSCommand
 3611 03cc 20010000 		.word	.LC117
 3612 03d0 34010000 		.word	.LC119
 3613 03d4 E8000000 		.word	.LC95
 3614 03d8 00000000 		.word	GSM_IPCONNECTING
 3615 03dc 00000000 		.word	GSM_IPCONNOK
 3616 03e0 00000000 		.word	GSM_IPCONNCLOSE
 3617 03e4 38010000 		.word	.LC125
 3618 03e8 44010000 		.word	.LC127
 3619 03ec 50010000 		.word	.LC129
 3620 03f0 5C010000 		.word	.LC131
 3621 03f4 6C010000 		.word	.LC133
 3622 03f8 7C010000 		.word	.LC135
 3623 03fc 88010000 		.word	.LC137
 3624              	.L219:
1223:src/sim900_800.c **** 			}
1224:src/sim900_800.c **** 			break;
1225:src/sim900_800.c **** 		case 6:
1226:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3625              		.loc 1 1226 0
 3626 0400 1724     		movs	r4, #23	@ tmp426,
 3627 0402 6C44     		add	r4, r4, sp	@ tmp426,
 3628 0404 CF4B     		ldr	r3, .L295	@ tmp427,
 3629 0406 D048     		ldr	r0, .L295+4	@ tmp428,
 3630 0408 0122     		movs	r2, #1	@,
 3631 040a 3221     		movs	r1, #50	@,
 3632 040c FFF7FEFF 		bl	GSMSendCommand	@
 3633 0410 0300     		movs	r3, r0	@ tmp429,
 3634 0412 2370     		strb	r3, [r4]	@ tmp431, i
1227:src/sim900_800.c **** 
1228:src/sim900_800.c **** 			if (i == 2)
 3635              		.loc 1 1228 0
 3636 0414 1723     		movs	r3, #23	@ tmp432,
 3637 0416 6B44     		add	r3, r3, sp	@ tmp432,
 3638 0418 1B78     		ldrb	r3, [r3]	@ tmp433, i
 3639 041a 022B     		cmp	r3, #2	@ tmp433,
 3640 041c 2DD1     		bne	.L252	@,
1229:src/sim900_800.c **** 			{
1230:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 3641              		.loc 1 1230 0
 3642 041e CB49     		ldr	r1, .L295+8	@ tmp434,
 3643 0420 C84B     		ldr	r3, .L295	@ tmp435,
 3644 0422 0522     		movs	r2, #5	@,
 3645 0424 1800     		movs	r0, r3	@, tmp435
 3646 0426 FFF7FEFF 		bl	strncmp	@
 3647 042a 031E     		subs	r3, r0, #0	@ D.7945,,
 3648 042c 20D1     		bne	.L253	@,
1231:src/sim900_800.c **** 				{
ARM GAS  /tmp/cc16P66I.s 			page 89


1232:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 3649              		.loc 1 1232 0
 3650 042e C54B     		ldr	r3, .L295	@ tmp436,
 3651 0430 9B79     		ldrb	r3, [r3, #6]	@ D.7944,
 3652 0432 303B     		subs	r3, r3, #48	@ D.7945,
 3653 0434 DBB2     		uxtb	r3, r3	@ D.7948, D.7945
 3654 0436 1A1C     		adds	r2, r3, #0	@ tmp438, tmp437
 3655 0438 9200     		lsls	r2, r2, #2	@ tmp439, tmp438,
 3656 043a D318     		adds	r3, r2, r3	@ tmp441, tmp440, tmp437
 3657 043c DB18     		adds	r3, r3, r3	@ tmp443, tmp442, tmp442
 3658 043e DAB2     		uxtb	r2, r3	@ D.7948, tmp441
 3659 0440 C04B     		ldr	r3, .L295	@ tmp444,
 3660 0442 DB79     		ldrb	r3, [r3, #7]	@ D.7944,
 3661 0444 D318     		adds	r3, r2, r3	@ tmp445, D.7948, D.7944
 3662 0446 DBB2     		uxtb	r3, r3	@ D.7948, tmp445
 3663 0448 303B     		subs	r3, r3, #48	@ tmp446,
 3664 044a DAB2     		uxtb	r2, r3	@ D.7948, tmp446
 3665 044c C04B     		ldr	r3, .L295+12	@ tmp447,
 3666 044e 1A70     		strb	r2, [r3]	@ tmp448, GPRSrssi
1233:src/sim900_800.c **** 
1234:src/sim900_800.c **** 						if (GPRSrssi != 99)
 3667              		.loc 1 1234 0
 3668 0450 BF4B     		ldr	r3, .L295+12	@ tmp449,
 3669 0452 1B78     		ldrb	r3, [r3]	@ D.7948, GPRSrssi
 3670 0454 632B     		cmp	r3, #99	@ D.7948,
 3671 0456 06D0     		beq	.L254	@,
1235:src/sim900_800.c **** 							GSMConfigGPRSState++;
 3672              		.loc 1 1235 0
 3673 0458 BE4B     		ldr	r3, .L295+16	@ tmp450,
 3674 045a 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3675 045c 0133     		adds	r3, r3, #1	@ tmp451,
 3676 045e DAB2     		uxtb	r2, r3	@ D.7944, tmp451
 3677 0460 BC4B     		ldr	r3, .L295+16	@ tmp452,
 3678 0462 1A70     		strb	r2, [r3]	@ tmp453, GSMConfigGPRSState
 3679 0464 09E0     		b	.L252	@
 3680              	.L254:
1236:src/sim900_800.c **** 						else
1237:src/sim900_800.c **** 						{
1238:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 3681              		.loc 1 1238 0
 3682 0466 BB4B     		ldr	r3, .L295+16	@ tmp454,
 3683 0468 0022     		movs	r2, #0	@ tmp455,
 3684 046a 1A70     		strb	r2, [r3]	@ tmp456, GSMConfigGPRSState
1239:src/sim900_800.c **** 							return 20;
 3685              		.loc 1 1239 0
 3686 046c 1423     		movs	r3, #20	@ D.7944,
 3687 046e FCE1     		b	.L232	@
 3688              	.L253:
1240:src/sim900_800.c **** 						}
1241:src/sim900_800.c **** 				}
1242:src/sim900_800.c **** 				else
1243:src/sim900_800.c **** 				{
1244:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 3689              		.loc 1 1244 0
 3690 0470 B84B     		ldr	r3, .L295+16	@ tmp457,
 3691 0472 0022     		movs	r2, #0	@ tmp458,
 3692 0474 1A70     		strb	r2, [r3]	@ tmp459, GSMConfigGPRSState
ARM GAS  /tmp/cc16P66I.s 			page 90


1245:src/sim900_800.c **** 					return 3;
 3693              		.loc 1 1245 0
 3694 0476 0323     		movs	r3, #3	@ D.7944,
 3695 0478 F7E1     		b	.L232	@
 3696              	.L252:
1246:src/sim900_800.c **** 				}
1247:src/sim900_800.c **** 			}
1248:src/sim900_800.c **** 
1249:src/sim900_800.c **** 			if (i > 2)
 3697              		.loc 1 1249 0
 3698 047a 1723     		movs	r3, #23	@ tmp460,
 3699 047c 6B44     		add	r3, r3, sp	@ tmp460,
 3700 047e 1B78     		ldrb	r3, [r3]	@ tmp461, i
 3701 0480 022B     		cmp	r3, #2	@ tmp461,
 3702 0482 00D8     		bhi	.LCB2939	@
 3703 0484 D6E1     		b	.L284	@long jump	@
 3704              	.LCB2939:
1250:src/sim900_800.c **** 			{
1251:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3705              		.loc 1 1251 0
 3706 0486 B34B     		ldr	r3, .L295+16	@ tmp462,
 3707 0488 0022     		movs	r2, #0	@ tmp463,
 3708 048a 1A70     		strb	r2, [r3]	@ tmp464, GSMConfigGPRSState
1252:src/sim900_800.c **** 				return 3;
 3709              		.loc 1 1252 0
 3710 048c 0323     		movs	r3, #3	@ D.7944,
 3711 048e ECE1     		b	.L232	@
 3712              	.L220:
1253:src/sim900_800.c **** 			}
1254:src/sim900_800.c **** 			break;
1255:src/sim900_800.c **** 		case 7:
1256:src/sim900_800.c **** 
1257:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 3713              		.loc 1 1257 0
 3714 0490 1724     		movs	r4, #23	@ tmp465,
 3715 0492 6C44     		add	r4, r4, sp	@ tmp465,
 3716 0494 AB4B     		ldr	r3, .L295	@ tmp466,
 3717 0496 B048     		ldr	r0, .L295+20	@ tmp467,
 3718 0498 0022     		movs	r2, #0	@,
 3719 049a 3221     		movs	r1, #50	@,
 3720 049c FFF7FEFF 		bl	GSMSendCommand	@
 3721 04a0 0300     		movs	r3, r0	@ tmp468,
 3722 04a2 2370     		strb	r3, [r4]	@ tmp470, i
1258:src/sim900_800.c **** 
1259:src/sim900_800.c **** 			if (i == 2)
 3723              		.loc 1 1259 0
 3724 04a4 1723     		movs	r3, #23	@ tmp471,
 3725 04a6 6B44     		add	r3, r3, sp	@ tmp471,
 3726 04a8 1B78     		ldrb	r3, [r3]	@ tmp472, i
 3727 04aa 022B     		cmp	r3, #2	@ tmp472,
 3728 04ac 05D1     		bne	.L256	@,
1260:src/sim900_800.c **** 			{
1261:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3729              		.loc 1 1261 0
 3730 04ae A94B     		ldr	r3, .L295+16	@ tmp473,
 3731 04b0 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3732 04b2 0133     		adds	r3, r3, #1	@ tmp474,
ARM GAS  /tmp/cc16P66I.s 			page 91


 3733 04b4 DAB2     		uxtb	r2, r3	@ D.7944, tmp474
 3734 04b6 A74B     		ldr	r3, .L295+16	@ tmp475,
 3735 04b8 1A70     		strb	r2, [r3]	@ tmp476, GSMConfigGPRSState
 3736              	.L256:
1262:src/sim900_800.c **** 			}
1263:src/sim900_800.c **** 
1264:src/sim900_800.c **** 			if (i > 2)
 3737              		.loc 1 1264 0
 3738 04ba 1723     		movs	r3, #23	@ tmp477,
 3739 04bc 6B44     		add	r3, r3, sp	@ tmp477,
 3740 04be 1B78     		ldrb	r3, [r3]	@ tmp478, i
 3741 04c0 022B     		cmp	r3, #2	@ tmp478,
 3742 04c2 00D8     		bhi	.LCB2974	@
 3743 04c4 B8E1     		b	.L285	@long jump	@
 3744              	.LCB2974:
1265:src/sim900_800.c **** 			{
1266:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3745              		.loc 1 1266 0
 3746 04c6 A34B     		ldr	r3, .L295+16	@ tmp479,
 3747 04c8 0022     		movs	r2, #0	@ tmp480,
 3748 04ca 1A70     		strb	r2, [r3]	@ tmp481, GSMConfigGPRSState
1267:src/sim900_800.c **** 				return 3;
 3749              		.loc 1 1267 0
 3750 04cc 0323     		movs	r3, #3	@ D.7944,
 3751 04ce CCE1     		b	.L232	@
 3752              	.L221:
1268:src/sim900_800.c **** 			}
1269:src/sim900_800.c **** 			break;
1270:src/sim900_800.c **** 
1271:src/sim900_800.c **** 		case 8:
1272:src/sim900_800.c **** 
1273:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 3753              		.loc 1 1273 0
 3754 04d0 1724     		movs	r4, #23	@ tmp482,
 3755 04d2 6C44     		add	r4, r4, sp	@ tmp482,
 3756 04d4 9B4B     		ldr	r3, .L295	@ tmp483,
 3757 04d6 A148     		ldr	r0, .L295+24	@ tmp484,
 3758 04d8 0122     		movs	r2, #1	@,
 3759 04da 3221     		movs	r1, #50	@,
 3760 04dc FFF7FEFF 		bl	GSMSendCommand	@
 3761 04e0 0300     		movs	r3, r0	@ tmp485,
 3762 04e2 2370     		strb	r3, [r4]	@ tmp487, i
1274:src/sim900_800.c **** 
1275:src/sim900_800.c **** 			if (i == 2)
 3763              		.loc 1 1275 0
 3764 04e4 1723     		movs	r3, #23	@ tmp488,
 3765 04e6 6B44     		add	r3, r3, sp	@ tmp488,
 3766 04e8 1B78     		ldrb	r3, [r3]	@ tmp489, i
 3767 04ea 022B     		cmp	r3, #2	@ tmp489,
 3768 04ec 38D1     		bne	.L258	@,
1276:src/sim900_800.c **** 			{
1277:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 3769              		.loc 1 1277 0
 3770 04ee 9C49     		ldr	r1, .L295+28	@ tmp490,
 3771 04f0 944B     		ldr	r3, .L295	@ tmp491,
 3772 04f2 0722     		movs	r2, #7	@,
 3773 04f4 1800     		movs	r0, r3	@, tmp491
ARM GAS  /tmp/cc16P66I.s 			page 92


 3774 04f6 FFF7FEFF 		bl	strncmp	@
 3775 04fa 031E     		subs	r3, r0, #0	@ D.7945,,
 3776 04fc 30D1     		bne	.L258	@,
1278:src/sim900_800.c **** 				{
1279:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 3777              		.loc 1 1279 0
 3778 04fe 914B     		ldr	r3, .L295	@ tmp492,
 3779 0500 1B7A     		ldrb	r3, [r3, #8]	@ D.7944,
 3780 0502 312B     		cmp	r3, #49	@ D.7944,
 3781 0504 23D1     		bne	.L259	@,
1280:src/sim900_800.c **** 					{
1281:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 3782              		.loc 1 1281 0
 3783 0506 934B     		ldr	r3, .L295+16	@ tmp493,
 3784 0508 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3785 050a 0133     		adds	r3, r3, #1	@ tmp494,
 3786 050c DAB2     		uxtb	r2, r3	@ D.7944, tmp494
 3787 050e 914B     		ldr	r3, .L295+16	@ tmp495,
 3788 0510 1A70     		strb	r2, [r3]	@ tmp496, GSMConfigGPRSState
1282:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 3789              		.loc 1 1282 0
 3790 0512 944A     		ldr	r2, .L295+32	@ tmp497,
 3791 0514 944B     		ldr	r3, .L295+36	@ tmp498,
 3792 0516 1000     		movs	r0, r2	@ tmp499, tmp497
 3793 0518 1900     		movs	r1, r3	@ tmp500, tmp498
 3794 051a 1423     		movs	r3, #20	@ tmp501,
 3795 051c 1A00     		movs	r2, r3	@, tmp501
 3796 051e FFF7FEFF 		bl	memcpy	@
1283:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3797              		.loc 1 1283 0
 3798 0522 029A     		ldr	r2, [sp, #8]	@ tmp504, ptrAPN
 3799 0524 8F4B     		ldr	r3, .L295+32	@ tmp505,
 3800 0526 1100     		movs	r1, r2	@, tmp504
 3801 0528 1800     		movs	r0, r3	@, tmp505
 3802 052a FFF7FEFF 		bl	strcat	@
1284:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3803              		.loc 1 1284 0
 3804 052e 8D4B     		ldr	r3, .L295+32	@ tmp506,
 3805 0530 1800     		movs	r0, r3	@, tmp506
 3806 0532 FFF7FEFF 		bl	strlen	@
 3807 0536 0300     		movs	r3, r0	@ tmp507,
 3808 0538 1A00     		movs	r2, r3	@ D.7946, tmp508
 3809 053a 8A4B     		ldr	r3, .L295+32	@ tmp509,
 3810 053c D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp509
 3811 053e 8B4B     		ldr	r3, .L295+40	@ tmp510,
 3812 0540 1000     		movs	r0, r2	@ tmp511, D.7947
 3813 0542 1900     		movs	r1, r3	@ tmp512, tmp510
 3814 0544 0423     		movs	r3, #4	@ tmp513,
 3815 0546 1A00     		movs	r2, r3	@, tmp513
 3816 0548 FFF7FEFF 		bl	memcpy	@
 3817 054c 08E0     		b	.L258	@
 3818              	.L259:
1285:src/sim900_800.c **** 					}
1286:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 3819              		.loc 1 1286 0
 3820 054e 7D4B     		ldr	r3, .L295	@ tmp516,
 3821 0550 1B7A     		ldrb	r3, [r3, #8]	@ D.7944,
ARM GAS  /tmp/cc16P66I.s 			page 93


 3822 0552 302B     		cmp	r3, #48	@ D.7944,
 3823 0554 04D1     		bne	.L258	@,
1287:src/sim900_800.c **** 					{
1288:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 3824              		.loc 1 1288 0
 3825 0556 7F4B     		ldr	r3, .L295+16	@ tmp517,
 3826 0558 0022     		movs	r2, #0	@ tmp518,
 3827 055a 1A70     		strb	r2, [r3]	@ tmp519, GSMConfigGPRSState
1289:src/sim900_800.c **** 						return 3;
 3828              		.loc 1 1289 0
 3829 055c 0323     		movs	r3, #3	@ D.7944,
 3830 055e 84E1     		b	.L232	@
 3831              	.L258:
1290:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
1291:src/sim900_800.c **** 					}
1292:src/sim900_800.c **** 				}
1293:src/sim900_800.c **** 			}
1294:src/sim900_800.c **** 
1295:src/sim900_800.c **** 			if (i > 2)
 3832              		.loc 1 1295 0
 3833 0560 1723     		movs	r3, #23	@ tmp520,
 3834 0562 6B44     		add	r3, r3, sp	@ tmp520,
 3835 0564 1B78     		ldrb	r3, [r3]	@ tmp521, i
 3836 0566 022B     		cmp	r3, #2	@ tmp521,
 3837 0568 00D8     		bhi	.LCB3060	@
 3838 056a 67E1     		b	.L286	@long jump	@
 3839              	.LCB3060:
1296:src/sim900_800.c **** 			{
1297:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3840              		.loc 1 1297 0
 3841 056c 794B     		ldr	r3, .L295+16	@ tmp522,
 3842 056e 0022     		movs	r2, #0	@ tmp523,
 3843 0570 1A70     		strb	r2, [r3]	@ tmp524, GSMConfigGPRSState
1298:src/sim900_800.c **** 				return 3;
 3844              		.loc 1 1298 0
 3845 0572 0323     		movs	r3, #3	@ D.7944,
 3846 0574 79E1     		b	.L232	@
 3847              	.L222:
1299:src/sim900_800.c **** 			}
1300:src/sim900_800.c **** 
1301:src/sim900_800.c **** 			break;
1302:src/sim900_800.c **** 
1303:src/sim900_800.c **** 		case 9:
1304:src/sim900_800.c **** 
1305:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3848              		.loc 1 1305 0
 3849 0576 1724     		movs	r4, #23	@ tmp525,
 3850 0578 6C44     		add	r4, r4, sp	@ tmp525,
 3851 057a 724B     		ldr	r3, .L295	@ tmp526,
 3852 057c 7948     		ldr	r0, .L295+32	@ tmp527,
 3853 057e 0022     		movs	r2, #0	@,
 3854 0580 3221     		movs	r1, #50	@,
 3855 0582 FFF7FEFF 		bl	GSMSendCommand	@
 3856 0586 0300     		movs	r3, r0	@ tmp528,
 3857 0588 2370     		strb	r3, [r4]	@ tmp530, i
1306:src/sim900_800.c **** 
1307:src/sim900_800.c **** 			if (i == 2)
ARM GAS  /tmp/cc16P66I.s 			page 94


 3858              		.loc 1 1307 0
 3859 058a 1723     		movs	r3, #23	@ tmp531,
 3860 058c 6B44     		add	r3, r3, sp	@ tmp531,
 3861 058e 1B78     		ldrb	r3, [r3]	@ tmp532, i
 3862 0590 022B     		cmp	r3, #2	@ tmp532,
 3863 0592 4CD1     		bne	.L261	@,
1308:src/sim900_800.c **** 			{
1309:src/sim900_800.c **** 				GSMConfigGPRSState++;
 3864              		.loc 1 1309 0
 3865 0594 6F4B     		ldr	r3, .L295+16	@ tmp533,
 3866 0596 1B78     		ldrb	r3, [r3]	@ D.7944, GSMConfigGPRSState
 3867 0598 0133     		adds	r3, r3, #1	@ tmp534,
 3868 059a DAB2     		uxtb	r2, r3	@ D.7944, tmp534
 3869 059c 6D4B     		ldr	r3, .L295+16	@ tmp535,
 3870 059e 1A70     		strb	r2, [r3]	@ tmp536, GSMConfigGPRSState
1310:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 3871              		.loc 1 1310 0
 3872 05a0 704A     		ldr	r2, .L295+32	@ tmp537,
 3873 05a2 734B     		ldr	r3, .L295+44	@ tmp538,
 3874 05a4 1000     		movs	r0, r2	@ tmp539, tmp537
 3875 05a6 1900     		movs	r1, r3	@ tmp540, tmp538
 3876 05a8 0A23     		movs	r3, #10	@ tmp541,
 3877 05aa 1A00     		movs	r2, r3	@, tmp541
 3878 05ac FFF7FEFF 		bl	memcpy	@
1311:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 3879              		.loc 1 1311 0
 3880 05b0 029A     		ldr	r2, [sp, #8]	@ tmp544, ptrAPN
 3881 05b2 6C4B     		ldr	r3, .L295+32	@ tmp545,
 3882 05b4 1100     		movs	r1, r2	@, tmp544
 3883 05b6 1800     		movs	r0, r3	@, tmp545
 3884 05b8 FFF7FEFF 		bl	strcat	@
1312:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3885              		.loc 1 1312 0
 3886 05bc 694B     		ldr	r3, .L295+32	@ tmp546,
 3887 05be 1800     		movs	r0, r3	@, tmp546
 3888 05c0 FFF7FEFF 		bl	strlen	@
 3889 05c4 0300     		movs	r3, r0	@ tmp547,
 3890 05c6 1A00     		movs	r2, r3	@ D.7946, tmp548
 3891 05c8 664B     		ldr	r3, .L295+32	@ tmp549,
 3892 05ca D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp549
 3893 05cc 694B     		ldr	r3, .L295+48	@ tmp550,
 3894 05ce 1000     		movs	r0, r2	@ tmp551, D.7947
 3895 05d0 1900     		movs	r1, r3	@ tmp552, tmp550
 3896 05d2 0423     		movs	r3, #4	@ tmp553,
 3897 05d4 1A00     		movs	r2, r3	@, tmp553
 3898 05d6 FFF7FEFF 		bl	memcpy	@
1313:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 3899              		.loc 1 1313 0
 3900 05da 019A     		ldr	r2, [sp, #4]	@ tmp556, ptrUSER
 3901 05dc 614B     		ldr	r3, .L295+32	@ tmp557,
 3902 05de 1100     		movs	r1, r2	@, tmp556
 3903 05e0 1800     		movs	r0, r3	@, tmp557
 3904 05e2 FFF7FEFF 		bl	strcat	@
1314:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 3905              		.loc 1 1314 0
 3906 05e6 5F4B     		ldr	r3, .L295+32	@ tmp558,
 3907 05e8 1800     		movs	r0, r3	@, tmp558
ARM GAS  /tmp/cc16P66I.s 			page 95


 3908 05ea FFF7FEFF 		bl	strlen	@
 3909 05ee 0300     		movs	r3, r0	@ tmp559,
 3910 05f0 1A00     		movs	r2, r3	@ D.7946, tmp560
 3911 05f2 5C4B     		ldr	r3, .L295+32	@ tmp561,
 3912 05f4 D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp561
 3913 05f6 5F4B     		ldr	r3, .L295+48	@ tmp562,
 3914 05f8 1000     		movs	r0, r2	@ tmp563, D.7947
 3915 05fa 1900     		movs	r1, r3	@ tmp564, tmp562
 3916 05fc 0423     		movs	r3, #4	@ tmp565,
 3917 05fe 1A00     		movs	r2, r3	@, tmp565
 3918 0600 FFF7FEFF 		bl	memcpy	@
1315:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 3919              		.loc 1 1315 0
 3920 0604 009A     		ldr	r2, [sp]	@ tmp568, ptrKEY
 3921 0606 574B     		ldr	r3, .L295+32	@ tmp569,
 3922 0608 1100     		movs	r1, r2	@, tmp568
 3923 060a 1800     		movs	r0, r3	@, tmp569
 3924 060c FFF7FEFF 		bl	strcat	@
1316:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 3925              		.loc 1 1316 0
 3926 0610 544B     		ldr	r3, .L295+32	@ tmp570,
 3927 0612 1800     		movs	r0, r3	@, tmp570
 3928 0614 FFF7FEFF 		bl	strlen	@
 3929 0618 0300     		movs	r3, r0	@ tmp571,
 3930 061a 1A00     		movs	r2, r3	@ D.7946, tmp572
 3931 061c 514B     		ldr	r3, .L295+32	@ tmp573,
 3932 061e D218     		adds	r2, r2, r3	@ D.7947, D.7946, tmp573
 3933 0620 524B     		ldr	r3, .L295+40	@ tmp574,
 3934 0622 1000     		movs	r0, r2	@ tmp575, D.7947
 3935 0624 1900     		movs	r1, r3	@ tmp576, tmp574
 3936 0626 0423     		movs	r3, #4	@ tmp577,
 3937 0628 1A00     		movs	r2, r3	@, tmp577
 3938 062a FFF7FEFF 		bl	memcpy	@
 3939              	.L261:
1317:src/sim900_800.c **** 			}
1318:src/sim900_800.c **** 
1319:src/sim900_800.c **** 			if (i > 2)
 3940              		.loc 1 1319 0
 3941 062e 1723     		movs	r3, #23	@ tmp580,
 3942 0630 6B44     		add	r3, r3, sp	@ tmp580,
 3943 0632 1B78     		ldrb	r3, [r3]	@ tmp581, i
 3944 0634 022B     		cmp	r3, #2	@ tmp581,
 3945 0636 00D8     		bhi	.LCB3156	@
 3946 0638 02E1     		b	.L287	@long jump	@
 3947              	.LCB3156:
1320:src/sim900_800.c **** 			{
1321:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3948              		.loc 1 1321 0
 3949 063a 464B     		ldr	r3, .L295+16	@ tmp582,
 3950 063c 0022     		movs	r2, #0	@ tmp583,
 3951 063e 1A70     		strb	r2, [r3]	@ tmp584, GSMConfigGPRSState
1322:src/sim900_800.c **** 				return 3;
 3952              		.loc 1 1322 0
 3953 0640 0323     		movs	r3, #3	@ D.7944,
 3954 0642 12E1     		b	.L232	@
 3955              	.L223:
1323:src/sim900_800.c **** 			}
ARM GAS  /tmp/cc16P66I.s 			page 96


1324:src/sim900_800.c **** 			break;
1325:src/sim900_800.c **** 
1326:src/sim900_800.c **** 		case 10:
1327:src/sim900_800.c **** 
1328:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 3956              		.loc 1 1328 0
 3957 0644 1724     		movs	r4, #23	@ tmp585,
 3958 0646 6C44     		add	r4, r4, sp	@ tmp585,
 3959 0648 3E4B     		ldr	r3, .L295	@ tmp586,
 3960 064a 4648     		ldr	r0, .L295+32	@ tmp587,
 3961 064c 0022     		movs	r2, #0	@,
 3962 064e 3221     		movs	r1, #50	@,
 3963 0650 FFF7FEFF 		bl	GSMSendCommand	@
 3964 0654 0300     		movs	r3, r0	@ tmp588,
 3965 0656 2370     		strb	r3, [r4]	@ tmp590, i
1329:src/sim900_800.c **** 
1330:src/sim900_800.c **** 			if (i == 2)
 3966              		.loc 1 1330 0
 3967 0658 1723     		movs	r3, #23	@ tmp591,
 3968 065a 6B44     		add	r3, r3, sp	@ tmp591,
 3969 065c 1B78     		ldrb	r3, [r3]	@ tmp592, i
 3970 065e 022B     		cmp	r3, #2	@ tmp592,
 3971 0660 02D1     		bne	.L263	@,
1331:src/sim900_800.c **** 			{
1332:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 3972              		.loc 1 1332 0
 3973 0662 3C4B     		ldr	r3, .L295+16	@ tmp593,
 3974 0664 0222     		movs	r2, #2	@ tmp594,
 3975 0666 1A70     		strb	r2, [r3]	@ tmp595, GSMConfigGPRSState
 3976              	.L263:
1333:src/sim900_800.c **** 			}
1334:src/sim900_800.c **** 
1335:src/sim900_800.c **** 			if (i > 2)
 3977              		.loc 1 1335 0
 3978 0668 1723     		movs	r3, #23	@ tmp596,
 3979 066a 6B44     		add	r3, r3, sp	@ tmp596,
 3980 066c 1B78     		ldrb	r3, [r3]	@ tmp597, i
 3981 066e 022B     		cmp	r3, #2	@ tmp597,
 3982 0670 00D8     		bhi	.LCB3188	@
 3983 0672 E7E0     		b	.L288	@long jump	@
 3984              	.LCB3188:
1336:src/sim900_800.c **** 			{
1337:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 3985              		.loc 1 1337 0
 3986 0674 374B     		ldr	r3, .L295+16	@ tmp598,
 3987 0676 0022     		movs	r2, #0	@ tmp599,
 3988 0678 1A70     		strb	r2, [r3]	@ tmp600, GSMConfigGPRSState
1338:src/sim900_800.c **** 				return 3;
 3989              		.loc 1 1338 0
 3990 067a 0323     		movs	r3, #3	@ D.7944,
 3991 067c F5E0     		b	.L232	@
 3992              	.L224:
1339:src/sim900_800.c **** 			}
1340:src/sim900_800.c **** 			break;
1341:src/sim900_800.c **** 
1342:src/sim900_800.c **** 		case 11:
1343:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
ARM GAS  /tmp/cc16P66I.s 			page 97


 3993              		.loc 1 1343 0
 3994 067e 1724     		movs	r4, #23	@ tmp601,
 3995 0680 6C44     		add	r4, r4, sp	@ tmp601,
 3996 0682 304B     		ldr	r3, .L295	@ tmp602,
 3997 0684 3C48     		ldr	r0, .L295+52	@ tmp603,
 3998 0686 0022     		movs	r2, #0	@,
 3999 0688 C821     		movs	r1, #200	@,
 4000 068a FFF7FEFF 		bl	GSMSendCommand	@
 4001 068e 0300     		movs	r3, r0	@ tmp604,
 4002 0690 2370     		strb	r3, [r4]	@ tmp606, i
1344:src/sim900_800.c **** 
1345:src/sim900_800.c **** 			if (i == 2)
 4003              		.loc 1 1345 0
 4004 0692 1723     		movs	r3, #23	@ tmp607,
 4005 0694 6B44     		add	r3, r3, sp	@ tmp607,
 4006 0696 1B78     		ldrb	r3, [r3]	@ tmp608, i
 4007 0698 022B     		cmp	r3, #2	@ tmp608,
 4008 069a 02D1     		bne	.L265	@,
1346:src/sim900_800.c **** 			{
1347:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 4009              		.loc 1 1347 0
 4010 069c 2D4B     		ldr	r3, .L295+16	@ tmp609,
 4011 069e 0222     		movs	r2, #2	@ tmp610,
 4012 06a0 1A70     		strb	r2, [r3]	@ tmp611, GSMConfigGPRSState
 4013              	.L265:
1348:src/sim900_800.c **** 			}
1349:src/sim900_800.c **** 
1350:src/sim900_800.c **** 			if (i > 2)
 4014              		.loc 1 1350 0
 4015 06a2 1723     		movs	r3, #23	@ tmp612,
 4016 06a4 6B44     		add	r3, r3, sp	@ tmp612,
 4017 06a6 1B78     		ldrb	r3, [r3]	@ tmp613, i
 4018 06a8 022B     		cmp	r3, #2	@ tmp613,
 4019 06aa 00D8     		bhi	.LCB3220	@
 4020 06ac CCE0     		b	.L289	@long jump	@
 4021              	.LCB3220:
1351:src/sim900_800.c **** 			{
1352:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4022              		.loc 1 1352 0
 4023 06ae 294B     		ldr	r3, .L295+16	@ tmp614,
 4024 06b0 0022     		movs	r2, #0	@ tmp615,
 4025 06b2 1A70     		strb	r2, [r3]	@ tmp616, GSMConfigGPRSState
1353:src/sim900_800.c **** 				return 3;
 4026              		.loc 1 1353 0
 4027 06b4 0323     		movs	r3, #3	@ D.7944,
 4028 06b6 D8E0     		b	.L232	@
 4029              	.L225:
1354:src/sim900_800.c **** 			}
1355:src/sim900_800.c **** 			break;
1356:src/sim900_800.c **** 
1357:src/sim900_800.c **** 		case 12:
1358:src/sim900_800.c **** 
1359:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 4030              		.loc 1 1359 0
 4031 06b8 304B     		ldr	r3, .L295+56	@ tmp617,
 4032 06ba 0322     		movs	r2, #3	@ tmp618,
 4033 06bc 1A70     		strb	r2, [r3]	@ tmp619, GSMConfigGPRSflag
ARM GAS  /tmp/cc16P66I.s 			page 98


1360:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4034              		.loc 1 1360 0
 4035 06be 1724     		movs	r4, #23	@ tmp620,
 4036 06c0 6C44     		add	r4, r4, sp	@ tmp620,
 4037 06c2 204B     		ldr	r3, .L295	@ tmp621,
 4038 06c4 2E48     		ldr	r0, .L295+60	@ tmp622,
 4039 06c6 0022     		movs	r2, #0	@,
 4040 06c8 3221     		movs	r1, #50	@,
 4041 06ca FFF7FEFF 		bl	GSMSendCommand	@
 4042 06ce 0300     		movs	r3, r0	@ tmp623,
 4043 06d0 2370     		strb	r3, [r4]	@ tmp625, i
1361:src/sim900_800.c **** 
1362:src/sim900_800.c **** 			if (i == 2)
 4044              		.loc 1 1362 0
 4045 06d2 1723     		movs	r3, #23	@ tmp626,
 4046 06d4 6B44     		add	r3, r3, sp	@ tmp626,
 4047 06d6 1B78     		ldrb	r3, [r3]	@ tmp627, i
 4048 06d8 022B     		cmp	r3, #2	@ tmp627,
 4049 06da 05D1     		bne	.L267	@,
1363:src/sim900_800.c **** 			{
1364:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 4050              		.loc 1 1364 0
 4051 06dc 1D4B     		ldr	r3, .L295+16	@ tmp628,
 4052 06de 0222     		movs	r2, #2	@ tmp629,
 4053 06e0 1A70     		strb	r2, [r3]	@ tmp630, GSMConfigGPRSState
1365:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 4054              		.loc 1 1365 0
 4055 06e2 264B     		ldr	r3, .L295+56	@ tmp631,
 4056 06e4 0122     		movs	r2, #1	@ tmp632,
 4057 06e6 1A70     		strb	r2, [r3]	@ tmp633, GSMConfigGPRSflag
 4058              	.L267:
1366:src/sim900_800.c **** 			}
1367:src/sim900_800.c **** 
1368:src/sim900_800.c **** 			if (i > 2)
 4059              		.loc 1 1368 0
 4060 06e8 1723     		movs	r3, #23	@ tmp634,
 4061 06ea 6B44     		add	r3, r3, sp	@ tmp634,
 4062 06ec 1B78     		ldrb	r3, [r3]	@ tmp635, i
 4063 06ee 022B     		cmp	r3, #2	@ tmp635,
 4064 06f0 00D8     		bhi	.LCB3258	@
 4065 06f2 ABE0     		b	.L290	@long jump	@
 4066              	.LCB3258:
1369:src/sim900_800.c **** 			{
1370:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4067              		.loc 1 1370 0
 4068 06f4 174B     		ldr	r3, .L295+16	@ tmp636,
 4069 06f6 0022     		movs	r2, #0	@ tmp637,
 4070 06f8 1A70     		strb	r2, [r3]	@ tmp638, GSMConfigGPRSState
1371:src/sim900_800.c **** 				return 3;
 4071              		.loc 1 1371 0
 4072 06fa 0323     		movs	r3, #3	@ D.7944,
 4073 06fc B5E0     		b	.L232	@
 4074              	.L226:
1372:src/sim900_800.c **** 			}
1373:src/sim900_800.c **** 			break;
1374:src/sim900_800.c **** 		case 13:
1375:src/sim900_800.c **** 
ARM GAS  /tmp/cc16P66I.s 			page 99


1376:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 4075              		.loc 1 1376 0
 4076 06fe 1724     		movs	r4, #23	@ tmp639,
 4077 0700 6C44     		add	r4, r4, sp	@ tmp639,
 4078 0702 104B     		ldr	r3, .L295	@ tmp640,
 4079 0704 1748     		ldr	r0, .L295+32	@ tmp641,
 4080 0706 0022     		movs	r2, #0	@,
 4081 0708 3221     		movs	r1, #50	@,
 4082 070a FFF7FEFF 		bl	GSMSendCommand	@
 4083 070e 0300     		movs	r3, r0	@ tmp642,
 4084 0710 2370     		strb	r3, [r4]	@ tmp644, i
1377:src/sim900_800.c **** 
1378:src/sim900_800.c **** 			if (i == 2)
 4085              		.loc 1 1378 0
 4086 0712 1723     		movs	r3, #23	@ tmp645,
 4087 0714 6B44     		add	r3, r3, sp	@ tmp645,
 4088 0716 1B78     		ldrb	r3, [r3]	@ tmp646, i
 4089 0718 022B     		cmp	r3, #2	@ tmp646,
 4090 071a 02D1     		bne	.L269	@,
1379:src/sim900_800.c **** 			{
1380:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
 4091              		.loc 1 1380 0
 4092 071c 0D4B     		ldr	r3, .L295+16	@ tmp647,
 4093 071e 0322     		movs	r2, #3	@ tmp648,
 4094 0720 1A70     		strb	r2, [r3]	@ tmp649, GSMConfigGPRSState
 4095              	.L269:
1381:src/sim900_800.c **** 			}
1382:src/sim900_800.c **** 
1383:src/sim900_800.c **** 			if (i > 2)
 4096              		.loc 1 1383 0
 4097 0722 1723     		movs	r3, #23	@ tmp650,
 4098 0724 6B44     		add	r3, r3, sp	@ tmp650,
 4099 0726 1B78     		ldrb	r3, [r3]	@ tmp651, i
 4100 0728 022B     		cmp	r3, #2	@ tmp651,
 4101 072a 00D8     		bhi	.LCB3290	@
 4102 072c 90E0     		b	.L291	@long jump	@
 4103              	.LCB3290:
1384:src/sim900_800.c **** 			{
1385:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4104              		.loc 1 1385 0
 4105 072e 094B     		ldr	r3, .L295+16	@ tmp652,
 4106 0730 0022     		movs	r2, #0	@ tmp653,
 4107 0732 1A70     		strb	r2, [r3]	@ tmp654, GSMConfigGPRSState
1386:src/sim900_800.c **** 				return 3;
 4108              		.loc 1 1386 0
 4109 0734 0323     		movs	r3, #3	@ D.7944,
 4110 0736 98E0     		b	.L232	@
 4111              	.L227:
1387:src/sim900_800.c **** 			}
1388:src/sim900_800.c **** 			break;
1389:src/sim900_800.c **** 
1390:src/sim900_800.c **** 		case 14:
1391:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4112              		.loc 1 1391 0
 4113 0738 064B     		ldr	r3, .L295+16	@ tmp655,
 4114 073a 0022     		movs	r2, #0	@ tmp656,
 4115 073c 1A70     		strb	r2, [r3]	@ tmp657, GSMConfigGPRSState
ARM GAS  /tmp/cc16P66I.s 			page 100


1392:src/sim900_800.c **** 			return 2;
 4116              		.loc 1 1392 0
 4117 073e 0223     		movs	r3, #2	@ D.7944,
 4118 0740 93E0     		b	.L232	@
 4119              	.L296:
 4120 0742 C046     		.align	2
 4121              	.L295:
 4122 0744 00000000 		.word	GSMbuffRtaCommand
 4123 0748 94010000 		.word	.LC139
 4124 074c A0010000 		.word	.LC141
 4125 0750 00000000 		.word	GPRSrssi
 4126 0754 00000000 		.word	GSMConfigGPRSState
 4127 0758 A8010000 		.word	.LC144
 4128 075c B8010000 		.word	.LC146
 4129 0760 C4010000 		.word	.LC148
 4130 0764 00000000 		.word	GSMbuffGPRSCommand
 4131 0768 CC010000 		.word	.LC150
 4132 076c E8000000 		.word	.LC95
 4133 0770 E0010000 		.word	.LC152
 4134 0774 34010000 		.word	.LC119
 4135 0778 EC010000 		.word	.LC154
 4136 077c 00000000 		.word	GSMConfigGPRSflag
 4137 0780 F8010000 		.word	.LC156
 4138              	.L228:
1393:src/sim900_800.c **** 			break;
1394:src/sim900_800.c **** 
1395:src/sim900_800.c **** 		case 15:
1396:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 4139              		.loc 1 1396 0
 4140 0784 0F23     		movs	r3, #15	@ tmp658,
 4141 0786 6B44     		add	r3, r3, sp	@ tmp658,
 4142 0788 1B78     		ldrb	r3, [r3]	@ tmp659, sim
 4143 078a 012B     		cmp	r3, #1	@ tmp659,
 4144 078c 04D0     		beq	.L271	@,
 4145              		.loc 1 1396 0 is_stmt 0 discriminator 1
 4146 078e 0F23     		movs	r3, #15	@ tmp660,
 4147 0790 6B44     		add	r3, r3, sp	@ tmp660,
 4148 0792 1B78     		ldrb	r3, [r3]	@ tmp661, sim
 4149 0794 022B     		cmp	r3, #2	@ tmp661,
 4150 0796 1BD1     		bne	.L272	@,
 4151              	.L271:
1397:src/sim900_800.c **** 			{
1398:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 4152              		.loc 1 1398 0 is_stmt 1
 4153 0798 1724     		movs	r4, #23	@ tmp662,
 4154 079a 6C44     		add	r4, r4, sp	@ tmp662,
 4155 079c 0F23     		movs	r3, #15	@ tmp663,
 4156 079e 6B44     		add	r3, r3, sp	@ tmp663,
 4157 07a0 1B78     		ldrb	r3, [r3]	@ tmp664, sim
 4158 07a2 1800     		movs	r0, r3	@, tmp664
 4159 07a4 FFF7FEFF 		bl	GSM_SetSIM	@
 4160 07a8 0300     		movs	r3, r0	@ tmp665,
 4161 07aa 2370     		strb	r3, [r4]	@ tmp667, i
1399:src/sim900_800.c **** 
1400:src/sim900_800.c **** 				if (i == 2)
 4162              		.loc 1 1400 0
 4163 07ac 1723     		movs	r3, #23	@ tmp668,
ARM GAS  /tmp/cc16P66I.s 			page 101


 4164 07ae 6B44     		add	r3, r3, sp	@ tmp668,
 4165 07b0 1B78     		ldrb	r3, [r3]	@ tmp669, i
 4166 07b2 022B     		cmp	r3, #2	@ tmp669,
 4167 07b4 02D1     		bne	.L273	@,
1401:src/sim900_800.c **** 				{
1402:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 4168              		.loc 1 1402 0
 4169 07b6 2E4B     		ldr	r3, .L297	@ tmp670,
 4170 07b8 0222     		movs	r2, #2	@ tmp671,
 4171 07ba 1A70     		strb	r2, [r3]	@ tmp672, GSMConfigGPRSState
 4172              	.L273:
1403:src/sim900_800.c **** 				}
1404:src/sim900_800.c **** 
1405:src/sim900_800.c **** 				if (i>2)
 4173              		.loc 1 1405 0
 4174 07bc 1723     		movs	r3, #23	@ tmp673,
 4175 07be 6B44     		add	r3, r3, sp	@ tmp673,
 4176 07c0 1B78     		ldrb	r3, [r3]	@ tmp674, i
 4177 07c2 022B     		cmp	r3, #2	@ tmp674,
 4178 07c4 09D9     		bls	.L275	@,
1406:src/sim900_800.c **** 				{
1407:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 4179              		.loc 1 1407 0
 4180 07c6 2A4B     		ldr	r3, .L297	@ tmp675,
 4181 07c8 0022     		movs	r2, #0	@ tmp676,
 4182 07ca 1A70     		strb	r2, [r3]	@ tmp677, GSMConfigGPRSState
1408:src/sim900_800.c **** 					return 3;
 4183              		.loc 1 1408 0
 4184 07cc 0323     		movs	r3, #3	@ D.7944,
 4185 07ce 4CE0     		b	.L232	@
 4186              	.L272:
1409:src/sim900_800.c **** 				}
1410:src/sim900_800.c **** 			}
1411:src/sim900_800.c **** 			else
1412:src/sim900_800.c **** 			{
1413:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4187              		.loc 1 1413 0
 4188 07d0 274B     		ldr	r3, .L297	@ tmp678,
 4189 07d2 0022     		movs	r2, #0	@ tmp679,
 4190 07d4 1A70     		strb	r2, [r3]	@ tmp680, GSMConfigGPRSState
1414:src/sim900_800.c **** 				return 3;
 4191              		.loc 1 1414 0
 4192 07d6 0323     		movs	r3, #3	@ D.7944,
 4193 07d8 47E0     		b	.L232	@
 4194              	.L275:
1415:src/sim900_800.c **** 			}
1416:src/sim900_800.c **** 
1417:src/sim900_800.c **** 			break;
 4195              		.loc 1 1417 0 discriminator 1
 4196 07da 3CE0     		b	.L230	@
 4197              	.L229:
1418:src/sim900_800.c **** 		case 16:
1419:src/sim900_800.c **** 
1420:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4198              		.loc 1 1420 0
 4199 07dc 1724     		movs	r4, #23	@ tmp681,
 4200 07de 6C44     		add	r4, r4, sp	@ tmp681,
ARM GAS  /tmp/cc16P66I.s 			page 102


 4201 07e0 244B     		ldr	r3, .L297+4	@ tmp682,
 4202 07e2 2548     		ldr	r0, .L297+8	@ tmp683,
 4203 07e4 0022     		movs	r2, #0	@,
 4204 07e6 3221     		movs	r1, #50	@,
 4205 07e8 FFF7FEFF 		bl	GSMSendCommand	@
 4206 07ec 0300     		movs	r3, r0	@ tmp684,
 4207 07ee 2370     		strb	r3, [r4]	@ tmp686, i
1421:src/sim900_800.c **** 
1422:src/sim900_800.c **** 			if (i == 2)
 4208              		.loc 1 1422 0
 4209 07f0 1723     		movs	r3, #23	@ tmp687,
 4210 07f2 6B44     		add	r3, r3, sp	@ tmp687,
 4211 07f4 1B78     		ldrb	r3, [r3]	@ tmp688, i
 4212 07f6 022B     		cmp	r3, #2	@ tmp688,
 4213 07f8 04D1     		bne	.L276	@,
1423:src/sim900_800.c **** 			{
1424:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4214              		.loc 1 1424 0
 4215 07fa 1D4B     		ldr	r3, .L297	@ tmp689,
 4216 07fc 0022     		movs	r2, #0	@ tmp690,
 4217 07fe 1A70     		strb	r2, [r3]	@ tmp691, GSMConfigGPRSState
1425:src/sim900_800.c **** 				return 3;
 4218              		.loc 1 1425 0
 4219 0800 0323     		movs	r3, #3	@ D.7944,
 4220 0802 32E0     		b	.L232	@
 4221              	.L276:
1426:src/sim900_800.c **** 			}
1427:src/sim900_800.c **** 
1428:src/sim900_800.c **** 			if (i > 2)
 4222              		.loc 1 1428 0
 4223 0804 1723     		movs	r3, #23	@ tmp692,
 4224 0806 6B44     		add	r3, r3, sp	@ tmp692,
 4225 0808 1B78     		ldrb	r3, [r3]	@ tmp693, i
 4226 080a 022B     		cmp	r3, #2	@ tmp693,
 4227 080c 22D9     		bls	.L292	@,
1429:src/sim900_800.c **** 			{
1430:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 4228              		.loc 1 1430 0
 4229 080e 184B     		ldr	r3, .L297	@ tmp694,
 4230 0810 0022     		movs	r2, #0	@ tmp695,
 4231 0812 1A70     		strb	r2, [r3]	@ tmp696, GSMConfigGPRSState
1431:src/sim900_800.c **** 				return 3;
 4232              		.loc 1 1431 0
 4233 0814 0323     		movs	r3, #3	@ D.7944,
 4234 0816 28E0     		b	.L232	@
 4235              	.L211:
1432:src/sim900_800.c **** 			}
1433:src/sim900_800.c **** 			break;
1434:src/sim900_800.c **** 		default:
1435:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 4236              		.loc 1 1435 0
 4237 0818 154B     		ldr	r3, .L297	@ tmp697,
 4238 081a 0022     		movs	r2, #0	@ tmp698,
 4239 081c 1A70     		strb	r2, [r3]	@ tmp699, GSMConfigGPRSState
1436:src/sim900_800.c **** 			break;
 4240              		.loc 1 1436 0
 4241 081e 1AE0     		b	.L230	@
ARM GAS  /tmp/cc16P66I.s 			page 103


 4242              	.L279:
1086:src/sim900_800.c **** 		case 2:
 4243              		.loc 1 1086 0
 4244 0820 C046     		nop
 4245 0822 18E0     		b	.L230	@
 4246              	.L280:
1101:src/sim900_800.c **** 		case 3:
 4247              		.loc 1 1101 0
 4248 0824 C046     		nop
 4249 0826 16E0     		b	.L230	@
 4250              	.L281:
1178:src/sim900_800.c **** 
 4251              		.loc 1 1178 0
 4252 0828 C046     		nop
 4253 082a 14E0     		b	.L230	@
 4254              	.L282:
1201:src/sim900_800.c **** 
 4255              		.loc 1 1201 0
 4256 082c C046     		nop
 4257 082e 12E0     		b	.L230	@
 4258              	.L283:
1224:src/sim900_800.c **** 		case 6:
 4259              		.loc 1 1224 0
 4260 0830 C046     		nop
 4261 0832 10E0     		b	.L230	@
 4262              	.L284:
1254:src/sim900_800.c **** 		case 7:
 4263              		.loc 1 1254 0
 4264 0834 C046     		nop
 4265 0836 0EE0     		b	.L230	@
 4266              	.L285:
1269:src/sim900_800.c **** 
 4267              		.loc 1 1269 0
 4268 0838 C046     		nop
 4269 083a 0CE0     		b	.L230	@
 4270              	.L286:
1301:src/sim900_800.c **** 
 4271              		.loc 1 1301 0
 4272 083c C046     		nop
 4273 083e 0AE0     		b	.L230	@
 4274              	.L287:
1324:src/sim900_800.c **** 
 4275              		.loc 1 1324 0
 4276 0840 C046     		nop
 4277 0842 08E0     		b	.L230	@
 4278              	.L288:
1340:src/sim900_800.c **** 
 4279              		.loc 1 1340 0
 4280 0844 C046     		nop
 4281 0846 06E0     		b	.L230	@
 4282              	.L289:
1355:src/sim900_800.c **** 
 4283              		.loc 1 1355 0
 4284 0848 C046     		nop
 4285 084a 04E0     		b	.L230	@
 4286              	.L290:
1373:src/sim900_800.c **** 		case 13:
ARM GAS  /tmp/cc16P66I.s 			page 104


 4287              		.loc 1 1373 0
 4288 084c C046     		nop
 4289 084e 02E0     		b	.L230	@
 4290              	.L291:
1388:src/sim900_800.c **** 
 4291              		.loc 1 1388 0
 4292 0850 C046     		nop
 4293 0852 00E0     		b	.L230	@
 4294              	.L292:
1433:src/sim900_800.c **** 		default:
 4295              		.loc 1 1433 0
 4296 0854 C046     		nop
 4297              	.L230:
1437:src/sim900_800.c **** 
1438:src/sim900_800.c **** 	}
1439:src/sim900_800.c **** 
1440:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 4298              		.loc 1 1440 0
 4299 0856 094B     		ldr	r3, .L297+12	@ tmp700,
 4300 0858 1B88     		ldrh	r3, [r3]	@ D.7949, GSMConfigGPRSTimeOut
 4301 085a 002B     		cmp	r3, #0	@ D.7949,
 4302 085c 04D1     		bne	.L278	@,
1441:src/sim900_800.c **** 	{
1442:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 4303              		.loc 1 1442 0
 4304 085e 044B     		ldr	r3, .L297	@ tmp701,
 4305 0860 0022     		movs	r2, #0	@ tmp702,
 4306 0862 1A70     		strb	r2, [r3]	@ tmp703, GSMConfigGPRSState
1443:src/sim900_800.c **** 		return 4;
 4307              		.loc 1 1443 0
 4308 0864 0423     		movs	r3, #4	@ D.7944,
 4309 0866 00E0     		b	.L232	@
 4310              	.L278:
1444:src/sim900_800.c **** 	}
1445:src/sim900_800.c **** 
1446:src/sim900_800.c **** 	return 1;
 4311              		.loc 1 1446 0
 4312 0868 0123     		movs	r3, #1	@ D.7944,
 4313              	.L232:
1447:src/sim900_800.c **** }
 4314              		.loc 1 1447 0
 4315 086a 1800     		movs	r0, r3	@, <retval>
 4316 086c 06B0     		add	sp, sp, #24	@,,
 4317              		@ sp needed	@
 4318 086e 10BD     		pop	{r4, pc}
 4319              	.L298:
 4320              		.align	2
 4321              	.L297:
 4322 0870 00000000 		.word	GSMConfigGPRSState
 4323 0874 00000000 		.word	GSMbuffRtaCommand
 4324 0878 14000000 		.word	.LC33
 4325 087c 00000000 		.word	GSMConfigGPRSTimeOut
 4326              		.cfi_endproc
 4327              	.LFE31:
 4328              		.size	GSMConfigGPRS, .-GSMConfigGPRS
 4329              		.section	.rodata
 4330 0203 00       		.align	2
ARM GAS  /tmp/cc16P66I.s 			page 105


 4331              	.LC160:
 4332 0204 41542B43 		.ascii	"AT+CDSDS=1\015\012\000"
 4332      44534453 
 4332      3D310D0A 
 4332      00
 4333 0211 000000   		.align	2
 4334              	.LC162:
 4335 0214 41542B43 		.ascii	"AT+CDSDS=2\015\012\000"
 4335      44534453 
 4335      3D320D0A 
 4335      00
 4336              		.section	.text.GSM_SetSIM,"ax",%progbits
 4337              		.align	2
 4338              		.global	GSM_SetSIM
 4339              		.code	16
 4340              		.thumb_func
 4341              		.type	GSM_SetSIM, %function
 4342              	GSM_SetSIM:
 4343              	.LFB32:
1448:src/sim900_800.c **** 
1449:src/sim900_800.c **** char GSM_SetSIM (unsigned char sim)
1450:src/sim900_800.c **** {
 4344              		.loc 1 1450 0
 4345              		.cfi_startproc
 4346 0000 10B5     		push	{r4, lr}	@
 4347              	.LCFI16:
 4348              		.cfi_def_cfa_offset 8
 4349              		.cfi_offset 4, -8
 4350              		.cfi_offset 14, -4
 4351 0002 84B0     		sub	sp, sp, #16	@,,
 4352              	.LCFI17:
 4353              		.cfi_def_cfa_offset 24
 4354 0004 0200     		movs	r2, r0	@ tmp112, sim
 4355 0006 6B46     		mov	r3, sp	@ tmp137,
 4356 0008 0733     		adds	r3, r3, #7	@ tmp113,
 4357 000a 1A70     		strb	r2, [r3]	@ tmp114, sim
1451:src/sim900_800.c **** 
1452:src/sim900_800.c **** 	unsigned char i;
1453:src/sim900_800.c **** 
1454:src/sim900_800.c **** 	if (sim == 1)
 4358              		.loc 1 1454 0
 4359 000c 6B46     		mov	r3, sp	@ tmp138,
 4360 000e 0733     		adds	r3, r3, #7	@ tmp115,
 4361 0010 1B78     		ldrb	r3, [r3]	@ tmp116, sim
 4362 0012 012B     		cmp	r3, #1	@ tmp116,
 4363 0014 0AD1     		bne	.L300	@,
1455:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4364              		.loc 1 1455 0
 4365 0016 0F24     		movs	r4, #15	@ tmp117,
 4366 0018 6C44     		add	r4, r4, sp	@ tmp117,
 4367 001a 174B     		ldr	r3, .L306	@ tmp118,
 4368 001c 1748     		ldr	r0, .L306+4	@ tmp119,
 4369 001e 0022     		movs	r2, #0	@,
 4370 0020 3221     		movs	r1, #50	@,
 4371 0022 FFF7FEFF 		bl	GSMSendCommand	@
 4372 0026 0300     		movs	r3, r0	@ tmp120,
 4373 0028 2370     		strb	r3, [r4]	@ tmp122, i
ARM GAS  /tmp/cc16P66I.s 			page 106


 4374 002a 11E0     		b	.L301	@
 4375              	.L300:
1456:src/sim900_800.c **** 	else if (sim == 2)
 4376              		.loc 1 1456 0
 4377 002c 6B46     		mov	r3, sp	@ tmp140,
 4378 002e 0733     		adds	r3, r3, #7	@ tmp123,
 4379 0030 1B78     		ldrb	r3, [r3]	@ tmp124, sim
 4380 0032 022B     		cmp	r3, #2	@ tmp124,
 4381 0034 0AD1     		bne	.L302	@,
1457:src/sim900_800.c **** 		i = GSMSendCommand("AT+CDSDS=2\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 4382              		.loc 1 1457 0
 4383 0036 0F24     		movs	r4, #15	@ tmp125,
 4384 0038 6C44     		add	r4, r4, sp	@ tmp125,
 4385 003a 0F4B     		ldr	r3, .L306	@ tmp126,
 4386 003c 1048     		ldr	r0, .L306+8	@ tmp127,
 4387 003e 0022     		movs	r2, #0	@,
 4388 0040 3221     		movs	r1, #50	@,
 4389 0042 FFF7FEFF 		bl	GSMSendCommand	@
 4390 0046 0300     		movs	r3, r0	@ tmp128,
 4391 0048 2370     		strb	r3, [r4]	@ tmp130, i
 4392 004a 01E0     		b	.L301	@
 4393              	.L302:
1458:src/sim900_800.c **** 	else
1459:src/sim900_800.c **** 		return 3;
 4394              		.loc 1 1459 0
 4395 004c 0323     		movs	r3, #3	@ D.8007,
 4396 004e 10E0     		b	.L303	@
 4397              	.L301:
1460:src/sim900_800.c **** 
1461:src/sim900_800.c **** 	if (i == 2)
 4398              		.loc 1 1461 0
 4399 0050 0F23     		movs	r3, #15	@ tmp131,
 4400 0052 6B44     		add	r3, r3, sp	@ tmp131,
 4401 0054 1B78     		ldrb	r3, [r3]	@ tmp132, i
 4402 0056 022B     		cmp	r3, #2	@ tmp132,
 4403 0058 01D1     		bne	.L304	@,
1462:src/sim900_800.c **** 	{
1463:src/sim900_800.c **** 		return 2;
 4404              		.loc 1 1463 0
 4405 005a 0223     		movs	r3, #2	@ D.8007,
 4406 005c 09E0     		b	.L303	@
 4407              	.L304:
1464:src/sim900_800.c **** 	}
1465:src/sim900_800.c **** 	if (i > 2)
 4408              		.loc 1 1465 0
 4409 005e 0F23     		movs	r3, #15	@ tmp133,
 4410 0060 6B44     		add	r3, r3, sp	@ tmp133,
 4411 0062 1B78     		ldrb	r3, [r3]	@ tmp134, i
 4412 0064 022B     		cmp	r3, #2	@ tmp134,
 4413 0066 03D9     		bls	.L305	@,
1466:src/sim900_800.c **** 	{
1467:src/sim900_800.c **** 		return i;
 4414              		.loc 1 1467 0
 4415 0068 0F23     		movs	r3, #15	@ tmp135,
 4416 006a 6B44     		add	r3, r3, sp	@ tmp135,
 4417 006c 1B78     		ldrb	r3, [r3]	@ D.8007, i
 4418 006e 00E0     		b	.L303	@
ARM GAS  /tmp/cc16P66I.s 			page 107


 4419              	.L305:
1468:src/sim900_800.c **** 	}
1469:src/sim900_800.c **** 
1470:src/sim900_800.c **** 	return 1;
 4420              		.loc 1 1470 0
 4421 0070 0123     		movs	r3, #1	@ D.8007,
 4422              	.L303:
1471:src/sim900_800.c **** }
 4423              		.loc 1 1471 0
 4424 0072 1800     		movs	r0, r3	@, <retval>
 4425 0074 04B0     		add	sp, sp, #16	@,,
 4426              		@ sp needed	@
 4427 0076 10BD     		pop	{r4, pc}
 4428              	.L307:
 4429              		.align	2
 4430              	.L306:
 4431 0078 00000000 		.word	GSMbuffRtaCommand
 4432 007c 04020000 		.word	.LC160
 4433 0080 14020000 		.word	.LC162
 4434              		.cfi_endproc
 4435              	.LFE32:
 4436              		.size	GSM_SetSIM, .-GSM_SetSIM
 4437              		.section	.rodata
 4438 0221 000000   		.align	2
 4439              	.LC168:
 4440 0224 41542B43 		.ascii	"AT+CIPSEND\015\012\000"
 4440      49505345 
 4440      4E440D0A 
 4440      00
 4441              		.section	.text.GSMSendIP,"ax",%progbits
 4442              		.align	2
 4443              		.global	GSMSendIP
 4444              		.code	16
 4445              		.thumb_func
 4446              		.type	GSMSendIP, %function
 4447              	GSMSendIP:
 4448              	.LFB33:
1472:src/sim900_800.c **** 
1473:src/sim900_800.c **** char GSMSendIP (char *ptrMSG, unsigned short timeOut)
1474:src/sim900_800.c **** {
 4449              		.loc 1 1474 0
 4450              		.cfi_startproc
 4451 0000 10B5     		push	{r4, lr}	@
 4452              	.LCFI18:
 4453              		.cfi_def_cfa_offset 8
 4454              		.cfi_offset 4, -8
 4455              		.cfi_offset 14, -4
 4456 0002 84B0     		sub	sp, sp, #16	@,,
 4457              	.LCFI19:
 4458              		.cfi_def_cfa_offset 24
 4459 0004 0190     		str	r0, [sp, #4]	@ ptrMSG, ptrMSG
 4460 0006 0A00     		movs	r2, r1	@ tmp121, timeOut
 4461 0008 6B46     		mov	r3, sp	@ tmp192,
 4462 000a 0233     		adds	r3, r3, #2	@ tmp122,
 4463 000c 1A80     		strh	r2, [r3]	@ tmp123, timeOut
1475:src/sim900_800.c **** 	unsigned char i;
1476:src/sim900_800.c **** 
ARM GAS  /tmp/cc16P66I.s 			page 108


1477:src/sim900_800.c **** 	switch(GSMSendIPState)
 4464              		.loc 1 1477 0
 4465 000e 404B     		ldr	r3, .L323	@ tmp124,
 4466 0010 1B78     		ldrb	r3, [r3]	@ D.8010, GSMSendIPState
 4467 0012 012B     		cmp	r3, #1	@ D.8011,
 4468 0014 12D0     		beq	.L310	@,
 4469 0016 022B     		cmp	r3, #2	@ D.8011,
 4470 0018 47D0     		beq	.L311	@,
 4471 001a 002B     		cmp	r3, #0	@ D.8011,
 4472 001c 63D1     		bne	.L320	@,
1478:src/sim900_800.c **** 	{
1479:src/sim900_800.c **** 		case 0:
1480:src/sim900_800.c **** 			GSMSendIPFlag = 0;
 4473              		.loc 1 1480 0
 4474 001e 3D4B     		ldr	r3, .L323+4	@ tmp125,
 4475 0020 0022     		movs	r2, #0	@ tmp126,
 4476 0022 1A70     		strb	r2, [r3]	@ tmp127, GSMSendIPFlag
1481:src/sim900_800.c **** 			GSMSendIPTimeOut = timeOut;
 4477              		.loc 1 1481 0
 4478 0024 3C4B     		ldr	r3, .L323+8	@ tmp128,
 4479 0026 6A46     		mov	r2, sp	@ tmp193,
 4480 0028 0232     		adds	r2, r2, #2	@ tmp129,
 4481 002a 1288     		ldrh	r2, [r2]	@ tmp130, timeOut
 4482 002c 1A80     		strh	r2, [r3]	@ tmp130, GSMSendIPTimeOut
1482:src/sim900_800.c **** 			GSMSendIPState++;
 4483              		.loc 1 1482 0
 4484 002e 384B     		ldr	r3, .L323	@ tmp131,
 4485 0030 1B78     		ldrb	r3, [r3]	@ D.8010, GSMSendIPState
 4486 0032 0133     		adds	r3, r3, #1	@ tmp132,
 4487 0034 DAB2     		uxtb	r2, r3	@ D.8010, tmp132
 4488 0036 364B     		ldr	r3, .L323	@ tmp133,
 4489 0038 1A70     		strb	r2, [r3]	@ tmp134, GSMSendIPState
1483:src/sim900_800.c **** 			break;
 4490              		.loc 1 1483 0
 4491 003a 5BE0     		b	.L313	@
 4492              	.L310:
1484:src/sim900_800.c **** 
1485:src/sim900_800.c **** 		case 1:
1486:src/sim900_800.c **** 
1487:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSEND\r\n", 80, 0, &GSMbuffRtaCommand[0]);
 4493              		.loc 1 1487 0
 4494 003c 0F24     		movs	r4, #15	@ tmp135,
 4495 003e 6C44     		add	r4, r4, sp	@ tmp135,
 4496 0040 364B     		ldr	r3, .L323+12	@ tmp136,
 4497 0042 3748     		ldr	r0, .L323+16	@ tmp137,
 4498 0044 0022     		movs	r2, #0	@,
 4499 0046 5021     		movs	r1, #80	@,
 4500 0048 FFF7FEFF 		bl	GSMSendCommand	@
 4501 004c 0300     		movs	r3, r0	@ tmp138,
 4502 004e 2370     		strb	r3, [r4]	@ tmp140, i
1488:src/sim900_800.c **** 
1489:src/sim900_800.c **** 			if (i == 2)
 4503              		.loc 1 1489 0
 4504 0050 0F23     		movs	r3, #15	@ tmp141,
 4505 0052 6B44     		add	r3, r3, sp	@ tmp141,
 4506 0054 1B78     		ldrb	r3, [r3]	@ tmp142, i
 4507 0056 022B     		cmp	r3, #2	@ tmp142,
ARM GAS  /tmp/cc16P66I.s 			page 109


 4508 0058 1DD1     		bne	.L314	@,
1490:src/sim900_800.c **** 			{
1491:src/sim900_800.c **** 
1492:src/sim900_800.c **** 				GSMSendIPbuffAux[0] = 0;
 4509              		.loc 1 1492 0
 4510 005a 324B     		ldr	r3, .L323+20	@ tmp143,
 4511 005c 0022     		movs	r2, #0	@ tmp144,
 4512 005e 1A70     		strb	r2, [r3]	@ tmp145, GSMSendIPbuffAux
1493:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], ptrMSG);
 4513              		.loc 1 1493 0
 4514 0060 019A     		ldr	r2, [sp, #4]	@ tmp146, ptrMSG
 4515 0062 304B     		ldr	r3, .L323+20	@ tmp147,
 4516 0064 1100     		movs	r1, r2	@, tmp146
 4517 0066 1800     		movs	r0, r3	@, tmp147
 4518 0068 FFF7FEFF 		bl	strcat	@
1494:src/sim900_800.c **** 				strcat(&GSMSendIPbuffAux[0], "\032");
 4519              		.loc 1 1494 0
 4520 006c 2D4B     		ldr	r3, .L323+20	@ tmp148,
 4521 006e 1800     		movs	r0, r3	@, tmp148
 4522 0070 FFF7FEFF 		bl	strlen	@
 4523 0074 0300     		movs	r3, r0	@ tmp149,
 4524 0076 1A00     		movs	r2, r3	@ D.8012, tmp150
 4525 0078 2A4B     		ldr	r3, .L323+20	@ tmp151,
 4526 007a D218     		adds	r2, r2, r3	@ D.8013, D.8012, tmp151
 4527 007c 2A4B     		ldr	r3, .L323+24	@ tmp152,
 4528 007e 1000     		movs	r0, r2	@ tmp153, D.8013
 4529 0080 1900     		movs	r1, r3	@ tmp154, tmp152
 4530 0082 0223     		movs	r3, #2	@ tmp155,
 4531 0084 1A00     		movs	r2, r3	@, tmp155
 4532 0086 FFF7FEFF 		bl	memcpy	@
1495:src/sim900_800.c **** 				GSMSendIPState++;
 4533              		.loc 1 1495 0
 4534 008a 214B     		ldr	r3, .L323	@ tmp158,
 4535 008c 1B78     		ldrb	r3, [r3]	@ D.8010, GSMSendIPState
 4536 008e 0133     		adds	r3, r3, #1	@ tmp159,
 4537 0090 DAB2     		uxtb	r2, r3	@ D.8010, tmp159
 4538 0092 1F4B     		ldr	r3, .L323	@ tmp160,
 4539 0094 1A70     		strb	r2, [r3]	@ tmp161, GSMSendIPState
 4540              	.L314:
1496:src/sim900_800.c **** 			}
1497:src/sim900_800.c **** 
1498:src/sim900_800.c **** 			if (i > 2)
 4541              		.loc 1 1498 0
 4542 0096 0F23     		movs	r3, #15	@ tmp162,
 4543 0098 6B44     		add	r3, r3, sp	@ tmp162,
 4544 009a 1B78     		ldrb	r3, [r3]	@ tmp163, i
 4545 009c 022B     		cmp	r3, #2	@ tmp163,
 4546 009e 26D9     		bls	.L321	@,
1499:src/sim900_800.c **** 			{
1500:src/sim900_800.c **** 				GSMSendIPState = 0;
 4547              		.loc 1 1500 0
 4548 00a0 1B4B     		ldr	r3, .L323	@ tmp164,
 4549 00a2 0022     		movs	r2, #0	@ tmp165,
 4550 00a4 1A70     		strb	r2, [r3]	@ tmp166, GSMSendIPState
1501:src/sim900_800.c **** 				return 3;
 4551              		.loc 1 1501 0
 4552 00a6 0323     		movs	r3, #3	@ D.8010,
ARM GAS  /tmp/cc16P66I.s 			page 110


 4553 00a8 2FE0     		b	.L316	@
 4554              	.L311:
1502:src/sim900_800.c **** 			}
1503:src/sim900_800.c **** 			break;
1504:src/sim900_800.c **** 		case 2:
1505:src/sim900_800.c **** 
1506:src/sim900_800.c **** 			i = GSMSendCommand(&GSMSendIPbuffAux[0], 50, 0, &GSMbuffRtaCommand[0]);
 4555              		.loc 1 1506 0
 4556 00aa 0F24     		movs	r4, #15	@ tmp167,
 4557 00ac 6C44     		add	r4, r4, sp	@ tmp167,
 4558 00ae 1B4B     		ldr	r3, .L323+12	@ tmp168,
 4559 00b0 1C48     		ldr	r0, .L323+20	@ tmp169,
 4560 00b2 0022     		movs	r2, #0	@,
 4561 00b4 3221     		movs	r1, #50	@,
 4562 00b6 FFF7FEFF 		bl	GSMSendCommand	@
 4563 00ba 0300     		movs	r3, r0	@ tmp170,
 4564 00bc 2370     		strb	r3, [r4]	@ tmp172, i
1507:src/sim900_800.c **** 
1508:src/sim900_800.c **** 			if (i == 2)
 4565              		.loc 1 1508 0
 4566 00be 0F23     		movs	r3, #15	@ tmp173,
 4567 00c0 6B44     		add	r3, r3, sp	@ tmp173,
 4568 00c2 1B78     		ldrb	r3, [r3]	@ tmp174, i
 4569 00c4 022B     		cmp	r3, #2	@ tmp174,
 4570 00c6 04D1     		bne	.L317	@,
1509:src/sim900_800.c **** 			{
1510:src/sim900_800.c **** 				GSMSendIPState = 0;
 4571              		.loc 1 1510 0
 4572 00c8 114B     		ldr	r3, .L323	@ tmp175,
 4573 00ca 0022     		movs	r2, #0	@ tmp176,
 4574 00cc 1A70     		strb	r2, [r3]	@ tmp177, GSMSendIPState
1511:src/sim900_800.c **** 				return 2;
 4575              		.loc 1 1511 0
 4576 00ce 0223     		movs	r3, #2	@ D.8010,
 4577 00d0 1BE0     		b	.L316	@
 4578              	.L317:
1512:src/sim900_800.c **** 			}
1513:src/sim900_800.c **** 
1514:src/sim900_800.c **** 			if (i > 2)
 4579              		.loc 1 1514 0
 4580 00d2 0F23     		movs	r3, #15	@ tmp178,
 4581 00d4 6B44     		add	r3, r3, sp	@ tmp178,
 4582 00d6 1B78     		ldrb	r3, [r3]	@ tmp179, i
 4583 00d8 022B     		cmp	r3, #2	@ tmp179,
 4584 00da 0AD9     		bls	.L322	@,
1515:src/sim900_800.c **** 			{
1516:src/sim900_800.c **** 				GSMSendIPState = 0;
 4585              		.loc 1 1516 0
 4586 00dc 0C4B     		ldr	r3, .L323	@ tmp180,
 4587 00de 0022     		movs	r2, #0	@ tmp181,
 4588 00e0 1A70     		strb	r2, [r3]	@ tmp182, GSMSendIPState
1517:src/sim900_800.c **** 				return 3;
 4589              		.loc 1 1517 0
 4590 00e2 0323     		movs	r3, #3	@ D.8010,
 4591 00e4 11E0     		b	.L316	@
 4592              	.L320:
1518:src/sim900_800.c **** 			}
ARM GAS  /tmp/cc16P66I.s 			page 111


1519:src/sim900_800.c **** 			break;
1520:src/sim900_800.c **** 
1521:src/sim900_800.c **** 		default:
1522:src/sim900_800.c **** 			GSMSendIPState = 0;
 4593              		.loc 1 1522 0
 4594 00e6 0A4B     		ldr	r3, .L323	@ tmp183,
 4595 00e8 0022     		movs	r2, #0	@ tmp184,
 4596 00ea 1A70     		strb	r2, [r3]	@ tmp185, GSMSendIPState
1523:src/sim900_800.c **** 			break;
 4597              		.loc 1 1523 0
 4598 00ec 02E0     		b	.L313	@
 4599              	.L321:
1503:src/sim900_800.c **** 		case 2:
 4600              		.loc 1 1503 0
 4601 00ee C046     		nop
 4602 00f0 00E0     		b	.L313	@
 4603              	.L322:
1519:src/sim900_800.c **** 
 4604              		.loc 1 1519 0
 4605 00f2 C046     		nop
 4606              	.L313:
1524:src/sim900_800.c **** 	}
1525:src/sim900_800.c **** 
1526:src/sim900_800.c **** 	if (GSMSendIPTimeOut == 0)
 4607              		.loc 1 1526 0
 4608 00f4 084B     		ldr	r3, .L323+8	@ tmp186,
 4609 00f6 1B88     		ldrh	r3, [r3]	@ tmp187, GSMSendIPTimeOut
 4610 00f8 9BB2     		uxth	r3, r3	@ D.8014, tmp187
 4611 00fa 002B     		cmp	r3, #0	@ D.8014,
 4612 00fc 04D1     		bne	.L319	@,
1527:src/sim900_800.c **** 	{
1528:src/sim900_800.c **** 		GSMSendIPState = 0;
 4613              		.loc 1 1528 0
 4614 00fe 044B     		ldr	r3, .L323	@ tmp188,
 4615 0100 0022     		movs	r2, #0	@ tmp189,
 4616 0102 1A70     		strb	r2, [r3]	@ tmp190, GSMSendIPState
1529:src/sim900_800.c **** 		return 4;
 4617              		.loc 1 1529 0
 4618 0104 0423     		movs	r3, #4	@ D.8010,
 4619 0106 00E0     		b	.L316	@
 4620              	.L319:
1530:src/sim900_800.c **** 	}
1531:src/sim900_800.c **** 
1532:src/sim900_800.c **** 	return 1;
 4621              		.loc 1 1532 0
 4622 0108 0123     		movs	r3, #1	@ D.8010,
 4623              	.L316:
1533:src/sim900_800.c **** }
 4624              		.loc 1 1533 0
 4625 010a 1800     		movs	r0, r3	@, <retval>
 4626 010c 04B0     		add	sp, sp, #16	@,,
 4627              		@ sp needed	@
 4628 010e 10BD     		pop	{r4, pc}
 4629              	.L324:
 4630              		.align	2
 4631              	.L323:
 4632 0110 00000000 		.word	GSMSendIPState
ARM GAS  /tmp/cc16P66I.s 			page 112


 4633 0114 00000000 		.word	GSMSendIPFlag
 4634 0118 00000000 		.word	GSMSendIPTimeOut
 4635 011c 00000000 		.word	GSMbuffRtaCommand
 4636 0120 24020000 		.word	.LC168
 4637 0124 00000000 		.word	GSMSendIPbuffAux
 4638 0128 EC000000 		.word	.LC98
 4639              		.cfi_endproc
 4640              	.LFE33:
 4641              		.size	GSMSendIP, .-GSMSendIP
 4642              		.section	.text.GSMTimeoutCounters,"ax",%progbits
 4643              		.align	2
 4644              		.global	GSMTimeoutCounters
 4645              		.code	16
 4646              		.thumb_func
 4647              		.type	GSMTimeoutCounters, %function
 4648              	GSMTimeoutCounters:
 4649              	.LFB34:
1534:src/sim900_800.c **** 
1535:src/sim900_800.c **** 
1536:src/sim900_800.c **** void GSMTimeoutCounters (void)
1537:src/sim900_800.c **** {
 4650              		.loc 1 1537 0
 4651              		.cfi_startproc
1538:src/sim900_800.c **** 	if (GSMStartTime)
 4652              		.loc 1 1538 0
 4653 0000 344B     		ldr	r3, .L336	@ tmp137,
 4654 0002 1B88     		ldrh	r3, [r3]	@ tmp138, GSMStartTime
 4655 0004 9BB2     		uxth	r3, r3	@ D.8019, tmp138
 4656 0006 002B     		cmp	r3, #0	@ D.8019,
 4657 0008 06D0     		beq	.L326	@,
1539:src/sim900_800.c **** 		GSMStartTime--;
 4658              		.loc 1 1539 0
 4659 000a 324B     		ldr	r3, .L336	@ tmp139,
 4660 000c 1B88     		ldrh	r3, [r3]	@ tmp140, GSMStartTime
 4661 000e 9BB2     		uxth	r3, r3	@ D.8019, tmp140
 4662 0010 013B     		subs	r3, r3, #1	@ tmp141,
 4663 0012 9AB2     		uxth	r2, r3	@ D.8019, tmp141
 4664 0014 2F4B     		ldr	r3, .L336	@ tmp142,
 4665 0016 1A80     		strh	r2, [r3]	@ tmp143, GSMStartTime
 4666              	.L326:
1540:src/sim900_800.c **** 
1541:src/sim900_800.c **** 	if(GSMSendCommandTimeOut)
 4667              		.loc 1 1541 0
 4668 0018 2F4B     		ldr	r3, .L336+4	@ tmp144,
 4669 001a 1B88     		ldrh	r3, [r3]	@ tmp145, GSMSendCommandTimeOut
 4670 001c 9BB2     		uxth	r3, r3	@ D.8019, tmp145
 4671 001e 002B     		cmp	r3, #0	@ D.8019,
 4672 0020 06D0     		beq	.L327	@,
1542:src/sim900_800.c **** 		GSMSendCommandTimeOut--;
 4673              		.loc 1 1542 0
 4674 0022 2D4B     		ldr	r3, .L336+4	@ tmp146,
 4675 0024 1B88     		ldrh	r3, [r3]	@ tmp147, GSMSendCommandTimeOut
 4676 0026 9BB2     		uxth	r3, r3	@ D.8019, tmp147
 4677 0028 013B     		subs	r3, r3, #1	@ tmp148,
 4678 002a 9AB2     		uxth	r2, r3	@ D.8019, tmp148
 4679 002c 2A4B     		ldr	r3, .L336+4	@ tmp149,
 4680 002e 1A80     		strh	r2, [r3]	@ tmp150, GSMSendCommandTimeOut
ARM GAS  /tmp/cc16P66I.s 			page 113


 4681              	.L327:
1543:src/sim900_800.c **** 
1544:src/sim900_800.c **** 	if(GSMConfigTimeOut)
 4682              		.loc 1 1544 0
 4683 0030 2A4B     		ldr	r3, .L336+8	@ tmp151,
 4684 0032 1B88     		ldrh	r3, [r3]	@ tmp152, GSMConfigTimeOut
 4685 0034 9BB2     		uxth	r3, r3	@ D.8019, tmp152
 4686 0036 002B     		cmp	r3, #0	@ D.8019,
 4687 0038 06D0     		beq	.L328	@,
1545:src/sim900_800.c **** 		GSMConfigTimeOut--;
 4688              		.loc 1 1545 0
 4689 003a 284B     		ldr	r3, .L336+8	@ tmp153,
 4690 003c 1B88     		ldrh	r3, [r3]	@ tmp154, GSMConfigTimeOut
 4691 003e 9BB2     		uxth	r3, r3	@ D.8019, tmp154
 4692 0040 013B     		subs	r3, r3, #1	@ tmp155,
 4693 0042 9AB2     		uxth	r2, r3	@ D.8019, tmp155
 4694 0044 254B     		ldr	r3, .L336+8	@ tmp156,
 4695 0046 1A80     		strh	r2, [r3]	@ tmp157, GSMConfigTimeOut
 4696              	.L328:
1546:src/sim900_800.c **** 
1547:src/sim900_800.c **** 	if(GSMConfigTime)
 4697              		.loc 1 1547 0
 4698 0048 254B     		ldr	r3, .L336+12	@ tmp158,
 4699 004a 1B88     		ldrh	r3, [r3]	@ tmp159, GSMConfigTime
 4700 004c 9BB2     		uxth	r3, r3	@ D.8019, tmp159
 4701 004e 002B     		cmp	r3, #0	@ D.8019,
 4702 0050 06D0     		beq	.L329	@,
1548:src/sim900_800.c **** 		GSMConfigTime--;
 4703              		.loc 1 1548 0
 4704 0052 234B     		ldr	r3, .L336+12	@ tmp160,
 4705 0054 1B88     		ldrh	r3, [r3]	@ tmp161, GSMConfigTime
 4706 0056 9BB2     		uxth	r3, r3	@ D.8019, tmp161
 4707 0058 013B     		subs	r3, r3, #1	@ tmp162,
 4708 005a 9AB2     		uxth	r2, r3	@ D.8019, tmp162
 4709 005c 204B     		ldr	r3, .L336+12	@ tmp163,
 4710 005e 1A80     		strh	r2, [r3]	@ tmp164, GSMConfigTime
 4711              	.L329:
1549:src/sim900_800.c **** 
1550:src/sim900_800.c **** 	if(GSMSendSMSTimeOut)
 4712              		.loc 1 1550 0
 4713 0060 204B     		ldr	r3, .L336+16	@ tmp165,
 4714 0062 1B88     		ldrh	r3, [r3]	@ tmp166, GSMSendSMSTimeOut
 4715 0064 9BB2     		uxth	r3, r3	@ D.8019, tmp166
 4716 0066 002B     		cmp	r3, #0	@ D.8019,
 4717 0068 06D0     		beq	.L330	@,
1551:src/sim900_800.c **** 		GSMSendSMSTimeOut--;
 4718              		.loc 1 1551 0
 4719 006a 1E4B     		ldr	r3, .L336+16	@ tmp167,
 4720 006c 1B88     		ldrh	r3, [r3]	@ tmp168, GSMSendSMSTimeOut
 4721 006e 9BB2     		uxth	r3, r3	@ D.8019, tmp168
 4722 0070 013B     		subs	r3, r3, #1	@ tmp169,
 4723 0072 9AB2     		uxth	r2, r3	@ D.8019, tmp169
 4724 0074 1B4B     		ldr	r3, .L336+16	@ tmp170,
 4725 0076 1A80     		strh	r2, [r3]	@ tmp171, GSMSendSMSTimeOut
 4726              	.L330:
1552:src/sim900_800.c **** 
1553:src/sim900_800.c **** 	if(GSMConfigGPRSTimeOut)
ARM GAS  /tmp/cc16P66I.s 			page 114


 4727              		.loc 1 1553 0
 4728 0078 1B4B     		ldr	r3, .L336+20	@ tmp172,
 4729 007a 1B88     		ldrh	r3, [r3]	@ D.8019, GSMConfigGPRSTimeOut
 4730 007c 002B     		cmp	r3, #0	@ D.8019,
 4731 007e 05D0     		beq	.L331	@,
1554:src/sim900_800.c **** 		GSMConfigGPRSTimeOut--;
 4732              		.loc 1 1554 0
 4733 0080 194B     		ldr	r3, .L336+20	@ tmp173,
 4734 0082 1B88     		ldrh	r3, [r3]	@ D.8019, GSMConfigGPRSTimeOut
 4735 0084 013B     		subs	r3, r3, #1	@ tmp174,
 4736 0086 9AB2     		uxth	r2, r3	@ D.8019, tmp174
 4737 0088 174B     		ldr	r3, .L336+20	@ tmp175,
 4738 008a 1A80     		strh	r2, [r3]	@ tmp176, GSMConfigGPRSTimeOut
 4739              	.L331:
1555:src/sim900_800.c **** 
1556:src/sim900_800.c **** 	if(GSMSendIPTimeOut)
 4740              		.loc 1 1556 0
 4741 008c 174B     		ldr	r3, .L336+24	@ tmp177,
 4742 008e 1B88     		ldrh	r3, [r3]	@ tmp178, GSMSendIPTimeOut
 4743 0090 9BB2     		uxth	r3, r3	@ D.8019, tmp178
 4744 0092 002B     		cmp	r3, #0	@ D.8019,
 4745 0094 06D0     		beq	.L332	@,
1557:src/sim900_800.c **** 		GSMSendIPTimeOut--;
 4746              		.loc 1 1557 0
 4747 0096 154B     		ldr	r3, .L336+24	@ tmp179,
 4748 0098 1B88     		ldrh	r3, [r3]	@ tmp180, GSMSendIPTimeOut
 4749 009a 9BB2     		uxth	r3, r3	@ D.8019, tmp180
 4750 009c 013B     		subs	r3, r3, #1	@ tmp181,
 4751 009e 9AB2     		uxth	r2, r3	@ D.8019, tmp181
 4752 00a0 124B     		ldr	r3, .L336+24	@ tmp182,
 4753 00a2 1A80     		strh	r2, [r3]	@ tmp183, GSMSendIPTimeOut
 4754              	.L332:
1558:src/sim900_800.c **** 
1559:src/sim900_800.c **** 	if (prestadorSimTime)
 4755              		.loc 1 1559 0
 4756 00a4 124B     		ldr	r3, .L336+28	@ tmp184,
 4757 00a6 1B78     		ldrb	r3, [r3]	@ D.8020, prestadorSimTime
 4758 00a8 002B     		cmp	r3, #0	@ D.8020,
 4759 00aa 05D0     		beq	.L333	@,
1560:src/sim900_800.c **** 		prestadorSimTime--;
 4760              		.loc 1 1560 0
 4761 00ac 104B     		ldr	r3, .L336+28	@ tmp185,
 4762 00ae 1B78     		ldrb	r3, [r3]	@ D.8020, prestadorSimTime
 4763 00b0 013B     		subs	r3, r3, #1	@ tmp186,
 4764 00b2 DAB2     		uxtb	r2, r3	@ D.8020, tmp186
 4765 00b4 0E4B     		ldr	r3, .L336+28	@ tmp187,
 4766 00b6 1A70     		strb	r2, [r3]	@ tmp188, prestadorSimTime
 4767              	.L333:
1561:src/sim900_800.c **** 
1562:src/sim900_800.c **** 	if(GSMGeneralTimeOut)
 4768              		.loc 1 1562 0
 4769 00b8 0E4B     		ldr	r3, .L336+32	@ tmp189,
 4770 00ba 1B88     		ldrh	r3, [r3]	@ tmp190, GSMGeneralTimeOut
 4771 00bc 9BB2     		uxth	r3, r3	@ D.8019, tmp190
 4772 00be 002B     		cmp	r3, #0	@ D.8019,
 4773 00c0 06D0     		beq	.L335	@,
1563:src/sim900_800.c **** 		GSMGeneralTimeOut--;
ARM GAS  /tmp/cc16P66I.s 			page 115


 4774              		.loc 1 1563 0
 4775 00c2 0C4B     		ldr	r3, .L336+32	@ tmp191,
 4776 00c4 1B88     		ldrh	r3, [r3]	@ tmp192, GSMGeneralTimeOut
 4777 00c6 9BB2     		uxth	r3, r3	@ D.8019, tmp192
 4778 00c8 013B     		subs	r3, r3, #1	@ tmp193,
 4779 00ca 9AB2     		uxth	r2, r3	@ D.8019, tmp193
 4780 00cc 094B     		ldr	r3, .L336+32	@ tmp194,
 4781 00ce 1A80     		strh	r2, [r3]	@ tmp195, GSMGeneralTimeOut
 4782              	.L335:
1564:src/sim900_800.c **** 
1565:src/sim900_800.c **** }
 4783              		.loc 1 1565 0
 4784 00d0 C046     		nop
 4785              		@ sp needed	@
 4786 00d2 7047     		bx	lr
 4787              	.L337:
 4788              		.align	2
 4789              	.L336:
 4790 00d4 00000000 		.word	GSMStartTime
 4791 00d8 00000000 		.word	GSMSendCommandTimeOut
 4792 00dc 00000000 		.word	GSMConfigTimeOut
 4793 00e0 00000000 		.word	GSMConfigTime
 4794 00e4 00000000 		.word	GSMSendSMSTimeOut
 4795 00e8 00000000 		.word	GSMConfigGPRSTimeOut
 4796 00ec 00000000 		.word	GSMSendIPTimeOut
 4797 00f0 00000000 		.word	prestadorSimTime
 4798 00f4 00000000 		.word	GSMGeneralTimeOut
 4799              		.cfi_endproc
 4800              	.LFE34:
 4801              		.size	GSMTimeoutCounters, .-GSMTimeoutCounters
 4802              		.section	.rodata
 4803 0231 000000   		.align	2
 4804              	.LC183:
 4805 0234 41542B43 		.ascii	"AT+CMGR=%d\015\012\000"
 4805      4D47523D 
 4805      25640D0A 
 4805      00
 4806 0241 000000   		.align	2
 4807              	.LC187:
 4808 0244 2B434D47 		.ascii	"+CMGR:\000"
 4808      523A00
 4809 024b 00       		.align	2
 4810              	.LC189:
 4811 024c 5245504F 		.ascii	"REPORTAR:\000"
 4811      52544152 
 4811      3A00
 4812 0256 0000     		.align	2
 4813              	.LC192:
 4814 0258 54494D45 		.ascii	"TIMER:\000"
 4814      523A00
 4815 025f 00       		.align	2
 4816              	.LC194:
 4817 0260 454E4552 		.ascii	"ENERGIA:\000"
 4817      4749413A 
 4817      00
 4818 0269 000000   		.align	2
 4819              	.LC197:
ARM GAS  /tmp/cc16P66I.s 			page 116


 4820 026c 41542B43 		.ascii	"AT+CMGDA=\"DEL READ\"\015\012\000"
 4820      4D474441 
 4820      3D224445 
 4820      4C205245 
 4820      4144220D 
 4821              		.section	.text.GSMReceivSMS,"ax",%progbits
 4822              		.align	2
 4823              		.global	GSMReceivSMS
 4824              		.code	16
 4825              		.thumb_func
 4826              		.type	GSMReceivSMS, %function
 4827              	GSMReceivSMS:
 4828              	.LFB35:
1566:src/sim900_800.c **** 
1567:src/sim900_800.c **** 
1568:src/sim900_800.c **** void GSMReceivSMS (void)
1569:src/sim900_800.c **** {
 4829              		.loc 1 1569 0
 4830              		.cfi_startproc
 4831 0000 10B5     		push	{r4, lr}	@
 4832              	.LCFI20:
 4833              		.cfi_def_cfa_offset 8
 4834              		.cfi_offset 4, -8
 4835              		.cfi_offset 14, -4
 4836 0002 84B0     		sub	sp, sp, #16	@,,
 4837              	.LCFI21:
 4838              		.cfi_def_cfa_offset 24
1570:src/sim900_800.c **** 	unsigned char i, j, colon_index;
1571:src/sim900_800.c **** 	char * pToAnswer;
1572:src/sim900_800.c **** 
1573:src/sim900_800.c **** 	if (GSMCantSMS)	//me avisan que hay un SMS para leer, este es el index
 4839              		.loc 1 1573 0
 4840 0004 8D4B     		ldr	r3, .L359	@ tmp145,
 4841 0006 1B78     		ldrb	r3, [r3]	@ D.8021, GSMCantSMS
 4842 0008 002B     		cmp	r3, #0	@ D.8021,
 4843 000a 00D1     		bne	.LCB3976	@
 4844 000c 13E1     		b	.L356	@long jump	@
 4845              	.LCB3976:
1574:src/sim900_800.c **** 	{
1575:src/sim900_800.c **** 		switch(GSMReadSMSState)
 4846              		.loc 1 1575 0
 4847 000e 8C4B     		ldr	r3, .L359+4	@ tmp146,
 4848 0010 1B78     		ldrb	r3, [r3]	@ D.8022, GSMReadSMSState
 4849 0012 012B     		cmp	r3, #1	@ D.8023,
 4850 0014 14D0     		beq	.L341	@,
 4851 0016 022B     		cmp	r3, #2	@ D.8023,
 4852 0018 00D1     		bne	.LCB3982	@
 4853 001a E7E0     		b	.L342	@long jump	@
 4854              	.LCB3982:
 4855 001c 002B     		cmp	r3, #0	@ D.8023,
 4856 001e 00D0     		beq	.LCB3984	@
 4857 0020 02E1     		b	.L355	@long jump	@
 4858              	.LCB3984:
1576:src/sim900_800.c **** 		{
1577:src/sim900_800.c **** 			case 0:
1578:src/sim900_800.c **** 				sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMCantSMS);
 4859              		.loc 1 1578 0
ARM GAS  /tmp/cc16P66I.s 			page 117


 4860 0022 864B     		ldr	r3, .L359	@ tmp147,
 4861 0024 1B78     		ldrb	r3, [r3]	@ D.8021, GSMCantSMS
 4862 0026 1A00     		movs	r2, r3	@ D.8023, D.8021
 4863 0028 8649     		ldr	r1, .L359+8	@ tmp148,
 4864 002a 874B     		ldr	r3, .L359+12	@ tmp149,
 4865 002c 1800     		movs	r0, r3	@, tmp149
 4866 002e FFF7FEFF 		bl	sprintf	@
1579:src/sim900_800.c **** 				GSMReadSMSState++;
 4867              		.loc 1 1579 0
 4868 0032 834B     		ldr	r3, .L359+4	@ tmp150,
 4869 0034 1B78     		ldrb	r3, [r3]	@ D.8022, GSMReadSMSState
 4870 0036 0133     		adds	r3, r3, #1	@ tmp151,
 4871 0038 DAB2     		uxtb	r2, r3	@ D.8022, tmp151
 4872 003a 814B     		ldr	r3, .L359+4	@ tmp152,
 4873 003c 1A70     		strb	r2, [r3]	@ tmp153, GSMReadSMSState
1580:src/sim900_800.c **** 				break;
 4874              		.loc 1 1580 0
 4875 003e FAE0     		b	.L339	@
 4876              	.L341:
1581:src/sim900_800.c **** 
1582:src/sim900_800.c **** 			case 1:
1583:src/sim900_800.c **** 				i = GSMSendCommand (&GSMReadSMScommand[0], 6000, 1, &GSMbuffRtaCommand[0]);
 4877              		.loc 1 1583 0
 4878 0040 6B46     		mov	r3, sp	@ tmp284,
 4879 0042 DC1D     		adds	r4, r3, #7	@ tmp154, tmp284,
 4880 0044 814B     		ldr	r3, .L359+16	@ tmp155,
 4881 0046 8249     		ldr	r1, .L359+20	@ tmp156,
 4882 0048 7F48     		ldr	r0, .L359+12	@ tmp157,
 4883 004a 0122     		movs	r2, #1	@,
 4884 004c FFF7FEFF 		bl	GSMSendCommand	@
 4885 0050 0300     		movs	r3, r0	@ tmp158,
 4886 0052 2370     		strb	r3, [r4]	@ tmp160, i
1584:src/sim900_800.c **** 
1585:src/sim900_800.c **** 				if (i == 2)
 4887              		.loc 1 1585 0
 4888 0054 6B46     		mov	r3, sp	@ tmp285,
 4889 0056 0733     		adds	r3, r3, #7	@ tmp161,
 4890 0058 1B78     		ldrb	r3, [r3]	@ tmp162, i
 4891 005a 022B     		cmp	r3, #2	@ tmp162,
 4892 005c 00D0     		beq	.LCB4015	@
 4893 005e BCE0     		b	.L344	@long jump	@
 4894              	.LCB4015:
1586:src/sim900_800.c **** 				{
1587:src/sim900_800.c **** 					if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 1))
 4895              		.loc 1 1587 0
 4896 0060 7C49     		ldr	r1, .L359+24	@ tmp163,
 4897 0062 7A4B     		ldr	r3, .L359+16	@ tmp164,
 4898 0064 0622     		movs	r2, #6	@,
 4899 0066 1800     		movs	r0, r3	@, tmp164
 4900 0068 FFF7FEFF 		bl	strncmp	@
 4901 006c 031E     		subs	r3, r0, #0	@ D.8023,,
 4902 006e 00D0     		beq	.LCB4023	@
 4903 0070 B3E0     		b	.L344	@long jump	@
 4904              	.LCB4023:
1588:src/sim900_800.c **** 					{
1589:src/sim900_800.c **** 						//mensajes al modulo
1590:src/sim900_800.c **** 						colon_index = 0;
ARM GAS  /tmp/cc16P66I.s 			page 118


 4905              		.loc 1 1590 0
 4906 0072 0E23     		movs	r3, #14	@ tmp165,
 4907 0074 6B44     		add	r3, r3, sp	@ tmp165,
 4908 0076 0022     		movs	r2, #0	@ tmp166,
 4909 0078 1A70     		strb	r2, [r3]	@ tmp167, colon_index
1591:src/sim900_800.c **** 						for (j = 0; j < 222; j++)		//222 	160bytes para SMS + 62 bytes header
 4910              		.loc 1 1591 0
 4911 007a 0F23     		movs	r3, #15	@ tmp168,
 4912 007c 6B44     		add	r3, r3, sp	@ tmp168,
 4913 007e 0022     		movs	r2, #0	@ tmp169,
 4914 0080 1A70     		strb	r2, [r3]	@ tmp170, j
 4915 0082 24E0     		b	.L345	@
 4916              	.L347:
1592:src/sim900_800.c **** 						{
1593:src/sim900_800.c **** 							if (GSMbuffRtaCommand[j] == '"')
 4917              		.loc 1 1593 0
 4918 0084 0F23     		movs	r3, #15	@ tmp171,
 4919 0086 6B44     		add	r3, r3, sp	@ tmp171,
 4920 0088 1B78     		ldrb	r3, [r3]	@ D.8023, j
 4921 008a 704A     		ldr	r2, .L359+16	@ tmp172,
 4922 008c D35C     		ldrb	r3, [r2, r3]	@ D.8022, GSMbuffRtaCommand
 4923 008e 222B     		cmp	r3, #34	@ D.8022,
 4924 0090 16D1     		bne	.L346	@,
1594:src/sim900_800.c **** 							{
1595:src/sim900_800.c **** 								colon_index++;
 4925              		.loc 1 1595 0
 4926 0092 0E23     		movs	r3, #14	@ tmp173,
 4927 0094 6B44     		add	r3, r3, sp	@ tmp173,
 4928 0096 1A78     		ldrb	r2, [r3]	@ D.8021, colon_index
 4929 0098 0E23     		movs	r3, #14	@ tmp174,
 4930 009a 6B44     		add	r3, r3, sp	@ tmp174,
 4931 009c 0132     		adds	r2, r2, #1	@ tmp175,
 4932 009e 1A70     		strb	r2, [r3]	@ tmp176, colon_index
1596:src/sim900_800.c **** 								if (colon_index == 8)
 4933              		.loc 1 1596 0
 4934 00a0 0E23     		movs	r3, #14	@ tmp177,
 4935 00a2 6B44     		add	r3, r3, sp	@ tmp177,
 4936 00a4 1B78     		ldrb	r3, [r3]	@ tmp178, colon_index
 4937 00a6 082B     		cmp	r3, #8	@ tmp178,
 4938 00a8 0AD1     		bne	.L346	@,
1597:src/sim900_800.c **** 								{
1598:src/sim900_800.c **** 									pToAnswer = (char *) &GSMbuffRtaCommand [j+1];
 4939              		.loc 1 1598 0
 4940 00aa 0F23     		movs	r3, #15	@ tmp179,
 4941 00ac 6B44     		add	r3, r3, sp	@ tmp179,
 4942 00ae 1B78     		ldrb	r3, [r3]	@ D.8023, j
 4943 00b0 5A1C     		adds	r2, r3, #1	@ D.8023, D.8023,
 4944 00b2 664B     		ldr	r3, .L359+16	@ tmp181,
 4945 00b4 D318     		adds	r3, r2, r3	@ tmp180, D.8023, tmp181
 4946 00b6 0293     		str	r3, [sp, #8]	@ tmp180, pToAnswer
1599:src/sim900_800.c **** 									j = 222;
 4947              		.loc 1 1599 0
 4948 00b8 0F23     		movs	r3, #15	@ tmp182,
 4949 00ba 6B44     		add	r3, r3, sp	@ tmp182,
 4950 00bc DE22     		movs	r2, #222	@ tmp183,
 4951 00be 1A70     		strb	r2, [r3]	@ tmp184, j
 4952              	.L346:
ARM GAS  /tmp/cc16P66I.s 			page 119


1591:src/sim900_800.c **** 						{
 4953              		.loc 1 1591 0 discriminator 2
 4954 00c0 0F23     		movs	r3, #15	@ tmp185,
 4955 00c2 6B44     		add	r3, r3, sp	@ tmp185,
 4956 00c4 1A78     		ldrb	r2, [r3]	@ D.8021, j
 4957 00c6 0F23     		movs	r3, #15	@ tmp186,
 4958 00c8 6B44     		add	r3, r3, sp	@ tmp186,
 4959 00ca 0132     		adds	r2, r2, #1	@ tmp187,
 4960 00cc 1A70     		strb	r2, [r3]	@ tmp188, j
 4961              	.L345:
1591:src/sim900_800.c **** 						{
 4962              		.loc 1 1591 0 is_stmt 0 discriminator 1
 4963 00ce 0F23     		movs	r3, #15	@ tmp189,
 4964 00d0 6B44     		add	r3, r3, sp	@ tmp189,
 4965 00d2 1B78     		ldrb	r3, [r3]	@ tmp190, j
 4966 00d4 DD2B     		cmp	r3, #221	@ tmp190,
 4967 00d6 D5D9     		bls	.L347	@,
1600:src/sim900_800.c **** 								}
1601:src/sim900_800.c **** 							}
1602:src/sim900_800.c **** 						}
1603:src/sim900_800.c **** 
1604:src/sim900_800.c **** 						//fin del for, en pToAnswer debo tener la respuesta (payload del SMS)
1605:src/sim900_800.c **** 						if (colon_index == 8)
 4968              		.loc 1 1605 0 is_stmt 1
 4969 00d8 0E23     		movs	r3, #14	@ tmp191,
 4970 00da 6B44     		add	r3, r3, sp	@ tmp191,
 4971 00dc 1B78     		ldrb	r3, [r3]	@ tmp192, colon_index
 4972 00de 082B     		cmp	r3, #8	@ tmp192,
 4973 00e0 67D1     		bne	.L348	@,
1606:src/sim900_800.c **** 						{
1607:src/sim900_800.c **** 							//Son todos payloads correctos REVISO RESPUESTAS
1608:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"REPORTAR:", sizeof ("REPORTAR:") -1))
 4974              		.loc 1 1608 0
 4975 00e2 5D49     		ldr	r1, .L359+28	@ tmp193,
 4976 00e4 029B     		ldr	r3, [sp, #8]	@ tmp194, pToAnswer
 4977 00e6 0922     		movs	r2, #9	@,
 4978 00e8 1800     		movs	r0, r3	@, tmp194
 4979 00ea FFF7FEFF 		bl	strncmp	@
 4980 00ee 031E     		subs	r3, r0, #0	@ D.8023,,
 4981 00f0 1BD1     		bne	.L349	@,
1609:src/sim900_800.c **** 							{
1610:src/sim900_800.c **** 								strcpy(num_tel_rep, (pToAnswer + 9));
 4982              		.loc 1 1610 0
 4983 00f2 029B     		ldr	r3, [sp, #8]	@ tmp195, pToAnswer
 4984 00f4 0933     		adds	r3, r3, #9	@ D.8024,
 4985 00f6 1A00     		movs	r2, r3	@ D.8024, D.8024
 4986 00f8 584B     		ldr	r3, .L359+32	@ tmp196,
 4987 00fa 1100     		movs	r1, r2	@, D.8024
 4988 00fc 1800     		movs	r0, r3	@, tmp196
 4989 00fe FFF7FEFF 		bl	strcpy	@
1611:src/sim900_800.c **** 								//quito el OK pegado
1612:src/sim900_800.c **** 								colon_index	= strlen(num_tel_rep);
 4990              		.loc 1 1612 0
 4991 0102 564B     		ldr	r3, .L359+32	@ tmp197,
 4992 0104 1800     		movs	r0, r3	@, tmp197
 4993 0106 FFF7FEFF 		bl	strlen	@
 4994 010a 0200     		movs	r2, r0	@ D.8025,
ARM GAS  /tmp/cc16P66I.s 			page 120


 4995 010c 0E23     		movs	r3, #14	@ tmp198,
 4996 010e 6B44     		add	r3, r3, sp	@ tmp198,
 4997 0110 1A70     		strb	r2, [r3]	@ tmp199, colon_index
1613:src/sim900_800.c **** 								if (colon_index > 2)
 4998              		.loc 1 1613 0
 4999 0112 0E23     		movs	r3, #14	@ tmp200,
 5000 0114 6B44     		add	r3, r3, sp	@ tmp200,
 5001 0116 1B78     		ldrb	r3, [r3]	@ tmp201, colon_index
 5002 0118 022B     		cmp	r3, #2	@ tmp201,
 5003 011a 06D9     		bls	.L349	@,
1614:src/sim900_800.c **** 									num_tel_rep[colon_index - 2] = '\0';
 5004              		.loc 1 1614 0
 5005 011c 0E23     		movs	r3, #14	@ tmp202,
 5006 011e 6B44     		add	r3, r3, sp	@ tmp202,
 5007 0120 1B78     		ldrb	r3, [r3]	@ D.8023, colon_index
 5008 0122 023B     		subs	r3, r3, #2	@ D.8023,
 5009 0124 4D4A     		ldr	r2, .L359+32	@ tmp203,
 5010 0126 0021     		movs	r1, #0	@ tmp204,
 5011 0128 D154     		strb	r1, [r2, r3]	@ tmp205, param_struct.num_reportar
 5012              	.L349:
1615:src/sim900_800.c **** 
1616:src/sim900_800.c **** 							}
1617:src/sim900_800.c **** 
1618:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"TIMER:", sizeof ("TIMER:") -1))
 5013              		.loc 1 1618 0
 5014 012a 4D49     		ldr	r1, .L359+36	@ tmp206,
 5015 012c 029B     		ldr	r3, [sp, #8]	@ tmp207, pToAnswer
 5016 012e 0622     		movs	r2, #6	@,
 5017 0130 1800     		movs	r0, r3	@, tmp207
 5018 0132 FFF7FEFF 		bl	strncmp	@
 5019 0136 031E     		subs	r3, r0, #0	@ D.8023,,
 5020 0138 30D1     		bne	.L350	@,
1619:src/sim900_800.c **** 							{
1620:src/sim900_800.c **** 								colon_index = 0;
 5021              		.loc 1 1620 0
 5022 013a 0E23     		movs	r3, #14	@ tmp208,
 5023 013c 6B44     		add	r3, r3, sp	@ tmp208,
 5024 013e 0022     		movs	r2, #0	@ tmp209,
 5025 0140 1A70     		strb	r2, [r3]	@ tmp210, colon_index
1621:src/sim900_800.c **** 								colon_index += (*(pToAnswer + 6) - 48) * 10;
 5026              		.loc 1 1621 0
 5027 0142 029B     		ldr	r3, [sp, #8]	@ tmp211, pToAnswer
 5028 0144 0633     		adds	r3, r3, #6	@ D.8024,
 5029 0146 1B78     		ldrb	r3, [r3]	@ D.8022, *_52
 5030 0148 303B     		subs	r3, r3, #48	@ D.8023,
 5031 014a DBB2     		uxtb	r3, r3	@ D.8021, D.8023
 5032 014c 1A1C     		adds	r2, r3, #0	@ tmp213, tmp212
 5033 014e 9200     		lsls	r2, r2, #2	@ tmp214, tmp213,
 5034 0150 D318     		adds	r3, r2, r3	@ tmp216, tmp215, tmp212
 5035 0152 DB18     		adds	r3, r3, r3	@ tmp218, tmp217, tmp217
 5036 0154 D9B2     		uxtb	r1, r3	@ D.8021, tmp216
 5037 0156 0E23     		movs	r3, #14	@ tmp219,
 5038 0158 6B44     		add	r3, r3, sp	@ tmp219,
 5039 015a 0E22     		movs	r2, #14	@ tmp220,
 5040 015c 6A44     		add	r2, r2, sp	@ tmp220,
 5041 015e 1278     		ldrb	r2, [r2]	@ tmp221, colon_index
 5042 0160 8A18     		adds	r2, r1, r2	@ tmp222, D.8021, tmp221
ARM GAS  /tmp/cc16P66I.s 			page 121


 5043 0162 1A70     		strb	r2, [r3]	@ tmp223, colon_index
1622:src/sim900_800.c **** 								colon_index += *(pToAnswer + 7) - 48;
 5044              		.loc 1 1622 0
 5045 0164 029B     		ldr	r3, [sp, #8]	@ tmp224, pToAnswer
 5046 0166 0733     		adds	r3, r3, #7	@ D.8024,
 5047 0168 1A78     		ldrb	r2, [r3]	@ D.8022, *_59
 5048 016a 0E23     		movs	r3, #14	@ tmp225,
 5049 016c 6B44     		add	r3, r3, sp	@ tmp225,
 5050 016e 1B78     		ldrb	r3, [r3]	@ tmp226, colon_index
 5051 0170 D318     		adds	r3, r2, r3	@ tmp227, D.8022, tmp226
 5052 0172 DAB2     		uxtb	r2, r3	@ D.8021, tmp227
 5053 0174 0E23     		movs	r3, #14	@ tmp228,
 5054 0176 6B44     		add	r3, r3, sp	@ tmp228,
 5055 0178 303A     		subs	r2, r2, #48	@ tmp229,
 5056 017a 1A70     		strb	r2, [r3]	@ tmp230, colon_index
1623:src/sim900_800.c **** 
1624:src/sim900_800.c **** 								if ((colon_index > 1) && (colon_index <= 60))
 5057              		.loc 1 1624 0
 5058 017c 0E23     		movs	r3, #14	@ tmp231,
 5059 017e 6B44     		add	r3, r3, sp	@ tmp231,
 5060 0180 1B78     		ldrb	r3, [r3]	@ tmp232, colon_index
 5061 0182 012B     		cmp	r3, #1	@ tmp232,
 5062 0184 0AD9     		bls	.L350	@,
 5063              		.loc 1 1624 0 is_stmt 0 discriminator 1
 5064 0186 0E23     		movs	r3, #14	@ tmp233,
 5065 0188 6B44     		add	r3, r3, sp	@ tmp233,
 5066 018a 1B78     		ldrb	r3, [r3]	@ tmp234, colon_index
 5067 018c 3C2B     		cmp	r3, #60	@ tmp234,
 5068 018e 05D8     		bhi	.L350	@,
1625:src/sim900_800.c **** 									timer_rep = colon_index;
 5069              		.loc 1 1625 0 is_stmt 1
 5070 0190 324B     		ldr	r3, .L359+32	@ tmp235,
 5071 0192 0E22     		movs	r2, #14	@ tmp236,
 5072 0194 6A44     		add	r2, r2, sp	@ tmp236,
 5073 0196 5221     		movs	r1, #82	@ tmp237,
 5074 0198 1278     		ldrb	r2, [r2]	@ tmp238, colon_index
 5075 019a 5A54     		strb	r2, [r3, r1]	@ tmp238, param_struct.timer_reportar
 5076              	.L350:
1626:src/sim900_800.c **** 							}
1627:src/sim900_800.c **** 
1628:src/sim900_800.c **** 							if (!strncmp(pToAnswer, (const char *)"ENERGIA:", sizeof ("ENERGIA:") -1))
 5077              		.loc 1 1628 0
 5078 019c 3149     		ldr	r1, .L359+40	@ tmp239,
 5079 019e 029B     		ldr	r3, [sp, #8]	@ tmp240, pToAnswer
 5080 01a0 0822     		movs	r2, #8	@,
 5081 01a2 1800     		movs	r0, r3	@, tmp240
 5082 01a4 FFF7FEFF 		bl	strncmp	@
 5083 01a8 031E     		subs	r3, r0, #0	@ D.8023,,
 5084 01aa 02D1     		bne	.L348	@,
1629:src/sim900_800.c **** 								send_energy = 1;
 5085              		.loc 1 1629 0
 5086 01ac 2E4B     		ldr	r3, .L359+44	@ tmp241,
 5087 01ae 0122     		movs	r2, #1	@ tmp242,
 5088 01b0 1A70     		strb	r2, [r3]	@ tmp243, send_energy
 5089              	.L348:
1630:src/sim900_800.c **** 
1631:src/sim900_800.c **** 						}
ARM GAS  /tmp/cc16P66I.s 			page 122


1632:src/sim900_800.c **** 
1633:src/sim900_800.c **** 						//me fijo si tengo mas SMS
1634:src/sim900_800.c **** 						if (GSMCantSMS > 1)
 5090              		.loc 1 1634 0
 5091 01b2 224B     		ldr	r3, .L359	@ tmp244,
 5092 01b4 1B78     		ldrb	r3, [r3]	@ D.8021, GSMCantSMS
 5093 01b6 012B     		cmp	r3, #1	@ D.8021,
 5094 01b8 09D9     		bls	.L351	@,
1635:src/sim900_800.c **** 						{
1636:src/sim900_800.c **** 							GSMReadSMSState = 0;
 5095              		.loc 1 1636 0
 5096 01ba 214B     		ldr	r3, .L359+4	@ tmp245,
 5097 01bc 0022     		movs	r2, #0	@ tmp246,
 5098 01be 1A70     		strb	r2, [r3]	@ tmp247, GSMReadSMSState
1637:src/sim900_800.c **** 							GSMCantSMS--;
 5099              		.loc 1 1637 0
 5100 01c0 1E4B     		ldr	r3, .L359	@ tmp248,
 5101 01c2 1B78     		ldrb	r3, [r3]	@ D.8021, GSMCantSMS
 5102 01c4 013B     		subs	r3, r3, #1	@ tmp249,
 5103 01c6 DAB2     		uxtb	r2, r3	@ D.8021, tmp249
 5104 01c8 1C4B     		ldr	r3, .L359	@ tmp250,
 5105 01ca 1A70     		strb	r2, [r3]	@ tmp251, GSMCantSMS
 5106 01cc 05E0     		b	.L344	@
 5107              	.L351:
1638:src/sim900_800.c **** 						}
1639:src/sim900_800.c **** 						else
1640:src/sim900_800.c **** 							GSMReadSMSState++;
 5108              		.loc 1 1640 0
 5109 01ce 1C4B     		ldr	r3, .L359+4	@ tmp252,
 5110 01d0 1B78     		ldrb	r3, [r3]	@ D.8022, GSMReadSMSState
 5111 01d2 0133     		adds	r3, r3, #1	@ tmp253,
 5112 01d4 DAB2     		uxtb	r2, r3	@ D.8022, tmp253
 5113 01d6 1A4B     		ldr	r3, .L359+4	@ tmp254,
 5114 01d8 1A70     		strb	r2, [r3]	@ tmp255, GSMReadSMSState
 5115              	.L344:
1641:src/sim900_800.c **** 					}
1642:src/sim900_800.c **** 				}
1643:src/sim900_800.c **** 
1644:src/sim900_800.c **** 				if (i > 2)
 5116              		.loc 1 1644 0
 5117 01da 6B46     		mov	r3, sp	@ tmp310,
 5118 01dc 0733     		adds	r3, r3, #7	@ tmp256,
 5119 01de 1B78     		ldrb	r3, [r3]	@ tmp257, i
 5120 01e0 022B     		cmp	r3, #2	@ tmp257,
 5121 01e2 25D9     		bls	.L357	@,
1645:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5122              		.loc 1 1645 0
 5123 01e4 164B     		ldr	r3, .L359+4	@ tmp258,
 5124 01e6 0022     		movs	r2, #0	@ tmp259,
 5125 01e8 1A70     		strb	r2, [r3]	@ tmp260, GSMReadSMSState
1646:src/sim900_800.c **** 
1647:src/sim900_800.c **** 				break;
 5126              		.loc 1 1647 0
 5127 01ea 21E0     		b	.L357	@
 5128              	.L342:
1648:src/sim900_800.c **** 
1649:src/sim900_800.c **** 			case 2:
ARM GAS  /tmp/cc16P66I.s 			page 123


1650:src/sim900_800.c **** 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 25000, 0, &GSMbuffRtaCommand[0]);
 5129              		.loc 1 1650 0
 5130 01ec 6B46     		mov	r3, sp	@ tmp311,
 5131 01ee DC1D     		adds	r4, r3, #7	@ tmp261, tmp311,
 5132 01f0 164B     		ldr	r3, .L359+16	@ tmp262,
 5133 01f2 1E49     		ldr	r1, .L359+48	@ tmp263,
 5134 01f4 1E48     		ldr	r0, .L359+52	@ tmp264,
 5135 01f6 0022     		movs	r2, #0	@,
 5136 01f8 FFF7FEFF 		bl	GSMSendCommand	@
 5137 01fc 0300     		movs	r3, r0	@ tmp265,
 5138 01fe 2370     		strb	r3, [r4]	@ tmp267, i
1651:src/sim900_800.c **** 
1652:src/sim900_800.c **** 				if (i == 2)
 5139              		.loc 1 1652 0
 5140 0200 6B46     		mov	r3, sp	@ tmp312,
 5141 0202 0733     		adds	r3, r3, #7	@ tmp268,
 5142 0204 1B78     		ldrb	r3, [r3]	@ tmp269, i
 5143 0206 022B     		cmp	r3, #2	@ tmp269,
 5144 0208 05D1     		bne	.L353	@,
1653:src/sim900_800.c **** 				{
1654:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5145              		.loc 1 1654 0
 5146 020a 0D4B     		ldr	r3, .L359+4	@ tmp270,
 5147 020c 0022     		movs	r2, #0	@ tmp271,
 5148 020e 1A70     		strb	r2, [r3]	@ tmp272, GSMReadSMSState
1655:src/sim900_800.c **** 					GSMCantSMS = 0;
 5149              		.loc 1 1655 0
 5150 0210 0A4B     		ldr	r3, .L359	@ tmp273,
 5151 0212 0022     		movs	r2, #0	@ tmp274,
 5152 0214 1A70     		strb	r2, [r3]	@ tmp275, GSMCantSMS
 5153              	.L353:
1656:src/sim900_800.c **** 				}
1657:src/sim900_800.c **** 
1658:src/sim900_800.c **** 				if (i > 2)
 5154              		.loc 1 1658 0
 5155 0216 6B46     		mov	r3, sp	@ tmp313,
 5156 0218 0733     		adds	r3, r3, #7	@ tmp276,
 5157 021a 1B78     		ldrb	r3, [r3]	@ tmp277, i
 5158 021c 022B     		cmp	r3, #2	@ tmp277,
 5159 021e 09D9     		bls	.L358	@,
1659:src/sim900_800.c **** 					GSMReadSMSState = 0;
 5160              		.loc 1 1659 0
 5161 0220 074B     		ldr	r3, .L359+4	@ tmp278,
 5162 0222 0022     		movs	r2, #0	@ tmp279,
 5163 0224 1A70     		strb	r2, [r3]	@ tmp280, GSMReadSMSState
1660:src/sim900_800.c **** 
1661:src/sim900_800.c **** 				break;
 5164              		.loc 1 1661 0
 5165 0226 05E0     		b	.L358	@
 5166              	.L355:
1662:src/sim900_800.c **** 
1663:src/sim900_800.c **** 			default:
1664:src/sim900_800.c **** 				GSMReadSMSState = 0;
 5167              		.loc 1 1664 0
 5168 0228 054B     		ldr	r3, .L359+4	@ tmp281,
 5169 022a 0022     		movs	r2, #0	@ tmp282,
 5170 022c 1A70     		strb	r2, [r3]	@ tmp283, GSMReadSMSState
ARM GAS  /tmp/cc16P66I.s 			page 124


1665:src/sim900_800.c **** 				break;
 5171              		.loc 1 1665 0
 5172 022e 02E0     		b	.L339	@
 5173              	.L357:
1647:src/sim900_800.c **** 
 5174              		.loc 1 1647 0
 5175 0230 C046     		nop
 5176 0232 00E0     		b	.L356	@
 5177              	.L358:
1661:src/sim900_800.c **** 
 5178              		.loc 1 1661 0
 5179 0234 C046     		nop
 5180              	.L339:
 5181              	.L356:
1666:src/sim900_800.c **** 		}
1667:src/sim900_800.c **** 	}
1668:src/sim900_800.c **** }
 5182              		.loc 1 1668 0
 5183 0236 C046     		nop
 5184 0238 04B0     		add	sp, sp, #16	@,,
 5185              		@ sp needed	@
 5186 023a 10BD     		pop	{r4, pc}
 5187              	.L360:
 5188              		.align	2
 5189              	.L359:
 5190 023c 00000000 		.word	GSMCantSMS
 5191 0240 00000000 		.word	GSMReadSMSState
 5192 0244 34020000 		.word	.LC183
 5193 0248 00000000 		.word	GSMReadSMScommand
 5194 024c 00000000 		.word	GSMbuffRtaCommand
 5195 0250 70170000 		.word	6000
 5196 0254 44020000 		.word	.LC187
 5197 0258 4C020000 		.word	.LC189
 5198 025c 00000000 		.word	param_struct
 5199 0260 58020000 		.word	.LC192
 5200 0264 60020000 		.word	.LC194
 5201 0268 00000000 		.word	send_energy
 5202 026c A8610000 		.word	25000
 5203 0270 6C020000 		.word	.LC197
 5204              		.cfi_endproc
 5205              	.LFE35:
 5206              		.size	GSMReceivSMS, .-GSMReceivSMS
 5207              		.section	.text.GSMConfigPDPGPRS,"ax",%progbits
 5208              		.align	2
 5209              		.global	GSMConfigPDPGPRS
 5210              		.code	16
 5211              		.thumb_func
 5212              		.type	GSMConfigPDPGPRS, %function
 5213              	GSMConfigPDPGPRS:
 5214              	.LFB36:
1669:src/sim900_800.c **** //---------------------------------------------------------//
1670:src/sim900_800.c **** //void GSMrxSMS(char * ptrMSG, char *ptrNumTel, char flagSMSin)
1671:src/sim900_800.c **** //---------------------------------------------------------//
1672:src/sim900_800.c **** // void GSMrxSMS(unsigned char * pAlertasReportar, char * puserCode, unsigned char * pclaveAct, uns
1673:src/sim900_800.c **** // {
1674:src/sim900_800.c **** // 	unsigned char i;
1675:src/sim900_800.c **** // 	unsigned char flag;
ARM GAS  /tmp/cc16P66I.s 			page 125


1676:src/sim900_800.c **** //
1677:src/sim900_800.c **** // 	if (GSMCantSMS)
1678:src/sim900_800.c **** // 	{
1679:src/sim900_800.c **** // 		switch(GSMrxSMSState)
1680:src/sim900_800.c **** // 		{
1681:src/sim900_800.c **** //
1682:src/sim900_800.c **** // 			case 0:
1683:src/sim900_800.c **** // 				GSMrxSMSState++;
1684:src/sim900_800.c **** // 				break;
1685:src/sim900_800.c **** // 			case 1:
1686:src/sim900_800.c **** // 				i = GSM_SetSIM (1);
1687:src/sim900_800.c **** //
1688:src/sim900_800.c **** // 				if (i == 2)
1689:src/sim900_800.c **** // 					GSMrxSMSState++;
1690:src/sim900_800.c **** // 				if (i > 2)
1691:src/sim900_800.c **** // 					GSMrxSMSState=0;
1692:src/sim900_800.c **** // 				break;
1693:src/sim900_800.c **** //
1694:src/sim900_800.c **** // 			case 2:
1695:src/sim900_800.c **** // 					//Verifico que no hayan sido leidos los SMS.
1696:src/sim900_800.c **** // 					if (GSMnumSMS <= GSMCantSMS)
1697:src/sim900_800.c **** // 					{
1698:src/sim900_800.c **** // 						switch(GSMReadSMSState)
1699:src/sim900_800.c **** // 						{
1700:src/sim900_800.c **** // 							case 0:
1701:src/sim900_800.c **** // 								GSMReadSMSrepIn[0] = 0;
1702:src/sim900_800.c **** // 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
1703:src/sim900_800.c **** // 								GSMReadSMSState++;
1704:src/sim900_800.c **** // 								break;
1705:src/sim900_800.c **** //
1706:src/sim900_800.c **** // 							case 1:
1707:src/sim900_800.c **** //
1708:src/sim900_800.c **** // 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
1709:src/sim900_800.c **** //
1710:src/sim900_800.c **** // 								if (i == 2)
1711:src/sim900_800.c **** // 								{
1712:src/sim900_800.c **** // 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 
1713:src/sim900_800.c **** // 									{
1714:src/sim900_800.c **** //
1715:src/sim900_800.c **** // 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
1716:src/sim900_800.c **** // 										{
1717:src/sim900_800.c **** // 											i = 0;
1718:src/sim900_800.c **** // 											flag = 0;
1719:src/sim900_800.c **** // 											while (GSMbuffRtaCommand[i] != 0)
1720:src/sim900_800.c **** // 											{
1721:src/sim900_800.c **** // 												if ((GSMbuffRtaCommand[i] == ',') && (GSMbuffRtaCommand[i+1] == '"') && (flag == 0))
1722:src/sim900_800.c **** // 												{
1723:src/sim900_800.c **** // 													i += 2;
1724:src/sim900_800.c **** // 													flag = i;
1725:src/sim900_800.c **** // 													while (GSMbuffRtaCommand[i] != '"')
1726:src/sim900_800.c **** // 													{
1727:src/sim900_800.c **** // 														i++;
1728:src/sim900_800.c **** // 													}
1729:src/sim900_800.c **** // 													strncpy(pGSMReadSMStel, &GSMbuffRtaCommand[flag], (i - flag));
1730:src/sim900_800.c **** // 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1731:src/sim900_800.c **** // 													//UARTDBGSend(pGSMReadSMStel);
1732:src/sim900_800.c **** // 													//GSMReadSMStel[0]  = 0;
ARM GAS  /tmp/cc16P66I.s 			page 126


1733:src/sim900_800.c **** // 												}
1734:src/sim900_800.c **** // 												i++;
1735:src/sim900_800.c **** // 											}
1736:src/sim900_800.c **** //
1737:src/sim900_800.c **** // 											GSMReadSMSrepIn[19] = 0;
1738:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000:
1739:src/sim900_800.c **** // 											{
1740:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1741:src/sim900_800.c **** // 												{
1742:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1743:src/sim900_800.c **** //
1744:src/sim900_800.c **** // 													*pActDact |= 0x40; //Armar
1745:src/sim900_800.c **** // 													*pActDact |= 0x01; //SendOK.
1746:src/sim900_800.c **** // 												}
1747:src/sim900_800.c **** // 											}
1748:src/sim900_800.c **** //
1749:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000:
1750:src/sim900_800.c **** // 											{
1751:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1752:src/sim900_800.c **** // 												{
1753:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1754:src/sim900_800.c **** //
1755:src/sim900_800.c **** // 													*pActDact |= 0x80; //Desrmar
1756:src/sim900_800.c **** // 													*pActDact |= 0x01; //SendOK.
1757:src/sim900_800.c **** // 												}
1758:src/sim900_800.c **** // 											}
1759:src/sim900_800.c **** // 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1760:src/sim900_800.c **** // 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1761:src/sim900_800.c **** // 											//Led4Toggle();
1762:src/sim900_800.c **** // 										}
1763:src/sim900_800.c **** //
1764:src/sim900_800.c **** // 										GSMReadSMSState = 0;
1765:src/sim900_800.c **** // 										GSMnumSMS++;
1766:src/sim900_800.c **** // 									}
1767:src/sim900_800.c **** // 								}
1768:src/sim900_800.c **** //
1769:src/sim900_800.c **** // 								if (i > 2)
1770:src/sim900_800.c **** // 								{
1771:src/sim900_800.c **** // 									GSMReadSMSState = 0;
1772:src/sim900_800.c **** // 								}
1773:src/sim900_800.c **** // 							break;
1774:src/sim900_800.c **** //
1775:src/sim900_800.c **** // 						default:
1776:src/sim900_800.c **** // 							GSMReadSMSState = 0;
1777:src/sim900_800.c **** // 							break;
1778:src/sim900_800.c **** // 						}
1779:src/sim900_800.c **** // 			}
1780:src/sim900_800.c **** // 			else
1781:src/sim900_800.c **** // 			{
1782:src/sim900_800.c **** //
1783:src/sim900_800.c **** // 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1784:src/sim900_800.c **** //
1785:src/sim900_800.c **** // 				if (i == 2)
1786:src/sim900_800.c **** // 				{
1787:src/sim900_800.c **** // 					GSMnumSMS = 1;
1788:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1789:src/sim900_800.c **** // 					GSMReadSMSState = 0;
ARM GAS  /tmp/cc16P66I.s 			page 127


1790:src/sim900_800.c **** // 					GSMCantSMS = 0;
1791:src/sim900_800.c **** // 				}
1792:src/sim900_800.c **** //
1793:src/sim900_800.c **** // 				if (i > 2)
1794:src/sim900_800.c **** // 				{
1795:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1796:src/sim900_800.c **** // 				}
1797:src/sim900_800.c **** // 			}
1798:src/sim900_800.c **** // 			break;
1799:src/sim900_800.c **** //
1800:src/sim900_800.c **** // 		default:
1801:src/sim900_800.c **** // 			GSMrxSMSState = 0;
1802:src/sim900_800.c **** // 			break;
1803:src/sim900_800.c **** // 		}
1804:src/sim900_800.c **** // 	}
1805:src/sim900_800.c **** // 	else if (GSMCantSMS2)
1806:src/sim900_800.c **** // 	{
1807:src/sim900_800.c **** // 		switch(GSMrxSMSState)
1808:src/sim900_800.c **** // 		{
1809:src/sim900_800.c **** //
1810:src/sim900_800.c **** // 			case 0:
1811:src/sim900_800.c **** // 				GSMrxSMSState++;
1812:src/sim900_800.c **** // 				break;
1813:src/sim900_800.c **** // 			case 1:
1814:src/sim900_800.c **** // 				i = GSM_SetSIM (2);
1815:src/sim900_800.c **** //
1816:src/sim900_800.c **** // 				if (i == 2)
1817:src/sim900_800.c **** // 					GSMrxSMSState++;
1818:src/sim900_800.c **** // 				if (i > 2)
1819:src/sim900_800.c **** // 					GSMrxSMSState=0;
1820:src/sim900_800.c **** // 				break;
1821:src/sim900_800.c **** //
1822:src/sim900_800.c **** // 			case 2:
1823:src/sim900_800.c **** // 					//Verifico que no hayan sido leidos los SMS.
1824:src/sim900_800.c **** // 					if (GSMnumSMS <= GSMCantSMS2)
1825:src/sim900_800.c **** // 					{
1826:src/sim900_800.c **** // 						switch(GSMReadSMSState)
1827:src/sim900_800.c **** // 						{
1828:src/sim900_800.c **** // 							case 0:
1829:src/sim900_800.c **** // 								GSMReadSMSrepIn[0] = 0;
1830:src/sim900_800.c **** // 								sprintf(&GSMReadSMScommand[0], (const char *)"AT+CMGR=%d\r\n", GSMnumSMS);
1831:src/sim900_800.c **** // 								GSMReadSMSState++;
1832:src/sim900_800.c **** // 								break;
1833:src/sim900_800.c **** //
1834:src/sim900_800.c **** // 							case 1:
1835:src/sim900_800.c **** //
1836:src/sim900_800.c **** // 								i = GSMSendCommand (&GSMReadSMScommand[0], 15, 1, &GSMbuffRtaCommand[0]);
1837:src/sim900_800.c **** //
1838:src/sim900_800.c **** // 								if (i == 2)
1839:src/sim900_800.c **** // 								{
1840:src/sim900_800.c **** // 									if (!strncmp((char *)&GSMbuffRtaCommand[0], (const char *)"+CMGR:", sizeof("+CMGR:") - 
1841:src/sim900_800.c **** // 									{
1842:src/sim900_800.c **** //
1843:src/sim900_800.c **** // 										if (!strncmp((char *)&GSMReadSMSrepIn[0], (const char *)"000:", sizeof ("000:") -1))
1844:src/sim900_800.c **** // 										{
1845:src/sim900_800.c **** // 											i = 0;
1846:src/sim900_800.c **** // 											flag = 0;
ARM GAS  /tmp/cc16P66I.s 			page 128


1847:src/sim900_800.c **** // 											while (*(GSMbuffRtaCommand+i) != 0)
1848:src/sim900_800.c **** // 											{
1849:src/sim900_800.c **** // 												if ((*(GSMbuffRtaCommand+i) == ',') && (*(GSMbuffRtaCommand+i+1) == '"') && (flag ==
1850:src/sim900_800.c **** // 												{
1851:src/sim900_800.c **** // 													i += 2;
1852:src/sim900_800.c **** // 													flag = i;
1853:src/sim900_800.c **** // 													while (*(GSMbuffRtaCommand+i) != '"')
1854:src/sim900_800.c **** // 													{
1855:src/sim900_800.c **** // 														i++;
1856:src/sim900_800.c **** // 													}
1857:src/sim900_800.c **** // 													strncpy((char *)pGSMReadSMStel, (const char *)&GSMbuffRtaCommand[flag], (i - flag))
1858:src/sim900_800.c **** // 													//strcat(pGSMReadSMStel, (const char *)"\r\n");
1859:src/sim900_800.c **** // 													//UARTDBGSend(pGSMReadSMStel);
1860:src/sim900_800.c **** // 													//*pGSMReadSMStel  = 0;
1861:src/sim900_800.c **** // 												}
1862:src/sim900_800.c **** // 												i++;
1863:src/sim900_800.c **** // 											}
1864:src/sim900_800.c **** //
1865:src/sim900_800.c **** // 											GSMReadSMSrepIn[19] = 0;
1866:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: ARM", sizeof("000:
1867:src/sim900_800.c **** // 											{
1868:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1869:src/sim900_800.c **** // 												{
1870:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1871:src/sim900_800.c **** //
1872:src/sim900_800.c **** // 													*pActDact |= 0x40; //Armar
1873:src/sim900_800.c **** // 													*pActDact |= 0x02; //SendOK.
1874:src/sim900_800.c **** // 												}
1875:src/sim900_800.c **** // 											}
1876:src/sim900_800.c **** //
1877:src/sim900_800.c **** // 											if(!strncmp((const char *)&GSMReadSMSrepIn[0], (const char *)"000: DRM", sizeof("000:
1878:src/sim900_800.c **** // 											{
1879:src/sim900_800.c **** // 												if (!strncmp((const char *)&GSMReadSMSrepIn[9], (const char *)puserCode, strlen((con
1880:src/sim900_800.c **** // 												{
1881:src/sim900_800.c **** // 													strncpy((char *) pclaveAct, (const char *)&buffUARTGSMrx2[16], 4);
1882:src/sim900_800.c **** //
1883:src/sim900_800.c **** // 													*pActDact |= 0x80; //Desrmar
1884:src/sim900_800.c **** // 													*pActDact |= 0x02; //SendOK.
1885:src/sim900_800.c **** // 												}
1886:src/sim900_800.c **** // 											}
1887:src/sim900_800.c **** // 											//strcat(&GSMReadSMSrepIn[0], (const char *)"\r\n");
1888:src/sim900_800.c **** // 											//UARTDBGSend(&GSMReadSMSrepIn[0]);
1889:src/sim900_800.c **** // 											//Led4Toggle();
1890:src/sim900_800.c **** // 										}
1891:src/sim900_800.c **** //
1892:src/sim900_800.c **** // 										GSMReadSMSState = 0;
1893:src/sim900_800.c **** // 										GSMnumSMS++;
1894:src/sim900_800.c **** // 									}
1895:src/sim900_800.c **** // 								}
1896:src/sim900_800.c **** //
1897:src/sim900_800.c **** // 								if (i > 2)
1898:src/sim900_800.c **** // 								{
1899:src/sim900_800.c **** // 									GSMReadSMSState = 0;
1900:src/sim900_800.c **** // 									//GSMrxSMSState = 0;
1901:src/sim900_800.c **** // 								}
1902:src/sim900_800.c **** // 							break;
1903:src/sim900_800.c **** //
ARM GAS  /tmp/cc16P66I.s 			page 129


1904:src/sim900_800.c **** // 						default:
1905:src/sim900_800.c **** // 							GSMReadSMSState = 0;
1906:src/sim900_800.c **** // 							break;
1907:src/sim900_800.c **** // 						}
1908:src/sim900_800.c **** // 			}
1909:src/sim900_800.c **** // 			else
1910:src/sim900_800.c **** // 			{
1911:src/sim900_800.c **** //
1912:src/sim900_800.c **** // 				i = GSMSendCommand ("AT+CMGDA=\"DEL READ\"\r\n", 15, 0, &GSMbuffRtaCommand[0]);
1913:src/sim900_800.c **** //
1914:src/sim900_800.c **** // 				if (i == 2)
1915:src/sim900_800.c **** // 				{
1916:src/sim900_800.c **** // 					GSMnumSMS = 1;
1917:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1918:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1919:src/sim900_800.c **** // 					GSMCantSMS2 = 0;
1920:src/sim900_800.c **** // 				}
1921:src/sim900_800.c **** //
1922:src/sim900_800.c **** // 				if (i > 2)
1923:src/sim900_800.c **** // 				{
1924:src/sim900_800.c **** // 					GSMrxSMSState = 0;
1925:src/sim900_800.c **** // 					GSMReadSMSState = 0;
1926:src/sim900_800.c **** // 				}
1927:src/sim900_800.c **** // 			}
1928:src/sim900_800.c **** // 			break;
1929:src/sim900_800.c **** // 		default:
1930:src/sim900_800.c **** // 			GSMrxSMSState = 0;
1931:src/sim900_800.c **** // 			break;
1932:src/sim900_800.c **** // 		}
1933:src/sim900_800.c **** // 	}
1934:src/sim900_800.c **** // }
1935:src/sim900_800.c **** 
1936:src/sim900_800.c **** char GSMConfigPDPGPRS (char sim, char *ptrAPN, char *ptrUSER, char *ptrKEY , char *ptrIPAdd, char *
1937:src/sim900_800.c **** {
 5215              		.loc 1 1937 0
 5216              		.cfi_startproc
 5217 0000 10B5     		push	{r4, lr}	@
 5218              	.LCFI22:
 5219              		.cfi_def_cfa_offset 8
 5220              		.cfi_offset 4, -8
 5221              		.cfi_offset 14, -4
 5222 0002 86B0     		sub	sp, sp, #24	@,,
 5223              	.LCFI23:
 5224              		.cfi_def_cfa_offset 32
 5225 0004 0291     		str	r1, [sp, #8]	@ ptrAPN, ptrAPN
 5226 0006 0192     		str	r2, [sp, #4]	@ ptrUSER, ptrUSER
 5227 0008 0093     		str	r3, [sp]	@ ptrKEY, ptrKEY
 5228 000a 0F23     		movs	r3, #15	@ tmp173,
 5229 000c 6B44     		add	r3, r3, sp	@ tmp173,
 5230 000e 021C     		adds	r2, r0, #0	@ tmp174, tmp172
 5231 0010 1A70     		strb	r2, [r3]	@ tmp174, sim
1938:src/sim900_800.c **** 	unsigned char i;
1939:src/sim900_800.c **** 
1940:src/sim900_800.c **** 	switch(GSMConfigGPRSState)
 5232              		.loc 1 1940 0
 5233 0012 C64B     		ldr	r3, .L437	@ tmp175,
 5234 0014 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
ARM GAS  /tmp/cc16P66I.s 			page 130


 5235 0016 102B     		cmp	r3, #16	@ D.8033,
 5236 0018 00D9     		bls	.LCB4333	@
 5237 001a 21E3     		b	.L362	@long jump	@
 5238              	.LCB4333:
 5239 001c 9A00     		lsls	r2, r3, #2	@ tmp176, D.8033,
 5240 001e C44B     		ldr	r3, .L437+4	@ tmp178,
 5241 0020 D318     		adds	r3, r2, r3	@ tmp177, tmp176, tmp178
 5242 0022 1B68     		ldr	r3, [r3]	@ tmp179,
 5243 0024 9F46     		mov	pc, r3	@ tmp179
 5244              		.section	.rodata.GSMConfigPDPGPRS,"a",%progbits
 5245              		.align	2
 5246              	.L364:
 5247 0000 26000000 		.word	.L363
 5248 0004 42000000 		.word	.L365
 5249 0008 4A000000 		.word	.L366
 5250 000c 8A000000 		.word	.L367
 5251 0010 A2010000 		.word	.L368
 5252 0014 FE010000 		.word	.L369
 5253 0018 5A020000 		.word	.L370
 5254 001c EA020000 		.word	.L371
 5255 0020 8C030000 		.word	.L372
 5256 0024 32040000 		.word	.L373
 5257 0028 00050000 		.word	.L374
 5258 002c 3A050000 		.word	.L375
 5259 0030 74050000 		.word	.L376
 5260 0034 BA050000 		.word	.L377
 5261 0038 C2050000 		.word	.L378
 5262 003c CC050000 		.word	.L379
 5263 0040 24060000 		.word	.L380
 5264              		.section	.text.GSMConfigPDPGPRS
 5265              	.L363:
1941:src/sim900_800.c **** 	{
1942:src/sim900_800.c **** 
1943:src/sim900_800.c **** 		case 0:
1944:src/sim900_800.c **** 			GSMConfigGPRSTimeOut = timeOut;
 5266              		.loc 1 1944 0
 5267 0026 C34B     		ldr	r3, .L437+8	@ tmp180,
 5268 0028 0BAA     		add	r2, sp, #44	@ tmp181,,
 5269 002a 1288     		ldrh	r2, [r2]	@ tmp182, timeOut
 5270 002c 1A80     		strh	r2, [r3]	@ tmp182, GSMConfigGPRSTimeOut
1945:src/sim900_800.c **** 			GSMConfigGPRSState++;
 5271              		.loc 1 1945 0
 5272 002e BF4B     		ldr	r3, .L437	@ tmp183,
 5273 0030 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5274 0032 0133     		adds	r3, r3, #1	@ tmp184,
 5275 0034 DAB2     		uxtb	r2, r3	@ D.8032, tmp184
 5276 0036 BD4B     		ldr	r3, .L437	@ tmp185,
 5277 0038 1A70     		strb	r2, [r3]	@ tmp186, GSMConfigGPRSState
1946:src/sim900_800.c **** 			GSMConfigGPRSflag = 1;
 5278              		.loc 1 1946 0
 5279 003a BF4B     		ldr	r3, .L437+12	@ tmp187,
 5280 003c 0122     		movs	r2, #1	@ tmp188,
 5281 003e 1A70     		strb	r2, [r3]	@ tmp189, GSMConfigGPRSflag
1947:src/sim900_800.c **** 			break;
 5282              		.loc 1 1947 0
 5283 0040 29E3     		b	.L381	@
 5284              	.L365:
ARM GAS  /tmp/cc16P66I.s 			page 131


1948:src/sim900_800.c **** 
1949:src/sim900_800.c **** 		case 1:
1950:src/sim900_800.c **** 			GSMConfigGPRSState = 15;
 5285              		.loc 1 1950 0
 5286 0042 BA4B     		ldr	r3, .L437	@ tmp190,
 5287 0044 0F22     		movs	r2, #15	@ tmp191,
 5288 0046 1A70     		strb	r2, [r3]	@ tmp192, GSMConfigGPRSState
1951:src/sim900_800.c **** /*
1952:src/sim900_800.c **** 			i = GSMSendCommand("000: KAL,123456,100\r\n", 50, 0, &GSMbuffRtaCommand[0]);
1953:src/sim900_800.c **** 
1954:src/sim900_800.c **** 			if (i == 2)
1955:src/sim900_800.c **** 			{
1956:src/sim900_800.c **** 				//Respondio ACK.
1957:src/sim900_800.c **** 				//Conectado.
1958:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
1959:src/sim900_800.c **** 				return 2;
1960:src/sim900_800.c **** 			}
1961:src/sim900_800.c **** 
1962:src/sim900_800.c **** 			if (i > 2)
1963:src/sim900_800.c **** 			{
1964:src/sim900_800.c **** 				//No conectado.
1965:src/sim900_800.c **** 				//Seleccionar Sim.
1966:src/sim900_800.c **** 				GSMConfigGPRSState = 15;
1967:src/sim900_800.c **** 			}
1968:src/sim900_800.c **** */
1969:src/sim900_800.c **** 			break;
 5289              		.loc 1 1969 0
 5290 0048 25E3     		b	.L381	@
 5291              	.L366:
1970:src/sim900_800.c **** 		case 2:
1971:src/sim900_800.c **** 
1972:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSTATUS\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 5292              		.loc 1 1972 0
 5293 004a 1724     		movs	r4, #23	@ tmp193,
 5294 004c 6C44     		add	r4, r4, sp	@ tmp193,
 5295 004e BB4B     		ldr	r3, .L437+16	@ tmp194,
 5296 0050 BB48     		ldr	r0, .L437+20	@ tmp195,
 5297 0052 0022     		movs	r2, #0	@,
 5298 0054 3221     		movs	r1, #50	@,
 5299 0056 FFF7FEFF 		bl	GSMSendCommand	@
 5300 005a 0300     		movs	r3, r0	@ tmp196,
 5301 005c 2370     		strb	r3, [r4]	@ tmp198, i
1973:src/sim900_800.c **** 
1974:src/sim900_800.c **** 			if (i == 2)
 5302              		.loc 1 1974 0
 5303 005e 1723     		movs	r3, #23	@ tmp199,
 5304 0060 6B44     		add	r3, r3, sp	@ tmp199,
 5305 0062 1B78     		ldrb	r3, [r3]	@ tmp200, i
 5306 0064 022B     		cmp	r3, #2	@ tmp200,
 5307 0066 05D1     		bne	.L382	@,
1975:src/sim900_800.c **** 			{
1976:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5308              		.loc 1 1976 0
 5309 0068 B04B     		ldr	r3, .L437	@ tmp201,
 5310 006a 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5311 006c 0133     		adds	r3, r3, #1	@ tmp202,
 5312 006e DAB2     		uxtb	r2, r3	@ D.8032, tmp202
ARM GAS  /tmp/cc16P66I.s 			page 132


 5313 0070 AE4B     		ldr	r3, .L437	@ tmp203,
 5314 0072 1A70     		strb	r2, [r3]	@ tmp204, GSMConfigGPRSState
 5315              	.L382:
1977:src/sim900_800.c **** 			}
1978:src/sim900_800.c **** 
1979:src/sim900_800.c **** 			if (i > 2)
 5316              		.loc 1 1979 0
 5317 0074 1723     		movs	r3, #23	@ tmp205,
 5318 0076 6B44     		add	r3, r3, sp	@ tmp205,
 5319 0078 1B78     		ldrb	r3, [r3]	@ tmp206, i
 5320 007a 022B     		cmp	r3, #2	@ tmp206,
 5321 007c 00D8     		bhi	.LCB4395	@
 5322 007e F3E2     		b	.L425	@long jump	@
 5323              	.LCB4395:
1980:src/sim900_800.c **** 			{
1981:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5324              		.loc 1 1981 0
 5325 0080 AA4B     		ldr	r3, .L437	@ tmp207,
 5326 0082 0022     		movs	r2, #0	@ tmp208,
 5327 0084 1A70     		strb	r2, [r3]	@ tmp209, GSMConfigGPRSState
1982:src/sim900_800.c **** 				return 3;
 5328              		.loc 1 1982 0
 5329 0086 0323     		movs	r3, #3	@ D.8032,
 5330 0088 0FE3     		b	.L384	@
 5331              	.L367:
1983:src/sim900_800.c **** 			}
1984:src/sim900_800.c **** 			break;
1985:src/sim900_800.c **** 		case 3:
1986:src/sim900_800.c **** 			if(GSMConfigGPRSflag == 2)
 5332              		.loc 1 1986 0
 5333 008a AB4B     		ldr	r3, .L437+12	@ tmp210,
 5334 008c 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSflag
 5335 008e 022B     		cmp	r3, #2	@ D.8032,
 5336 0090 00D0     		beq	.LCB4407	@
 5337 0092 EBE2     		b	.L426	@long jump	@
 5338              	.LCB4407:
1987:src/sim900_800.c **** 			{
1988:src/sim900_800.c **** 				//const char GSM_IPINITIAL[] 		= "IP INITIAL";
1989:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPINITIAL[0], strlen((const cha
 5339              		.loc 1 1989 0
 5340 0094 AB49     		ldr	r1, .L437+24	@ tmp211,
 5341 0096 AC4B     		ldr	r3, .L437+28	@ tmp212,
 5342 0098 0A22     		movs	r2, #10	@,
 5343 009a 1800     		movs	r0, r3	@, tmp212
 5344 009c FFF7FEFF 		bl	strncmp	@
 5345 00a0 031E     		subs	r3, r0, #0	@ D.8033,,
 5346 00a2 08D1     		bne	.L386	@,
1990:src/sim900_800.c **** 				{
1991:src/sim900_800.c **** 					GSMConfigGPRSState += 1;
 5347              		.loc 1 1991 0
 5348 00a4 A14B     		ldr	r3, .L437	@ tmp213,
 5349 00a6 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5350 00a8 0133     		adds	r3, r3, #1	@ tmp214,
 5351 00aa DAB2     		uxtb	r2, r3	@ D.8032, tmp214
 5352 00ac 9F4B     		ldr	r3, .L437	@ tmp215,
 5353 00ae 1A70     		strb	r2, [r3]	@ tmp216, GSMConfigGPRSState
1992:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
ARM GAS  /tmp/cc16P66I.s 			page 133


 5354              		.loc 1 1992 0
 5355 00b0 A14B     		ldr	r3, .L437+12	@ tmp217,
 5356 00b2 0122     		movs	r2, #1	@ tmp218,
 5357 00b4 1A70     		strb	r2, [r3]	@ tmp219, GSMConfigGPRSflag
 5358              	.L386:
1993:src/sim900_800.c **** 				}
1994:src/sim900_800.c **** 				//const char GSM_IPSTART[] 		= "IP START";
1995:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTART[0], strlen((const char 
 5359              		.loc 1 1995 0
 5360 00b6 A549     		ldr	r1, .L437+32	@ tmp220,
 5361 00b8 A34B     		ldr	r3, .L437+28	@ tmp221,
 5362 00ba 0822     		movs	r2, #8	@,
 5363 00bc 1800     		movs	r0, r3	@, tmp221
 5364 00be FFF7FEFF 		bl	strncmp	@
 5365 00c2 031E     		subs	r3, r0, #0	@ D.8033,,
 5366 00c4 08D1     		bne	.L387	@,
1996:src/sim900_800.c **** 				{
1997:src/sim900_800.c **** 					GSMConfigGPRSState += 8;
 5367              		.loc 1 1997 0
 5368 00c6 994B     		ldr	r3, .L437	@ tmp222,
 5369 00c8 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5370 00ca 0833     		adds	r3, r3, #8	@ tmp223,
 5371 00cc DAB2     		uxtb	r2, r3	@ D.8032, tmp223
 5372 00ce 974B     		ldr	r3, .L437	@ tmp224,
 5373 00d0 1A70     		strb	r2, [r3]	@ tmp225, GSMConfigGPRSState
1998:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5374              		.loc 1 1998 0
 5375 00d2 994B     		ldr	r3, .L437+12	@ tmp226,
 5376 00d4 0122     		movs	r2, #1	@ tmp227,
 5377 00d6 1A70     		strb	r2, [r3]	@ tmp228, GSMConfigGPRSflag
 5378              	.L387:
1999:src/sim900_800.c **** 				}
2000:src/sim900_800.c **** 				//const char GSM_IPGPRSACT[] 		= "IP GPRSACT";
2001:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPGPRSACT[0], strlen((const cha
 5379              		.loc 1 2001 0
 5380 00d8 9D49     		ldr	r1, .L437+36	@ tmp229,
 5381 00da 9B4B     		ldr	r3, .L437+28	@ tmp230,
 5382 00dc 0A22     		movs	r2, #10	@,
 5383 00de 1800     		movs	r0, r3	@, tmp230
 5384 00e0 FFF7FEFF 		bl	strncmp	@
 5385 00e4 031E     		subs	r3, r0, #0	@ D.8033,,
 5386 00e6 08D1     		bne	.L388	@,
2002:src/sim900_800.c **** 				{
2003:src/sim900_800.c **** 					GSMConfigGPRSState += 9;
 5387              		.loc 1 2003 0
 5388 00e8 904B     		ldr	r3, .L437	@ tmp231,
 5389 00ea 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5390 00ec 0933     		adds	r3, r3, #9	@ tmp232,
 5391 00ee DAB2     		uxtb	r2, r3	@ D.8032, tmp232
 5392 00f0 8E4B     		ldr	r3, .L437	@ tmp233,
 5393 00f2 1A70     		strb	r2, [r3]	@ tmp234, GSMConfigGPRSState
2004:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5394              		.loc 1 2004 0
 5395 00f4 904B     		ldr	r3, .L437+12	@ tmp235,
 5396 00f6 0122     		movs	r2, #1	@ tmp236,
 5397 00f8 1A70     		strb	r2, [r3]	@ tmp237, GSMConfigGPRSflag
 5398              	.L388:
ARM GAS  /tmp/cc16P66I.s 			page 134


2005:src/sim900_800.c **** 				}
2006:src/sim900_800.c **** 
2007:src/sim900_800.c **** 				//const char GSM_IPSTATUS[] 	= "IP STATUS";
2008:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPSTATUS[0], strlen((const char
 5399              		.loc 1 2008 0
 5400 00fa 9649     		ldr	r1, .L437+40	@ tmp238,
 5401 00fc 924B     		ldr	r3, .L437+28	@ tmp239,
 5402 00fe 0922     		movs	r2, #9	@,
 5403 0100 1800     		movs	r0, r3	@, tmp239
 5404 0102 FFF7FEFF 		bl	strncmp	@
 5405 0106 031E     		subs	r3, r0, #0	@ D.8033,,
 5406 0108 04D1     		bne	.L389	@,
2009:src/sim900_800.c **** 				{
2010:src/sim900_800.c **** /*					GSMConfigGPRSState += 10;
2011:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2012:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2013:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2014:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2015:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2016:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2017:src/sim900_800.c **** */
2018:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5407              		.loc 1 2018 0
 5408 010a 884B     		ldr	r3, .L437	@ tmp240,
 5409 010c 0022     		movs	r2, #0	@ tmp241,
 5410 010e 1A70     		strb	r2, [r3]	@ tmp242, GSMConfigGPRSState
2019:src/sim900_800.c **** 					return 2;
 5411              		.loc 1 2019 0
 5412 0110 0223     		movs	r3, #2	@ D.8032,
 5413 0112 CAE2     		b	.L384	@
 5414              	.L389:
2020:src/sim900_800.c **** 				}
2021:src/sim900_800.c **** 				//const char GSM_IPCONNECTING[] 	= "TCP CONNECTING";
2022:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNECTING[0], strlen((const 
 5415              		.loc 1 2022 0
 5416 0114 9049     		ldr	r1, .L437+44	@ tmp243,
 5417 0116 8C4B     		ldr	r3, .L437+28	@ tmp244,
 5418 0118 0E22     		movs	r2, #14	@,
 5419 011a 1800     		movs	r0, r3	@, tmp244
 5420 011c FFF7FEFF 		bl	strncmp	@
 5421 0120 031E     		subs	r3, r0, #0	@ D.8033,,
 5422 0122 04D1     		bne	.L390	@,
2023:src/sim900_800.c **** 				{
2024:src/sim900_800.c **** 					//GSMConfigGPRSState -= 1;
2025:src/sim900_800.c **** 					//GSMConfigGPRSflag = 1;
2026:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5423              		.loc 1 2026 0
 5424 0124 814B     		ldr	r3, .L437	@ tmp245,
 5425 0126 0022     		movs	r2, #0	@ tmp246,
 5426 0128 1A70     		strb	r2, [r3]	@ tmp247, GSMConfigGPRSState
2027:src/sim900_800.c **** 					return 2;
 5427              		.loc 1 2027 0
 5428 012a 0223     		movs	r3, #2	@ D.8032,
 5429 012c BDE2     		b	.L384	@
 5430              	.L390:
2028:src/sim900_800.c **** 				}
2029:src/sim900_800.c **** 				//const char GSM_IPCONNOK[] 		= "CONNECT OK";
ARM GAS  /tmp/cc16P66I.s 			page 135


2030:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNOK[0], strlen((const char
 5431              		.loc 1 2030 0
 5432 012e 8B49     		ldr	r1, .L437+48	@ tmp248,
 5433 0130 854B     		ldr	r3, .L437+28	@ tmp249,
 5434 0132 0A22     		movs	r2, #10	@,
 5435 0134 1800     		movs	r0, r3	@, tmp249
 5436 0136 FFF7FEFF 		bl	strncmp	@
 5437 013a 031E     		subs	r3, r0, #0	@ D.8033,,
 5438 013c 04D1     		bne	.L391	@,
2031:src/sim900_800.c **** 				{
2032:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5439              		.loc 1 2032 0
 5440 013e 7B4B     		ldr	r3, .L437	@ tmp250,
 5441 0140 0022     		movs	r2, #0	@ tmp251,
 5442 0142 1A70     		strb	r2, [r3]	@ tmp252, GSMConfigGPRSState
2033:src/sim900_800.c **** 					return 2;
 5443              		.loc 1 2033 0
 5444 0144 0223     		movs	r3, #2	@ D.8032,
 5445 0146 B0E2     		b	.L384	@
 5446              	.L391:
2034:src/sim900_800.c **** 				}
2035:src/sim900_800.c **** /*				//const char GSM_IPCONNFAIL[] 	= "CONNECT FAIL";
2036:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNFAIL[0], strlen((const ch
2037:src/sim900_800.c **** 				{
2038:src/sim900_800.c **** 					GSMConfigGPRSState += 11;
2039:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2040:src/sim900_800.c **** 				}
2041:src/sim900_800.c **** */
2042:src/sim900_800.c **** 				//const char GSM_IPCONNCLOSE[] 	= "TCP CLOSED";
2043:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)&GSM_IPCONNCLOSE[0], strlen((const c
 5447              		.loc 1 2043 0
 5448 0148 8549     		ldr	r1, .L437+52	@ tmp253,
 5449 014a 7F4B     		ldr	r3, .L437+28	@ tmp254,
 5450 014c 0A22     		movs	r2, #10	@,
 5451 014e 1800     		movs	r0, r3	@, tmp254
 5452 0150 FFF7FEFF 		bl	strncmp	@
 5453 0154 031E     		subs	r3, r0, #0	@ D.8033,,
 5454 0156 04D1     		bne	.L392	@,
2044:src/sim900_800.c **** 				{
2045:src/sim900_800.c **** 					/*	GSMConfigGPRSState += 10;
2046:src/sim900_800.c **** 					sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CIPSTART=\"TCP\",\"");
2047:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrIPremote);
2048:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\",\"");
2049:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], ptrPORTremote);
2050:src/sim900_800.c **** 					strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
2051:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2052:src/sim900_800.c **** 					*/
2053:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5455              		.loc 1 2053 0
 5456 0158 744B     		ldr	r3, .L437	@ tmp255,
 5457 015a 0022     		movs	r2, #0	@ tmp256,
 5458 015c 1A70     		strb	r2, [r3]	@ tmp257, GSMConfigGPRSState
2054:src/sim900_800.c **** 					return 2;
 5459              		.loc 1 2054 0
 5460 015e 0223     		movs	r3, #2	@ D.8032,
 5461 0160 A3E2     		b	.L384	@
 5462              	.L392:
ARM GAS  /tmp/cc16P66I.s 			page 136


2055:src/sim900_800.c **** 				}
2056:src/sim900_800.c **** 
2057:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"CONNECTED", sizeof("CONNECTED") - 1
 5463              		.loc 1 2057 0
 5464 0162 8049     		ldr	r1, .L437+56	@ tmp258,
 5465 0164 784B     		ldr	r3, .L437+28	@ tmp259,
 5466 0166 0922     		movs	r2, #9	@,
 5467 0168 1800     		movs	r0, r3	@, tmp259
 5468 016a FFF7FEFF 		bl	strncmp	@
 5469 016e 031E     		subs	r3, r0, #0	@ D.8033,,
 5470 0170 04D1     		bne	.L393	@,
2058:src/sim900_800.c **** 				{
2059:src/sim900_800.c **** 					/*GSMConfigGPRSState += 11;
2060:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
2061:src/sim900_800.c **** 					*/
2062:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5471              		.loc 1 2062 0
 5472 0172 6E4B     		ldr	r3, .L437	@ tmp260,
 5473 0174 0022     		movs	r2, #0	@ tmp261,
 5474 0176 1A70     		strb	r2, [r3]	@ tmp262, GSMConfigGPRSState
2063:src/sim900_800.c **** 					return 2;
 5475              		.loc 1 2063 0
 5476 0178 0223     		movs	r3, #2	@ D.8032,
 5477 017a 96E2     		b	.L384	@
 5478              	.L393:
2064:src/sim900_800.c **** 				}
2065:src/sim900_800.c **** 
2066:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffStatus[0], (const char *)"PDP DEACT", sizeof("PDP DEACT") - 1
 5479              		.loc 1 2066 0
 5480 017c 7A49     		ldr	r1, .L437+60	@ tmp263,
 5481 017e 724B     		ldr	r3, .L437+28	@ tmp264,
 5482 0180 0922     		movs	r2, #9	@,
 5483 0182 1800     		movs	r0, r3	@, tmp264
 5484 0184 FFF7FEFF 		bl	strncmp	@
 5485 0188 031E     		subs	r3, r0, #0	@ D.8033,,
 5486 018a 00D0     		beq	.LCB4552	@
 5487 018c 6EE2     		b	.L426	@long jump	@
 5488              	.LCB4552:
2067:src/sim900_800.c **** 				{
2068:src/sim900_800.c **** 					GSMConfigGPRSState += 13;
 5489              		.loc 1 2068 0
 5490 018e 674B     		ldr	r3, .L437	@ tmp265,
 5491 0190 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5492 0192 0D33     		adds	r3, r3, #13	@ tmp266,
 5493 0194 DAB2     		uxtb	r2, r3	@ D.8032, tmp266
 5494 0196 654B     		ldr	r3, .L437	@ tmp267,
 5495 0198 1A70     		strb	r2, [r3]	@ tmp268, GSMConfigGPRSState
2069:src/sim900_800.c **** 					GSMConfigGPRSflag = 1;
 5496              		.loc 1 2069 0
 5497 019a 674B     		ldr	r3, .L437+12	@ tmp269,
 5498 019c 0122     		movs	r2, #1	@ tmp270,
 5499 019e 1A70     		strb	r2, [r3]	@ tmp271, GSMConfigGPRSflag
2070:src/sim900_800.c **** 				}
2071:src/sim900_800.c **** 			}
2072:src/sim900_800.c **** 			break;
 5500              		.loc 1 2072 0
 5501 01a0 64E2     		b	.L426	@
ARM GAS  /tmp/cc16P66I.s 			page 137


 5502              	.L368:
2073:src/sim900_800.c **** 
2074:src/sim900_800.c **** 		case 4:
2075:src/sim900_800.c **** 			i = GSMSendCommand("AT+CPIN?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5503              		.loc 1 2075 0
 5504 01a2 1724     		movs	r4, #23	@ tmp272,
 5505 01a4 6C44     		add	r4, r4, sp	@ tmp272,
 5506 01a6 654B     		ldr	r3, .L437+16	@ tmp273,
 5507 01a8 7048     		ldr	r0, .L437+64	@ tmp274,
 5508 01aa 0122     		movs	r2, #1	@,
 5509 01ac 3221     		movs	r1, #50	@,
 5510 01ae FFF7FEFF 		bl	GSMSendCommand	@
 5511 01b2 0300     		movs	r3, r0	@ tmp275,
 5512 01b4 2370     		strb	r3, [r4]	@ tmp277, i
2076:src/sim900_800.c **** 
2077:src/sim900_800.c **** 			if (i == 2)
 5513              		.loc 1 2077 0
 5514 01b6 1723     		movs	r3, #23	@ tmp278,
 5515 01b8 6B44     		add	r3, r3, sp	@ tmp278,
 5516 01ba 1B78     		ldrb	r3, [r3]	@ tmp279, i
 5517 01bc 022B     		cmp	r3, #2	@ tmp279,
 5518 01be 13D1     		bne	.L394	@,
2078:src/sim900_800.c **** 			{
2079:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CPIN: READY", sizeof("+CPIN: 
 5519              		.loc 1 2079 0
 5520 01c0 6B49     		ldr	r1, .L437+68	@ tmp280,
 5521 01c2 5E4B     		ldr	r3, .L437+16	@ tmp281,
 5522 01c4 0C22     		movs	r2, #12	@,
 5523 01c6 1800     		movs	r0, r3	@, tmp281
 5524 01c8 FFF7FEFF 		bl	strncmp	@
 5525 01cc 031E     		subs	r3, r0, #0	@ D.8033,,
 5526 01ce 06D1     		bne	.L395	@,
2080:src/sim900_800.c **** 				{
2081:src/sim900_800.c **** 					GSMConfigGPRSState++;
 5527              		.loc 1 2081 0
 5528 01d0 564B     		ldr	r3, .L437	@ tmp282,
 5529 01d2 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5530 01d4 0133     		adds	r3, r3, #1	@ tmp283,
 5531 01d6 DAB2     		uxtb	r2, r3	@ D.8032, tmp283
 5532 01d8 544B     		ldr	r3, .L437	@ tmp284,
 5533 01da 1A70     		strb	r2, [r3]	@ tmp285, GSMConfigGPRSState
 5534 01dc 04E0     		b	.L394	@
 5535              	.L395:
2082:src/sim900_800.c **** 				}
2083:src/sim900_800.c **** 				else
2084:src/sim900_800.c **** 				{
2085:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5536              		.loc 1 2085 0
 5537 01de 534B     		ldr	r3, .L437	@ tmp286,
 5538 01e0 0022     		movs	r2, #0	@ tmp287,
 5539 01e2 1A70     		strb	r2, [r3]	@ tmp288, GSMConfigGPRSState
2086:src/sim900_800.c **** 					return 3;
 5540              		.loc 1 2086 0
 5541 01e4 0323     		movs	r3, #3	@ D.8032,
 5542 01e6 60E2     		b	.L384	@
 5543              	.L394:
2087:src/sim900_800.c **** 				}
ARM GAS  /tmp/cc16P66I.s 			page 138


2088:src/sim900_800.c **** 			}
2089:src/sim900_800.c **** 
2090:src/sim900_800.c **** 			if (i > 2)
 5544              		.loc 1 2090 0
 5545 01e8 1723     		movs	r3, #23	@ tmp289,
 5546 01ea 6B44     		add	r3, r3, sp	@ tmp289,
 5547 01ec 1B78     		ldrb	r3, [r3]	@ tmp290, i
 5548 01ee 022B     		cmp	r3, #2	@ tmp290,
 5549 01f0 00D8     		bhi	.LCB4610	@
 5550 01f2 3DE2     		b	.L427	@long jump	@
 5551              	.LCB4610:
2091:src/sim900_800.c **** 			{
2092:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5552              		.loc 1 2092 0
 5553 01f4 4D4B     		ldr	r3, .L437	@ tmp291,
 5554 01f6 0022     		movs	r2, #0	@ tmp292,
 5555 01f8 1A70     		strb	r2, [r3]	@ tmp293, GSMConfigGPRSState
2093:src/sim900_800.c **** 				return 3;
 5556              		.loc 1 2093 0
 5557 01fa 0323     		movs	r3, #3	@ D.8032,
 5558 01fc 55E2     		b	.L384	@
 5559              	.L369:
2094:src/sim900_800.c **** 			}
2095:src/sim900_800.c **** 			break;
2096:src/sim900_800.c **** 
2097:src/sim900_800.c **** 		case 5:
2098:src/sim900_800.c **** 			i = GSMSendCommand("AT+CREG?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5560              		.loc 1 2098 0
 5561 01fe 1724     		movs	r4, #23	@ tmp294,
 5562 0200 6C44     		add	r4, r4, sp	@ tmp294,
 5563 0202 4E4B     		ldr	r3, .L437+16	@ tmp295,
 5564 0204 5B48     		ldr	r0, .L437+72	@ tmp296,
 5565 0206 0122     		movs	r2, #1	@,
 5566 0208 3221     		movs	r1, #50	@,
 5567 020a FFF7FEFF 		bl	GSMSendCommand	@
 5568 020e 0300     		movs	r3, r0	@ tmp297,
 5569 0210 2370     		strb	r3, [r4]	@ tmp299, i
2099:src/sim900_800.c **** 
2100:src/sim900_800.c **** 			if (i == 2)
 5570              		.loc 1 2100 0
 5571 0212 1723     		movs	r3, #23	@ tmp300,
 5572 0214 6B44     		add	r3, r3, sp	@ tmp300,
 5573 0216 1B78     		ldrb	r3, [r3]	@ tmp301, i
 5574 0218 022B     		cmp	r3, #2	@ tmp301,
 5575 021a 13D1     		bne	.L397	@,
2101:src/sim900_800.c **** 			{
2102:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CREG: 0,1", sizeof("+CREG: 0,
 5576              		.loc 1 2102 0
 5577 021c 5649     		ldr	r1, .L437+76	@ tmp302,
 5578 021e 474B     		ldr	r3, .L437+16	@ tmp303,
 5579 0220 0A22     		movs	r2, #10	@,
 5580 0222 1800     		movs	r0, r3	@, tmp303
 5581 0224 FFF7FEFF 		bl	strncmp	@
 5582 0228 031E     		subs	r3, r0, #0	@ D.8033,,
 5583 022a 06D1     		bne	.L398	@,
2103:src/sim900_800.c **** 				{
2104:src/sim900_800.c **** 					GSMConfigGPRSState++;
ARM GAS  /tmp/cc16P66I.s 			page 139


 5584              		.loc 1 2104 0
 5585 022c 3F4B     		ldr	r3, .L437	@ tmp304,
 5586 022e 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5587 0230 0133     		adds	r3, r3, #1	@ tmp305,
 5588 0232 DAB2     		uxtb	r2, r3	@ D.8032, tmp305
 5589 0234 3D4B     		ldr	r3, .L437	@ tmp306,
 5590 0236 1A70     		strb	r2, [r3]	@ tmp307, GSMConfigGPRSState
 5591 0238 04E0     		b	.L397	@
 5592              	.L398:
2105:src/sim900_800.c **** 				}
2106:src/sim900_800.c **** 				else
2107:src/sim900_800.c **** 				{
2108:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5593              		.loc 1 2108 0
 5594 023a 3C4B     		ldr	r3, .L437	@ tmp308,
 5595 023c 0022     		movs	r2, #0	@ tmp309,
 5596 023e 1A70     		strb	r2, [r3]	@ tmp310, GSMConfigGPRSState
2109:src/sim900_800.c **** 					return 3;
 5597              		.loc 1 2109 0
 5598 0240 0323     		movs	r3, #3	@ D.8032,
 5599 0242 32E2     		b	.L384	@
 5600              	.L397:
2110:src/sim900_800.c **** 				}
2111:src/sim900_800.c **** 			}
2112:src/sim900_800.c **** 
2113:src/sim900_800.c **** 			if (i > 2)
 5601              		.loc 1 2113 0
 5602 0244 1723     		movs	r3, #23	@ tmp311,
 5603 0246 6B44     		add	r3, r3, sp	@ tmp311,
 5604 0248 1B78     		ldrb	r3, [r3]	@ tmp312, i
 5605 024a 022B     		cmp	r3, #2	@ tmp312,
 5606 024c 00D8     		bhi	.LCB4663	@
 5607 024e 11E2     		b	.L428	@long jump	@
 5608              	.LCB4663:
2114:src/sim900_800.c **** 			{
2115:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5609              		.loc 1 2115 0
 5610 0250 364B     		ldr	r3, .L437	@ tmp313,
 5611 0252 0022     		movs	r2, #0	@ tmp314,
 5612 0254 1A70     		strb	r2, [r3]	@ tmp315, GSMConfigGPRSState
2116:src/sim900_800.c **** 				return 3;
 5613              		.loc 1 2116 0
 5614 0256 0323     		movs	r3, #3	@ D.8032,
 5615 0258 27E2     		b	.L384	@
 5616              	.L370:
2117:src/sim900_800.c **** 			}
2118:src/sim900_800.c **** 			break;
2119:src/sim900_800.c **** 		case 6:
2120:src/sim900_800.c **** 			i = GSMSendCommand("AT+CSQ\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5617              		.loc 1 2120 0
 5618 025a 1724     		movs	r4, #23	@ tmp316,
 5619 025c 6C44     		add	r4, r4, sp	@ tmp316,
 5620 025e 374B     		ldr	r3, .L437+16	@ tmp317,
 5621 0260 4648     		ldr	r0, .L437+80	@ tmp318,
 5622 0262 0122     		movs	r2, #1	@,
 5623 0264 3221     		movs	r1, #50	@,
 5624 0266 FFF7FEFF 		bl	GSMSendCommand	@
ARM GAS  /tmp/cc16P66I.s 			page 140


 5625 026a 0300     		movs	r3, r0	@ tmp319,
 5626 026c 2370     		strb	r3, [r4]	@ tmp321, i
2121:src/sim900_800.c **** 
2122:src/sim900_800.c **** 			if (i == 2)
 5627              		.loc 1 2122 0
 5628 026e 1723     		movs	r3, #23	@ tmp322,
 5629 0270 6B44     		add	r3, r3, sp	@ tmp322,
 5630 0272 1B78     		ldrb	r3, [r3]	@ tmp323, i
 5631 0274 022B     		cmp	r3, #2	@ tmp323,
 5632 0276 2DD1     		bne	.L400	@,
2123:src/sim900_800.c **** 			{
2124:src/sim900_800.c **** 				if (!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CSQ:", sizeof("+CSQ:") - 1))
 5633              		.loc 1 2124 0
 5634 0278 4149     		ldr	r1, .L437+84	@ tmp324,
 5635 027a 304B     		ldr	r3, .L437+16	@ tmp325,
 5636 027c 0522     		movs	r2, #5	@,
 5637 027e 1800     		movs	r0, r3	@, tmp325
 5638 0280 FFF7FEFF 		bl	strncmp	@
 5639 0284 031E     		subs	r3, r0, #0	@ D.8033,,
 5640 0286 20D1     		bne	.L401	@,
2125:src/sim900_800.c **** 				{
2126:src/sim900_800.c **** 						GPRSrssi = ((GSMbuffRtaCommand[6] - 48) * 10 + ((GSMbuffRtaCommand[7] - 48)));
 5641              		.loc 1 2126 0
 5642 0288 2C4B     		ldr	r3, .L437+16	@ tmp326,
 5643 028a 9B79     		ldrb	r3, [r3, #6]	@ D.8032,
 5644 028c 303B     		subs	r3, r3, #48	@ D.8033,
 5645 028e DBB2     		uxtb	r3, r3	@ D.8034, D.8033
 5646 0290 1A1C     		adds	r2, r3, #0	@ tmp328, tmp327
 5647 0292 9200     		lsls	r2, r2, #2	@ tmp329, tmp328,
 5648 0294 D318     		adds	r3, r2, r3	@ tmp331, tmp330, tmp327
 5649 0296 DB18     		adds	r3, r3, r3	@ tmp333, tmp332, tmp332
 5650 0298 DAB2     		uxtb	r2, r3	@ D.8034, tmp331
 5651 029a 284B     		ldr	r3, .L437+16	@ tmp334,
 5652 029c DB79     		ldrb	r3, [r3, #7]	@ D.8032,
 5653 029e D318     		adds	r3, r2, r3	@ tmp335, D.8034, D.8032
 5654 02a0 DBB2     		uxtb	r3, r3	@ D.8034, tmp335
 5655 02a2 303B     		subs	r3, r3, #48	@ tmp336,
 5656 02a4 DAB2     		uxtb	r2, r3	@ D.8034, tmp336
 5657 02a6 374B     		ldr	r3, .L437+88	@ tmp337,
 5658 02a8 1A70     		strb	r2, [r3]	@ tmp338, GPRSrssi
2127:src/sim900_800.c **** 
2128:src/sim900_800.c **** 						if (GPRSrssi != 99)
 5659              		.loc 1 2128 0
 5660 02aa 364B     		ldr	r3, .L437+88	@ tmp339,
 5661 02ac 1B78     		ldrb	r3, [r3]	@ D.8034, GPRSrssi
 5662 02ae 632B     		cmp	r3, #99	@ D.8034,
 5663 02b0 06D0     		beq	.L402	@,
2129:src/sim900_800.c **** 							GSMConfigGPRSState++;
 5664              		.loc 1 2129 0
 5665 02b2 1E4B     		ldr	r3, .L437	@ tmp340,
 5666 02b4 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5667 02b6 0133     		adds	r3, r3, #1	@ tmp341,
 5668 02b8 DAB2     		uxtb	r2, r3	@ D.8032, tmp341
 5669 02ba 1C4B     		ldr	r3, .L437	@ tmp342,
 5670 02bc 1A70     		strb	r2, [r3]	@ tmp343, GSMConfigGPRSState
 5671 02be 09E0     		b	.L400	@
 5672              	.L402:
ARM GAS  /tmp/cc16P66I.s 			page 141


2130:src/sim900_800.c **** 						else
2131:src/sim900_800.c **** 						{
2132:src/sim900_800.c **** 							GSMConfigGPRSState = 0;
 5673              		.loc 1 2132 0
 5674 02c0 1A4B     		ldr	r3, .L437	@ tmp344,
 5675 02c2 0022     		movs	r2, #0	@ tmp345,
 5676 02c4 1A70     		strb	r2, [r3]	@ tmp346, GSMConfigGPRSState
2133:src/sim900_800.c **** 							return 20;
 5677              		.loc 1 2133 0
 5678 02c6 1423     		movs	r3, #20	@ D.8032,
 5679 02c8 EFE1     		b	.L384	@
 5680              	.L401:
2134:src/sim900_800.c **** 						}
2135:src/sim900_800.c **** 				}
2136:src/sim900_800.c **** 				else
2137:src/sim900_800.c **** 				{
2138:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 5681              		.loc 1 2138 0
 5682 02ca 184B     		ldr	r3, .L437	@ tmp347,
 5683 02cc 0022     		movs	r2, #0	@ tmp348,
 5684 02ce 1A70     		strb	r2, [r3]	@ tmp349, GSMConfigGPRSState
2139:src/sim900_800.c **** 					return 3;
 5685              		.loc 1 2139 0
 5686 02d0 0323     		movs	r3, #3	@ D.8032,
 5687 02d2 EAE1     		b	.L384	@
 5688              	.L400:
2140:src/sim900_800.c **** 				}
2141:src/sim900_800.c **** 			}
2142:src/sim900_800.c **** 
2143:src/sim900_800.c **** 			if (i > 2)
 5689              		.loc 1 2143 0
 5690 02d4 1723     		movs	r3, #23	@ tmp350,
 5691 02d6 6B44     		add	r3, r3, sp	@ tmp350,
 5692 02d8 1B78     		ldrb	r3, [r3]	@ tmp351, i
 5693 02da 022B     		cmp	r3, #2	@ tmp351,
 5694 02dc 00D8     		bhi	.LCB4745	@
 5695 02de CBE1     		b	.L429	@long jump	@
 5696              	.LCB4745:
2144:src/sim900_800.c **** 			{
2145:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5697              		.loc 1 2145 0
 5698 02e0 124B     		ldr	r3, .L437	@ tmp352,
 5699 02e2 0022     		movs	r2, #0	@ tmp353,
 5700 02e4 1A70     		strb	r2, [r3]	@ tmp354, GSMConfigGPRSState
2146:src/sim900_800.c **** 				return 3;
 5701              		.loc 1 2146 0
 5702 02e6 0323     		movs	r3, #3	@ D.8032,
 5703 02e8 DFE1     		b	.L384	@
 5704              	.L371:
2147:src/sim900_800.c **** 			}
2148:src/sim900_800.c **** 			break;
2149:src/sim900_800.c **** 		case 7:
2150:src/sim900_800.c **** 
2151:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPMODE=1\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 5705              		.loc 1 2151 0
 5706 02ea 1724     		movs	r4, #23	@ tmp355,
 5707 02ec 6C44     		add	r4, r4, sp	@ tmp355,
ARM GAS  /tmp/cc16P66I.s 			page 142


 5708 02ee 134B     		ldr	r3, .L437+16	@ tmp356,
 5709 02f0 2548     		ldr	r0, .L437+92	@ tmp357,
 5710 02f2 0022     		movs	r2, #0	@,
 5711 02f4 3221     		movs	r1, #50	@,
 5712 02f6 FFF7FEFF 		bl	GSMSendCommand	@
 5713 02fa 0300     		movs	r3, r0	@ tmp358,
 5714 02fc 2370     		strb	r3, [r4]	@ tmp360, i
2152:src/sim900_800.c **** 
2153:src/sim900_800.c **** 			if (i == 2)
 5715              		.loc 1 2153 0
 5716 02fe 1723     		movs	r3, #23	@ tmp361,
 5717 0300 6B44     		add	r3, r3, sp	@ tmp361,
 5718 0302 1B78     		ldrb	r3, [r3]	@ tmp362, i
 5719 0304 022B     		cmp	r3, #2	@ tmp362,
 5720 0306 05D1     		bne	.L404	@,
2154:src/sim900_800.c **** 			{
2155:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5721              		.loc 1 2155 0
 5722 0308 084B     		ldr	r3, .L437	@ tmp363,
 5723 030a 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5724 030c 0133     		adds	r3, r3, #1	@ tmp364,
 5725 030e DAB2     		uxtb	r2, r3	@ D.8032, tmp364
 5726 0310 064B     		ldr	r3, .L437	@ tmp365,
 5727 0312 1A70     		strb	r2, [r3]	@ tmp366, GSMConfigGPRSState
 5728              	.L404:
2156:src/sim900_800.c **** 			}
2157:src/sim900_800.c **** 
2158:src/sim900_800.c **** 			if (i > 2)
 5729              		.loc 1 2158 0
 5730 0314 1723     		movs	r3, #23	@ tmp367,
 5731 0316 6B44     		add	r3, r3, sp	@ tmp367,
 5732 0318 1B78     		ldrb	r3, [r3]	@ tmp368, i
 5733 031a 022B     		cmp	r3, #2	@ tmp368,
 5734 031c 00D8     		bhi	.LCB4780	@
 5735 031e ADE1     		b	.L430	@long jump	@
 5736              	.LCB4780:
2159:src/sim900_800.c **** 			{
2160:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5737              		.loc 1 2160 0
 5738 0320 024B     		ldr	r3, .L437	@ tmp369,
 5739 0322 0022     		movs	r2, #0	@ tmp370,
 5740 0324 1A70     		strb	r2, [r3]	@ tmp371, GSMConfigGPRSState
2161:src/sim900_800.c **** 				return 3;
 5741              		.loc 1 2161 0
 5742 0326 0323     		movs	r3, #3	@ D.8032,
 5743 0328 BFE1     		b	.L384	@
 5744              	.L438:
 5745 032a C046     		.align	2
 5746              	.L437:
 5747 032c 00000000 		.word	GSMConfigGPRSState
 5748 0330 00000000 		.word	.L364
 5749 0334 00000000 		.word	GSMConfigGPRSTimeOut
 5750 0338 00000000 		.word	GSMConfigGPRSflag
 5751 033c 00000000 		.word	GSMbuffRtaCommand
 5752 0340 10010000 		.word	.LC109
 5753 0344 00000000 		.word	GSM_IPINITIAL
 5754 0348 00000000 		.word	GSMbuffStatus
ARM GAS  /tmp/cc16P66I.s 			page 143


 5755 034c 00000000 		.word	GSM_IPSTART
 5756 0350 00000000 		.word	GSM_IPGPRSACT
 5757 0354 00000000 		.word	GSM_IPSTATUS
 5758 0358 00000000 		.word	GSM_IPCONNECTING
 5759 035c 00000000 		.word	GSM_IPCONNOK
 5760 0360 00000000 		.word	GSM_IPCONNCLOSE
 5761 0364 38010000 		.word	.LC125
 5762 0368 44010000 		.word	.LC127
 5763 036c 50010000 		.word	.LC129
 5764 0370 5C010000 		.word	.LC131
 5765 0374 7C010000 		.word	.LC135
 5766 0378 88010000 		.word	.LC137
 5767 037c 94010000 		.word	.LC139
 5768 0380 A0010000 		.word	.LC141
 5769 0384 00000000 		.word	GPRSrssi
 5770 0388 A8010000 		.word	.LC144
 5771              	.L372:
2162:src/sim900_800.c **** 			}
2163:src/sim900_800.c **** 			break;
2164:src/sim900_800.c **** 
2165:src/sim900_800.c **** 		case 8:
2166:src/sim900_800.c **** 
2167:src/sim900_800.c **** 			i = GSMSendCommand("AT+CGATT?\r\n", 50, 1, &GSMbuffRtaCommand[0]);
 5772              		.loc 1 2167 0
 5773 038c 1724     		movs	r4, #23	@ tmp372,
 5774 038e 6C44     		add	r4, r4, sp	@ tmp372,
 5775 0390 C74B     		ldr	r3, .L439	@ tmp373,
 5776 0392 C848     		ldr	r0, .L439+4	@ tmp374,
 5777 0394 0122     		movs	r2, #1	@,
 5778 0396 3221     		movs	r1, #50	@,
 5779 0398 FFF7FEFF 		bl	GSMSendCommand	@
 5780 039c 0300     		movs	r3, r0	@ tmp375,
 5781 039e 2370     		strb	r3, [r4]	@ tmp377, i
2168:src/sim900_800.c **** 
2169:src/sim900_800.c **** 			if (i == 2)
 5782              		.loc 1 2169 0
 5783 03a0 1723     		movs	r3, #23	@ tmp378,
 5784 03a2 6B44     		add	r3, r3, sp	@ tmp378,
 5785 03a4 1B78     		ldrb	r3, [r3]	@ tmp379, i
 5786 03a6 022B     		cmp	r3, #2	@ tmp379,
 5787 03a8 38D1     		bne	.L406	@,
2170:src/sim900_800.c **** 			{
2171:src/sim900_800.c **** 				if(!strncmp((const char *)&GSMbuffRtaCommand[0], (const char *)"+CGATT:", sizeof("+CGATT:") - 1
 5788              		.loc 1 2171 0
 5789 03aa C349     		ldr	r1, .L439+8	@ tmp380,
 5790 03ac C04B     		ldr	r3, .L439	@ tmp381,
 5791 03ae 0722     		movs	r2, #7	@,
 5792 03b0 1800     		movs	r0, r3	@, tmp381
 5793 03b2 FFF7FEFF 		bl	strncmp	@
 5794 03b6 031E     		subs	r3, r0, #0	@ D.8033,,
 5795 03b8 30D1     		bne	.L406	@,
2172:src/sim900_800.c **** 				{
2173:src/sim900_800.c **** 					if (GSMbuffRtaCommand[8] == 49)
 5796              		.loc 1 2173 0
 5797 03ba BD4B     		ldr	r3, .L439	@ tmp382,
 5798 03bc 1B7A     		ldrb	r3, [r3, #8]	@ D.8032,
 5799 03be 312B     		cmp	r3, #49	@ D.8032,
ARM GAS  /tmp/cc16P66I.s 			page 144


 5800 03c0 23D1     		bne	.L407	@,
2174:src/sim900_800.c **** 					{
2175:src/sim900_800.c **** 						GSMConfigGPRSState += 1;
 5801              		.loc 1 2175 0
 5802 03c2 BE4B     		ldr	r3, .L439+12	@ tmp383,
 5803 03c4 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5804 03c6 0133     		adds	r3, r3, #1	@ tmp384,
 5805 03c8 DAB2     		uxtb	r2, r3	@ D.8032, tmp384
 5806 03ca BC4B     		ldr	r3, .L439+12	@ tmp385,
 5807 03cc 1A70     		strb	r2, [r3]	@ tmp386, GSMConfigGPRSState
2176:src/sim900_800.c **** 						sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CGDCONT=1,\"IP\",\"");
 5808              		.loc 1 2176 0
 5809 03ce BC4A     		ldr	r2, .L439+16	@ tmp387,
 5810 03d0 BC4B     		ldr	r3, .L439+20	@ tmp388,
 5811 03d2 1000     		movs	r0, r2	@ tmp389, tmp387
 5812 03d4 1900     		movs	r1, r3	@ tmp390, tmp388
 5813 03d6 1423     		movs	r3, #20	@ tmp391,
 5814 03d8 1A00     		movs	r2, r3	@, tmp391
 5815 03da FFF7FEFF 		bl	memcpy	@
2177:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 5816              		.loc 1 2177 0
 5817 03de 029A     		ldr	r2, [sp, #8]	@ tmp394, ptrAPN
 5818 03e0 B74B     		ldr	r3, .L439+16	@ tmp395,
 5819 03e2 1100     		movs	r1, r2	@, tmp394
 5820 03e4 1800     		movs	r0, r3	@, tmp395
 5821 03e6 FFF7FEFF 		bl	strcat	@
2178:src/sim900_800.c **** 						strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 5822              		.loc 1 2178 0
 5823 03ea B54B     		ldr	r3, .L439+16	@ tmp396,
 5824 03ec 1800     		movs	r0, r3	@, tmp396
 5825 03ee FFF7FEFF 		bl	strlen	@
 5826 03f2 0300     		movs	r3, r0	@ tmp397,
 5827 03f4 1A00     		movs	r2, r3	@ D.8035, tmp398
 5828 03f6 B24B     		ldr	r3, .L439+16	@ tmp399,
 5829 03f8 D218     		adds	r2, r2, r3	@ D.8036, D.8035, tmp399
 5830 03fa B34B     		ldr	r3, .L439+24	@ tmp400,
 5831 03fc 1000     		movs	r0, r2	@ tmp401, D.8036
 5832 03fe 1900     		movs	r1, r3	@ tmp402, tmp400
 5833 0400 0423     		movs	r3, #4	@ tmp403,
 5834 0402 1A00     		movs	r2, r3	@, tmp403
 5835 0404 FFF7FEFF 		bl	memcpy	@
 5836 0408 08E0     		b	.L406	@
 5837              	.L407:
2179:src/sim900_800.c **** 					}
2180:src/sim900_800.c **** 					else if (GSMbuffRtaCommand[8] == 48)
 5838              		.loc 1 2180 0
 5839 040a A94B     		ldr	r3, .L439	@ tmp406,
 5840 040c 1B7A     		ldrb	r3, [r3, #8]	@ D.8032,
 5841 040e 302B     		cmp	r3, #48	@ D.8032,
 5842 0410 04D1     		bne	.L406	@,
2181:src/sim900_800.c **** 					{
2182:src/sim900_800.c **** 						GSMConfigGPRSState = 0;
 5843              		.loc 1 2182 0
 5844 0412 AA4B     		ldr	r3, .L439+12	@ tmp407,
 5845 0414 0022     		movs	r2, #0	@ tmp408,
 5846 0416 1A70     		strb	r2, [r3]	@ tmp409, GSMConfigGPRSState
2183:src/sim900_800.c **** 						return 3;
ARM GAS  /tmp/cc16P66I.s 			page 145


 5847              		.loc 1 2183 0
 5848 0418 0323     		movs	r3, #3	@ D.8032,
 5849 041a 46E1     		b	.L384	@
 5850              	.L406:
2184:src/sim900_800.c **** 						//El modulo no se encuentra listo para conectar GPRS.
2185:src/sim900_800.c **** 					}
2186:src/sim900_800.c **** 				}
2187:src/sim900_800.c **** 			}
2188:src/sim900_800.c **** 
2189:src/sim900_800.c **** 			if (i > 2)
 5851              		.loc 1 2189 0
 5852 041c 1723     		movs	r3, #23	@ tmp410,
 5853 041e 6B44     		add	r3, r3, sp	@ tmp410,
 5854 0420 1B78     		ldrb	r3, [r3]	@ tmp411, i
 5855 0422 022B     		cmp	r3, #2	@ tmp411,
 5856 0424 00D8     		bhi	.LCB4895	@
 5857 0426 2BE1     		b	.L431	@long jump	@
 5858              	.LCB4895:
2190:src/sim900_800.c **** 			{
2191:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5859              		.loc 1 2191 0
 5860 0428 A44B     		ldr	r3, .L439+12	@ tmp412,
 5861 042a 0022     		movs	r2, #0	@ tmp413,
 5862 042c 1A70     		strb	r2, [r3]	@ tmp414, GSMConfigGPRSState
2192:src/sim900_800.c **** 				return 3;
 5863              		.loc 1 2192 0
 5864 042e 0323     		movs	r3, #3	@ D.8032,
 5865 0430 3BE1     		b	.L384	@
 5866              	.L373:
2193:src/sim900_800.c **** 			}
2194:src/sim900_800.c **** 
2195:src/sim900_800.c **** 			break;
2196:src/sim900_800.c **** 
2197:src/sim900_800.c **** 		case 9:
2198:src/sim900_800.c **** 
2199:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 5867              		.loc 1 2199 0
 5868 0432 1724     		movs	r4, #23	@ tmp415,
 5869 0434 6C44     		add	r4, r4, sp	@ tmp415,
 5870 0436 9E4B     		ldr	r3, .L439	@ tmp416,
 5871 0438 A148     		ldr	r0, .L439+16	@ tmp417,
 5872 043a 0022     		movs	r2, #0	@,
 5873 043c 3221     		movs	r1, #50	@,
 5874 043e FFF7FEFF 		bl	GSMSendCommand	@
 5875 0442 0300     		movs	r3, r0	@ tmp418,
 5876 0444 2370     		strb	r3, [r4]	@ tmp420, i
2200:src/sim900_800.c **** 
2201:src/sim900_800.c **** 			if (i == 2)
 5877              		.loc 1 2201 0
 5878 0446 1723     		movs	r3, #23	@ tmp421,
 5879 0448 6B44     		add	r3, r3, sp	@ tmp421,
 5880 044a 1B78     		ldrb	r3, [r3]	@ tmp422, i
 5881 044c 022B     		cmp	r3, #2	@ tmp422,
 5882 044e 4CD1     		bne	.L409	@,
2202:src/sim900_800.c **** 			{
2203:src/sim900_800.c **** 				GSMConfigGPRSState++;
 5883              		.loc 1 2203 0
ARM GAS  /tmp/cc16P66I.s 			page 146


 5884 0450 9A4B     		ldr	r3, .L439+12	@ tmp423,
 5885 0452 1B78     		ldrb	r3, [r3]	@ D.8032, GSMConfigGPRSState
 5886 0454 0133     		adds	r3, r3, #1	@ tmp424,
 5887 0456 DAB2     		uxtb	r2, r3	@ D.8032, tmp424
 5888 0458 984B     		ldr	r3, .L439+12	@ tmp425,
 5889 045a 1A70     		strb	r2, [r3]	@ tmp426, GSMConfigGPRSState
2204:src/sim900_800.c **** 				sprintf(&GSMbuffGPRSCommand[0], (const char*)"AT+CSTT=\"");
 5890              		.loc 1 2204 0
 5891 045c 984A     		ldr	r2, .L439+16	@ tmp427,
 5892 045e 9B4B     		ldr	r3, .L439+28	@ tmp428,
 5893 0460 1000     		movs	r0, r2	@ tmp429, tmp427
 5894 0462 1900     		movs	r1, r3	@ tmp430, tmp428
 5895 0464 0A23     		movs	r3, #10	@ tmp431,
 5896 0466 1A00     		movs	r2, r3	@, tmp431
 5897 0468 FFF7FEFF 		bl	memcpy	@
2205:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrAPN);
 5898              		.loc 1 2205 0
 5899 046c 029A     		ldr	r2, [sp, #8]	@ tmp434, ptrAPN
 5900 046e 944B     		ldr	r3, .L439+16	@ tmp435,
 5901 0470 1100     		movs	r1, r2	@, tmp434
 5902 0472 1800     		movs	r0, r3	@, tmp435
 5903 0474 FFF7FEFF 		bl	strcat	@
2206:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 5904              		.loc 1 2206 0
 5905 0478 914B     		ldr	r3, .L439+16	@ tmp436,
 5906 047a 1800     		movs	r0, r3	@, tmp436
 5907 047c FFF7FEFF 		bl	strlen	@
 5908 0480 0300     		movs	r3, r0	@ tmp437,
 5909 0482 1A00     		movs	r2, r3	@ D.8035, tmp438
 5910 0484 8E4B     		ldr	r3, .L439+16	@ tmp439,
 5911 0486 D218     		adds	r2, r2, r3	@ D.8036, D.8035, tmp439
 5912 0488 914B     		ldr	r3, .L439+32	@ tmp440,
 5913 048a 1000     		movs	r0, r2	@ tmp441, D.8036
 5914 048c 1900     		movs	r1, r3	@ tmp442, tmp440
 5915 048e 0423     		movs	r3, #4	@ tmp443,
 5916 0490 1A00     		movs	r2, r3	@, tmp443
 5917 0492 FFF7FEFF 		bl	memcpy	@
2207:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrUSER);
 5918              		.loc 1 2207 0
 5919 0496 019A     		ldr	r2, [sp, #4]	@ tmp446, ptrUSER
 5920 0498 894B     		ldr	r3, .L439+16	@ tmp447,
 5921 049a 1100     		movs	r1, r2	@, tmp446
 5922 049c 1800     		movs	r0, r3	@, tmp447
 5923 049e FFF7FEFF 		bl	strcat	@
2208:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\",\"");
 5924              		.loc 1 2208 0
 5925 04a2 874B     		ldr	r3, .L439+16	@ tmp448,
 5926 04a4 1800     		movs	r0, r3	@, tmp448
 5927 04a6 FFF7FEFF 		bl	strlen	@
 5928 04aa 0300     		movs	r3, r0	@ tmp449,
 5929 04ac 1A00     		movs	r2, r3	@ D.8035, tmp450
 5930 04ae 844B     		ldr	r3, .L439+16	@ tmp451,
 5931 04b0 D218     		adds	r2, r2, r3	@ D.8036, D.8035, tmp451
 5932 04b2 874B     		ldr	r3, .L439+32	@ tmp452,
 5933 04b4 1000     		movs	r0, r2	@ tmp453, D.8036
 5934 04b6 1900     		movs	r1, r3	@ tmp454, tmp452
 5935 04b8 0423     		movs	r3, #4	@ tmp455,
ARM GAS  /tmp/cc16P66I.s 			page 147


 5936 04ba 1A00     		movs	r2, r3	@, tmp455
 5937 04bc FFF7FEFF 		bl	memcpy	@
2209:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], ptrKEY);
 5938              		.loc 1 2209 0
 5939 04c0 009A     		ldr	r2, [sp]	@ tmp458, ptrKEY
 5940 04c2 7F4B     		ldr	r3, .L439+16	@ tmp459,
 5941 04c4 1100     		movs	r1, r2	@, tmp458
 5942 04c6 1800     		movs	r0, r3	@, tmp459
 5943 04c8 FFF7FEFF 		bl	strcat	@
2210:src/sim900_800.c **** 				strcat(&GSMbuffGPRSCommand[0], "\"\r\n");
 5944              		.loc 1 2210 0
 5945 04cc 7C4B     		ldr	r3, .L439+16	@ tmp460,
 5946 04ce 1800     		movs	r0, r3	@, tmp460
 5947 04d0 FFF7FEFF 		bl	strlen	@
 5948 04d4 0300     		movs	r3, r0	@ tmp461,
 5949 04d6 1A00     		movs	r2, r3	@ D.8035, tmp462
 5950 04d8 794B     		ldr	r3, .L439+16	@ tmp463,
 5951 04da D218     		adds	r2, r2, r3	@ D.8036, D.8035, tmp463
 5952 04dc 7A4B     		ldr	r3, .L439+24	@ tmp464,
 5953 04de 1000     		movs	r0, r2	@ tmp465, D.8036
 5954 04e0 1900     		movs	r1, r3	@ tmp466, tmp464
 5955 04e2 0423     		movs	r3, #4	@ tmp467,
 5956 04e4 1A00     		movs	r2, r3	@, tmp467
 5957 04e6 FFF7FEFF 		bl	memcpy	@
 5958              	.L409:
2211:src/sim900_800.c **** 			}
2212:src/sim900_800.c **** 
2213:src/sim900_800.c **** 			if (i > 2)
 5959              		.loc 1 2213 0
 5960 04ea 1723     		movs	r3, #23	@ tmp470,
 5961 04ec 6B44     		add	r3, r3, sp	@ tmp470,
 5962 04ee 1B78     		ldrb	r3, [r3]	@ tmp471, i
 5963 04f0 022B     		cmp	r3, #2	@ tmp471,
 5964 04f2 00D8     		bhi	.LCB4991	@
 5965 04f4 C6E0     		b	.L432	@long jump	@
 5966              	.LCB4991:
2214:src/sim900_800.c **** 			{
2215:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 5967              		.loc 1 2215 0
 5968 04f6 714B     		ldr	r3, .L439+12	@ tmp472,
 5969 04f8 0022     		movs	r2, #0	@ tmp473,
 5970 04fa 1A70     		strb	r2, [r3]	@ tmp474, GSMConfigGPRSState
2216:src/sim900_800.c **** 				return 3;
 5971              		.loc 1 2216 0
 5972 04fc 0323     		movs	r3, #3	@ D.8032,
 5973 04fe D4E0     		b	.L384	@
 5974              	.L374:
2217:src/sim900_800.c **** 			}
2218:src/sim900_800.c **** 			break;
2219:src/sim900_800.c **** 
2220:src/sim900_800.c **** 		case 10:
2221:src/sim900_800.c **** 
2222:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
 5975              		.loc 1 2222 0
 5976 0500 1724     		movs	r4, #23	@ tmp475,
 5977 0502 6C44     		add	r4, r4, sp	@ tmp475,
 5978 0504 6A4B     		ldr	r3, .L439	@ tmp476,
ARM GAS  /tmp/cc16P66I.s 			page 148


 5979 0506 6E48     		ldr	r0, .L439+16	@ tmp477,
 5980 0508 0022     		movs	r2, #0	@,
 5981 050a 3221     		movs	r1, #50	@,
 5982 050c FFF7FEFF 		bl	GSMSendCommand	@
 5983 0510 0300     		movs	r3, r0	@ tmp478,
 5984 0512 2370     		strb	r3, [r4]	@ tmp480, i
2223:src/sim900_800.c **** 
2224:src/sim900_800.c **** 			if (i == 2)
 5985              		.loc 1 2224 0
 5986 0514 1723     		movs	r3, #23	@ tmp481,
 5987 0516 6B44     		add	r3, r3, sp	@ tmp481,
 5988 0518 1B78     		ldrb	r3, [r3]	@ tmp482, i
 5989 051a 022B     		cmp	r3, #2	@ tmp482,
 5990 051c 02D1     		bne	.L411	@,
2225:src/sim900_800.c **** 			{
2226:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 5991              		.loc 1 2226 0
 5992 051e 674B     		ldr	r3, .L439+12	@ tmp483,
 5993 0520 0222     		movs	r2, #2	@ tmp484,
 5994 0522 1A70     		strb	r2, [r3]	@ tmp485, GSMConfigGPRSState
 5995              	.L411:
2227:src/sim900_800.c **** 			}
2228:src/sim900_800.c **** 
2229:src/sim900_800.c **** 			if (i > 2)
 5996              		.loc 1 2229 0
 5997 0524 1723     		movs	r3, #23	@ tmp486,
 5998 0526 6B44     		add	r3, r3, sp	@ tmp486,
 5999 0528 1B78     		ldrb	r3, [r3]	@ tmp487, i
 6000 052a 022B     		cmp	r3, #2	@ tmp487,
 6001 052c 00D8     		bhi	.LCB5023	@
 6002 052e ABE0     		b	.L433	@long jump	@
 6003              	.LCB5023:
2230:src/sim900_800.c **** 			{
2231:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6004              		.loc 1 2231 0
 6005 0530 624B     		ldr	r3, .L439+12	@ tmp488,
 6006 0532 0022     		movs	r2, #0	@ tmp489,
 6007 0534 1A70     		strb	r2, [r3]	@ tmp490, GSMConfigGPRSState
2232:src/sim900_800.c **** 				return 3;
 6008              		.loc 1 2232 0
 6009 0536 0323     		movs	r3, #3	@ D.8032,
 6010 0538 B7E0     		b	.L384	@
 6011              	.L375:
2233:src/sim900_800.c **** 			}
2234:src/sim900_800.c **** 			break;
2235:src/sim900_800.c **** 
2236:src/sim900_800.c **** 		case 11:
2237:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIICR\r\n", 200, 0, &GSMbuffRtaCommand[0]);
 6012              		.loc 1 2237 0
 6013 053a 1724     		movs	r4, #23	@ tmp491,
 6014 053c 6C44     		add	r4, r4, sp	@ tmp491,
 6015 053e 5C4B     		ldr	r3, .L439	@ tmp492,
 6016 0540 6448     		ldr	r0, .L439+36	@ tmp493,
 6017 0542 0022     		movs	r2, #0	@,
 6018 0544 C821     		movs	r1, #200	@,
 6019 0546 FFF7FEFF 		bl	GSMSendCommand	@
 6020 054a 0300     		movs	r3, r0	@ tmp494,
ARM GAS  /tmp/cc16P66I.s 			page 149


 6021 054c 2370     		strb	r3, [r4]	@ tmp496, i
2238:src/sim900_800.c **** 
2239:src/sim900_800.c **** 			if (i == 2)
 6022              		.loc 1 2239 0
 6023 054e 1723     		movs	r3, #23	@ tmp497,
 6024 0550 6B44     		add	r3, r3, sp	@ tmp497,
 6025 0552 1B78     		ldrb	r3, [r3]	@ tmp498, i
 6026 0554 022B     		cmp	r3, #2	@ tmp498,
 6027 0556 02D1     		bne	.L413	@,
2240:src/sim900_800.c **** 			{
2241:src/sim900_800.c **** 				GSMConfigGPRSState = 2;
 6028              		.loc 1 2241 0
 6029 0558 584B     		ldr	r3, .L439+12	@ tmp499,
 6030 055a 0222     		movs	r2, #2	@ tmp500,
 6031 055c 1A70     		strb	r2, [r3]	@ tmp501, GSMConfigGPRSState
 6032              	.L413:
2242:src/sim900_800.c **** 			}
2243:src/sim900_800.c **** 
2244:src/sim900_800.c **** 			if (i > 2)
 6033              		.loc 1 2244 0
 6034 055e 1723     		movs	r3, #23	@ tmp502,
 6035 0560 6B44     		add	r3, r3, sp	@ tmp502,
 6036 0562 1B78     		ldrb	r3, [r3]	@ tmp503, i
 6037 0564 022B     		cmp	r3, #2	@ tmp503,
 6038 0566 00D8     		bhi	.LCB5055	@
 6039 0568 90E0     		b	.L434	@long jump	@
 6040              	.LCB5055:
2245:src/sim900_800.c **** 			{
2246:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6041              		.loc 1 2246 0
 6042 056a 544B     		ldr	r3, .L439+12	@ tmp504,
 6043 056c 0022     		movs	r2, #0	@ tmp505,
 6044 056e 1A70     		strb	r2, [r3]	@ tmp506, GSMConfigGPRSState
2247:src/sim900_800.c **** 				return 3;
 6045              		.loc 1 2247 0
 6046 0570 0323     		movs	r3, #3	@ D.8032,
 6047 0572 9AE0     		b	.L384	@
 6048              	.L376:
2248:src/sim900_800.c **** 			}
2249:src/sim900_800.c **** 			break;
2250:src/sim900_800.c **** 
2251:src/sim900_800.c **** 		case 12:
2252:src/sim900_800.c **** 
2253:src/sim900_800.c **** 			GSMConfigGPRSflag = 3;
 6049              		.loc 1 2253 0
 6050 0574 584B     		ldr	r3, .L439+40	@ tmp507,
 6051 0576 0322     		movs	r2, #3	@ tmp508,
 6052 0578 1A70     		strb	r2, [r3]	@ tmp509, GSMConfigGPRSflag
2254:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIFSR\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6053              		.loc 1 2254 0
 6054 057a 1724     		movs	r4, #23	@ tmp510,
 6055 057c 6C44     		add	r4, r4, sp	@ tmp510,
 6056 057e 4C4B     		ldr	r3, .L439	@ tmp511,
 6057 0580 5648     		ldr	r0, .L439+44	@ tmp512,
 6058 0582 0022     		movs	r2, #0	@,
 6059 0584 3221     		movs	r1, #50	@,
 6060 0586 FFF7FEFF 		bl	GSMSendCommand	@
ARM GAS  /tmp/cc16P66I.s 			page 150


 6061 058a 0300     		movs	r3, r0	@ tmp513,
 6062 058c 2370     		strb	r3, [r4]	@ tmp515, i
2255:src/sim900_800.c **** 
2256:src/sim900_800.c **** 			if (i == 2)
 6063              		.loc 1 2256 0
 6064 058e 1723     		movs	r3, #23	@ tmp516,
 6065 0590 6B44     		add	r3, r3, sp	@ tmp516,
 6066 0592 1B78     		ldrb	r3, [r3]	@ tmp517, i
 6067 0594 022B     		cmp	r3, #2	@ tmp517,
 6068 0596 05D1     		bne	.L415	@,
2257:src/sim900_800.c **** 			{
2258:src/sim900_800.c **** 				GSMConfigGPRSState = 14;
 6069              		.loc 1 2258 0
 6070 0598 484B     		ldr	r3, .L439+12	@ tmp518,
 6071 059a 0E22     		movs	r2, #14	@ tmp519,
 6072 059c 1A70     		strb	r2, [r3]	@ tmp520, GSMConfigGPRSState
2259:src/sim900_800.c **** 				GSMConfigGPRSflag = 1;
 6073              		.loc 1 2259 0
 6074 059e 4E4B     		ldr	r3, .L439+40	@ tmp521,
 6075 05a0 0122     		movs	r2, #1	@ tmp522,
 6076 05a2 1A70     		strb	r2, [r3]	@ tmp523, GSMConfigGPRSflag
 6077              	.L415:
2260:src/sim900_800.c **** 			}
2261:src/sim900_800.c **** 
2262:src/sim900_800.c **** 			if (i > 2)
 6078              		.loc 1 2262 0
 6079 05a4 1723     		movs	r3, #23	@ tmp524,
 6080 05a6 6B44     		add	r3, r3, sp	@ tmp524,
 6081 05a8 1B78     		ldrb	r3, [r3]	@ tmp525, i
 6082 05aa 022B     		cmp	r3, #2	@ tmp525,
 6083 05ac 00D8     		bhi	.LCB5093	@
 6084 05ae 6FE0     		b	.L435	@long jump	@
 6085              	.LCB5093:
2263:src/sim900_800.c **** 			{
2264:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6086              		.loc 1 2264 0
 6087 05b0 424B     		ldr	r3, .L439+12	@ tmp526,
 6088 05b2 0022     		movs	r2, #0	@ tmp527,
 6089 05b4 1A70     		strb	r2, [r3]	@ tmp528, GSMConfigGPRSState
2265:src/sim900_800.c **** 				return 3;
 6090              		.loc 1 2265 0
 6091 05b6 0323     		movs	r3, #3	@ D.8032,
 6092 05b8 77E0     		b	.L384	@
 6093              	.L377:
2266:src/sim900_800.c **** 			}
2267:src/sim900_800.c **** 			break;
2268:src/sim900_800.c **** 		case 13:
2269:src/sim900_800.c **** 			GSMConfigGPRSState = 2;
 6094              		.loc 1 2269 0
 6095 05ba 404B     		ldr	r3, .L439+12	@ tmp529,
 6096 05bc 0222     		movs	r2, #2	@ tmp530,
 6097 05be 1A70     		strb	r2, [r3]	@ tmp531, GSMConfigGPRSState
2270:src/sim900_800.c **** /*
2271:src/sim900_800.c **** 			i = GSMSendCommand(&GSMbuffGPRSCommand[0], 50, 0, &GSMbuffRtaCommand[0]);
2272:src/sim900_800.c **** 
2273:src/sim900_800.c **** 			if (i == 2)
2274:src/sim900_800.c **** 			{
ARM GAS  /tmp/cc16P66I.s 			page 151


2275:src/sim900_800.c **** 				GSMConfigGPRSState = 3;
2276:src/sim900_800.c **** 			}
2277:src/sim900_800.c **** 
2278:src/sim900_800.c **** 			if (i > 2)
2279:src/sim900_800.c **** 			{
2280:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
2281:src/sim900_800.c **** 				return 3;
2282:src/sim900_800.c **** 			}
2283:src/sim900_800.c **** */
2284:src/sim900_800.c **** 			break;
 6098              		.loc 1 2284 0
 6099 05c0 69E0     		b	.L381	@
 6100              	.L378:
2285:src/sim900_800.c **** 
2286:src/sim900_800.c **** 		case 14:
2287:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6101              		.loc 1 2287 0
 6102 05c2 3E4B     		ldr	r3, .L439+12	@ tmp532,
 6103 05c4 0022     		movs	r2, #0	@ tmp533,
 6104 05c6 1A70     		strb	r2, [r3]	@ tmp534, GSMConfigGPRSState
2288:src/sim900_800.c **** 			return 2;
 6105              		.loc 1 2288 0
 6106 05c8 0223     		movs	r3, #2	@ D.8032,
 6107 05ca 6EE0     		b	.L384	@
 6108              	.L379:
2289:src/sim900_800.c **** 			break;
2290:src/sim900_800.c **** 
2291:src/sim900_800.c **** 		case 15:
2292:src/sim900_800.c **** 			if ((sim == 1) || (sim == 2))
 6109              		.loc 1 2292 0
 6110 05cc 0F23     		movs	r3, #15	@ tmp535,
 6111 05ce 6B44     		add	r3, r3, sp	@ tmp535,
 6112 05d0 1B78     		ldrb	r3, [r3]	@ tmp536, sim
 6113 05d2 012B     		cmp	r3, #1	@ tmp536,
 6114 05d4 04D0     		beq	.L417	@,
 6115              		.loc 1 2292 0 is_stmt 0 discriminator 1
 6116 05d6 0F23     		movs	r3, #15	@ tmp537,
 6117 05d8 6B44     		add	r3, r3, sp	@ tmp537,
 6118 05da 1B78     		ldrb	r3, [r3]	@ tmp538, sim
 6119 05dc 022B     		cmp	r3, #2	@ tmp538,
 6120 05de 1BD1     		bne	.L418	@,
 6121              	.L417:
2293:src/sim900_800.c **** 			{
2294:src/sim900_800.c **** 				i = GSM_SetSIM(sim);
 6122              		.loc 1 2294 0 is_stmt 1
 6123 05e0 1724     		movs	r4, #23	@ tmp539,
 6124 05e2 6C44     		add	r4, r4, sp	@ tmp539,
 6125 05e4 0F23     		movs	r3, #15	@ tmp540,
 6126 05e6 6B44     		add	r3, r3, sp	@ tmp540,
 6127 05e8 1B78     		ldrb	r3, [r3]	@ tmp541, sim
 6128 05ea 1800     		movs	r0, r3	@, tmp541
 6129 05ec FFF7FEFF 		bl	GSM_SetSIM	@
 6130 05f0 0300     		movs	r3, r0	@ tmp542,
 6131 05f2 2370     		strb	r3, [r4]	@ tmp544, i
2295:src/sim900_800.c **** 
2296:src/sim900_800.c **** 				if (i == 2)
 6132              		.loc 1 2296 0
ARM GAS  /tmp/cc16P66I.s 			page 152


 6133 05f4 1723     		movs	r3, #23	@ tmp545,
 6134 05f6 6B44     		add	r3, r3, sp	@ tmp545,
 6135 05f8 1B78     		ldrb	r3, [r3]	@ tmp546, i
 6136 05fa 022B     		cmp	r3, #2	@ tmp546,
 6137 05fc 02D1     		bne	.L419	@,
2297:src/sim900_800.c **** 				{
2298:src/sim900_800.c **** 					GSMConfigGPRSState = 2;
 6138              		.loc 1 2298 0
 6139 05fe 2F4B     		ldr	r3, .L439+12	@ tmp547,
 6140 0600 0222     		movs	r2, #2	@ tmp548,
 6141 0602 1A70     		strb	r2, [r3]	@ tmp549, GSMConfigGPRSState
 6142              	.L419:
2299:src/sim900_800.c **** 				}
2300:src/sim900_800.c **** 
2301:src/sim900_800.c **** 				if (i>2)
 6143              		.loc 1 2301 0
 6144 0604 1723     		movs	r3, #23	@ tmp550,
 6145 0606 6B44     		add	r3, r3, sp	@ tmp550,
 6146 0608 1B78     		ldrb	r3, [r3]	@ tmp551, i
 6147 060a 022B     		cmp	r3, #2	@ tmp551,
 6148 060c 09D9     		bls	.L421	@,
2302:src/sim900_800.c **** 				{
2303:src/sim900_800.c **** 					GSMConfigGPRSState = 0;
 6149              		.loc 1 2303 0
 6150 060e 2B4B     		ldr	r3, .L439+12	@ tmp552,
 6151 0610 0022     		movs	r2, #0	@ tmp553,
 6152 0612 1A70     		strb	r2, [r3]	@ tmp554, GSMConfigGPRSState
2304:src/sim900_800.c **** 					return 3;
 6153              		.loc 1 2304 0
 6154 0614 0323     		movs	r3, #3	@ D.8032,
 6155 0616 48E0     		b	.L384	@
 6156              	.L418:
2305:src/sim900_800.c **** 				}
2306:src/sim900_800.c **** 			}
2307:src/sim900_800.c **** 			else
2308:src/sim900_800.c **** 			{
2309:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6157              		.loc 1 2309 0
 6158 0618 284B     		ldr	r3, .L439+12	@ tmp555,
 6159 061a 0022     		movs	r2, #0	@ tmp556,
 6160 061c 1A70     		strb	r2, [r3]	@ tmp557, GSMConfigGPRSState
2310:src/sim900_800.c **** 				return 3;
 6161              		.loc 1 2310 0
 6162 061e 0323     		movs	r3, #3	@ D.8032,
 6163 0620 43E0     		b	.L384	@
 6164              	.L421:
2311:src/sim900_800.c **** 			}
2312:src/sim900_800.c **** 
2313:src/sim900_800.c **** 			break;
 6165              		.loc 1 2313 0 discriminator 1
 6166 0622 38E0     		b	.L381	@
 6167              	.L380:
2314:src/sim900_800.c **** 		case 16:
2315:src/sim900_800.c **** 
2316:src/sim900_800.c **** 			i = GSMSendCommand("AT+CIPSHUT\r\n", 50, 0, &GSMbuffRtaCommand[0]);
 6168              		.loc 1 2316 0
 6169 0624 1724     		movs	r4, #23	@ tmp558,
ARM GAS  /tmp/cc16P66I.s 			page 153


 6170 0626 6C44     		add	r4, r4, sp	@ tmp558,
 6171 0628 214B     		ldr	r3, .L439	@ tmp559,
 6172 062a 2D48     		ldr	r0, .L439+48	@ tmp560,
 6173 062c 0022     		movs	r2, #0	@,
 6174 062e 3221     		movs	r1, #50	@,
 6175 0630 FFF7FEFF 		bl	GSMSendCommand	@
 6176 0634 0300     		movs	r3, r0	@ tmp561,
 6177 0636 2370     		strb	r3, [r4]	@ tmp563, i
2317:src/sim900_800.c **** 
2318:src/sim900_800.c **** 			if (i == 2)
 6178              		.loc 1 2318 0
 6179 0638 1723     		movs	r3, #23	@ tmp564,
 6180 063a 6B44     		add	r3, r3, sp	@ tmp564,
 6181 063c 1B78     		ldrb	r3, [r3]	@ tmp565, i
 6182 063e 022B     		cmp	r3, #2	@ tmp565,
 6183 0640 04D1     		bne	.L422	@,
2319:src/sim900_800.c **** 			{
2320:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6184              		.loc 1 2320 0
 6185 0642 1E4B     		ldr	r3, .L439+12	@ tmp566,
 6186 0644 0022     		movs	r2, #0	@ tmp567,
 6187 0646 1A70     		strb	r2, [r3]	@ tmp568, GSMConfigGPRSState
2321:src/sim900_800.c **** 				return 3;
 6188              		.loc 1 2321 0
 6189 0648 0323     		movs	r3, #3	@ D.8032,
 6190 064a 2EE0     		b	.L384	@
 6191              	.L422:
2322:src/sim900_800.c **** 			}
2323:src/sim900_800.c **** 
2324:src/sim900_800.c **** 			if (i > 2)
 6192              		.loc 1 2324 0
 6193 064c 1723     		movs	r3, #23	@ tmp569,
 6194 064e 6B44     		add	r3, r3, sp	@ tmp569,
 6195 0650 1B78     		ldrb	r3, [r3]	@ tmp570, i
 6196 0652 022B     		cmp	r3, #2	@ tmp570,
 6197 0654 1ED9     		bls	.L436	@,
2325:src/sim900_800.c **** 			{
2326:src/sim900_800.c **** 				GSMConfigGPRSState = 0;
 6198              		.loc 1 2326 0
 6199 0656 194B     		ldr	r3, .L439+12	@ tmp571,
 6200 0658 0022     		movs	r2, #0	@ tmp572,
 6201 065a 1A70     		strb	r2, [r3]	@ tmp573, GSMConfigGPRSState
2327:src/sim900_800.c **** 				return 3;
 6202              		.loc 1 2327 0
 6203 065c 0323     		movs	r3, #3	@ D.8032,
 6204 065e 24E0     		b	.L384	@
 6205              	.L362:
2328:src/sim900_800.c **** 			}
2329:src/sim900_800.c **** 			break;
2330:src/sim900_800.c **** 		default:
2331:src/sim900_800.c **** 			GSMConfigGPRSState = 0;
 6206              		.loc 1 2331 0
 6207 0660 164B     		ldr	r3, .L439+12	@ tmp574,
 6208 0662 0022     		movs	r2, #0	@ tmp575,
 6209 0664 1A70     		strb	r2, [r3]	@ tmp576, GSMConfigGPRSState
2332:src/sim900_800.c **** 			break;
 6210              		.loc 1 2332 0
ARM GAS  /tmp/cc16P66I.s 			page 154


 6211 0666 16E0     		b	.L381	@
 6212              	.L425:
1984:src/sim900_800.c **** 		case 3:
 6213              		.loc 1 1984 0
 6214 0668 C046     		nop
 6215 066a 14E0     		b	.L381	@
 6216              	.L426:
2072:src/sim900_800.c **** 
 6217              		.loc 1 2072 0
 6218 066c C046     		nop
 6219 066e 12E0     		b	.L381	@
 6220              	.L427:
2095:src/sim900_800.c **** 
 6221              		.loc 1 2095 0
 6222 0670 C046     		nop
 6223 0672 10E0     		b	.L381	@
 6224              	.L428:
2118:src/sim900_800.c **** 		case 6:
 6225              		.loc 1 2118 0
 6226 0674 C046     		nop
 6227 0676 0EE0     		b	.L381	@
 6228              	.L429:
2148:src/sim900_800.c **** 		case 7:
 6229              		.loc 1 2148 0
 6230 0678 C046     		nop
 6231 067a 0CE0     		b	.L381	@
 6232              	.L430:
2163:src/sim900_800.c **** 
 6233              		.loc 1 2163 0
 6234 067c C046     		nop
 6235 067e 0AE0     		b	.L381	@
 6236              	.L431:
2195:src/sim900_800.c **** 
 6237              		.loc 1 2195 0
 6238 0680 C046     		nop
 6239 0682 08E0     		b	.L381	@
 6240              	.L432:
2218:src/sim900_800.c **** 
 6241              		.loc 1 2218 0
 6242 0684 C046     		nop
 6243 0686 06E0     		b	.L381	@
 6244              	.L433:
2234:src/sim900_800.c **** 
 6245              		.loc 1 2234 0
 6246 0688 C046     		nop
 6247 068a 04E0     		b	.L381	@
 6248              	.L434:
2249:src/sim900_800.c **** 
 6249              		.loc 1 2249 0
 6250 068c C046     		nop
 6251 068e 02E0     		b	.L381	@
 6252              	.L435:
2267:src/sim900_800.c **** 		case 13:
 6253              		.loc 1 2267 0
 6254 0690 C046     		nop
 6255 0692 00E0     		b	.L381	@
 6256              	.L436:
ARM GAS  /tmp/cc16P66I.s 			page 155


2329:src/sim900_800.c **** 		default:
 6257              		.loc 1 2329 0
 6258 0694 C046     		nop
 6259              	.L381:
2333:src/sim900_800.c **** 
2334:src/sim900_800.c **** 	}
2335:src/sim900_800.c **** 
2336:src/sim900_800.c **** 	if (GSMConfigGPRSTimeOut == 0)
 6260              		.loc 1 2336 0
 6261 0696 134B     		ldr	r3, .L439+52	@ tmp577,
 6262 0698 1B88     		ldrh	r3, [r3]	@ D.8037, GSMConfigGPRSTimeOut
 6263 069a 002B     		cmp	r3, #0	@ D.8037,
 6264 069c 04D1     		bne	.L424	@,
2337:src/sim900_800.c **** 	{
2338:src/sim900_800.c **** 		GSMConfigGPRSState = 0;
 6265              		.loc 1 2338 0
 6266 069e 074B     		ldr	r3, .L439+12	@ tmp578,
 6267 06a0 0022     		movs	r2, #0	@ tmp579,
 6268 06a2 1A70     		strb	r2, [r3]	@ tmp580, GSMConfigGPRSState
2339:src/sim900_800.c **** 		return 4;
 6269              		.loc 1 2339 0
 6270 06a4 0423     		movs	r3, #4	@ D.8032,
 6271 06a6 00E0     		b	.L384	@
 6272              	.L424:
2340:src/sim900_800.c **** 	}
2341:src/sim900_800.c **** 
2342:src/sim900_800.c **** 	return 1;
 6273              		.loc 1 2342 0
 6274 06a8 0123     		movs	r3, #1	@ D.8032,
 6275              	.L384:
2343:src/sim900_800.c **** }
 6276              		.loc 1 2343 0
 6277 06aa 1800     		movs	r0, r3	@, <retval>
 6278 06ac 06B0     		add	sp, sp, #24	@,,
 6279              		@ sp needed	@
 6280 06ae 10BD     		pop	{r4, pc}
 6281              	.L440:
 6282              		.align	2
 6283              	.L439:
 6284 06b0 00000000 		.word	GSMbuffRtaCommand
 6285 06b4 B8010000 		.word	.LC146
 6286 06b8 C4010000 		.word	.LC148
 6287 06bc 00000000 		.word	GSMConfigGPRSState
 6288 06c0 00000000 		.word	GSMbuffGPRSCommand
 6289 06c4 CC010000 		.word	.LC150
 6290 06c8 E8000000 		.word	.LC95
 6291 06cc E0010000 		.word	.LC152
 6292 06d0 34010000 		.word	.LC119
 6293 06d4 EC010000 		.word	.LC154
 6294 06d8 00000000 		.word	GSMConfigGPRSflag
 6295 06dc F8010000 		.word	.LC156
 6296 06e0 14000000 		.word	.LC33
 6297 06e4 00000000 		.word	GSMConfigGPRSTimeOut
 6298              		.cfi_endproc
 6299              	.LFE36:
 6300              		.size	GSMConfigPDPGPRS, .-GSMConfigPDPGPRS
 6301              		.text
ARM GAS  /tmp/cc16P66I.s 			page 156


 6302              	.Letext0:
 6303              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 6304              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6305              		.file 4 "./cmsis_boot/stm32f0xx.h"
 6306              		.file 5 "src/flash_program.h"
 6307              		.section	.debug_info,"",%progbits
 6308              	.Ldebug_info0:
 6309 0000 140D0000 		.4byte	0xd14
 6310 0004 0200     		.2byte	0x2
 6311 0006 00000000 		.4byte	.Ldebug_abbrev0
 6312 000a 04       		.byte	0x4
 6313 000b 01       		.uleb128 0x1
 6314 000c 98070000 		.4byte	.LASF145
 6315 0010 0C       		.byte	0xc
 6316 0011 31010000 		.4byte	.LASF146
 6317 0015 5B040000 		.4byte	.LASF147
 6318 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6319 001d 00000000 		.4byte	0
 6320 0021 00000000 		.4byte	0
 6321 0025 00000000 		.4byte	.Ldebug_line0
 6322 0029 02       		.uleb128 0x2
 6323 002a 01       		.byte	0x1
 6324 002b 08       		.byte	0x8
 6325 002c 9A050000 		.4byte	.LASF0
 6326 0030 02       		.uleb128 0x2
 6327 0031 01       		.byte	0x1
 6328 0032 06       		.byte	0x6
 6329 0033 8C070000 		.4byte	.LASF1
 6330 0037 02       		.uleb128 0x2
 6331 0038 02       		.byte	0x2
 6332 0039 05       		.byte	0x5
 6333 003a BB050000 		.4byte	.LASF2
 6334 003e 03       		.uleb128 0x3
 6335 003f 40020000 		.4byte	.LASF5
 6336 0043 02       		.byte	0x2
 6337 0044 2B       		.byte	0x2b
 6338 0045 49000000 		.4byte	0x49
 6339 0049 02       		.uleb128 0x2
 6340 004a 02       		.byte	0x2
 6341 004b 07       		.byte	0x7
 6342 004c 62030000 		.4byte	.LASF3
 6343 0050 02       		.uleb128 0x2
 6344 0051 04       		.byte	0x4
 6345 0052 05       		.byte	0x5
 6346 0053 AB010000 		.4byte	.LASF4
 6347 0057 03       		.uleb128 0x3
 6348 0058 53020000 		.4byte	.LASF6
 6349 005c 02       		.byte	0x2
 6350 005d 41       		.byte	0x41
 6351 005e 62000000 		.4byte	0x62
 6352 0062 02       		.uleb128 0x2
 6353 0063 04       		.byte	0x4
 6354 0064 07       		.byte	0x7
 6355 0065 1F030000 		.4byte	.LASF7
 6356 0069 02       		.uleb128 0x2
 6357 006a 08       		.byte	0x8
 6358 006b 05       		.byte	0x5
ARM GAS  /tmp/cc16P66I.s 			page 157


 6359 006c 13010000 		.4byte	.LASF8
 6360 0070 02       		.uleb128 0x2
 6361 0071 08       		.byte	0x8
 6362 0072 07       		.byte	0x7
 6363 0073 B0000000 		.4byte	.LASF9
 6364 0077 04       		.uleb128 0x4
 6365 0078 04       		.byte	0x4
 6366 0079 05       		.byte	0x5
 6367 007a 696E7400 		.ascii	"int\000"
 6368 007e 02       		.uleb128 0x2
 6369 007f 04       		.byte	0x4
 6370 0080 07       		.byte	0x7
 6371 0081 F6020000 		.4byte	.LASF10
 6372 0085 03       		.uleb128 0x3
 6373 0086 07020000 		.4byte	.LASF11
 6374 008a 03       		.byte	0x3
 6375 008b 1A       		.byte	0x1a
 6376 008c 3E000000 		.4byte	0x3e
 6377 0090 03       		.uleb128 0x3
 6378 0091 32060000 		.4byte	.LASF12
 6379 0095 03       		.byte	0x3
 6380 0096 20       		.byte	0x20
 6381 0097 57000000 		.4byte	0x57
 6382 009b 02       		.uleb128 0x2
 6383 009c 04       		.byte	0x4
 6384 009d 07       		.byte	0x7
 6385 009e 05040000 		.4byte	.LASF13
 6386 00a2 05       		.uleb128 0x5
 6387 00a3 90000000 		.4byte	0x90
 6388 00a7 06       		.uleb128 0x6
 6389 00a8 90000000 		.4byte	0x90
 6390 00ac B7000000 		.4byte	0xb7
 6391 00b0 07       		.uleb128 0x7
 6392 00b1 9B000000 		.4byte	0x9b
 6393 00b5 01       		.byte	0x1
 6394 00b6 00       		.byte	0
 6395 00b7 05       		.uleb128 0x5
 6396 00b8 85000000 		.4byte	0x85
 6397 00bc 08       		.uleb128 0x8
 6398 00bd 2C       		.byte	0x2c
 6399 00be 04       		.byte	0x4
 6400 00bf 6902     		.2byte	0x269
 6401 00c1 98010000 		.4byte	0x198
 6402 00c5 09       		.uleb128 0x9
 6403 00c6 AA000000 		.4byte	.LASF14
 6404 00ca 04       		.byte	0x4
 6405 00cb 6B02     		.2byte	0x26b
 6406 00cd A2000000 		.4byte	0xa2
 6407 00d1 02       		.byte	0x2
 6408 00d2 23       		.byte	0x23
 6409 00d3 00       		.uleb128 0
 6410 00d4 09       		.uleb128 0x9
 6411 00d5 71000000 		.4byte	.LASF15
 6412 00d9 04       		.byte	0x4
 6413 00da 6C02     		.2byte	0x26c
 6414 00dc B7000000 		.4byte	0xb7
 6415 00e0 02       		.byte	0x2
ARM GAS  /tmp/cc16P66I.s 			page 158


 6416 00e1 23       		.byte	0x23
 6417 00e2 04       		.uleb128 0x4
 6418 00e3 09       		.uleb128 0x9
 6419 00e4 22050000 		.4byte	.LASF16
 6420 00e8 04       		.byte	0x4
 6421 00e9 6D02     		.2byte	0x26d
 6422 00eb 85000000 		.4byte	0x85
 6423 00ef 02       		.byte	0x2
 6424 00f0 23       		.byte	0x23
 6425 00f1 06       		.uleb128 0x6
 6426 00f2 09       		.uleb128 0x9
 6427 00f3 4B020000 		.4byte	.LASF17
 6428 00f7 04       		.byte	0x4
 6429 00f8 6E02     		.2byte	0x26e
 6430 00fa A2000000 		.4byte	0xa2
 6431 00fe 02       		.byte	0x2
 6432 00ff 23       		.byte	0x23
 6433 0100 08       		.uleb128 0x8
 6434 0101 09       		.uleb128 0x9
 6435 0102 0F000000 		.4byte	.LASF18
 6436 0106 04       		.byte	0x4
 6437 0107 6F02     		.2byte	0x26f
 6438 0109 A2000000 		.4byte	0xa2
 6439 010d 02       		.byte	0x2
 6440 010e 23       		.byte	0x23
 6441 010f 0C       		.uleb128 0xc
 6442 0110 0A       		.uleb128 0xa
 6443 0111 49445200 		.ascii	"IDR\000"
 6444 0115 04       		.byte	0x4
 6445 0116 7002     		.2byte	0x270
 6446 0118 B7000000 		.4byte	0xb7
 6447 011c 02       		.byte	0x2
 6448 011d 23       		.byte	0x23
 6449 011e 10       		.uleb128 0x10
 6450 011f 09       		.uleb128 0x9
 6451 0120 2C050000 		.4byte	.LASF19
 6452 0124 04       		.byte	0x4
 6453 0125 7102     		.2byte	0x271
 6454 0127 85000000 		.4byte	0x85
 6455 012b 02       		.byte	0x2
 6456 012c 23       		.byte	0x23
 6457 012d 12       		.uleb128 0x12
 6458 012e 0A       		.uleb128 0xa
 6459 012f 4F445200 		.ascii	"ODR\000"
 6460 0133 04       		.byte	0x4
 6461 0134 7202     		.2byte	0x272
 6462 0136 B7000000 		.4byte	0xb7
 6463 013a 02       		.byte	0x2
 6464 013b 23       		.byte	0x23
 6465 013c 14       		.uleb128 0x14
 6466 013d 09       		.uleb128 0x9
 6467 013e 36050000 		.4byte	.LASF20
 6468 0142 04       		.byte	0x4
 6469 0143 7302     		.2byte	0x273
 6470 0145 85000000 		.4byte	0x85
 6471 0149 02       		.byte	0x2
 6472 014a 23       		.byte	0x23
ARM GAS  /tmp/cc16P66I.s 			page 159


 6473 014b 16       		.uleb128 0x16
 6474 014c 09       		.uleb128 0x9
 6475 014d 0D070000 		.4byte	.LASF21
 6476 0151 04       		.byte	0x4
 6477 0152 7402     		.2byte	0x274
 6478 0154 A2000000 		.4byte	0xa2
 6479 0158 02       		.byte	0x2
 6480 0159 23       		.byte	0x23
 6481 015a 18       		.uleb128 0x18
 6482 015b 09       		.uleb128 0x9
 6483 015c 26000000 		.4byte	.LASF22
 6484 0160 04       		.byte	0x4
 6485 0161 7502     		.2byte	0x275
 6486 0163 A2000000 		.4byte	0xa2
 6487 0167 02       		.byte	0x2
 6488 0168 23       		.byte	0x23
 6489 0169 1C       		.uleb128 0x1c
 6490 016a 0A       		.uleb128 0xa
 6491 016b 41465200 		.ascii	"AFR\000"
 6492 016f 04       		.byte	0x4
 6493 0170 7602     		.2byte	0x276
 6494 0172 98010000 		.4byte	0x198
 6495 0176 02       		.byte	0x2
 6496 0177 23       		.byte	0x23
 6497 0178 20       		.uleb128 0x20
 6498 0179 0A       		.uleb128 0xa
 6499 017a 42525200 		.ascii	"BRR\000"
 6500 017e 04       		.byte	0x4
 6501 017f 7702     		.2byte	0x277
 6502 0181 B7000000 		.4byte	0xb7
 6503 0185 02       		.byte	0x2
 6504 0186 23       		.byte	0x23
 6505 0187 28       		.uleb128 0x28
 6506 0188 09       		.uleb128 0x9
 6507 0189 40050000 		.4byte	.LASF23
 6508 018d 04       		.byte	0x4
 6509 018e 7802     		.2byte	0x278
 6510 0190 85000000 		.4byte	0x85
 6511 0194 02       		.byte	0x2
 6512 0195 23       		.byte	0x23
 6513 0196 2A       		.uleb128 0x2a
 6514 0197 00       		.byte	0
 6515 0198 05       		.uleb128 0x5
 6516 0199 A7000000 		.4byte	0xa7
 6517 019d 0B       		.uleb128 0xb
 6518 019e 31030000 		.4byte	.LASF24
 6519 01a2 04       		.byte	0x4
 6520 01a3 7902     		.2byte	0x279
 6521 01a5 BC000000 		.4byte	0xbc
 6522 01a9 0C       		.uleb128 0xc
 6523 01aa D4000000 		.4byte	.LASF148
 6524 01ae 54       		.byte	0x54
 6525 01af 05       		.byte	0x5
 6526 01b0 40       		.byte	0x40
 6527 01b1 26020000 		.4byte	0x226
 6528 01b5 0D       		.uleb128 0xd
 6529 01b6 DC050000 		.4byte	.LASF25
ARM GAS  /tmp/cc16P66I.s 			page 160


 6530 01ba 05       		.byte	0x5
 6531 01bb 42       		.byte	0x42
 6532 01bc 26020000 		.4byte	0x226
 6533 01c0 02       		.byte	0x2
 6534 01c1 23       		.byte	0x23
 6535 01c2 00       		.uleb128 0
 6536 01c3 0D       		.uleb128 0xd
 6537 01c4 0A060000 		.4byte	.LASF26
 6538 01c8 05       		.byte	0x5
 6539 01c9 43       		.byte	0x43
 6540 01ca 26020000 		.4byte	0x226
 6541 01ce 02       		.byte	0x2
 6542 01cf 23       		.byte	0x23
 6543 01d0 18       		.uleb128 0x18
 6544 01d1 0D       		.uleb128 0xd
 6545 01d2 87060000 		.4byte	.LASF27
 6546 01d6 05       		.byte	0x5
 6547 01d7 44       		.byte	0x44
 6548 01d8 26020000 		.4byte	0x226
 6549 01dc 02       		.byte	0x2
 6550 01dd 23       		.byte	0x23
 6551 01de 30       		.uleb128 0x30
 6552 01df 0D       		.uleb128 0xd
 6553 01e0 CE030000 		.4byte	.LASF28
 6554 01e4 05       		.byte	0x5
 6555 01e5 46       		.byte	0x46
 6556 01e6 7E000000 		.4byte	0x7e
 6557 01ea 02       		.byte	0x2
 6558 01eb 23       		.byte	0x23
 6559 01ec 48       		.uleb128 0x48
 6560 01ed 0D       		.uleb128 0xd
 6561 01ee 90050000 		.4byte	.LASF29
 6562 01f2 05       		.byte	0x5
 6563 01f3 47       		.byte	0x47
 6564 01f4 7E000000 		.4byte	0x7e
 6565 01f8 02       		.byte	0x2
 6566 01f9 23       		.byte	0x23
 6567 01fa 4C       		.uleb128 0x4c
 6568 01fb 0D       		.uleb128 0xd
 6569 01fc B4010000 		.4byte	.LASF30
 6570 0200 05       		.byte	0x5
 6571 0201 48       		.byte	0x48
 6572 0202 49000000 		.4byte	0x49
 6573 0206 02       		.byte	0x2
 6574 0207 23       		.byte	0x23
 6575 0208 50       		.uleb128 0x50
 6576 0209 0D       		.uleb128 0xd
 6577 020a 00000000 		.4byte	.LASF31
 6578 020e 05       		.byte	0x5
 6579 020f 4A       		.byte	0x4a
 6580 0210 29000000 		.4byte	0x29
 6581 0214 02       		.byte	0x2
 6582 0215 23       		.byte	0x23
 6583 0216 52       		.uleb128 0x52
 6584 0217 0D       		.uleb128 0xd
 6585 0218 36040000 		.4byte	.LASF32
 6586 021c 05       		.byte	0x5
ARM GAS  /tmp/cc16P66I.s 			page 161


 6587 021d 4D       		.byte	0x4d
 6588 021e 29000000 		.4byte	0x29
 6589 0222 02       		.byte	0x2
 6590 0223 23       		.byte	0x23
 6591 0224 53       		.uleb128 0x53
 6592 0225 00       		.byte	0
 6593 0226 06       		.uleb128 0x6
 6594 0227 36020000 		.4byte	0x236
 6595 022b 36020000 		.4byte	0x236
 6596 022f 07       		.uleb128 0x7
 6597 0230 9B000000 		.4byte	0x9b
 6598 0234 17       		.byte	0x17
 6599 0235 00       		.byte	0
 6600 0236 02       		.uleb128 0x2
 6601 0237 01       		.byte	0x1
 6602 0238 08       		.byte	0x8
 6603 0239 6D060000 		.4byte	.LASF33
 6604 023d 03       		.uleb128 0x3
 6605 023e E2030000 		.4byte	.LASF34
 6606 0242 05       		.byte	0x5
 6607 0243 51       		.byte	0x51
 6608 0244 A9010000 		.4byte	0x1a9
 6609 0248 02       		.uleb128 0x2
 6610 0249 08       		.byte	0x8
 6611 024a 04       		.byte	0x4
 6612 024b 4F060000 		.4byte	.LASF35
 6613 024f 0E       		.uleb128 0xe
 6614 0250 04       		.byte	0x4
 6615 0251 29000000 		.4byte	0x29
 6616 0255 0E       		.uleb128 0xe
 6617 0256 04       		.byte	0x4
 6618 0257 36020000 		.4byte	0x236
 6619 025b 06       		.uleb128 0x6
 6620 025c 36020000 		.4byte	0x236
 6621 0260 6B020000 		.4byte	0x26b
 6622 0264 07       		.uleb128 0x7
 6623 0265 9B000000 		.4byte	0x9b
 6624 0269 07       		.byte	0x7
 6625 026a 00       		.byte	0
 6626 026b 0F       		.uleb128 0xf
 6627 026c 01       		.byte	0x1
 6628 026d 6E050000 		.4byte	.LASF36
 6629 0271 01       		.byte	0x1
 6630 0272 86       		.byte	0x86
 6631 0273 01       		.byte	0x1
 6632 0274 00000000 		.4byte	.LFB20
 6633 0278 5C000000 		.4byte	.LFE20
 6634 027c 00000000 		.4byte	.LLST0
 6635 0280 01       		.byte	0x1
 6636 0281 10       		.uleb128 0x10
 6637 0282 01       		.byte	0x1
 6638 0283 7C020000 		.4byte	.LASF149
 6639 0287 01       		.byte	0x1
 6640 0288 E2       		.byte	0xe2
 6641 0289 01       		.byte	0x1
 6642 028a 29000000 		.4byte	0x29
 6643 028e 00000000 		.4byte	.LFB21
ARM GAS  /tmp/cc16P66I.s 			page 162


 6644 0292 FC000000 		.4byte	.LFE21
 6645 0296 02       		.byte	0x2
 6646 0297 7D       		.byte	0x7d
 6647 0298 00       		.sleb128 0
 6648 0299 01       		.byte	0x1
 6649 029a 11       		.uleb128 0x11
 6650 029b 01       		.byte	0x1
 6651 029c D3080000 		.4byte	.LASF37
 6652 02a0 01       		.byte	0x1
 6653 02a1 1901     		.2byte	0x119
 6654 02a3 01       		.byte	0x1
 6655 02a4 00000000 		.4byte	.LFB22
 6656 02a8 10000000 		.4byte	.LFE22
 6657 02ac 02       		.byte	0x2
 6658 02ad 7D       		.byte	0x7d
 6659 02ae 00       		.sleb128 0
 6660 02af 01       		.byte	0x1
 6661 02b0 12       		.uleb128 0x12
 6662 02b1 01       		.byte	0x1
 6663 02b2 CB020000 		.4byte	.LASF38
 6664 02b6 01       		.byte	0x1
 6665 02b7 2301     		.2byte	0x123
 6666 02b9 01       		.byte	0x1
 6667 02ba 29000000 		.4byte	0x29
 6668 02be 00000000 		.4byte	.LFB23
 6669 02c2 BC000000 		.4byte	.LFE23
 6670 02c6 20000000 		.4byte	.LLST1
 6671 02ca 01       		.byte	0x1
 6672 02cb DF020000 		.4byte	0x2df
 6673 02cf 13       		.uleb128 0x13
 6674 02d0 F1020000 		.4byte	.LASF40
 6675 02d4 01       		.byte	0x1
 6676 02d5 2501     		.2byte	0x125
 6677 02d7 29000000 		.4byte	0x29
 6678 02db 02       		.byte	0x2
 6679 02dc 91       		.byte	0x91
 6680 02dd 7F       		.sleb128 -1
 6681 02de 00       		.byte	0
 6682 02df 12       		.uleb128 0x12
 6683 02e0 01       		.byte	0x1
 6684 02e1 86020000 		.4byte	.LASF39
 6685 02e5 01       		.byte	0x1
 6686 02e6 4B01     		.2byte	0x14b
 6687 02e8 01       		.byte	0x1
 6688 02e9 29000000 		.4byte	0x29
 6689 02ed 00000000 		.4byte	.LFB24
 6690 02f1 70000000 		.4byte	.LFE24
 6691 02f5 40000000 		.4byte	.LLST2
 6692 02f9 01       		.byte	0x1
 6693 02fa 1D030000 		.4byte	0x31d
 6694 02fe 14       		.uleb128 0x14
 6695 02ff 74696D00 		.ascii	"tim\000"
 6696 0303 01       		.byte	0x1
 6697 0304 4B01     		.2byte	0x14b
 6698 0306 49000000 		.4byte	0x49
 6699 030a 02       		.byte	0x2
 6700 030b 91       		.byte	0x91
ARM GAS  /tmp/cc16P66I.s 			page 163


 6701 030c 76       		.sleb128 -10
 6702 030d 13       		.uleb128 0x13
 6703 030e F1020000 		.4byte	.LASF40
 6704 0312 01       		.byte	0x1
 6705 0313 4D01     		.2byte	0x14d
 6706 0315 29000000 		.4byte	0x29
 6707 0319 02       		.byte	0x2
 6708 031a 91       		.byte	0x91
 6709 031b 7F       		.sleb128 -1
 6710 031c 00       		.byte	0
 6711 031d 15       		.uleb128 0x15
 6712 031e 01       		.byte	0x1
 6713 031f 1D020000 		.4byte	.LASF74
 6714 0323 01       		.byte	0x1
 6715 0324 6601     		.2byte	0x166
 6716 0326 01       		.byte	0x1
 6717 0327 00000000 		.4byte	.LFB25
 6718 032b CC030000 		.4byte	.LFE25
 6719 032f 60000000 		.4byte	.LLST3
 6720 0333 01       		.byte	0x1
 6721 0334 09040000 		.4byte	0x409
 6722 0338 16       		.uleb128 0x16
 6723 0339 9D000000 		.4byte	.LASF41
 6724 033d 01       		.byte	0x1
 6725 033e 6601     		.2byte	0x166
 6726 0340 4F020000 		.4byte	0x24f
 6727 0344 02       		.byte	0x2
 6728 0345 91       		.byte	0x91
 6729 0346 6C       		.sleb128 -20
 6730 0347 16       		.uleb128 0x16
 6731 0348 89030000 		.4byte	.LASF42
 6732 034c 01       		.byte	0x1
 6733 034d 6601     		.2byte	0x166
 6734 034f 4F020000 		.4byte	0x24f
 6735 0353 02       		.byte	0x2
 6736 0354 91       		.byte	0x91
 6737 0355 68       		.sleb128 -24
 6738 0356 16       		.uleb128 0x16
 6739 0357 97030000 		.4byte	.LASF43
 6740 035b 01       		.byte	0x1
 6741 035c 6601     		.2byte	0x166
 6742 035e 4F020000 		.4byte	0x24f
 6743 0362 02       		.byte	0x2
 6744 0363 91       		.byte	0x91
 6745 0364 64       		.sleb128 -28
 6746 0365 16       		.uleb128 0x16
 6747 0366 79050000 		.4byte	.LASF44
 6748 036a 01       		.byte	0x1
 6749 036b 6601     		.2byte	0x166
 6750 036d 55020000 		.4byte	0x255
 6751 0371 02       		.byte	0x2
 6752 0372 91       		.byte	0x91
 6753 0373 60       		.sleb128 -32
 6754 0374 16       		.uleb128 0x16
 6755 0375 41070000 		.4byte	.LASF45
 6756 0379 01       		.byte	0x1
 6757 037a 6601     		.2byte	0x166
ARM GAS  /tmp/cc16P66I.s 			page 164


 6758 037c 55020000 		.4byte	0x255
 6759 0380 02       		.byte	0x2
 6760 0381 91       		.byte	0x91
 6761 0382 00       		.sleb128 0
 6762 0383 16       		.uleb128 0x16
 6763 0384 E8040000 		.4byte	.LASF46
 6764 0388 01       		.byte	0x1
 6765 0389 6601     		.2byte	0x166
 6766 038b 55020000 		.4byte	0x255
 6767 038f 02       		.byte	0x2
 6768 0390 91       		.byte	0x91
 6769 0391 04       		.sleb128 4
 6770 0392 16       		.uleb128 0x16
 6771 0393 0E040000 		.4byte	.LASF47
 6772 0397 01       		.byte	0x1
 6773 0398 6601     		.2byte	0x166
 6774 039a 55020000 		.4byte	0x255
 6775 039e 02       		.byte	0x2
 6776 039f 91       		.byte	0x91
 6777 03a0 08       		.sleb128 8
 6778 03a1 16       		.uleb128 0x16
 6779 03a2 CF010000 		.4byte	.LASF48
 6780 03a6 01       		.byte	0x1
 6781 03a7 6601     		.2byte	0x166
 6782 03a9 55020000 		.4byte	0x255
 6783 03ad 02       		.byte	0x2
 6784 03ae 91       		.byte	0x91
 6785 03af 0C       		.sleb128 12
 6786 03b0 16       		.uleb128 0x16
 6787 03b1 5C070000 		.4byte	.LASF49
 6788 03b5 01       		.byte	0x1
 6789 03b6 6601     		.2byte	0x166
 6790 03b8 55020000 		.4byte	0x255
 6791 03bc 02       		.byte	0x2
 6792 03bd 91       		.byte	0x91
 6793 03be 10       		.sleb128 16
 6794 03bf 16       		.uleb128 0x16
 6795 03c0 92010000 		.4byte	.LASF50
 6796 03c4 01       		.byte	0x1
 6797 03c5 6601     		.2byte	0x166
 6798 03c7 55020000 		.4byte	0x255
 6799 03cb 02       		.byte	0x2
 6800 03cc 91       		.byte	0x91
 6801 03cd 14       		.sleb128 20
 6802 03ce 16       		.uleb128 0x16
 6803 03cf F6000000 		.4byte	.LASF51
 6804 03d3 01       		.byte	0x1
 6805 03d4 6601     		.2byte	0x166
 6806 03d6 55020000 		.4byte	0x255
 6807 03da 02       		.byte	0x2
 6808 03db 91       		.byte	0x91
 6809 03dc 18       		.sleb128 24
 6810 03dd 16       		.uleb128 0x16
 6811 03de 4E010000 		.4byte	.LASF52
 6812 03e2 01       		.byte	0x1
 6813 03e3 6601     		.2byte	0x166
 6814 03e5 55020000 		.4byte	0x255
ARM GAS  /tmp/cc16P66I.s 			page 165


 6815 03e9 02       		.byte	0x2
 6816 03ea 91       		.byte	0x91
 6817 03eb 1C       		.sleb128 28
 6818 03ec 16       		.uleb128 0x16
 6819 03ed 85080000 		.4byte	.LASF53
 6820 03f1 01       		.byte	0x1
 6821 03f2 6601     		.2byte	0x166
 6822 03f4 55020000 		.4byte	0x255
 6823 03f8 02       		.byte	0x2
 6824 03f9 91       		.byte	0x91
 6825 03fa 20       		.sleb128 32
 6826 03fb 17       		.uleb128 0x17
 6827 03fc 6900     		.ascii	"i\000"
 6828 03fe 01       		.byte	0x1
 6829 03ff 6801     		.2byte	0x168
 6830 0401 29000000 		.4byte	0x29
 6831 0405 02       		.byte	0x2
 6832 0406 91       		.byte	0x91
 6833 0407 77       		.sleb128 -9
 6834 0408 00       		.byte	0
 6835 0409 18       		.uleb128 0x18
 6836 040a 01       		.byte	0x1
 6837 040b 2B040000 		.4byte	.LASF54
 6838 040f 01       		.byte	0x1
 6839 0410 3402     		.2byte	0x234
 6840 0412 01       		.byte	0x1
 6841 0413 36020000 		.4byte	0x236
 6842 0417 00000000 		.4byte	.LFB26
 6843 041b 70000000 		.4byte	.LFE26
 6844 041f 8C000000 		.4byte	.LLST4
 6845 0423 01       		.byte	0x1
 6846 0424 36040000 		.4byte	0x436
 6847 0428 17       		.uleb128 0x17
 6848 0429 6900     		.ascii	"i\000"
 6849 042b 01       		.byte	0x1
 6850 042c 3602     		.2byte	0x236
 6851 042e 29000000 		.4byte	0x29
 6852 0432 02       		.byte	0x2
 6853 0433 91       		.byte	0x91
 6854 0434 77       		.sleb128 -9
 6855 0435 00       		.byte	0
 6856 0436 19       		.uleb128 0x19
 6857 0437 01       		.byte	0x1
 6858 0438 D4020000 		.4byte	.LASF55
 6859 043c 01       		.byte	0x1
 6860 043d 5102     		.2byte	0x251
 6861 043f 01       		.byte	0x1
 6862 0440 00000000 		.4byte	.LFB27
 6863 0444 C4020000 		.4byte	.LFE27
 6864 0448 B8000000 		.4byte	.LLST5
 6865 044c 01       		.byte	0x1
 6866 044d 18       		.uleb128 0x18
 6867 044e 01       		.byte	0x1
 6868 044f 13050000 		.4byte	.LASF56
 6869 0453 01       		.byte	0x1
 6870 0454 C902     		.2byte	0x2c9
 6871 0456 01       		.byte	0x1
ARM GAS  /tmp/cc16P66I.s 			page 166


 6872 0457 36020000 		.4byte	0x236
 6873 045b 00000000 		.4byte	.LFB28
 6874 045f 0C010000 		.4byte	.LFE28
 6875 0463 D8000000 		.4byte	.LLST6
 6876 0467 01       		.byte	0x1
 6877 0468 A9040000 		.4byte	0x4a9
 6878 046c 16       		.uleb128 0x16
 6879 046d 3B060000 		.4byte	.LASF57
 6880 0471 01       		.byte	0x1
 6881 0472 C902     		.2byte	0x2c9
 6882 0474 55020000 		.4byte	0x255
 6883 0478 02       		.byte	0x2
 6884 0479 91       		.byte	0x91
 6885 047a 74       		.sleb128 -12
 6886 047b 16       		.uleb128 0x16
 6887 047c 21010000 		.4byte	.LASF58
 6888 0480 01       		.byte	0x1
 6889 0481 C902     		.2byte	0x2c9
 6890 0483 49000000 		.4byte	0x49
 6891 0487 02       		.byte	0x2
 6892 0488 91       		.byte	0x91
 6893 0489 72       		.sleb128 -14
 6894 048a 14       		.uleb128 0x14
 6895 048b 72746100 		.ascii	"rta\000"
 6896 048f 01       		.byte	0x1
 6897 0490 C902     		.2byte	0x2c9
 6898 0492 29000000 		.4byte	0x29
 6899 0496 02       		.byte	0x2
 6900 0497 91       		.byte	0x91
 6901 0498 71       		.sleb128 -15
 6902 0499 16       		.uleb128 0x16
 6903 049a 88000000 		.4byte	.LASF59
 6904 049e 01       		.byte	0x1
 6905 049f C902     		.2byte	0x2c9
 6906 04a1 55020000 		.4byte	0x255
 6907 04a5 02       		.byte	0x2
 6908 04a6 91       		.byte	0x91
 6909 04a7 6C       		.sleb128 -20
 6910 04a8 00       		.byte	0
 6911 04a9 18       		.uleb128 0x18
 6912 04aa 01       		.byte	0x1
 6913 04ab C4010000 		.4byte	.LASF60
 6914 04af 01       		.byte	0x1
 6915 04b0 1703     		.2byte	0x317
 6916 04b2 01       		.byte	0x1
 6917 04b3 36020000 		.4byte	0x236
 6918 04b7 00000000 		.4byte	.LFB29
 6919 04bb F4020000 		.4byte	.LFE29
 6920 04bf 04010000 		.4byte	.LLST7
 6921 04c3 01       		.byte	0x1
 6922 04c4 E5040000 		.4byte	0x4e5
 6923 04c8 16       		.uleb128 0x16
 6924 04c9 21010000 		.4byte	.LASF58
 6925 04cd 01       		.byte	0x1
 6926 04ce 1703     		.2byte	0x317
 6927 04d0 49000000 		.4byte	0x49
 6928 04d4 02       		.byte	0x2
ARM GAS  /tmp/cc16P66I.s 			page 167


 6929 04d5 91       		.byte	0x91
 6930 04d6 6E       		.sleb128 -18
 6931 04d7 17       		.uleb128 0x17
 6932 04d8 6900     		.ascii	"i\000"
 6933 04da 01       		.byte	0x1
 6934 04db 1903     		.2byte	0x319
 6935 04dd 29000000 		.4byte	0x29
 6936 04e1 02       		.byte	0x2
 6937 04e2 91       		.byte	0x91
 6938 04e3 77       		.sleb128 -9
 6939 04e4 00       		.byte	0
 6940 04e5 18       		.uleb128 0x18
 6941 04e6 01       		.byte	0x1
 6942 04e7 7E030000 		.4byte	.LASF61
 6943 04eb 01       		.byte	0x1
 6944 04ec CC03     		.2byte	0x3cc
 6945 04ee 01       		.byte	0x1
 6946 04ef 36020000 		.4byte	0x236
 6947 04f3 00000000 		.4byte	.LFB30
 6948 04f7 8C010000 		.4byte	.LFE30
 6949 04fb 30010000 		.4byte	.LLST8
 6950 04ff 01       		.byte	0x1
 6951 0500 3F050000 		.4byte	0x53f
 6952 0504 16       		.uleb128 0x16
 6953 0505 D8060000 		.4byte	.LASF62
 6954 0509 01       		.byte	0x1
 6955 050a CC03     		.2byte	0x3cc
 6956 050c 55020000 		.4byte	0x255
 6957 0510 02       		.byte	0x2
 6958 0511 91       		.byte	0x91
 6959 0512 6C       		.sleb128 -20
 6960 0513 16       		.uleb128 0x16
 6961 0514 3A070000 		.4byte	.LASF63
 6962 0518 01       		.byte	0x1
 6963 0519 CC03     		.2byte	0x3cc
 6964 051b 55020000 		.4byte	0x255
 6965 051f 02       		.byte	0x2
 6966 0520 91       		.byte	0x91
 6967 0521 68       		.sleb128 -24
 6968 0522 16       		.uleb128 0x16
 6969 0523 21010000 		.4byte	.LASF58
 6970 0527 01       		.byte	0x1
 6971 0528 CC03     		.2byte	0x3cc
 6972 052a 49000000 		.4byte	0x49
 6973 052e 02       		.byte	0x2
 6974 052f 91       		.byte	0x91
 6975 0530 66       		.sleb128 -26
 6976 0531 17       		.uleb128 0x17
 6977 0532 6900     		.ascii	"i\000"
 6978 0534 01       		.byte	0x1
 6979 0535 CE03     		.2byte	0x3ce
 6980 0537 29000000 		.4byte	0x29
 6981 053b 02       		.byte	0x2
 6982 053c 91       		.byte	0x91
 6983 053d 77       		.sleb128 -9
 6984 053e 00       		.byte	0
 6985 053f 18       		.uleb128 0x18
ARM GAS  /tmp/cc16P66I.s 			page 168


 6986 0540 01       		.byte	0x1
 6987 0541 A5030000 		.4byte	.LASF64
 6988 0545 01       		.byte	0x1
 6989 0546 1F04     		.2byte	0x41f
 6990 0548 01       		.byte	0x1
 6991 0549 36020000 		.4byte	0x236
 6992 054d 00000000 		.4byte	.LFB31
 6993 0551 80080000 		.4byte	.LFE31
 6994 0555 5C010000 		.4byte	.LLST9
 6995 0559 01       		.byte	0x1
 6996 055a E4050000 		.4byte	0x5e4
 6997 055e 14       		.uleb128 0x14
 6998 055f 73696D00 		.ascii	"sim\000"
 6999 0563 01       		.byte	0x1
 7000 0564 1F04     		.2byte	0x41f
 7001 0566 36020000 		.4byte	0x236
 7002 056a 02       		.byte	0x2
 7003 056b 91       		.byte	0x91
 7004 056c 6F       		.sleb128 -17
 7005 056d 16       		.uleb128 0x16
 7006 056e FE030000 		.4byte	.LASF65
 7007 0572 01       		.byte	0x1
 7008 0573 1F04     		.2byte	0x41f
 7009 0575 55020000 		.4byte	0x255
 7010 0579 02       		.byte	0x2
 7011 057a 91       		.byte	0x91
 7012 057b 68       		.sleb128 -24
 7013 057c 16       		.uleb128 0x16
 7014 057d 29010000 		.4byte	.LASF66
 7015 0581 01       		.byte	0x1
 7016 0582 1F04     		.2byte	0x41f
 7017 0584 55020000 		.4byte	0x255
 7018 0588 02       		.byte	0x2
 7019 0589 91       		.byte	0x91
 7020 058a 64       		.sleb128 -28
 7021 058b 16       		.uleb128 0x16
 7022 058c 5B030000 		.4byte	.LASF67
 7023 0590 01       		.byte	0x1
 7024 0591 1F04     		.2byte	0x41f
 7025 0593 55020000 		.4byte	0x255
 7026 0597 02       		.byte	0x2
 7027 0598 91       		.byte	0x91
 7028 0599 60       		.sleb128 -32
 7029 059a 16       		.uleb128 0x16
 7030 059b 75030000 		.4byte	.LASF68
 7031 059f 01       		.byte	0x1
 7032 05a0 1F04     		.2byte	0x41f
 7033 05a2 55020000 		.4byte	0x255
 7034 05a6 02       		.byte	0x2
 7035 05a7 91       		.byte	0x91
 7036 05a8 00       		.sleb128 0
 7037 05a9 16       		.uleb128 0x16
 7038 05aa 42010000 		.4byte	.LASF69
 7039 05ae 01       		.byte	0x1
 7040 05af 1F04     		.2byte	0x41f
 7041 05b1 55020000 		.4byte	0x255
 7042 05b5 02       		.byte	0x2
ARM GAS  /tmp/cc16P66I.s 			page 169


 7043 05b6 91       		.byte	0x91
 7044 05b7 04       		.sleb128 4
 7045 05b8 16       		.uleb128 0x16
 7046 05b9 8F000000 		.4byte	.LASF70
 7047 05bd 01       		.byte	0x1
 7048 05be 1F04     		.2byte	0x41f
 7049 05c0 55020000 		.4byte	0x255
 7050 05c4 02       		.byte	0x2
 7051 05c5 91       		.byte	0x91
 7052 05c6 08       		.sleb128 8
 7053 05c7 16       		.uleb128 0x16
 7054 05c8 21010000 		.4byte	.LASF58
 7055 05cc 01       		.byte	0x1
 7056 05cd 1F04     		.2byte	0x41f
 7057 05cf 49000000 		.4byte	0x49
 7058 05d3 02       		.byte	0x2
 7059 05d4 91       		.byte	0x91
 7060 05d5 0C       		.sleb128 12
 7061 05d6 17       		.uleb128 0x17
 7062 05d7 6900     		.ascii	"i\000"
 7063 05d9 01       		.byte	0x1
 7064 05da 2104     		.2byte	0x421
 7065 05dc 29000000 		.4byte	0x29
 7066 05e0 02       		.byte	0x2
 7067 05e1 91       		.byte	0x91
 7068 05e2 77       		.sleb128 -9
 7069 05e3 00       		.byte	0
 7070 05e4 18       		.uleb128 0x18
 7071 05e5 01       		.byte	0x1
 7072 05e6 2F070000 		.4byte	.LASF71
 7073 05ea 01       		.byte	0x1
 7074 05eb A905     		.2byte	0x5a9
 7075 05ed 01       		.byte	0x1
 7076 05ee 36020000 		.4byte	0x236
 7077 05f2 00000000 		.4byte	.LFB32
 7078 05f6 84000000 		.4byte	.LFE32
 7079 05fa 88010000 		.4byte	.LLST10
 7080 05fe 01       		.byte	0x1
 7081 05ff 20060000 		.4byte	0x620
 7082 0603 14       		.uleb128 0x14
 7083 0604 73696D00 		.ascii	"sim\000"
 7084 0608 01       		.byte	0x1
 7085 0609 A905     		.2byte	0x5a9
 7086 060b 29000000 		.4byte	0x29
 7087 060f 02       		.byte	0x2
 7088 0610 91       		.byte	0x91
 7089 0611 6F       		.sleb128 -17
 7090 0612 17       		.uleb128 0x17
 7091 0613 6900     		.ascii	"i\000"
 7092 0615 01       		.byte	0x1
 7093 0616 AC05     		.2byte	0x5ac
 7094 0618 29000000 		.4byte	0x29
 7095 061c 02       		.byte	0x2
 7096 061d 91       		.byte	0x91
 7097 061e 77       		.sleb128 -9
 7098 061f 00       		.byte	0
 7099 0620 18       		.uleb128 0x18
ARM GAS  /tmp/cc16P66I.s 			page 170


 7100 0621 01       		.byte	0x1
 7101 0622 B3040000 		.4byte	.LASF72
 7102 0626 01       		.byte	0x1
 7103 0627 C105     		.2byte	0x5c1
 7104 0629 01       		.byte	0x1
 7105 062a 36020000 		.4byte	0x236
 7106 062e 00000000 		.4byte	.LFB33
 7107 0632 2C010000 		.4byte	.LFE33
 7108 0636 B4010000 		.4byte	.LLST11
 7109 063a 01       		.byte	0x1
 7110 063b 6B060000 		.4byte	0x66b
 7111 063f 16       		.uleb128 0x16
 7112 0640 D8060000 		.4byte	.LASF62
 7113 0644 01       		.byte	0x1
 7114 0645 C105     		.2byte	0x5c1
 7115 0647 55020000 		.4byte	0x255
 7116 064b 02       		.byte	0x2
 7117 064c 91       		.byte	0x91
 7118 064d 6C       		.sleb128 -20
 7119 064e 16       		.uleb128 0x16
 7120 064f 21010000 		.4byte	.LASF58
 7121 0653 01       		.byte	0x1
 7122 0654 C105     		.2byte	0x5c1
 7123 0656 49000000 		.4byte	0x49
 7124 065a 02       		.byte	0x2
 7125 065b 91       		.byte	0x91
 7126 065c 6A       		.sleb128 -22
 7127 065d 17       		.uleb128 0x17
 7128 065e 6900     		.ascii	"i\000"
 7129 0660 01       		.byte	0x1
 7130 0661 C305     		.2byte	0x5c3
 7131 0663 29000000 		.4byte	0x29
 7132 0667 02       		.byte	0x2
 7133 0668 91       		.byte	0x91
 7134 0669 77       		.sleb128 -9
 7135 066a 00       		.byte	0
 7136 066b 11       		.uleb128 0x11
 7137 066c 01       		.byte	0x1
 7138 066d AF080000 		.4byte	.LASF73
 7139 0671 01       		.byte	0x1
 7140 0672 0006     		.2byte	0x600
 7141 0674 01       		.byte	0x1
 7142 0675 00000000 		.4byte	.LFB34
 7143 0679 F8000000 		.4byte	.LFE34
 7144 067d 02       		.byte	0x2
 7145 067e 7D       		.byte	0x7d
 7146 067f 00       		.sleb128 0
 7147 0680 01       		.byte	0x1
 7148 0681 15       		.uleb128 0x15
 7149 0682 01       		.byte	0x1
 7150 0683 10020000 		.4byte	.LASF75
 7151 0687 01       		.byte	0x1
 7152 0688 2006     		.2byte	0x620
 7153 068a 01       		.byte	0x1
 7154 068b 00000000 		.4byte	.LFB35
 7155 068f 74020000 		.4byte	.LFE35
 7156 0693 E0010000 		.4byte	.LLST12
ARM GAS  /tmp/cc16P66I.s 			page 171


 7157 0697 01       		.byte	0x1
 7158 0698 D5060000 		.4byte	0x6d5
 7159 069c 17       		.uleb128 0x17
 7160 069d 6900     		.ascii	"i\000"
 7161 069f 01       		.byte	0x1
 7162 06a0 2206     		.2byte	0x622
 7163 06a2 29000000 		.4byte	0x29
 7164 06a6 02       		.byte	0x2
 7165 06a7 91       		.byte	0x91
 7166 06a8 6F       		.sleb128 -17
 7167 06a9 17       		.uleb128 0x17
 7168 06aa 6A00     		.ascii	"j\000"
 7169 06ac 01       		.byte	0x1
 7170 06ad 2206     		.2byte	0x622
 7171 06af 29000000 		.4byte	0x29
 7172 06b3 02       		.byte	0x2
 7173 06b4 91       		.byte	0x91
 7174 06b5 77       		.sleb128 -9
 7175 06b6 13       		.uleb128 0x13
 7176 06b7 DC040000 		.4byte	.LASF76
 7177 06bb 01       		.byte	0x1
 7178 06bc 2206     		.2byte	0x622
 7179 06be 29000000 		.4byte	0x29
 7180 06c2 02       		.byte	0x2
 7181 06c3 91       		.byte	0x91
 7182 06c4 76       		.sleb128 -10
 7183 06c5 13       		.uleb128 0x13
 7184 06c6 D2050000 		.4byte	.LASF77
 7185 06ca 01       		.byte	0x1
 7186 06cb 2306     		.2byte	0x623
 7187 06cd 55020000 		.4byte	0x255
 7188 06d1 02       		.byte	0x2
 7189 06d2 91       		.byte	0x91
 7190 06d3 70       		.sleb128 -16
 7191 06d4 00       		.byte	0
 7192 06d5 18       		.uleb128 0x18
 7193 06d6 01       		.byte	0x1
 7194 06d7 C7060000 		.4byte	.LASF78
 7195 06db 01       		.byte	0x1
 7196 06dc 9007     		.2byte	0x790
 7197 06de 01       		.byte	0x1
 7198 06df 36020000 		.4byte	0x236
 7199 06e3 00000000 		.4byte	.LFB36
 7200 06e7 E8060000 		.4byte	.LFE36
 7201 06eb 0C020000 		.4byte	.LLST13
 7202 06ef 01       		.byte	0x1
 7203 06f0 7A070000 		.4byte	0x77a
 7204 06f4 14       		.uleb128 0x14
 7205 06f5 73696D00 		.ascii	"sim\000"
 7206 06f9 01       		.byte	0x1
 7207 06fa 9007     		.2byte	0x790
 7208 06fc 36020000 		.4byte	0x236
 7209 0700 02       		.byte	0x2
 7210 0701 91       		.byte	0x91
 7211 0702 6F       		.sleb128 -17
 7212 0703 16       		.uleb128 0x16
 7213 0704 FE030000 		.4byte	.LASF65
ARM GAS  /tmp/cc16P66I.s 			page 172


 7214 0708 01       		.byte	0x1
 7215 0709 9007     		.2byte	0x790
 7216 070b 55020000 		.4byte	0x255
 7217 070f 02       		.byte	0x2
 7218 0710 91       		.byte	0x91
 7219 0711 68       		.sleb128 -24
 7220 0712 16       		.uleb128 0x16
 7221 0713 29010000 		.4byte	.LASF66
 7222 0717 01       		.byte	0x1
 7223 0718 9007     		.2byte	0x790
 7224 071a 55020000 		.4byte	0x255
 7225 071e 02       		.byte	0x2
 7226 071f 91       		.byte	0x91
 7227 0720 64       		.sleb128 -28
 7228 0721 16       		.uleb128 0x16
 7229 0722 5B030000 		.4byte	.LASF67
 7230 0726 01       		.byte	0x1
 7231 0727 9007     		.2byte	0x790
 7232 0729 55020000 		.4byte	0x255
 7233 072d 02       		.byte	0x2
 7234 072e 91       		.byte	0x91
 7235 072f 60       		.sleb128 -32
 7236 0730 16       		.uleb128 0x16
 7237 0731 75030000 		.4byte	.LASF68
 7238 0735 01       		.byte	0x1
 7239 0736 9007     		.2byte	0x790
 7240 0738 55020000 		.4byte	0x255
 7241 073c 02       		.byte	0x2
 7242 073d 91       		.byte	0x91
 7243 073e 00       		.sleb128 0
 7244 073f 16       		.uleb128 0x16
 7245 0740 42010000 		.4byte	.LASF69
 7246 0744 01       		.byte	0x1
 7247 0745 9007     		.2byte	0x790
 7248 0747 55020000 		.4byte	0x255
 7249 074b 02       		.byte	0x2
 7250 074c 91       		.byte	0x91
 7251 074d 04       		.sleb128 4
 7252 074e 16       		.uleb128 0x16
 7253 074f 8F000000 		.4byte	.LASF70
 7254 0753 01       		.byte	0x1
 7255 0754 9007     		.2byte	0x790
 7256 0756 55020000 		.4byte	0x255
 7257 075a 02       		.byte	0x2
 7258 075b 91       		.byte	0x91
 7259 075c 08       		.sleb128 8
 7260 075d 16       		.uleb128 0x16
 7261 075e 21010000 		.4byte	.LASF58
 7262 0762 01       		.byte	0x1
 7263 0763 9007     		.2byte	0x790
 7264 0765 49000000 		.4byte	0x49
 7265 0769 02       		.byte	0x2
 7266 076a 91       		.byte	0x91
 7267 076b 0C       		.sleb128 12
 7268 076c 17       		.uleb128 0x17
 7269 076d 6900     		.ascii	"i\000"
 7270 076f 01       		.byte	0x1
ARM GAS  /tmp/cc16P66I.s 			page 173


 7271 0770 9207     		.2byte	0x792
 7272 0772 29000000 		.4byte	0x29
 7273 0776 02       		.byte	0x2
 7274 0777 91       		.byte	0x91
 7275 0778 77       		.sleb128 -9
 7276 0779 00       		.byte	0
 7277 077a 1A       		.uleb128 0x1a
 7278 077b C5050000 		.4byte	.LASF79
 7279 077f 01       		.byte	0x1
 7280 0780 0F       		.byte	0xf
 7281 0781 3D020000 		.4byte	0x23d
 7282 0785 01       		.byte	0x1
 7283 0786 01       		.byte	0x1
 7284 0787 1A       		.uleb128 0x1a
 7285 0788 57000000 		.4byte	.LASF80
 7286 078c 01       		.byte	0x1
 7287 078d 13       		.byte	0x13
 7288 078e 29000000 		.4byte	0x29
 7289 0792 01       		.byte	0x1
 7290 0793 01       		.byte	0x1
 7291 0794 06       		.uleb128 0x6
 7292 0795 36020000 		.4byte	0x236
 7293 0799 A4070000 		.4byte	0x7a4
 7294 079d 07       		.uleb128 0x7
 7295 079e 9B000000 		.4byte	0x9b
 7296 07a2 FF       		.byte	0xff
 7297 07a3 00       		.byte	0
 7298 07a4 1B       		.uleb128 0x1b
 7299 07a5 12070000 		.4byte	.LASF81
 7300 07a9 01       		.byte	0x1
 7301 07aa 18       		.byte	0x18
 7302 07ab B6070000 		.4byte	0x7b6
 7303 07af 01       		.byte	0x1
 7304 07b0 05       		.byte	0x5
 7305 07b1 03       		.byte	0x3
 7306 07b2 00000000 		.4byte	buffUARTGSMrx2
 7307 07b6 05       		.uleb128 0x5
 7308 07b7 94070000 		.4byte	0x794
 7309 07bb 1B       		.uleb128 0x1b
 7310 07bc 03030000 		.4byte	.LASF82
 7311 07c0 01       		.byte	0x1
 7312 07c1 19       		.byte	0x19
 7313 07c2 CD070000 		.4byte	0x7cd
 7314 07c6 01       		.byte	0x1
 7315 07c7 05       		.byte	0x5
 7316 07c8 03       		.byte	0x3
 7317 07c9 00000000 		.4byte	PacketReadyUARTGSM
 7318 07cd 05       		.uleb128 0x5
 7319 07ce 36020000 		.4byte	0x236
 7320 07d2 1B       		.uleb128 0x1b
 7321 07d3 21070000 		.4byte	.LASF83
 7322 07d7 01       		.byte	0x1
 7323 07d8 1D       		.byte	0x1d
 7324 07d9 29000000 		.4byte	0x29
 7325 07dd 01       		.byte	0x1
 7326 07de 05       		.byte	0x5
 7327 07df 03       		.byte	0x3
ARM GAS  /tmp/cc16P66I.s 			page 174


 7328 07e0 00000000 		.4byte	GSMStartState
 7329 07e4 1B       		.uleb128 0x1b
 7330 07e5 77070000 		.4byte	.LASF84
 7331 07e9 01       		.byte	0x1
 7332 07ea 1E       		.byte	0x1e
 7333 07eb F6070000 		.4byte	0x7f6
 7334 07ef 01       		.byte	0x1
 7335 07f0 05       		.byte	0x5
 7336 07f1 03       		.byte	0x3
 7337 07f2 00000000 		.4byte	GSMStartTime
 7338 07f6 05       		.uleb128 0x5
 7339 07f7 49000000 		.4byte	0x49
 7340 07fb 1B       		.uleb128 0x1b
 7341 07fc 5B060000 		.4byte	.LASF85
 7342 0800 01       		.byte	0x1
 7343 0801 1F       		.byte	0x1f
 7344 0802 F6070000 		.4byte	0x7f6
 7345 0806 01       		.byte	0x1
 7346 0807 05       		.byte	0x5
 7347 0808 03       		.byte	0x3
 7348 0809 00000000 		.4byte	GSMGeneralTimeOut
 7349 080d 1B       		.uleb128 0x1b
 7350 080e 90040000 		.4byte	.LASF86
 7351 0812 01       		.byte	0x1
 7352 0813 22       		.byte	0x22
 7353 0814 36020000 		.4byte	0x236
 7354 0818 01       		.byte	0x1
 7355 0819 05       		.byte	0x5
 7356 081a 03       		.byte	0x3
 7357 081b 00000000 		.4byte	GSMSendCommandState
 7358 081f 1B       		.uleb128 0x1b
 7359 0820 A8050000 		.4byte	.LASF87
 7360 0824 01       		.byte	0x1
 7361 0825 23       		.byte	0x23
 7362 0826 36020000 		.4byte	0x236
 7363 082a 01       		.byte	0x1
 7364 082b 05       		.byte	0x5
 7365 082c 03       		.byte	0x3
 7366 082d 00000000 		.4byte	GSMSendCommandFlag
 7367 0831 1B       		.uleb128 0x1b
 7368 0832 2A020000 		.4byte	.LASF88
 7369 0836 01       		.byte	0x1
 7370 0837 24       		.byte	0x24
 7371 0838 F6070000 		.4byte	0x7f6
 7372 083c 01       		.byte	0x1
 7373 083d 05       		.byte	0x5
 7374 083e 03       		.byte	0x3
 7375 083f 00000000 		.4byte	GSMSendCommandTimeOut
 7376 0843 1B       		.uleb128 0x1b
 7377 0844 6C020000 		.4byte	.LASF89
 7378 0848 01       		.byte	0x1
 7379 0849 28       		.byte	0x28
 7380 084a 36020000 		.4byte	0x236
 7381 084e 01       		.byte	0x1
 7382 084f 05       		.byte	0x5
 7383 0850 03       		.byte	0x3
 7384 0851 00000000 		.4byte	GSMSendSMSState
ARM GAS  /tmp/cc16P66I.s 			page 175


 7385 0855 1B       		.uleb128 0x1b
 7386 0856 F8010000 		.4byte	.LASF90
 7387 085a 01       		.byte	0x1
 7388 085b 29       		.byte	0x29
 7389 085c 36020000 		.4byte	0x236
 7390 0860 01       		.byte	0x1
 7391 0861 05       		.byte	0x5
 7392 0862 03       		.byte	0x3
 7393 0863 00000000 		.4byte	GSMSendSMSFlag
 7394 0867 1B       		.uleb128 0x1b
 7395 0868 2B000000 		.4byte	.LASF91
 7396 086c 01       		.byte	0x1
 7397 086d 2A       		.byte	0x2a
 7398 086e F6070000 		.4byte	0x7f6
 7399 0872 01       		.byte	0x1
 7400 0873 05       		.byte	0x5
 7401 0874 03       		.byte	0x3
 7402 0875 00000000 		.4byte	GSMSendSMSTimeOut
 7403 0879 06       		.uleb128 0x6
 7404 087a 36020000 		.4byte	0x236
 7405 087e 89080000 		.4byte	0x889
 7406 0882 07       		.uleb128 0x7
 7407 0883 9B000000 		.4byte	0x9b
 7408 0887 1F       		.byte	0x1f
 7409 0888 00       		.byte	0
 7410 0889 1B       		.uleb128 0x1b
 7411 088a E6010000 		.4byte	.LASF92
 7412 088e 01       		.byte	0x1
 7413 088f 2B       		.byte	0x2b
 7414 0890 79080000 		.4byte	0x879
 7415 0894 01       		.byte	0x1
 7416 0895 05       		.byte	0x5
 7417 0896 03       		.byte	0x3
 7418 0897 00000000 		.4byte	GSMSendSMSbuffAux
 7419 089b 1B       		.uleb128 0x1b
 7420 089c 4A050000 		.4byte	.LASF93
 7421 08a0 01       		.byte	0x1
 7422 08a1 2E       		.byte	0x2e
 7423 08a2 36020000 		.4byte	0x236
 7424 08a6 01       		.byte	0x1
 7425 08a7 05       		.byte	0x5
 7426 08a8 03       		.byte	0x3
 7427 08a9 00000000 		.4byte	GSMConfigState
 7428 08ad 1B       		.uleb128 0x1b
 7429 08ae 15000000 		.4byte	.LASF94
 7430 08b2 01       		.byte	0x1
 7431 08b3 2F       		.byte	0x2f
 7432 08b4 F6070000 		.4byte	0x7f6
 7433 08b8 01       		.byte	0x1
 7434 08b9 05       		.byte	0x5
 7435 08ba 03       		.byte	0x3
 7436 08bb 00000000 		.4byte	GSMConfigTimeOut
 7437 08bf 1B       		.uleb128 0x1b
 7438 08c0 63000000 		.4byte	.LASF95
 7439 08c4 01       		.byte	0x1
 7440 08c5 30       		.byte	0x30
 7441 08c6 F6070000 		.4byte	0x7f6
ARM GAS  /tmp/cc16P66I.s 			page 176


 7442 08ca 01       		.byte	0x1
 7443 08cb 05       		.byte	0x5
 7444 08cc 03       		.byte	0x3
 7445 08cd 00000000 		.4byte	GSMConfigTime
 7446 08d1 1B       		.uleb128 0x1b
 7447 08d2 59050000 		.4byte	.LASF96
 7448 08d6 01       		.byte	0x1
 7449 08d7 33       		.byte	0x33
 7450 08d8 49000000 		.4byte	0x49
 7451 08dc 01       		.byte	0x1
 7452 08dd 05       		.byte	0x5
 7453 08de 03       		.byte	0x3
 7454 08df 00000000 		.4byte	GSMConfigGPRSTimeOut
 7455 08e3 1B       		.uleb128 0x1b
 7456 08e4 F7050000 		.4byte	.LASF97
 7457 08e8 01       		.byte	0x1
 7458 08e9 34       		.byte	0x34
 7459 08ea 36020000 		.4byte	0x236
 7460 08ee 01       		.byte	0x1
 7461 08ef 05       		.byte	0x5
 7462 08f0 03       		.byte	0x3
 7463 08f1 00000000 		.4byte	GSMConfigGPRSState
 7464 08f5 1B       		.uleb128 0x1b
 7465 08f6 DF020000 		.4byte	.LASF98
 7466 08fa 01       		.byte	0x1
 7467 08fb 35       		.byte	0x35
 7468 08fc 36020000 		.4byte	0x236
 7469 0900 01       		.byte	0x1
 7470 0901 05       		.byte	0x5
 7471 0902 03       		.byte	0x3
 7472 0903 00000000 		.4byte	GSMConfigGPRSflag
 7473 0907 1B       		.uleb128 0x1b
 7474 0908 E9050000 		.4byte	.LASF99
 7475 090c 01       		.byte	0x1
 7476 090d 36       		.byte	0x36
 7477 090e 79080000 		.4byte	0x879
 7478 0912 01       		.byte	0x1
 7479 0913 05       		.byte	0x5
 7480 0914 03       		.byte	0x3
 7481 0915 00000000 		.4byte	GSMbuffStatus
 7482 0919 06       		.uleb128 0x6
 7483 091a 36020000 		.4byte	0x236
 7484 091e 29090000 		.4byte	0x929
 7485 0922 07       		.uleb128 0x7
 7486 0923 9B000000 		.4byte	0x9b
 7487 0927 3F       		.byte	0x3f
 7488 0928 00       		.byte	0
 7489 0929 1B       		.uleb128 0x1b
 7490 092a 3E030000 		.4byte	.LASF100
 7491 092e 01       		.byte	0x1
 7492 092f 37       		.byte	0x37
 7493 0930 19090000 		.4byte	0x919
 7494 0934 01       		.byte	0x1
 7495 0935 05       		.byte	0x5
 7496 0936 03       		.byte	0x3
 7497 0937 00000000 		.4byte	GSMbuffGPRSCommand
 7498 093b 06       		.uleb128 0x6
ARM GAS  /tmp/cc16P66I.s 			page 177


 7499 093c 36020000 		.4byte	0x236
 7500 0940 4B090000 		.4byte	0x94b
 7501 0944 07       		.uleb128 0x7
 7502 0945 9B000000 		.4byte	0x9b
 7503 0949 0F       		.byte	0xf
 7504 094a 00       		.byte	0
 7505 094b 1B       		.uleb128 0x1b
 7506 094c 7E060000 		.4byte	.LASF101
 7507 0950 01       		.byte	0x1
 7508 0951 38       		.byte	0x38
 7509 0952 3B090000 		.4byte	0x93b
 7510 0956 01       		.byte	0x1
 7511 0957 05       		.byte	0x5
 7512 0958 03       		.byte	0x3
 7513 0959 00000000 		.4byte	GSMIPadd
 7514 095d 1B       		.uleb128 0x1b
 7515 095e DF000000 		.4byte	.LASF102
 7516 0962 01       		.byte	0x1
 7517 0963 39       		.byte	0x39
 7518 0964 29000000 		.4byte	0x29
 7519 0968 01       		.byte	0x1
 7520 0969 05       		.byte	0x5
 7521 096a 03       		.byte	0x3
 7522 096b 00000000 		.4byte	GPRSrssi
 7523 096f 1B       		.uleb128 0x1b
 7524 0970 FE060000 		.4byte	.LASF103
 7525 0974 01       		.byte	0x1
 7526 0975 3C       		.byte	0x3c
 7527 0976 36020000 		.4byte	0x236
 7528 097a 01       		.byte	0x1
 7529 097b 05       		.byte	0x5
 7530 097c 03       		.byte	0x3
 7531 097d 00000000 		.4byte	GSMSendIPState
 7532 0981 1B       		.uleb128 0x1b
 7533 0982 3D000000 		.4byte	.LASF104
 7534 0986 01       		.byte	0x1
 7535 0987 3D       		.byte	0x3d
 7536 0988 36020000 		.4byte	0x236
 7537 098c 01       		.byte	0x1
 7538 098d 05       		.byte	0x5
 7539 098e 03       		.byte	0x3
 7540 098f 00000000 		.4byte	GSMSendIPFlag
 7541 0993 1B       		.uleb128 0x1b
 7542 0994 92060000 		.4byte	.LASF105
 7543 0998 01       		.byte	0x1
 7544 0999 3E       		.byte	0x3e
 7545 099a F6070000 		.4byte	0x7f6
 7546 099e 01       		.byte	0x1
 7547 099f 05       		.byte	0x5
 7548 09a0 03       		.byte	0x3
 7549 09a1 00000000 		.4byte	GSMSendIPTimeOut
 7550 09a5 1B       		.uleb128 0x1b
 7551 09a6 C2080000 		.4byte	.LASF106
 7552 09aa 01       		.byte	0x1
 7553 09ab 3F       		.byte	0x3f
 7554 09ac 79080000 		.4byte	0x879
 7555 09b0 01       		.byte	0x1
ARM GAS  /tmp/cc16P66I.s 			page 178


 7556 09b1 05       		.byte	0x5
 7557 09b2 03       		.byte	0x3
 7558 09b3 00000000 		.4byte	GSMSendIPbuffAux
 7559 09b7 1B       		.uleb128 0x1b
 7560 09b8 49040000 		.4byte	.LASF107
 7561 09bc 01       		.byte	0x1
 7562 09bd 41       		.byte	0x41
 7563 09be 94070000 		.4byte	0x794
 7564 09c2 01       		.byte	0x1
 7565 09c3 05       		.byte	0x5
 7566 09c4 03       		.byte	0x3
 7567 09c5 00000000 		.4byte	GSMbuffRtaCommand
 7568 09c9 06       		.uleb128 0x6
 7569 09ca 36020000 		.4byte	0x236
 7570 09ce D9090000 		.4byte	0x9d9
 7571 09d2 07       		.uleb128 0x7
 7572 09d3 9B000000 		.4byte	0x9b
 7573 09d7 02       		.byte	0x2
 7574 09d8 00       		.byte	0
 7575 09d9 1B       		.uleb128 0x1b
 7576 09da C7030000 		.4byte	.LASF108
 7577 09de 01       		.byte	0x1
 7578 09df 44       		.byte	0x44
 7579 09e0 EB090000 		.4byte	0x9eb
 7580 09e4 01       		.byte	0x1
 7581 09e5 05       		.byte	0x5
 7582 09e6 03       		.byte	0x3
 7583 09e7 00000000 		.4byte	GSM_OK
 7584 09eb 1C       		.uleb128 0x1c
 7585 09ec C9090000 		.4byte	0x9c9
 7586 09f0 06       		.uleb128 0x6
 7587 09f1 36020000 		.4byte	0x236
 7588 09f5 000A0000 		.4byte	0xa00
 7589 09f9 07       		.uleb128 0x7
 7590 09fa 9B000000 		.4byte	0x9b
 7591 09fe 05       		.byte	0x5
 7592 09ff 00       		.byte	0
 7593 0a00 1B       		.uleb128 0x1b
 7594 0a01 84070000 		.4byte	.LASF109
 7595 0a05 01       		.byte	0x1
 7596 0a06 45       		.byte	0x45
 7597 0a07 120A0000 		.4byte	0xa12
 7598 0a0b 01       		.byte	0x1
 7599 0a0c 05       		.byte	0x5
 7600 0a0d 03       		.byte	0x3
 7601 0a0e 00000000 		.4byte	GSM_ERR
 7602 0a12 1C       		.uleb128 0x1c
 7603 0a13 F0090000 		.4byte	0x9f0
 7604 0a17 06       		.uleb128 0x6
 7605 0a18 36020000 		.4byte	0x236
 7606 0a1c 270A0000 		.4byte	0xa27
 7607 0a20 07       		.uleb128 0x7
 7608 0a21 9B000000 		.4byte	0x9b
 7609 0a25 06       		.byte	0x6
 7610 0a26 00       		.byte	0
 7611 0a27 1B       		.uleb128 0x1b
 7612 0a28 46060000 		.4byte	.LASF110
ARM GAS  /tmp/cc16P66I.s 			page 179


 7613 0a2c 01       		.byte	0x1
 7614 0a2d 47       		.byte	0x47
 7615 0a2e 390A0000 		.4byte	0xa39
 7616 0a32 01       		.byte	0x1
 7617 0a33 05       		.byte	0x5
 7618 0a34 03       		.byte	0x3
 7619 0a35 00000000 		.4byte	GSM_CMGF
 7620 0a39 1C       		.uleb128 0x1c
 7621 0a3a 170A0000 		.4byte	0xa17
 7622 0a3e 1B       		.uleb128 0x1b
 7623 0a3f 72060000 		.4byte	.LASF111
 7624 0a43 01       		.byte	0x1
 7625 0a44 48       		.byte	0x48
 7626 0a45 500A0000 		.4byte	0xa50
 7627 0a49 01       		.byte	0x1
 7628 0a4a 05       		.byte	0x5
 7629 0a4b 03       		.byte	0x3
 7630 0a4c 00000000 		.4byte	GSM_IPSTATE
 7631 0a50 1C       		.uleb128 0x1c
 7632 0a51 170A0000 		.4byte	0xa17
 7633 0a55 06       		.uleb128 0x6
 7634 0a56 36020000 		.4byte	0x236
 7635 0a5a 650A0000 		.4byte	0xa65
 7636 0a5e 07       		.uleb128 0x7
 7637 0a5f 9B000000 		.4byte	0x9b
 7638 0a63 0A       		.byte	0xa
 7639 0a64 00       		.byte	0
 7640 0a65 1B       		.uleb128 0x1b
 7641 0a66 CE040000 		.4byte	.LASF112
 7642 0a6a 01       		.byte	0x1
 7643 0a6b 4B       		.byte	0x4b
 7644 0a6c 770A0000 		.4byte	0xa77
 7645 0a70 01       		.byte	0x1
 7646 0a71 05       		.byte	0x5
 7647 0a72 03       		.byte	0x3
 7648 0a73 00000000 		.4byte	GSM_IPINITIAL
 7649 0a77 1C       		.uleb128 0x1c
 7650 0a78 550A0000 		.4byte	0xa55
 7651 0a7c 06       		.uleb128 0x6
 7652 0a7d 36020000 		.4byte	0x236
 7653 0a81 8C0A0000 		.4byte	0xa8c
 7654 0a85 07       		.uleb128 0x7
 7655 0a86 9B000000 		.4byte	0x9b
 7656 0a8a 08       		.byte	0x8
 7657 0a8b 00       		.byte	0
 7658 0a8c 1B       		.uleb128 0x1b
 7659 0a8d 3D040000 		.4byte	.LASF113
 7660 0a91 01       		.byte	0x1
 7661 0a92 4C       		.byte	0x4c
 7662 0a93 9E0A0000 		.4byte	0xa9e
 7663 0a97 01       		.byte	0x1
 7664 0a98 05       		.byte	0x5
 7665 0a99 03       		.byte	0x3
 7666 0a9a 00000000 		.4byte	GSM_IPSTART
 7667 0a9e 1C       		.uleb128 0x1c
 7668 0a9f 7C0A0000 		.4byte	0xa7c
 7669 0aa3 1B       		.uleb128 0x1b
ARM GAS  /tmp/cc16P66I.s 			page 180


 7670 0aa4 B2020000 		.4byte	.LASF114
 7671 0aa8 01       		.byte	0x1
 7672 0aa9 4D       		.byte	0x4d
 7673 0aaa B50A0000 		.4byte	0xab5
 7674 0aae 01       		.byte	0x1
 7675 0aaf 05       		.byte	0x5
 7676 0ab0 03       		.byte	0x3
 7677 0ab1 00000000 		.4byte	GSM_IPGPRSACT
 7678 0ab5 1C       		.uleb128 0x1c
 7679 0ab6 550A0000 		.4byte	0xa55
 7680 0aba 06       		.uleb128 0x6
 7681 0abb 36020000 		.4byte	0x236
 7682 0abf CA0A0000 		.4byte	0xaca
 7683 0ac3 07       		.uleb128 0x7
 7684 0ac4 9B000000 		.4byte	0x9b
 7685 0ac8 09       		.byte	0x9
 7686 0ac9 00       		.byte	0
 7687 0aca 1B       		.uleb128 0x1b
 7688 0acb F1060000 		.4byte	.LASF115
 7689 0acf 01       		.byte	0x1
 7690 0ad0 4E       		.byte	0x4e
 7691 0ad1 DC0A0000 		.4byte	0xadc
 7692 0ad5 01       		.byte	0x1
 7693 0ad6 05       		.byte	0x5
 7694 0ad7 03       		.byte	0x3
 7695 0ad8 00000000 		.4byte	GSM_IPSTATUS
 7696 0adc 1C       		.uleb128 0x1c
 7697 0add BA0A0000 		.4byte	0xaba
 7698 0ae1 06       		.uleb128 0x6
 7699 0ae2 36020000 		.4byte	0x236
 7700 0ae6 F10A0000 		.4byte	0xaf1
 7701 0aea 07       		.uleb128 0x7
 7702 0aeb 9B000000 		.4byte	0x9b
 7703 0aef 0E       		.byte	0xe
 7704 0af0 00       		.byte	0
 7705 0af1 1B       		.uleb128 0x1b
 7706 0af2 BD040000 		.4byte	.LASF116
 7707 0af6 01       		.byte	0x1
 7708 0af7 4F       		.byte	0x4f
 7709 0af8 030B0000 		.4byte	0xb03
 7710 0afc 01       		.byte	0x1
 7711 0afd 05       		.byte	0x5
 7712 0afe 03       		.byte	0x3
 7713 0aff 00000000 		.4byte	GSM_IPCONNECTING
 7714 0b03 1C       		.uleb128 0x1c
 7715 0b04 E10A0000 		.4byte	0xae1
 7716 0b08 1B       		.uleb128 0x1b
 7717 0b09 C7000000 		.4byte	.LASF117
 7718 0b0d 01       		.byte	0x1
 7719 0b0e 50       		.byte	0x50
 7720 0b0f 1A0B0000 		.4byte	0xb1a
 7721 0b13 01       		.byte	0x1
 7722 0b14 05       		.byte	0x5
 7723 0b15 03       		.byte	0x3
 7724 0b16 00000000 		.4byte	GSM_IPCONNOK
 7725 0b1a 1C       		.uleb128 0x1c
 7726 0b1b 550A0000 		.4byte	0xa55
ARM GAS  /tmp/cc16P66I.s 			page 181


 7727 0b1f 06       		.uleb128 0x6
 7728 0b20 36020000 		.4byte	0x236
 7729 0b24 2F0B0000 		.4byte	0xb2f
 7730 0b28 07       		.uleb128 0x7
 7731 0b29 9B000000 		.4byte	0x9b
 7732 0b2d 0C       		.byte	0xc
 7733 0b2e 00       		.byte	0
 7734 0b2f 1B       		.uleb128 0x1b
 7735 0b30 A4040000 		.4byte	.LASF118
 7736 0b34 01       		.byte	0x1
 7737 0b35 51       		.byte	0x51
 7738 0b36 410B0000 		.4byte	0xb41
 7739 0b3a 01       		.byte	0x1
 7740 0b3b 05       		.byte	0x5
 7741 0b3c 03       		.byte	0x3
 7742 0b3d 00000000 		.4byte	GSM_IPCONNFAIL
 7743 0b41 1C       		.uleb128 0x1c
 7744 0b42 1F0B0000 		.4byte	0xb1f
 7745 0b46 1B       		.uleb128 0x1b
 7746 0b47 78000000 		.4byte	.LASF119
 7747 0b4b 01       		.byte	0x1
 7748 0b4c 52       		.byte	0x52
 7749 0b4d 580B0000 		.4byte	0xb58
 7750 0b51 01       		.byte	0x1
 7751 0b52 05       		.byte	0x5
 7752 0b53 03       		.byte	0x3
 7753 0b54 00000000 		.4byte	GSM_IPCONNCLOSE
 7754 0b58 1C       		.uleb128 0x1c
 7755 0b59 550A0000 		.4byte	0xa55
 7756 0b5d 06       		.uleb128 0x6
 7757 0b5e 36020000 		.4byte	0x236
 7758 0b62 6D0B0000 		.4byte	0xb6d
 7759 0b66 07       		.uleb128 0x7
 7760 0b67 9B000000 		.4byte	0x9b
 7761 0b6b 04       		.byte	0x4
 7762 0b6c 00       		.byte	0
 7763 0b6d 1B       		.uleb128 0x1b
 7764 0b6e 16030000 		.4byte	.LASF120
 7765 0b72 01       		.byte	0x1
 7766 0b73 54       		.byte	0x54
 7767 0b74 7F0B0000 		.4byte	0xb7f
 7768 0b78 01       		.byte	0x1
 7769 0b79 05       		.byte	0x5
 7770 0b7a 03       		.byte	0x3
 7771 0b7b 00000000 		.4byte	GSM_SIM1
 7772 0b7f 1C       		.uleb128 0x1c
 7773 0b80 5D0B0000 		.4byte	0xb5d
 7774 0b84 1B       		.uleb128 0x1b
 7775 0b85 F5030000 		.4byte	.LASF121
 7776 0b89 01       		.byte	0x1
 7777 0b8a 55       		.byte	0x55
 7778 0b8b 960B0000 		.4byte	0xb96
 7779 0b8f 01       		.byte	0x1
 7780 0b90 05       		.byte	0x5
 7781 0b91 03       		.byte	0x3
 7782 0b92 00000000 		.4byte	GSM_SIM2
 7783 0b96 1C       		.uleb128 0x1c
ARM GAS  /tmp/cc16P66I.s 			page 182


 7784 0b97 5D0B0000 		.4byte	0xb5d
 7785 0b9b 1B       		.uleb128 0x1b
 7786 0b9c D7030000 		.4byte	.LASF122
 7787 0ba0 01       		.byte	0x1
 7788 0ba1 56       		.byte	0x56
 7789 0ba2 AD0B0000 		.4byte	0xbad
 7790 0ba6 01       		.byte	0x1
 7791 0ba7 05       		.byte	0x5
 7792 0ba8 03       		.byte	0x3
 7793 0ba9 00000000 		.4byte	GSM_SENDOK
 7794 0bad 1C       		.uleb128 0x1c
 7795 0bae 5B020000 		.4byte	0x25b
 7796 0bb2 1B       		.uleb128 0x1b
 7797 0bb3 53080000 		.4byte	.LASF123
 7798 0bb7 01       		.byte	0x1
 7799 0bb8 58       		.byte	0x58
 7800 0bb9 29000000 		.4byte	0x29
 7801 0bbd 01       		.byte	0x1
 7802 0bbe 05       		.byte	0x5
 7803 0bbf 03       		.byte	0x3
 7804 0bc0 00000000 		.4byte	prestadorSimState
 7805 0bc4 1B       		.uleb128 0x1b
 7806 0bc5 9E080000 		.4byte	.LASF124
 7807 0bc9 01       		.byte	0x1
 7808 0bca 59       		.byte	0x59
 7809 0bcb 29000000 		.4byte	0x29
 7810 0bcf 01       		.byte	0x1
 7811 0bd0 05       		.byte	0x5
 7812 0bd1 03       		.byte	0x3
 7813 0bd2 00000000 		.4byte	prestadorSimTime
 7814 0bd6 1B       		.uleb128 0x1b
 7815 0bd7 C0020000 		.4byte	.LASF125
 7816 0bdb 01       		.byte	0x1
 7817 0bdc 5D       		.byte	0x5d
 7818 0bdd 29000000 		.4byte	0x29
 7819 0be1 01       		.byte	0x1
 7820 0be2 05       		.byte	0x5
 7821 0be3 03       		.byte	0x3
 7822 0be4 00000000 		.4byte	GSMCantSMS
 7823 0be8 1B       		.uleb128 0x1b
 7824 0be9 86010000 		.4byte	.LASF126
 7825 0bed 01       		.byte	0x1
 7826 0bee 5E       		.byte	0x5e
 7827 0bef 29000000 		.4byte	0x29
 7828 0bf3 01       		.byte	0x1
 7829 0bf4 05       		.byte	0x5
 7830 0bf5 03       		.byte	0x3
 7831 0bf6 00000000 		.4byte	GSMCantSMS2
 7832 0bfa 1B       		.uleb128 0x1b
 7833 0bfb 51030000 		.4byte	.LASF127
 7834 0bff 01       		.byte	0x1
 7835 0c00 5F       		.byte	0x5f
 7836 0c01 29000000 		.4byte	0x29
 7837 0c05 01       		.byte	0x1
 7838 0c06 05       		.byte	0x5
 7839 0c07 03       		.byte	0x3
 7840 0c08 00000000 		.4byte	GSMnumSMS
ARM GAS  /tmp/cc16P66I.s 			page 183


 7841 0c0c 1B       		.uleb128 0x1b
 7842 0c0d 76010000 		.4byte	.LASF128
 7843 0c11 01       		.byte	0x1
 7844 0c12 60       		.byte	0x60
 7845 0c13 36020000 		.4byte	0x236
 7846 0c17 01       		.byte	0x1
 7847 0c18 05       		.byte	0x5
 7848 0c19 03       		.byte	0x3
 7849 0c1a 00000000 		.4byte	GSMReadSMSState
 7850 0c1e 1B       		.uleb128 0x1b
 7851 0c1f 01050000 		.4byte	.LASF129
 7852 0c23 01       		.byte	0x1
 7853 0c24 61       		.byte	0x61
 7854 0c25 79080000 		.4byte	0x879
 7855 0c29 01       		.byte	0x1
 7856 0c2a 05       		.byte	0x5
 7857 0c2b 03       		.byte	0x3
 7858 0c2c 00000000 		.4byte	GSMReadSMScommand
 7859 0c30 1B       		.uleb128 0x1b
 7860 0c31 43080000 		.4byte	.LASF130
 7861 0c35 01       		.byte	0x1
 7862 0c36 62       		.byte	0x62
 7863 0c37 79080000 		.4byte	0x879
 7864 0c3b 01       		.byte	0x1
 7865 0c3c 05       		.byte	0x5
 7866 0c3d 03       		.byte	0x3
 7867 0c3e 00000000 		.4byte	GSMReadSMSrepIn
 7868 0c42 1B       		.uleb128 0x1b
 7869 0c43 90020000 		.4byte	.LASF131
 7870 0c47 01       		.byte	0x1
 7871 0c48 64       		.byte	0x64
 7872 0c49 29000000 		.4byte	0x29
 7873 0c4d 01       		.byte	0x1
 7874 0c4e 05       		.byte	0x5
 7875 0c4f 03       		.byte	0x3
 7876 0c50 00000000 		.4byte	prestadorSimSelect
 7877 0c54 1B       		.uleb128 0x1b
 7878 0c55 4B000000 		.4byte	.LASF132
 7879 0c59 01       		.byte	0x1
 7880 0c5a 65       		.byte	0x65
 7881 0c5b 29000000 		.4byte	0x29
 7882 0c5f 01       		.byte	0x1
 7883 0c60 05       		.byte	0x5
 7884 0c61 03       		.byte	0x3
 7885 0c62 00000000 		.4byte	flagCloseIP
 7886 0c66 1A       		.uleb128 0x1a
 7887 0c67 E8000000 		.4byte	.LASF133
 7888 0c6b 01       		.byte	0x1
 7889 0c6c 68       		.byte	0x68
 7890 0c6d 19090000 		.4byte	0x919
 7891 0c71 01       		.byte	0x1
 7892 0c72 01       		.byte	0x1
 7893 0c73 06       		.uleb128 0x6
 7894 0c74 36020000 		.4byte	0x236
 7895 0c78 830C0000 		.4byte	0xc83
 7896 0c7c 07       		.uleb128 0x7
 7897 0c7d 9B000000 		.4byte	0x9b
ARM GAS  /tmp/cc16P66I.s 			page 184


 7898 0c81 13       		.byte	0x13
 7899 0c82 00       		.byte	0
 7900 0c83 1A       		.uleb128 0x1a
 7901 0c84 A3060000 		.4byte	.LASF134
 7902 0c88 01       		.byte	0x1
 7903 0c89 69       		.byte	0x69
 7904 0c8a 730C0000 		.4byte	0xc73
 7905 0c8e 01       		.byte	0x1
 7906 0c8f 01       		.byte	0x1
 7907 0c90 1A       		.uleb128 0x1a
 7908 0c91 65080000 		.4byte	.LASF135
 7909 0c95 01       		.byte	0x1
 7910 0c96 6A       		.byte	0x6a
 7911 0c97 730C0000 		.4byte	0xc73
 7912 0c9b 01       		.byte	0x1
 7913 0c9c 01       		.byte	0x1
 7914 0c9d 1A       		.uleb128 0x1a
 7915 0c9e 5E020000 		.4byte	.LASF136
 7916 0ca2 01       		.byte	0x1
 7917 0ca3 6C       		.byte	0x6c
 7918 0ca4 19090000 		.4byte	0x919
 7919 0ca8 01       		.byte	0x1
 7920 0ca9 01       		.byte	0x1
 7921 0caa 1A       		.uleb128 0x1a
 7922 0cab B5060000 		.4byte	.LASF137
 7923 0caf 01       		.byte	0x1
 7924 0cb0 6D       		.byte	0x6d
 7925 0cb1 730C0000 		.4byte	0xc73
 7926 0cb5 01       		.byte	0x1
 7927 0cb6 01       		.byte	0x1
 7928 0cb7 1A       		.uleb128 0x1a
 7929 0cb8 75080000 		.4byte	.LASF138
 7930 0cbc 01       		.byte	0x1
 7931 0cbd 6E       		.byte	0x6e
 7932 0cbe 730C0000 		.4byte	0xc73
 7933 0cc2 01       		.byte	0x1
 7934 0cc3 01       		.byte	0x1
 7935 0cc4 1A       		.uleb128 0x1a
 7936 0cc5 A3020000 		.4byte	.LASF139
 7937 0cc9 01       		.byte	0x1
 7938 0cca 6F       		.byte	0x6f
 7939 0ccb 730C0000 		.4byte	0xc73
 7940 0ccf 01       		.byte	0x1
 7941 0cd0 01       		.byte	0x1
 7942 0cd1 1A       		.uleb128 0x1a
 7943 0cd2 0F060000 		.4byte	.LASF140
 7944 0cd6 01       		.byte	0x1
 7945 0cd7 70       		.byte	0x70
 7946 0cd8 730C0000 		.4byte	0xc73
 7947 0cdc 01       		.byte	0x1
 7948 0cdd 01       		.byte	0x1
 7949 0cde 1A       		.uleb128 0x1a
 7950 0cdf B3030000 		.4byte	.LASF141
 7951 0ce3 01       		.byte	0x1
 7952 0ce4 73       		.byte	0x73
 7953 0ce5 EB0C0000 		.4byte	0xceb
 7954 0ce9 01       		.byte	0x1
ARM GAS  /tmp/cc16P66I.s 			page 185


 7955 0cea 01       		.byte	0x1
 7956 0ceb 05       		.uleb128 0x5
 7957 0cec 29000000 		.4byte	0x29
 7958 0cf0 1A       		.uleb128 0x1a
 7959 0cf1 20060000 		.4byte	.LASF142
 7960 0cf5 01       		.byte	0x1
 7961 0cf6 74       		.byte	0x74
 7962 0cf7 EB0C0000 		.4byte	0xceb
 7963 0cfb 01       		.byte	0x1
 7964 0cfc 01       		.byte	0x1
 7965 0cfd 1A       		.uleb128 0x1a
 7966 0cfe 65010000 		.4byte	.LASF143
 7967 0d02 01       		.byte	0x1
 7968 0d03 75       		.byte	0x75
 7969 0d04 EB0C0000 		.4byte	0xceb
 7970 0d08 01       		.byte	0x1
 7971 0d09 01       		.byte	0x1
 7972 0d0a 1A       		.uleb128 0x1a
 7973 0d0b DF060000 		.4byte	.LASF144
 7974 0d0f 01       		.byte	0x1
 7975 0d10 76       		.byte	0x76
 7976 0d11 29000000 		.4byte	0x29
 7977 0d15 01       		.byte	0x1
 7978 0d16 01       		.byte	0x1
 7979 0d17 00       		.byte	0
 7980              		.section	.debug_abbrev,"",%progbits
 7981              	.Ldebug_abbrev0:
 7982 0000 01       		.uleb128 0x1
 7983 0001 11       		.uleb128 0x11
 7984 0002 01       		.byte	0x1
 7985 0003 25       		.uleb128 0x25
 7986 0004 0E       		.uleb128 0xe
 7987 0005 13       		.uleb128 0x13
 7988 0006 0B       		.uleb128 0xb
 7989 0007 03       		.uleb128 0x3
 7990 0008 0E       		.uleb128 0xe
 7991 0009 1B       		.uleb128 0x1b
 7992 000a 0E       		.uleb128 0xe
 7993 000b 55       		.uleb128 0x55
 7994 000c 06       		.uleb128 0x6
 7995 000d 11       		.uleb128 0x11
 7996 000e 01       		.uleb128 0x1
 7997 000f 52       		.uleb128 0x52
 7998 0010 01       		.uleb128 0x1
 7999 0011 10       		.uleb128 0x10
 8000 0012 06       		.uleb128 0x6
 8001 0013 00       		.byte	0
 8002 0014 00       		.byte	0
 8003 0015 02       		.uleb128 0x2
 8004 0016 24       		.uleb128 0x24
 8005 0017 00       		.byte	0
 8006 0018 0B       		.uleb128 0xb
 8007 0019 0B       		.uleb128 0xb
 8008 001a 3E       		.uleb128 0x3e
 8009 001b 0B       		.uleb128 0xb
 8010 001c 03       		.uleb128 0x3
 8011 001d 0E       		.uleb128 0xe
ARM GAS  /tmp/cc16P66I.s 			page 186


 8012 001e 00       		.byte	0
 8013 001f 00       		.byte	0
 8014 0020 03       		.uleb128 0x3
 8015 0021 16       		.uleb128 0x16
 8016 0022 00       		.byte	0
 8017 0023 03       		.uleb128 0x3
 8018 0024 0E       		.uleb128 0xe
 8019 0025 3A       		.uleb128 0x3a
 8020 0026 0B       		.uleb128 0xb
 8021 0027 3B       		.uleb128 0x3b
 8022 0028 0B       		.uleb128 0xb
 8023 0029 49       		.uleb128 0x49
 8024 002a 13       		.uleb128 0x13
 8025 002b 00       		.byte	0
 8026 002c 00       		.byte	0
 8027 002d 04       		.uleb128 0x4
 8028 002e 24       		.uleb128 0x24
 8029 002f 00       		.byte	0
 8030 0030 0B       		.uleb128 0xb
 8031 0031 0B       		.uleb128 0xb
 8032 0032 3E       		.uleb128 0x3e
 8033 0033 0B       		.uleb128 0xb
 8034 0034 03       		.uleb128 0x3
 8035 0035 08       		.uleb128 0x8
 8036 0036 00       		.byte	0
 8037 0037 00       		.byte	0
 8038 0038 05       		.uleb128 0x5
 8039 0039 35       		.uleb128 0x35
 8040 003a 00       		.byte	0
 8041 003b 49       		.uleb128 0x49
 8042 003c 13       		.uleb128 0x13
 8043 003d 00       		.byte	0
 8044 003e 00       		.byte	0
 8045 003f 06       		.uleb128 0x6
 8046 0040 01       		.uleb128 0x1
 8047 0041 01       		.byte	0x1
 8048 0042 49       		.uleb128 0x49
 8049 0043 13       		.uleb128 0x13
 8050 0044 01       		.uleb128 0x1
 8051 0045 13       		.uleb128 0x13
 8052 0046 00       		.byte	0
 8053 0047 00       		.byte	0
 8054 0048 07       		.uleb128 0x7
 8055 0049 21       		.uleb128 0x21
 8056 004a 00       		.byte	0
 8057 004b 49       		.uleb128 0x49
 8058 004c 13       		.uleb128 0x13
 8059 004d 2F       		.uleb128 0x2f
 8060 004e 0B       		.uleb128 0xb
 8061 004f 00       		.byte	0
 8062 0050 00       		.byte	0
 8063 0051 08       		.uleb128 0x8
 8064 0052 13       		.uleb128 0x13
 8065 0053 01       		.byte	0x1
 8066 0054 0B       		.uleb128 0xb
 8067 0055 0B       		.uleb128 0xb
 8068 0056 3A       		.uleb128 0x3a
ARM GAS  /tmp/cc16P66I.s 			page 187


 8069 0057 0B       		.uleb128 0xb
 8070 0058 3B       		.uleb128 0x3b
 8071 0059 05       		.uleb128 0x5
 8072 005a 01       		.uleb128 0x1
 8073 005b 13       		.uleb128 0x13
 8074 005c 00       		.byte	0
 8075 005d 00       		.byte	0
 8076 005e 09       		.uleb128 0x9
 8077 005f 0D       		.uleb128 0xd
 8078 0060 00       		.byte	0
 8079 0061 03       		.uleb128 0x3
 8080 0062 0E       		.uleb128 0xe
 8081 0063 3A       		.uleb128 0x3a
 8082 0064 0B       		.uleb128 0xb
 8083 0065 3B       		.uleb128 0x3b
 8084 0066 05       		.uleb128 0x5
 8085 0067 49       		.uleb128 0x49
 8086 0068 13       		.uleb128 0x13
 8087 0069 38       		.uleb128 0x38
 8088 006a 0A       		.uleb128 0xa
 8089 006b 00       		.byte	0
 8090 006c 00       		.byte	0
 8091 006d 0A       		.uleb128 0xa
 8092 006e 0D       		.uleb128 0xd
 8093 006f 00       		.byte	0
 8094 0070 03       		.uleb128 0x3
 8095 0071 08       		.uleb128 0x8
 8096 0072 3A       		.uleb128 0x3a
 8097 0073 0B       		.uleb128 0xb
 8098 0074 3B       		.uleb128 0x3b
 8099 0075 05       		.uleb128 0x5
 8100 0076 49       		.uleb128 0x49
 8101 0077 13       		.uleb128 0x13
 8102 0078 38       		.uleb128 0x38
 8103 0079 0A       		.uleb128 0xa
 8104 007a 00       		.byte	0
 8105 007b 00       		.byte	0
 8106 007c 0B       		.uleb128 0xb
 8107 007d 16       		.uleb128 0x16
 8108 007e 00       		.byte	0
 8109 007f 03       		.uleb128 0x3
 8110 0080 0E       		.uleb128 0xe
 8111 0081 3A       		.uleb128 0x3a
 8112 0082 0B       		.uleb128 0xb
 8113 0083 3B       		.uleb128 0x3b
 8114 0084 05       		.uleb128 0x5
 8115 0085 49       		.uleb128 0x49
 8116 0086 13       		.uleb128 0x13
 8117 0087 00       		.byte	0
 8118 0088 00       		.byte	0
 8119 0089 0C       		.uleb128 0xc
 8120 008a 13       		.uleb128 0x13
 8121 008b 01       		.byte	0x1
 8122 008c 03       		.uleb128 0x3
 8123 008d 0E       		.uleb128 0xe
 8124 008e 0B       		.uleb128 0xb
 8125 008f 0B       		.uleb128 0xb
ARM GAS  /tmp/cc16P66I.s 			page 188


 8126 0090 3A       		.uleb128 0x3a
 8127 0091 0B       		.uleb128 0xb
 8128 0092 3B       		.uleb128 0x3b
 8129 0093 0B       		.uleb128 0xb
 8130 0094 01       		.uleb128 0x1
 8131 0095 13       		.uleb128 0x13
 8132 0096 00       		.byte	0
 8133 0097 00       		.byte	0
 8134 0098 0D       		.uleb128 0xd
 8135 0099 0D       		.uleb128 0xd
 8136 009a 00       		.byte	0
 8137 009b 03       		.uleb128 0x3
 8138 009c 0E       		.uleb128 0xe
 8139 009d 3A       		.uleb128 0x3a
 8140 009e 0B       		.uleb128 0xb
 8141 009f 3B       		.uleb128 0x3b
 8142 00a0 0B       		.uleb128 0xb
 8143 00a1 49       		.uleb128 0x49
 8144 00a2 13       		.uleb128 0x13
 8145 00a3 38       		.uleb128 0x38
 8146 00a4 0A       		.uleb128 0xa
 8147 00a5 00       		.byte	0
 8148 00a6 00       		.byte	0
 8149 00a7 0E       		.uleb128 0xe
 8150 00a8 0F       		.uleb128 0xf
 8151 00a9 00       		.byte	0
 8152 00aa 0B       		.uleb128 0xb
 8153 00ab 0B       		.uleb128 0xb
 8154 00ac 49       		.uleb128 0x49
 8155 00ad 13       		.uleb128 0x13
 8156 00ae 00       		.byte	0
 8157 00af 00       		.byte	0
 8158 00b0 0F       		.uleb128 0xf
 8159 00b1 2E       		.uleb128 0x2e
 8160 00b2 00       		.byte	0
 8161 00b3 3F       		.uleb128 0x3f
 8162 00b4 0C       		.uleb128 0xc
 8163 00b5 03       		.uleb128 0x3
 8164 00b6 0E       		.uleb128 0xe
 8165 00b7 3A       		.uleb128 0x3a
 8166 00b8 0B       		.uleb128 0xb
 8167 00b9 3B       		.uleb128 0x3b
 8168 00ba 0B       		.uleb128 0xb
 8169 00bb 27       		.uleb128 0x27
 8170 00bc 0C       		.uleb128 0xc
 8171 00bd 11       		.uleb128 0x11
 8172 00be 01       		.uleb128 0x1
 8173 00bf 12       		.uleb128 0x12
 8174 00c0 01       		.uleb128 0x1
 8175 00c1 40       		.uleb128 0x40
 8176 00c2 06       		.uleb128 0x6
 8177 00c3 9642     		.uleb128 0x2116
 8178 00c5 0C       		.uleb128 0xc
 8179 00c6 00       		.byte	0
 8180 00c7 00       		.byte	0
 8181 00c8 10       		.uleb128 0x10
 8182 00c9 2E       		.uleb128 0x2e
ARM GAS  /tmp/cc16P66I.s 			page 189


 8183 00ca 00       		.byte	0
 8184 00cb 3F       		.uleb128 0x3f
 8185 00cc 0C       		.uleb128 0xc
 8186 00cd 03       		.uleb128 0x3
 8187 00ce 0E       		.uleb128 0xe
 8188 00cf 3A       		.uleb128 0x3a
 8189 00d0 0B       		.uleb128 0xb
 8190 00d1 3B       		.uleb128 0x3b
 8191 00d2 0B       		.uleb128 0xb
 8192 00d3 27       		.uleb128 0x27
 8193 00d4 0C       		.uleb128 0xc
 8194 00d5 49       		.uleb128 0x49
 8195 00d6 13       		.uleb128 0x13
 8196 00d7 11       		.uleb128 0x11
 8197 00d8 01       		.uleb128 0x1
 8198 00d9 12       		.uleb128 0x12
 8199 00da 01       		.uleb128 0x1
 8200 00db 40       		.uleb128 0x40
 8201 00dc 0A       		.uleb128 0xa
 8202 00dd 9742     		.uleb128 0x2117
 8203 00df 0C       		.uleb128 0xc
 8204 00e0 00       		.byte	0
 8205 00e1 00       		.byte	0
 8206 00e2 11       		.uleb128 0x11
 8207 00e3 2E       		.uleb128 0x2e
 8208 00e4 00       		.byte	0
 8209 00e5 3F       		.uleb128 0x3f
 8210 00e6 0C       		.uleb128 0xc
 8211 00e7 03       		.uleb128 0x3
 8212 00e8 0E       		.uleb128 0xe
 8213 00e9 3A       		.uleb128 0x3a
 8214 00ea 0B       		.uleb128 0xb
 8215 00eb 3B       		.uleb128 0x3b
 8216 00ec 05       		.uleb128 0x5
 8217 00ed 27       		.uleb128 0x27
 8218 00ee 0C       		.uleb128 0xc
 8219 00ef 11       		.uleb128 0x11
 8220 00f0 01       		.uleb128 0x1
 8221 00f1 12       		.uleb128 0x12
 8222 00f2 01       		.uleb128 0x1
 8223 00f3 40       		.uleb128 0x40
 8224 00f4 0A       		.uleb128 0xa
 8225 00f5 9742     		.uleb128 0x2117
 8226 00f7 0C       		.uleb128 0xc
 8227 00f8 00       		.byte	0
 8228 00f9 00       		.byte	0
 8229 00fa 12       		.uleb128 0x12
 8230 00fb 2E       		.uleb128 0x2e
 8231 00fc 01       		.byte	0x1
 8232 00fd 3F       		.uleb128 0x3f
 8233 00fe 0C       		.uleb128 0xc
 8234 00ff 03       		.uleb128 0x3
 8235 0100 0E       		.uleb128 0xe
 8236 0101 3A       		.uleb128 0x3a
 8237 0102 0B       		.uleb128 0xb
 8238 0103 3B       		.uleb128 0x3b
 8239 0104 05       		.uleb128 0x5
ARM GAS  /tmp/cc16P66I.s 			page 190


 8240 0105 27       		.uleb128 0x27
 8241 0106 0C       		.uleb128 0xc
 8242 0107 49       		.uleb128 0x49
 8243 0108 13       		.uleb128 0x13
 8244 0109 11       		.uleb128 0x11
 8245 010a 01       		.uleb128 0x1
 8246 010b 12       		.uleb128 0x12
 8247 010c 01       		.uleb128 0x1
 8248 010d 40       		.uleb128 0x40
 8249 010e 06       		.uleb128 0x6
 8250 010f 9742     		.uleb128 0x2117
 8251 0111 0C       		.uleb128 0xc
 8252 0112 01       		.uleb128 0x1
 8253 0113 13       		.uleb128 0x13
 8254 0114 00       		.byte	0
 8255 0115 00       		.byte	0
 8256 0116 13       		.uleb128 0x13
 8257 0117 34       		.uleb128 0x34
 8258 0118 00       		.byte	0
 8259 0119 03       		.uleb128 0x3
 8260 011a 0E       		.uleb128 0xe
 8261 011b 3A       		.uleb128 0x3a
 8262 011c 0B       		.uleb128 0xb
 8263 011d 3B       		.uleb128 0x3b
 8264 011e 05       		.uleb128 0x5
 8265 011f 49       		.uleb128 0x49
 8266 0120 13       		.uleb128 0x13
 8267 0121 02       		.uleb128 0x2
 8268 0122 0A       		.uleb128 0xa
 8269 0123 00       		.byte	0
 8270 0124 00       		.byte	0
 8271 0125 14       		.uleb128 0x14
 8272 0126 05       		.uleb128 0x5
 8273 0127 00       		.byte	0
 8274 0128 03       		.uleb128 0x3
 8275 0129 08       		.uleb128 0x8
 8276 012a 3A       		.uleb128 0x3a
 8277 012b 0B       		.uleb128 0xb
 8278 012c 3B       		.uleb128 0x3b
 8279 012d 05       		.uleb128 0x5
 8280 012e 49       		.uleb128 0x49
 8281 012f 13       		.uleb128 0x13
 8282 0130 02       		.uleb128 0x2
 8283 0131 0A       		.uleb128 0xa
 8284 0132 00       		.byte	0
 8285 0133 00       		.byte	0
 8286 0134 15       		.uleb128 0x15
 8287 0135 2E       		.uleb128 0x2e
 8288 0136 01       		.byte	0x1
 8289 0137 3F       		.uleb128 0x3f
 8290 0138 0C       		.uleb128 0xc
 8291 0139 03       		.uleb128 0x3
 8292 013a 0E       		.uleb128 0xe
 8293 013b 3A       		.uleb128 0x3a
 8294 013c 0B       		.uleb128 0xb
 8295 013d 3B       		.uleb128 0x3b
 8296 013e 05       		.uleb128 0x5
ARM GAS  /tmp/cc16P66I.s 			page 191


 8297 013f 27       		.uleb128 0x27
 8298 0140 0C       		.uleb128 0xc
 8299 0141 11       		.uleb128 0x11
 8300 0142 01       		.uleb128 0x1
 8301 0143 12       		.uleb128 0x12
 8302 0144 01       		.uleb128 0x1
 8303 0145 40       		.uleb128 0x40
 8304 0146 06       		.uleb128 0x6
 8305 0147 9642     		.uleb128 0x2116
 8306 0149 0C       		.uleb128 0xc
 8307 014a 01       		.uleb128 0x1
 8308 014b 13       		.uleb128 0x13
 8309 014c 00       		.byte	0
 8310 014d 00       		.byte	0
 8311 014e 16       		.uleb128 0x16
 8312 014f 05       		.uleb128 0x5
 8313 0150 00       		.byte	0
 8314 0151 03       		.uleb128 0x3
 8315 0152 0E       		.uleb128 0xe
 8316 0153 3A       		.uleb128 0x3a
 8317 0154 0B       		.uleb128 0xb
 8318 0155 3B       		.uleb128 0x3b
 8319 0156 05       		.uleb128 0x5
 8320 0157 49       		.uleb128 0x49
 8321 0158 13       		.uleb128 0x13
 8322 0159 02       		.uleb128 0x2
 8323 015a 0A       		.uleb128 0xa
 8324 015b 00       		.byte	0
 8325 015c 00       		.byte	0
 8326 015d 17       		.uleb128 0x17
 8327 015e 34       		.uleb128 0x34
 8328 015f 00       		.byte	0
 8329 0160 03       		.uleb128 0x3
 8330 0161 08       		.uleb128 0x8
 8331 0162 3A       		.uleb128 0x3a
 8332 0163 0B       		.uleb128 0xb
 8333 0164 3B       		.uleb128 0x3b
 8334 0165 05       		.uleb128 0x5
 8335 0166 49       		.uleb128 0x49
 8336 0167 13       		.uleb128 0x13
 8337 0168 02       		.uleb128 0x2
 8338 0169 0A       		.uleb128 0xa
 8339 016a 00       		.byte	0
 8340 016b 00       		.byte	0
 8341 016c 18       		.uleb128 0x18
 8342 016d 2E       		.uleb128 0x2e
 8343 016e 01       		.byte	0x1
 8344 016f 3F       		.uleb128 0x3f
 8345 0170 0C       		.uleb128 0xc
 8346 0171 03       		.uleb128 0x3
 8347 0172 0E       		.uleb128 0xe
 8348 0173 3A       		.uleb128 0x3a
 8349 0174 0B       		.uleb128 0xb
 8350 0175 3B       		.uleb128 0x3b
 8351 0176 05       		.uleb128 0x5
 8352 0177 27       		.uleb128 0x27
 8353 0178 0C       		.uleb128 0xc
ARM GAS  /tmp/cc16P66I.s 			page 192


 8354 0179 49       		.uleb128 0x49
 8355 017a 13       		.uleb128 0x13
 8356 017b 11       		.uleb128 0x11
 8357 017c 01       		.uleb128 0x1
 8358 017d 12       		.uleb128 0x12
 8359 017e 01       		.uleb128 0x1
 8360 017f 40       		.uleb128 0x40
 8361 0180 06       		.uleb128 0x6
 8362 0181 9642     		.uleb128 0x2116
 8363 0183 0C       		.uleb128 0xc
 8364 0184 01       		.uleb128 0x1
 8365 0185 13       		.uleb128 0x13
 8366 0186 00       		.byte	0
 8367 0187 00       		.byte	0
 8368 0188 19       		.uleb128 0x19
 8369 0189 2E       		.uleb128 0x2e
 8370 018a 00       		.byte	0
 8371 018b 3F       		.uleb128 0x3f
 8372 018c 0C       		.uleb128 0xc
 8373 018d 03       		.uleb128 0x3
 8374 018e 0E       		.uleb128 0xe
 8375 018f 3A       		.uleb128 0x3a
 8376 0190 0B       		.uleb128 0xb
 8377 0191 3B       		.uleb128 0x3b
 8378 0192 05       		.uleb128 0x5
 8379 0193 27       		.uleb128 0x27
 8380 0194 0C       		.uleb128 0xc
 8381 0195 11       		.uleb128 0x11
 8382 0196 01       		.uleb128 0x1
 8383 0197 12       		.uleb128 0x12
 8384 0198 01       		.uleb128 0x1
 8385 0199 40       		.uleb128 0x40
 8386 019a 06       		.uleb128 0x6
 8387 019b 9642     		.uleb128 0x2116
 8388 019d 0C       		.uleb128 0xc
 8389 019e 00       		.byte	0
 8390 019f 00       		.byte	0
 8391 01a0 1A       		.uleb128 0x1a
 8392 01a1 34       		.uleb128 0x34
 8393 01a2 00       		.byte	0
 8394 01a3 03       		.uleb128 0x3
 8395 01a4 0E       		.uleb128 0xe
 8396 01a5 3A       		.uleb128 0x3a
 8397 01a6 0B       		.uleb128 0xb
 8398 01a7 3B       		.uleb128 0x3b
 8399 01a8 0B       		.uleb128 0xb
 8400 01a9 49       		.uleb128 0x49
 8401 01aa 13       		.uleb128 0x13
 8402 01ab 3F       		.uleb128 0x3f
 8403 01ac 0C       		.uleb128 0xc
 8404 01ad 3C       		.uleb128 0x3c
 8405 01ae 0C       		.uleb128 0xc
 8406 01af 00       		.byte	0
 8407 01b0 00       		.byte	0
 8408 01b1 1B       		.uleb128 0x1b
 8409 01b2 34       		.uleb128 0x34
 8410 01b3 00       		.byte	0
ARM GAS  /tmp/cc16P66I.s 			page 193


 8411 01b4 03       		.uleb128 0x3
 8412 01b5 0E       		.uleb128 0xe
 8413 01b6 3A       		.uleb128 0x3a
 8414 01b7 0B       		.uleb128 0xb
 8415 01b8 3B       		.uleb128 0x3b
 8416 01b9 0B       		.uleb128 0xb
 8417 01ba 49       		.uleb128 0x49
 8418 01bb 13       		.uleb128 0x13
 8419 01bc 3F       		.uleb128 0x3f
 8420 01bd 0C       		.uleb128 0xc
 8421 01be 02       		.uleb128 0x2
 8422 01bf 0A       		.uleb128 0xa
 8423 01c0 00       		.byte	0
 8424 01c1 00       		.byte	0
 8425 01c2 1C       		.uleb128 0x1c
 8426 01c3 26       		.uleb128 0x26
 8427 01c4 00       		.byte	0
 8428 01c5 49       		.uleb128 0x49
 8429 01c6 13       		.uleb128 0x13
 8430 01c7 00       		.byte	0
 8431 01c8 00       		.byte	0
 8432 01c9 00       		.byte	0
 8433              		.section	.debug_loc,"",%progbits
 8434              	.Ldebug_loc0:
 8435              	.LLST0:
 8436 0000 00000000 		.4byte	.LFB20
 8437 0004 02000000 		.4byte	.LCFI0
 8438 0008 0200     		.2byte	0x2
 8439 000a 7D       		.byte	0x7d
 8440 000b 00       		.sleb128 0
 8441 000c 02000000 		.4byte	.LCFI0
 8442 0010 5C000000 		.4byte	.LFE20
 8443 0014 0200     		.2byte	0x2
 8444 0016 7D       		.byte	0x7d
 8445 0017 08       		.sleb128 8
 8446 0018 00000000 		.4byte	0
 8447 001c 00000000 		.4byte	0
 8448              	.LLST1:
 8449 0020 00000000 		.4byte	.LFB23
 8450 0024 02000000 		.4byte	.LCFI1
 8451 0028 0200     		.2byte	0x2
 8452 002a 7D       		.byte	0x7d
 8453 002b 00       		.sleb128 0
 8454 002c 02000000 		.4byte	.LCFI1
 8455 0030 BC000000 		.4byte	.LFE23
 8456 0034 0200     		.2byte	0x2
 8457 0036 7D       		.byte	0x7d
 8458 0037 08       		.sleb128 8
 8459 0038 00000000 		.4byte	0
 8460 003c 00000000 		.4byte	0
 8461              	.LLST2:
 8462 0040 00000000 		.4byte	.LFB24
 8463 0044 02000000 		.4byte	.LCFI2
 8464 0048 0200     		.2byte	0x2
 8465 004a 7D       		.byte	0x7d
 8466 004b 00       		.sleb128 0
 8467 004c 02000000 		.4byte	.LCFI2
ARM GAS  /tmp/cc16P66I.s 			page 194


 8468 0050 70000000 		.4byte	.LFE24
 8469 0054 0200     		.2byte	0x2
 8470 0056 7D       		.byte	0x7d
 8471 0057 10       		.sleb128 16
 8472 0058 00000000 		.4byte	0
 8473 005c 00000000 		.4byte	0
 8474              	.LLST3:
 8475 0060 00000000 		.4byte	.LFB25
 8476 0064 02000000 		.4byte	.LCFI3
 8477 0068 0200     		.2byte	0x2
 8478 006a 7D       		.byte	0x7d
 8479 006b 00       		.sleb128 0
 8480 006c 02000000 		.4byte	.LCFI3
 8481 0070 04000000 		.4byte	.LCFI4
 8482 0074 0200     		.2byte	0x2
 8483 0076 7D       		.byte	0x7d
 8484 0077 08       		.sleb128 8
 8485 0078 04000000 		.4byte	.LCFI4
 8486 007c CC030000 		.4byte	.LFE25
 8487 0080 0200     		.2byte	0x2
 8488 0082 7D       		.byte	0x7d
 8489 0083 20       		.sleb128 32
 8490 0084 00000000 		.4byte	0
 8491 0088 00000000 		.4byte	0
 8492              	.LLST4:
 8493 008c 00000000 		.4byte	.LFB26
 8494 0090 02000000 		.4byte	.LCFI5
 8495 0094 0200     		.2byte	0x2
 8496 0096 7D       		.byte	0x7d
 8497 0097 00       		.sleb128 0
 8498 0098 02000000 		.4byte	.LCFI5
 8499 009c 04000000 		.4byte	.LCFI6
 8500 00a0 0200     		.2byte	0x2
 8501 00a2 7D       		.byte	0x7d
 8502 00a3 08       		.sleb128 8
 8503 00a4 04000000 		.4byte	.LCFI6
 8504 00a8 70000000 		.4byte	.LFE26
 8505 00ac 0200     		.2byte	0x2
 8506 00ae 7D       		.byte	0x7d
 8507 00af 10       		.sleb128 16
 8508 00b0 00000000 		.4byte	0
 8509 00b4 00000000 		.4byte	0
 8510              	.LLST5:
 8511 00b8 00000000 		.4byte	.LFB27
 8512 00bc 02000000 		.4byte	.LCFI7
 8513 00c0 0200     		.2byte	0x2
 8514 00c2 7D       		.byte	0x7d
 8515 00c3 00       		.sleb128 0
 8516 00c4 02000000 		.4byte	.LCFI7
 8517 00c8 C4020000 		.4byte	.LFE27
 8518 00cc 0200     		.2byte	0x2
 8519 00ce 7D       		.byte	0x7d
 8520 00cf 08       		.sleb128 8
 8521 00d0 00000000 		.4byte	0
 8522 00d4 00000000 		.4byte	0
 8523              	.LLST6:
 8524 00d8 00000000 		.4byte	.LFB28
ARM GAS  /tmp/cc16P66I.s 			page 195


 8525 00dc 02000000 		.4byte	.LCFI8
 8526 00e0 0200     		.2byte	0x2
 8527 00e2 7D       		.byte	0x7d
 8528 00e3 00       		.sleb128 0
 8529 00e4 02000000 		.4byte	.LCFI8
 8530 00e8 04000000 		.4byte	.LCFI9
 8531 00ec 0200     		.2byte	0x2
 8532 00ee 7D       		.byte	0x7d
 8533 00ef 04       		.sleb128 4
 8534 00f0 04000000 		.4byte	.LCFI9
 8535 00f4 0C010000 		.4byte	.LFE28
 8536 00f8 0200     		.2byte	0x2
 8537 00fa 7D       		.byte	0x7d
 8538 00fb 18       		.sleb128 24
 8539 00fc 00000000 		.4byte	0
 8540 0100 00000000 		.4byte	0
 8541              	.LLST7:
 8542 0104 00000000 		.4byte	.LFB29
 8543 0108 02000000 		.4byte	.LCFI10
 8544 010c 0200     		.2byte	0x2
 8545 010e 7D       		.byte	0x7d
 8546 010f 00       		.sleb128 0
 8547 0110 02000000 		.4byte	.LCFI10
 8548 0114 04000000 		.4byte	.LCFI11
 8549 0118 0200     		.2byte	0x2
 8550 011a 7D       		.byte	0x7d
 8551 011b 08       		.sleb128 8
 8552 011c 04000000 		.4byte	.LCFI11
 8553 0120 F4020000 		.4byte	.LFE29
 8554 0124 0200     		.2byte	0x2
 8555 0126 7D       		.byte	0x7d
 8556 0127 18       		.sleb128 24
 8557 0128 00000000 		.4byte	0
 8558 012c 00000000 		.4byte	0
 8559              	.LLST8:
 8560 0130 00000000 		.4byte	.LFB30
 8561 0134 02000000 		.4byte	.LCFI12
 8562 0138 0200     		.2byte	0x2
 8563 013a 7D       		.byte	0x7d
 8564 013b 00       		.sleb128 0
 8565 013c 02000000 		.4byte	.LCFI12
 8566 0140 04000000 		.4byte	.LCFI13
 8567 0144 0200     		.2byte	0x2
 8568 0146 7D       		.byte	0x7d
 8569 0147 08       		.sleb128 8
 8570 0148 04000000 		.4byte	.LCFI13
 8571 014c 8C010000 		.4byte	.LFE30
 8572 0150 0200     		.2byte	0x2
 8573 0152 7D       		.byte	0x7d
 8574 0153 20       		.sleb128 32
 8575 0154 00000000 		.4byte	0
 8576 0158 00000000 		.4byte	0
 8577              	.LLST9:
 8578 015c 00000000 		.4byte	.LFB31
 8579 0160 02000000 		.4byte	.LCFI14
 8580 0164 0200     		.2byte	0x2
 8581 0166 7D       		.byte	0x7d
ARM GAS  /tmp/cc16P66I.s 			page 196


 8582 0167 00       		.sleb128 0
 8583 0168 02000000 		.4byte	.LCFI14
 8584 016c 04000000 		.4byte	.LCFI15
 8585 0170 0200     		.2byte	0x2
 8586 0172 7D       		.byte	0x7d
 8587 0173 08       		.sleb128 8
 8588 0174 04000000 		.4byte	.LCFI15
 8589 0178 80080000 		.4byte	.LFE31
 8590 017c 0200     		.2byte	0x2
 8591 017e 7D       		.byte	0x7d
 8592 017f 20       		.sleb128 32
 8593 0180 00000000 		.4byte	0
 8594 0184 00000000 		.4byte	0
 8595              	.LLST10:
 8596 0188 00000000 		.4byte	.LFB32
 8597 018c 02000000 		.4byte	.LCFI16
 8598 0190 0200     		.2byte	0x2
 8599 0192 7D       		.byte	0x7d
 8600 0193 00       		.sleb128 0
 8601 0194 02000000 		.4byte	.LCFI16
 8602 0198 04000000 		.4byte	.LCFI17
 8603 019c 0200     		.2byte	0x2
 8604 019e 7D       		.byte	0x7d
 8605 019f 08       		.sleb128 8
 8606 01a0 04000000 		.4byte	.LCFI17
 8607 01a4 84000000 		.4byte	.LFE32
 8608 01a8 0200     		.2byte	0x2
 8609 01aa 7D       		.byte	0x7d
 8610 01ab 18       		.sleb128 24
 8611 01ac 00000000 		.4byte	0
 8612 01b0 00000000 		.4byte	0
 8613              	.LLST11:
 8614 01b4 00000000 		.4byte	.LFB33
 8615 01b8 02000000 		.4byte	.LCFI18
 8616 01bc 0200     		.2byte	0x2
 8617 01be 7D       		.byte	0x7d
 8618 01bf 00       		.sleb128 0
 8619 01c0 02000000 		.4byte	.LCFI18
 8620 01c4 04000000 		.4byte	.LCFI19
 8621 01c8 0200     		.2byte	0x2
 8622 01ca 7D       		.byte	0x7d
 8623 01cb 08       		.sleb128 8
 8624 01cc 04000000 		.4byte	.LCFI19
 8625 01d0 2C010000 		.4byte	.LFE33
 8626 01d4 0200     		.2byte	0x2
 8627 01d6 7D       		.byte	0x7d
 8628 01d7 18       		.sleb128 24
 8629 01d8 00000000 		.4byte	0
 8630 01dc 00000000 		.4byte	0
 8631              	.LLST12:
 8632 01e0 00000000 		.4byte	.LFB35
 8633 01e4 02000000 		.4byte	.LCFI20
 8634 01e8 0200     		.2byte	0x2
 8635 01ea 7D       		.byte	0x7d
 8636 01eb 00       		.sleb128 0
 8637 01ec 02000000 		.4byte	.LCFI20
 8638 01f0 04000000 		.4byte	.LCFI21
ARM GAS  /tmp/cc16P66I.s 			page 197


 8639 01f4 0200     		.2byte	0x2
 8640 01f6 7D       		.byte	0x7d
 8641 01f7 08       		.sleb128 8
 8642 01f8 04000000 		.4byte	.LCFI21
 8643 01fc 74020000 		.4byte	.LFE35
 8644 0200 0200     		.2byte	0x2
 8645 0202 7D       		.byte	0x7d
 8646 0203 18       		.sleb128 24
 8647 0204 00000000 		.4byte	0
 8648 0208 00000000 		.4byte	0
 8649              	.LLST13:
 8650 020c 00000000 		.4byte	.LFB36
 8651 0210 02000000 		.4byte	.LCFI22
 8652 0214 0200     		.2byte	0x2
 8653 0216 7D       		.byte	0x7d
 8654 0217 00       		.sleb128 0
 8655 0218 02000000 		.4byte	.LCFI22
 8656 021c 04000000 		.4byte	.LCFI23
 8657 0220 0200     		.2byte	0x2
 8658 0222 7D       		.byte	0x7d
 8659 0223 08       		.sleb128 8
 8660 0224 04000000 		.4byte	.LCFI23
 8661 0228 E8060000 		.4byte	.LFE36
 8662 022c 0200     		.2byte	0x2
 8663 022e 7D       		.byte	0x7d
 8664 022f 20       		.sleb128 32
 8665 0230 00000000 		.4byte	0
 8666 0234 00000000 		.4byte	0
 8667              		.section	.debug_aranges,"",%progbits
 8668 0000 9C000000 		.4byte	0x9c
 8669 0004 0200     		.2byte	0x2
 8670 0006 00000000 		.4byte	.Ldebug_info0
 8671 000a 04       		.byte	0x4
 8672 000b 00       		.byte	0
 8673 000c 0000     		.2byte	0
 8674 000e 0000     		.2byte	0
 8675 0010 00000000 		.4byte	.LFB20
 8676 0014 5C000000 		.4byte	.LFE20-.LFB20
 8677 0018 00000000 		.4byte	.LFB21
 8678 001c FC000000 		.4byte	.LFE21-.LFB21
 8679 0020 00000000 		.4byte	.LFB22
 8680 0024 10000000 		.4byte	.LFE22-.LFB22
 8681 0028 00000000 		.4byte	.LFB23
 8682 002c BC000000 		.4byte	.LFE23-.LFB23
 8683 0030 00000000 		.4byte	.LFB24
 8684 0034 70000000 		.4byte	.LFE24-.LFB24
 8685 0038 00000000 		.4byte	.LFB25
 8686 003c CC030000 		.4byte	.LFE25-.LFB25
 8687 0040 00000000 		.4byte	.LFB26
 8688 0044 70000000 		.4byte	.LFE26-.LFB26
 8689 0048 00000000 		.4byte	.LFB27
 8690 004c C4020000 		.4byte	.LFE27-.LFB27
 8691 0050 00000000 		.4byte	.LFB28
 8692 0054 0C010000 		.4byte	.LFE28-.LFB28
 8693 0058 00000000 		.4byte	.LFB29
 8694 005c F4020000 		.4byte	.LFE29-.LFB29
 8695 0060 00000000 		.4byte	.LFB30
ARM GAS  /tmp/cc16P66I.s 			page 198


 8696 0064 8C010000 		.4byte	.LFE30-.LFB30
 8697 0068 00000000 		.4byte	.LFB31
 8698 006c 80080000 		.4byte	.LFE31-.LFB31
 8699 0070 00000000 		.4byte	.LFB32
 8700 0074 84000000 		.4byte	.LFE32-.LFB32
 8701 0078 00000000 		.4byte	.LFB33
 8702 007c 2C010000 		.4byte	.LFE33-.LFB33
 8703 0080 00000000 		.4byte	.LFB34
 8704 0084 F8000000 		.4byte	.LFE34-.LFB34
 8705 0088 00000000 		.4byte	.LFB35
 8706 008c 74020000 		.4byte	.LFE35-.LFB35
 8707 0090 00000000 		.4byte	.LFB36
 8708 0094 E8060000 		.4byte	.LFE36-.LFB36
 8709 0098 00000000 		.4byte	0
 8710 009c 00000000 		.4byte	0
 8711              		.section	.debug_ranges,"",%progbits
 8712              	.Ldebug_ranges0:
 8713 0000 00000000 		.4byte	.LFB20
 8714 0004 5C000000 		.4byte	.LFE20
 8715 0008 00000000 		.4byte	.LFB21
 8716 000c FC000000 		.4byte	.LFE21
 8717 0010 00000000 		.4byte	.LFB22
 8718 0014 10000000 		.4byte	.LFE22
 8719 0018 00000000 		.4byte	.LFB23
 8720 001c BC000000 		.4byte	.LFE23
 8721 0020 00000000 		.4byte	.LFB24
 8722 0024 70000000 		.4byte	.LFE24
 8723 0028 00000000 		.4byte	.LFB25
 8724 002c CC030000 		.4byte	.LFE25
 8725 0030 00000000 		.4byte	.LFB26
 8726 0034 70000000 		.4byte	.LFE26
 8727 0038 00000000 		.4byte	.LFB27
 8728 003c C4020000 		.4byte	.LFE27
 8729 0040 00000000 		.4byte	.LFB28
 8730 0044 0C010000 		.4byte	.LFE28
 8731 0048 00000000 		.4byte	.LFB29
 8732 004c F4020000 		.4byte	.LFE29
 8733 0050 00000000 		.4byte	.LFB30
 8734 0054 8C010000 		.4byte	.LFE30
 8735 0058 00000000 		.4byte	.LFB31
 8736 005c 80080000 		.4byte	.LFE31
 8737 0060 00000000 		.4byte	.LFB32
 8738 0064 84000000 		.4byte	.LFE32
 8739 0068 00000000 		.4byte	.LFB33
 8740 006c 2C010000 		.4byte	.LFE33
 8741 0070 00000000 		.4byte	.LFB34
 8742 0074 F8000000 		.4byte	.LFE34
 8743 0078 00000000 		.4byte	.LFB35
 8744 007c 74020000 		.4byte	.LFE35
 8745 0080 00000000 		.4byte	.LFB36
 8746 0084 E8060000 		.4byte	.LFE36
 8747 0088 00000000 		.4byte	0
 8748 008c 00000000 		.4byte	0
 8749              		.section	.debug_line,"",%progbits
 8750              	.Ldebug_line0:
 8751 0000 84060000 		.section	.debug_str,"MS",%progbits,1
 8751      02000901 
ARM GAS  /tmp/cc16P66I.s 			page 199


 8751      00000201 
 8751      FB0E0D00 
 8751      01010101 
 8752              	.LASF31:
 8753 0000 74696D65 		.ascii	"timer_reportar\000"
 8753      725F7265 
 8753      706F7274 
 8753      617200
 8754              	.LASF18:
 8755 000f 50555044 		.ascii	"PUPDR\000"
 8755      5200
 8756              	.LASF94:
 8757 0015 47534D43 		.ascii	"GSMConfigTimeOut\000"
 8757      6F6E6669 
 8757      6754696D 
 8757      654F7574 
 8757      00
 8758              	.LASF22:
 8759 0026 4C434B52 		.ascii	"LCKR\000"
 8759      00
 8760              	.LASF91:
 8761 002b 47534D53 		.ascii	"GSMSendSMSTimeOut\000"
 8761      656E6453 
 8761      4D535469 
 8761      6D654F75 
 8761      7400
 8762              	.LASF104:
 8763 003d 47534D53 		.ascii	"GSMSendIPFlag\000"
 8763      656E6449 
 8763      50466C61 
 8763      6700
 8764              	.LASF132:
 8765 004b 666C6167 		.ascii	"flagCloseIP\000"
 8765      436C6F73 
 8765      65495000 
 8766              	.LASF80:
 8767 0057 73656E64 		.ascii	"send_energy\000"
 8767      5F656E65 
 8767      72677900 
 8768              	.LASF95:
 8769 0063 47534D43 		.ascii	"GSMConfigTime\000"
 8769      6F6E6669 
 8769      6754696D 
 8769      6500
 8770              	.LASF15:
 8771 0071 4F545950 		.ascii	"OTYPER\000"
 8771      455200
 8772              	.LASF119:
 8773 0078 47534D5F 		.ascii	"GSM_IPCONNCLOSE\000"
 8773      4950434F 
 8773      4E4E434C 
 8773      4F534500 
 8774              	.LASF59:
 8775 0088 70747252 		.ascii	"ptrRta\000"
 8775      746100
 8776              	.LASF70:
 8777 008f 70747250 		.ascii	"ptrPORTremote\000"
ARM GAS  /tmp/cc16P66I.s 			page 200


 8777      4F525472 
 8777      656D6F74 
 8777      6500
 8778              	.LASF41:
 8779 009d 7047534D 		.ascii	"pGSMHWstatus\000"
 8779      48577374 
 8779      61747573 
 8779      00
 8780              	.LASF14:
 8781 00aa 4D4F4445 		.ascii	"MODER\000"
 8781      5200
 8782              	.LASF9:
 8783 00b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 8783      206C6F6E 
 8783      6720756E 
 8783      7369676E 
 8783      65642069 
 8784              	.LASF117:
 8785 00c7 47534D5F 		.ascii	"GSM_IPCONNOK\000"
 8785      4950434F 
 8785      4E4E4F4B 
 8785      00
 8786              	.LASF148:
 8787 00d4 70617261 		.ascii	"parameters\000"
 8787      6D657465 
 8787      727300
 8788              	.LASF102:
 8789 00df 47505253 		.ascii	"GPRSrssi\000"
 8789      72737369 
 8789      00
 8790              	.LASF133:
 8791 00e8 53494D39 		.ascii	"SIM900APNSIM1\000"
 8791      30304150 
 8791      4E53494D 
 8791      3100
 8792              	.LASF51:
 8793 00f6 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor2\000"
 8793      46494755 
 8793      52414349 
 8793      4F4E6770 
 8793      72735072 
 8794              	.LASF8:
 8795 0113 6C6F6E67 		.ascii	"long long int\000"
 8795      206C6F6E 
 8795      6720696E 
 8795      7400
 8796              	.LASF58:
 8797 0121 74696D65 		.ascii	"timeOut\000"
 8797      4F757400 
 8798              	.LASF66:
 8799 0129 70747255 		.ascii	"ptrUSER\000"
 8799      53455200 
 8800              	.LASF146:
 8801 0131 7372632F 		.ascii	"src/sim900_800.c\000"
 8801      73696D39 
 8801      30305F38 
 8801      30302E63 
ARM GAS  /tmp/cc16P66I.s 			page 201


 8801      00
 8802              	.LASF69:
 8803 0142 70747249 		.ascii	"ptrIPremote\000"
 8803      5072656D 
 8803      6F746500 
 8804              	.LASF52:
 8805 014e 70434F4E 		.ascii	"pCONFIGURACIONIPREMOTE\000"
 8805      46494755 
 8805      52414349 
 8805      4F4E4950 
 8805      52454D4F 
 8806              	.LASF143:
 8807 0165 75736172 		.ascii	"usart1_have_data\000"
 8807      74315F68 
 8807      6176655F 
 8807      64617461 
 8807      00
 8808              	.LASF128:
 8809 0176 47534D52 		.ascii	"GSMReadSMSState\000"
 8809      65616453 
 8809      4D535374 
 8809      61746500 
 8810              	.LASF126:
 8811 0186 47534D43 		.ascii	"GSMCantSMS2\000"
 8811      616E7453 
 8811      4D533200 
 8812              	.LASF50:
 8813 0192 70434F4E 		.ascii	"pCONFIGURACIONgprsClave2\000"
 8813      46494755 
 8813      52414349 
 8813      4F4E6770 
 8813      7273436C 
 8814              	.LASF4:
 8815 01ab 6C6F6E67 		.ascii	"long int\000"
 8815      20696E74 
 8815      00
 8816              	.LASF30:
 8817 01b4 6163756D 		.ascii	"acumm_w2s_index\000"
 8817      6D5F7732 
 8817      735F696E 
 8817      64657800 
 8818              	.LASF60:
 8819 01c4 47534D5F 		.ascii	"GSM_Config\000"
 8819      436F6E66 
 8819      696700
 8820              	.LASF48:
 8821 01cf 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN2\000"
 8821      46494755 
 8821      52414349 
 8821      4F4E6770 
 8821      72734150 
 8822              	.LASF92:
 8823 01e6 47534D53 		.ascii	"GSMSendSMSbuffAux\000"
 8823      656E6453 
 8823      4D536275 
 8823      66664175 
 8823      7800
ARM GAS  /tmp/cc16P66I.s 			page 202


 8824              	.LASF90:
 8825 01f8 47534D53 		.ascii	"GSMSendSMSFlag\000"
 8825      656E6453 
 8825      4D53466C 
 8825      616700
 8826              	.LASF11:
 8827 0207 75696E74 		.ascii	"uint16_t\000"
 8827      31365F74 
 8827      00
 8828              	.LASF75:
 8829 0210 47534D52 		.ascii	"GSMReceivSMS\000"
 8829      65636569 
 8829      76534D53 
 8829      00
 8830              	.LASF74:
 8831 021d 47534D50 		.ascii	"GSMPrestador\000"
 8831      72657374 
 8831      61646F72 
 8831      00
 8832              	.LASF88:
 8833 022a 47534D53 		.ascii	"GSMSendCommandTimeOut\000"
 8833      656E6443 
 8833      6F6D6D61 
 8833      6E645469 
 8833      6D654F75 
 8834              	.LASF5:
 8835 0240 5F5F7569 		.ascii	"__uint16_t\000"
 8835      6E743136 
 8835      5F7400
 8836              	.LASF17:
 8837 024b 4F535045 		.ascii	"OSPEEDR\000"
 8837      45445200 
 8838              	.LASF6:
 8839 0253 5F5F7569 		.ascii	"__uint32_t\000"
 8839      6E743332 
 8839      5F7400
 8840              	.LASF136:
 8841 025e 53494D39 		.ascii	"SIM900APNSIM2\000"
 8841      30304150 
 8841      4E53494D 
 8841      3200
 8842              	.LASF89:
 8843 026c 47534D53 		.ascii	"GSMSendSMSState\000"
 8843      656E6453 
 8843      4D535374 
 8843      61746500 
 8844              	.LASF149:
 8845 027c 47534D5F 		.ascii	"GSM_Start\000"
 8845      53746172 
 8845      7400
 8846              	.LASF39:
 8847 0286 47534D5F 		.ascii	"GSM_Delay\000"
 8847      44656C61 
 8847      7900
 8848              	.LASF131:
 8849 0290 70726573 		.ascii	"prestadorSimSelect\000"
 8849      7461646F 
ARM GAS  /tmp/cc16P66I.s 			page 203


 8849      7253696D 
 8849      53656C65 
 8849      637400
 8850              	.LASF139:
 8851 02a3 53494D39 		.ascii	"SIM900IPREMOTE\000"
 8851      30304950 
 8851      52454D4F 
 8851      544500
 8852              	.LASF114:
 8853 02b2 47534D5F 		.ascii	"GSM_IPGPRSACT\000"
 8853      49504750 
 8853      52534143 
 8853      5400
 8854              	.LASF125:
 8855 02c0 47534D43 		.ascii	"GSMCantSMS\000"
 8855      616E7453 
 8855      4D5300
 8856              	.LASF38:
 8857 02cb 47534D5F 		.ascii	"GSM_Stop\000"
 8857      53746F70 
 8857      00
 8858              	.LASF55:
 8859 02d4 47534D52 		.ascii	"GSMReceive\000"
 8859      65636569 
 8859      766500
 8860              	.LASF98:
 8861 02df 47534D43 		.ascii	"GSMConfigGPRSflag\000"
 8861      6F6E6669 
 8861      67475052 
 8861      53666C61 
 8861      6700
 8862              	.LASF40:
 8863 02f1 72657370 		.ascii	"resp\000"
 8863      00
 8864              	.LASF10:
 8865 02f6 756E7369 		.ascii	"unsigned int\000"
 8865      676E6564 
 8865      20696E74 
 8865      00
 8866              	.LASF82:
 8867 0303 5061636B 		.ascii	"PacketReadyUARTGSM\000"
 8867      65745265 
 8867      61647955 
 8867      41525447 
 8867      534D00
 8868              	.LASF120:
 8869 0316 47534D5F 		.ascii	"GSM_SIM1\000"
 8869      53494D31 
 8869      00
 8870              	.LASF7:
 8871 031f 6C6F6E67 		.ascii	"long unsigned int\000"
 8871      20756E73 
 8871      69676E65 
 8871      6420696E 
 8871      7400
 8872              	.LASF24:
 8873 0331 4750494F 		.ascii	"GPIO_TypeDef\000"
ARM GAS  /tmp/cc16P66I.s 			page 204


 8873      5F547970 
 8873      65446566 
 8873      00
 8874              	.LASF100:
 8875 033e 47534D62 		.ascii	"GSMbuffGPRSCommand\000"
 8875      75666647 
 8875      50525343 
 8875      6F6D6D61 
 8875      6E6400
 8876              	.LASF127:
 8877 0351 47534D6E 		.ascii	"GSMnumSMS\000"
 8877      756D534D 
 8877      5300
 8878              	.LASF67:
 8879 035b 7074724B 		.ascii	"ptrKEY\000"
 8879      455900
 8880              	.LASF3:
 8881 0362 73686F72 		.ascii	"short unsigned int\000"
 8881      7420756E 
 8881      7369676E 
 8881      65642069 
 8881      6E7400
 8882              	.LASF68:
 8883 0375 70747249 		.ascii	"ptrIPAdd\000"
 8883      50416464 
 8883      00
 8884              	.LASF61:
 8885 037e 47534D53 		.ascii	"GSMSendSMS\000"
 8885      656E6453 
 8885      4D5300
 8886              	.LASF42:
 8887 0389 70726573 		.ascii	"prestadorSim1\000"
 8887      7461646F 
 8887      7253696D 
 8887      3100
 8888              	.LASF43:
 8889 0397 70726573 		.ascii	"prestadorSim2\000"
 8889      7461646F 
 8889      7253696D 
 8889      3200
 8890              	.LASF64:
 8891 03a5 47534D43 		.ascii	"GSMConfigGPRS\000"
 8891      6F6E6669 
 8891      67475052 
 8891      5300
 8892              	.LASF141:
 8893 03b3 75736172 		.ascii	"usart1_mini_timeout\000"
 8893      74315F6D 
 8893      696E695F 
 8893      74696D65 
 8893      6F757400 
 8894              	.LASF108:
 8895 03c7 47534D5F 		.ascii	"GSM_OK\000"
 8895      4F4B00
 8896              	.LASF28:
 8897 03ce 6163756D 		.ascii	"acumm_wh\000"
 8897      6D5F7768 
ARM GAS  /tmp/cc16P66I.s 			page 205


 8897      00
 8898              	.LASF122:
 8899 03d7 47534D5F 		.ascii	"GSM_SENDOK\000"
 8899      53454E44 
 8899      4F4B00
 8900              	.LASF34:
 8901 03e2 70617261 		.ascii	"parameters_typedef\000"
 8901      6D657465 
 8901      72735F74 
 8901      79706564 
 8901      656600
 8902              	.LASF121:
 8903 03f5 47534D5F 		.ascii	"GSM_SIM2\000"
 8903      53494D32 
 8903      00
 8904              	.LASF65:
 8905 03fe 70747241 		.ascii	"ptrAPN\000"
 8905      504E00
 8906              	.LASF13:
 8907 0405 73697A65 		.ascii	"sizetype\000"
 8907      74797065 
 8907      00
 8908              	.LASF47:
 8909 040e 70434F4E 		.ascii	"pCONFIGURACIONgprsProveedor1\000"
 8909      46494755 
 8909      52414349 
 8909      4F4E6770 
 8909      72735072 
 8910              	.LASF54:
 8911 042b 47534D43 		.ascii	"GSMCloseIP\000"
 8911      6C6F7365 
 8911      495000
 8912              	.LASF32:
 8913 0436 64756D6D 		.ascii	"dummy1\000"
 8913      793100
 8914              	.LASF113:
 8915 043d 47534D5F 		.ascii	"GSM_IPSTART\000"
 8915      49505354 
 8915      41525400 
 8916              	.LASF107:
 8917 0449 47534D62 		.ascii	"GSMbuffRtaCommand\000"
 8917      75666652 
 8917      7461436F 
 8917      6D6D616E 
 8917      6400
 8918              	.LASF147:
 8919 045b 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 8919      652F6D65 
 8919      642F446F 
 8919      63756D65 
 8919      6E74732F 
 8920 048e 6100     		.ascii	"a\000"
 8921              	.LASF86:
 8922 0490 47534D53 		.ascii	"GSMSendCommandState\000"
 8922      656E6443 
 8922      6F6D6D61 
 8922      6E645374 
ARM GAS  /tmp/cc16P66I.s 			page 206


 8922      61746500 
 8923              	.LASF118:
 8924 04a4 47534D5F 		.ascii	"GSM_IPCONNFAIL\000"
 8924      4950434F 
 8924      4E4E4641 
 8924      494C00
 8925              	.LASF72:
 8926 04b3 47534D53 		.ascii	"GSMSendIP\000"
 8926      656E6449 
 8926      5000
 8927              	.LASF116:
 8928 04bd 47534D5F 		.ascii	"GSM_IPCONNECTING\000"
 8928      4950434F 
 8928      4E4E4543 
 8928      54494E47 
 8928      00
 8929              	.LASF112:
 8930 04ce 47534D5F 		.ascii	"GSM_IPINITIAL\000"
 8930      4950494E 
 8930      49544941 
 8930      4C00
 8931              	.LASF76:
 8932 04dc 636F6C6F 		.ascii	"colon_index\000"
 8932      6E5F696E 
 8932      64657800 
 8933              	.LASF46:
 8934 04e8 70434F4E 		.ascii	"pCONFIGURACIONgprsClave1\000"
 8934      46494755 
 8934      52414349 
 8934      4F4E6770 
 8934      7273436C 
 8935              	.LASF129:
 8936 0501 47534D52 		.ascii	"GSMReadSMScommand\000"
 8936      65616453 
 8936      4D53636F 
 8936      6D6D616E 
 8936      6400
 8937              	.LASF56:
 8938 0513 47534D53 		.ascii	"GSMSendCommand\000"
 8938      656E6443 
 8938      6F6D6D61 
 8938      6E6400
 8939              	.LASF16:
 8940 0522 52455345 		.ascii	"RESERVED0\000"
 8940      52564544 
 8940      3000
 8941              	.LASF19:
 8942 052c 52455345 		.ascii	"RESERVED1\000"
 8942      52564544 
 8942      3100
 8943              	.LASF20:
 8944 0536 52455345 		.ascii	"RESERVED2\000"
 8944      52564544 
 8944      3200
 8945              	.LASF23:
 8946 0540 52455345 		.ascii	"RESERVED3\000"
 8946      52564544 
ARM GAS  /tmp/cc16P66I.s 			page 207


 8946      3300
 8947              	.LASF93:
 8948 054a 47534D43 		.ascii	"GSMConfigState\000"
 8948      6F6E6669 
 8948      67537461 
 8948      746500
 8949              	.LASF96:
 8950 0559 47534D43 		.ascii	"GSMConfigGPRSTimeOut\000"
 8950      6F6E6669 
 8950      67475052 
 8950      5354696D 
 8950      654F7574 
 8951              	.LASF36:
 8952 056e 47534D50 		.ascii	"GSMProcess\000"
 8952      726F6365 
 8952      737300
 8953              	.LASF44:
 8954 0579 70434F4E 		.ascii	"pCONFIGURACIONgprsAPN1\000"
 8954      46494755 
 8954      52414349 
 8954      4F4E6770 
 8954      72734150 
 8955              	.LASF29:
 8956 0590 6163756D 		.ascii	"acumm_w2s\000"
 8956      6D5F7732 
 8956      7300
 8957              	.LASF0:
 8958 059a 756E7369 		.ascii	"unsigned char\000"
 8958      676E6564 
 8958      20636861 
 8958      7200
 8959              	.LASF87:
 8960 05a8 47534D53 		.ascii	"GSMSendCommandFlag\000"
 8960      656E6443 
 8960      6F6D6D61 
 8960      6E64466C 
 8960      616700
 8961              	.LASF2:
 8962 05bb 73686F72 		.ascii	"short int\000"
 8962      7420696E 
 8962      7400
 8963              	.LASF79:
 8964 05c5 70617261 		.ascii	"param_struct\000"
 8964      6D5F7374 
 8964      72756374 
 8964      00
 8965              	.LASF77:
 8966 05d2 70546F41 		.ascii	"pToAnswer\000"
 8966      6E737765 
 8966      7200
 8967              	.LASF25:
 8968 05dc 6E756D5F 		.ascii	"num_reportar\000"
 8968      7265706F 
 8968      72746172 
 8968      00
 8969              	.LASF99:
 8970 05e9 47534D62 		.ascii	"GSMbuffStatus\000"
ARM GAS  /tmp/cc16P66I.s 			page 208


 8970      75666653 
 8970      74617475 
 8970      7300
 8971              	.LASF97:
 8972 05f7 47534D43 		.ascii	"GSMConfigGPRSState\000"
 8972      6F6E6669 
 8972      67475052 
 8972      53537461 
 8972      746500
 8973              	.LASF26:
 8974 060a 696D6569 		.ascii	"imei\000"
 8974      00
 8975              	.LASF140:
 8976 060f 53494D39 		.ascii	"SIM900PORTREMOTE\000"
 8976      3030504F 
 8976      52545245 
 8976      4D4F5445 
 8976      00
 8977              	.LASF142:
 8978 0620 75736172 		.ascii	"usart1_pckt_ready\000"
 8978      74315F70 
 8978      636B745F 
 8978      72656164 
 8978      7900
 8979              	.LASF12:
 8980 0632 75696E74 		.ascii	"uint32_t\000"
 8980      33325F74 
 8980      00
 8981              	.LASF57:
 8982 063b 70747243 		.ascii	"ptrCommand\000"
 8982      6F6D6D61 
 8982      6E6400
 8983              	.LASF110:
 8984 0646 47534D5F 		.ascii	"GSM_CMGF\000"
 8984      434D4746 
 8984      00
 8985              	.LASF35:
 8986 064f 6C6F6E67 		.ascii	"long double\000"
 8986      20646F75 
 8986      626C6500 
 8987              	.LASF85:
 8988 065b 47534D47 		.ascii	"GSMGeneralTimeOut\000"
 8988      656E6572 
 8988      616C5469 
 8988      6D654F75 
 8988      7400
 8989              	.LASF33:
 8990 066d 63686172 		.ascii	"char\000"
 8990      00
 8991              	.LASF111:
 8992 0672 47534D5F 		.ascii	"GSM_IPSTATE\000"
 8992      49505354 
 8992      41544500 
 8993              	.LASF101:
 8994 067e 47534D49 		.ascii	"GSMIPadd\000"
 8994      50616464 
 8994      00
ARM GAS  /tmp/cc16P66I.s 			page 209


 8995              	.LASF27:
 8996 0687 6E756D5F 		.ascii	"num_propio\000"
 8996      70726F70 
 8996      696F00
 8997              	.LASF105:
 8998 0692 47534D53 		.ascii	"GSMSendIPTimeOut\000"
 8998      656E6449 
 8998      5054696D 
 8998      654F7574 
 8998      00
 8999              	.LASF134:
 9000 06a3 53494D39 		.ascii	"SIM900USUARIOSIM1\000"
 9000      30305553 
 9000      55415249 
 9000      4F53494D 
 9000      3100
 9001              	.LASF137:
 9002 06b5 53494D39 		.ascii	"SIM900USUARIOSIM2\000"
 9002      30305553 
 9002      55415249 
 9002      4F53494D 
 9002      3200
 9003              	.LASF78:
 9004 06c7 47534D43 		.ascii	"GSMConfigPDPGPRS\000"
 9004      6F6E6669 
 9004      67504450 
 9004      47505253 
 9004      00
 9005              	.LASF62:
 9006 06d8 7074724D 		.ascii	"ptrMSG\000"
 9006      534700
 9007              	.LASF144:
 9008 06df 75736172 		.ascii	"usart1_pckt_bytes\000"
 9008      74315F70 
 9008      636B745F 
 9008      62797465 
 9008      7300
 9009              	.LASF115:
 9010 06f1 47534D5F 		.ascii	"GSM_IPSTATUS\000"
 9010      49505354 
 9010      41545553 
 9010      00
 9011              	.LASF103:
 9012 06fe 47534D53 		.ascii	"GSMSendIPState\000"
 9012      656E6449 
 9012      50537461 
 9012      746500
 9013              	.LASF21:
 9014 070d 42535252 		.ascii	"BSRR\000"
 9014      00
 9015              	.LASF81:
 9016 0712 62756666 		.ascii	"buffUARTGSMrx2\000"
 9016      55415254 
 9016      47534D72 
 9016      783200
 9017              	.LASF83:
 9018 0721 47534D53 		.ascii	"GSMStartState\000"
ARM GAS  /tmp/cc16P66I.s 			page 210


 9018      74617274 
 9018      53746174 
 9018      6500
 9019              	.LASF71:
 9020 072f 47534D5F 		.ascii	"GSM_SetSIM\000"
 9020      53657453 
 9020      494D00
 9021              	.LASF63:
 9022 073a 7074724E 		.ascii	"ptrNUM\000"
 9022      554D00
 9023              	.LASF45:
 9024 0741 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario1\000"
 9024      46494755 
 9024      52414349 
 9024      4F4E6770 
 9024      72735573 
 9025              	.LASF49:
 9026 075c 70434F4E 		.ascii	"pCONFIGURACIONgprsUsuario2\000"
 9026      46494755 
 9026      52414349 
 9026      4F4E6770 
 9026      72735573 
 9027              	.LASF84:
 9028 0777 47534D53 		.ascii	"GSMStartTime\000"
 9028      74617274 
 9028      54696D65 
 9028      00
 9029              	.LASF109:
 9030 0784 47534D5F 		.ascii	"GSM_ERR\000"
 9030      45525200 
 9031              	.LASF1:
 9032 078c 7369676E 		.ascii	"signed char\000"
 9032      65642063 
 9032      68617200 
 9033              	.LASF145:
 9034 0798 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 9034      43313120 
 9034      352E322E 
 9034      31203230 
 9034      31353132 
 9035 07cb 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 9035      20726576 
 9035      6973696F 
 9035      6E203233 
 9035      31383438 
 9036 07fe 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 9036      662D3220 
 9036      2D4F3020 
 9036      2D666F6D 
 9036      69742D66 
 9037 0831 66756E63 		.ascii	"function-sections\000"
 9037      74696F6E 
 9037      2D736563 
 9037      74696F6E 
 9037      7300
 9038              	.LASF130:
 9039 0843 47534D52 		.ascii	"GSMReadSMSrepIn\000"
ARM GAS  /tmp/cc16P66I.s 			page 211


 9039      65616453 
 9039      4D537265 
 9039      70496E00 
 9040              	.LASF123:
 9041 0853 70726573 		.ascii	"prestadorSimState\000"
 9041      7461646F 
 9041      7253696D 
 9041      53746174 
 9041      6500
 9042              	.LASF135:
 9043 0865 53494D39 		.ascii	"SIM900CLAVESIM1\000"
 9043      3030434C 
 9043      41564553 
 9043      494D3100 
 9044              	.LASF138:
 9045 0875 53494D39 		.ascii	"SIM900CLAVESIM2\000"
 9045      3030434C 
 9045      41564553 
 9045      494D3200 
 9046              	.LASF53:
 9047 0885 70434F4E 		.ascii	"pCONFIGURACIONPORTREMOTE\000"
 9047      46494755 
 9047      52414349 
 9047      4F4E504F 
 9047      52545245 
 9048              	.LASF124:
 9049 089e 70726573 		.ascii	"prestadorSimTime\000"
 9049      7461646F 
 9049      7253696D 
 9049      54696D65 
 9049      00
 9050              	.LASF73:
 9051 08af 47534D54 		.ascii	"GSMTimeoutCounters\000"
 9051      696D656F 
 9051      7574436F 
 9051      756E7465 
 9051      727300
 9052              	.LASF106:
 9053 08c2 47534D53 		.ascii	"GSMSendIPbuffAux\000"
 9053      656E6449 
 9053      50627566 
 9053      66417578 
 9053      00
 9054              	.LASF37:
 9055 08d3 47534D5F 		.ascii	"GSM_Start_Stop_ResetSM\000"
 9055      53746172 
 9055      745F5374 
 9055      6F705F52 
 9055      65736574 
 9056              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc16P66I.s 			page 212


DEFINED SYMBOLS
                            *ABS*:00000000 sim900_800.c
                            *COM*:00000100 buffUARTGSMrx2
                            *COM*:00000001 PacketReadyUARTGSM
     /tmp/cc16P66I.s:60     .bss.GSMStartState:00000000 GSMStartState
     /tmp/cc16P66I.s:61     .bss.GSMStartState:00000000 $d
                            *COM*:00000002 GSMStartTime
                            *COM*:00000002 GSMGeneralTimeOut
     /tmp/cc16P66I.s:68     .bss.GSMSendCommandState:00000000 GSMSendCommandState
     /tmp/cc16P66I.s:69     .bss.GSMSendCommandState:00000000 $d
     /tmp/cc16P66I.s:74     .bss.GSMSendCommandFlag:00000000 GSMSendCommandFlag
     /tmp/cc16P66I.s:75     .bss.GSMSendCommandFlag:00000000 $d
                            *COM*:00000002 GSMSendCommandTimeOut
     /tmp/cc16P66I.s:81     .bss.GSMSendSMSState:00000000 GSMSendSMSState
     /tmp/cc16P66I.s:82     .bss.GSMSendSMSState:00000000 $d
     /tmp/cc16P66I.s:87     .bss.GSMSendSMSFlag:00000000 GSMSendSMSFlag
     /tmp/cc16P66I.s:88     .bss.GSMSendSMSFlag:00000000 $d
                            *COM*:00000002 GSMSendSMSTimeOut
                            *COM*:00000020 GSMSendSMSbuffAux
     /tmp/cc16P66I.s:95     .bss.GSMConfigState:00000000 GSMConfigState
     /tmp/cc16P66I.s:96     .bss.GSMConfigState:00000000 $d
                            *COM*:00000002 GSMConfigTimeOut
                            *COM*:00000002 GSMConfigTime
                            *COM*:00000002 GSMConfigGPRSTimeOut
     /tmp/cc16P66I.s:104    .bss.GSMConfigGPRSState:00000000 GSMConfigGPRSState
     /tmp/cc16P66I.s:105    .bss.GSMConfigGPRSState:00000000 $d
     /tmp/cc16P66I.s:110    .bss.GSMConfigGPRSflag:00000000 GSMConfigGPRSflag
     /tmp/cc16P66I.s:111    .bss.GSMConfigGPRSflag:00000000 $d
                            *COM*:00000020 GSMbuffStatus
                            *COM*:00000040 GSMbuffGPRSCommand
                            *COM*:00000010 GSMIPadd
     /tmp/cc16P66I.s:119    .data.GPRSrssi:00000000 GPRSrssi
     /tmp/cc16P66I.s:125    .bss.GSMSendIPState:00000000 GSMSendIPState
     /tmp/cc16P66I.s:126    .bss.GSMSendIPState:00000000 $d
     /tmp/cc16P66I.s:131    .bss.GSMSendIPFlag:00000000 GSMSendIPFlag
     /tmp/cc16P66I.s:132    .bss.GSMSendIPFlag:00000000 $d
                            *COM*:00000002 GSMSendIPTimeOut
                            *COM*:00000020 GSMSendIPbuffAux
                            *COM*:00000100 GSMbuffRtaCommand
     /tmp/cc16P66I.s:141    .rodata.GSM_OK:00000000 GSM_OK
     /tmp/cc16P66I.s:138    .rodata.GSM_OK:00000000 $d
     /tmp/cc16P66I.s:148    .rodata.GSM_ERR:00000000 GSM_ERR
     /tmp/cc16P66I.s:145    .rodata.GSM_ERR:00000000 $d
     /tmp/cc16P66I.s:155    .rodata.GSM_CMGF:00000000 GSM_CMGF
     /tmp/cc16P66I.s:152    .rodata.GSM_CMGF:00000000 $d
     /tmp/cc16P66I.s:162    .rodata.GSM_IPSTATE:00000000 GSM_IPSTATE
     /tmp/cc16P66I.s:159    .rodata.GSM_IPSTATE:00000000 $d
     /tmp/cc16P66I.s:169    .rodata.GSM_IPINITIAL:00000000 GSM_IPINITIAL
     /tmp/cc16P66I.s:166    .rodata.GSM_IPINITIAL:00000000 $d
     /tmp/cc16P66I.s:176    .rodata.GSM_IPSTART:00000000 GSM_IPSTART
     /tmp/cc16P66I.s:173    .rodata.GSM_IPSTART:00000000 $d
     /tmp/cc16P66I.s:183    .rodata.GSM_IPGPRSACT:00000000 GSM_IPGPRSACT
     /tmp/cc16P66I.s:180    .rodata.GSM_IPGPRSACT:00000000 $d
     /tmp/cc16P66I.s:190    .rodata.GSM_IPSTATUS:00000000 GSM_IPSTATUS
     /tmp/cc16P66I.s:187    .rodata.GSM_IPSTATUS:00000000 $d
     /tmp/cc16P66I.s:197    .rodata.GSM_IPCONNECTING:00000000 GSM_IPCONNECTING
     /tmp/cc16P66I.s:194    .rodata.GSM_IPCONNECTING:00000000 $d
ARM GAS  /tmp/cc16P66I.s 			page 213


     /tmp/cc16P66I.s:204    .rodata.GSM_IPCONNOK:00000000 GSM_IPCONNOK
     /tmp/cc16P66I.s:201    .rodata.GSM_IPCONNOK:00000000 $d
     /tmp/cc16P66I.s:211    .rodata.GSM_IPCONNFAIL:00000000 GSM_IPCONNFAIL
     /tmp/cc16P66I.s:208    .rodata.GSM_IPCONNFAIL:00000000 $d
     /tmp/cc16P66I.s:218    .rodata.GSM_IPCONNCLOSE:00000000 GSM_IPCONNCLOSE
     /tmp/cc16P66I.s:215    .rodata.GSM_IPCONNCLOSE:00000000 $d
     /tmp/cc16P66I.s:225    .rodata.GSM_SIM1:00000000 GSM_SIM1
     /tmp/cc16P66I.s:222    .rodata.GSM_SIM1:00000000 $d
     /tmp/cc16P66I.s:232    .rodata.GSM_SIM2:00000000 GSM_SIM2
     /tmp/cc16P66I.s:229    .rodata.GSM_SIM2:00000000 $d
     /tmp/cc16P66I.s:239    .rodata.GSM_SENDOK:00000000 GSM_SENDOK
     /tmp/cc16P66I.s:236    .rodata.GSM_SENDOK:00000000 $d
     /tmp/cc16P66I.s:245    .bss.prestadorSimState:00000000 prestadorSimState
     /tmp/cc16P66I.s:246    .bss.prestadorSimState:00000000 $d
     /tmp/cc16P66I.s:251    .data.prestadorSimTime:00000000 prestadorSimTime
     /tmp/cc16P66I.s:257    .bss.GSMCantSMS:00000000 GSMCantSMS
     /tmp/cc16P66I.s:258    .bss.GSMCantSMS:00000000 $d
     /tmp/cc16P66I.s:263    .bss.GSMCantSMS2:00000000 GSMCantSMS2
     /tmp/cc16P66I.s:264    .bss.GSMCantSMS2:00000000 $d
     /tmp/cc16P66I.s:269    .data.GSMnumSMS:00000000 GSMnumSMS
     /tmp/cc16P66I.s:275    .bss.GSMReadSMSState:00000000 GSMReadSMSState
     /tmp/cc16P66I.s:276    .bss.GSMReadSMSState:00000000 $d
                            *COM*:00000020 GSMReadSMScommand
                            *COM*:00000020 GSMReadSMSrepIn
     /tmp/cc16P66I.s:283    .bss.prestadorSimSelect:00000000 prestadorSimSelect
     /tmp/cc16P66I.s:284    .bss.prestadorSimSelect:00000000 $d
     /tmp/cc16P66I.s:289    .bss.flagCloseIP:00000000 flagCloseIP
     /tmp/cc16P66I.s:290    .bss.flagCloseIP:00000000 $d
     /tmp/cc16P66I.s:292    .text.GSMProcess:00000000 $t
     /tmp/cc16P66I.s:297    .text.GSMProcess:00000000 GSMProcess
     /tmp/cc16P66I.s:350    .text.GSMProcess:00000044 $d
     /tmp/cc16P66I.s:360    .text.GSM_Start:00000000 $t
     /tmp/cc16P66I.s:365    .text.GSM_Start:00000000 GSM_Start
     /tmp/cc16P66I.s:539    .text.GSM_Start:000000f4 $d
     /tmp/cc16P66I.s:545    .text.GSM_Start_Stop_ResetSM:00000000 $t
     /tmp/cc16P66I.s:550    .text.GSM_Start_Stop_ResetSM:00000000 GSM_Start_Stop_ResetSM
     /tmp/cc16P66I.s:565    .text.GSM_Start_Stop_ResetSM:0000000c $d
     /tmp/cc16P66I.s:570    .text.GSM_Stop:00000000 $t
     /tmp/cc16P66I.s:575    .text.GSM_Stop:00000000 GSM_Stop
     /tmp/cc16P66I.s:701    .text.GSM_Stop:000000b0 $d
     /tmp/cc16P66I.s:708    .text.GSM_Delay:00000000 $t
     /tmp/cc16P66I.s:713    .text.GSM_Delay:00000000 GSM_Delay
     /tmp/cc16P66I.s:794    .text.GSM_Delay:00000068 $d
     /tmp/cc16P66I.s:800    .rodata:00000000 $d
     /tmp/cc16P66I.s:807    .text.GSMPrestador:00000000 $t
     /tmp/cc16P66I.s:812    .text.GSMPrestador:00000000 GSMPrestador
     /tmp/cc16P66I.s:4342   .text.GSM_SetSIM:00000000 GSM_SetSIM
     /tmp/cc16P66I.s:1949   .text.GSMSendCommand:00000000 GSMSendCommand
     /tmp/cc16P66I.s:1363   .text.GSMPrestador:00000378 $d
     /tmp/cc16P66I.s:1380   .text.GSMPrestador:000003b4 $t
     /tmp/cc16P66I.s:1402   .text.GSMPrestador:000003c8 $d
     /tmp/cc16P66I.s:1411   .text.GSMCloseIP:00000000 $t
     /tmp/cc16P66I.s:1416   .text.GSMCloseIP:00000000 GSMCloseIP
     /tmp/cc16P66I.s:1495   .text.GSMCloseIP:00000064 $d
     /tmp/cc16P66I.s:1536   .text.GSMReceive:00000000 $t
     /tmp/cc16P66I.s:1541   .text.GSMReceive:00000000 GSMReceive
     /tmp/cc16P66I.s:1918   .text.GSMReceive:0000026c $d
ARM GAS  /tmp/cc16P66I.s 			page 214


     /tmp/cc16P66I.s:1944   .text.GSMSendCommand:00000000 $t
     /tmp/cc16P66I.s:2132   .text.GSMSendCommand:000000fc $d
     /tmp/cc16P66I.s:2159   .text.GSM_Config:00000000 $t
     /tmp/cc16P66I.s:2164   .text.GSM_Config:00000000 GSM_Config
     /tmp/cc16P66I.s:2193   .rodata.GSM_Config:00000000 $d
     /tmp/cc16P66I.s:2697   .text.GSM_Config:000002c8 $d
     /tmp/cc16P66I.s:2725   .text.GSMSendSMS:00000000 $t
     /tmp/cc16P66I.s:2730   .text.GSMSendSMS:00000000 GSMSendSMS
     /tmp/cc16P66I.s:2960   .text.GSMSendSMS:00000168 $d
     /tmp/cc16P66I.s:3034   .text.GSMConfigGPRS:00000000 $t
     /tmp/cc16P66I.s:3039   .text.GSMConfigGPRS:00000000 GSMConfigGPRS
     /tmp/cc16P66I.s:3071   .rodata.GSMConfigGPRS:00000000 $d
     /tmp/cc16P66I.s:3598   .text.GSMConfigGPRS:00000398 $d
     /tmp/cc16P66I.s:3626   .text.GSMConfigGPRS:00000400 $t
     /tmp/cc16P66I.s:4122   .text.GSMConfigGPRS:00000744 $d
     /tmp/cc16P66I.s:4140   .text.GSMConfigGPRS:00000784 $t
     /tmp/cc16P66I.s:4322   .text.GSMConfigGPRS:00000870 $d
     /tmp/cc16P66I.s:4337   .text.GSM_SetSIM:00000000 $t
     /tmp/cc16P66I.s:4431   .text.GSM_SetSIM:00000078 $d
     /tmp/cc16P66I.s:4442   .text.GSMSendIP:00000000 $t
     /tmp/cc16P66I.s:4447   .text.GSMSendIP:00000000 GSMSendIP
     /tmp/cc16P66I.s:4632   .text.GSMSendIP:00000110 $d
     /tmp/cc16P66I.s:4643   .text.GSMTimeoutCounters:00000000 $t
     /tmp/cc16P66I.s:4648   .text.GSMTimeoutCounters:00000000 GSMTimeoutCounters
     /tmp/cc16P66I.s:4790   .text.GSMTimeoutCounters:000000d4 $d
     /tmp/cc16P66I.s:4822   .text.GSMReceivSMS:00000000 $t
     /tmp/cc16P66I.s:4827   .text.GSMReceivSMS:00000000 GSMReceivSMS
     /tmp/cc16P66I.s:5190   .text.GSMReceivSMS:0000023c $d
     /tmp/cc16P66I.s:5208   .text.GSMConfigPDPGPRS:00000000 $t
     /tmp/cc16P66I.s:5213   .text.GSMConfigPDPGPRS:00000000 GSMConfigPDPGPRS
     /tmp/cc16P66I.s:5245   .rodata.GSMConfigPDPGPRS:00000000 $d
     /tmp/cc16P66I.s:5747   .text.GSMConfigPDPGPRS:0000032c $d
     /tmp/cc16P66I.s:5773   .text.GSMConfigPDPGPRS:0000038c $t
     /tmp/cc16P66I.s:6284   .text.GSMConfigPDPGPRS:000006b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ReadUsart1Buffer
usart1_have_data
usart1_mini_timeout
usart1_pckt_ready
usart1_pckt_bytes
strncmp
strcpy
SIM900APNSIM1
SIM900USUARIOSIM1
SIM900CLAVESIM1
SIM900IPREMOTE
SIM900PORTREMOTE
SIM900APNSIM2
SIM900USUARIOSIM2
SIM900CLAVESIM2
ESPPreParser2
strncpy
FuncsGSMMessageFlags
Usart1Send
memcpy
ARM GAS  /tmp/cc16P66I.s 			page 215


strcat
strlen
sprintf
param_struct
send_energy
