ARM GAS  /tmp/cckUWzaN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"system_stm32f0xx.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.2.1 20151202 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./src -I ./cmsis_boot -I ./cmsis_core
  18              	@ -I ../STM32F0xx_StdPeriph_Lib_V1.3.1/Libraries/STM32F0xx_StdPeriph_Driver/inc
  19              	@ -I ./inc -I ./cmsis_boot -imultilib armv6-m
  20              	@ -iprefix /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/
  21              	@ -isysroot /usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/bin/../arm-none-eabi
  22              	@ -D__USES_INITFINI__ cmsis_boot/system_stm32f0xx.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip cmsis_boot/system_stm32f0xx.o -g -gdwarf-2 -O0 -Wall
  24              	@ -fomit-frame-pointer -fdata-sections -ffunction-sections -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  36              	@ -fmerge-debug-strings -fomit-frame-pointer -fpeephole
  37              	@ -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  42              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstdarg-opt
  43              	@ -fstrict-volatile-bitfields -fsync-libcalls -ftrapping-math
  44              	@ -ftree-coalesce-vars -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  45              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  47              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  48              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  49              	@ -mvectorize-with-neon-quad
  50              	
  51              		.text
  52              	.Ltext0:
  53              		.cfi_sections	.debug_frame
  54              		.global	SystemCoreClock
  55              		.section	.data.SystemCoreClock,"aw",%progbits
  56              		.align	2
  57              		.type	SystemCoreClock, %object
ARM GAS  /tmp/cckUWzaN.s 			page 2


  58              		.size	SystemCoreClock, 4
  59              	SystemCoreClock:
  60 0000 006CDC02 		.word	48000000
  61              		.global	AHBPrescTable
  62              		.section	.data.AHBPrescTable,"aw",%progbits
  63              		.align	2
  64              		.type	AHBPrescTable, %object
  65              		.size	AHBPrescTable, 16
  66              	AHBPrescTable:
  67 0000 00       		.byte	0
  68 0001 00       		.byte	0
  69 0002 00       		.byte	0
  70 0003 00       		.byte	0
  71 0004 00       		.byte	0
  72 0005 00       		.byte	0
  73 0006 00       		.byte	0
  74 0007 00       		.byte	0
  75 0008 01       		.byte	1
  76 0009 02       		.byte	2
  77 000a 03       		.byte	3
  78 000b 04       		.byte	4
  79 000c 06       		.byte	6
  80 000d 07       		.byte	7
  81 000e 08       		.byte	8
  82 000f 09       		.byte	9
  83              		.section	.text.SystemInit,"ax",%progbits
  84              		.align	2
  85              		.global	SystemInit
  86              		.code	16
  87              		.thumb_func
  88              		.type	SystemInit, %function
  89              	SystemInit:
  90              	.LFB20:
  91              		.file 1 "cmsis_boot/system_stm32f0xx.c"
   1:cmsis_boot/system_stm32f0xx.c **** /**
   2:cmsis_boot/system_stm32f0xx.c ****   ******************************************************************************
   3:cmsis_boot/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:cmsis_boot/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:cmsis_boot/system_stm32f0xx.c ****   * @version V1.0.1
   6:cmsis_boot/system_stm32f0xx.c ****   * @date    20-April-2012
   7:cmsis_boot/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   8:cmsis_boot/system_stm32f0xx.c ****   *          This file contains the system clock configuration for STM32F0xx devices,
   9:cmsis_boot/system_stm32f0xx.c ****   *          and is generated by the clock configuration tool  
  10:cmsis_boot/system_stm32f0xx.c ****   *          STM32F0xx_Clock_Configuration_V1.0.0.xls
  11:cmsis_boot/system_stm32f0xx.c ****   *
  12:cmsis_boot/system_stm32f0xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:cmsis_boot/system_stm32f0xx.c ****   *     user application:
  14:cmsis_boot/system_stm32f0xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:cmsis_boot/system_stm32f0xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:cmsis_boot/system_stm32f0xx.c ****   *                      depending on the configuration made in the clock xls tool.
  17:cmsis_boot/system_stm32f0xx.c ****   *                      This function is called at startup just after reset and 
  18:cmsis_boot/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  19:cmsis_boot/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  20:cmsis_boot/system_stm32f0xx.c ****   *
  21:cmsis_boot/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:cmsis_boot/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick 
  23:cmsis_boot/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
ARM GAS  /tmp/cckUWzaN.s 			page 3


  24:cmsis_boot/system_stm32f0xx.c ****   *
  25:cmsis_boot/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:cmsis_boot/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  27:cmsis_boot/system_stm32f0xx.c ****   *                                 during program execution.
  28:cmsis_boot/system_stm32f0xx.c ****   *
  29:cmsis_boot/system_stm32f0xx.c ****   * 2. After each device reset the HSI (8 MHz Range) is used as system clock source.
  30:cmsis_boot/system_stm32f0xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f0xx.s" file, to
  31:cmsis_boot/system_stm32f0xx.c ****   *    configure the system clock before to branch to main program.
  32:cmsis_boot/system_stm32f0xx.c ****   *
  33:cmsis_boot/system_stm32f0xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:cmsis_boot/system_stm32f0xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:cmsis_boot/system_stm32f0xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:cmsis_boot/system_stm32f0xx.c ****   *
  37:cmsis_boot/system_stm32f0xx.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:cmsis_boot/system_stm32f0xx.c ****   *    in "stm32f0xx.h" file. When HSE is used as system clock source, directly or
  39:cmsis_boot/system_stm32f0xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:cmsis_boot/system_stm32f0xx.c ****   *    value to your own configuration.
  41:cmsis_boot/system_stm32f0xx.c ****   *
  42:cmsis_boot/system_stm32f0xx.c ****   * 5. This file configures the system clock as follows:
  43:cmsis_boot/system_stm32f0xx.c ****   *=============================================================================
  44:cmsis_boot/system_stm32f0xx.c ****   *                         System Clock Configuration
  45:cmsis_boot/system_stm32f0xx.c ****   *=============================================================================
  46:cmsis_boot/system_stm32f0xx.c ****   *        System Clock source          | PLL(HSE)
  47:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  48:cmsis_boot/system_stm32f0xx.c ****   *        SYSCLK                       | 48000000 Hz
  49:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  50:cmsis_boot/system_stm32f0xx.c ****   *        HCLK                         | 48000000 Hz
  51:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  52:cmsis_boot/system_stm32f0xx.c ****   *        AHB Prescaler                | 1
  53:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  54:cmsis_boot/system_stm32f0xx.c ****   *        APB1 Prescaler               | 1
  55:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  56:cmsis_boot/system_stm32f0xx.c ****   *        APB2 Prescaler               | 1
  57:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  58:cmsis_boot/system_stm32f0xx.c ****   *        HSE Frequency                | 8000000 Hz
  59:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  60:cmsis_boot/system_stm32f0xx.c ****   *        PLL MUL                      | 6
  61:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  62:cmsis_boot/system_stm32f0xx.c ****   *        VDD                          | 3.3 V
  63:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  64:cmsis_boot/system_stm32f0xx.c ****   *        Flash Latency                | 1 WS
  65:cmsis_boot/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  66:cmsis_boot/system_stm32f0xx.c ****   *=============================================================================
  67:cmsis_boot/system_stm32f0xx.c ****   ******************************************************************************
  68:cmsis_boot/system_stm32f0xx.c ****   * @attention
  69:cmsis_boot/system_stm32f0xx.c ****   *
  70:cmsis_boot/system_stm32f0xx.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  71:cmsis_boot/system_stm32f0xx.c ****   *
  72:cmsis_boot/system_stm32f0xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  73:cmsis_boot/system_stm32f0xx.c ****   * You may not use this file except in compliance with the License.
  74:cmsis_boot/system_stm32f0xx.c ****   * You may obtain a copy of the License at:
  75:cmsis_boot/system_stm32f0xx.c ****   *
  76:cmsis_boot/system_stm32f0xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  77:cmsis_boot/system_stm32f0xx.c ****   *
  78:cmsis_boot/system_stm32f0xx.c ****   * Unless required by applicable law or agreed to in writing, software 
  79:cmsis_boot/system_stm32f0xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  80:cmsis_boot/system_stm32f0xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/cckUWzaN.s 			page 4


  81:cmsis_boot/system_stm32f0xx.c ****   * See the License for the specific language governing permissions and
  82:cmsis_boot/system_stm32f0xx.c ****   * limitations under the License.
  83:cmsis_boot/system_stm32f0xx.c ****   *
  84:cmsis_boot/system_stm32f0xx.c ****   ******************************************************************************
  85:cmsis_boot/system_stm32f0xx.c ****   */
  86:cmsis_boot/system_stm32f0xx.c **** 
  87:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup CMSIS
  88:cmsis_boot/system_stm32f0xx.c ****   * @{
  89:cmsis_boot/system_stm32f0xx.c ****   */
  90:cmsis_boot/system_stm32f0xx.c **** 
  91:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  92:cmsis_boot/system_stm32f0xx.c ****   * @{
  93:cmsis_boot/system_stm32f0xx.c ****   */  
  94:cmsis_boot/system_stm32f0xx.c ****   
  95:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  96:cmsis_boot/system_stm32f0xx.c ****   * @{
  97:cmsis_boot/system_stm32f0xx.c ****   */
  98:cmsis_boot/system_stm32f0xx.c **** 
  99:cmsis_boot/system_stm32f0xx.c **** #include "stm32f0xx.h"
 100:cmsis_boot/system_stm32f0xx.c **** 
 101:cmsis_boot/system_stm32f0xx.c **** /**
 102:cmsis_boot/system_stm32f0xx.c ****   * @}
 103:cmsis_boot/system_stm32f0xx.c ****   */
 104:cmsis_boot/system_stm32f0xx.c **** 
 105:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
 106:cmsis_boot/system_stm32f0xx.c ****   * @{
 107:cmsis_boot/system_stm32f0xx.c ****   */
 108:cmsis_boot/system_stm32f0xx.c **** 
 109:cmsis_boot/system_stm32f0xx.c **** /**
 110:cmsis_boot/system_stm32f0xx.c ****   * @}
 111:cmsis_boot/system_stm32f0xx.c ****   */
 112:cmsis_boot/system_stm32f0xx.c **** 
 113:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
 114:cmsis_boot/system_stm32f0xx.c ****   * @{
 115:cmsis_boot/system_stm32f0xx.c ****   */
 116:cmsis_boot/system_stm32f0xx.c **** /**
 117:cmsis_boot/system_stm32f0xx.c ****   * @}
 118:cmsis_boot/system_stm32f0xx.c ****   */
 119:cmsis_boot/system_stm32f0xx.c **** 
 120:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
 121:cmsis_boot/system_stm32f0xx.c ****   * @{
 122:cmsis_boot/system_stm32f0xx.c ****   */
 123:cmsis_boot/system_stm32f0xx.c **** 
 124:cmsis_boot/system_stm32f0xx.c **** /**
 125:cmsis_boot/system_stm32f0xx.c ****   * @}
 126:cmsis_boot/system_stm32f0xx.c ****   */
 127:cmsis_boot/system_stm32f0xx.c **** 
 128:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
 129:cmsis_boot/system_stm32f0xx.c ****   * @{
 130:cmsis_boot/system_stm32f0xx.c ****   */
 131:cmsis_boot/system_stm32f0xx.c **** uint32_t SystemCoreClock    = 48000000;
 132:cmsis_boot/system_stm32f0xx.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 133:cmsis_boot/system_stm32f0xx.c **** 
 134:cmsis_boot/system_stm32f0xx.c **** /**
 135:cmsis_boot/system_stm32f0xx.c ****   * @}
 136:cmsis_boot/system_stm32f0xx.c ****   */
 137:cmsis_boot/system_stm32f0xx.c **** 
ARM GAS  /tmp/cckUWzaN.s 			page 5


 138:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 139:cmsis_boot/system_stm32f0xx.c ****   * @{
 140:cmsis_boot/system_stm32f0xx.c ****   */
 141:cmsis_boot/system_stm32f0xx.c **** 
 142:cmsis_boot/system_stm32f0xx.c **** static void SetSysClock(void);
 143:cmsis_boot/system_stm32f0xx.c **** 
 144:cmsis_boot/system_stm32f0xx.c **** /**
 145:cmsis_boot/system_stm32f0xx.c ****   * @}
 146:cmsis_boot/system_stm32f0xx.c ****   */
 147:cmsis_boot/system_stm32f0xx.c **** 
 148:cmsis_boot/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 149:cmsis_boot/system_stm32f0xx.c ****   * @{
 150:cmsis_boot/system_stm32f0xx.c ****   */
 151:cmsis_boot/system_stm32f0xx.c **** 
 152:cmsis_boot/system_stm32f0xx.c **** /**
 153:cmsis_boot/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system.
 154:cmsis_boot/system_stm32f0xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 155:cmsis_boot/system_stm32f0xx.c ****   *         SystemCoreClock variable.
 156:cmsis_boot/system_stm32f0xx.c ****   * @param  None
 157:cmsis_boot/system_stm32f0xx.c ****   * @retval None
 158:cmsis_boot/system_stm32f0xx.c ****   */
 159:cmsis_boot/system_stm32f0xx.c **** void SystemInit (void)
 160:cmsis_boot/system_stm32f0xx.c **** {    
  92              		.loc 1 160 0
  93              		.cfi_startproc
  94 0000 10B5     		push	{r4, lr}	@
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
 161:cmsis_boot/system_stm32f0xx.c **** 	/* Set HSION bit */
 162:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR |= (uint32_t)0x00000001;
  99              		.loc 1 162 0
 100 0002 1B4B     		ldr	r3, .L2	@ D.4966,
 101 0004 1A4A     		ldr	r2, .L2	@ D.4966,
 102 0006 1268     		ldr	r2, [r2]	@ D.4967, _2->CR
 103 0008 0121     		movs	r1, #1	@ tmp143,
 104 000a 0A43     		orrs	r2, r1	@ D.4967, tmp143
 105 000c 1A60     		str	r2, [r3]	@ D.4967, _1->CR
 163:cmsis_boot/system_stm32f0xx.c **** 
 164:cmsis_boot/system_stm32f0xx.c **** 	/* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
 165:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR &= (uint32_t)0xF8FFB80C;
 106              		.loc 1 165 0
 107 000e 184B     		ldr	r3, .L2	@ D.4966,
 108 0010 174A     		ldr	r2, .L2	@ D.4966,
 109 0012 5268     		ldr	r2, [r2, #4]	@ D.4967, _8->CFGR
 110 0014 1749     		ldr	r1, .L2+4	@ tmp144,
 111 0016 0A40     		ands	r2, r1	@ D.4967, tmp144
 112 0018 5A60     		str	r2, [r3, #4]	@ D.4967, _7->CFGR
 166:cmsis_boot/system_stm32f0xx.c **** 
 167:cmsis_boot/system_stm32f0xx.c **** 	/* Reset HSEON, CSSON and PLLON bits */
 168:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR &= (uint32_t)0xFEF6FFFF;
 113              		.loc 1 168 0
 114 001a 154B     		ldr	r3, .L2	@ D.4966,
 115 001c 144A     		ldr	r2, .L2	@ D.4966,
 116 001e 1268     		ldr	r2, [r2]	@ D.4967, _13->CR
 117 0020 1549     		ldr	r1, .L2+8	@ tmp145,
ARM GAS  /tmp/cckUWzaN.s 			page 6


 118 0022 0A40     		ands	r2, r1	@ D.4967, tmp145
 119 0024 1A60     		str	r2, [r3]	@ D.4967, _12->CR
 169:cmsis_boot/system_stm32f0xx.c **** 
 170:cmsis_boot/system_stm32f0xx.c **** 	/* Reset HSEBYP bit */
 171:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR &= (uint32_t)0xFFFBFFFF;
 120              		.loc 1 171 0
 121 0026 124B     		ldr	r3, .L2	@ D.4966,
 122 0028 114A     		ldr	r2, .L2	@ D.4966,
 123 002a 1268     		ldr	r2, [r2]	@ D.4967, _18->CR
 124 002c 1349     		ldr	r1, .L2+12	@ tmp146,
 125 002e 0A40     		ands	r2, r1	@ D.4967, tmp146
 126 0030 1A60     		str	r2, [r3]	@ D.4967, _17->CR
 172:cmsis_boot/system_stm32f0xx.c **** 
 173:cmsis_boot/system_stm32f0xx.c **** 	/* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 174:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR &= (uint32_t)0xFFC0FFFF;
 127              		.loc 1 174 0
 128 0032 0F4B     		ldr	r3, .L2	@ D.4966,
 129 0034 0E4A     		ldr	r2, .L2	@ D.4966,
 130 0036 5268     		ldr	r2, [r2, #4]	@ D.4967, _23->CFGR
 131 0038 1149     		ldr	r1, .L2+16	@ tmp147,
 132 003a 0A40     		ands	r2, r1	@ D.4967, tmp147
 133 003c 5A60     		str	r2, [r3, #4]	@ D.4967, _22->CFGR
 175:cmsis_boot/system_stm32f0xx.c **** 
 176:cmsis_boot/system_stm32f0xx.c **** 	/* Reset PREDIV1[3:0] bits */
 177:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 134              		.loc 1 177 0
 135 003e 0C4B     		ldr	r3, .L2	@ D.4966,
 136 0040 0B4A     		ldr	r2, .L2	@ D.4966,
 137 0042 D26A     		ldr	r2, [r2, #44]	@ D.4967, _28->CFGR2
 138 0044 0F21     		movs	r1, #15	@ tmp148,
 139 0046 8A43     		bics	r2, r1	@ D.4967, tmp148
 140 0048 DA62     		str	r2, [r3, #44]	@ D.4967, _27->CFGR2
 178:cmsis_boot/system_stm32f0xx.c **** 
 179:cmsis_boot/system_stm32f0xx.c **** 	/* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
 180:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
 141              		.loc 1 180 0
 142 004a 094B     		ldr	r3, .L2	@ D.4966,
 143 004c 084A     		ldr	r2, .L2	@ D.4966,
 144 004e 126B     		ldr	r2, [r2, #48]	@ D.4967, _33->CFGR3
 145 0050 0C49     		ldr	r1, .L2+20	@ tmp149,
 146 0052 0A40     		ands	r2, r1	@ D.4967, tmp149
 147 0054 1A63     		str	r2, [r3, #48]	@ D.4967, _32->CFGR3
 181:cmsis_boot/system_stm32f0xx.c **** 
 182:cmsis_boot/system_stm32f0xx.c **** 	/* Reset HSI14 bit */
 183:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 148              		.loc 1 183 0
 149 0056 064B     		ldr	r3, .L2	@ D.4966,
 150 0058 054A     		ldr	r2, .L2	@ D.4966,
 151 005a 526B     		ldr	r2, [r2, #52]	@ D.4967, _38->CR2
 152 005c 0121     		movs	r1, #1	@ tmp150,
 153 005e 8A43     		bics	r2, r1	@ D.4967, tmp150
 154 0060 5A63     		str	r2, [r3, #52]	@ D.4967, _37->CR2
 184:cmsis_boot/system_stm32f0xx.c **** 
 185:cmsis_boot/system_stm32f0xx.c **** 	/* Disable all interrupts */
 186:cmsis_boot/system_stm32f0xx.c **** 	RCC->CIR = 0x00000000;
 155              		.loc 1 186 0
 156 0062 034B     		ldr	r3, .L2	@ D.4966,
ARM GAS  /tmp/cckUWzaN.s 			page 7


 157 0064 0022     		movs	r2, #0	@ tmp151,
 158 0066 9A60     		str	r2, [r3, #8]	@ tmp151, _42->CIR
 187:cmsis_boot/system_stm32f0xx.c **** 
 188:cmsis_boot/system_stm32f0xx.c **** 	/* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
 189:cmsis_boot/system_stm32f0xx.c **** 	//SetSysClock();
 190:cmsis_boot/system_stm32f0xx.c **** 	SetSysClockInternalRC();
 159              		.loc 1 190 0
 160 0068 FFF7FEFF 		bl	SetSysClockInternalRC	@
 191:cmsis_boot/system_stm32f0xx.c **** }
 161              		.loc 1 191 0
 162 006c C046     		nop
 163              		@ sp needed	@
 164 006e 10BD     		pop	{r4, pc}
 165              	.L3:
 166              		.align	2
 167              	.L2:
 168 0070 00100240 		.word	1073876992
 169 0074 0CB8FFF8 		.word	-117458932
 170 0078 FFFFF6FE 		.word	-17367041
 171 007c FFFFFBFF 		.word	-262145
 172 0080 FFFFC0FF 		.word	-4128769
 173 0084 ACFEFFFF 		.word	-340
 174              		.cfi_endproc
 175              	.LFE20:
 176              		.size	SystemInit, .-SystemInit
 177              		.global	__aeabi_uidiv
 178              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 179              		.align	2
 180              		.global	SystemCoreClockUpdate
 181              		.code	16
 182              		.thumb_func
 183              		.type	SystemCoreClockUpdate, %function
 184              	SystemCoreClockUpdate:
 185              	.LFB21:
 192:cmsis_boot/system_stm32f0xx.c **** 
 193:cmsis_boot/system_stm32f0xx.c **** /**
 194:cmsis_boot/system_stm32f0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 195:cmsis_boot/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 196:cmsis_boot/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 197:cmsis_boot/system_stm32f0xx.c ****   *         other parameters.
 198:cmsis_boot/system_stm32f0xx.c ****   *
 199:cmsis_boot/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 200:cmsis_boot/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 201:cmsis_boot/system_stm32f0xx.c ****   *         based on this variable will be incorrect.         
 202:cmsis_boot/system_stm32f0xx.c ****   *
 203:cmsis_boot/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real 
 204:cmsis_boot/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 205:cmsis_boot/system_stm32f0xx.c ****   *           constant and the selected clock source:
 206:cmsis_boot/system_stm32f0xx.c ****   *
 207:cmsis_boot/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 208:cmsis_boot/system_stm32f0xx.c ****   *                                              
 209:cmsis_boot/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 210:cmsis_boot/system_stm32f0xx.c ****   *                          
 211:cmsis_boot/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 212:cmsis_boot/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 213:cmsis_boot/system_stm32f0xx.c ****   *
 214:cmsis_boot/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx.h file (default value
ARM GAS  /tmp/cckUWzaN.s 			page 8


 215:cmsis_boot/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 216:cmsis_boot/system_stm32f0xx.c ****   *             in voltage and temperature.
 217:cmsis_boot/system_stm32f0xx.c ****   *
 218:cmsis_boot/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx.h file (default value
 219:cmsis_boot/system_stm32f0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 220:cmsis_boot/system_stm32f0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 221:cmsis_boot/system_stm32f0xx.c ****   *              have wrong result.
 222:cmsis_boot/system_stm32f0xx.c ****   *
 223:cmsis_boot/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 224:cmsis_boot/system_stm32f0xx.c ****   *           value for HSE crystal.
 225:cmsis_boot/system_stm32f0xx.c ****   * @param  None
 226:cmsis_boot/system_stm32f0xx.c ****   * @retval None
 227:cmsis_boot/system_stm32f0xx.c ****   */
 228:cmsis_boot/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 229:cmsis_boot/system_stm32f0xx.c **** {
 186              		.loc 1 229 0
 187              		.cfi_startproc
 188 0000 00B5     		push	{lr}	@
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 4
 191              		.cfi_offset 14, -4
 192 0002 85B0     		sub	sp, sp, #20	@,,
 193              	.LCFI2:
 194              		.cfi_def_cfa_offset 24
 230:cmsis_boot/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 195              		.loc 1 230 0
 196 0004 0023     		movs	r3, #0	@ tmp130,
 197 0006 0393     		str	r3, [sp, #12]	@ tmp130, tmp
 198 0008 0023     		movs	r3, #0	@ tmp131,
 199 000a 0293     		str	r3, [sp, #8]	@ tmp131, pllmull
 200 000c 0023     		movs	r3, #0	@ tmp132,
 201 000e 0193     		str	r3, [sp, #4]	@ tmp132, pllsource
 202 0010 0023     		movs	r3, #0	@ tmp133,
 203 0012 0093     		str	r3, [sp]	@ tmp133, prediv1factor
 231:cmsis_boot/system_stm32f0xx.c **** 
 232:cmsis_boot/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 233:cmsis_boot/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 204              		.loc 1 233 0
 205 0014 294B     		ldr	r3, .L13	@ D.4968,
 206 0016 5B68     		ldr	r3, [r3, #4]	@ D.4969, _7->CFGR
 207 0018 0C22     		movs	r2, #12	@ tmp135,
 208 001a 1340     		ands	r3, r2	@ tmp134, tmp135
 209 001c 0393     		str	r3, [sp, #12]	@ tmp134, tmp
 234:cmsis_boot/system_stm32f0xx.c ****   
 235:cmsis_boot/system_stm32f0xx.c ****   switch (tmp)
 210              		.loc 1 235 0
 211 001e 039B     		ldr	r3, [sp, #12]	@ tmp, tmp
 212 0020 042B     		cmp	r3, #4	@ tmp,
 213 0022 07D0     		beq	.L6	@,
 214 0024 082B     		cmp	r3, #8	@ tmp,
 215 0026 09D0     		beq	.L7	@,
 216 0028 002B     		cmp	r3, #0	@ tmp,
 217 002a 31D1     		bne	.L12	@,
 236:cmsis_boot/system_stm32f0xx.c ****   {
 237:cmsis_boot/system_stm32f0xx.c ****     case 0x00:  /* HSI used as system clock */
 238:cmsis_boot/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 218              		.loc 1 238 0
ARM GAS  /tmp/cckUWzaN.s 			page 9


 219 002c 244B     		ldr	r3, .L13+4	@ tmp137,
 220 002e 254A     		ldr	r2, .L13+8	@ tmp138,
 221 0030 1A60     		str	r2, [r3]	@ tmp138, SystemCoreClock
 239:cmsis_boot/system_stm32f0xx.c ****       break;
 222              		.loc 1 239 0
 223 0032 31E0     		b	.L9	@
 224              	.L6:
 240:cmsis_boot/system_stm32f0xx.c ****     case 0x04:  /* HSE used as system clock */
 241:cmsis_boot/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 225              		.loc 1 241 0
 226 0034 224B     		ldr	r3, .L13+4	@ tmp139,
 227 0036 234A     		ldr	r2, .L13+8	@ tmp140,
 228 0038 1A60     		str	r2, [r3]	@ tmp140, SystemCoreClock
 242:cmsis_boot/system_stm32f0xx.c ****       break;
 229              		.loc 1 242 0
 230 003a 2DE0     		b	.L9	@
 231              	.L7:
 243:cmsis_boot/system_stm32f0xx.c ****     case 0x08:  /* PLL used as system clock */
 244:cmsis_boot/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 245:cmsis_boot/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 232              		.loc 1 245 0
 233 003c 1F4B     		ldr	r3, .L13	@ D.4968,
 234 003e 5A68     		ldr	r2, [r3, #4]	@ D.4969, _13->CFGR
 235 0040 F023     		movs	r3, #240	@ tmp167,
 236 0042 9B03     		lsls	r3, r3, #14	@ tmp142, tmp167,
 237 0044 1340     		ands	r3, r2	@ tmp141, D.4969
 238 0046 0293     		str	r3, [sp, #8]	@ tmp141, pllmull
 246:cmsis_boot/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 239              		.loc 1 246 0
 240 0048 1C4B     		ldr	r3, .L13	@ D.4968,
 241 004a 5A68     		ldr	r2, [r3, #4]	@ D.4969, _16->CFGR
 242 004c C023     		movs	r3, #192	@ tmp168,
 243 004e 5B02     		lsls	r3, r3, #9	@ tmp144, tmp168,
 244 0050 1340     		ands	r3, r2	@ tmp143, D.4969
 245 0052 0193     		str	r3, [sp, #4]	@ tmp143, pllsource
 247:cmsis_boot/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 246              		.loc 1 247 0
 247 0054 029B     		ldr	r3, [sp, #8]	@ tmp145, pllmull
 248 0056 9B0C     		lsrs	r3, r3, #18	@ D.4969, tmp145,
 249 0058 0233     		adds	r3, r3, #2	@ tmp146,
 250 005a 0293     		str	r3, [sp, #8]	@ tmp146, pllmull
 248:cmsis_boot/system_stm32f0xx.c ****       
 249:cmsis_boot/system_stm32f0xx.c ****       if (pllsource == 0x00)
 251              		.loc 1 249 0
 252 005c 019B     		ldr	r3, [sp, #4]	@ tmp147, pllsource
 253 005e 002B     		cmp	r3, #0	@ tmp147,
 254 0060 05D1     		bne	.L10	@,
 250:cmsis_boot/system_stm32f0xx.c ****       {
 251:cmsis_boot/system_stm32f0xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 252:cmsis_boot/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 255              		.loc 1 252 0
 256 0062 029B     		ldr	r3, [sp, #8]	@ tmp148, pllmull
 257 0064 184A     		ldr	r2, .L13+12	@ tmp149,
 258 0066 5A43     		muls	r2, r3	@ D.4969, tmp148
 259 0068 154B     		ldr	r3, .L13+4	@ tmp150,
 260 006a 1A60     		str	r2, [r3]	@ D.4969, SystemCoreClock
 253:cmsis_boot/system_stm32f0xx.c ****       }
ARM GAS  /tmp/cckUWzaN.s 			page 10


 254:cmsis_boot/system_stm32f0xx.c ****       else
 255:cmsis_boot/system_stm32f0xx.c ****       {
 256:cmsis_boot/system_stm32f0xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 257:cmsis_boot/system_stm32f0xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 258:cmsis_boot/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 259:cmsis_boot/system_stm32f0xx.c ****       }      
 260:cmsis_boot/system_stm32f0xx.c ****       break;
 261              		.loc 1 260 0
 262 006c 14E0     		b	.L9	@
 263              	.L10:
 256:cmsis_boot/system_stm32f0xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 264              		.loc 1 256 0
 265 006e 134B     		ldr	r3, .L13	@ D.4968,
 266 0070 DB6A     		ldr	r3, [r3, #44]	@ D.4969, _23->CFGR2
 267 0072 0F22     		movs	r2, #15	@ tmp151,
 268 0074 1340     		ands	r3, r2	@ D.4969, tmp151
 269 0076 0133     		adds	r3, r3, #1	@ tmp152,
 270 0078 0093     		str	r3, [sp]	@ tmp152, prediv1factor
 258:cmsis_boot/system_stm32f0xx.c ****       }      
 271              		.loc 1 258 0
 272 007a 0099     		ldr	r1, [sp]	@, prediv1factor
 273 007c 1148     		ldr	r0, .L13+8	@,
 274 007e FFF7FEFF 		bl	__aeabi_uidiv	@
 275 0082 0300     		movs	r3, r0	@ tmp155,
 276 0084 1A00     		movs	r2, r3	@ D.4969, tmp155
 277 0086 029B     		ldr	r3, [sp, #8]	@ tmp156, pllmull
 278 0088 5A43     		muls	r2, r3	@ D.4969, tmp156
 279 008a 0D4B     		ldr	r3, .L13+4	@ tmp157,
 280 008c 1A60     		str	r2, [r3]	@ D.4969, SystemCoreClock
 281              		.loc 1 260 0
 282 008e 03E0     		b	.L9	@
 283              	.L12:
 261:cmsis_boot/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 262:cmsis_boot/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 284              		.loc 1 262 0
 285 0090 0B4B     		ldr	r3, .L13+4	@ tmp158,
 286 0092 0C4A     		ldr	r2, .L13+8	@ tmp159,
 287 0094 1A60     		str	r2, [r3]	@ tmp159, SystemCoreClock
 263:cmsis_boot/system_stm32f0xx.c ****       break;
 288              		.loc 1 263 0
 289 0096 C046     		nop
 290              	.L9:
 264:cmsis_boot/system_stm32f0xx.c ****   }
 265:cmsis_boot/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 266:cmsis_boot/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 267:cmsis_boot/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 291              		.loc 1 267 0
 292 0098 084B     		ldr	r3, .L13	@ D.4968,
 293 009a 5B68     		ldr	r3, [r3, #4]	@ D.4969, _31->CFGR
 294 009c F022     		movs	r2, #240	@ tmp160,
 295 009e 1340     		ands	r3, r2	@ D.4969, tmp160
 296 00a0 1B09     		lsrs	r3, r3, #4	@ D.4969, D.4969,
 297 00a2 0A4A     		ldr	r2, .L13+16	@ tmp161,
 298 00a4 D35C     		ldrb	r3, [r2, r3]	@ tmp163, AHBPrescTable
 299 00a6 DBB2     		uxtb	r3, r3	@ D.4970, tmp163
 300 00a8 0393     		str	r3, [sp, #12]	@ D.4970, tmp
 268:cmsis_boot/system_stm32f0xx.c ****   /* HCLK clock frequency */
ARM GAS  /tmp/cckUWzaN.s 			page 11


 269:cmsis_boot/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;  
 301              		.loc 1 269 0
 302 00aa 054B     		ldr	r3, .L13+4	@ tmp164,
 303 00ac 1A68     		ldr	r2, [r3]	@ D.4969, SystemCoreClock
 304 00ae 039B     		ldr	r3, [sp, #12]	@ tmp165, tmp
 305 00b0 DA40     		lsrs	r2, r2, r3	@ D.4969, D.4969, tmp165
 306 00b2 034B     		ldr	r3, .L13+4	@ tmp166,
 307 00b4 1A60     		str	r2, [r3]	@ D.4969, SystemCoreClock
 270:cmsis_boot/system_stm32f0xx.c **** }
 308              		.loc 1 270 0
 309 00b6 C046     		nop
 310 00b8 05B0     		add	sp, sp, #20	@,,
 311              		@ sp needed	@
 312 00ba 00BD     		pop	{pc}
 313              	.L14:
 314              		.align	2
 315              	.L13:
 316 00bc 00100240 		.word	1073876992
 317 00c0 00000000 		.word	SystemCoreClock
 318 00c4 00127A00 		.word	8000000
 319 00c8 00093D00 		.word	4000000
 320 00cc 00000000 		.word	AHBPrescTable
 321              		.cfi_endproc
 322              	.LFE21:
 323              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 324              		.section	.text.SetSysClock,"ax",%progbits
 325              		.align	2
 326              		.code	16
 327              		.thumb_func
 328              		.type	SetSysClock, %function
 329              	SetSysClock:
 330              	.LFB22:
 271:cmsis_boot/system_stm32f0xx.c **** 
 272:cmsis_boot/system_stm32f0xx.c **** /**
 273:cmsis_boot/system_stm32f0xx.c ****   * @brief  Configures the System clock frequency, AHB/APBx prescalers and Flash
 274:cmsis_boot/system_stm32f0xx.c ****   *         settings.
 275:cmsis_boot/system_stm32f0xx.c ****   * @note   This function should be called only once the RCC clock configuration
 276:cmsis_boot/system_stm32f0xx.c ****   *         is reset to the default reset state (done in SystemInit() function).
 277:cmsis_boot/system_stm32f0xx.c ****   * @param  None
 278:cmsis_boot/system_stm32f0xx.c ****   * @retval None
 279:cmsis_boot/system_stm32f0xx.c ****   */
 280:cmsis_boot/system_stm32f0xx.c **** static void SetSysClock(void)
 281:cmsis_boot/system_stm32f0xx.c **** {
 331              		.loc 1 281 0
 332              		.cfi_startproc
 333 0000 82B0     		sub	sp, sp, #8	@,,
 334              	.LCFI3:
 335              		.cfi_def_cfa_offset 8
 282:cmsis_boot/system_stm32f0xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 336              		.loc 1 282 0
 337 0002 0023     		movs	r3, #0	@ tmp202,
 338 0004 0193     		str	r3, [sp, #4]	@ tmp202, StartUpCounter
 339 0006 0023     		movs	r3, #0	@ tmp203,
 340 0008 0093     		str	r3, [sp]	@ tmp203, HSEStatus
 283:cmsis_boot/system_stm32f0xx.c ****   
 284:cmsis_boot/system_stm32f0xx.c ****   /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
 285:cmsis_boot/system_stm32f0xx.c ****   /* Enable HSE */    
ARM GAS  /tmp/cckUWzaN.s 			page 12


 286:cmsis_boot/system_stm32f0xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 341              		.loc 1 286 0
 342 000a 574B     		ldr	r3, .L28	@ D.4971,
 343 000c 564A     		ldr	r2, .L28	@ D.4971,
 344 000e 1268     		ldr	r2, [r2]	@ D.4972, _8->CR
 345 0010 8021     		movs	r1, #128	@ tmp238,
 346 0012 4902     		lsls	r1, r1, #9	@ tmp204, tmp238,
 347 0014 0A43     		orrs	r2, r1	@ D.4972, tmp204
 348 0016 1A60     		str	r2, [r3]	@ D.4972, _7->CR
 349              	.L17:
 287:cmsis_boot/system_stm32f0xx.c ****  
 288:cmsis_boot/system_stm32f0xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 289:cmsis_boot/system_stm32f0xx.c ****   do
 290:cmsis_boot/system_stm32f0xx.c ****   {
 291:cmsis_boot/system_stm32f0xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 350              		.loc 1 291 0 discriminator 2
 351 0018 534B     		ldr	r3, .L28	@ D.4971,
 352 001a 1A68     		ldr	r2, [r3]	@ D.4972, _12->CR
 353 001c 8023     		movs	r3, #128	@ tmp237,
 354 001e 9B02     		lsls	r3, r3, #10	@ tmp205, tmp237,
 355 0020 1340     		ands	r3, r2	@ D.4972, D.4972
 356 0022 0093     		str	r3, [sp]	@ D.4972, HSEStatus
 292:cmsis_boot/system_stm32f0xx.c ****     StartUpCounter++;  
 357              		.loc 1 292 0 discriminator 2
 358 0024 019B     		ldr	r3, [sp, #4]	@ D.4972, StartUpCounter
 359 0026 0133     		adds	r3, r3, #1	@ D.4972,
 360 0028 0193     		str	r3, [sp, #4]	@ D.4972, StartUpCounter
 293:cmsis_boot/system_stm32f0xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 361              		.loc 1 293 0 discriminator 2
 362 002a 009B     		ldr	r3, [sp]	@ D.4972, HSEStatus
 363 002c 002B     		cmp	r3, #0	@ D.4972,
 364 002e 04D1     		bne	.L16	@,
 365              		.loc 1 293 0 is_stmt 0 discriminator 1
 366 0030 019A     		ldr	r2, [sp, #4]	@ D.4972, StartUpCounter
 367 0032 A023     		movs	r3, #160	@ tmp236,
 368 0034 DB01     		lsls	r3, r3, #7	@ tmp206, tmp236,
 369 0036 9A42     		cmp	r2, r3	@ D.4972, tmp206
 370 0038 EED1     		bne	.L17	@,
 371              	.L16:
 294:cmsis_boot/system_stm32f0xx.c **** 
 295:cmsis_boot/system_stm32f0xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 372              		.loc 1 295 0 is_stmt 1
 373 003a 4B4B     		ldr	r3, .L28	@ D.4971,
 374 003c 1A68     		ldr	r2, [r3]	@ D.4972, _21->CR
 375 003e 8023     		movs	r3, #128	@ tmp235,
 376 0040 9B02     		lsls	r3, r3, #10	@ tmp207, tmp235,
 377 0042 1340     		ands	r3, r2	@ D.4972, D.4972
 378 0044 02D0     		beq	.L18	@,
 296:cmsis_boot/system_stm32f0xx.c ****   {
 297:cmsis_boot/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x01;
 379              		.loc 1 297 0
 380 0046 0123     		movs	r3, #1	@ tmp208,
 381 0048 0093     		str	r3, [sp]	@ tmp208, HSEStatus
 382 004a 01E0     		b	.L19	@
 383              	.L18:
 298:cmsis_boot/system_stm32f0xx.c ****   }
 299:cmsis_boot/system_stm32f0xx.c ****   else
ARM GAS  /tmp/cckUWzaN.s 			page 13


 300:cmsis_boot/system_stm32f0xx.c ****   {
 301:cmsis_boot/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x00;
 384              		.loc 1 301 0
 385 004c 0023     		movs	r3, #0	@ tmp209,
 386 004e 0093     		str	r3, [sp]	@ tmp209, HSEStatus
 387              	.L19:
 302:cmsis_boot/system_stm32f0xx.c ****   }  
 303:cmsis_boot/system_stm32f0xx.c **** 
 304:cmsis_boot/system_stm32f0xx.c ****   if (HSEStatus == (uint32_t)0x01)
 388              		.loc 1 304 0
 389 0050 009B     		ldr	r3, [sp]	@ D.4972, HSEStatus
 390 0052 012B     		cmp	r3, #1	@ D.4972,
 391 0054 39D1     		bne	.L20	@,
 305:cmsis_boot/system_stm32f0xx.c ****   {
 306:cmsis_boot/system_stm32f0xx.c ****     /* Enable Prefetch Buffer and set Flash Latency */
 307:cmsis_boot/system_stm32f0xx.c ****     FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 392              		.loc 1 307 0
 393 0056 454B     		ldr	r3, .L28+4	@ D.4973,
 394 0058 1122     		movs	r2, #17	@ tmp210,
 395 005a 1A60     		str	r2, [r3]	@ tmp210, _27->ACR
 308:cmsis_boot/system_stm32f0xx.c ****  
 309:cmsis_boot/system_stm32f0xx.c ****     /* HCLK = SYSCLK */
 310:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 396              		.loc 1 310 0
 397 005c 424B     		ldr	r3, .L28	@ D.4971,
 398 005e 424A     		ldr	r2, .L28	@ D.4971,
 399 0060 5268     		ldr	r2, [r2, #4]	@ D.4972, _30->CFGR
 400 0062 5A60     		str	r2, [r3, #4]	@ D.4972, _29->CFGR
 311:cmsis_boot/system_stm32f0xx.c ****       
 312:cmsis_boot/system_stm32f0xx.c ****     /* PCLK = HCLK */
 313:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 401              		.loc 1 313 0
 402 0064 404B     		ldr	r3, .L28	@ D.4971,
 403 0066 404A     		ldr	r2, .L28	@ D.4971,
 404 0068 5268     		ldr	r2, [r2, #4]	@ D.4972, _34->CFGR
 405 006a 5A60     		str	r2, [r3, #4]	@ D.4972, _33->CFGR
 314:cmsis_boot/system_stm32f0xx.c **** 
 315:cmsis_boot/system_stm32f0xx.c ****     /* PLL configuration = HSE * 6 = 48 MHz */
 316:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 406              		.loc 1 316 0
 407 006c 3E4B     		ldr	r3, .L28	@ D.4971,
 408 006e 3E4A     		ldr	r2, .L28	@ D.4971,
 409 0070 5268     		ldr	r2, [r2, #4]	@ D.4972, _38->CFGR
 410 0072 3F49     		ldr	r1, .L28+8	@ tmp211,
 411 0074 0A40     		ands	r2, r1	@ D.4972, tmp211
 412 0076 5A60     		str	r2, [r3, #4]	@ D.4972, _37->CFGR
 317:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL6
 413              		.loc 1 317 0
 414 0078 3B4B     		ldr	r3, .L28	@ D.4971,
 415 007a 3B4A     		ldr	r2, .L28	@ D.4971,
 416 007c 5268     		ldr	r2, [r2, #4]	@ D.4972, _43->CFGR
 417 007e 8821     		movs	r1, #136	@ tmp233,
 418 0080 4903     		lsls	r1, r1, #13	@ tmp212, tmp233,
 419 0082 0A43     		orrs	r2, r1	@ D.4972, tmp212
 420 0084 5A60     		str	r2, [r3, #4]	@ D.4972, _42->CFGR
 318:cmsis_boot/system_stm32f0xx.c ****             
 319:cmsis_boot/system_stm32f0xx.c ****     /* Enable PLL */
ARM GAS  /tmp/cckUWzaN.s 			page 14


 320:cmsis_boot/system_stm32f0xx.c ****     RCC->CR |= RCC_CR_PLLON;
 421              		.loc 1 320 0
 422 0086 384B     		ldr	r3, .L28	@ D.4971,
 423 0088 374A     		ldr	r2, .L28	@ D.4971,
 424 008a 1268     		ldr	r2, [r2]	@ D.4972, _48->CR
 425 008c 8021     		movs	r1, #128	@ tmp234,
 426 008e 4904     		lsls	r1, r1, #17	@ tmp213, tmp234,
 427 0090 0A43     		orrs	r2, r1	@ D.4972, tmp213
 428 0092 1A60     		str	r2, [r3]	@ D.4972, _47->CR
 321:cmsis_boot/system_stm32f0xx.c **** 
 322:cmsis_boot/system_stm32f0xx.c ****     /* Wait till PLL is ready */
 323:cmsis_boot/system_stm32f0xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 429              		.loc 1 323 0
 430 0094 C046     		nop
 431              	.L21:
 432              		.loc 1 323 0 is_stmt 0 discriminator 1
 433 0096 344B     		ldr	r3, .L28	@ D.4971,
 434 0098 1A68     		ldr	r2, [r3]	@ D.4972, _52->CR
 435 009a 8023     		movs	r3, #128	@ tmp232,
 436 009c 9B04     		lsls	r3, r3, #18	@ tmp214, tmp232,
 437 009e 1340     		ands	r3, r2	@ D.4972, D.4972
 438 00a0 F9D0     		beq	.L21	@,
 324:cmsis_boot/system_stm32f0xx.c ****     {
 325:cmsis_boot/system_stm32f0xx.c ****     }
 326:cmsis_boot/system_stm32f0xx.c **** 
 327:cmsis_boot/system_stm32f0xx.c ****     /* Select PLL as system clock source */
 328:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 439              		.loc 1 328 0 is_stmt 1
 440 00a2 314B     		ldr	r3, .L28	@ D.4971,
 441 00a4 304A     		ldr	r2, .L28	@ D.4971,
 442 00a6 5268     		ldr	r2, [r2, #4]	@ D.4972, _56->CFGR
 443 00a8 0321     		movs	r1, #3	@ tmp215,
 444 00aa 8A43     		bics	r2, r1	@ D.4972, tmp215
 445 00ac 5A60     		str	r2, [r3, #4]	@ D.4972, _55->CFGR
 329:cmsis_boot/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 446              		.loc 1 329 0
 447 00ae 2E4B     		ldr	r3, .L28	@ D.4971,
 448 00b0 2D4A     		ldr	r2, .L28	@ D.4971,
 449 00b2 5268     		ldr	r2, [r2, #4]	@ D.4972, _61->CFGR
 450 00b4 0221     		movs	r1, #2	@ tmp216,
 451 00b6 0A43     		orrs	r2, r1	@ D.4972, tmp216
 452 00b8 5A60     		str	r2, [r3, #4]	@ D.4972, _60->CFGR
 330:cmsis_boot/system_stm32f0xx.c **** 
 331:cmsis_boot/system_stm32f0xx.c ****     /* Wait till PLL is used as system clock source */
 332:cmsis_boot/system_stm32f0xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 453              		.loc 1 332 0
 454 00ba C046     		nop
 455              	.L22:
 456              		.loc 1 332 0 is_stmt 0 discriminator 1
 457 00bc 2A4B     		ldr	r3, .L28	@ D.4971,
 458 00be 5B68     		ldr	r3, [r3, #4]	@ D.4972, _65->CFGR
 459 00c0 0C22     		movs	r2, #12	@ tmp217,
 460 00c2 1340     		ands	r3, r2	@ D.4972, tmp217
 461 00c4 082B     		cmp	r3, #8	@ D.4972,
 462 00c6 F9D1     		bne	.L22	@,
 333:cmsis_boot/system_stm32f0xx.c ****     {
 334:cmsis_boot/system_stm32f0xx.c ****     }
ARM GAS  /tmp/cckUWzaN.s 			page 15


 335:cmsis_boot/system_stm32f0xx.c ****   }
 336:cmsis_boot/system_stm32f0xx.c ****   else
 337:cmsis_boot/system_stm32f0xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 338:cmsis_boot/system_stm32f0xx.c ****          configuration. User can add here some code to deal with this error */
 339:cmsis_boot/system_stm32f0xx.c **** 	  //--- Enable HSI clock ---//
 340:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CR |= 0x00000001;
 341:cmsis_boot/system_stm32f0xx.c **** 
 342:cmsis_boot/system_stm32f0xx.c **** 	  //--- Wait for PLL ready ---//
 343:cmsis_boot/system_stm32f0xx.c **** 	  while (!(RCC->CR & 0x00000002));
 344:cmsis_boot/system_stm32f0xx.c **** 
 345:cmsis_boot/system_stm32f0xx.c **** 	  /* Enable Prefetch Buffer and set Flash Latency */
 346:cmsis_boot/system_stm32f0xx.c **** 	  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 347:cmsis_boot/system_stm32f0xx.c **** 
 348:cmsis_boot/system_stm32f0xx.c **** 	  /* HCLK = SYSCLK */
 349:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 350:cmsis_boot/system_stm32f0xx.c **** 
 351:cmsis_boot/system_stm32f0xx.c **** 	  /* PCLK = HCLK */
 352:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 353:cmsis_boot/system_stm32f0xx.c **** 
 354:cmsis_boot/system_stm32f0xx.c **** 	  /* PLL configuration = HSI/2 * 12 = 48 MHz */
 355:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR &= ~0x00010000; //PLL in HSI/2
 356:cmsis_boot/system_stm32f0xx.c **** 
 357:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR &= ~0x003C0000;
 358:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= 0x00280000;  //PLL mult x12
 359:cmsis_boot/system_stm32f0xx.c **** 
 360:cmsis_boot/system_stm32f0xx.c **** 	  /* Enable PLL */
 361:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CR |= RCC_CR_PLLON;
 362:cmsis_boot/system_stm32f0xx.c **** 
 363:cmsis_boot/system_stm32f0xx.c **** 	  /* Wait till PLL is ready */
 364:cmsis_boot/system_stm32f0xx.c **** 	  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 365:cmsis_boot/system_stm32f0xx.c **** 	  {
 366:cmsis_boot/system_stm32f0xx.c **** 	  }
 367:cmsis_boot/system_stm32f0xx.c **** 
 368:cmsis_boot/system_stm32f0xx.c **** 	  /* Select PLL as system clock source */
 369:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 370:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 371:cmsis_boot/system_stm32f0xx.c **** 
 372:cmsis_boot/system_stm32f0xx.c **** 	  /* Wait till PLL is used as system clock source */
 373:cmsis_boot/system_stm32f0xx.c **** 	  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 374:cmsis_boot/system_stm32f0xx.c **** 	  {
 375:cmsis_boot/system_stm32f0xx.c **** 	  }
 376:cmsis_boot/system_stm32f0xx.c ****   }  
 377:cmsis_boot/system_stm32f0xx.c **** }
 463              		.loc 1 377 0 is_stmt 1
 464 00c8 4AE0     		b	.L27	@
 465              	.L20:
 340:cmsis_boot/system_stm32f0xx.c **** 
 466              		.loc 1 340 0
 467 00ca 274B     		ldr	r3, .L28	@ D.4971,
 468 00cc 264A     		ldr	r2, .L28	@ D.4971,
 469 00ce 1268     		ldr	r2, [r2]	@ D.4972, _69->CR
 470 00d0 0121     		movs	r1, #1	@ tmp218,
 471 00d2 0A43     		orrs	r2, r1	@ D.4972, tmp218
 472 00d4 1A60     		str	r2, [r3]	@ D.4972, _68->CR
 343:cmsis_boot/system_stm32f0xx.c **** 
 473              		.loc 1 343 0
 474 00d6 C046     		nop
ARM GAS  /tmp/cckUWzaN.s 			page 16


 475              	.L24:
 343:cmsis_boot/system_stm32f0xx.c **** 
 476              		.loc 1 343 0 is_stmt 0 discriminator 1
 477 00d8 234B     		ldr	r3, .L28	@ D.4971,
 478 00da 1B68     		ldr	r3, [r3]	@ D.4972, _73->CR
 479 00dc 0222     		movs	r2, #2	@ tmp219,
 480 00de 1340     		ands	r3, r2	@ D.4972, tmp219
 481 00e0 FAD0     		beq	.L24	@,
 346:cmsis_boot/system_stm32f0xx.c **** 
 482              		.loc 1 346 0 is_stmt 1
 483 00e2 224B     		ldr	r3, .L28+4	@ D.4973,
 484 00e4 1122     		movs	r2, #17	@ tmp220,
 485 00e6 1A60     		str	r2, [r3]	@ tmp220, _76->ACR
 349:cmsis_boot/system_stm32f0xx.c **** 
 486              		.loc 1 349 0
 487 00e8 1F4B     		ldr	r3, .L28	@ D.4971,
 488 00ea 1F4A     		ldr	r2, .L28	@ D.4971,
 489 00ec 5268     		ldr	r2, [r2, #4]	@ D.4972, _79->CFGR
 490 00ee 5A60     		str	r2, [r3, #4]	@ D.4972, _78->CFGR
 352:cmsis_boot/system_stm32f0xx.c **** 
 491              		.loc 1 352 0
 492 00f0 1D4B     		ldr	r3, .L28	@ D.4971,
 493 00f2 1D4A     		ldr	r2, .L28	@ D.4971,
 494 00f4 5268     		ldr	r2, [r2, #4]	@ D.4972, _83->CFGR
 495 00f6 5A60     		str	r2, [r3, #4]	@ D.4972, _82->CFGR
 355:cmsis_boot/system_stm32f0xx.c **** 
 496              		.loc 1 355 0
 497 00f8 1B4B     		ldr	r3, .L28	@ D.4971,
 498 00fa 1B4A     		ldr	r2, .L28	@ D.4971,
 499 00fc 5268     		ldr	r2, [r2, #4]	@ D.4972, _87->CFGR
 500 00fe 1D49     		ldr	r1, .L28+12	@ tmp221,
 501 0100 0A40     		ands	r2, r1	@ D.4972, tmp221
 502 0102 5A60     		str	r2, [r3, #4]	@ D.4972, _86->CFGR
 357:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= 0x00280000;  //PLL mult x12
 503              		.loc 1 357 0
 504 0104 184B     		ldr	r3, .L28	@ D.4971,
 505 0106 184A     		ldr	r2, .L28	@ D.4971,
 506 0108 5268     		ldr	r2, [r2, #4]	@ D.4972, _92->CFGR
 507 010a 1B49     		ldr	r1, .L28+16	@ tmp222,
 508 010c 0A40     		ands	r2, r1	@ D.4972, tmp222
 509 010e 5A60     		str	r2, [r3, #4]	@ D.4972, _91->CFGR
 358:cmsis_boot/system_stm32f0xx.c **** 
 510              		.loc 1 358 0
 511 0110 154B     		ldr	r3, .L28	@ D.4971,
 512 0112 154A     		ldr	r2, .L28	@ D.4971,
 513 0114 5268     		ldr	r2, [r2, #4]	@ D.4972, _97->CFGR
 514 0116 A021     		movs	r1, #160	@ tmp230,
 515 0118 8903     		lsls	r1, r1, #14	@ tmp223, tmp230,
 516 011a 0A43     		orrs	r2, r1	@ D.4972, tmp223
 517 011c 5A60     		str	r2, [r3, #4]	@ D.4972, _96->CFGR
 361:cmsis_boot/system_stm32f0xx.c **** 
 518              		.loc 1 361 0
 519 011e 124B     		ldr	r3, .L28	@ D.4971,
 520 0120 114A     		ldr	r2, .L28	@ D.4971,
 521 0122 1268     		ldr	r2, [r2]	@ D.4972, _102->CR
 522 0124 8021     		movs	r1, #128	@ tmp231,
 523 0126 4904     		lsls	r1, r1, #17	@ tmp224, tmp231,
ARM GAS  /tmp/cckUWzaN.s 			page 17


 524 0128 0A43     		orrs	r2, r1	@ D.4972, tmp224
 525 012a 1A60     		str	r2, [r3]	@ D.4972, _101->CR
 364:cmsis_boot/system_stm32f0xx.c **** 	  {
 526              		.loc 1 364 0
 527 012c C046     		nop
 528              	.L25:
 364:cmsis_boot/system_stm32f0xx.c **** 	  {
 529              		.loc 1 364 0 is_stmt 0 discriminator 1
 530 012e 0E4B     		ldr	r3, .L28	@ D.4971,
 531 0130 1A68     		ldr	r2, [r3]	@ D.4972, _106->CR
 532 0132 8023     		movs	r3, #128	@ tmp229,
 533 0134 9B04     		lsls	r3, r3, #18	@ tmp225, tmp229,
 534 0136 1340     		ands	r3, r2	@ D.4972, D.4972
 535 0138 F9D0     		beq	.L25	@,
 369:cmsis_boot/system_stm32f0xx.c **** 	  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 536              		.loc 1 369 0 is_stmt 1
 537 013a 0B4B     		ldr	r3, .L28	@ D.4971,
 538 013c 0A4A     		ldr	r2, .L28	@ D.4971,
 539 013e 5268     		ldr	r2, [r2, #4]	@ D.4972, _110->CFGR
 540 0140 0321     		movs	r1, #3	@ tmp226,
 541 0142 8A43     		bics	r2, r1	@ D.4972, tmp226
 542 0144 5A60     		str	r2, [r3, #4]	@ D.4972, _109->CFGR
 370:cmsis_boot/system_stm32f0xx.c **** 
 543              		.loc 1 370 0
 544 0146 084B     		ldr	r3, .L28	@ D.4971,
 545 0148 074A     		ldr	r2, .L28	@ D.4971,
 546 014a 5268     		ldr	r2, [r2, #4]	@ D.4972, _115->CFGR
 547 014c 0221     		movs	r1, #2	@ tmp227,
 548 014e 0A43     		orrs	r2, r1	@ D.4972, tmp227
 549 0150 5A60     		str	r2, [r3, #4]	@ D.4972, _114->CFGR
 373:cmsis_boot/system_stm32f0xx.c **** 	  {
 550              		.loc 1 373 0
 551 0152 C046     		nop
 552              	.L26:
 373:cmsis_boot/system_stm32f0xx.c **** 	  {
 553              		.loc 1 373 0 is_stmt 0 discriminator 1
 554 0154 044B     		ldr	r3, .L28	@ D.4971,
 555 0156 5B68     		ldr	r3, [r3, #4]	@ D.4972, _119->CFGR
 556 0158 0C22     		movs	r2, #12	@ tmp228,
 557 015a 1340     		ands	r3, r2	@ D.4972, tmp228
 558 015c 082B     		cmp	r3, #8	@ D.4972,
 559 015e F9D1     		bne	.L26	@,
 560              	.L27:
 561              		.loc 1 377 0 is_stmt 1
 562 0160 C046     		nop
 563 0162 02B0     		add	sp, sp, #8	@,,
 564              		@ sp needed	@
 565 0164 7047     		bx	lr
 566              	.L29:
 567 0166 C046     		.align	2
 568              	.L28:
 569 0168 00100240 		.word	1073876992
 570 016c 00200240 		.word	1073881088
 571 0170 FF7FC0FF 		.word	-4161537
 572 0174 FFFFFEFF 		.word	-65537
 573 0178 FFFFC3FF 		.word	-3932161
 574              		.cfi_endproc
ARM GAS  /tmp/cckUWzaN.s 			page 18


 575              	.LFE22:
 576              		.size	SetSysClock, .-SetSysClock
 577              		.section	.text.SetSysClockInternalRC,"ax",%progbits
 578              		.align	2
 579              		.global	SetSysClockInternalRC
 580              		.code	16
 581              		.thumb_func
 582              		.type	SetSysClockInternalRC, %function
 583              	SetSysClockInternalRC:
 584              	.LFB23:
 378:cmsis_boot/system_stm32f0xx.c **** 
 379:cmsis_boot/system_stm32f0xx.c **** void SetSysClockInternalRC (void)
 380:cmsis_boot/system_stm32f0xx.c **** {
 585              		.loc 1 380 0
 586              		.cfi_startproc
 381:cmsis_boot/system_stm32f0xx.c ****  //--- Enable HSI clock ---//
 382:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR |= 0x00000001;
 587              		.loc 1 382 0
 588 0000 264B     		ldr	r3, .L34	@ D.4974,
 589 0002 264A     		ldr	r2, .L34	@ D.4974,
 590 0004 1268     		ldr	r2, [r2]	@ D.4975, _2->CR
 591 0006 0121     		movs	r1, #1	@ tmp154,
 592 0008 0A43     		orrs	r2, r1	@ D.4975, tmp154
 593 000a 1A60     		str	r2, [r3]	@ D.4975, _1->CR
 383:cmsis_boot/system_stm32f0xx.c **** 
 384:cmsis_boot/system_stm32f0xx.c **** 	//--- Wait for PLL ready ---//
 385:cmsis_boot/system_stm32f0xx.c **** 	while (!(RCC->CR & 0x00000002));
 594              		.loc 1 385 0
 595 000c C046     		nop
 596              	.L31:
 597              		.loc 1 385 0 is_stmt 0 discriminator 1
 598 000e 234B     		ldr	r3, .L34	@ D.4974,
 599 0010 1B68     		ldr	r3, [r3]	@ D.4975, _7->CR
 600 0012 0222     		movs	r2, #2	@ tmp155,
 601 0014 1340     		ands	r3, r2	@ D.4975, tmp155
 602 0016 FAD0     		beq	.L31	@,
 386:cmsis_boot/system_stm32f0xx.c **** 
 387:cmsis_boot/system_stm32f0xx.c **** 	/* Enable Prefetch Buffer and set Flash Latency */
 388:cmsis_boot/system_stm32f0xx.c **** 	FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 603              		.loc 1 388 0 is_stmt 1
 604 0018 214B     		ldr	r3, .L34+4	@ D.4976,
 605 001a 1122     		movs	r2, #17	@ tmp156,
 606 001c 1A60     		str	r2, [r3]	@ tmp156, _10->ACR
 389:cmsis_boot/system_stm32f0xx.c **** 
 390:cmsis_boot/system_stm32f0xx.c **** 	/* HCLK = SYSCLK */
 391:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 607              		.loc 1 391 0
 608 001e 1F4B     		ldr	r3, .L34	@ D.4974,
 609 0020 1E4A     		ldr	r2, .L34	@ D.4974,
 610 0022 5268     		ldr	r2, [r2, #4]	@ D.4975, _13->CFGR
 611 0024 5A60     		str	r2, [r3, #4]	@ D.4975, _12->CFGR
 392:cmsis_boot/system_stm32f0xx.c **** 
 393:cmsis_boot/system_stm32f0xx.c **** 	/* PCLK = HCLK */
 394:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 612              		.loc 1 394 0
 613 0026 1D4B     		ldr	r3, .L34	@ D.4974,
 614 0028 1C4A     		ldr	r2, .L34	@ D.4974,
ARM GAS  /tmp/cckUWzaN.s 			page 19


 615 002a 5268     		ldr	r2, [r2, #4]	@ D.4975, _17->CFGR
 616 002c 5A60     		str	r2, [r3, #4]	@ D.4975, _16->CFGR
 395:cmsis_boot/system_stm32f0xx.c **** 
 396:cmsis_boot/system_stm32f0xx.c **** 	/* PLL configuration = HSI/2 * 12 = 48 MHz */
 397:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR &= ~0x00010000; //PLL in HSI/2
 617              		.loc 1 397 0
 618 002e 1B4B     		ldr	r3, .L34	@ D.4974,
 619 0030 1A4A     		ldr	r2, .L34	@ D.4974,
 620 0032 5268     		ldr	r2, [r2, #4]	@ D.4975, _21->CFGR
 621 0034 1B49     		ldr	r1, .L34+8	@ tmp157,
 622 0036 0A40     		ands	r2, r1	@ D.4975, tmp157
 623 0038 5A60     		str	r2, [r3, #4]	@ D.4975, _20->CFGR
 398:cmsis_boot/system_stm32f0xx.c **** 
 399:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR &= ~0x003C0000;
 624              		.loc 1 399 0
 625 003a 184B     		ldr	r3, .L34	@ D.4974,
 626 003c 174A     		ldr	r2, .L34	@ D.4974,
 627 003e 5268     		ldr	r2, [r2, #4]	@ D.4975, _26->CFGR
 628 0040 1949     		ldr	r1, .L34+12	@ tmp158,
 629 0042 0A40     		ands	r2, r1	@ D.4975, tmp158
 630 0044 5A60     		str	r2, [r3, #4]	@ D.4975, _25->CFGR
 400:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR |= 0x00280000;  //PLL mult x12
 631              		.loc 1 400 0
 632 0046 154B     		ldr	r3, .L34	@ D.4974,
 633 0048 144A     		ldr	r2, .L34	@ D.4974,
 634 004a 5268     		ldr	r2, [r2, #4]	@ D.4975, _31->CFGR
 635 004c A021     		movs	r1, #160	@ tmp166,
 636 004e 8903     		lsls	r1, r1, #14	@ tmp159, tmp166,
 637 0050 0A43     		orrs	r2, r1	@ D.4975, tmp159
 638 0052 5A60     		str	r2, [r3, #4]	@ D.4975, _30->CFGR
 401:cmsis_boot/system_stm32f0xx.c **** 
 402:cmsis_boot/system_stm32f0xx.c **** 	/* Enable PLL */
 403:cmsis_boot/system_stm32f0xx.c **** 	RCC->CR |= RCC_CR_PLLON;
 639              		.loc 1 403 0
 640 0054 114B     		ldr	r3, .L34	@ D.4974,
 641 0056 114A     		ldr	r2, .L34	@ D.4974,
 642 0058 1268     		ldr	r2, [r2]	@ D.4975, _36->CR
 643 005a 8021     		movs	r1, #128	@ tmp167,
 644 005c 4904     		lsls	r1, r1, #17	@ tmp160, tmp167,
 645 005e 0A43     		orrs	r2, r1	@ D.4975, tmp160
 646 0060 1A60     		str	r2, [r3]	@ D.4975, _35->CR
 404:cmsis_boot/system_stm32f0xx.c **** 
 405:cmsis_boot/system_stm32f0xx.c **** 	/* Wait till PLL is ready */
 406:cmsis_boot/system_stm32f0xx.c **** 	while((RCC->CR & RCC_CR_PLLRDY) == 0)
 647              		.loc 1 406 0
 648 0062 C046     		nop
 649              	.L32:
 650              		.loc 1 406 0 is_stmt 0 discriminator 1
 651 0064 0D4B     		ldr	r3, .L34	@ D.4974,
 652 0066 1A68     		ldr	r2, [r3]	@ D.4975, _40->CR
 653 0068 8023     		movs	r3, #128	@ tmp165,
 654 006a 9B04     		lsls	r3, r3, #18	@ tmp161, tmp165,
 655 006c 1340     		ands	r3, r2	@ D.4975, D.4975
 656 006e F9D0     		beq	.L32	@,
 407:cmsis_boot/system_stm32f0xx.c **** 	{
 408:cmsis_boot/system_stm32f0xx.c **** 	}
 409:cmsis_boot/system_stm32f0xx.c **** 
ARM GAS  /tmp/cckUWzaN.s 			page 20


 410:cmsis_boot/system_stm32f0xx.c **** 	/* Select PLL as system clock source */
 411:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 657              		.loc 1 411 0 is_stmt 1
 658 0070 0A4B     		ldr	r3, .L34	@ D.4974,
 659 0072 0A4A     		ldr	r2, .L34	@ D.4974,
 660 0074 5268     		ldr	r2, [r2, #4]	@ D.4975, _44->CFGR
 661 0076 0321     		movs	r1, #3	@ tmp162,
 662 0078 8A43     		bics	r2, r1	@ D.4975, tmp162
 663 007a 5A60     		str	r2, [r3, #4]	@ D.4975, _43->CFGR
 412:cmsis_boot/system_stm32f0xx.c **** 	RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 664              		.loc 1 412 0
 665 007c 074B     		ldr	r3, .L34	@ D.4974,
 666 007e 074A     		ldr	r2, .L34	@ D.4974,
 667 0080 5268     		ldr	r2, [r2, #4]	@ D.4975, _49->CFGR
 668 0082 0221     		movs	r1, #2	@ tmp163,
 669 0084 0A43     		orrs	r2, r1	@ D.4975, tmp163
 670 0086 5A60     		str	r2, [r3, #4]	@ D.4975, _48->CFGR
 413:cmsis_boot/system_stm32f0xx.c **** 
 414:cmsis_boot/system_stm32f0xx.c **** 	/* Wait till PLL is used as system clock source */
 415:cmsis_boot/system_stm32f0xx.c **** 	while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 671              		.loc 1 415 0
 672 0088 C046     		nop
 673              	.L33:
 674              		.loc 1 415 0 is_stmt 0 discriminator 1
 675 008a 044B     		ldr	r3, .L34	@ D.4974,
 676 008c 5B68     		ldr	r3, [r3, #4]	@ D.4975, _53->CFGR
 677 008e 0C22     		movs	r2, #12	@ tmp164,
 678 0090 1340     		ands	r3, r2	@ D.4975, tmp164
 679 0092 082B     		cmp	r3, #8	@ D.4975,
 680 0094 F9D1     		bne	.L33	@,
 416:cmsis_boot/system_stm32f0xx.c **** 	{
 417:cmsis_boot/system_stm32f0xx.c **** 	}
 418:cmsis_boot/system_stm32f0xx.c **** }
 681              		.loc 1 418 0 is_stmt 1
 682 0096 C046     		nop
 683              		@ sp needed	@
 684 0098 7047     		bx	lr
 685              	.L35:
 686 009a C046     		.align	2
 687              	.L34:
 688 009c 00100240 		.word	1073876992
 689 00a0 00200240 		.word	1073881088
 690 00a4 FFFFFEFF 		.word	-65537
 691 00a8 FFFFC3FF 		.word	-3932161
 692              		.cfi_endproc
 693              	.LFE23:
 694              		.size	SetSysClockInternalRC, .-SetSysClockInternalRC
 695              		.text
 696              	.Letext0:
 697              		.file 2 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types
 698              		.file 3 "/usr/local/sbin/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 699              		.file 4 "cmsis_boot/stm32f0xx.h"
 700              		.section	.debug_info,"",%progbits
 701              	.Ldebug_info0:
 702 0000 4B030000 		.4byte	0x34b
 703 0004 0200     		.2byte	0x2
 704 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  /tmp/cckUWzaN.s 			page 21


 705 000a 04       		.byte	0x4
 706 000b 01       		.uleb128 0x1
 707 000c 6B010000 		.4byte	.LASF42
 708 0010 0C       		.byte	0xc
 709 0011 8E000000 		.4byte	.LASF43
 710 0015 18010000 		.4byte	.LASF44
 711 0019 00000000 		.4byte	.Ldebug_ranges0+0
 712 001d 00000000 		.4byte	0
 713 0021 00000000 		.4byte	0
 714 0025 00000000 		.4byte	.Ldebug_line0
 715 0029 02       		.uleb128 0x2
 716 002a 01       		.byte	0x1
 717 002b 06       		.byte	0x6
 718 002c CF020000 		.4byte	.LASF0
 719 0030 03       		.uleb128 0x3
 720 0031 08000000 		.4byte	.LASF3
 721 0035 02       		.byte	0x2
 722 0036 1D       		.byte	0x1d
 723 0037 3B000000 		.4byte	0x3b
 724 003b 02       		.uleb128 0x2
 725 003c 01       		.byte	0x1
 726 003d 08       		.byte	0x8
 727 003e CD000000 		.4byte	.LASF1
 728 0042 02       		.uleb128 0x2
 729 0043 02       		.byte	0x2
 730 0044 05       		.byte	0x5
 731 0045 8E020000 		.4byte	.LASF2
 732 0049 03       		.uleb128 0x3
 733 004a 98020000 		.4byte	.LASF4
 734 004e 02       		.byte	0x2
 735 004f 2B       		.byte	0x2b
 736 0050 54000000 		.4byte	0x54
 737 0054 02       		.uleb128 0x2
 738 0055 02       		.byte	0x2
 739 0056 07       		.byte	0x7
 740 0057 B2000000 		.4byte	.LASF5
 741 005b 02       		.uleb128 0x2
 742 005c 04       		.byte	0x4
 743 005d 05       		.byte	0x5
 744 005e C1020000 		.4byte	.LASF6
 745 0062 03       		.uleb128 0x3
 746 0063 0D010000 		.4byte	.LASF7
 747 0067 02       		.byte	0x2
 748 0068 41       		.byte	0x41
 749 0069 6D000000 		.4byte	0x6d
 750 006d 02       		.uleb128 0x2
 751 006e 04       		.byte	0x4
 752 006f 07       		.byte	0x7
 753 0070 E9000000 		.4byte	.LASF8
 754 0074 02       		.uleb128 0x2
 755 0075 08       		.byte	0x8
 756 0076 05       		.byte	0x5
 757 0077 5A020000 		.4byte	.LASF9
 758 007b 02       		.uleb128 0x2
 759 007c 08       		.byte	0x8
 760 007d 07       		.byte	0x7
 761 007e 16020000 		.4byte	.LASF10
ARM GAS  /tmp/cckUWzaN.s 			page 22


 762 0082 04       		.uleb128 0x4
 763 0083 04       		.byte	0x4
 764 0084 05       		.byte	0x5
 765 0085 696E7400 		.ascii	"int\000"
 766 0089 02       		.uleb128 0x2
 767 008a 04       		.byte	0x4
 768 008b 07       		.byte	0x7
 769 008c 5E010000 		.4byte	.LASF11
 770 0090 03       		.uleb128 0x3
 771 0091 2D020000 		.4byte	.LASF12
 772 0095 03       		.byte	0x3
 773 0096 14       		.byte	0x14
 774 0097 30000000 		.4byte	0x30
 775 009b 03       		.uleb128 0x3
 776 009c A3020000 		.4byte	.LASF13
 777 00a0 03       		.byte	0x3
 778 00a1 1A       		.byte	0x1a
 779 00a2 49000000 		.4byte	0x49
 780 00a6 03       		.uleb128 0x3
 781 00a7 B8020000 		.4byte	.LASF14
 782 00ab 03       		.byte	0x3
 783 00ac 20       		.byte	0x20
 784 00ad 62000000 		.4byte	0x62
 785 00b1 02       		.uleb128 0x2
 786 00b2 04       		.byte	0x4
 787 00b3 07       		.byte	0x7
 788 00b4 51020000 		.4byte	.LASF15
 789 00b8 05       		.uleb128 0x5
 790 00b9 A6000000 		.4byte	0xa6
 791 00bd 06       		.uleb128 0x6
 792 00be 01       		.byte	0x1
 793 00bf 3B000000 		.4byte	0x3b
 794 00c3 04       		.byte	0x4
 795 00c4 6D01     		.2byte	0x16d
 796 00c6 D7000000 		.4byte	0xd7
 797 00ca 07       		.uleb128 0x7
 798 00cb DB020000 		.4byte	.LASF16
 799 00cf 00       		.byte	0
 800 00d0 08       		.uleb128 0x8
 801 00d1 53455400 		.ascii	"SET\000"
 802 00d5 01       		.byte	0x1
 803 00d6 00       		.byte	0
 804 00d7 09       		.uleb128 0x9
 805 00d8 24       		.byte	0x24
 806 00d9 04       		.byte	0x4
 807 00da 4702     		.2byte	0x247
 808 00dc 65010000 		.4byte	0x165
 809 00e0 0A       		.uleb128 0xa
 810 00e1 41435200 		.ascii	"ACR\000"
 811 00e5 04       		.byte	0x4
 812 00e6 4902     		.2byte	0x249
 813 00e8 B8000000 		.4byte	0xb8
 814 00ec 02       		.byte	0x2
 815 00ed 23       		.byte	0x23
 816 00ee 00       		.uleb128 0
 817 00ef 0B       		.uleb128 0xb
 818 00f0 CA020000 		.4byte	.LASF17
ARM GAS  /tmp/cckUWzaN.s 			page 23


 819 00f4 04       		.byte	0x4
 820 00f5 4A02     		.2byte	0x24a
 821 00f7 B8000000 		.4byte	0xb8
 822 00fb 02       		.byte	0x2
 823 00fc 23       		.byte	0x23
 824 00fd 04       		.uleb128 0x4
 825 00fe 0B       		.uleb128 0xb
 826 00ff C5000000 		.4byte	.LASF18
 827 0103 04       		.byte	0x4
 828 0104 4B02     		.2byte	0x24b
 829 0106 B8000000 		.4byte	0xb8
 830 010a 02       		.byte	0x2
 831 010b 23       		.byte	0x23
 832 010c 08       		.uleb128 0x8
 833 010d 0A       		.uleb128 0xa
 834 010e 535200   		.ascii	"SR\000"
 835 0111 04       		.byte	0x4
 836 0112 4C02     		.2byte	0x24c
 837 0114 B8000000 		.4byte	0xb8
 838 0118 02       		.byte	0x2
 839 0119 23       		.byte	0x23
 840 011a 0C       		.uleb128 0xc
 841 011b 0A       		.uleb128 0xa
 842 011c 435200   		.ascii	"CR\000"
 843 011f 04       		.byte	0x4
 844 0120 4D02     		.2byte	0x24d
 845 0122 B8000000 		.4byte	0xb8
 846 0126 02       		.byte	0x2
 847 0127 23       		.byte	0x23
 848 0128 10       		.uleb128 0x10
 849 0129 0A       		.uleb128 0xa
 850 012a 415200   		.ascii	"AR\000"
 851 012d 04       		.byte	0x4
 852 012e 4E02     		.2byte	0x24e
 853 0130 B8000000 		.4byte	0xb8
 854 0134 02       		.byte	0x2
 855 0135 23       		.byte	0x23
 856 0136 14       		.uleb128 0x14
 857 0137 0B       		.uleb128 0xb
 858 0138 FB000000 		.4byte	.LASF19
 859 013c 04       		.byte	0x4
 860 013d 4F02     		.2byte	0x24f
 861 013f B8000000 		.4byte	0xb8
 862 0143 02       		.byte	0x2
 863 0144 23       		.byte	0x23
 864 0145 18       		.uleb128 0x18
 865 0146 0A       		.uleb128 0xa
 866 0147 4F425200 		.ascii	"OBR\000"
 867 014b 04       		.byte	0x4
 868 014c 5002     		.2byte	0x250
 869 014e B8000000 		.4byte	0xb8
 870 0152 02       		.byte	0x2
 871 0153 23       		.byte	0x23
 872 0154 1C       		.uleb128 0x1c
 873 0155 0B       		.uleb128 0xb
 874 0156 6D000000 		.4byte	.LASF20
 875 015a 04       		.byte	0x4
ARM GAS  /tmp/cckUWzaN.s 			page 24


 876 015b 5102     		.2byte	0x251
 877 015d B8000000 		.4byte	0xb8
 878 0161 02       		.byte	0x2
 879 0162 23       		.byte	0x23
 880 0163 20       		.uleb128 0x20
 881 0164 00       		.byte	0
 882 0165 0C       		.uleb128 0xc
 883 0166 42000000 		.4byte	.LASF21
 884 016a 04       		.byte	0x4
 885 016b 5202     		.2byte	0x252
 886 016d D7000000 		.4byte	0xd7
 887 0171 09       		.uleb128 0x9
 888 0172 38       		.byte	0x38
 889 0173 04       		.byte	0x4
 890 0174 B502     		.2byte	0x2b5
 891 0176 4C020000 		.4byte	0x24c
 892 017a 0A       		.uleb128 0xa
 893 017b 435200   		.ascii	"CR\000"
 894 017e 04       		.byte	0x4
 895 017f B702     		.2byte	0x2b7
 896 0181 B8000000 		.4byte	0xb8
 897 0185 02       		.byte	0x2
 898 0186 23       		.byte	0x23
 899 0187 00       		.uleb128 0
 900 0188 0B       		.uleb128 0xb
 901 0189 21000000 		.4byte	.LASF22
 902 018d 04       		.byte	0x4
 903 018e B802     		.2byte	0x2b8
 904 0190 B8000000 		.4byte	0xb8
 905 0194 02       		.byte	0x2
 906 0195 23       		.byte	0x23
 907 0196 04       		.uleb128 0x4
 908 0197 0A       		.uleb128 0xa
 909 0198 43495200 		.ascii	"CIR\000"
 910 019c 04       		.byte	0x4
 911 019d B902     		.2byte	0x2b9
 912 019f B8000000 		.4byte	0xb8
 913 01a3 02       		.byte	0x2
 914 01a4 23       		.byte	0x23
 915 01a5 08       		.uleb128 0x8
 916 01a6 0B       		.uleb128 0xb
 917 01a7 55010000 		.4byte	.LASF23
 918 01ab 04       		.byte	0x4
 919 01ac BA02     		.2byte	0x2ba
 920 01ae B8000000 		.4byte	0xb8
 921 01b2 02       		.byte	0x2
 922 01b3 23       		.byte	0x23
 923 01b4 0C       		.uleb128 0xc
 924 01b5 0B       		.uleb128 0xb
 925 01b6 04010000 		.4byte	.LASF24
 926 01ba 04       		.byte	0x4
 927 01bb BB02     		.2byte	0x2bb
 928 01bd B8000000 		.4byte	0xb8
 929 01c1 02       		.byte	0x2
 930 01c2 23       		.byte	0x23
 931 01c3 10       		.uleb128 0x10
 932 01c4 0B       		.uleb128 0xb
ARM GAS  /tmp/cckUWzaN.s 			page 25


 933 01c5 50000000 		.4byte	.LASF25
 934 01c9 04       		.byte	0x4
 935 01ca BC02     		.2byte	0x2bc
 936 01cc B8000000 		.4byte	0xb8
 937 01d0 02       		.byte	0x2
 938 01d1 23       		.byte	0x23
 939 01d2 14       		.uleb128 0x14
 940 01d3 0B       		.uleb128 0xb
 941 01d4 78000000 		.4byte	.LASF26
 942 01d8 04       		.byte	0x4
 943 01d9 BD02     		.2byte	0x2bd
 944 01db B8000000 		.4byte	0xb8
 945 01df 02       		.byte	0x2
 946 01e0 23       		.byte	0x23
 947 01e1 18       		.uleb128 0x18
 948 01e2 0B       		.uleb128 0xb
 949 01e3 4D010000 		.4byte	.LASF27
 950 01e7 04       		.byte	0x4
 951 01e8 BE02     		.2byte	0x2be
 952 01ea B8000000 		.4byte	0xb8
 953 01ee 02       		.byte	0x2
 954 01ef 23       		.byte	0x23
 955 01f0 1C       		.uleb128 0x1c
 956 01f1 0B       		.uleb128 0xb
 957 01f2 41020000 		.4byte	.LASF28
 958 01f6 04       		.byte	0x4
 959 01f7 BF02     		.2byte	0x2bf
 960 01f9 B8000000 		.4byte	0xb8
 961 01fd 02       		.byte	0x2
 962 01fe 23       		.byte	0x23
 963 01ff 20       		.uleb128 0x20
 964 0200 0A       		.uleb128 0xa
 965 0201 43535200 		.ascii	"CSR\000"
 966 0205 04       		.byte	0x4
 967 0206 C002     		.2byte	0x2c0
 968 0208 B8000000 		.4byte	0xb8
 969 020c 02       		.byte	0x2
 970 020d 23       		.byte	0x23
 971 020e 24       		.uleb128 0x24
 972 020f 0B       		.uleb128 0xb
 973 0210 30000000 		.4byte	.LASF29
 974 0214 04       		.byte	0x4
 975 0215 C102     		.2byte	0x2c1
 976 0217 B8000000 		.4byte	0xb8
 977 021b 02       		.byte	0x2
 978 021c 23       		.byte	0x23
 979 021d 28       		.uleb128 0x28
 980 021e 0B       		.uleb128 0xb
 981 021f 72000000 		.4byte	.LASF30
 982 0223 04       		.byte	0x4
 983 0224 C202     		.2byte	0x2c2
 984 0226 B8000000 		.4byte	0xb8
 985 022a 02       		.byte	0x2
 986 022b 23       		.byte	0x23
 987 022c 2C       		.uleb128 0x2c
 988 022d 0B       		.uleb128 0xb
 989 022e AC000000 		.4byte	.LASF31
ARM GAS  /tmp/cckUWzaN.s 			page 26


 990 0232 04       		.byte	0x4
 991 0233 C302     		.2byte	0x2c3
 992 0235 B8000000 		.4byte	0xb8
 993 0239 02       		.byte	0x2
 994 023a 23       		.byte	0x23
 995 023b 30       		.uleb128 0x30
 996 023c 0A       		.uleb128 0xa
 997 023d 43523200 		.ascii	"CR2\000"
 998 0241 04       		.byte	0x4
 999 0242 C402     		.2byte	0x2c4
 1000 0244 B8000000 		.4byte	0xb8
 1001 0248 02       		.byte	0x2
 1002 0249 23       		.byte	0x23
 1003 024a 34       		.uleb128 0x34
 1004 024b 00       		.byte	0
 1005 024c 0C       		.uleb128 0xc
 1006 024d AC020000 		.4byte	.LASF32
 1007 0251 04       		.byte	0x4
 1008 0252 C502     		.2byte	0x2c5
 1009 0254 71010000 		.4byte	0x171
 1010 0258 0D       		.uleb128 0xd
 1011 0259 01       		.byte	0x1
 1012 025a 46020000 		.4byte	.LASF38
 1013 025e 01       		.byte	0x1
 1014 025f 9F       		.byte	0x9f
 1015 0260 01       		.byte	0x1
 1016 0261 00000000 		.4byte	.LFB20
 1017 0265 88000000 		.4byte	.LFE20
 1018 0269 00000000 		.4byte	.LLST0
 1019 026d 01       		.byte	0x1
 1020 026e 0E       		.uleb128 0xe
 1021 026f 01       		.byte	0x1
 1022 0270 78020000 		.4byte	.LASF45
 1023 0274 01       		.byte	0x1
 1024 0275 E4       		.byte	0xe4
 1025 0276 01       		.byte	0x1
 1026 0277 00000000 		.4byte	.LFB21
 1027 027b D0000000 		.4byte	.LFE21
 1028 027f 20000000 		.4byte	.LLST1
 1029 0283 01       		.byte	0x1
 1030 0284 C1020000 		.4byte	0x2c1
 1031 0288 0F       		.uleb128 0xf
 1032 0289 746D7000 		.ascii	"tmp\000"
 1033 028d 01       		.byte	0x1
 1034 028e E6       		.byte	0xe6
 1035 028f A6000000 		.4byte	0xa6
 1036 0293 02       		.byte	0x2
 1037 0294 91       		.byte	0x91
 1038 0295 74       		.sleb128 -12
 1039 0296 10       		.uleb128 0x10
 1040 0297 00000000 		.4byte	.LASF33
 1041 029b 01       		.byte	0x1
 1042 029c E6       		.byte	0xe6
 1043 029d A6000000 		.4byte	0xa6
 1044 02a1 02       		.byte	0x2
 1045 02a2 91       		.byte	0x91
 1046 02a3 70       		.sleb128 -16
ARM GAS  /tmp/cckUWzaN.s 			page 27


 1047 02a4 10       		.uleb128 0x10
 1048 02a5 26000000 		.4byte	.LASF34
 1049 02a9 01       		.byte	0x1
 1050 02aa E6       		.byte	0xe6
 1051 02ab A6000000 		.4byte	0xa6
 1052 02af 02       		.byte	0x2
 1053 02b0 91       		.byte	0x91
 1054 02b1 6C       		.sleb128 -20
 1055 02b2 10       		.uleb128 0x10
 1056 02b3 DB000000 		.4byte	.LASF35
 1057 02b7 01       		.byte	0x1
 1058 02b8 E6       		.byte	0xe6
 1059 02b9 A6000000 		.4byte	0xa6
 1060 02bd 02       		.byte	0x2
 1061 02be 91       		.byte	0x91
 1062 02bf 68       		.sleb128 -24
 1063 02c0 00       		.byte	0
 1064 02c1 11       		.uleb128 0x11
 1065 02c2 35020000 		.4byte	.LASF46
 1066 02c6 01       		.byte	0x1
 1067 02c7 1801     		.2byte	0x118
 1068 02c9 01       		.byte	0x1
 1069 02ca 00000000 		.4byte	.LFB22
 1070 02ce 7C010000 		.4byte	.LFE22
 1071 02d2 4C000000 		.4byte	.LLST2
 1072 02d6 01       		.byte	0x1
 1073 02d7 FA020000 		.4byte	0x2fa
 1074 02db 12       		.uleb128 0x12
 1075 02dc 12000000 		.4byte	.LASF36
 1076 02e0 01       		.byte	0x1
 1077 02e1 1A01     		.2byte	0x11a
 1078 02e3 B8000000 		.4byte	0xb8
 1079 02e7 02       		.byte	0x2
 1080 02e8 91       		.byte	0x91
 1081 02e9 7C       		.sleb128 -4
 1082 02ea 12       		.uleb128 0x12
 1083 02eb 38000000 		.4byte	.LASF37
 1084 02ef 01       		.byte	0x1
 1085 02f0 1A01     		.2byte	0x11a
 1086 02f2 B8000000 		.4byte	0xb8
 1087 02f6 02       		.byte	0x2
 1088 02f7 91       		.byte	0x91
 1089 02f8 78       		.sleb128 -8
 1090 02f9 00       		.byte	0
 1091 02fa 13       		.uleb128 0x13
 1092 02fb 01       		.byte	0x1
 1093 02fc 57000000 		.4byte	.LASF39
 1094 0300 01       		.byte	0x1
 1095 0301 7B01     		.2byte	0x17b
 1096 0303 01       		.byte	0x1
 1097 0304 00000000 		.4byte	.LFB23
 1098 0308 AC000000 		.4byte	.LFE23
 1099 030c 02       		.byte	0x2
 1100 030d 7D       		.byte	0x7d
 1101 030e 00       		.sleb128 0
 1102 030f 01       		.byte	0x1
 1103 0310 14       		.uleb128 0x14
ARM GAS  /tmp/cckUWzaN.s 			page 28


 1104 0311 68020000 		.4byte	.LASF40
 1105 0315 01       		.byte	0x1
 1106 0316 83       		.byte	0x83
 1107 0317 A6000000 		.4byte	0xa6
 1108 031b 01       		.byte	0x1
 1109 031c 05       		.byte	0x5
 1110 031d 03       		.byte	0x3
 1111 031e 00000000 		.4byte	SystemCoreClock
 1112 0322 15       		.uleb128 0x15
 1113 0323 90000000 		.4byte	0x90
 1114 0327 32030000 		.4byte	0x332
 1115 032b 16       		.uleb128 0x16
 1116 032c B1000000 		.4byte	0xb1
 1117 0330 0F       		.byte	0xf
 1118 0331 00       		.byte	0
 1119 0332 14       		.uleb128 0x14
 1120 0333 80000000 		.4byte	.LASF41
 1121 0337 01       		.byte	0x1
 1122 0338 84       		.byte	0x84
 1123 0339 49030000 		.4byte	0x349
 1124 033d 01       		.byte	0x1
 1125 033e 05       		.byte	0x5
 1126 033f 03       		.byte	0x3
 1127 0340 00000000 		.4byte	AHBPrescTable
 1128 0344 05       		.uleb128 0x5
 1129 0345 22030000 		.4byte	0x322
 1130 0349 17       		.uleb128 0x17
 1131 034a 44030000 		.4byte	0x344
 1132 034e 00       		.byte	0
 1133              		.section	.debug_abbrev,"",%progbits
 1134              	.Ldebug_abbrev0:
 1135 0000 01       		.uleb128 0x1
 1136 0001 11       		.uleb128 0x11
 1137 0002 01       		.byte	0x1
 1138 0003 25       		.uleb128 0x25
 1139 0004 0E       		.uleb128 0xe
 1140 0005 13       		.uleb128 0x13
 1141 0006 0B       		.uleb128 0xb
 1142 0007 03       		.uleb128 0x3
 1143 0008 0E       		.uleb128 0xe
 1144 0009 1B       		.uleb128 0x1b
 1145 000a 0E       		.uleb128 0xe
 1146 000b 55       		.uleb128 0x55
 1147 000c 06       		.uleb128 0x6
 1148 000d 11       		.uleb128 0x11
 1149 000e 01       		.uleb128 0x1
 1150 000f 52       		.uleb128 0x52
 1151 0010 01       		.uleb128 0x1
 1152 0011 10       		.uleb128 0x10
 1153 0012 06       		.uleb128 0x6
 1154 0013 00       		.byte	0
 1155 0014 00       		.byte	0
 1156 0015 02       		.uleb128 0x2
 1157 0016 24       		.uleb128 0x24
 1158 0017 00       		.byte	0
 1159 0018 0B       		.uleb128 0xb
 1160 0019 0B       		.uleb128 0xb
ARM GAS  /tmp/cckUWzaN.s 			page 29


 1161 001a 3E       		.uleb128 0x3e
 1162 001b 0B       		.uleb128 0xb
 1163 001c 03       		.uleb128 0x3
 1164 001d 0E       		.uleb128 0xe
 1165 001e 00       		.byte	0
 1166 001f 00       		.byte	0
 1167 0020 03       		.uleb128 0x3
 1168 0021 16       		.uleb128 0x16
 1169 0022 00       		.byte	0
 1170 0023 03       		.uleb128 0x3
 1171 0024 0E       		.uleb128 0xe
 1172 0025 3A       		.uleb128 0x3a
 1173 0026 0B       		.uleb128 0xb
 1174 0027 3B       		.uleb128 0x3b
 1175 0028 0B       		.uleb128 0xb
 1176 0029 49       		.uleb128 0x49
 1177 002a 13       		.uleb128 0x13
 1178 002b 00       		.byte	0
 1179 002c 00       		.byte	0
 1180 002d 04       		.uleb128 0x4
 1181 002e 24       		.uleb128 0x24
 1182 002f 00       		.byte	0
 1183 0030 0B       		.uleb128 0xb
 1184 0031 0B       		.uleb128 0xb
 1185 0032 3E       		.uleb128 0x3e
 1186 0033 0B       		.uleb128 0xb
 1187 0034 03       		.uleb128 0x3
 1188 0035 08       		.uleb128 0x8
 1189 0036 00       		.byte	0
 1190 0037 00       		.byte	0
 1191 0038 05       		.uleb128 0x5
 1192 0039 35       		.uleb128 0x35
 1193 003a 00       		.byte	0
 1194 003b 49       		.uleb128 0x49
 1195 003c 13       		.uleb128 0x13
 1196 003d 00       		.byte	0
 1197 003e 00       		.byte	0
 1198 003f 06       		.uleb128 0x6
 1199 0040 04       		.uleb128 0x4
 1200 0041 01       		.byte	0x1
 1201 0042 0B       		.uleb128 0xb
 1202 0043 0B       		.uleb128 0xb
 1203 0044 49       		.uleb128 0x49
 1204 0045 13       		.uleb128 0x13
 1205 0046 3A       		.uleb128 0x3a
 1206 0047 0B       		.uleb128 0xb
 1207 0048 3B       		.uleb128 0x3b
 1208 0049 05       		.uleb128 0x5
 1209 004a 01       		.uleb128 0x1
 1210 004b 13       		.uleb128 0x13
 1211 004c 00       		.byte	0
 1212 004d 00       		.byte	0
 1213 004e 07       		.uleb128 0x7
 1214 004f 28       		.uleb128 0x28
 1215 0050 00       		.byte	0
 1216 0051 03       		.uleb128 0x3
 1217 0052 0E       		.uleb128 0xe
ARM GAS  /tmp/cckUWzaN.s 			page 30


 1218 0053 1C       		.uleb128 0x1c
 1219 0054 0B       		.uleb128 0xb
 1220 0055 00       		.byte	0
 1221 0056 00       		.byte	0
 1222 0057 08       		.uleb128 0x8
 1223 0058 28       		.uleb128 0x28
 1224 0059 00       		.byte	0
 1225 005a 03       		.uleb128 0x3
 1226 005b 08       		.uleb128 0x8
 1227 005c 1C       		.uleb128 0x1c
 1228 005d 0B       		.uleb128 0xb
 1229 005e 00       		.byte	0
 1230 005f 00       		.byte	0
 1231 0060 09       		.uleb128 0x9
 1232 0061 13       		.uleb128 0x13
 1233 0062 01       		.byte	0x1
 1234 0063 0B       		.uleb128 0xb
 1235 0064 0B       		.uleb128 0xb
 1236 0065 3A       		.uleb128 0x3a
 1237 0066 0B       		.uleb128 0xb
 1238 0067 3B       		.uleb128 0x3b
 1239 0068 05       		.uleb128 0x5
 1240 0069 01       		.uleb128 0x1
 1241 006a 13       		.uleb128 0x13
 1242 006b 00       		.byte	0
 1243 006c 00       		.byte	0
 1244 006d 0A       		.uleb128 0xa
 1245 006e 0D       		.uleb128 0xd
 1246 006f 00       		.byte	0
 1247 0070 03       		.uleb128 0x3
 1248 0071 08       		.uleb128 0x8
 1249 0072 3A       		.uleb128 0x3a
 1250 0073 0B       		.uleb128 0xb
 1251 0074 3B       		.uleb128 0x3b
 1252 0075 05       		.uleb128 0x5
 1253 0076 49       		.uleb128 0x49
 1254 0077 13       		.uleb128 0x13
 1255 0078 38       		.uleb128 0x38
 1256 0079 0A       		.uleb128 0xa
 1257 007a 00       		.byte	0
 1258 007b 00       		.byte	0
 1259 007c 0B       		.uleb128 0xb
 1260 007d 0D       		.uleb128 0xd
 1261 007e 00       		.byte	0
 1262 007f 03       		.uleb128 0x3
 1263 0080 0E       		.uleb128 0xe
 1264 0081 3A       		.uleb128 0x3a
 1265 0082 0B       		.uleb128 0xb
 1266 0083 3B       		.uleb128 0x3b
 1267 0084 05       		.uleb128 0x5
 1268 0085 49       		.uleb128 0x49
 1269 0086 13       		.uleb128 0x13
 1270 0087 38       		.uleb128 0x38
 1271 0088 0A       		.uleb128 0xa
 1272 0089 00       		.byte	0
 1273 008a 00       		.byte	0
 1274 008b 0C       		.uleb128 0xc
ARM GAS  /tmp/cckUWzaN.s 			page 31


 1275 008c 16       		.uleb128 0x16
 1276 008d 00       		.byte	0
 1277 008e 03       		.uleb128 0x3
 1278 008f 0E       		.uleb128 0xe
 1279 0090 3A       		.uleb128 0x3a
 1280 0091 0B       		.uleb128 0xb
 1281 0092 3B       		.uleb128 0x3b
 1282 0093 05       		.uleb128 0x5
 1283 0094 49       		.uleb128 0x49
 1284 0095 13       		.uleb128 0x13
 1285 0096 00       		.byte	0
 1286 0097 00       		.byte	0
 1287 0098 0D       		.uleb128 0xd
 1288 0099 2E       		.uleb128 0x2e
 1289 009a 00       		.byte	0
 1290 009b 3F       		.uleb128 0x3f
 1291 009c 0C       		.uleb128 0xc
 1292 009d 03       		.uleb128 0x3
 1293 009e 0E       		.uleb128 0xe
 1294 009f 3A       		.uleb128 0x3a
 1295 00a0 0B       		.uleb128 0xb
 1296 00a1 3B       		.uleb128 0x3b
 1297 00a2 0B       		.uleb128 0xb
 1298 00a3 27       		.uleb128 0x27
 1299 00a4 0C       		.uleb128 0xc
 1300 00a5 11       		.uleb128 0x11
 1301 00a6 01       		.uleb128 0x1
 1302 00a7 12       		.uleb128 0x12
 1303 00a8 01       		.uleb128 0x1
 1304 00a9 40       		.uleb128 0x40
 1305 00aa 06       		.uleb128 0x6
 1306 00ab 9642     		.uleb128 0x2116
 1307 00ad 0C       		.uleb128 0xc
 1308 00ae 00       		.byte	0
 1309 00af 00       		.byte	0
 1310 00b0 0E       		.uleb128 0xe
 1311 00b1 2E       		.uleb128 0x2e
 1312 00b2 01       		.byte	0x1
 1313 00b3 3F       		.uleb128 0x3f
 1314 00b4 0C       		.uleb128 0xc
 1315 00b5 03       		.uleb128 0x3
 1316 00b6 0E       		.uleb128 0xe
 1317 00b7 3A       		.uleb128 0x3a
 1318 00b8 0B       		.uleb128 0xb
 1319 00b9 3B       		.uleb128 0x3b
 1320 00ba 0B       		.uleb128 0xb
 1321 00bb 27       		.uleb128 0x27
 1322 00bc 0C       		.uleb128 0xc
 1323 00bd 11       		.uleb128 0x11
 1324 00be 01       		.uleb128 0x1
 1325 00bf 12       		.uleb128 0x12
 1326 00c0 01       		.uleb128 0x1
 1327 00c1 40       		.uleb128 0x40
 1328 00c2 06       		.uleb128 0x6
 1329 00c3 9642     		.uleb128 0x2116
 1330 00c5 0C       		.uleb128 0xc
 1331 00c6 01       		.uleb128 0x1
ARM GAS  /tmp/cckUWzaN.s 			page 32


 1332 00c7 13       		.uleb128 0x13
 1333 00c8 00       		.byte	0
 1334 00c9 00       		.byte	0
 1335 00ca 0F       		.uleb128 0xf
 1336 00cb 34       		.uleb128 0x34
 1337 00cc 00       		.byte	0
 1338 00cd 03       		.uleb128 0x3
 1339 00ce 08       		.uleb128 0x8
 1340 00cf 3A       		.uleb128 0x3a
 1341 00d0 0B       		.uleb128 0xb
 1342 00d1 3B       		.uleb128 0x3b
 1343 00d2 0B       		.uleb128 0xb
 1344 00d3 49       		.uleb128 0x49
 1345 00d4 13       		.uleb128 0x13
 1346 00d5 02       		.uleb128 0x2
 1347 00d6 0A       		.uleb128 0xa
 1348 00d7 00       		.byte	0
 1349 00d8 00       		.byte	0
 1350 00d9 10       		.uleb128 0x10
 1351 00da 34       		.uleb128 0x34
 1352 00db 00       		.byte	0
 1353 00dc 03       		.uleb128 0x3
 1354 00dd 0E       		.uleb128 0xe
 1355 00de 3A       		.uleb128 0x3a
 1356 00df 0B       		.uleb128 0xb
 1357 00e0 3B       		.uleb128 0x3b
 1358 00e1 0B       		.uleb128 0xb
 1359 00e2 49       		.uleb128 0x49
 1360 00e3 13       		.uleb128 0x13
 1361 00e4 02       		.uleb128 0x2
 1362 00e5 0A       		.uleb128 0xa
 1363 00e6 00       		.byte	0
 1364 00e7 00       		.byte	0
 1365 00e8 11       		.uleb128 0x11
 1366 00e9 2E       		.uleb128 0x2e
 1367 00ea 01       		.byte	0x1
 1368 00eb 03       		.uleb128 0x3
 1369 00ec 0E       		.uleb128 0xe
 1370 00ed 3A       		.uleb128 0x3a
 1371 00ee 0B       		.uleb128 0xb
 1372 00ef 3B       		.uleb128 0x3b
 1373 00f0 05       		.uleb128 0x5
 1374 00f1 27       		.uleb128 0x27
 1375 00f2 0C       		.uleb128 0xc
 1376 00f3 11       		.uleb128 0x11
 1377 00f4 01       		.uleb128 0x1
 1378 00f5 12       		.uleb128 0x12
 1379 00f6 01       		.uleb128 0x1
 1380 00f7 40       		.uleb128 0x40
 1381 00f8 06       		.uleb128 0x6
 1382 00f9 9742     		.uleb128 0x2117
 1383 00fb 0C       		.uleb128 0xc
 1384 00fc 01       		.uleb128 0x1
 1385 00fd 13       		.uleb128 0x13
 1386 00fe 00       		.byte	0
 1387 00ff 00       		.byte	0
 1388 0100 12       		.uleb128 0x12
ARM GAS  /tmp/cckUWzaN.s 			page 33


 1389 0101 34       		.uleb128 0x34
 1390 0102 00       		.byte	0
 1391 0103 03       		.uleb128 0x3
 1392 0104 0E       		.uleb128 0xe
 1393 0105 3A       		.uleb128 0x3a
 1394 0106 0B       		.uleb128 0xb
 1395 0107 3B       		.uleb128 0x3b
 1396 0108 05       		.uleb128 0x5
 1397 0109 49       		.uleb128 0x49
 1398 010a 13       		.uleb128 0x13
 1399 010b 02       		.uleb128 0x2
 1400 010c 0A       		.uleb128 0xa
 1401 010d 00       		.byte	0
 1402 010e 00       		.byte	0
 1403 010f 13       		.uleb128 0x13
 1404 0110 2E       		.uleb128 0x2e
 1405 0111 00       		.byte	0
 1406 0112 3F       		.uleb128 0x3f
 1407 0113 0C       		.uleb128 0xc
 1408 0114 03       		.uleb128 0x3
 1409 0115 0E       		.uleb128 0xe
 1410 0116 3A       		.uleb128 0x3a
 1411 0117 0B       		.uleb128 0xb
 1412 0118 3B       		.uleb128 0x3b
 1413 0119 05       		.uleb128 0x5
 1414 011a 27       		.uleb128 0x27
 1415 011b 0C       		.uleb128 0xc
 1416 011c 11       		.uleb128 0x11
 1417 011d 01       		.uleb128 0x1
 1418 011e 12       		.uleb128 0x12
 1419 011f 01       		.uleb128 0x1
 1420 0120 40       		.uleb128 0x40
 1421 0121 0A       		.uleb128 0xa
 1422 0122 9742     		.uleb128 0x2117
 1423 0124 0C       		.uleb128 0xc
 1424 0125 00       		.byte	0
 1425 0126 00       		.byte	0
 1426 0127 14       		.uleb128 0x14
 1427 0128 34       		.uleb128 0x34
 1428 0129 00       		.byte	0
 1429 012a 03       		.uleb128 0x3
 1430 012b 0E       		.uleb128 0xe
 1431 012c 3A       		.uleb128 0x3a
 1432 012d 0B       		.uleb128 0xb
 1433 012e 3B       		.uleb128 0x3b
 1434 012f 0B       		.uleb128 0xb
 1435 0130 49       		.uleb128 0x49
 1436 0131 13       		.uleb128 0x13
 1437 0132 3F       		.uleb128 0x3f
 1438 0133 0C       		.uleb128 0xc
 1439 0134 02       		.uleb128 0x2
 1440 0135 0A       		.uleb128 0xa
 1441 0136 00       		.byte	0
 1442 0137 00       		.byte	0
 1443 0138 15       		.uleb128 0x15
 1444 0139 01       		.uleb128 0x1
 1445 013a 01       		.byte	0x1
ARM GAS  /tmp/cckUWzaN.s 			page 34


 1446 013b 49       		.uleb128 0x49
 1447 013c 13       		.uleb128 0x13
 1448 013d 01       		.uleb128 0x1
 1449 013e 13       		.uleb128 0x13
 1450 013f 00       		.byte	0
 1451 0140 00       		.byte	0
 1452 0141 16       		.uleb128 0x16
 1453 0142 21       		.uleb128 0x21
 1454 0143 00       		.byte	0
 1455 0144 49       		.uleb128 0x49
 1456 0145 13       		.uleb128 0x13
 1457 0146 2F       		.uleb128 0x2f
 1458 0147 0B       		.uleb128 0xb
 1459 0148 00       		.byte	0
 1460 0149 00       		.byte	0
 1461 014a 17       		.uleb128 0x17
 1462 014b 26       		.uleb128 0x26
 1463 014c 00       		.byte	0
 1464 014d 49       		.uleb128 0x49
 1465 014e 13       		.uleb128 0x13
 1466 014f 00       		.byte	0
 1467 0150 00       		.byte	0
 1468 0151 00       		.byte	0
 1469              		.section	.debug_loc,"",%progbits
 1470              	.Ldebug_loc0:
 1471              	.LLST0:
 1472 0000 00000000 		.4byte	.LFB20
 1473 0004 02000000 		.4byte	.LCFI0
 1474 0008 0200     		.2byte	0x2
 1475 000a 7D       		.byte	0x7d
 1476 000b 00       		.sleb128 0
 1477 000c 02000000 		.4byte	.LCFI0
 1478 0010 88000000 		.4byte	.LFE20
 1479 0014 0200     		.2byte	0x2
 1480 0016 7D       		.byte	0x7d
 1481 0017 08       		.sleb128 8
 1482 0018 00000000 		.4byte	0
 1483 001c 00000000 		.4byte	0
 1484              	.LLST1:
 1485 0020 00000000 		.4byte	.LFB21
 1486 0024 02000000 		.4byte	.LCFI1
 1487 0028 0200     		.2byte	0x2
 1488 002a 7D       		.byte	0x7d
 1489 002b 00       		.sleb128 0
 1490 002c 02000000 		.4byte	.LCFI1
 1491 0030 04000000 		.4byte	.LCFI2
 1492 0034 0200     		.2byte	0x2
 1493 0036 7D       		.byte	0x7d
 1494 0037 04       		.sleb128 4
 1495 0038 04000000 		.4byte	.LCFI2
 1496 003c D0000000 		.4byte	.LFE21
 1497 0040 0200     		.2byte	0x2
 1498 0042 7D       		.byte	0x7d
 1499 0043 18       		.sleb128 24
 1500 0044 00000000 		.4byte	0
 1501 0048 00000000 		.4byte	0
 1502              	.LLST2:
ARM GAS  /tmp/cckUWzaN.s 			page 35


 1503 004c 00000000 		.4byte	.LFB22
 1504 0050 02000000 		.4byte	.LCFI3
 1505 0054 0200     		.2byte	0x2
 1506 0056 7D       		.byte	0x7d
 1507 0057 00       		.sleb128 0
 1508 0058 02000000 		.4byte	.LCFI3
 1509 005c 7C010000 		.4byte	.LFE22
 1510 0060 0200     		.2byte	0x2
 1511 0062 7D       		.byte	0x7d
 1512 0063 08       		.sleb128 8
 1513 0064 00000000 		.4byte	0
 1514 0068 00000000 		.4byte	0
 1515              		.section	.debug_aranges,"",%progbits
 1516 0000 34000000 		.4byte	0x34
 1517 0004 0200     		.2byte	0x2
 1518 0006 00000000 		.4byte	.Ldebug_info0
 1519 000a 04       		.byte	0x4
 1520 000b 00       		.byte	0
 1521 000c 0000     		.2byte	0
 1522 000e 0000     		.2byte	0
 1523 0010 00000000 		.4byte	.LFB20
 1524 0014 88000000 		.4byte	.LFE20-.LFB20
 1525 0018 00000000 		.4byte	.LFB21
 1526 001c D0000000 		.4byte	.LFE21-.LFB21
 1527 0020 00000000 		.4byte	.LFB22
 1528 0024 7C010000 		.4byte	.LFE22-.LFB22
 1529 0028 00000000 		.4byte	.LFB23
 1530 002c AC000000 		.4byte	.LFE23-.LFB23
 1531 0030 00000000 		.4byte	0
 1532 0034 00000000 		.4byte	0
 1533              		.section	.debug_ranges,"",%progbits
 1534              	.Ldebug_ranges0:
 1535 0000 00000000 		.4byte	.LFB20
 1536 0004 88000000 		.4byte	.LFE20
 1537 0008 00000000 		.4byte	.LFB21
 1538 000c D0000000 		.4byte	.LFE21
 1539 0010 00000000 		.4byte	.LFB22
 1540 0014 7C010000 		.4byte	.LFE22
 1541 0018 00000000 		.4byte	.LFB23
 1542 001c AC000000 		.4byte	.LFE23
 1543 0020 00000000 		.4byte	0
 1544 0024 00000000 		.4byte	0
 1545              		.section	.debug_line,"",%progbits
 1546              	.Ldebug_line0:
 1547 0000 DB010000 		.section	.debug_str,"MS",%progbits,1
 1547      0200F600 
 1547      00000201 
 1547      FB0E0D00 
 1547      01010101 
 1548              	.LASF33:
 1549 0000 706C6C6D 		.ascii	"pllmull\000"
 1549      756C6C00 
 1550              	.LASF3:
 1551 0008 5F5F7569 		.ascii	"__uint8_t\000"
 1551      6E74385F 
 1551      7400
 1552              	.LASF36:
ARM GAS  /tmp/cckUWzaN.s 			page 36


 1553 0012 53746172 		.ascii	"StartUpCounter\000"
 1553      74557043 
 1553      6F756E74 
 1553      657200
 1554              	.LASF22:
 1555 0021 43464752 		.ascii	"CFGR\000"
 1555      00
 1556              	.LASF34:
 1557 0026 706C6C73 		.ascii	"pllsource\000"
 1557      6F757263 
 1557      6500
 1558              	.LASF29:
 1559 0030 41484252 		.ascii	"AHBRSTR\000"
 1559      53545200 
 1560              	.LASF37:
 1561 0038 48534553 		.ascii	"HSEStatus\000"
 1561      74617475 
 1561      7300
 1562              	.LASF21:
 1563 0042 464C4153 		.ascii	"FLASH_TypeDef\000"
 1563      485F5479 
 1563      70654465 
 1563      6600
 1564              	.LASF25:
 1565 0050 41484245 		.ascii	"AHBENR\000"
 1565      4E5200
 1566              	.LASF39:
 1567 0057 53657453 		.ascii	"SetSysClockInternalRC\000"
 1567      7973436C 
 1567      6F636B49 
 1567      6E746572 
 1567      6E616C52 
 1568              	.LASF20:
 1569 006d 57525052 		.ascii	"WRPR\000"
 1569      00
 1570              	.LASF30:
 1571 0072 43464752 		.ascii	"CFGR2\000"
 1571      3200
 1572              	.LASF26:
 1573 0078 41504232 		.ascii	"APB2ENR\000"
 1573      454E5200 
 1574              	.LASF41:
 1575 0080 41484250 		.ascii	"AHBPrescTable\000"
 1575      72657363 
 1575      5461626C 
 1575      6500
 1576              	.LASF43:
 1577 008e 636D7369 		.ascii	"cmsis_boot/system_stm32f0xx.c\000"
 1577      735F626F 
 1577      6F742F73 
 1577      79737465 
 1577      6D5F7374 
 1578              	.LASF31:
 1579 00ac 43464752 		.ascii	"CFGR3\000"
 1579      3300
 1580              	.LASF5:
 1581 00b2 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  /tmp/cckUWzaN.s 			page 37


 1581      7420756E 
 1581      7369676E 
 1581      65642069 
 1581      6E7400
 1582              	.LASF18:
 1583 00c5 4F50544B 		.ascii	"OPTKEYR\000"
 1583      45595200 
 1584              	.LASF1:
 1585 00cd 756E7369 		.ascii	"unsigned char\000"
 1585      676E6564 
 1585      20636861 
 1585      7200
 1586              	.LASF35:
 1587 00db 70726564 		.ascii	"prediv1factor\000"
 1587      69763166 
 1587      6163746F 
 1587      7200
 1588              	.LASF8:
 1589 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 1589      20756E73 
 1589      69676E65 
 1589      6420696E 
 1589      7400
 1590              	.LASF19:
 1591 00fb 52455345 		.ascii	"RESERVED\000"
 1591      52564544 
 1591      00
 1592              	.LASF24:
 1593 0104 41504231 		.ascii	"APB1RSTR\000"
 1593      52535452 
 1593      00
 1594              	.LASF7:
 1595 010d 5F5F7569 		.ascii	"__uint32_t\000"
 1595      6E743332 
 1595      5F7400
 1596              	.LASF44:
 1597 0118 2F686F6D 		.ascii	"/home/med/Documents/stm32_proj/atom_planolux_redond"
 1597      652F6D65 
 1597      642F446F 
 1597      63756D65 
 1597      6E74732F 
 1598 014b 6100     		.ascii	"a\000"
 1599              	.LASF27:
 1600 014d 41504231 		.ascii	"APB1ENR\000"
 1600      454E5200 
 1601              	.LASF23:
 1602 0155 41504232 		.ascii	"APB2RSTR\000"
 1602      52535452 
 1602      00
 1603              	.LASF11:
 1604 015e 756E7369 		.ascii	"unsigned int\000"
 1604      676E6564 
 1604      20696E74 
 1604      00
 1605              	.LASF42:
 1606 016b 474E5520 		.ascii	"GNU C11 5.2.1 20151202 (release) [ARM/embedded-5-br"
 1606      43313120 
ARM GAS  /tmp/cckUWzaN.s 			page 38


 1606      352E322E 
 1606      31203230 
 1606      31353132 
 1607 019e 616E6368 		.ascii	"anch revision 231848] -mcpu=cortex-m0 -mthumb -g -g"
 1607      20726576 
 1607      6973696F 
 1607      6E203233 
 1607      31383438 
 1608 01d1 64776172 		.ascii	"dwarf-2 -O0 -fomit-frame-pointer -fdata-sections -f"
 1608      662D3220 
 1608      2D4F3020 
 1608      2D666F6D 
 1608      69742D66 
 1609 0204 66756E63 		.ascii	"function-sections\000"
 1609      74696F6E 
 1609      2D736563 
 1609      74696F6E 
 1609      7300
 1610              	.LASF10:
 1611 0216 6C6F6E67 		.ascii	"long long unsigned int\000"
 1611      206C6F6E 
 1611      6720756E 
 1611      7369676E 
 1611      65642069 
 1612              	.LASF12:
 1613 022d 75696E74 		.ascii	"uint8_t\000"
 1613      385F7400 
 1614              	.LASF46:
 1615 0235 53657453 		.ascii	"SetSysClock\000"
 1615      7973436C 
 1615      6F636B00 
 1616              	.LASF28:
 1617 0241 42444352 		.ascii	"BDCR\000"
 1617      00
 1618              	.LASF38:
 1619 0246 53797374 		.ascii	"SystemInit\000"
 1619      656D496E 
 1619      697400
 1620              	.LASF15:
 1621 0251 73697A65 		.ascii	"sizetype\000"
 1621      74797065 
 1621      00
 1622              	.LASF9:
 1623 025a 6C6F6E67 		.ascii	"long long int\000"
 1623      206C6F6E 
 1623      6720696E 
 1623      7400
 1624              	.LASF40:
 1625 0268 53797374 		.ascii	"SystemCoreClock\000"
 1625      656D436F 
 1625      7265436C 
 1625      6F636B00 
 1626              	.LASF45:
 1627 0278 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1627      656D436F 
 1627      7265436C 
 1627      6F636B55 
ARM GAS  /tmp/cckUWzaN.s 			page 39


 1627      70646174 
 1628              	.LASF2:
 1629 028e 73686F72 		.ascii	"short int\000"
 1629      7420696E 
 1629      7400
 1630              	.LASF4:
 1631 0298 5F5F7569 		.ascii	"__uint16_t\000"
 1631      6E743136 
 1631      5F7400
 1632              	.LASF13:
 1633 02a3 75696E74 		.ascii	"uint16_t\000"
 1633      31365F74 
 1633      00
 1634              	.LASF32:
 1635 02ac 5243435F 		.ascii	"RCC_TypeDef\000"
 1635      54797065 
 1635      44656600 
 1636              	.LASF14:
 1637 02b8 75696E74 		.ascii	"uint32_t\000"
 1637      33325F74 
 1637      00
 1638              	.LASF6:
 1639 02c1 6C6F6E67 		.ascii	"long int\000"
 1639      20696E74 
 1639      00
 1640              	.LASF17:
 1641 02ca 4B455952 		.ascii	"KEYR\000"
 1641      00
 1642              	.LASF0:
 1643 02cf 7369676E 		.ascii	"signed char\000"
 1643      65642063 
 1643      68617200 
 1644              	.LASF16:
 1645 02db 52455345 		.ascii	"RESET\000"
 1645      5400
 1646              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.2.1 20151202 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cckUWzaN.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f0xx.c
     /tmp/cckUWzaN.s:59     .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cckUWzaN.s:56     .data.SystemCoreClock:00000000 $d
     /tmp/cckUWzaN.s:66     .data.AHBPrescTable:00000000 AHBPrescTable
     /tmp/cckUWzaN.s:63     .data.AHBPrescTable:00000000 $d
     /tmp/cckUWzaN.s:84     .text.SystemInit:00000000 $t
     /tmp/cckUWzaN.s:89     .text.SystemInit:00000000 SystemInit
     /tmp/cckUWzaN.s:583    .text.SetSysClockInternalRC:00000000 SetSysClockInternalRC
     /tmp/cckUWzaN.s:168    .text.SystemInit:00000070 $d
     /tmp/cckUWzaN.s:179    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/cckUWzaN.s:184    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/cckUWzaN.s:316    .text.SystemCoreClockUpdate:000000bc $d
     /tmp/cckUWzaN.s:325    .text.SetSysClock:00000000 $t
     /tmp/cckUWzaN.s:329    .text.SetSysClock:00000000 SetSysClock
     /tmp/cckUWzaN.s:569    .text.SetSysClock:00000168 $d
     /tmp/cckUWzaN.s:578    .text.SetSysClockInternalRC:00000000 $t
     /tmp/cckUWzaN.s:688    .text.SetSysClockInternalRC:0000009c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
